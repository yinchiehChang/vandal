Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x79]
---
0x41 DUP1
0x42 PUSH4 0x495c9588
0x47 EQ
0x48 PUSH2 0x79
0x4b JUMPI
---
0x42: V15 = 0x495c9588
0x47: V16 = EQ 0x495c9588 V11
0x48: V17 = 0x79
0x4b: JUMPI 0x79 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xa2]
---
0x4c DUP1
0x4d PUSH4 0xb4a99a4e
0x52 EQ
0x53 PUSH2 0xa2
0x56 JUMPI
---
0x4d: V18 = 0xb4a99a4e
0x52: V19 = EQ 0xb4a99a4e V11
0x53: V20 = 0xa2
0x56: JUMPI 0xa2 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xf7]
---
0x57 DUP1
0x58 PUSH4 0xba21d62a
0x5d EQ
0x5e PUSH2 0xf7
0x61 JUMPI
---
0x58: V21 = 0xba21d62a
0x5d: V22 = EQ 0xba21d62a V11
0x5e: V23 = 0xf7
0x61: JUMPI 0xf7 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x168]
---
0x62 DUP1
0x63 PUSH4 0xbe040fb0
0x68 EQ
0x69 PUSH2 0x168
0x6c JUMPI
---
0x63: V24 = 0xbe040fb0
0x68: V25 = EQ 0xbe040fb0 V11
0x69: V26 = 0x168
0x6c: JUMPI 0x168 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0xd]
Successors: [0x172]
---
0x6f JUMPDEST
0x70 PUSH2 0x77
0x73 PUSH2 0x172
0x76 JUMP
---
0x6f: JUMPDEST 
0x70: V27 = 0x77
0x73: V28 = 0x172
0x76: JUMP 0x172
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x2e2]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x7f]
---
Predecessors: [0x41]
Successors: [0x80, 0x84]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b ISZERO
0x7c PUSH2 0x84
0x7f JUMPI
---
0x79: JUMPDEST 
0x7a: V29 = CALLVALUE
0x7b: V30 = ISZERO V29
0x7c: V31 = 0x84
0x7f: JUMPI 0x84 V30
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x79]
Successors: []
---
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x80: V32 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x8b]
---
Predecessors: [0x79]
Successors: [0x2e4]
---
0x84 JUMPDEST
0x85 PUSH2 0x8c
0x88 PUSH2 0x2e4
0x8b JUMP
---
0x84: JUMPDEST 
0x85: V33 = 0x8c
0x88: V34 = 0x2e4
0x8b: JUMP 0x2e4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8c]
Exit stack: [V11, 0x8c]

================================

Block 0x8c
[0x8c:0xa1]
---
Predecessors: [0x2e4]
Successors: []
---
0x8c JUMPDEST
0x8d PUSH1 0x40
0x8f MLOAD
0x90 DUP1
0x91 DUP3
0x92 DUP2
0x93 MSTORE
0x94 PUSH1 0x20
0x96 ADD
0x97 SWAP2
0x98 POP
0x99 POP
0x9a PUSH1 0x40
0x9c MLOAD
0x9d DUP1
0x9e SWAP2
0x9f SUB
0xa0 SWAP1
0xa1 RETURN
---
0x8c: JUMPDEST 
0x8d: V35 = 0x40
0x8f: V36 = M[0x40]
0x93: M[V36] = 0xddd2a1dd7429000
0x94: V37 = 0x20
0x96: V38 = ADD 0x20 V36
0x9a: V39 = 0x40
0x9c: V40 = M[0x40]
0x9f: V41 = SUB V38 V40
0xa1: RETURN V40 V41
---
Entry stack: [V11, 0x8c, 0xddd2a1dd7429000]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8c]

================================

Block 0xa2
[0xa2:0xa8]
---
Predecessors: [0x4c]
Successors: [0xa9, 0xad]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 ISZERO
0xa5 PUSH2 0xad
0xa8 JUMPI
---
0xa2: JUMPDEST 
0xa3: V42 = CALLVALUE
0xa4: V43 = ISZERO V42
0xa5: V44 = 0xad
0xa8: JUMPI 0xad V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa9
[0xa9:0xac]
---
Predecessors: [0xa2]
Successors: []
---
0xa9 PUSH1 0x0
0xab DUP1
0xac REVERT
---
0xa9: V45 = 0x0
0xac: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xad
[0xad:0xb4]
---
Predecessors: [0xa2]
Successors: [0x2f0]
---
0xad JUMPDEST
0xae PUSH2 0xb5
0xb1 PUSH2 0x2f0
0xb4 JUMP
---
0xad: JUMPDEST 
0xae: V46 = 0xb5
0xb1: V47 = 0x2f0
0xb4: JUMP 0x2f0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb5]
Exit stack: [V11, 0xb5]

================================

Block 0xb5
[0xb5:0xf6]
---
Predecessors: [0x2f0]
Successors: []
---
0xb5 JUMPDEST
0xb6 PUSH1 0x40
0xb8 MLOAD
0xb9 DUP1
0xba DUP3
0xbb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd0 AND
0xd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe6 AND
0xe7 DUP2
0xe8 MSTORE
0xe9 PUSH1 0x20
0xeb ADD
0xec SWAP2
0xed POP
0xee POP
0xef PUSH1 0x40
0xf1 MLOAD
0xf2 DUP1
0xf3 SWAP2
0xf4 SUB
0xf5 SWAP1
0xf6 RETURN
---
0xb5: JUMPDEST 
0xb6: V48 = 0x40
0xb8: V49 = M[0x40]
0xbb: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0xd0: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0xd1: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xe6: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xe8: M[V49] = V53
0xe9: V54 = 0x20
0xeb: V55 = ADD 0x20 V49
0xef: V56 = 0x40
0xf1: V57 = M[0x40]
0xf4: V58 = SUB V55 V57
0xf6: RETURN V57 V58
---
Entry stack: [V11, 0xb5, V163]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb5]

================================

Block 0xf7
[0xf7:0x165]
---
Predecessors: [0x57]
Successors: [0x315]
---
0xf7 JUMPDEST
0xf8 PUSH2 0x166
0xfb PUSH1 0x4
0xfd DUP1
0xfe DUP1
0xff CALLDATALOAD
0x100 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115 AND
0x116 SWAP1
0x117 PUSH1 0x20
0x119 ADD
0x11a SWAP1
0x11b SWAP2
0x11c SWAP1
0x11d DUP1
0x11e CALLDATALOAD
0x11f SWAP1
0x120 PUSH1 0x20
0x122 ADD
0x123 SWAP1
0x124 DUP3
0x125 ADD
0x126 DUP1
0x127 CALLDATALOAD
0x128 SWAP1
0x129 PUSH1 0x20
0x12b ADD
0x12c SWAP1
0x12d DUP1
0x12e DUP1
0x12f PUSH1 0x1f
0x131 ADD
0x132 PUSH1 0x20
0x134 DUP1
0x135 SWAP2
0x136 DIV
0x137 MUL
0x138 PUSH1 0x20
0x13a ADD
0x13b PUSH1 0x40
0x13d MLOAD
0x13e SWAP1
0x13f DUP2
0x140 ADD
0x141 PUSH1 0x40
0x143 MSTORE
0x144 DUP1
0x145 SWAP4
0x146 SWAP3
0x147 SWAP2
0x148 SWAP1
0x149 DUP2
0x14a DUP2
0x14b MSTORE
0x14c PUSH1 0x20
0x14e ADD
0x14f DUP4
0x150 DUP4
0x151 DUP1
0x152 DUP3
0x153 DUP5
0x154 CALLDATACOPY
0x155 DUP3
0x156 ADD
0x157 SWAP2
0x158 POP
0x159 POP
0x15a POP
0x15b POP
0x15c POP
0x15d POP
0x15e SWAP2
0x15f SWAP1
0x160 POP
0x161 POP
0x162 PUSH2 0x315
0x165 JUMP
---
0xf7: JUMPDEST 
0xf8: V59 = 0x166
0xfb: V60 = 0x4
0xff: V61 = CALLDATALOAD 0x4
0x100: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x115: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x117: V64 = 0x20
0x119: V65 = ADD 0x20 0x4
0x11e: V66 = CALLDATALOAD 0x24
0x120: V67 = 0x20
0x122: V68 = ADD 0x20 0x24
0x125: V69 = ADD 0x4 V66
0x127: V70 = CALLDATALOAD V69
0x129: V71 = 0x20
0x12b: V72 = ADD 0x20 V69
0x12f: V73 = 0x1f
0x131: V74 = ADD 0x1f V70
0x132: V75 = 0x20
0x136: V76 = DIV V74 0x20
0x137: V77 = MUL V76 0x20
0x138: V78 = 0x20
0x13a: V79 = ADD 0x20 V77
0x13b: V80 = 0x40
0x13d: V81 = M[0x40]
0x140: V82 = ADD V81 V79
0x141: V83 = 0x40
0x143: M[0x40] = V82
0x14b: M[V81] = V70
0x14c: V84 = 0x20
0x14e: V85 = ADD 0x20 V81
0x154: CALLDATACOPY V85 V72 V70
0x156: V86 = ADD V85 V70
0x162: V87 = 0x315
0x165: JUMP 0x315
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x166, V63, V81]
Exit stack: [V11, 0x166, V63, V81]

================================

Block 0x166
[0x166:0x167]
---
Predecessors: [0x3e3]
Successors: []
---
0x166 JUMPDEST
0x167 STOP
---
0x166: JUMPDEST 
0x167: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x168
[0x168:0x16f]
---
Predecessors: [0x62]
Successors: [0x401]
---
0x168 JUMPDEST
0x169 PUSH2 0x170
0x16c PUSH2 0x401
0x16f JUMP
---
0x168: JUMPDEST 
0x169: V88 = 0x170
0x16c: V89 = 0x401
0x16f: JUMP 0x401
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x170]
Exit stack: [V11, 0x170]

================================

Block 0x170
[0x170:0x171]
---
Predecessors: [0x4e2]
Successors: []
---
0x170 JUMPDEST
0x171 STOP
---
0x170: JUMPDEST 
0x171: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x172
[0x172:0x1ba]
---
Predecessors: [0x6f]
Successors: [0x1bb, 0x20f]
---
0x172 JUMPDEST
0x173 PUSH20 0x7a617c2b05d2a74ff9babc9d81e5225c1e01004b
0x188 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19d AND
0x19e CALLER
0x19f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b4 AND
0x1b5 EQ
0x1b6 ISZERO
0x1b7 PUSH2 0x20f
0x1ba JUMPI
---
0x172: JUMPDEST 
0x173: V90 = 0x7a617c2b05d2a74ff9babc9d81e5225c1e01004b
0x188: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x19d: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x7a617c2b05d2a74ff9babc9d81e5225c1e01004b
0x19e: V93 = CALLER
0x19f: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1b5: V96 = EQ V95 0x7a617c2b05d2a74ff9babc9d81e5225c1e01004b
0x1b6: V97 = ISZERO V96
0x1b7: V98 = 0x20f
0x1ba: JUMPI 0x20f V97
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x1bb
[0x1bb:0x20e]
---
Predecessors: [0x172]
Successors: [0x20f]
---
0x1bb PUSH20 0x7a617c2b05d2a74ff9babc9d81e5225c1e01004b
0x1d0 PUSH1 0x0
0x1d2 DUP1
0x1d3 PUSH2 0x100
0x1d6 EXP
0x1d7 DUP2
0x1d8 SLOAD
0x1d9 DUP2
0x1da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ef MUL
0x1f0 NOT
0x1f1 AND
0x1f2 SWAP1
0x1f3 DUP4
0x1f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x209 AND
0x20a MUL
0x20b OR
0x20c SWAP1
0x20d SSTORE
0x20e POP
---
0x1bb: V99 = 0x7a617c2b05d2a74ff9babc9d81e5225c1e01004b
0x1d0: V100 = 0x0
0x1d3: V101 = 0x100
0x1d6: V102 = EXP 0x100 0x0
0x1d8: V103 = S[0x0]
0x1da: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ef: V105 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1f0: V106 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: V107 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V103
0x1f4: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x209: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x7a617c2b05d2a74ff9babc9d81e5225c1e01004b
0x20a: V110 = MUL 0x7a617c2b05d2a74ff9babc9d81e5225c1e01004b 0x1
0x20b: V111 = OR 0x7a617c2b05d2a74ff9babc9d81e5225c1e01004b V107
0x20d: S[0x0] = V111
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x20f
[0x20f:0x265]
---
Predecessors: [0x172, 0x1bb]
Successors: [0x266, 0x26a]
---
0x20f JUMPDEST
0x210 PUSH1 0x0
0x212 DUP1
0x213 SWAP1
0x214 SLOAD
0x215 SWAP1
0x216 PUSH2 0x100
0x219 EXP
0x21a SWAP1
0x21b DIV
0x21c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x231 AND
0x232 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x247 AND
0x248 CALLER
0x249 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25e AND
0x25f EQ
0x260 ISZERO
0x261 ISZERO
0x262 PUSH2 0x26a
0x265 JUMPI
---
0x20f: JUMPDEST 
0x210: V112 = 0x0
0x214: V113 = S[0x0]
0x216: V114 = 0x100
0x219: V115 = EXP 0x100 0x0
0x21b: V116 = DIV V113 0x1
0x21c: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x231: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x232: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x247: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x248: V121 = CALLER
0x249: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x25e: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x25f: V124 = EQ V123 V120
0x260: V125 = ISZERO V124
0x261: V126 = ISZERO V125
0x262: V127 = 0x26a
0x265: JUMPI 0x26a V126
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x266
[0x266:0x269]
---
Predecessors: [0x20f]
Successors: []
---
0x266 PUSH1 0x0
0x268 DUP1
0x269 REVERT
---
0x266: V128 = 0x0
0x269: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x26a
[0x26a:0x2dd]
---
Predecessors: [0x20f]
Successors: [0x2de, 0x2e2]
---
0x26a JUMPDEST
0x26b PUSH1 0x0
0x26d DUP1
0x26e SWAP1
0x26f SLOAD
0x270 SWAP1
0x271 PUSH2 0x100
0x274 EXP
0x275 SWAP1
0x276 DIV
0x277 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28c AND
0x28d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a2 AND
0x2a3 PUSH2 0x8fc
0x2a6 ADDRESS
0x2a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bc AND
0x2bd BALANCE
0x2be SWAP1
0x2bf DUP2
0x2c0 ISZERO
0x2c1 MUL
0x2c2 SWAP1
0x2c3 PUSH1 0x40
0x2c5 MLOAD
0x2c6 PUSH1 0x0
0x2c8 PUSH1 0x40
0x2ca MLOAD
0x2cb DUP1
0x2cc DUP4
0x2cd SUB
0x2ce DUP2
0x2cf DUP6
0x2d0 DUP9
0x2d1 DUP9
0x2d2 CALL
0x2d3 SWAP4
0x2d4 POP
0x2d5 POP
0x2d6 POP
0x2d7 POP
0x2d8 ISZERO
0x2d9 ISZERO
0x2da PUSH2 0x2e2
0x2dd JUMPI
---
0x26a: JUMPDEST 
0x26b: V129 = 0x0
0x26f: V130 = S[0x0]
0x271: V131 = 0x100
0x274: V132 = EXP 0x100 0x0
0x276: V133 = DIV V130 0x1
0x277: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x28c: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x28d: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a2: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x2a3: V138 = 0x8fc
0x2a6: V139 = ADDRESS
0x2a7: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bc: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x2bd: V142 = BALANCE V141
0x2c0: V143 = ISZERO V142
0x2c1: V144 = MUL V143 0x8fc
0x2c3: V145 = 0x40
0x2c5: V146 = M[0x40]
0x2c6: V147 = 0x0
0x2c8: V148 = 0x40
0x2ca: V149 = M[0x40]
0x2cd: V150 = SUB V146 V149
0x2d2: V151 = CALL V144 V137 V142 V149 V150 V149 0x0
0x2d8: V152 = ISZERO V151
0x2d9: V153 = ISZERO V152
0x2da: V154 = 0x2e2
0x2dd: JUMPI 0x2e2 V153
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x2de
[0x2de:0x2e1]
---
Predecessors: [0x26a]
Successors: []
---
0x2de PUSH1 0x0
0x2e0 DUP1
0x2e1 REVERT
---
0x2de: V155 = 0x0
0x2e1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x2e2
[0x2e2:0x2e3]
---
Predecessors: [0x26a]
Successors: [0x77]
---
0x2e2 JUMPDEST
0x2e3 JUMP
---
0x2e2: JUMPDEST 
0x2e3: JUMP 0x77
---
Entry stack: [V11, 0x77]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2e4
[0x2e4:0x2ef]
---
Predecessors: [0x84]
Successors: [0x8c]
---
0x2e4 JUMPDEST
0x2e5 PUSH8 0xddd2a1dd7429000
0x2ee DUP2
0x2ef JUMP
---
0x2e4: JUMPDEST 
0x2e5: V156 = 0xddd2a1dd7429000
0x2ef: JUMP 0x8c
---
Entry stack: [V11, 0x8c]
Stack pops: 1
Stack additions: [S0, 0xddd2a1dd7429000]
Exit stack: [V11, 0x8c, 0xddd2a1dd7429000]

================================

Block 0x2f0
[0x2f0:0x314]
---
Predecessors: [0xad]
Successors: [0xb5]
---
0x2f0 JUMPDEST
0x2f1 PUSH1 0x0
0x2f3 DUP1
0x2f4 SWAP1
0x2f5 SLOAD
0x2f6 SWAP1
0x2f7 PUSH2 0x100
0x2fa EXP
0x2fb SWAP1
0x2fc DIV
0x2fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x312 AND
0x313 DUP2
0x314 JUMP
---
0x2f0: JUMPDEST 
0x2f1: V157 = 0x0
0x2f5: V158 = S[0x0]
0x2f7: V159 = 0x100
0x2fa: V160 = EXP 0x100 0x0
0x2fc: V161 = DIV V158 0x1
0x2fd: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x312: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x314: JUMP 0xb5
---
Entry stack: [V11, 0xb5]
Stack pops: 1
Stack additions: [S0, V163]
Exit stack: [V11, 0xb5, V163]

================================

Block 0x315
[0x315:0x36b]
---
Predecessors: [0xf7]
Successors: [0x36c, 0x370]
---
0x315 JUMPDEST
0x316 PUSH1 0x0
0x318 DUP1
0x319 SWAP1
0x31a SLOAD
0x31b SWAP1
0x31c PUSH2 0x100
0x31f EXP
0x320 SWAP1
0x321 DIV
0x322 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x337 AND
0x338 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34d AND
0x34e CALLER
0x34f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x364 AND
0x365 EQ
0x366 ISZERO
0x367 ISZERO
0x368 PUSH2 0x370
0x36b JUMPI
---
0x315: JUMPDEST 
0x316: V164 = 0x0
0x31a: V165 = S[0x0]
0x31c: V166 = 0x100
0x31f: V167 = EXP 0x100 0x0
0x321: V168 = DIV V165 0x1
0x322: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x337: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x338: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x34d: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x34e: V173 = CALLER
0x34f: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x364: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x365: V176 = EQ V175 V172
0x366: V177 = ISZERO V176
0x367: V178 = ISZERO V177
0x368: V179 = 0x370
0x36b: JUMPI 0x370 V178
---
Entry stack: [V11, 0x166, V63, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x166, V63, V81]

================================

Block 0x36c
[0x36c:0x36f]
---
Predecessors: [0x315]
Successors: []
---
0x36c PUSH1 0x0
0x36e DUP1
0x36f REVERT
---
0x36c: V180 = 0x0
0x36f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x166, V63, V81]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x166, V63, V81]

================================

Block 0x370
[0x370:0x39a]
---
Predecessors: [0x315]
Successors: [0x39b]
---
0x370 JUMPDEST
0x371 DUP2
0x372 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x387 AND
0x388 CALLVALUE
0x389 DUP3
0x38a PUSH1 0x40
0x38c MLOAD
0x38d DUP1
0x38e DUP3
0x38f DUP1
0x390 MLOAD
0x391 SWAP1
0x392 PUSH1 0x20
0x394 ADD
0x395 SWAP1
0x396 DUP1
0x397 DUP4
0x398 DUP4
0x399 PUSH1 0x0
---
0x370: JUMPDEST 
0x372: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x387: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x388: V183 = CALLVALUE
0x38a: V184 = 0x40
0x38c: V185 = M[0x40]
0x390: V186 = M[V81]
0x392: V187 = 0x20
0x394: V188 = ADD 0x20 V81
0x399: V189 = 0x0
---
Entry stack: [V11, 0x166, V63, V81]
Stack pops: 2
Stack additions: [S1, S0, V182, V183, S0, V185, V185, V188, V186, V186, V185, V188, 0x0]
Exit stack: [V11, 0x166, V63, V81, V182, V183, V81, V185, V185, V188, V186, V186, V185, V188, 0x0]

================================

Block 0x39b
[0x39b:0x3a3]
---
Predecessors: [0x370, 0x3a4]
Successors: [0x3a4, 0x3b6]
---
0x39b JUMPDEST
0x39c DUP4
0x39d DUP2
0x39e LT
0x39f ISZERO
0x3a0 PUSH2 0x3b6
0x3a3 JUMPI
---
0x39b: JUMPDEST 
0x39e: V190 = LT S0 V186
0x39f: V191 = ISZERO V190
0x3a0: V192 = 0x3b6
0x3a3: JUMPI 0x3b6 V191
---
Entry stack: [V11, 0x166, V63, V81, V182, V183, V81, V185, V185, V188, V186, V186, V185, V188, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x166, V63, V81, V182, V183, V81, V185, V185, V188, V186, V186, V185, V188, S0]

================================

Block 0x3a4
[0x3a4:0x3b5]
---
Predecessors: [0x39b]
Successors: [0x39b]
---
0x3a4 DUP1
0x3a5 DUP3
0x3a6 ADD
0x3a7 MLOAD
0x3a8 DUP2
0x3a9 DUP5
0x3aa ADD
0x3ab MSTORE
0x3ac PUSH1 0x20
0x3ae DUP2
0x3af ADD
0x3b0 SWAP1
0x3b1 POP
0x3b2 PUSH2 0x39b
0x3b5 JUMP
---
0x3a6: V193 = ADD V188 S0
0x3a7: V194 = M[V193]
0x3aa: V195 = ADD V185 S0
0x3ab: M[V195] = V194
0x3ac: V196 = 0x20
0x3af: V197 = ADD S0 0x20
0x3b2: V198 = 0x39b
0x3b5: JUMP 0x39b
---
Entry stack: [V11, 0x166, V63, V81, V182, V183, V81, V185, V185, V188, V186, V186, V185, V188, S0]
Stack pops: 3
Stack additions: [S2, S1, V197]
Exit stack: [V11, 0x166, V63, V81, V182, V183, V81, V185, V185, V188, V186, V186, V185, V188, V197]

================================

Block 0x3b6
[0x3b6:0x3c9]
---
Predecessors: [0x39b]
Successors: [0x3ca, 0x3e3]
---
0x3b6 JUMPDEST
0x3b7 POP
0x3b8 POP
0x3b9 POP
0x3ba POP
0x3bb SWAP1
0x3bc POP
0x3bd SWAP1
0x3be DUP2
0x3bf ADD
0x3c0 SWAP1
0x3c1 PUSH1 0x1f
0x3c3 AND
0x3c4 DUP1
0x3c5 ISZERO
0x3c6 PUSH2 0x3e3
0x3c9 JUMPI
---
0x3b6: JUMPDEST 
0x3bf: V199 = ADD V186 V185
0x3c1: V200 = 0x1f
0x3c3: V201 = AND 0x1f V186
0x3c5: V202 = ISZERO V201
0x3c6: V203 = 0x3e3
0x3c9: JUMPI 0x3e3 V202
---
Entry stack: [V11, 0x166, V63, V81, V182, V183, V81, V185, V185, V188, V186, V186, V185, V188, S0]
Stack pops: 7
Stack additions: [V199, V201]
Exit stack: [V11, 0x166, V63, V81, V182, V183, V81, V185, V199, V201]

================================

Block 0x3ca
[0x3ca:0x3e2]
---
Predecessors: [0x3b6]
Successors: [0x3e3]
---
0x3ca DUP1
0x3cb DUP3
0x3cc SUB
0x3cd DUP1
0x3ce MLOAD
0x3cf PUSH1 0x1
0x3d1 DUP4
0x3d2 PUSH1 0x20
0x3d4 SUB
0x3d5 PUSH2 0x100
0x3d8 EXP
0x3d9 SUB
0x3da NOT
0x3db AND
0x3dc DUP2
0x3dd MSTORE
0x3de PUSH1 0x20
0x3e0 ADD
0x3e1 SWAP2
0x3e2 POP
---
0x3cc: V204 = SUB V199 V201
0x3ce: V205 = M[V204]
0x3cf: V206 = 0x1
0x3d2: V207 = 0x20
0x3d4: V208 = SUB 0x20 V201
0x3d5: V209 = 0x100
0x3d8: V210 = EXP 0x100 V208
0x3d9: V211 = SUB V210 0x1
0x3da: V212 = NOT V211
0x3db: V213 = AND V212 V205
0x3dd: M[V204] = V213
0x3de: V214 = 0x20
0x3e0: V215 = ADD 0x20 V204
---
Entry stack: [V11, 0x166, V63, V81, V182, V183, V81, V185, V199, V201]
Stack pops: 2
Stack additions: [V215, S0]
Exit stack: [V11, 0x166, V63, V81, V182, V183, V81, V185, V215, V201]

================================

Block 0x3e3
[0x3e3:0x400]
---
Predecessors: [0x3b6, 0x3ca]
Successors: [0x166]
---
0x3e3 JUMPDEST
0x3e4 POP
0x3e5 SWAP2
0x3e6 POP
0x3e7 POP
0x3e8 PUSH1 0x0
0x3ea PUSH1 0x40
0x3ec MLOAD
0x3ed DUP1
0x3ee DUP4
0x3ef SUB
0x3f0 DUP2
0x3f1 DUP6
0x3f2 DUP8
0x3f3 PUSH2 0x8796
0x3f6 GAS
0x3f7 SUB
0x3f8 CALL
0x3f9 SWAP3
0x3fa POP
0x3fb POP
0x3fc POP
0x3fd POP
0x3fe POP
0x3ff POP
0x400 JUMP
---
0x3e3: JUMPDEST 
0x3e8: V216 = 0x0
0x3ea: V217 = 0x40
0x3ec: V218 = M[0x40]
0x3ef: V219 = SUB S1 V218
0x3f3: V220 = 0x8796
0x3f6: V221 = GAS
0x3f7: V222 = SUB V221 0x8796
0x3f8: V223 = CALL V222 V182 V183 V218 V219 V218 0x0
0x400: JUMP 0x166
---
Entry stack: [V11, 0x166, V63, V81, V182, V183, V81, V185, S1, V201]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0x401
[0x401:0x412]
---
Predecessors: [0x168]
Successors: [0x413, 0x4e2]
---
0x401 JUMPDEST
0x402 PUSH8 0xddd2a1dd7429000
0x40b CALLVALUE
0x40c LT
0x40d ISZERO
0x40e ISZERO
0x40f PUSH2 0x4e2
0x412 JUMPI
---
0x401: JUMPDEST 
0x402: V224 = 0xddd2a1dd7429000
0x40b: V225 = CALLVALUE
0x40c: V226 = LT V225 0xddd2a1dd7429000
0x40d: V227 = ISZERO V226
0x40e: V228 = ISZERO V227
0x40f: V229 = 0x4e2
0x412: JUMPI 0x4e2 V228
---
Entry stack: [V11, 0x170]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x170]

================================

Block 0x413
[0x413:0x485]
---
Predecessors: [0x401]
Successors: [0x486, 0x48a]
---
0x413 PUSH1 0x0
0x415 DUP1
0x416 SWAP1
0x417 SLOAD
0x418 SWAP1
0x419 PUSH2 0x100
0x41c EXP
0x41d SWAP1
0x41e DIV
0x41f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x434 AND
0x435 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44a AND
0x44b PUSH2 0x8fc
0x44e ADDRESS
0x44f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x464 AND
0x465 BALANCE
0x466 SWAP1
0x467 DUP2
0x468 ISZERO
0x469 MUL
0x46a SWAP1
0x46b PUSH1 0x40
0x46d MLOAD
0x46e PUSH1 0x0
0x470 PUSH1 0x40
0x472 MLOAD
0x473 DUP1
0x474 DUP4
0x475 SUB
0x476 DUP2
0x477 DUP6
0x478 DUP9
0x479 DUP9
0x47a CALL
0x47b SWAP4
0x47c POP
0x47d POP
0x47e POP
0x47f POP
0x480 ISZERO
0x481 ISZERO
0x482 PUSH2 0x48a
0x485 JUMPI
---
0x413: V230 = 0x0
0x417: V231 = S[0x0]
0x419: V232 = 0x100
0x41c: V233 = EXP 0x100 0x0
0x41e: V234 = DIV V231 0x1
0x41f: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x434: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x435: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x44a: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x44b: V239 = 0x8fc
0x44e: V240 = ADDRESS
0x44f: V241 = 0xffffffffffffffffffffffffffffffffffffffff
0x464: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x465: V243 = BALANCE V242
0x468: V244 = ISZERO V243
0x469: V245 = MUL V244 0x8fc
0x46b: V246 = 0x40
0x46d: V247 = M[0x40]
0x46e: V248 = 0x0
0x470: V249 = 0x40
0x472: V250 = M[0x40]
0x475: V251 = SUB V247 V250
0x47a: V252 = CALL V245 V238 V243 V250 V251 V250 0x0
0x480: V253 = ISZERO V252
0x481: V254 = ISZERO V253
0x482: V255 = 0x48a
0x485: JUMPI 0x48a V254
---
Entry stack: [V11, 0x170]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x170]

================================

Block 0x486
[0x486:0x489]
---
Predecessors: [0x413]
Successors: []
---
0x486 PUSH1 0x0
0x488 DUP1
0x489 REVERT
---
0x486: V256 = 0x0
0x489: REVERT 0x0 0x0
---
Entry stack: [V11, 0x170]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x170]

================================

Block 0x48a
[0x48a:0x4dc]
---
Predecessors: [0x413]
Successors: [0x4dd, 0x4e1]
---
0x48a JUMPDEST
0x48b CALLER
0x48c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a1 AND
0x4a2 PUSH2 0x8fc
0x4a5 ADDRESS
0x4a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bb AND
0x4bc BALANCE
0x4bd SWAP1
0x4be DUP2
0x4bf ISZERO
0x4c0 MUL
0x4c1 SWAP1
0x4c2 PUSH1 0x40
0x4c4 MLOAD
0x4c5 PUSH1 0x0
0x4c7 PUSH1 0x40
0x4c9 MLOAD
0x4ca DUP1
0x4cb DUP4
0x4cc SUB
0x4cd DUP2
0x4ce DUP6
0x4cf DUP9
0x4d0 DUP9
0x4d1 CALL
0x4d2 SWAP4
0x4d3 POP
0x4d4 POP
0x4d5 POP
0x4d6 POP
0x4d7 ISZERO
0x4d8 ISZERO
0x4d9 PUSH2 0x4e1
0x4dc JUMPI
---
0x48a: JUMPDEST 
0x48b: V257 = CALLER
0x48c: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a1: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x4a2: V260 = 0x8fc
0x4a5: V261 = ADDRESS
0x4a6: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bb: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x4bc: V264 = BALANCE V263
0x4bf: V265 = ISZERO V264
0x4c0: V266 = MUL V265 0x8fc
0x4c2: V267 = 0x40
0x4c4: V268 = M[0x40]
0x4c5: V269 = 0x0
0x4c7: V270 = 0x40
0x4c9: V271 = M[0x40]
0x4cc: V272 = SUB V268 V271
0x4d1: V273 = CALL V266 V259 V264 V271 V272 V271 0x0
0x4d7: V274 = ISZERO V273
0x4d8: V275 = ISZERO V274
0x4d9: V276 = 0x4e1
0x4dc: JUMPI 0x4e1 V275
---
Entry stack: [V11, 0x170]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x170]

================================

Block 0x4dd
[0x4dd:0x4e0]
---
Predecessors: [0x48a]
Successors: []
---
0x4dd PUSH1 0x0
0x4df DUP1
0x4e0 REVERT
---
0x4dd: V277 = 0x0
0x4e0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x170]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x170]

================================

Block 0x4e1
[0x4e1:0x4e1]
---
Predecessors: [0x48a]
Successors: [0x4e2]
---
0x4e1 JUMPDEST
---
0x4e1: JUMPDEST 
---
Entry stack: [V11, 0x170]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x170]

================================

Block 0x4e2
[0x4e2:0x4e3]
---
Predecessors: [0x401, 0x4e1]
Successors: [0x170]
---
0x4e2 JUMPDEST
0x4e3 JUMP
---
0x4e2: JUMPDEST 
0x4e3: JUMP 0x170
---
Entry stack: [V11, 0x170]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e4
[0x4e4:0x51b]
---
Predecessors: []
Successors: []
---
0x4e4 STOP
0x4e5 LOG1
0x4e6 PUSH6 0x627a7a723058
0x4ed SHA3
0x4ee DUP12
0x4ef MISSING 0xf6
0x4f0 DUP11
0x4f1 MISSING 0xc3
0x4f2 MISSING 0x1f
0x4f3 MISSING 0xf
0x4f4 MISSING 0x2c
0x4f5 MISSING 0xb0
0x4f6 NUMBER
0x4f7 DUP3
0x4f8 RETURN
0x4f9 DUP8
0x4fa PUSH11 0x9ca7a9edf9fccc10737836
0x506 SHR
0x507 MISSING 0x4a
0x508 NUMBER
0x509 SWAP4
0x50a MISSING 0x28
0x50b MISSING 0xed
0x50c PUSH15 0x450029
---
0x4e4: STOP 
0x4e5: LOG S0 S1 S2
0x4e6: V278 = 0x627a7a723058
0x4ed: V279 = SHA3 0x627a7a723058 S3
0x4ef: MISSING 0xf6
0x4f1: MISSING 0xc3
0x4f2: MISSING 0x1f
0x4f3: MISSING 0xf
0x4f4: MISSING 0x2c
0x4f5: MISSING 0xb0
0x4f6: V280 = NUMBER
0x4f8: RETURN S1 V280
0x4fa: V281 = 0x9ca7a9edf9fccc10737836
0x506: V282 = SHR 0x9ca7a9edf9fccc10737836 S7
0x507: MISSING 0x4a
0x508: V283 = NUMBER
0x50a: MISSING 0x28
0x50b: MISSING 0xed
0x50c: V284 = 0x450029
---
Entry stack: []
Stack pops: 0
Stack additions: [S14, V279, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, S1, V282, S0, S1, S2, S3, S4, S5, S6, S7, S3, S0, S1, S2, V283, 0x450029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x6f
Exit block: 0x77
Body: 0x6f, 0x77, 0x172, 0x1bb, 0x20f, 0x266, 0x26a, 0x2de, 0x2e2

Function 1:
Public function signature: 0x495c9588
Entry block: 0x79
Exit block: 0x8c
Body: 0x79, 0x80, 0x84, 0x8c, 0x2e4

Function 2:
Public function signature: 0xb4a99a4e
Entry block: 0xa2
Exit block: 0xb5
Body: 0xa2, 0xa9, 0xad, 0xb5, 0x2f0

Function 3:
Public function signature: 0xba21d62a
Entry block: 0xf7
Exit block: 0x166
Body: 0xf7, 0x166, 0x315, 0x36c, 0x370, 0x39b, 0x3a4, 0x3b6, 0x3ca, 0x3e3

Function 4:
Public function signature: 0xbe040fb0
Entry block: 0x168
Exit block: 0x4dd
Body: 0x168, 0x170, 0x401, 0x413, 0x486, 0x48a, 0x4dd, 0x4e1, 0x4e2

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

