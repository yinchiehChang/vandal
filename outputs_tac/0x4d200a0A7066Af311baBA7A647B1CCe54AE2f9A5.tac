Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xa6fbb05
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xa6fbb05
0x3c: V13 = EQ 0xa6fbb05 V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x8b]
---
0x41 DUP1
0x42 PUSH4 0x181ffc5f
0x47 EQ
0x48 PUSH2 0x8b
0x4b JUMPI
---
0x42: V15 = 0x181ffc5f
0x47: V16 = EQ 0x181ffc5f V11
0x48: V17 = 0x8b
0x4b: JUMPI 0x8b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xdd]
---
0x4c DUP1
0x4d PUSH4 0x31fd725a
0x52 EQ
0x53 PUSH2 0xdd
0x56 JUMPI
---
0x4d: V18 = 0x31fd725a
0x52: V19 = EQ 0x31fd725a V11
0x53: V20 = 0xdd
0x56: JUMPI 0xdd V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x104]
---
0x57 DUP1
0x58 PUSH4 0x87f24484
0x5d EQ
0x5e PUSH2 0x104
0x61 JUMPI
---
0x58: V21 = 0x87f24484
0x5d: V22 = EQ 0x87f24484 V11
0x5e: V23 = 0x104
0x61: JUMPI 0x104 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x135]
---
0x62 DUP1
0x63 PUSH4 0xb456ecc5
0x68 EQ
0x69 PUSH2 0x135
0x6c JUMPI
---
0x63: V24 = 0xb456ecc5
0x68: V25 = EQ 0xb456ecc5 V11
0x69: V26 = 0x135
0x6c: JUMPI 0x135 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x88]
---
Predecessors: [0xd]
Successors: [0x1ae]
---
0x6f JUMPDEST
0x70 PUSH2 0x89
0x73 PUSH1 0x4
0x75 DUP1
0x76 DUP1
0x77 CALLDATALOAD
0x78 PUSH1 0x0
0x7a NOT
0x7b AND
0x7c SWAP1
0x7d PUSH1 0x20
0x7f ADD
0x80 SWAP1
0x81 SWAP2
0x82 SWAP1
0x83 POP
0x84 POP
0x85 PUSH2 0x1ae
0x88 JUMP
---
0x6f: JUMPDEST 
0x70: V27 = 0x89
0x73: V28 = 0x4
0x77: V29 = CALLDATALOAD 0x4
0x78: V30 = 0x0
0x7a: V31 = NOT 0x0
0x7b: V32 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V29
0x7d: V33 = 0x20
0x7f: V34 = ADD 0x20 0x4
0x85: V35 = 0x1ae
0x88: JUMP 0x1ae
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x89, V32]
Exit stack: [V11, 0x89, V32]

================================

Block 0x89
[0x89:0x8a]
---
Predecessors: [0x1e3]
Successors: []
---
0x89 JUMPDEST
0x8a STOP
---
0x89: JUMPDEST 
0x8a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8b
[0x8b:0xda]
---
Predecessors: [0x41]
Successors: [0x1e6]
---
0x8b JUMPDEST
0x8c PUSH2 0xdb
0x8f PUSH1 0x4
0x91 DUP1
0x92 DUP1
0x93 CALLDATALOAD
0x94 SWAP1
0x95 PUSH1 0x20
0x97 ADD
0x98 SWAP1
0x99 DUP3
0x9a ADD
0x9b DUP1
0x9c CALLDATALOAD
0x9d SWAP1
0x9e PUSH1 0x20
0xa0 ADD
0xa1 SWAP1
0xa2 DUP1
0xa3 DUP1
0xa4 PUSH1 0x1f
0xa6 ADD
0xa7 PUSH1 0x20
0xa9 DUP1
0xaa SWAP2
0xab DIV
0xac MUL
0xad PUSH1 0x20
0xaf ADD
0xb0 PUSH1 0x40
0xb2 MLOAD
0xb3 SWAP1
0xb4 DUP2
0xb5 ADD
0xb6 PUSH1 0x40
0xb8 MSTORE
0xb9 DUP1
0xba SWAP4
0xbb SWAP3
0xbc SWAP2
0xbd SWAP1
0xbe DUP2
0xbf DUP2
0xc0 MSTORE
0xc1 PUSH1 0x20
0xc3 ADD
0xc4 DUP4
0xc5 DUP4
0xc6 DUP1
0xc7 DUP3
0xc8 DUP5
0xc9 CALLDATACOPY
0xca DUP3
0xcb ADD
0xcc SWAP2
0xcd POP
0xce POP
0xcf POP
0xd0 POP
0xd1 POP
0xd2 POP
0xd3 SWAP2
0xd4 SWAP1
0xd5 POP
0xd6 POP
0xd7 PUSH2 0x1e6
0xda JUMP
---
0x8b: JUMPDEST 
0x8c: V36 = 0xdb
0x8f: V37 = 0x4
0x93: V38 = CALLDATALOAD 0x4
0x95: V39 = 0x20
0x97: V40 = ADD 0x20 0x4
0x9a: V41 = ADD 0x4 V38
0x9c: V42 = CALLDATALOAD V41
0x9e: V43 = 0x20
0xa0: V44 = ADD 0x20 V41
0xa4: V45 = 0x1f
0xa6: V46 = ADD 0x1f V42
0xa7: V47 = 0x20
0xab: V48 = DIV V46 0x20
0xac: V49 = MUL V48 0x20
0xad: V50 = 0x20
0xaf: V51 = ADD 0x20 V49
0xb0: V52 = 0x40
0xb2: V53 = M[0x40]
0xb5: V54 = ADD V53 V51
0xb6: V55 = 0x40
0xb8: M[0x40] = V54
0xc0: M[V53] = V42
0xc1: V56 = 0x20
0xc3: V57 = ADD 0x20 V53
0xc9: CALLDATACOPY V57 V44 V42
0xcb: V58 = ADD V57 V42
0xd7: V59 = 0x1e6
0xda: JUMP 0x1e6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xdb, V53]
Exit stack: [V11, 0xdb, V53]

================================

Block 0xdb
[0xdb:0xdc]
---
Predecessors: [0x2b2]
Successors: []
---
0xdb JUMPDEST
0xdc STOP
---
0xdb: JUMPDEST 
0xdc: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdd
[0xdd:0xe3]
---
Predecessors: [0x4c]
Successors: [0xe4, 0xe8]
---
0xdd JUMPDEST
0xde CALLVALUE
0xdf ISZERO
0xe0 PUSH2 0xe8
0xe3 JUMPI
---
0xdd: JUMPDEST 
0xde: V60 = CALLVALUE
0xdf: V61 = ISZERO V60
0xe0: V62 = 0xe8
0xe3: JUMPI 0xe8 V61
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe4
[0xe4:0xe7]
---
Predecessors: [0xdd]
Successors: []
---
0xe4 PUSH1 0x0
0xe6 DUP1
0xe7 REVERT
---
0xe4: V63 = 0x0
0xe7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe8
[0xe8:0x101]
---
Predecessors: [0xdd]
Successors: [0x2b5]
---
0xe8 JUMPDEST
0xe9 PUSH2 0x102
0xec PUSH1 0x4
0xee DUP1
0xef DUP1
0xf0 CALLDATALOAD
0xf1 PUSH1 0x0
0xf3 NOT
0xf4 AND
0xf5 SWAP1
0xf6 PUSH1 0x20
0xf8 ADD
0xf9 SWAP1
0xfa SWAP2
0xfb SWAP1
0xfc POP
0xfd POP
0xfe PUSH2 0x2b5
0x101 JUMP
---
0xe8: JUMPDEST 
0xe9: V64 = 0x102
0xec: V65 = 0x4
0xf0: V66 = CALLDATALOAD 0x4
0xf1: V67 = 0x0
0xf3: V68 = NOT 0x0
0xf4: V69 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V66
0xf6: V70 = 0x20
0xf8: V71 = ADD 0x20 0x4
0xfe: V72 = 0x2b5
0x101: JUMP 0x2b5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x102, V69]
Exit stack: [V11, 0x102, V69]

================================

Block 0x102
[0x102:0x103]
---
Predecessors: [0x2e2]
Successors: []
---
0x102 JUMPDEST
0x103 STOP
---
0x102: JUMPDEST 
0x103: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x104
[0x104:0x10a]
---
Predecessors: [0x57]
Successors: [0x10b, 0x10f]
---
0x104 JUMPDEST
0x105 CALLVALUE
0x106 ISZERO
0x107 PUSH2 0x10f
0x10a JUMPI
---
0x104: JUMPDEST 
0x105: V73 = CALLVALUE
0x106: V74 = ISZERO V73
0x107: V75 = 0x10f
0x10a: JUMPI 0x10f V74
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10b
[0x10b:0x10e]
---
Predecessors: [0x104]
Successors: []
---
0x10b PUSH1 0x0
0x10d DUP1
0x10e REVERT
---
0x10b: V76 = 0x0
0x10e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10f
[0x10f:0x116]
---
Predecessors: [0x104]
Successors: [0x2e5]
---
0x10f JUMPDEST
0x110 PUSH2 0x117
0x113 PUSH2 0x2e5
0x116 JUMP
---
0x10f: JUMPDEST 
0x110: V77 = 0x117
0x113: V78 = 0x2e5
0x116: JUMP 0x2e5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x117]
Exit stack: [V11, 0x117]

================================

Block 0x117
[0x117:0x134]
---
Predecessors: [0x2e5]
Successors: []
---
0x117 JUMPDEST
0x118 PUSH1 0x40
0x11a MLOAD
0x11b DUP1
0x11c DUP3
0x11d PUSH1 0x0
0x11f NOT
0x120 AND
0x121 PUSH1 0x0
0x123 NOT
0x124 AND
0x125 DUP2
0x126 MSTORE
0x127 PUSH1 0x20
0x129 ADD
0x12a SWAP2
0x12b POP
0x12c POP
0x12d PUSH1 0x40
0x12f MLOAD
0x130 DUP1
0x131 SWAP2
0x132 SUB
0x133 SWAP1
0x134 RETURN
---
0x117: JUMPDEST 
0x118: V79 = 0x40
0x11a: V80 = M[0x40]
0x11d: V81 = 0x0
0x11f: V82 = NOT 0x0
0x120: V83 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V245
0x121: V84 = 0x0
0x123: V85 = NOT 0x0
0x124: V86 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V83
0x126: M[V80] = V86
0x127: V87 = 0x20
0x129: V88 = ADD 0x20 V80
0x12d: V89 = 0x40
0x12f: V90 = M[0x40]
0x132: V91 = SUB V88 V90
0x134: RETURN V90 V91
---
Entry stack: [V11, 0x117, V245]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x117]

================================

Block 0x135
[0x135:0x13b]
---
Predecessors: [0x62]
Successors: [0x13c, 0x140]
---
0x135 JUMPDEST
0x136 CALLVALUE
0x137 ISZERO
0x138 PUSH2 0x140
0x13b JUMPI
---
0x135: JUMPDEST 
0x136: V92 = CALLVALUE
0x137: V93 = ISZERO V92
0x138: V94 = 0x140
0x13b: JUMPI 0x140 V93
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13c
[0x13c:0x13f]
---
Predecessors: [0x135]
Successors: []
---
0x13c PUSH1 0x0
0x13e DUP1
0x13f REVERT
---
0x13c: V95 = 0x0
0x13f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x140
[0x140:0x18f]
---
Predecessors: [0x135]
Successors: [0x2eb]
---
0x140 JUMPDEST
0x141 PUSH2 0x190
0x144 PUSH1 0x4
0x146 DUP1
0x147 DUP1
0x148 CALLDATALOAD
0x149 SWAP1
0x14a PUSH1 0x20
0x14c ADD
0x14d SWAP1
0x14e DUP3
0x14f ADD
0x150 DUP1
0x151 CALLDATALOAD
0x152 SWAP1
0x153 PUSH1 0x20
0x155 ADD
0x156 SWAP1
0x157 DUP1
0x158 DUP1
0x159 PUSH1 0x1f
0x15b ADD
0x15c PUSH1 0x20
0x15e DUP1
0x15f SWAP2
0x160 DIV
0x161 MUL
0x162 PUSH1 0x20
0x164 ADD
0x165 PUSH1 0x40
0x167 MLOAD
0x168 SWAP1
0x169 DUP2
0x16a ADD
0x16b PUSH1 0x40
0x16d MSTORE
0x16e DUP1
0x16f SWAP4
0x170 SWAP3
0x171 SWAP2
0x172 SWAP1
0x173 DUP2
0x174 DUP2
0x175 MSTORE
0x176 PUSH1 0x20
0x178 ADD
0x179 DUP4
0x17a DUP4
0x17b DUP1
0x17c DUP3
0x17d DUP5
0x17e CALLDATACOPY
0x17f DUP3
0x180 ADD
0x181 SWAP2
0x182 POP
0x183 POP
0x184 POP
0x185 POP
0x186 POP
0x187 POP
0x188 SWAP2
0x189 SWAP1
0x18a POP
0x18b POP
0x18c PUSH2 0x2eb
0x18f JUMP
---
0x140: JUMPDEST 
0x141: V96 = 0x190
0x144: V97 = 0x4
0x148: V98 = CALLDATALOAD 0x4
0x14a: V99 = 0x20
0x14c: V100 = ADD 0x20 0x4
0x14f: V101 = ADD 0x4 V98
0x151: V102 = CALLDATALOAD V101
0x153: V103 = 0x20
0x155: V104 = ADD 0x20 V101
0x159: V105 = 0x1f
0x15b: V106 = ADD 0x1f V102
0x15c: V107 = 0x20
0x160: V108 = DIV V106 0x20
0x161: V109 = MUL V108 0x20
0x162: V110 = 0x20
0x164: V111 = ADD 0x20 V109
0x165: V112 = 0x40
0x167: V113 = M[0x40]
0x16a: V114 = ADD V113 V111
0x16b: V115 = 0x40
0x16d: M[0x40] = V114
0x175: M[V113] = V102
0x176: V116 = 0x20
0x178: V117 = ADD 0x20 V113
0x17e: CALLDATACOPY V117 V104 V102
0x180: V118 = ADD V117 V102
0x18c: V119 = 0x2eb
0x18f: JUMP 0x2eb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x190, V113]
Exit stack: [V11, 0x190, V113]

================================

Block 0x190
[0x190:0x1ad]
---
Predecessors: [0x323]
Successors: []
---
0x190 JUMPDEST
0x191 PUSH1 0x40
0x193 MLOAD
0x194 DUP1
0x195 DUP3
0x196 PUSH1 0x0
0x198 NOT
0x199 AND
0x19a PUSH1 0x0
0x19c NOT
0x19d AND
0x19e DUP2
0x19f MSTORE
0x1a0 PUSH1 0x20
0x1a2 ADD
0x1a3 SWAP2
0x1a4 POP
0x1a5 POP
0x1a6 PUSH1 0x40
0x1a8 MLOAD
0x1a9 DUP1
0x1aa SWAP2
0x1ab SUB
0x1ac SWAP1
0x1ad RETURN
---
0x190: JUMPDEST 
0x191: V120 = 0x40
0x193: V121 = M[0x40]
0x196: V122 = 0x0
0x198: V123 = NOT 0x0
0x199: V124 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V281
0x19a: V125 = 0x0
0x19c: V126 = NOT 0x0
0x19d: V127 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V124
0x19f: M[V121] = V127
0x1a0: V128 = 0x20
0x1a2: V129 = ADD 0x20 V121
0x1a6: V130 = 0x40
0x1a8: V131 = M[0x40]
0x1ab: V132 = SUB V129 V131
0x1ad: RETURN V131 V132
---
Entry stack: [V11, V281]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ae
[0x1ae:0x1c4]
---
Predecessors: [0x6f]
Successors: [0x1c5, 0x1d2]
---
0x1ae JUMPDEST
0x1af PUSH1 0x0
0x1b1 DUP1
0x1b2 SWAP1
0x1b3 SLOAD
0x1b4 SWAP1
0x1b5 PUSH2 0x100
0x1b8 EXP
0x1b9 SWAP1
0x1ba DIV
0x1bb PUSH1 0xff
0x1bd AND
0x1be ISZERO
0x1bf DUP1
0x1c0 ISZERO
0x1c1 PUSH2 0x1d2
0x1c4 JUMPI
---
0x1ae: JUMPDEST 
0x1af: V133 = 0x0
0x1b3: V134 = S[0x0]
0x1b5: V135 = 0x100
0x1b8: V136 = EXP 0x100 0x0
0x1ba: V137 = DIV V134 0x1
0x1bb: V138 = 0xff
0x1bd: V139 = AND 0xff V137
0x1be: V140 = ISZERO V139
0x1c0: V141 = ISZERO V140
0x1c1: V142 = 0x1d2
0x1c4: JUMPI 0x1d2 V141
---
Entry stack: [V11, 0x89, V32]
Stack pops: 0
Stack additions: [V140]
Exit stack: [V11, 0x89, V32, V140]

================================

Block 0x1c5
[0x1c5:0x1d1]
---
Predecessors: [0x1ae]
Successors: [0x1d2]
---
0x1c5 POP
0x1c6 PUSH8 0xde0b6b3a7640000
0x1cf CALLVALUE
0x1d0 LT
0x1d1 ISZERO
---
0x1c6: V143 = 0xde0b6b3a7640000
0x1cf: V144 = CALLVALUE
0x1d0: V145 = LT V144 0xde0b6b3a7640000
0x1d1: V146 = ISZERO V145
---
Entry stack: [V11, 0x89, V32, V140]
Stack pops: 1
Stack additions: [V146]
Exit stack: [V11, 0x89, V32, V146]

================================

Block 0x1d2
[0x1d2:0x1d7]
---
Predecessors: [0x1ae, 0x1c5]
Successors: [0x1d8, 0x1e3]
---
0x1d2 JUMPDEST
0x1d3 ISZERO
0x1d4 PUSH2 0x1e3
0x1d7 JUMPI
---
0x1d2: JUMPDEST 
0x1d3: V147 = ISZERO S0
0x1d4: V148 = 0x1e3
0x1d7: JUMPI 0x1e3 V147
---
Entry stack: [V11, 0x89, V32, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x89, V32]

================================

Block 0x1d8
[0x1d8:0x1e2]
---
Predecessors: [0x1d2]
Successors: [0x1e3]
---
0x1d8 DUP1
0x1d9 PUSH1 0x1
0x1db DUP2
0x1dc PUSH1 0x0
0x1de NOT
0x1df AND
0x1e0 SWAP1
0x1e1 SSTORE
0x1e2 POP
---
0x1d9: V149 = 0x1
0x1dc: V150 = 0x0
0x1de: V151 = NOT 0x0
0x1df: V152 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V32
0x1e1: S[0x1] = V152
---
Entry stack: [V11, 0x89, V32]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x89, V32]

================================

Block 0x1e3
[0x1e3:0x1e5]
---
Predecessors: [0x1d2, 0x1d8]
Successors: [0x89]
---
0x1e3 JUMPDEST
0x1e4 POP
0x1e5 JUMP
---
0x1e3: JUMPDEST 
0x1e5: JUMP 0x89
---
Entry stack: [V11, 0x89, V32]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e6
[0x1e6:0x1f6]
---
Predecessors: [0x8b]
Successors: [0x1f7]
---
0x1e6 JUMPDEST
0x1e7 DUP1
0x1e8 PUSH1 0x40
0x1ea MLOAD
0x1eb DUP1
0x1ec DUP3
0x1ed DUP1
0x1ee MLOAD
0x1ef SWAP1
0x1f0 PUSH1 0x20
0x1f2 ADD
0x1f3 SWAP1
0x1f4 DUP1
0x1f5 DUP4
0x1f6 DUP4
---
0x1e6: JUMPDEST 
0x1e8: V153 = 0x40
0x1ea: V154 = M[0x40]
0x1ee: V155 = M[V53]
0x1f0: V156 = 0x20
0x1f2: V157 = ADD 0x20 V53
---
Entry stack: [V11, 0xdb, V53]
Stack pops: 1
Stack additions: [S0, S0, V154, V154, V157, V155, V155, V154, V157]
Exit stack: [V11, 0xdb, V53, V53, V154, V154, V157, V155, V155, V154, V157]

================================

Block 0x1f7
[0x1f7:0x201]
---
Predecessors: [0x1e6, 0x202]
Successors: [0x202, 0x21c]
---
0x1f7 JUMPDEST
0x1f8 PUSH1 0x20
0x1fa DUP4
0x1fb LT
0x1fc ISZERO
0x1fd ISZERO
0x1fe PUSH2 0x21c
0x201 JUMPI
---
0x1f7: JUMPDEST 
0x1f8: V158 = 0x20
0x1fb: V159 = LT S2 0x20
0x1fc: V160 = ISZERO V159
0x1fd: V161 = ISZERO V160
0x1fe: V162 = 0x21c
0x201: JUMPI 0x21c V161
---
Entry stack: [V11, 0xdb, V53, V53, V154, V154, V157, V155, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xdb, V53, V53, V154, V154, V157, V155, S2, S1, S0]

================================

Block 0x202
[0x202:0x21b]
---
Predecessors: [0x1f7]
Successors: [0x1f7]
---
0x202 DUP1
0x203 MLOAD
0x204 DUP3
0x205 MSTORE
0x206 PUSH1 0x20
0x208 DUP3
0x209 ADD
0x20a SWAP2
0x20b POP
0x20c PUSH1 0x20
0x20e DUP2
0x20f ADD
0x210 SWAP1
0x211 POP
0x212 PUSH1 0x20
0x214 DUP4
0x215 SUB
0x216 SWAP3
0x217 POP
0x218 PUSH2 0x1f7
0x21b JUMP
---
0x203: V163 = M[S0]
0x205: M[S1] = V163
0x206: V164 = 0x20
0x209: V165 = ADD S1 0x20
0x20c: V166 = 0x20
0x20f: V167 = ADD S0 0x20
0x212: V168 = 0x20
0x215: V169 = SUB S2 0x20
0x218: V170 = 0x1f7
0x21b: JUMP 0x1f7
---
Entry stack: [V11, 0xdb, V53, V53, V154, V154, V157, V155, S2, S1, S0]
Stack pops: 3
Stack additions: [V169, V165, V167]
Exit stack: [V11, 0xdb, V53, V53, V154, V154, V157, V155, V169, V165, V167]

================================

Block 0x21c
[0x21c:0x25a]
---
Predecessors: [0x1f7]
Successors: [0x25b, 0x2b2]
---
0x21c JUMPDEST
0x21d PUSH1 0x1
0x21f DUP4
0x220 PUSH1 0x20
0x222 SUB
0x223 PUSH2 0x100
0x226 EXP
0x227 SUB
0x228 DUP1
0x229 NOT
0x22a DUP3
0x22b MLOAD
0x22c AND
0x22d DUP2
0x22e DUP5
0x22f MLOAD
0x230 AND
0x231 DUP1
0x232 DUP3
0x233 OR
0x234 DUP6
0x235 MSTORE
0x236 POP
0x237 POP
0x238 POP
0x239 POP
0x23a POP
0x23b POP
0x23c SWAP1
0x23d POP
0x23e ADD
0x23f SWAP2
0x240 POP
0x241 POP
0x242 PUSH1 0x40
0x244 MLOAD
0x245 DUP1
0x246 SWAP2
0x247 SUB
0x248 SWAP1
0x249 SHA3
0x24a PUSH1 0x0
0x24c NOT
0x24d AND
0x24e PUSH1 0x1
0x250 SLOAD
0x251 PUSH1 0x0
0x253 NOT
0x254 AND
0x255 EQ
0x256 ISZERO
0x257 PUSH2 0x2b2
0x25a JUMPI
---
0x21c: JUMPDEST 
0x21d: V171 = 0x1
0x220: V172 = 0x20
0x222: V173 = SUB 0x20 S2
0x223: V174 = 0x100
0x226: V175 = EXP 0x100 V173
0x227: V176 = SUB V175 0x1
0x229: V177 = NOT V176
0x22b: V178 = M[S0]
0x22c: V179 = AND V178 V177
0x22f: V180 = M[S1]
0x230: V181 = AND V180 V176
0x233: V182 = OR V179 V181
0x235: M[S1] = V182
0x23e: V183 = ADD V155 V154
0x242: V184 = 0x40
0x244: V185 = M[0x40]
0x247: V186 = SUB V183 V185
0x249: V187 = SHA3 V185 V186
0x24a: V188 = 0x0
0x24c: V189 = NOT 0x0
0x24d: V190 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V187
0x24e: V191 = 0x1
0x250: V192 = S[0x1]
0x251: V193 = 0x0
0x253: V194 = NOT 0x0
0x254: V195 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V192
0x255: V196 = EQ V195 V190
0x256: V197 = ISZERO V196
0x257: V198 = 0x2b2
0x25a: JUMPI 0x2b2 V197
---
Entry stack: [V11, 0xdb, V53, V53, V154, V154, V157, V155, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11, 0xdb, V53]

================================

Block 0x25b
[0x25b:0x2ac]
---
Predecessors: [0x21c]
Successors: [0x2ad, 0x2b1]
---
0x25b CALLER
0x25c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x271 AND
0x272 PUSH2 0x8fc
0x275 ADDRESS
0x276 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28b AND
0x28c BALANCE
0x28d SWAP1
0x28e DUP2
0x28f ISZERO
0x290 MUL
0x291 SWAP1
0x292 PUSH1 0x40
0x294 MLOAD
0x295 PUSH1 0x0
0x297 PUSH1 0x40
0x299 MLOAD
0x29a DUP1
0x29b DUP4
0x29c SUB
0x29d DUP2
0x29e DUP6
0x29f DUP9
0x2a0 DUP9
0x2a1 CALL
0x2a2 SWAP4
0x2a3 POP
0x2a4 POP
0x2a5 POP
0x2a6 POP
0x2a7 ISZERO
0x2a8 ISZERO
0x2a9 PUSH2 0x2b1
0x2ac JUMPI
---
0x25b: V199 = CALLER
0x25c: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x271: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0x272: V202 = 0x8fc
0x275: V203 = ADDRESS
0x276: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x28b: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x28c: V206 = BALANCE V205
0x28f: V207 = ISZERO V206
0x290: V208 = MUL V207 0x8fc
0x292: V209 = 0x40
0x294: V210 = M[0x40]
0x295: V211 = 0x0
0x297: V212 = 0x40
0x299: V213 = M[0x40]
0x29c: V214 = SUB V210 V213
0x2a1: V215 = CALL V208 V201 V206 V213 V214 V213 0x0
0x2a7: V216 = ISZERO V215
0x2a8: V217 = ISZERO V216
0x2a9: V218 = 0x2b1
0x2ac: JUMPI 0x2b1 V217
---
Entry stack: [V11, 0xdb, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdb, V53]

================================

Block 0x2ad
[0x2ad:0x2b0]
---
Predecessors: [0x25b]
Successors: []
---
0x2ad PUSH1 0x0
0x2af DUP1
0x2b0 REVERT
---
0x2ad: V219 = 0x0
0x2b0: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdb, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdb, V53]

================================

Block 0x2b1
[0x2b1:0x2b1]
---
Predecessors: [0x25b]
Successors: [0x2b2]
---
0x2b1 JUMPDEST
---
0x2b1: JUMPDEST 
---
Entry stack: [V11, 0xdb, V53]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdb, V53]

================================

Block 0x2b2
[0x2b2:0x2b4]
---
Predecessors: [0x21c, 0x2b1]
Successors: [0xdb]
---
0x2b2 JUMPDEST
0x2b3 POP
0x2b4 JUMP
---
0x2b2: JUMPDEST 
0x2b4: JUMP 0xdb
---
Entry stack: [V11, 0xdb, V53]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b5
[0x2b5:0x2c7]
---
Predecessors: [0xe8]
Successors: [0x2c8, 0x2e2]
---
0x2b5 JUMPDEST
0x2b6 PUSH1 0x1
0x2b8 SLOAD
0x2b9 PUSH1 0x0
0x2bb NOT
0x2bc AND
0x2bd DUP2
0x2be PUSH1 0x0
0x2c0 NOT
0x2c1 AND
0x2c2 EQ
0x2c3 ISZERO
0x2c4 PUSH2 0x2e2
0x2c7 JUMPI
---
0x2b5: JUMPDEST 
0x2b6: V220 = 0x1
0x2b8: V221 = S[0x1]
0x2b9: V222 = 0x0
0x2bb: V223 = NOT 0x0
0x2bc: V224 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V221
0x2be: V225 = 0x0
0x2c0: V226 = NOT 0x0
0x2c1: V227 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V69
0x2c2: V228 = EQ V227 V224
0x2c3: V229 = ISZERO V228
0x2c4: V230 = 0x2e2
0x2c7: JUMPI 0x2e2 V229
---
Entry stack: [V11, 0x102, V69]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x102, V69]

================================

Block 0x2c8
[0x2c8:0x2e1]
---
Predecessors: [0x2b5]
Successors: [0x2e2]
---
0x2c8 PUSH1 0x1
0x2ca PUSH1 0x0
0x2cc DUP1
0x2cd PUSH2 0x100
0x2d0 EXP
0x2d1 DUP2
0x2d2 SLOAD
0x2d3 DUP2
0x2d4 PUSH1 0xff
0x2d6 MUL
0x2d7 NOT
0x2d8 AND
0x2d9 SWAP1
0x2da DUP4
0x2db ISZERO
0x2dc ISZERO
0x2dd MUL
0x2de OR
0x2df SWAP1
0x2e0 SSTORE
0x2e1 POP
---
0x2c8: V231 = 0x1
0x2ca: V232 = 0x0
0x2cd: V233 = 0x100
0x2d0: V234 = EXP 0x100 0x0
0x2d2: V235 = S[0x0]
0x2d4: V236 = 0xff
0x2d6: V237 = MUL 0xff 0x1
0x2d7: V238 = NOT 0xff
0x2d8: V239 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V235
0x2db: V240 = ISZERO 0x1
0x2dc: V241 = ISZERO 0x0
0x2dd: V242 = MUL 0x1 0x1
0x2de: V243 = OR 0x1 V239
0x2e0: S[0x0] = V243
---
Entry stack: [V11, 0x102, V69]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x102, V69]

================================

Block 0x2e2
[0x2e2:0x2e4]
---
Predecessors: [0x2b5, 0x2c8]
Successors: [0x102]
---
0x2e2 JUMPDEST
0x2e3 POP
0x2e4 JUMP
---
0x2e2: JUMPDEST 
0x2e4: JUMP 0x102
---
Entry stack: [V11, 0x102, V69]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2e5
[0x2e5:0x2ea]
---
Predecessors: [0x10f]
Successors: [0x117]
---
0x2e5 JUMPDEST
0x2e6 PUSH1 0x1
0x2e8 SLOAD
0x2e9 DUP2
0x2ea JUMP
---
0x2e5: JUMPDEST 
0x2e6: V244 = 0x1
0x2e8: V245 = S[0x1]
0x2ea: JUMP 0x117
---
Entry stack: [V11, 0x117]
Stack pops: 1
Stack additions: [S0, V245]
Exit stack: [V11, 0x117, V245]

================================

Block 0x2eb
[0x2eb:0x2fd]
---
Predecessors: [0x140]
Successors: [0x2fe]
---
0x2eb JUMPDEST
0x2ec PUSH1 0x0
0x2ee DUP2
0x2ef PUSH1 0x40
0x2f1 MLOAD
0x2f2 DUP1
0x2f3 DUP3
0x2f4 DUP1
0x2f5 MLOAD
0x2f6 SWAP1
0x2f7 PUSH1 0x20
0x2f9 ADD
0x2fa SWAP1
0x2fb DUP1
0x2fc DUP4
0x2fd DUP4
---
0x2eb: JUMPDEST 
0x2ec: V246 = 0x0
0x2ef: V247 = 0x40
0x2f1: V248 = M[0x40]
0x2f5: V249 = M[V113]
0x2f7: V250 = 0x20
0x2f9: V251 = ADD 0x20 V113
---
Entry stack: [V11, 0x190, V113]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V248, V248, V251, V249, V249, V248, V251]
Exit stack: [V11, 0x190, V113, 0x0, V113, V248, V248, V251, V249, V249, V248, V251]

================================

Block 0x2fe
[0x2fe:0x308]
---
Predecessors: [0x2eb, 0x309]
Successors: [0x309, 0x323]
---
0x2fe JUMPDEST
0x2ff PUSH1 0x20
0x301 DUP4
0x302 LT
0x303 ISZERO
0x304 ISZERO
0x305 PUSH2 0x323
0x308 JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V252 = 0x20
0x302: V253 = LT S2 0x20
0x303: V254 = ISZERO V253
0x304: V255 = ISZERO V254
0x305: V256 = 0x323
0x308: JUMPI 0x323 V255
---
Entry stack: [V11, 0x190, V113, 0x0, V113, V248, V248, V251, V249, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x190, V113, 0x0, V113, V248, V248, V251, V249, S2, S1, S0]

================================

Block 0x309
[0x309:0x322]
---
Predecessors: [0x2fe]
Successors: [0x2fe]
---
0x309 DUP1
0x30a MLOAD
0x30b DUP3
0x30c MSTORE
0x30d PUSH1 0x20
0x30f DUP3
0x310 ADD
0x311 SWAP2
0x312 POP
0x313 PUSH1 0x20
0x315 DUP2
0x316 ADD
0x317 SWAP1
0x318 POP
0x319 PUSH1 0x20
0x31b DUP4
0x31c SUB
0x31d SWAP3
0x31e POP
0x31f PUSH2 0x2fe
0x322 JUMP
---
0x30a: V257 = M[S0]
0x30c: M[S1] = V257
0x30d: V258 = 0x20
0x310: V259 = ADD S1 0x20
0x313: V260 = 0x20
0x316: V261 = ADD S0 0x20
0x319: V262 = 0x20
0x31c: V263 = SUB S2 0x20
0x31f: V264 = 0x2fe
0x322: JUMP 0x2fe
---
Entry stack: [V11, 0x190, V113, 0x0, V113, V248, V248, V251, V249, S2, S1, S0]
Stack pops: 3
Stack additions: [V263, V259, V261]
Exit stack: [V11, 0x190, V113, 0x0, V113, V248, V248, V251, V249, V263, V259, V261]

================================

Block 0x323
[0x323:0x356]
---
Predecessors: [0x2fe]
Successors: [0x190]
---
0x323 JUMPDEST
0x324 PUSH1 0x1
0x326 DUP4
0x327 PUSH1 0x20
0x329 SUB
0x32a PUSH2 0x100
0x32d EXP
0x32e SUB
0x32f DUP1
0x330 NOT
0x331 DUP3
0x332 MLOAD
0x333 AND
0x334 DUP2
0x335 DUP5
0x336 MLOAD
0x337 AND
0x338 DUP1
0x339 DUP3
0x33a OR
0x33b DUP6
0x33c MSTORE
0x33d POP
0x33e POP
0x33f POP
0x340 POP
0x341 POP
0x342 POP
0x343 SWAP1
0x344 POP
0x345 ADD
0x346 SWAP2
0x347 POP
0x348 POP
0x349 PUSH1 0x40
0x34b MLOAD
0x34c DUP1
0x34d SWAP2
0x34e SUB
0x34f SWAP1
0x350 SHA3
0x351 SWAP1
0x352 POP
0x353 SWAP2
0x354 SWAP1
0x355 POP
0x356 JUMP
---
0x323: JUMPDEST 
0x324: V265 = 0x1
0x327: V266 = 0x20
0x329: V267 = SUB 0x20 S2
0x32a: V268 = 0x100
0x32d: V269 = EXP 0x100 V267
0x32e: V270 = SUB V269 0x1
0x330: V271 = NOT V270
0x332: V272 = M[S0]
0x333: V273 = AND V272 V271
0x336: V274 = M[S1]
0x337: V275 = AND V274 V270
0x33a: V276 = OR V273 V275
0x33c: M[S1] = V276
0x345: V277 = ADD V249 V248
0x349: V278 = 0x40
0x34b: V279 = M[0x40]
0x34e: V280 = SUB V277 V279
0x350: V281 = SHA3 V279 V280
0x356: JUMP 0x190
---
Entry stack: [V11, 0x190, V113, 0x0, V113, V248, V248, V251, V249, S2, S1, S0]
Stack pops: 11
Stack additions: [V281]
Exit stack: [V11, V281]

================================

Block 0x357
[0x357:0x38e]
---
Predecessors: []
Successors: []
---
0x357 STOP
0x358 LOG1
0x359 PUSH6 0x627a7a723058
0x360 SHA3
0x361 PUSH13 0x7857eb311d082fe6eb46bb65a8
0x36f MISSING 0x2a
0x370 PC
0x371 PUSH29 0x766db89b51a8e9762576635731160c0029
---
0x357: STOP 
0x358: LOG S0 S1 S2
0x359: V282 = 0x627a7a723058
0x360: V283 = SHA3 0x627a7a723058 S3
0x361: V284 = 0x7857eb311d082fe6eb46bb65a8
0x36f: MISSING 0x2a
0x370: V285 = PC
0x371: V286 = 0x766db89b51a8e9762576635731160c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x7857eb311d082fe6eb46bb65a8, V283, 0x766db89b51a8e9762576635731160c0029, V285]
Exit stack: []

================================

Function 0:
Public function signature: 0xa6fbb05
Entry block: 0x6f
Exit block: 0x89
Body: 0x6f, 0x89, 0x1ae, 0x1c5, 0x1d2, 0x1d8, 0x1e3

Function 1:
Public function signature: 0x181ffc5f
Entry block: 0x8b
Exit block: 0xdb
Body: 0x8b, 0xdb, 0x1e6, 0x1f7, 0x202, 0x21c, 0x25b, 0x2ad, 0x2b1, 0x2b2

Function 2:
Public function signature: 0x31fd725a
Entry block: 0xdd
Exit block: 0x102
Body: 0xdd, 0xe4, 0xe8, 0x102, 0x2b5, 0x2c8, 0x2e2

Function 3:
Public function signature: 0x87f24484
Entry block: 0x104
Exit block: 0x117
Body: 0x104, 0x10b, 0x10f, 0x117, 0x2e5

Function 4:
Public function signature: 0xb456ecc5
Entry block: 0x135
Exit block: 0x190
Body: 0x135, 0x13c, 0x140, 0x190, 0x2eb, 0x2fe, 0x309, 0x323

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

