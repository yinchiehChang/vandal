Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x11bcd830
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x11bcd830
0x3c: V13 = EQ 0x11bcd830 V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x8d]
---
0x41 DUP1
0x42 PUSH4 0x9ffa0711
0x47 EQ
0x48 PUSH2 0x8d
0x4b JUMPI
---
0x42: V15 = 0x9ffa0711
0x47: V16 = EQ 0x9ffa0711 V11
0x48: V17 = 0x8d
0x4b: JUMPI 0x8d V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xb0]
---
0x4c DUP1
0x4d PUSH4 0xbf8869b5
0x52 EQ
0x53 PUSH2 0xb0
0x56 JUMPI
---
0x4d: V18 = 0xbf8869b5
0x52: V19 = EQ 0xbf8869b5 V11
0x53: V20 = 0xb0
0x56: JUMPI 0xb0 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xd9]
---
0x57 DUP1
0x58 PUSH4 0xed21248c
0x5d EQ
0x5e PUSH2 0xd9
0x61 JUMPI
---
0x58: V21 = 0xed21248c
0x5d: V22 = EQ 0xed21248c V11
0x5e: V23 = 0xd9
0x61: JUMPI 0xd9 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6a]
---
Predecessors: [0xd]
Successors: [0x6b, 0x6f]
---
0x64 JUMPDEST
0x65 CALLVALUE
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x64: JUMPDEST 
0x65: V24 = CALLVALUE
0x66: V25 = ISZERO V24
0x67: V26 = 0x6f
0x6a: JUMPI 0x6f V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x64]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V27 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0x64]
Successors: [0xe3]
---
0x6f JUMPDEST
0x70 PUSH2 0x77
0x73 PUSH2 0xe3
0x76 JUMP
---
0x6f: JUMPDEST 
0x70: V28 = 0x77
0x73: V29 = 0xe3
0x76: JUMP 0xe3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x77
[0x77:0x8c]
---
Predecessors: [0xe3]
Successors: []
---
0x77 JUMPDEST
0x78 PUSH1 0x40
0x7a MLOAD
0x7b DUP1
0x7c DUP3
0x7d DUP2
0x7e MSTORE
0x7f PUSH1 0x20
0x81 ADD
0x82 SWAP2
0x83 POP
0x84 POP
0x85 PUSH1 0x40
0x87 MLOAD
0x88 DUP1
0x89 SWAP2
0x8a SUB
0x8b SWAP1
0x8c RETURN
---
0x77: JUMPDEST 
0x78: V30 = 0x40
0x7a: V31 = M[0x40]
0x7e: M[V31] = V63
0x7f: V32 = 0x20
0x81: V33 = ADD 0x20 V31
0x85: V34 = 0x40
0x87: V35 = M[0x40]
0x8a: V36 = SUB V33 V35
0x8c: RETURN V35 V36
---
Entry stack: [V11, 0x77, V63]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x8d
[0x8d:0x93]
---
Predecessors: [0x41]
Successors: [0x94, 0x98]
---
0x8d JUMPDEST
0x8e CALLVALUE
0x8f ISZERO
0x90 PUSH2 0x98
0x93 JUMPI
---
0x8d: JUMPDEST 
0x8e: V37 = CALLVALUE
0x8f: V38 = ISZERO V37
0x90: V39 = 0x98
0x93: JUMPI 0x98 V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x94
[0x94:0x97]
---
Predecessors: [0x8d]
Successors: []
---
0x94 PUSH1 0x0
0x96 DUP1
0x97 REVERT
---
0x94: V40 = 0x0
0x97: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x98
[0x98:0xad]
---
Predecessors: [0x8d]
Successors: [0xe9]
---
0x98 JUMPDEST
0x99 PUSH2 0xae
0x9c PUSH1 0x4
0x9e DUP1
0x9f DUP1
0xa0 CALLDATALOAD
0xa1 SWAP1
0xa2 PUSH1 0x20
0xa4 ADD
0xa5 SWAP1
0xa6 SWAP2
0xa7 SWAP1
0xa8 POP
0xa9 POP
0xaa PUSH2 0xe9
0xad JUMP
---
0x98: JUMPDEST 
0x99: V41 = 0xae
0x9c: V42 = 0x4
0xa0: V43 = CALLDATALOAD 0x4
0xa2: V44 = 0x20
0xa4: V45 = ADD 0x20 0x4
0xaa: V46 = 0xe9
0xad: JUMP 0xe9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xae, V43]
Exit stack: [V11, 0xae, V43]

================================

Block 0xae
[0xae:0xaf]
---
Predecessors: [0x2c4]
Successors: []
---
0xae JUMPDEST
0xaf STOP
---
0xae: JUMPDEST 
0xaf: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb0
[0xb0:0xb6]
---
Predecessors: [0x4c]
Successors: [0xb7, 0xbb]
---
0xb0 JUMPDEST
0xb1 CALLVALUE
0xb2 ISZERO
0xb3 PUSH2 0xbb
0xb6 JUMPI
---
0xb0: JUMPDEST 
0xb1: V47 = CALLVALUE
0xb2: V48 = ISZERO V47
0xb3: V49 = 0xbb
0xb6: JUMPI 0xbb V48
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb7
[0xb7:0xba]
---
Predecessors: [0xb0]
Successors: []
---
0xb7 PUSH1 0x0
0xb9 DUP1
0xba REVERT
---
0xb7: V50 = 0x0
0xba: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbb
[0xbb:0xc2]
---
Predecessors: [0xb0]
Successors: [0x2c7]
---
0xbb JUMPDEST
0xbc PUSH2 0xc3
0xbf PUSH2 0x2c7
0xc2 JUMP
---
0xbb: JUMPDEST 
0xbc: V51 = 0xc3
0xbf: V52 = 0x2c7
0xc2: JUMP 0x2c7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc3]
Exit stack: [V11, 0xc3]

================================

Block 0xc3
[0xc3:0xd8]
---
Predecessors: [0x2c7]
Successors: []
---
0xc3 JUMPDEST
0xc4 PUSH1 0x40
0xc6 MLOAD
0xc7 DUP1
0xc8 DUP3
0xc9 DUP2
0xca MSTORE
0xcb PUSH1 0x20
0xcd ADD
0xce SWAP2
0xcf POP
0xd0 POP
0xd1 PUSH1 0x40
0xd3 MLOAD
0xd4 DUP1
0xd5 SWAP2
0xd6 SUB
0xd7 SWAP1
0xd8 RETURN
---
0xc3: JUMPDEST 
0xc4: V53 = 0x40
0xc6: V54 = M[0x40]
0xca: M[V54] = V179
0xcb: V55 = 0x20
0xcd: V56 = ADD 0x20 V54
0xd1: V57 = 0x40
0xd3: V58 = M[0x40]
0xd6: V59 = SUB V56 V58
0xd8: RETURN V58 V59
---
Entry stack: [V11, V179]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xd9
[0xd9:0xe0]
---
Predecessors: [0x57]
Successors: [0x30d]
---
0xd9 JUMPDEST
0xda PUSH2 0xe1
0xdd PUSH2 0x30d
0xe0 JUMP
---
0xd9: JUMPDEST 
0xda: V60 = 0xe1
0xdd: V61 = 0x30d
0xe0: JUMP 0x30d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe1]
Exit stack: [V11, 0xe1]

================================

Block 0xe1
[0xe1:0xe2]
---
Predecessors: [0x476]
Successors: []
---
0xe1 JUMPDEST
0xe2 STOP
---
0xe1: JUMPDEST 
0xe2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe3
[0xe3:0xe8]
---
Predecessors: [0x6f]
Successors: [0x77]
---
0xe3 JUMPDEST
0xe4 PUSH1 0x1
0xe6 SLOAD
0xe7 DUP2
0xe8 JUMP
---
0xe3: JUMPDEST 
0xe4: V62 = 0x1
0xe6: V63 = S[0x1]
0xe8: JUMP 0x77
---
Entry stack: [V11, 0x77]
Stack pops: 1
Stack additions: [S0, V63]
Exit stack: [V11, 0x77, V63]

================================

Block 0xe9
[0xe9:0x130]
---
Predecessors: [0x98]
Successors: [0x131, 0x2c4]
---
0xe9 JUMPDEST
0xea PUSH1 0x0
0xec DUP1
0xed CALLER
0xee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x103 AND
0x104 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x119 AND
0x11a DUP2
0x11b MSTORE
0x11c PUSH1 0x20
0x11e ADD
0x11f SWAP1
0x120 DUP2
0x121 MSTORE
0x122 PUSH1 0x20
0x124 ADD
0x125 PUSH1 0x0
0x127 SHA3
0x128 SLOAD
0x129 DUP2
0x12a GT
0x12b ISZERO
0x12c ISZERO
0x12d PUSH2 0x2c4
0x130 JUMPI
---
0xe9: JUMPDEST 
0xea: V64 = 0x0
0xed: V65 = CALLER
0xee: V66 = 0xffffffffffffffffffffffffffffffffffffffff
0x103: V67 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0x104: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x119: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x11b: M[0x0] = V69
0x11c: V70 = 0x20
0x11e: V71 = ADD 0x20 0x0
0x121: M[0x20] = 0x0
0x122: V72 = 0x20
0x124: V73 = ADD 0x20 0x20
0x125: V74 = 0x0
0x127: V75 = SHA3 0x0 0x40
0x128: V76 = S[V75]
0x12a: V77 = GT V43 V76
0x12b: V78 = ISZERO V77
0x12c: V79 = ISZERO V78
0x12d: V80 = 0x2c4
0x130: JUMPI 0x2c4 V79
---
Entry stack: [V11, 0xae, V43]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xae, V43]

================================

Block 0x131
[0x131:0x165]
---
Predecessors: [0xe9]
Successors: [0x166, 0x2c3]
---
0x131 CALLER
0x132 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x147 AND
0x148 DUP2
0x149 PUSH1 0x40
0x14b MLOAD
0x14c PUSH1 0x0
0x14e PUSH1 0x40
0x150 MLOAD
0x151 DUP1
0x152 DUP4
0x153 SUB
0x154 DUP2
0x155 DUP6
0x156 DUP8
0x157 PUSH2 0x8796
0x15a GAS
0x15b SUB
0x15c CALL
0x15d SWAP3
0x15e POP
0x15f POP
0x160 POP
0x161 ISZERO
0x162 PUSH2 0x2c3
0x165 JUMPI
---
0x131: V81 = CALLER
0x132: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x147: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x149: V84 = 0x40
0x14b: V85 = M[0x40]
0x14c: V86 = 0x0
0x14e: V87 = 0x40
0x150: V88 = M[0x40]
0x153: V89 = SUB V85 V88
0x157: V90 = 0x8796
0x15a: V91 = GAS
0x15b: V92 = SUB V91 0x8796
0x15c: V93 = CALL V92 V83 V43 V88 V89 V88 0x0
0x161: V94 = ISZERO V93
0x162: V95 = 0x2c3
0x165: JUMPI 0x2c3 V94
---
Entry stack: [V11, 0xae, V43]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xae, V43]

================================

Block 0x166
[0x166:0x2a9]
---
Predecessors: [0x131]
Successors: [0x2aa, 0x2ae]
---
0x166 DUP1
0x167 PUSH1 0x0
0x169 DUP1
0x16a CALLER
0x16b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x180 AND
0x181 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x196 AND
0x197 DUP2
0x198 MSTORE
0x199 PUSH1 0x20
0x19b ADD
0x19c SWAP1
0x19d DUP2
0x19e MSTORE
0x19f PUSH1 0x20
0x1a1 ADD
0x1a2 PUSH1 0x0
0x1a4 SHA3
0x1a5 PUSH1 0x0
0x1a7 DUP3
0x1a8 DUP3
0x1a9 SLOAD
0x1aa SUB
0x1ab SWAP3
0x1ac POP
0x1ad POP
0x1ae DUP2
0x1af SWAP1
0x1b0 SSTORE
0x1b1 POP
0x1b2 PUSH1 0x2
0x1b4 PUSH1 0x0
0x1b6 SWAP1
0x1b7 SLOAD
0x1b8 SWAP1
0x1b9 PUSH2 0x100
0x1bc EXP
0x1bd SWAP1
0x1be DIV
0x1bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d4 AND
0x1d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ea AND
0x1eb PUSH4 0x4c2f04a4
0x1f0 CALLER
0x1f1 DUP4
0x1f2 PUSH1 0x40
0x1f4 MLOAD
0x1f5 DUP4
0x1f6 PUSH4 0xffffffff
0x1fb AND
0x1fc PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x21a MUL
0x21b DUP2
0x21c MSTORE
0x21d PUSH1 0x4
0x21f ADD
0x220 DUP1
0x221 DUP4
0x222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x237 AND
0x238 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24d AND
0x24e DUP2
0x24f MSTORE
0x250 PUSH1 0x20
0x252 ADD
0x253 DUP3
0x254 DUP2
0x255 MSTORE
0x256 PUSH1 0x20
0x258 ADD
0x259 DUP1
0x25a PUSH1 0x20
0x25c ADD
0x25d DUP3
0x25e DUP2
0x25f SUB
0x260 DUP3
0x261 MSTORE
0x262 PUSH1 0x7
0x264 DUP2
0x265 MSTORE
0x266 PUSH1 0x20
0x268 ADD
0x269 DUP1
0x26a PUSH32 0x436173684f757400000000000000000000000000000000000000000000000000
0x28b DUP2
0x28c MSTORE
0x28d POP
0x28e PUSH1 0x20
0x290 ADD
0x291 SWAP4
0x292 POP
0x293 POP
0x294 POP
0x295 POP
0x296 PUSH1 0x0
0x298 PUSH1 0x40
0x29a MLOAD
0x29b DUP1
0x29c DUP4
0x29d SUB
0x29e DUP2
0x29f PUSH1 0x0
0x2a1 DUP8
0x2a2 DUP1
0x2a3 EXTCODESIZE
0x2a4 ISZERO
0x2a5 ISZERO
0x2a6 PUSH2 0x2ae
0x2a9 JUMPI
---
0x167: V96 = 0x0
0x16a: V97 = CALLER
0x16b: V98 = 0xffffffffffffffffffffffffffffffffffffffff
0x180: V99 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x181: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x196: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x198: M[0x0] = V101
0x199: V102 = 0x20
0x19b: V103 = ADD 0x20 0x0
0x19e: M[0x20] = 0x0
0x19f: V104 = 0x20
0x1a1: V105 = ADD 0x20 0x20
0x1a2: V106 = 0x0
0x1a4: V107 = SHA3 0x0 0x40
0x1a5: V108 = 0x0
0x1a9: V109 = S[V107]
0x1aa: V110 = SUB V109 V43
0x1b0: S[V107] = V110
0x1b2: V111 = 0x2
0x1b4: V112 = 0x0
0x1b7: V113 = S[0x2]
0x1b9: V114 = 0x100
0x1bc: V115 = EXP 0x100 0x0
0x1be: V116 = DIV V113 0x1
0x1bf: V117 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V118 = AND 0xffffffffffffffffffffffffffffffffffffffff V116
0x1d5: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ea: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x1eb: V121 = 0x4c2f04a4
0x1f0: V122 = CALLER
0x1f2: V123 = 0x40
0x1f4: V124 = M[0x40]
0x1f6: V125 = 0xffffffff
0x1fb: V126 = AND 0xffffffff 0x4c2f04a4
0x1fc: V127 = 0x100000000000000000000000000000000000000000000000000000000
0x21a: V128 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4c2f04a4
0x21c: M[V124] = 0x4c2f04a400000000000000000000000000000000000000000000000000000000
0x21d: V129 = 0x4
0x21f: V130 = ADD 0x4 V124
0x222: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x237: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x238: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x24f: M[V130] = V134
0x250: V135 = 0x20
0x252: V136 = ADD 0x20 V130
0x255: M[V136] = V43
0x256: V137 = 0x20
0x258: V138 = ADD 0x20 V136
0x25a: V139 = 0x20
0x25c: V140 = ADD 0x20 V138
0x25f: V141 = SUB V140 V130
0x261: M[V138] = V141
0x262: V142 = 0x7
0x265: M[V140] = 0x7
0x266: V143 = 0x20
0x268: V144 = ADD 0x20 V140
0x26a: V145 = 0x436173684f757400000000000000000000000000000000000000000000000000
0x28c: M[V144] = 0x436173684f757400000000000000000000000000000000000000000000000000
0x28e: V146 = 0x20
0x290: V147 = ADD 0x20 V144
0x296: V148 = 0x0
0x298: V149 = 0x40
0x29a: V150 = M[0x40]
0x29d: V151 = SUB V147 V150
0x29f: V152 = 0x0
0x2a3: V153 = EXTCODESIZE V120
0x2a4: V154 = ISZERO V153
0x2a5: V155 = ISZERO V154
0x2a6: V156 = 0x2ae
0x2a9: JUMPI 0x2ae V155
---
Entry stack: [V11, 0xae, V43]
Stack pops: 1
Stack additions: [S0, V120, 0x4c2f04a4, V147, 0x0, V150, V151, V150, 0x0, V120]
Exit stack: [V11, 0xae, V43, V120, 0x4c2f04a4, V147, 0x0, V150, V151, V150, 0x0, V120]

================================

Block 0x2aa
[0x2aa:0x2ad]
---
Predecessors: [0x166]
Successors: []
---
0x2aa PUSH1 0x0
0x2ac DUP1
0x2ad REVERT
---
0x2aa: V157 = 0x0
0x2ad: REVERT 0x0 0x0
---
Entry stack: [V11, 0xae, V43, V120, 0x4c2f04a4, V147, 0x0, V150, V151, V150, 0x0, V120]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xae, V43, V120, 0x4c2f04a4, V147, 0x0, V150, V151, V150, 0x0, V120]

================================

Block 0x2ae
[0x2ae:0x2ba]
---
Predecessors: [0x166]
Successors: [0x2bb, 0x2bf]
---
0x2ae JUMPDEST
0x2af PUSH2 0x2c6
0x2b2 GAS
0x2b3 SUB
0x2b4 CALL
0x2b5 ISZERO
0x2b6 ISZERO
0x2b7 PUSH2 0x2bf
0x2ba JUMPI
---
0x2ae: JUMPDEST 
0x2af: V158 = 0x2c6
0x2b2: V159 = GAS
0x2b3: V160 = SUB V159 0x2c6
0x2b4: V161 = CALL V160 V120 0x0 V150 V151 V150 0x0
0x2b5: V162 = ISZERO V161
0x2b6: V163 = ISZERO V162
0x2b7: V164 = 0x2bf
0x2ba: JUMPI 0x2bf V163
---
Entry stack: [V11, 0xae, V43, V120, 0x4c2f04a4, V147, 0x0, V150, V151, V150, 0x0, V120]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xae, V43, V120, 0x4c2f04a4, V147]

================================

Block 0x2bb
[0x2bb:0x2be]
---
Predecessors: [0x2ae]
Successors: []
---
0x2bb PUSH1 0x0
0x2bd DUP1
0x2be REVERT
---
0x2bb: V165 = 0x0
0x2be: REVERT 0x0 0x0
---
Entry stack: [V11, 0xae, V43, V120, 0x4c2f04a4, V147]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xae, V43, V120, 0x4c2f04a4, V147]

================================

Block 0x2bf
[0x2bf:0x2c2]
---
Predecessors: [0x2ae]
Successors: [0x2c3]
---
0x2bf JUMPDEST
0x2c0 POP
0x2c1 POP
0x2c2 POP
---
0x2bf: JUMPDEST 
---
Entry stack: [V11, 0xae, V43, V120, 0x4c2f04a4, V147]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xae, V43]

================================

Block 0x2c3
[0x2c3:0x2c3]
---
Predecessors: [0x131, 0x2bf]
Successors: [0x2c4]
---
0x2c3 JUMPDEST
---
0x2c3: JUMPDEST 
---
Entry stack: [V11, 0xae, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xae, V43]

================================

Block 0x2c4
[0x2c4:0x2c6]
---
Predecessors: [0xe9, 0x2c3]
Successors: [0xae]
---
0x2c4 JUMPDEST
0x2c5 POP
0x2c6 JUMP
---
0x2c4: JUMPDEST 
0x2c6: JUMP 0xae
---
Entry stack: [V11, 0xae, V43]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c7
[0x2c7:0x30c]
---
Predecessors: [0xbb]
Successors: [0xc3]
---
0x2c7 JUMPDEST
0x2c8 PUSH1 0x0
0x2ca DUP1
0x2cb PUSH1 0x0
0x2cd CALLER
0x2ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e3 AND
0x2e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f9 AND
0x2fa DUP2
0x2fb MSTORE
0x2fc PUSH1 0x20
0x2fe ADD
0x2ff SWAP1
0x300 DUP2
0x301 MSTORE
0x302 PUSH1 0x20
0x304 ADD
0x305 PUSH1 0x0
0x307 SHA3
0x308 SLOAD
0x309 SWAP1
0x30a POP
0x30b SWAP1
0x30c JUMP
---
0x2c7: JUMPDEST 
0x2c8: V166 = 0x0
0x2cb: V167 = 0x0
0x2cd: V168 = CALLER
0x2ce: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e3: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x2e4: V171 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f9: V172 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x2fb: M[0x0] = V172
0x2fc: V173 = 0x20
0x2fe: V174 = ADD 0x20 0x0
0x301: M[0x20] = 0x0
0x302: V175 = 0x20
0x304: V176 = ADD 0x20 0x20
0x305: V177 = 0x0
0x307: V178 = SHA3 0x0 0x40
0x308: V179 = S[V178]
0x30c: JUMP 0xc3
---
Entry stack: [V11, 0xc3]
Stack pops: 1
Stack additions: [V179]
Exit stack: [V11, V179]

================================

Block 0x30d
[0x30d:0x318]
---
Predecessors: [0xd9]
Successors: [0x319, 0x476]
---
0x30d JUMPDEST
0x30e PUSH1 0x1
0x310 SLOAD
0x311 CALLVALUE
0x312 LT
0x313 ISZERO
0x314 ISZERO
0x315 PUSH2 0x476
0x318 JUMPI
---
0x30d: JUMPDEST 
0x30e: V180 = 0x1
0x310: V181 = S[0x1]
0x311: V182 = CALLVALUE
0x312: V183 = LT V182 V181
0x313: V184 = ISZERO V183
0x314: V185 = ISZERO V184
0x315: V186 = 0x476
0x318: JUMPI 0x476 V185
---
Entry stack: [V11, 0xe1]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe1]

================================

Block 0x319
[0x319:0x45c]
---
Predecessors: [0x30d]
Successors: [0x45d, 0x461]
---
0x319 CALLVALUE
0x31a PUSH1 0x0
0x31c DUP1
0x31d CALLER
0x31e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x333 AND
0x334 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x349 AND
0x34a DUP2
0x34b MSTORE
0x34c PUSH1 0x20
0x34e ADD
0x34f SWAP1
0x350 DUP2
0x351 MSTORE
0x352 PUSH1 0x20
0x354 ADD
0x355 PUSH1 0x0
0x357 SHA3
0x358 PUSH1 0x0
0x35a DUP3
0x35b DUP3
0x35c SLOAD
0x35d ADD
0x35e SWAP3
0x35f POP
0x360 POP
0x361 DUP2
0x362 SWAP1
0x363 SSTORE
0x364 POP
0x365 PUSH1 0x2
0x367 PUSH1 0x0
0x369 SWAP1
0x36a SLOAD
0x36b SWAP1
0x36c PUSH2 0x100
0x36f EXP
0x370 SWAP1
0x371 DIV
0x372 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x387 AND
0x388 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39d AND
0x39e PUSH4 0x4c2f04a4
0x3a3 CALLER
0x3a4 CALLVALUE
0x3a5 PUSH1 0x40
0x3a7 MLOAD
0x3a8 DUP4
0x3a9 PUSH4 0xffffffff
0x3ae AND
0x3af PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3cd MUL
0x3ce DUP2
0x3cf MSTORE
0x3d0 PUSH1 0x4
0x3d2 ADD
0x3d3 DUP1
0x3d4 DUP4
0x3d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ea AND
0x3eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x400 AND
0x401 DUP2
0x402 MSTORE
0x403 PUSH1 0x20
0x405 ADD
0x406 DUP3
0x407 DUP2
0x408 MSTORE
0x409 PUSH1 0x20
0x40b ADD
0x40c DUP1
0x40d PUSH1 0x20
0x40f ADD
0x410 DUP3
0x411 DUP2
0x412 SUB
0x413 DUP3
0x414 MSTORE
0x415 PUSH1 0x7
0x417 DUP2
0x418 MSTORE
0x419 PUSH1 0x20
0x41b ADD
0x41c DUP1
0x41d PUSH32 0x4465706f73697400000000000000000000000000000000000000000000000000
0x43e DUP2
0x43f MSTORE
0x440 POP
0x441 PUSH1 0x20
0x443 ADD
0x444 SWAP4
0x445 POP
0x446 POP
0x447 POP
0x448 POP
0x449 PUSH1 0x0
0x44b PUSH1 0x40
0x44d MLOAD
0x44e DUP1
0x44f DUP4
0x450 SUB
0x451 DUP2
0x452 PUSH1 0x0
0x454 DUP8
0x455 DUP1
0x456 EXTCODESIZE
0x457 ISZERO
0x458 ISZERO
0x459 PUSH2 0x461
0x45c JUMPI
---
0x319: V187 = CALLVALUE
0x31a: V188 = 0x0
0x31d: V189 = CALLER
0x31e: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x333: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x334: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x349: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x34b: M[0x0] = V193
0x34c: V194 = 0x20
0x34e: V195 = ADD 0x20 0x0
0x351: M[0x20] = 0x0
0x352: V196 = 0x20
0x354: V197 = ADD 0x20 0x20
0x355: V198 = 0x0
0x357: V199 = SHA3 0x0 0x40
0x358: V200 = 0x0
0x35c: V201 = S[V199]
0x35d: V202 = ADD V201 V187
0x363: S[V199] = V202
0x365: V203 = 0x2
0x367: V204 = 0x0
0x36a: V205 = S[0x2]
0x36c: V206 = 0x100
0x36f: V207 = EXP 0x100 0x0
0x371: V208 = DIV V205 0x1
0x372: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x387: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x388: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x39d: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x39e: V213 = 0x4c2f04a4
0x3a3: V214 = CALLER
0x3a4: V215 = CALLVALUE
0x3a5: V216 = 0x40
0x3a7: V217 = M[0x40]
0x3a9: V218 = 0xffffffff
0x3ae: V219 = AND 0xffffffff 0x4c2f04a4
0x3af: V220 = 0x100000000000000000000000000000000000000000000000000000000
0x3cd: V221 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4c2f04a4
0x3cf: M[V217] = 0x4c2f04a400000000000000000000000000000000000000000000000000000000
0x3d0: V222 = 0x4
0x3d2: V223 = ADD 0x4 V217
0x3d5: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ea: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V214
0x3eb: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x400: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x402: M[V223] = V227
0x403: V228 = 0x20
0x405: V229 = ADD 0x20 V223
0x408: M[V229] = V215
0x409: V230 = 0x20
0x40b: V231 = ADD 0x20 V229
0x40d: V232 = 0x20
0x40f: V233 = ADD 0x20 V231
0x412: V234 = SUB V233 V223
0x414: M[V231] = V234
0x415: V235 = 0x7
0x418: M[V233] = 0x7
0x419: V236 = 0x20
0x41b: V237 = ADD 0x20 V233
0x41d: V238 = 0x4465706f73697400000000000000000000000000000000000000000000000000
0x43f: M[V237] = 0x4465706f73697400000000000000000000000000000000000000000000000000
0x441: V239 = 0x20
0x443: V240 = ADD 0x20 V237
0x449: V241 = 0x0
0x44b: V242 = 0x40
0x44d: V243 = M[0x40]
0x450: V244 = SUB V240 V243
0x452: V245 = 0x0
0x456: V246 = EXTCODESIZE V212
0x457: V247 = ISZERO V246
0x458: V248 = ISZERO V247
0x459: V249 = 0x461
0x45c: JUMPI 0x461 V248
---
Entry stack: [V11, 0xe1]
Stack pops: 0
Stack additions: [V212, 0x4c2f04a4, V240, 0x0, V243, V244, V243, 0x0, V212]
Exit stack: [V11, 0xe1, V212, 0x4c2f04a4, V240, 0x0, V243, V244, V243, 0x0, V212]

================================

Block 0x45d
[0x45d:0x460]
---
Predecessors: [0x319]
Successors: []
---
0x45d PUSH1 0x0
0x45f DUP1
0x460 REVERT
---
0x45d: V250 = 0x0
0x460: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe1, V212, 0x4c2f04a4, V240, 0x0, V243, V244, V243, 0x0, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe1, V212, 0x4c2f04a4, V240, 0x0, V243, V244, V243, 0x0, V212]

================================

Block 0x461
[0x461:0x46d]
---
Predecessors: [0x319]
Successors: [0x46e, 0x472]
---
0x461 JUMPDEST
0x462 PUSH2 0x2c6
0x465 GAS
0x466 SUB
0x467 CALL
0x468 ISZERO
0x469 ISZERO
0x46a PUSH2 0x472
0x46d JUMPI
---
0x461: JUMPDEST 
0x462: V251 = 0x2c6
0x465: V252 = GAS
0x466: V253 = SUB V252 0x2c6
0x467: V254 = CALL V253 V212 0x0 V243 V244 V243 0x0
0x468: V255 = ISZERO V254
0x469: V256 = ISZERO V255
0x46a: V257 = 0x472
0x46d: JUMPI 0x472 V256
---
Entry stack: [V11, 0xe1, V212, 0x4c2f04a4, V240, 0x0, V243, V244, V243, 0x0, V212]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xe1, V212, 0x4c2f04a4, V240]

================================

Block 0x46e
[0x46e:0x471]
---
Predecessors: [0x461]
Successors: []
---
0x46e PUSH1 0x0
0x470 DUP1
0x471 REVERT
---
0x46e: V258 = 0x0
0x471: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe1, V212, 0x4c2f04a4, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe1, V212, 0x4c2f04a4, V240]

================================

Block 0x472
[0x472:0x475]
---
Predecessors: [0x461]
Successors: [0x476]
---
0x472 JUMPDEST
0x473 POP
0x474 POP
0x475 POP
---
0x472: JUMPDEST 
---
Entry stack: [V11, 0xe1, V212, 0x4c2f04a4, V240]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xe1]

================================

Block 0x476
[0x476:0x477]
---
Predecessors: [0x30d, 0x472]
Successors: [0xe1]
---
0x476 JUMPDEST
0x477 JUMP
---
0x476: JUMPDEST 
0x477: JUMP 0xe1
---
Entry stack: [V11, 0xe1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x478
[0x478:0x4a3]
---
Predecessors: []
Successors: []
---
0x478 STOP
0x479 LOG1
0x47a PUSH6 0x627a7a723058
0x481 SHA3
0x482 PUSH3 0x98f4f2
0x486 ORIGIN
0x487 MISSING 0x4f
0x488 JUMPDEST
0x489 PUSH14 0xf2368ba6284066f10810d15a8af8
0x498 MISSING 0xa9
0x499 MISSING 0x4c
0x49a MISSING 0xe4
0x49b DELEGATECALL
0x49c MISSING 0xd4
0x49d MISSING 0xfb
0x49e MISSING 0xb8
0x49f MISSING 0xbe
0x4a0 MISSING 0xb7
0x4a1 MISSING 0x29
0x4a2 STOP
0x4a3 MISSING 0x29
---
0x478: STOP 
0x479: LOG S0 S1 S2
0x47a: V259 = 0x627a7a723058
0x481: V260 = SHA3 0x627a7a723058 S3
0x482: V261 = 0x98f4f2
0x486: V262 = ORIGIN
0x487: MISSING 0x4f
0x488: JUMPDEST 
0x489: V263 = 0xf2368ba6284066f10810d15a8af8
0x498: MISSING 0xa9
0x499: MISSING 0x4c
0x49a: MISSING 0xe4
0x49b: V264 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x49c: MISSING 0xd4
0x49d: MISSING 0xfb
0x49e: MISSING 0xb8
0x49f: MISSING 0xbe
0x4a0: MISSING 0xb7
0x4a1: MISSING 0x29
0x4a2: STOP 
0x4a3: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V262, 0x98f4f2, V260, 0xf2368ba6284066f10810d15a8af8, V264]
Exit stack: []

================================

Function 0:
Public function signature: 0x11bcd830
Entry block: 0x64
Exit block: 0x77
Body: 0x64, 0x6b, 0x6f, 0x77, 0xe3

Function 1:
Public function signature: 0x9ffa0711
Entry block: 0x8d
Exit block: 0x2bb
Body: 0x8d, 0x94, 0x98, 0xae, 0xe9, 0x131, 0x166, 0x2aa, 0x2ae, 0x2bb, 0x2bf, 0x2c3, 0x2c4

Function 2:
Public function signature: 0xbf8869b5
Entry block: 0xb0
Exit block: 0xc3
Body: 0xb0, 0xb7, 0xbb, 0xc3, 0x2c7

Function 3:
Public function signature: 0xed21248c
Entry block: 0xd9
Exit block: 0x46e
Body: 0xd9, 0xe1, 0x30d, 0x319, 0x45d, 0x461, 0x46e, 0x472, 0x476

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

