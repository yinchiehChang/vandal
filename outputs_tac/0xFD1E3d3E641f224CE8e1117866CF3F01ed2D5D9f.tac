Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x7c]
---
0x41 DUP1
0x42 PUSH4 0x4ba4c16b
0x47 EQ
0x48 PUSH2 0x7c
0x4b JUMPI
---
0x42: V15 = 0x4ba4c16b
0x47: V16 = EQ 0x4ba4c16b V11
0x48: V17 = 0x7c
0x4b: JUMPI 0x7c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x97]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0x97
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0x97
0x56: JUMPI 0x97 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xec]
---
0x57 DUP1
0x58 PUSH4 0xec824ca9
0x5d EQ
0x5e PUSH2 0xec
0x61 JUMPI
---
0x58: V21 = 0xec824ca9
0x5d: V22 = EQ 0xec824ca9 V11
0x5e: V23 = 0xec
0x61: JUMPI 0xec V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6d]
---
Predecessors: [0xd]
Successors: [0x6e, 0x72]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 ISZERO
0x6a PUSH2 0x72
0x6d JUMPI
---
0x67: JUMPDEST 
0x68: V25 = CALLVALUE
0x69: V26 = ISZERO V25
0x6a: V27 = 0x72
0x6d: JUMPI 0x72 V26
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x71]
---
Predecessors: [0x67]
Successors: []
---
0x6e PUSH1 0x0
0x70 DUP1
0x71 REVERT
---
0x6e: V28 = 0x0
0x71: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x79]
---
Predecessors: [0x67]
Successors: [0x12e]
---
0x72 JUMPDEST
0x73 PUSH2 0x7a
0x76 PUSH2 0x12e
0x79 JUMP
---
0x72: JUMPDEST 
0x73: V29 = 0x7a
0x76: V30 = 0x12e
0x79: JUMP 0x12e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7a]
Exit stack: [V11, 0x7a]

================================

Block 0x7a
[0x7a:0x7b]
---
Predecessors: [0x201]
Successors: []
---
0x7a JUMPDEST
0x7b STOP
---
0x7a: JUMPDEST 
0x7b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7c
[0x7c:0x94]
---
Predecessors: [0x41]
Successors: [0x203]
---
0x7c JUMPDEST
0x7d PUSH2 0x95
0x80 PUSH1 0x4
0x82 DUP1
0x83 DUP1
0x84 CALLDATALOAD
0x85 PUSH1 0xff
0x87 AND
0x88 SWAP1
0x89 PUSH1 0x20
0x8b ADD
0x8c SWAP1
0x8d SWAP2
0x8e SWAP1
0x8f POP
0x90 POP
0x91 PUSH2 0x203
0x94 JUMP
---
0x7c: JUMPDEST 
0x7d: V31 = 0x95
0x80: V32 = 0x4
0x84: V33 = CALLDATALOAD 0x4
0x85: V34 = 0xff
0x87: V35 = AND 0xff V33
0x89: V36 = 0x20
0x8b: V37 = ADD 0x20 0x4
0x91: V38 = 0x203
0x94: JUMP 0x203
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x95, V35]
Exit stack: [V11, 0x95, V35]

================================

Block 0x95
[0x95:0x96]
---
Predecessors: [0x299]
Successors: []
---
0x95 JUMPDEST
0x96 STOP
---
0x95: JUMPDEST 
0x96: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x97
[0x97:0x9d]
---
Predecessors: [0x4c]
Successors: [0x9e, 0xa2]
---
0x97 JUMPDEST
0x98 CALLVALUE
0x99 ISZERO
0x9a PUSH2 0xa2
0x9d JUMPI
---
0x97: JUMPDEST 
0x98: V39 = CALLVALUE
0x99: V40 = ISZERO V39
0x9a: V41 = 0xa2
0x9d: JUMPI 0xa2 V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9e
[0x9e:0xa1]
---
Predecessors: [0x97]
Successors: []
---
0x9e PUSH1 0x0
0xa0 DUP1
0xa1 REVERT
---
0x9e: V42 = 0x0
0xa1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa2
[0xa2:0xa9]
---
Predecessors: [0x97]
Successors: [0x29c]
---
0xa2 JUMPDEST
0xa3 PUSH2 0xaa
0xa6 PUSH2 0x29c
0xa9 JUMP
---
0xa2: JUMPDEST 
0xa3: V43 = 0xaa
0xa6: V44 = 0x29c
0xa9: JUMP 0x29c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xaa]
Exit stack: [V11, 0xaa]

================================

Block 0xaa
[0xaa:0xeb]
---
Predecessors: [0x29c]
Successors: []
---
0xaa JUMPDEST
0xab PUSH1 0x40
0xad MLOAD
0xae DUP1
0xaf DUP3
0xb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5 AND
0xc6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb AND
0xdc DUP2
0xdd MSTORE
0xde PUSH1 0x20
0xe0 ADD
0xe1 SWAP2
0xe2 POP
0xe3 POP
0xe4 PUSH1 0x40
0xe6 MLOAD
0xe7 DUP1
0xe8 SWAP2
0xe9 SUB
0xea SWAP1
0xeb RETURN
---
0xaa: JUMPDEST 
0xab: V45 = 0x40
0xad: V46 = M[0x40]
0xb0: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0xc6: V49 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb: V50 = AND 0xffffffffffffffffffffffffffffffffffffffff V48
0xdd: M[V46] = V50
0xde: V51 = 0x20
0xe0: V52 = ADD 0x20 V46
0xe4: V53 = 0x40
0xe6: V54 = M[0x40]
0xe9: V55 = SUB V52 V54
0xeb: RETURN V54 V55
---
Entry stack: [V11, 0xaa, V175]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xaa]

================================

Block 0xec
[0xec:0xf2]
---
Predecessors: [0x57]
Successors: [0xf3, 0xf7]
---
0xec JUMPDEST
0xed CALLVALUE
0xee ISZERO
0xef PUSH2 0xf7
0xf2 JUMPI
---
0xec: JUMPDEST 
0xed: V56 = CALLVALUE
0xee: V57 = ISZERO V56
0xef: V58 = 0xf7
0xf2: JUMPI 0xf7 V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf3
[0xf3:0xf6]
---
Predecessors: [0xec]
Successors: []
---
0xf3 PUSH1 0x0
0xf5 DUP1
0xf6 REVERT
---
0xf3: V59 = 0x0
0xf6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf7
[0xf7:0x10f]
---
Predecessors: [0xec]
Successors: [0x2c1]
---
0xf7 JUMPDEST
0xf8 PUSH2 0x110
0xfb PUSH1 0x4
0xfd DUP1
0xfe DUP1
0xff CALLDATALOAD
0x100 PUSH1 0xff
0x102 AND
0x103 SWAP1
0x104 PUSH1 0x20
0x106 ADD
0x107 SWAP1
0x108 SWAP2
0x109 SWAP1
0x10a POP
0x10b POP
0x10c PUSH2 0x2c1
0x10f JUMP
---
0xf7: JUMPDEST 
0xf8: V60 = 0x110
0xfb: V61 = 0x4
0xff: V62 = CALLDATALOAD 0x4
0x100: V63 = 0xff
0x102: V64 = AND 0xff V62
0x104: V65 = 0x20
0x106: V66 = ADD 0x20 0x4
0x10c: V67 = 0x2c1
0x10f: JUMP 0x2c1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x110, V64]
Exit stack: [V11, 0x110, V64]

================================

Block 0x110
[0x110:0x12d]
---
Predecessors: [0x2c1]
Successors: []
---
0x110 JUMPDEST
0x111 PUSH1 0x40
0x113 MLOAD
0x114 DUP1
0x115 DUP3
0x116 PUSH1 0x0
0x118 NOT
0x119 AND
0x11a PUSH1 0x0
0x11c NOT
0x11d AND
0x11e DUP2
0x11f MSTORE
0x120 PUSH1 0x20
0x122 ADD
0x123 SWAP2
0x124 POP
0x125 POP
0x126 PUSH1 0x40
0x128 MLOAD
0x129 DUP1
0x12a SWAP2
0x12b SUB
0x12c SWAP1
0x12d RETURN
---
0x110: JUMPDEST 
0x111: V68 = 0x40
0x113: V69 = M[0x40]
0x116: V70 = 0x0
0x118: V71 = NOT 0x0
0x119: V72 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V190
0x11a: V73 = 0x0
0x11c: V74 = NOT 0x0
0x11d: V75 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V72
0x11f: M[V69] = V75
0x120: V76 = 0x20
0x122: V77 = ADD 0x20 V69
0x126: V78 = 0x40
0x128: V79 = M[0x40]
0x12b: V80 = SUB V77 V79
0x12d: RETURN V79 V80
---
Entry stack: [V11, 0x95, V35, S1, V190]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x95, V35, S1]

================================

Block 0x12e
[0x12e:0x184]
---
Predecessors: [0x72]
Successors: [0x185, 0x189]
---
0x12e JUMPDEST
0x12f PUSH1 0x0
0x131 DUP1
0x132 SWAP1
0x133 SLOAD
0x134 SWAP1
0x135 PUSH2 0x100
0x138 EXP
0x139 SWAP1
0x13a DIV
0x13b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x150 AND
0x151 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x166 AND
0x167 CALLER
0x168 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17d AND
0x17e EQ
0x17f ISZERO
0x180 ISZERO
0x181 PUSH2 0x189
0x184 JUMPI
---
0x12e: JUMPDEST 
0x12f: V81 = 0x0
0x133: V82 = S[0x0]
0x135: V83 = 0x100
0x138: V84 = EXP 0x100 0x0
0x13a: V85 = DIV V82 0x1
0x13b: V86 = 0xffffffffffffffffffffffffffffffffffffffff
0x150: V87 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x151: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x166: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x167: V90 = CALLER
0x168: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x17d: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x17e: V93 = EQ V92 V89
0x17f: V94 = ISZERO V93
0x180: V95 = ISZERO V94
0x181: V96 = 0x189
0x184: JUMPI 0x189 V95
---
Entry stack: [V11, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7a]

================================

Block 0x185
[0x185:0x188]
---
Predecessors: [0x12e]
Successors: []
---
0x185 PUSH1 0x0
0x187 DUP1
0x188 REVERT
---
0x185: V97 = 0x0
0x188: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7a]

================================

Block 0x189
[0x189:0x1fc]
---
Predecessors: [0x12e]
Successors: [0x1fd, 0x201]
---
0x189 JUMPDEST
0x18a PUSH1 0x0
0x18c DUP1
0x18d SWAP1
0x18e SLOAD
0x18f SWAP1
0x190 PUSH2 0x100
0x193 EXP
0x194 SWAP1
0x195 DIV
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c1 AND
0x1c2 PUSH2 0x8fc
0x1c5 ADDRESS
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc BALANCE
0x1dd SWAP1
0x1de DUP2
0x1df ISZERO
0x1e0 MUL
0x1e1 SWAP1
0x1e2 PUSH1 0x40
0x1e4 MLOAD
0x1e5 PUSH1 0x0
0x1e7 PUSH1 0x40
0x1e9 MLOAD
0x1ea DUP1
0x1eb DUP4
0x1ec SUB
0x1ed DUP2
0x1ee DUP6
0x1ef DUP9
0x1f0 DUP9
0x1f1 CALL
0x1f2 SWAP4
0x1f3 POP
0x1f4 POP
0x1f5 POP
0x1f6 POP
0x1f7 ISZERO
0x1f8 ISZERO
0x1f9 PUSH2 0x201
0x1fc JUMPI
---
0x189: JUMPDEST 
0x18a: V98 = 0x0
0x18e: V99 = S[0x0]
0x190: V100 = 0x100
0x193: V101 = EXP 0x100 0x0
0x195: V102 = DIV V99 0x1
0x196: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1ac: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c1: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1c2: V107 = 0x8fc
0x1c5: V108 = ADDRESS
0x1c6: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1dc: V111 = BALANCE V110
0x1df: V112 = ISZERO V111
0x1e0: V113 = MUL V112 0x8fc
0x1e2: V114 = 0x40
0x1e4: V115 = M[0x40]
0x1e5: V116 = 0x0
0x1e7: V117 = 0x40
0x1e9: V118 = M[0x40]
0x1ec: V119 = SUB V115 V118
0x1f1: V120 = CALL V113 V106 V111 V118 V119 V118 0x0
0x1f7: V121 = ISZERO V120
0x1f8: V122 = ISZERO V121
0x1f9: V123 = 0x201
0x1fc: JUMPI 0x201 V122
---
Entry stack: [V11, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7a]

================================

Block 0x1fd
[0x1fd:0x200]
---
Predecessors: [0x189]
Successors: []
---
0x1fd PUSH1 0x0
0x1ff DUP1
0x200 REVERT
---
0x1fd: V124 = 0x0
0x200: REVERT 0x0 0x0
---
Entry stack: [V11, 0x7a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x7a]

================================

Block 0x201
[0x201:0x202]
---
Predecessors: [0x189]
Successors: [0x7a]
---
0x201 JUMPDEST
0x202 JUMP
---
0x201: JUMPDEST 
0x202: JUMP 0x7a
---
Entry stack: [V11, 0x7a]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x203
[0x203:0x212]
---
Predecessors: [0x7c]
Successors: [0x2c1]
---
0x203 JUMPDEST
0x204 PUSH1 0x1
0x206 SLOAD
0x207 PUSH1 0x0
0x209 NOT
0x20a AND
0x20b PUSH2 0x213
0x20e DUP3
0x20f PUSH2 0x2c1
0x212 JUMP
---
0x203: JUMPDEST 
0x204: V125 = 0x1
0x206: V126 = S[0x1]
0x207: V127 = 0x0
0x209: V128 = NOT 0x0
0x20a: V129 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V126
0x20b: V130 = 0x213
0x20f: V131 = 0x2c1
0x212: JUMP 0x2c1
---
Entry stack: [V11, 0x95, V35]
Stack pops: 1
Stack additions: [S0, V129, 0x213, S0]
Exit stack: [V11, 0x95, V35, V129, 0x213, V35]

================================

Block 0x213
[0x213:0x21e]
---
Predecessors: [0x2c1]
Successors: [0x21f, 0x23a]
---
0x213 JUMPDEST
0x214 PUSH1 0x0
0x216 NOT
0x217 AND
0x218 EQ
0x219 DUP1
0x21a ISZERO
0x21b PUSH2 0x23a
0x21e JUMPI
---
0x213: JUMPDEST 
0x214: V132 = 0x0
0x216: V133 = NOT 0x0
0x217: V134 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V190
0x218: V135 = EQ V134 S1
0x21a: V136 = ISZERO V135
0x21b: V137 = 0x23a
0x21e: JUMPI 0x23a V136
---
Entry stack: [V11, 0x95, V35, S1, V190]
Stack pops: 2
Stack additions: [V135]
Exit stack: [V11, 0x95, V35, V135]

================================

Block 0x21f
[0x21f:0x239]
---
Predecessors: [0x213]
Successors: [0x23a]
---
0x21f POP
0x220 ADDRESS
0x221 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x236 AND
0x237 BALANCE
0x238 CALLVALUE
0x239 GT
---
0x220: V138 = ADDRESS
0x221: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x236: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x237: V141 = BALANCE V140
0x238: V142 = CALLVALUE
0x239: V143 = GT V142 V141
---
Entry stack: [V11, 0x95, V35, V135]
Stack pops: 1
Stack additions: [V143]
Exit stack: [V11, 0x95, V35, V143]

================================

Block 0x23a
[0x23a:0x23f]
---
Predecessors: [0x213, 0x21f]
Successors: [0x240, 0x299]
---
0x23a JUMPDEST
0x23b ISZERO
0x23c PUSH2 0x299
0x23f JUMPI
---
0x23a: JUMPDEST 
0x23b: V144 = ISZERO S0
0x23c: V145 = 0x299
0x23f: JUMPI 0x299 V144
---
Entry stack: [V11, 0x95, V35, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x95, V35]

================================

Block 0x240
[0x240:0x293]
---
Predecessors: [0x23a]
Successors: [0x294, 0x298]
---
0x240 CALLER
0x241 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x256 AND
0x257 PUSH2 0x8fc
0x25a CALLVALUE
0x25b ADDRESS
0x25c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x271 AND
0x272 BALANCE
0x273 ADD
0x274 SWAP1
0x275 DUP2
0x276 ISZERO
0x277 MUL
0x278 SWAP1
0x279 PUSH1 0x40
0x27b MLOAD
0x27c PUSH1 0x0
0x27e PUSH1 0x40
0x280 MLOAD
0x281 DUP1
0x282 DUP4
0x283 SUB
0x284 DUP2
0x285 DUP6
0x286 DUP9
0x287 DUP9
0x288 CALL
0x289 SWAP4
0x28a POP
0x28b POP
0x28c POP
0x28d POP
0x28e ISZERO
0x28f ISZERO
0x290 PUSH2 0x298
0x293 JUMPI
---
0x240: V146 = CALLER
0x241: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x256: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x257: V149 = 0x8fc
0x25a: V150 = CALLVALUE
0x25b: V151 = ADDRESS
0x25c: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x271: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x272: V154 = BALANCE V153
0x273: V155 = ADD V154 V150
0x276: V156 = ISZERO V155
0x277: V157 = MUL V156 0x8fc
0x279: V158 = 0x40
0x27b: V159 = M[0x40]
0x27c: V160 = 0x0
0x27e: V161 = 0x40
0x280: V162 = M[0x40]
0x283: V163 = SUB V159 V162
0x288: V164 = CALL V157 V148 V155 V162 V163 V162 0x0
0x28e: V165 = ISZERO V164
0x28f: V166 = ISZERO V165
0x290: V167 = 0x298
0x293: JUMPI 0x298 V166
---
Entry stack: [V11, 0x95, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95, V35]

================================

Block 0x294
[0x294:0x297]
---
Predecessors: [0x240]
Successors: []
---
0x294 PUSH1 0x0
0x296 DUP1
0x297 REVERT
---
0x294: V168 = 0x0
0x297: REVERT 0x0 0x0
---
Entry stack: [V11, 0x95, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95, V35]

================================

Block 0x298
[0x298:0x298]
---
Predecessors: [0x240]
Successors: [0x299]
---
0x298 JUMPDEST
---
0x298: JUMPDEST 
---
Entry stack: [V11, 0x95, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x95, V35]

================================

Block 0x299
[0x299:0x29b]
---
Predecessors: [0x23a, 0x298]
Successors: [0x95]
---
0x299 JUMPDEST
0x29a POP
0x29b JUMP
---
0x299: JUMPDEST 
0x29b: JUMP 0x95
---
Entry stack: [V11, 0x95, V35]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x29c
[0x29c:0x2c0]
---
Predecessors: [0xa2]
Successors: [0xaa]
---
0x29c JUMPDEST
0x29d PUSH1 0x0
0x29f DUP1
0x2a0 SWAP1
0x2a1 SLOAD
0x2a2 SWAP1
0x2a3 PUSH2 0x100
0x2a6 EXP
0x2a7 SWAP1
0x2a8 DIV
0x2a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2be AND
0x2bf DUP2
0x2c0 JUMP
---
0x29c: JUMPDEST 
0x29d: V169 = 0x0
0x2a1: V170 = S[0x0]
0x2a3: V171 = 0x100
0x2a6: V172 = EXP 0x100 0x0
0x2a8: V173 = DIV V170 0x1
0x2a9: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x2be: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x2c0: JUMP 0xaa
---
Entry stack: [V11, 0xaa]
Stack pops: 1
Stack additions: [S0, V175]
Exit stack: [V11, 0xaa, V175]

================================

Block 0x2c1
[0x2c1:0x307]
---
Predecessors: [0xf7, 0x203]
Successors: [0x110, 0x213]
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x0
0x2c4 DUP2
0x2c5 PUSH1 0x40
0x2c7 MLOAD
0x2c8 DUP1
0x2c9 DUP3
0x2ca PUSH1 0xff
0x2cc AND
0x2cd PUSH1 0xff
0x2cf AND
0x2d0 PUSH32 0x100000000000000000000000000000000000000000000000000000000000000
0x2f1 MUL
0x2f2 DUP2
0x2f3 MSTORE
0x2f4 PUSH1 0x1
0x2f6 ADD
0x2f7 SWAP2
0x2f8 POP
0x2f9 POP
0x2fa PUSH1 0x40
0x2fc MLOAD
0x2fd DUP1
0x2fe SWAP2
0x2ff SUB
0x300 SWAP1
0x301 SHA3
0x302 SWAP1
0x303 POP
0x304 SWAP2
0x305 SWAP1
0x306 POP
0x307 JUMP
---
0x2c1: JUMPDEST 
0x2c2: V176 = 0x0
0x2c5: V177 = 0x40
0x2c7: V178 = M[0x40]
0x2ca: V179 = 0xff
0x2cc: V180 = AND 0xff S0
0x2cd: V181 = 0xff
0x2cf: V182 = AND 0xff V180
0x2d0: V183 = 0x100000000000000000000000000000000000000000000000000000000000000
0x2f1: V184 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V182
0x2f3: M[V178] = V184
0x2f4: V185 = 0x1
0x2f6: V186 = ADD 0x1 V178
0x2fa: V187 = 0x40
0x2fc: V188 = M[0x40]
0x2ff: V189 = SUB V186 V188
0x301: V190 = SHA3 V188 V189
0x307: JUMP {0x110, 0x213}
---
Entry stack: [V11, 0x95, V35, S2, {0x110, 0x213}, S0]
Stack pops: 2
Stack additions: [V190]
Exit stack: [V11, 0x95, V35, S2, V190]

================================

Block 0x308
[0x308:0x33a]
---
Predecessors: []
Successors: []
---
0x308 STOP
0x309 LOG1
0x30a PUSH6 0x627a7a723058
0x311 SHA3
0x312 SWAP10
0x313 MISSING 0xdc
0x314 MISSING 0xe6
0x315 DUP10
0x316 MISSING 0xab
0x317 MISSING 0xed
0x318 MISSING 0x5c
0x319 MISSING 0xca
0x31a MISSING 0xf9
0x31b MULMOD
0x31c MISSING 0xe0
0x31d MISSING 0x2f
0x31e MISSING 0xd1
0x31f MLOAD
0x320 MISSING 0xd6
0x321 SELFDESTRUCT
0x322 SHL
0x323 DUP15
0x324 PUSH22 0x9c8d6f73f9305e68a6ff5416410029
---
0x308: STOP 
0x309: LOG S0 S1 S2
0x30a: V191 = 0x627a7a723058
0x311: V192 = SHA3 0x627a7a723058 S3
0x313: MISSING 0xdc
0x314: MISSING 0xe6
0x316: MISSING 0xab
0x317: MISSING 0xed
0x318: MISSING 0x5c
0x319: MISSING 0xca
0x31a: MISSING 0xf9
0x31b: V193 = MULMOD S0 S1 S2
0x31c: MISSING 0xe0
0x31d: MISSING 0x2f
0x31e: MISSING 0xd1
0x31f: V194 = M[S0]
0x320: MISSING 0xd6
0x321: SELFDESTRUCT S0
0x322: V195 = SHL S0 S1
0x324: V196 = 0x9c8d6f73f9305e68a6ff5416410029
---
Entry stack: []
Stack pops: 0
Stack additions: [S13, S4, S5, S6, S7, S8, S9, S10, S11, S12, V192, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, V193, V194, 0x9c8d6f73f9305e68a6ff5416410029, S15, V195, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x67
Exit block: 0x7a
Body: 0x67, 0x6e, 0x72, 0x7a, 0x12e, 0x185, 0x189, 0x1fd, 0x201

Function 1:
Public function signature: 0x4ba4c16b
Entry block: 0x7c
Exit block: 0x294
Body: 0x7c, 0x95, 0x203, 0x213, 0x21f, 0x23a, 0x240, 0x294, 0x298, 0x299

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0x97
Exit block: 0xaa
Body: 0x97, 0x9e, 0xa2, 0xaa, 0x29c

Function 3:
Public function signature: 0xec824ca9
Entry block: 0xec
Exit block: 0x110
Body: 0xec, 0xf3, 0xf7, 0x110

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

