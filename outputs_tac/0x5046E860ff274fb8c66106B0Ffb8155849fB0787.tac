Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xdb]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xdb
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xdb
0xc: JUMPI 0xdb V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xe0]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0xe0
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0xe0
0x40: JUMPI 0xe0 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x16e]
---
0x41 DUP1
0x42 PUSH4 0x95ea7b3
0x47 EQ
0x48 PUSH2 0x16e
0x4b JUMPI
---
0x42: V15 = 0x95ea7b3
0x47: V16 = EQ 0x95ea7b3 V11
0x48: V17 = 0x16e
0x4b: JUMPI 0x16e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x1c8]
---
0x4c DUP1
0x4d PUSH4 0x18160ddd
0x52 EQ
0x53 PUSH2 0x1c8
0x56 JUMPI
---
0x4d: V18 = 0x18160ddd
0x52: V19 = EQ 0x18160ddd V11
0x53: V20 = 0x1c8
0x56: JUMPI 0x1c8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1f1]
---
0x57 DUP1
0x58 PUSH4 0x23b872dd
0x5d EQ
0x5e PUSH2 0x1f1
0x61 JUMPI
---
0x58: V21 = 0x23b872dd
0x5d: V22 = EQ 0x23b872dd V11
0x5e: V23 = 0x1f1
0x61: JUMPI 0x1f1 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x26a]
---
0x62 DUP1
0x63 PUSH4 0x313ce567
0x68 EQ
0x69 PUSH2 0x26a
0x6c JUMPI
---
0x63: V24 = 0x313ce567
0x68: V25 = EQ 0x313ce567 V11
0x69: V26 = 0x26a
0x6c: JUMPI 0x26a V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x299]
---
0x6d DUP1
0x6e PUSH4 0x4d2301cc
0x73 EQ
0x74 PUSH2 0x299
0x77 JUMPI
---
0x6e: V27 = 0x4d2301cc
0x73: V28 = EQ 0x4d2301cc V11
0x74: V29 = 0x299
0x77: JUMPI 0x299 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x2e6]
---
0x78 DUP1
0x79 PUSH4 0x55491da8
0x7e EQ
0x7f PUSH2 0x2e6
0x82 JUMPI
---
0x79: V30 = 0x55491da8
0x7e: V31 = EQ 0x55491da8 V11
0x7f: V32 = 0x2e6
0x82: JUMPI 0x2e6 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x352]
---
0x83 DUP1
0x84 PUSH4 0x70a08231
0x89 EQ
0x8a PUSH2 0x352
0x8d JUMPI
---
0x84: V33 = 0x70a08231
0x89: V34 = EQ 0x70a08231 V11
0x8a: V35 = 0x352
0x8d: JUMPI 0x352 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x39f]
---
0x8e DUP1
0x8f PUSH4 0x95d89b41
0x94 EQ
0x95 PUSH2 0x39f
0x98 JUMPI
---
0x8f: V36 = 0x95d89b41
0x94: V37 = EQ 0x95d89b41 V11
0x95: V38 = 0x39f
0x98: JUMPI 0x39f V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x42d]
---
0x99 DUP1
0x9a PUSH4 0x9b1cbccc
0x9f EQ
0xa0 PUSH2 0x42d
0xa3 JUMPI
---
0x9a: V39 = 0x9b1cbccc
0x9f: V40 = EQ 0x9b1cbccc V11
0xa0: V41 = 0x42d
0xa3: JUMPI 0x42d V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x45a]
---
0xa4 DUP1
0xa5 PUSH4 0xa9059cbb
0xaa EQ
0xab PUSH2 0x45a
0xae JUMPI
---
0xa5: V42 = 0xa9059cbb
0xaa: V43 = EQ 0xa9059cbb V11
0xab: V44 = 0x45a
0xae: JUMPI 0x45a V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x4b4]
---
0xaf DUP1
0xb0 PUSH4 0xc108d542
0xb5 EQ
0xb6 PUSH2 0x4b4
0xb9 JUMPI
---
0xb0: V45 = 0xc108d542
0xb5: V46 = EQ 0xc108d542 V11
0xb6: V47 = 0x4b4
0xb9: JUMPI 0x4b4 V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc4]
---
Predecessors: [0xaf]
Successors: [0xc5, 0x4e1]
---
0xba DUP1
0xbb PUSH4 0xdd62ed3e
0xc0 EQ
0xc1 PUSH2 0x4e1
0xc4 JUMPI
---
0xbb: V48 = 0xdd62ed3e
0xc0: V49 = EQ 0xdd62ed3e V11
0xc1: V50 = 0x4e1
0xc4: JUMPI 0x4e1 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc5
[0xc5:0xcf]
---
Predecessors: [0xba]
Successors: [0xd0, 0x54d]
---
0xc5 DUP1
0xc6 PUSH4 0xe58fc54c
0xcb EQ
0xcc PUSH2 0x54d
0xcf JUMPI
---
0xc6: V51 = 0xe58fc54c
0xcb: V52 = EQ 0xe58fc54c V11
0xcc: V53 = 0x54d
0xcf: JUMPI 0x54d V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xd0
[0xd0:0xda]
---
Predecessors: [0xc5]
Successors: [0xdb, 0x59e]
---
0xd0 DUP1
0xd1 PUSH4 0xf2fde38b
0xd6 EQ
0xd7 PUSH2 0x59e
0xda JUMPI
---
0xd1: V54 = 0xf2fde38b
0xd6: V55 = EQ 0xf2fde38b V11
0xd7: V56 = 0x59e
0xda: JUMPI 0x59e V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xdb
[0xdb:0xdf]
---
Predecessors: [0x0, 0xd0]
Successors: []
---
0xdb JUMPDEST
0xdc PUSH1 0x0
0xde DUP1
0xdf REVERT
---
0xdb: JUMPDEST 
0xdc: V57 = 0x0
0xdf: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe0
[0xe0:0xe6]
---
Predecessors: [0xd]
Successors: [0xe7, 0xeb]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 ISZERO
0xe3 PUSH2 0xeb
0xe6 JUMPI
---
0xe0: JUMPDEST 
0xe1: V58 = CALLVALUE
0xe2: V59 = ISZERO V58
0xe3: V60 = 0xeb
0xe6: JUMPI 0xeb V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe7
[0xe7:0xea]
---
Predecessors: [0xe0]
Successors: []
---
0xe7 PUSH1 0x0
0xe9 DUP1
0xea REVERT
---
0xe7: V61 = 0x0
0xea: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xeb
[0xeb:0xf2]
---
Predecessors: [0xe0]
Successors: [0x5d7]
---
0xeb JUMPDEST
0xec PUSH2 0xf3
0xef PUSH2 0x5d7
0xf2 JUMP
---
0xeb: JUMPDEST 
0xec: V62 = 0xf3
0xef: V63 = 0x5d7
0xf2: JUMP 0x5d7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xf3]
Exit stack: [V11, 0xf3]

================================

Block 0xf3
[0xf3:0x117]
---
Predecessors: [0x5df, 0xd7f]
Successors: [0x118]
---
0xf3 JUMPDEST
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP1
0xf8 DUP1
0xf9 PUSH1 0x20
0xfb ADD
0xfc DUP3
0xfd DUP2
0xfe SUB
0xff DUP3
0x100 MSTORE
0x101 DUP4
0x102 DUP2
0x103 DUP2
0x104 MLOAD
0x105 DUP2
0x106 MSTORE
0x107 PUSH1 0x20
0x109 ADD
0x10a SWAP2
0x10b POP
0x10c DUP1
0x10d MLOAD
0x10e SWAP1
0x10f PUSH1 0x20
0x111 ADD
0x112 SWAP1
0x113 DUP1
0x114 DUP4
0x115 DUP4
0x116 PUSH1 0x0
---
0xf3: JUMPDEST 
0xf4: V64 = 0x40
0xf6: V65 = M[0x40]
0xf9: V66 = 0x20
0xfb: V67 = ADD 0x20 V65
0xfe: V68 = SUB V67 V65
0x100: M[V65] = V68
0x104: V69 = M[S0]
0x106: M[V67] = V69
0x107: V70 = 0x20
0x109: V71 = ADD 0x20 V67
0x10d: V72 = M[S0]
0x10f: V73 = 0x20
0x111: V74 = ADD 0x20 S0
0x116: V75 = 0x0
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [S0, V65, V65, V71, V74, V72, V72, V71, V74, 0x0]
Exit stack: [V11, S0, V65, V65, V71, V74, V72, V72, V71, V74, 0x0]

================================

Block 0x118
[0x118:0x120]
---
Predecessors: [0xf3, 0x121]
Successors: [0x121, 0x133]
---
0x118 JUMPDEST
0x119 DUP4
0x11a DUP2
0x11b LT
0x11c ISZERO
0x11d PUSH2 0x133
0x120 JUMPI
---
0x118: JUMPDEST 
0x11b: V76 = LT S0 V72
0x11c: V77 = ISZERO V76
0x11d: V78 = 0x133
0x120: JUMPI 0x133 V77
---
Entry stack: [V11, S9, V65, V65, V71, V74, V72, V72, V71, V74, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, S9, V65, V65, V71, V74, V72, V72, V71, V74, S0]

================================

Block 0x121
[0x121:0x132]
---
Predecessors: [0x118]
Successors: [0x118]
---
0x121 DUP1
0x122 DUP3
0x123 ADD
0x124 MLOAD
0x125 DUP2
0x126 DUP5
0x127 ADD
0x128 MSTORE
0x129 PUSH1 0x20
0x12b DUP2
0x12c ADD
0x12d SWAP1
0x12e POP
0x12f PUSH2 0x118
0x132 JUMP
---
0x123: V79 = ADD V74 S0
0x124: V80 = M[V79]
0x127: V81 = ADD V71 S0
0x128: M[V81] = V80
0x129: V82 = 0x20
0x12c: V83 = ADD S0 0x20
0x12f: V84 = 0x118
0x132: JUMP 0x118
---
Entry stack: [V11, S9, V65, V65, V71, V74, V72, V72, V71, V74, S0]
Stack pops: 3
Stack additions: [S2, S1, V83]
Exit stack: [V11, S9, V65, V65, V71, V74, V72, V72, V71, V74, V83]

================================

Block 0x133
[0x133:0x146]
---
Predecessors: [0x118]
Successors: [0x147, 0x160]
---
0x133 JUMPDEST
0x134 POP
0x135 POP
0x136 POP
0x137 POP
0x138 SWAP1
0x139 POP
0x13a SWAP1
0x13b DUP2
0x13c ADD
0x13d SWAP1
0x13e PUSH1 0x1f
0x140 AND
0x141 DUP1
0x142 ISZERO
0x143 PUSH2 0x160
0x146 JUMPI
---
0x133: JUMPDEST 
0x13c: V85 = ADD V72 V71
0x13e: V86 = 0x1f
0x140: V87 = AND 0x1f V72
0x142: V88 = ISZERO V87
0x143: V89 = 0x160
0x146: JUMPI 0x160 V88
---
Entry stack: [V11, S9, V65, V65, V71, V74, V72, V72, V71, V74, S0]
Stack pops: 7
Stack additions: [V85, V87]
Exit stack: [V11, S9, V65, V65, V85, V87]

================================

Block 0x147
[0x147:0x15f]
---
Predecessors: [0x133]
Successors: [0x160]
---
0x147 DUP1
0x148 DUP3
0x149 SUB
0x14a DUP1
0x14b MLOAD
0x14c PUSH1 0x1
0x14e DUP4
0x14f PUSH1 0x20
0x151 SUB
0x152 PUSH2 0x100
0x155 EXP
0x156 SUB
0x157 NOT
0x158 AND
0x159 DUP2
0x15a MSTORE
0x15b PUSH1 0x20
0x15d ADD
0x15e SWAP2
0x15f POP
---
0x149: V90 = SUB V85 V87
0x14b: V91 = M[V90]
0x14c: V92 = 0x1
0x14f: V93 = 0x20
0x151: V94 = SUB 0x20 V87
0x152: V95 = 0x100
0x155: V96 = EXP 0x100 V94
0x156: V97 = SUB V96 0x1
0x157: V98 = NOT V97
0x158: V99 = AND V98 V91
0x15a: M[V90] = V99
0x15b: V100 = 0x20
0x15d: V101 = ADD 0x20 V90
---
Entry stack: [V11, S4, V65, V65, V85, V87]
Stack pops: 2
Stack additions: [V101, S0]
Exit stack: [V11, S4, V65, V65, V101, V87]

================================

Block 0x160
[0x160:0x16d]
---
Predecessors: [0x133, 0x147]
Successors: []
---
0x160 JUMPDEST
0x161 POP
0x162 SWAP3
0x163 POP
0x164 POP
0x165 POP
0x166 PUSH1 0x40
0x168 MLOAD
0x169 DUP1
0x16a SWAP2
0x16b SUB
0x16c SWAP1
0x16d RETURN
---
0x160: JUMPDEST 
0x166: V102 = 0x40
0x168: V103 = M[0x40]
0x16b: V104 = SUB S1 V103
0x16d: RETURN V103 V104
---
Entry stack: [V11, S4, V65, V65, S1, V87]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x16e
[0x16e:0x174]
---
Predecessors: [0x41]
Successors: [0x175, 0x179]
---
0x16e JUMPDEST
0x16f CALLVALUE
0x170 ISZERO
0x171 PUSH2 0x179
0x174 JUMPI
---
0x16e: JUMPDEST 
0x16f: V105 = CALLVALUE
0x170: V106 = ISZERO V105
0x171: V107 = 0x179
0x174: JUMPI 0x179 V106
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x175
[0x175:0x178]
---
Predecessors: [0x16e]
Successors: []
---
0x175 PUSH1 0x0
0x177 DUP1
0x178 REVERT
---
0x175: V108 = 0x0
0x178: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x179
[0x179:0x1ad]
---
Predecessors: [0x16e]
Successors: [0x61a]
---
0x179 JUMPDEST
0x17a PUSH2 0x1ae
0x17d PUSH1 0x4
0x17f DUP1
0x180 DUP1
0x181 CALLDATALOAD
0x182 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x197 AND
0x198 SWAP1
0x199 PUSH1 0x20
0x19b ADD
0x19c SWAP1
0x19d SWAP2
0x19e SWAP1
0x19f DUP1
0x1a0 CALLDATALOAD
0x1a1 SWAP1
0x1a2 PUSH1 0x20
0x1a4 ADD
0x1a5 SWAP1
0x1a6 SWAP2
0x1a7 SWAP1
0x1a8 POP
0x1a9 POP
0x1aa PUSH2 0x61a
0x1ad JUMP
---
0x179: JUMPDEST 
0x17a: V109 = 0x1ae
0x17d: V110 = 0x4
0x181: V111 = CALLDATALOAD 0x4
0x182: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x197: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x199: V114 = 0x20
0x19b: V115 = ADD 0x20 0x4
0x1a0: V116 = CALLDATALOAD 0x24
0x1a2: V117 = 0x20
0x1a4: V118 = ADD 0x20 0x24
0x1aa: V119 = 0x61a
0x1ad: JUMP 0x61a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1ae, V113, V116]
Exit stack: [V11, 0x1ae, V113, V116]

================================

Block 0x1ae
[0x1ae:0x1c7]
---
Predecessors: [0x7a2]
Successors: []
---
0x1ae JUMPDEST
0x1af PUSH1 0x40
0x1b1 MLOAD
0x1b2 DUP1
0x1b3 DUP3
0x1b4 ISZERO
0x1b5 ISZERO
0x1b6 ISZERO
0x1b7 ISZERO
0x1b8 DUP2
0x1b9 MSTORE
0x1ba PUSH1 0x20
0x1bc ADD
0x1bd SWAP2
0x1be POP
0x1bf POP
0x1c0 PUSH1 0x40
0x1c2 MLOAD
0x1c3 DUP1
0x1c4 SWAP2
0x1c5 SUB
0x1c6 SWAP1
0x1c7 RETURN
---
0x1ae: JUMPDEST 
0x1af: V120 = 0x40
0x1b1: V121 = M[0x40]
0x1b4: V122 = ISZERO {0x0, 0x1}
0x1b5: V123 = ISZERO V122
0x1b6: V124 = ISZERO V123
0x1b7: V125 = ISZERO V124
0x1b9: M[V121] = V125
0x1ba: V126 = 0x20
0x1bc: V127 = ADD 0x20 V121
0x1c0: V128 = 0x40
0x1c2: V129 = M[0x40]
0x1c5: V130 = SUB V127 V129
0x1c7: RETURN V129 V130
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1c8
[0x1c8:0x1ce]
---
Predecessors: [0x4c]
Successors: [0x1cf, 0x1d3]
---
0x1c8 JUMPDEST
0x1c9 CALLVALUE
0x1ca ISZERO
0x1cb PUSH2 0x1d3
0x1ce JUMPI
---
0x1c8: JUMPDEST 
0x1c9: V131 = CALLVALUE
0x1ca: V132 = ISZERO V131
0x1cb: V133 = 0x1d3
0x1ce: JUMPI 0x1d3 V132
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cf
[0x1cf:0x1d2]
---
Predecessors: [0x1c8]
Successors: []
---
0x1cf PUSH1 0x0
0x1d1 DUP1
0x1d2 REVERT
---
0x1cf: V134 = 0x0
0x1d2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d3
[0x1d3:0x1da]
---
Predecessors: [0x1c8]
Successors: [0x7a8]
---
0x1d3 JUMPDEST
0x1d4 PUSH2 0x1db
0x1d7 PUSH2 0x7a8
0x1da JUMP
---
0x1d3: JUMPDEST 
0x1d4: V135 = 0x1db
0x1d7: V136 = 0x7a8
0x1da: JUMP 0x7a8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1db]
Exit stack: [V11, 0x1db]

================================

Block 0x1db
[0x1db:0x1f0]
---
Predecessors: [0x7a8]
Successors: []
---
0x1db JUMPDEST
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df DUP1
0x1e0 DUP3
0x1e1 DUP2
0x1e2 MSTORE
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 SWAP2
0x1e7 POP
0x1e8 POP
0x1e9 PUSH1 0x40
0x1eb MLOAD
0x1ec DUP1
0x1ed SWAP2
0x1ee SUB
0x1ef SWAP1
0x1f0 RETURN
---
0x1db: JUMPDEST 
0x1dc: V137 = 0x40
0x1de: V138 = M[0x40]
0x1e2: M[V138] = V515
0x1e3: V139 = 0x20
0x1e5: V140 = ADD 0x20 V138
0x1e9: V141 = 0x40
0x1eb: V142 = M[0x40]
0x1ee: V143 = SUB V140 V142
0x1f0: RETURN V142 V143
---
Entry stack: [V11, 0x1db, V515]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1db]

================================

Block 0x1f1
[0x1f1:0x1f7]
---
Predecessors: [0x57]
Successors: [0x1f8, 0x1fc]
---
0x1f1 JUMPDEST
0x1f2 CALLVALUE
0x1f3 ISZERO
0x1f4 PUSH2 0x1fc
0x1f7 JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V144 = CALLVALUE
0x1f3: V145 = ISZERO V144
0x1f4: V146 = 0x1fc
0x1f7: JUMPI 0x1fc V145
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f8
[0x1f8:0x1fb]
---
Predecessors: [0x1f1]
Successors: []
---
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb REVERT
---
0x1f8: V147 = 0x0
0x1fb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1fc
[0x1fc:0x24f]
---
Predecessors: [0x1f1]
Successors: [0x7ae]
---
0x1fc JUMPDEST
0x1fd PUSH2 0x250
0x200 PUSH1 0x4
0x202 DUP1
0x203 DUP1
0x204 CALLDATALOAD
0x205 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21a AND
0x21b SWAP1
0x21c PUSH1 0x20
0x21e ADD
0x21f SWAP1
0x220 SWAP2
0x221 SWAP1
0x222 DUP1
0x223 CALLDATALOAD
0x224 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x239 AND
0x23a SWAP1
0x23b PUSH1 0x20
0x23d ADD
0x23e SWAP1
0x23f SWAP2
0x240 SWAP1
0x241 DUP1
0x242 CALLDATALOAD
0x243 SWAP1
0x244 PUSH1 0x20
0x246 ADD
0x247 SWAP1
0x248 SWAP2
0x249 SWAP1
0x24a POP
0x24b POP
0x24c PUSH2 0x7ae
0x24f JUMP
---
0x1fc: JUMPDEST 
0x1fd: V148 = 0x250
0x200: V149 = 0x4
0x204: V150 = CALLDATALOAD 0x4
0x205: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x21a: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x21c: V153 = 0x20
0x21e: V154 = ADD 0x20 0x4
0x223: V155 = CALLDATALOAD 0x24
0x224: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x239: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x23b: V158 = 0x20
0x23d: V159 = ADD 0x20 0x24
0x242: V160 = CALLDATALOAD 0x44
0x244: V161 = 0x20
0x246: V162 = ADD 0x20 0x44
0x24c: V163 = 0x7ae
0x24f: JUMP 0x7ae
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x250, V152, V157, V160]
Exit stack: [V11, 0x250, V152, V157, V160]

================================

Block 0x250
[0x250:0x269]
---
Predecessors: [0xac3]
Successors: []
---
0x250 JUMPDEST
0x251 PUSH1 0x40
0x253 MLOAD
0x254 DUP1
0x255 DUP3
0x256 ISZERO
0x257 ISZERO
0x258 ISZERO
0x259 ISZERO
0x25a DUP2
0x25b MSTORE
0x25c PUSH1 0x20
0x25e ADD
0x25f SWAP2
0x260 POP
0x261 POP
0x262 PUSH1 0x40
0x264 MLOAD
0x265 DUP1
0x266 SWAP2
0x267 SUB
0x268 SWAP1
0x269 RETURN
---
0x250: JUMPDEST 
0x251: V164 = 0x40
0x253: V165 = M[0x40]
0x256: V166 = ISZERO {0x0, 0x1}
0x257: V167 = ISZERO V166
0x258: V168 = ISZERO V167
0x259: V169 = ISZERO V168
0x25b: M[V165] = V169
0x25c: V170 = 0x20
0x25e: V171 = ADD 0x20 V165
0x262: V172 = 0x40
0x264: V173 = M[0x40]
0x267: V174 = SUB V171 V173
0x269: RETURN V173 V174
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x26a
[0x26a:0x270]
---
Predecessors: [0x62]
Successors: [0x271, 0x275]
---
0x26a JUMPDEST
0x26b CALLVALUE
0x26c ISZERO
0x26d PUSH2 0x275
0x270 JUMPI
---
0x26a: JUMPDEST 
0x26b: V175 = CALLVALUE
0x26c: V176 = ISZERO V175
0x26d: V177 = 0x275
0x270: JUMPI 0x275 V176
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x271
[0x271:0x274]
---
Predecessors: [0x26a]
Successors: []
---
0x271 PUSH1 0x0
0x273 DUP1
0x274 REVERT
---
0x271: V178 = 0x0
0x274: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x275
[0x275:0x27c]
---
Predecessors: [0x26a]
Successors: [0xacb]
---
0x275 JUMPDEST
0x276 PUSH2 0x27d
0x279 PUSH2 0xacb
0x27c JUMP
---
0x275: JUMPDEST 
0x276: V179 = 0x27d
0x279: V180 = 0xacb
0x27c: JUMP 0xacb
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x27d]
Exit stack: [V11, 0x27d]

================================

Block 0x27d
[0x27d:0x298]
---
Predecessors: [0xacb]
Successors: []
---
0x27d JUMPDEST
0x27e PUSH1 0x40
0x280 MLOAD
0x281 DUP1
0x282 DUP3
0x283 PUSH1 0xff
0x285 AND
0x286 PUSH1 0xff
0x288 AND
0x289 DUP2
0x28a MSTORE
0x28b PUSH1 0x20
0x28d ADD
0x28e SWAP2
0x28f POP
0x290 POP
0x291 PUSH1 0x40
0x293 MLOAD
0x294 DUP1
0x295 SWAP2
0x296 SUB
0x297 SWAP1
0x298 RETURN
---
0x27d: JUMPDEST 
0x27e: V181 = 0x40
0x280: V182 = M[0x40]
0x283: V183 = 0xff
0x285: V184 = AND 0xff 0x8
0x286: V185 = 0xff
0x288: V186 = AND 0xff 0x8
0x28a: M[V182] = 0x8
0x28b: V187 = 0x20
0x28d: V188 = ADD 0x20 V182
0x291: V189 = 0x40
0x293: V190 = M[0x40]
0x296: V191 = SUB V188 V190
0x298: RETURN V190 V191
---
Entry stack: [V11, 0x8]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x299
[0x299:0x29f]
---
Predecessors: [0x6d]
Successors: [0x2a0, 0x2a4]
---
0x299 JUMPDEST
0x29a CALLVALUE
0x29b ISZERO
0x29c PUSH2 0x2a4
0x29f JUMPI
---
0x299: JUMPDEST 
0x29a: V192 = CALLVALUE
0x29b: V193 = ISZERO V192
0x29c: V194 = 0x2a4
0x29f: JUMPI 0x2a4 V193
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a0
[0x2a0:0x2a3]
---
Predecessors: [0x299]
Successors: []
---
0x2a0 PUSH1 0x0
0x2a2 DUP1
0x2a3 REVERT
---
0x2a0: V195 = 0x0
0x2a3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a4
[0x2a4:0x2cf]
---
Predecessors: [0x299]
Successors: [0xad4]
---
0x2a4 JUMPDEST
0x2a5 PUSH2 0x2d0
0x2a8 PUSH1 0x4
0x2aa DUP1
0x2ab DUP1
0x2ac CALLDATALOAD
0x2ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c2 AND
0x2c3 SWAP1
0x2c4 PUSH1 0x20
0x2c6 ADD
0x2c7 SWAP1
0x2c8 SWAP2
0x2c9 SWAP1
0x2ca POP
0x2cb POP
0x2cc PUSH2 0xad4
0x2cf JUMP
---
0x2a4: JUMPDEST 
0x2a5: V196 = 0x2d0
0x2a8: V197 = 0x4
0x2ac: V198 = CALLDATALOAD 0x4
0x2ad: V199 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c2: V200 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x2c4: V201 = 0x20
0x2c6: V202 = ADD 0x20 0x4
0x2cc: V203 = 0xad4
0x2cf: JUMP 0xad4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2d0, V200]
Exit stack: [V11, 0x2d0, V200]

================================

Block 0x2d0
[0x2d0:0x2e5]
---
Predecessors: [0xad4]
Successors: []
---
0x2d0 JUMPDEST
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 DUP1
0x2d5 DUP3
0x2d6 DUP2
0x2d7 MSTORE
0x2d8 PUSH1 0x20
0x2da ADD
0x2db SWAP2
0x2dc POP
0x2dd POP
0x2de PUSH1 0x40
0x2e0 MLOAD
0x2e1 DUP1
0x2e2 SWAP2
0x2e3 SUB
0x2e4 SWAP1
0x2e5 RETURN
---
0x2d0: JUMPDEST 
0x2d1: V204 = 0x40
0x2d3: V205 = M[0x40]
0x2d7: M[V205] = V684
0x2d8: V206 = 0x20
0x2da: V207 = ADD 0x20 V205
0x2de: V208 = 0x40
0x2e0: V209 = M[0x40]
0x2e3: V210 = SUB V207 V209
0x2e5: RETURN V209 V210
---
Entry stack: [V11, 0x350, V229, V237, V240, S2, S1, V684]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x350, V229, V237, V240, S2, S1]

================================

Block 0x2e6
[0x2e6:0x2ec]
---
Predecessors: [0x78]
Successors: [0x2ed, 0x2f1]
---
0x2e6 JUMPDEST
0x2e7 CALLVALUE
0x2e8 ISZERO
0x2e9 PUSH2 0x2f1
0x2ec JUMPI
---
0x2e6: JUMPDEST 
0x2e7: V211 = CALLVALUE
0x2e8: V212 = ISZERO V211
0x2e9: V213 = 0x2f1
0x2ec: JUMPI 0x2f1 V212
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ed
[0x2ed:0x2f0]
---
Predecessors: [0x2e6]
Successors: []
---
0x2ed PUSH1 0x0
0x2ef DUP1
0x2f0 REVERT
---
0x2ed: V214 = 0x0
0x2f0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f1
[0x2f1:0x34f]
---
Predecessors: [0x2e6]
Successors: [0xaf5]
---
0x2f1 JUMPDEST
0x2f2 PUSH2 0x350
0x2f5 PUSH1 0x4
0x2f7 DUP1
0x2f8 DUP1
0x2f9 CALLDATALOAD
0x2fa SWAP1
0x2fb PUSH1 0x20
0x2fd ADD
0x2fe SWAP1
0x2ff DUP3
0x300 ADD
0x301 DUP1
0x302 CALLDATALOAD
0x303 SWAP1
0x304 PUSH1 0x20
0x306 ADD
0x307 SWAP1
0x308 DUP1
0x309 DUP1
0x30a PUSH1 0x20
0x30c MUL
0x30d PUSH1 0x20
0x30f ADD
0x310 PUSH1 0x40
0x312 MLOAD
0x313 SWAP1
0x314 DUP2
0x315 ADD
0x316 PUSH1 0x40
0x318 MSTORE
0x319 DUP1
0x31a SWAP4
0x31b SWAP3
0x31c SWAP2
0x31d SWAP1
0x31e DUP2
0x31f DUP2
0x320 MSTORE
0x321 PUSH1 0x20
0x323 ADD
0x324 DUP4
0x325 DUP4
0x326 PUSH1 0x20
0x328 MUL
0x329 DUP1
0x32a DUP3
0x32b DUP5
0x32c CALLDATACOPY
0x32d DUP3
0x32e ADD
0x32f SWAP2
0x330 POP
0x331 POP
0x332 POP
0x333 POP
0x334 POP
0x335 POP
0x336 SWAP2
0x337 SWAP1
0x338 DUP1
0x339 CALLDATALOAD
0x33a SWAP1
0x33b PUSH1 0x20
0x33d ADD
0x33e SWAP1
0x33f SWAP2
0x340 SWAP1
0x341 DUP1
0x342 CALLDATALOAD
0x343 SWAP1
0x344 PUSH1 0x20
0x346 ADD
0x347 SWAP1
0x348 SWAP2
0x349 SWAP1
0x34a POP
0x34b POP
0x34c PUSH2 0xaf5
0x34f JUMP
---
0x2f1: JUMPDEST 
0x2f2: V215 = 0x350
0x2f5: V216 = 0x4
0x2f9: V217 = CALLDATALOAD 0x4
0x2fb: V218 = 0x20
0x2fd: V219 = ADD 0x20 0x4
0x300: V220 = ADD 0x4 V217
0x302: V221 = CALLDATALOAD V220
0x304: V222 = 0x20
0x306: V223 = ADD 0x20 V220
0x30a: V224 = 0x20
0x30c: V225 = MUL 0x20 V221
0x30d: V226 = 0x20
0x30f: V227 = ADD 0x20 V225
0x310: V228 = 0x40
0x312: V229 = M[0x40]
0x315: V230 = ADD V229 V227
0x316: V231 = 0x40
0x318: M[0x40] = V230
0x320: M[V229] = V221
0x321: V232 = 0x20
0x323: V233 = ADD 0x20 V229
0x326: V234 = 0x20
0x328: V235 = MUL 0x20 V221
0x32c: CALLDATACOPY V233 V223 V235
0x32e: V236 = ADD V233 V235
0x339: V237 = CALLDATALOAD 0x24
0x33b: V238 = 0x20
0x33d: V239 = ADD 0x20 0x24
0x342: V240 = CALLDATALOAD 0x44
0x344: V241 = 0x20
0x346: V242 = ADD 0x20 0x44
0x34c: V243 = 0xaf5
0x34f: JUMP 0xaf5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x350, V229, V237, V240]
Exit stack: [V11, 0x350, V229, V237, V240]

================================

Block 0x350
[0x350:0x351]
---
Predecessors: [0xd28]
Successors: []
---
0x350 JUMPDEST
0x351 STOP
---
0x350: JUMPDEST 
0x351: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x352
[0x352:0x358]
---
Predecessors: [0x83]
Successors: [0x359, 0x35d]
---
0x352 JUMPDEST
0x353 CALLVALUE
0x354 ISZERO
0x355 PUSH2 0x35d
0x358 JUMPI
---
0x352: JUMPDEST 
0x353: V244 = CALLVALUE
0x354: V245 = ISZERO V244
0x355: V246 = 0x35d
0x358: JUMPI 0x35d V245
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x359
[0x359:0x35c]
---
Predecessors: [0x352]
Successors: []
---
0x359 PUSH1 0x0
0x35b DUP1
0x35c REVERT
---
0x359: V247 = 0x0
0x35c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x35d
[0x35d:0x388]
---
Predecessors: [0x352]
Successors: [0xd2e]
---
0x35d JUMPDEST
0x35e PUSH2 0x389
0x361 PUSH1 0x4
0x363 DUP1
0x364 DUP1
0x365 CALLDATALOAD
0x366 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37b AND
0x37c SWAP1
0x37d PUSH1 0x20
0x37f ADD
0x380 SWAP1
0x381 SWAP2
0x382 SWAP1
0x383 POP
0x384 POP
0x385 PUSH2 0xd2e
0x388 JUMP
---
0x35d: JUMPDEST 
0x35e: V248 = 0x389
0x361: V249 = 0x4
0x365: V250 = CALLDATALOAD 0x4
0x366: V251 = 0xffffffffffffffffffffffffffffffffffffffff
0x37b: V252 = AND 0xffffffffffffffffffffffffffffffffffffffff V250
0x37d: V253 = 0x20
0x37f: V254 = ADD 0x20 0x4
0x385: V255 = 0xd2e
0x388: JUMP 0xd2e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x389, V252]
Exit stack: [V11, 0x389, V252]

================================

Block 0x389
[0x389:0x39e]
---
Predecessors: [0xd2e]
Successors: []
---
0x389 JUMPDEST
0x38a PUSH1 0x40
0x38c MLOAD
0x38d DUP1
0x38e DUP3
0x38f DUP2
0x390 MSTORE
0x391 PUSH1 0x20
0x393 ADD
0x394 SWAP2
0x395 POP
0x396 POP
0x397 PUSH1 0x40
0x399 MLOAD
0x39a DUP1
0x39b SWAP2
0x39c SUB
0x39d SWAP1
0x39e RETURN
---
0x389: JUMPDEST 
0x38a: V256 = 0x40
0x38c: V257 = M[0x40]
0x390: M[V257] = V835
0x391: V258 = 0x20
0x393: V259 = ADD 0x20 V257
0x397: V260 = 0x40
0x399: V261 = M[0x40]
0x39c: V262 = SUB V259 V261
0x39e: RETURN V261 V262
---
Entry stack: [V11, V835]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x39f
[0x39f:0x3a5]
---
Predecessors: [0x8e]
Successors: [0x3a6, 0x3aa]
---
0x39f JUMPDEST
0x3a0 CALLVALUE
0x3a1 ISZERO
0x3a2 PUSH2 0x3aa
0x3a5 JUMPI
---
0x39f: JUMPDEST 
0x3a0: V263 = CALLVALUE
0x3a1: V264 = ISZERO V263
0x3a2: V265 = 0x3aa
0x3a5: JUMPI 0x3aa V264
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3a6
[0x3a6:0x3a9]
---
Predecessors: [0x39f]
Successors: []
---
0x3a6 PUSH1 0x0
0x3a8 DUP1
0x3a9 REVERT
---
0x3a6: V266 = 0x0
0x3a9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3aa
[0x3aa:0x3b1]
---
Predecessors: [0x39f]
Successors: [0xd77]
---
0x3aa JUMPDEST
0x3ab PUSH2 0x3b2
0x3ae PUSH2 0xd77
0x3b1 JUMP
---
0x3aa: JUMPDEST 
0x3ab: V267 = 0x3b2
0x3ae: V268 = 0xd77
0x3b1: JUMP 0xd77
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3b2]
Exit stack: [V11, 0x3b2]

================================

Block 0x3b2
[0x3b2:0x3d6]
---
Predecessors: [0x5df, 0xd7f]
Successors: [0x3d7]
---
0x3b2 JUMPDEST
0x3b3 PUSH1 0x40
0x3b5 MLOAD
0x3b6 DUP1
0x3b7 DUP1
0x3b8 PUSH1 0x20
0x3ba ADD
0x3bb DUP3
0x3bc DUP2
0x3bd SUB
0x3be DUP3
0x3bf MSTORE
0x3c0 DUP4
0x3c1 DUP2
0x3c2 DUP2
0x3c3 MLOAD
0x3c4 DUP2
0x3c5 MSTORE
0x3c6 PUSH1 0x20
0x3c8 ADD
0x3c9 SWAP2
0x3ca POP
0x3cb DUP1
0x3cc MLOAD
0x3cd SWAP1
0x3ce PUSH1 0x20
0x3d0 ADD
0x3d1 SWAP1
0x3d2 DUP1
0x3d3 DUP4
0x3d4 DUP4
0x3d5 PUSH1 0x0
---
0x3b2: JUMPDEST 
0x3b3: V269 = 0x40
0x3b5: V270 = M[0x40]
0x3b8: V271 = 0x20
0x3ba: V272 = ADD 0x20 V270
0x3bd: V273 = SUB V272 V270
0x3bf: M[V270] = V273
0x3c3: V274 = M[S0]
0x3c5: M[V272] = V274
0x3c6: V275 = 0x20
0x3c8: V276 = ADD 0x20 V272
0x3cc: V277 = M[S0]
0x3ce: V278 = 0x20
0x3d0: V279 = ADD 0x20 S0
0x3d5: V280 = 0x0
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [S0, V270, V270, V276, V279, V277, V277, V276, V279, 0x0]
Exit stack: [V11, S0, V270, V270, V276, V279, V277, V277, V276, V279, 0x0]

================================

Block 0x3d7
[0x3d7:0x3df]
---
Predecessors: [0x3b2, 0x3e0]
Successors: [0x3e0, 0x3f2]
---
0x3d7 JUMPDEST
0x3d8 DUP4
0x3d9 DUP2
0x3da LT
0x3db ISZERO
0x3dc PUSH2 0x3f2
0x3df JUMPI
---
0x3d7: JUMPDEST 
0x3da: V281 = LT S0 V277
0x3db: V282 = ISZERO V281
0x3dc: V283 = 0x3f2
0x3df: JUMPI 0x3f2 V282
---
Entry stack: [V11, S9, V270, V270, V276, V279, V277, V277, V276, V279, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, S9, V270, V270, V276, V279, V277, V277, V276, V279, S0]

================================

Block 0x3e0
[0x3e0:0x3f1]
---
Predecessors: [0x3d7]
Successors: [0x3d7]
---
0x3e0 DUP1
0x3e1 DUP3
0x3e2 ADD
0x3e3 MLOAD
0x3e4 DUP2
0x3e5 DUP5
0x3e6 ADD
0x3e7 MSTORE
0x3e8 PUSH1 0x20
0x3ea DUP2
0x3eb ADD
0x3ec SWAP1
0x3ed POP
0x3ee PUSH2 0x3d7
0x3f1 JUMP
---
0x3e2: V284 = ADD V279 S0
0x3e3: V285 = M[V284]
0x3e6: V286 = ADD V276 S0
0x3e7: M[V286] = V285
0x3e8: V287 = 0x20
0x3eb: V288 = ADD S0 0x20
0x3ee: V289 = 0x3d7
0x3f1: JUMP 0x3d7
---
Entry stack: [V11, S9, V270, V270, V276, V279, V277, V277, V276, V279, S0]
Stack pops: 3
Stack additions: [S2, S1, V288]
Exit stack: [V11, S9, V270, V270, V276, V279, V277, V277, V276, V279, V288]

================================

Block 0x3f2
[0x3f2:0x405]
---
Predecessors: [0x3d7]
Successors: [0x406, 0x41f]
---
0x3f2 JUMPDEST
0x3f3 POP
0x3f4 POP
0x3f5 POP
0x3f6 POP
0x3f7 SWAP1
0x3f8 POP
0x3f9 SWAP1
0x3fa DUP2
0x3fb ADD
0x3fc SWAP1
0x3fd PUSH1 0x1f
0x3ff AND
0x400 DUP1
0x401 ISZERO
0x402 PUSH2 0x41f
0x405 JUMPI
---
0x3f2: JUMPDEST 
0x3fb: V290 = ADD V277 V276
0x3fd: V291 = 0x1f
0x3ff: V292 = AND 0x1f V277
0x401: V293 = ISZERO V292
0x402: V294 = 0x41f
0x405: JUMPI 0x41f V293
---
Entry stack: [V11, S9, V270, V270, V276, V279, V277, V277, V276, V279, S0]
Stack pops: 7
Stack additions: [V290, V292]
Exit stack: [V11, S9, V270, V270, V290, V292]

================================

Block 0x406
[0x406:0x41e]
---
Predecessors: [0x3f2]
Successors: [0x41f]
---
0x406 DUP1
0x407 DUP3
0x408 SUB
0x409 DUP1
0x40a MLOAD
0x40b PUSH1 0x1
0x40d DUP4
0x40e PUSH1 0x20
0x410 SUB
0x411 PUSH2 0x100
0x414 EXP
0x415 SUB
0x416 NOT
0x417 AND
0x418 DUP2
0x419 MSTORE
0x41a PUSH1 0x20
0x41c ADD
0x41d SWAP2
0x41e POP
---
0x408: V295 = SUB V290 V292
0x40a: V296 = M[V295]
0x40b: V297 = 0x1
0x40e: V298 = 0x20
0x410: V299 = SUB 0x20 V292
0x411: V300 = 0x100
0x414: V301 = EXP 0x100 V299
0x415: V302 = SUB V301 0x1
0x416: V303 = NOT V302
0x417: V304 = AND V303 V296
0x419: M[V295] = V304
0x41a: V305 = 0x20
0x41c: V306 = ADD 0x20 V295
---
Entry stack: [V11, S4, V270, V270, V290, V292]
Stack pops: 2
Stack additions: [V306, S0]
Exit stack: [V11, S4, V270, V270, V306, V292]

================================

Block 0x41f
[0x41f:0x42c]
---
Predecessors: [0x3f2, 0x406]
Successors: []
---
0x41f JUMPDEST
0x420 POP
0x421 SWAP3
0x422 POP
0x423 POP
0x424 POP
0x425 PUSH1 0x40
0x427 MLOAD
0x428 DUP1
0x429 SWAP2
0x42a SUB
0x42b SWAP1
0x42c RETURN
---
0x41f: JUMPDEST 
0x425: V307 = 0x40
0x427: V308 = M[0x40]
0x42a: V309 = SUB S1 V308
0x42c: RETURN V308 V309
---
Entry stack: [V11, S4, V270, V270, S1, V292]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x42d
[0x42d:0x433]
---
Predecessors: [0x99]
Successors: [0x434, 0x438]
---
0x42d JUMPDEST
0x42e CALLVALUE
0x42f ISZERO
0x430 PUSH2 0x438
0x433 JUMPI
---
0x42d: JUMPDEST 
0x42e: V310 = CALLVALUE
0x42f: V311 = ISZERO V310
0x430: V312 = 0x438
0x433: JUMPI 0x438 V311
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x434
[0x434:0x437]
---
Predecessors: [0x42d]
Successors: []
---
0x434 PUSH1 0x0
0x436 DUP1
0x437 REVERT
---
0x434: V313 = 0x0
0x437: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x438
[0x438:0x43f]
---
Predecessors: [0x42d]
Successors: [0xdba]
---
0x438 JUMPDEST
0x439 PUSH2 0x440
0x43c PUSH2 0xdba
0x43f JUMP
---
0x438: JUMPDEST 
0x439: V314 = 0x440
0x43c: V315 = 0xdba
0x43f: JUMP 0xdba
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x440]
Exit stack: [V11, 0x440]

================================

Block 0x440
[0x440:0x459]
---
Predecessors: [0xe18]
Successors: []
---
0x440 JUMPDEST
0x441 PUSH1 0x40
0x443 MLOAD
0x444 DUP1
0x445 DUP3
0x446 ISZERO
0x447 ISZERO
0x448 ISZERO
0x449 ISZERO
0x44a DUP2
0x44b MSTORE
0x44c PUSH1 0x20
0x44e ADD
0x44f SWAP2
0x450 POP
0x451 POP
0x452 PUSH1 0x40
0x454 MLOAD
0x455 DUP1
0x456 SWAP2
0x457 SUB
0x458 SWAP1
0x459 RETURN
---
0x440: JUMPDEST 
0x441: V316 = 0x40
0x443: V317 = M[0x40]
0x446: V318 = ISZERO 0x1
0x447: V319 = ISZERO 0x0
0x448: V320 = ISZERO 0x1
0x449: V321 = ISZERO 0x0
0x44b: M[V317] = 0x1
0x44c: V322 = 0x20
0x44e: V323 = ADD 0x20 V317
0x452: V324 = 0x40
0x454: V325 = M[0x40]
0x457: V326 = SUB V323 V325
0x459: RETURN V325 V326
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x45a
[0x45a:0x460]
---
Predecessors: [0xa4]
Successors: [0x461, 0x465]
---
0x45a JUMPDEST
0x45b CALLVALUE
0x45c ISZERO
0x45d PUSH2 0x465
0x460 JUMPI
---
0x45a: JUMPDEST 
0x45b: V327 = CALLVALUE
0x45c: V328 = ISZERO V327
0x45d: V329 = 0x465
0x460: JUMPI 0x465 V328
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x461
[0x461:0x464]
---
Predecessors: [0x45a]
Successors: []
---
0x461 PUSH1 0x0
0x463 DUP1
0x464 REVERT
---
0x461: V330 = 0x0
0x464: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x465
[0x465:0x499]
---
Predecessors: [0x45a]
Successors: [0xe66]
---
0x465 JUMPDEST
0x466 PUSH2 0x49a
0x469 PUSH1 0x4
0x46b DUP1
0x46c DUP1
0x46d CALLDATALOAD
0x46e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x483 AND
0x484 SWAP1
0x485 PUSH1 0x20
0x487 ADD
0x488 SWAP1
0x489 SWAP2
0x48a SWAP1
0x48b DUP1
0x48c CALLDATALOAD
0x48d SWAP1
0x48e PUSH1 0x20
0x490 ADD
0x491 SWAP1
0x492 SWAP2
0x493 SWAP1
0x494 POP
0x495 POP
0x496 PUSH2 0xe66
0x499 JUMP
---
0x465: JUMPDEST 
0x466: V331 = 0x49a
0x469: V332 = 0x4
0x46d: V333 = CALLDATALOAD 0x4
0x46e: V334 = 0xffffffffffffffffffffffffffffffffffffffff
0x483: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V333
0x485: V336 = 0x20
0x487: V337 = ADD 0x20 0x4
0x48c: V338 = CALLDATALOAD 0x24
0x48e: V339 = 0x20
0x490: V340 = ADD 0x20 0x24
0x496: V341 = 0xe66
0x499: JUMP 0xe66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x49a, V335, V338]
Exit stack: [V11, 0x49a, V335, V338]

================================

Block 0x49a
[0x49a:0x4b3]
---
Predecessors: [0x1069]
Successors: []
---
0x49a JUMPDEST
0x49b PUSH1 0x40
0x49d MLOAD
0x49e DUP1
0x49f DUP3
0x4a0 ISZERO
0x4a1 ISZERO
0x4a2 ISZERO
0x4a3 ISZERO
0x4a4 DUP2
0x4a5 MSTORE
0x4a6 PUSH1 0x20
0x4a8 ADD
0x4a9 SWAP2
0x4aa POP
0x4ab POP
0x4ac PUSH1 0x40
0x4ae MLOAD
0x4af DUP1
0x4b0 SWAP2
0x4b1 SUB
0x4b2 SWAP1
0x4b3 RETURN
---
0x49a: JUMPDEST 
0x49b: V342 = 0x40
0x49d: V343 = M[0x40]
0x4a0: V344 = ISZERO {0x0, 0x1}
0x4a1: V345 = ISZERO V344
0x4a2: V346 = ISZERO V345
0x4a3: V347 = ISZERO V346
0x4a5: M[V343] = V347
0x4a6: V348 = 0x20
0x4a8: V349 = ADD 0x20 V343
0x4ac: V350 = 0x40
0x4ae: V351 = M[0x40]
0x4b1: V352 = SUB V349 V351
0x4b3: RETURN V351 V352
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4b4
[0x4b4:0x4ba]
---
Predecessors: [0xaf]
Successors: [0x4bb, 0x4bf]
---
0x4b4 JUMPDEST
0x4b5 CALLVALUE
0x4b6 ISZERO
0x4b7 PUSH2 0x4bf
0x4ba JUMPI
---
0x4b4: JUMPDEST 
0x4b5: V353 = CALLVALUE
0x4b6: V354 = ISZERO V353
0x4b7: V355 = 0x4bf
0x4ba: JUMPI 0x4bf V354
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4bb
[0x4bb:0x4be]
---
Predecessors: [0x4b4]
Successors: []
---
0x4bb PUSH1 0x0
0x4bd DUP1
0x4be REVERT
---
0x4bb: V356 = 0x0
0x4be: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4bf
[0x4bf:0x4c6]
---
Predecessors: [0x4b4]
Successors: [0x1070]
---
0x4bf JUMPDEST
0x4c0 PUSH2 0x4c7
0x4c3 PUSH2 0x1070
0x4c6 JUMP
---
0x4bf: JUMPDEST 
0x4c0: V357 = 0x4c7
0x4c3: V358 = 0x1070
0x4c6: JUMP 0x1070
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x4c7]
Exit stack: [V11, 0x4c7]

================================

Block 0x4c7
[0x4c7:0x4e0]
---
Predecessors: [0x1070]
Successors: []
---
0x4c7 JUMPDEST
0x4c8 PUSH1 0x40
0x4ca MLOAD
0x4cb DUP1
0x4cc DUP3
0x4cd ISZERO
0x4ce ISZERO
0x4cf ISZERO
0x4d0 ISZERO
0x4d1 DUP2
0x4d2 MSTORE
0x4d3 PUSH1 0x20
0x4d5 ADD
0x4d6 SWAP2
0x4d7 POP
0x4d8 POP
0x4d9 PUSH1 0x40
0x4db MLOAD
0x4dc DUP1
0x4dd SWAP2
0x4de SUB
0x4df SWAP1
0x4e0 RETURN
---
0x4c7: JUMPDEST 
0x4c8: V359 = 0x40
0x4ca: V360 = M[0x40]
0x4cd: V361 = ISZERO V1003
0x4ce: V362 = ISZERO V361
0x4cf: V363 = ISZERO V362
0x4d0: V364 = ISZERO V363
0x4d2: M[V360] = V364
0x4d3: V365 = 0x20
0x4d5: V366 = ADD 0x20 V360
0x4d9: V367 = 0x40
0x4db: V368 = M[0x40]
0x4de: V369 = SUB V366 V368
0x4e0: RETURN V368 V369
---
Entry stack: [V11, 0x4c7, V1003]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4c7]

================================

Block 0x4e1
[0x4e1:0x4e7]
---
Predecessors: [0xba]
Successors: [0x4e8, 0x4ec]
---
0x4e1 JUMPDEST
0x4e2 CALLVALUE
0x4e3 ISZERO
0x4e4 PUSH2 0x4ec
0x4e7 JUMPI
---
0x4e1: JUMPDEST 
0x4e2: V370 = CALLVALUE
0x4e3: V371 = ISZERO V370
0x4e4: V372 = 0x4ec
0x4e7: JUMPI 0x4ec V371
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e8
[0x4e8:0x4eb]
---
Predecessors: [0x4e1]
Successors: []
---
0x4e8 PUSH1 0x0
0x4ea DUP1
0x4eb REVERT
---
0x4e8: V373 = 0x0
0x4eb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4ec
[0x4ec:0x536]
---
Predecessors: [0x4e1]
Successors: [0x1083]
---
0x4ec JUMPDEST
0x4ed PUSH2 0x537
0x4f0 PUSH1 0x4
0x4f2 DUP1
0x4f3 DUP1
0x4f4 CALLDATALOAD
0x4f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x50a AND
0x50b SWAP1
0x50c PUSH1 0x20
0x50e ADD
0x50f SWAP1
0x510 SWAP2
0x511 SWAP1
0x512 DUP1
0x513 CALLDATALOAD
0x514 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x529 AND
0x52a SWAP1
0x52b PUSH1 0x20
0x52d ADD
0x52e SWAP1
0x52f SWAP2
0x530 SWAP1
0x531 POP
0x532 POP
0x533 PUSH2 0x1083
0x536 JUMP
---
0x4ec: JUMPDEST 
0x4ed: V374 = 0x537
0x4f0: V375 = 0x4
0x4f4: V376 = CALLDATALOAD 0x4
0x4f5: V377 = 0xffffffffffffffffffffffffffffffffffffffff
0x50a: V378 = AND 0xffffffffffffffffffffffffffffffffffffffff V376
0x50c: V379 = 0x20
0x50e: V380 = ADD 0x20 0x4
0x513: V381 = CALLDATALOAD 0x24
0x514: V382 = 0xffffffffffffffffffffffffffffffffffffffff
0x529: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x52b: V384 = 0x20
0x52d: V385 = ADD 0x20 0x24
0x533: V386 = 0x1083
0x536: JUMP 0x1083
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x537, V378, V383]
Exit stack: [V11, 0x537, V378, V383]

================================

Block 0x537
[0x537:0x54c]
---
Predecessors: [0x1083]
Successors: []
---
0x537 JUMPDEST
0x538 PUSH1 0x40
0x53a MLOAD
0x53b DUP1
0x53c DUP3
0x53d DUP2
0x53e MSTORE
0x53f PUSH1 0x20
0x541 ADD
0x542 SWAP2
0x543 POP
0x544 POP
0x545 PUSH1 0x40
0x547 MLOAD
0x548 DUP1
0x549 SWAP2
0x54a SUB
0x54b SWAP1
0x54c RETURN
---
0x537: JUMPDEST 
0x538: V387 = 0x40
0x53a: V388 = M[0x40]
0x53e: M[V388] = V1028
0x53f: V389 = 0x20
0x541: V390 = ADD 0x20 V388
0x545: V391 = 0x40
0x547: V392 = M[0x40]
0x54a: V393 = SUB V390 V392
0x54c: RETURN V392 V393
---
Entry stack: [V11, V1028]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x54d
[0x54d:0x553]
---
Predecessors: [0xc5]
Successors: [0x554, 0x558]
---
0x54d JUMPDEST
0x54e CALLVALUE
0x54f ISZERO
0x550 PUSH2 0x558
0x553 JUMPI
---
0x54d: JUMPDEST 
0x54e: V394 = CALLVALUE
0x54f: V395 = ISZERO V394
0x550: V396 = 0x558
0x553: JUMPI 0x558 V395
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x554
[0x554:0x557]
---
Predecessors: [0x54d]
Successors: []
---
0x554 PUSH1 0x0
0x556 DUP1
0x557 REVERT
---
0x554: V397 = 0x0
0x557: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x558
[0x558:0x583]
---
Predecessors: [0x54d]
Successors: [0x110a]
---
0x558 JUMPDEST
0x559 PUSH2 0x584
0x55c PUSH1 0x4
0x55e DUP1
0x55f DUP1
0x560 CALLDATALOAD
0x561 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x576 AND
0x577 SWAP1
0x578 PUSH1 0x20
0x57a ADD
0x57b SWAP1
0x57c SWAP2
0x57d SWAP1
0x57e POP
0x57f POP
0x580 PUSH2 0x110a
0x583 JUMP
---
0x558: JUMPDEST 
0x559: V398 = 0x584
0x55c: V399 = 0x4
0x560: V400 = CALLDATALOAD 0x4
0x561: V401 = 0xffffffffffffffffffffffffffffffffffffffff
0x576: V402 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x578: V403 = 0x20
0x57a: V404 = ADD 0x20 0x4
0x580: V405 = 0x110a
0x583: JUMP 0x110a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x584, V402]
Exit stack: [V11, 0x584, V402]

================================

Block 0x584
[0x584:0x59d]
---
Predecessors: [0x130c]
Successors: []
---
0x584 JUMPDEST
0x585 PUSH1 0x40
0x587 MLOAD
0x588 DUP1
0x589 DUP3
0x58a ISZERO
0x58b ISZERO
0x58c ISZERO
0x58d ISZERO
0x58e DUP2
0x58f MSTORE
0x590 PUSH1 0x20
0x592 ADD
0x593 SWAP2
0x594 POP
0x595 POP
0x596 PUSH1 0x40
0x598 MLOAD
0x599 DUP1
0x59a SWAP2
0x59b SUB
0x59c SWAP1
0x59d RETURN
---
0x584: JUMPDEST 
0x585: V406 = 0x40
0x587: V407 = M[0x40]
0x58a: V408 = ISZERO V1145
0x58b: V409 = ISZERO V408
0x58c: V410 = ISZERO V409
0x58d: V411 = ISZERO V410
0x58f: M[V407] = V411
0x590: V412 = 0x20
0x592: V413 = ADD 0x20 V407
0x596: V414 = 0x40
0x598: V415 = M[0x40]
0x59b: V416 = SUB V413 V415
0x59d: RETURN V415 V416
---
Entry stack: [V11, V1145]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x59e
[0x59e:0x5a4]
---
Predecessors: [0xd0]
Successors: [0x5a5, 0x5a9]
---
0x59e JUMPDEST
0x59f CALLVALUE
0x5a0 ISZERO
0x5a1 PUSH2 0x5a9
0x5a4 JUMPI
---
0x59e: JUMPDEST 
0x59f: V417 = CALLVALUE
0x5a0: V418 = ISZERO V417
0x5a1: V419 = 0x5a9
0x5a4: JUMPI 0x5a9 V418
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5a5
[0x5a5:0x5a8]
---
Predecessors: [0x59e]
Successors: []
---
0x5a5 PUSH1 0x0
0x5a7 DUP1
0x5a8 REVERT
---
0x5a5: V420 = 0x0
0x5a8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5a9
[0x5a9:0x5d4]
---
Predecessors: [0x59e]
Successors: [0x131f]
---
0x5a9 JUMPDEST
0x5aa PUSH2 0x5d5
0x5ad PUSH1 0x4
0x5af DUP1
0x5b0 DUP1
0x5b1 CALLDATALOAD
0x5b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c7 AND
0x5c8 SWAP1
0x5c9 PUSH1 0x20
0x5cb ADD
0x5cc SWAP1
0x5cd SWAP2
0x5ce SWAP1
0x5cf POP
0x5d0 POP
0x5d1 PUSH2 0x131f
0x5d4 JUMP
---
0x5a9: JUMPDEST 
0x5aa: V421 = 0x5d5
0x5ad: V422 = 0x4
0x5b1: V423 = CALLDATALOAD 0x4
0x5b2: V424 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c7: V425 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x5c9: V426 = 0x20
0x5cb: V427 = ADD 0x20 0x4
0x5d1: V428 = 0x131f
0x5d4: JUMP 0x131f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x5d5, V425]
Exit stack: [V11, 0x5d5, V425]

================================

Block 0x5d5
[0x5d5:0x5d6]
---
Predecessors: [0x137b]
Successors: []
---
0x5d5 JUMPDEST
0x5d6 STOP
---
0x5d5: JUMPDEST 
0x5d6: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5d7
[0x5d7:0x5de]
---
Predecessors: [0xeb]
Successors: [0x13bf]
---
0x5d7 JUMPDEST
0x5d8 PUSH2 0x5df
0x5db PUSH2 0x13bf
0x5de JUMP
---
0x5d7: JUMPDEST 
0x5d8: V429 = 0x5df
0x5db: V430 = 0x13bf
0x5de: JUMP 0x13bf
---
Entry stack: [V11, 0xf3]
Stack pops: 0
Stack additions: [0x5df]
Exit stack: [V11, 0xf3, 0x5df]

================================

Block 0x5df
[0x5df:0x619]
---
Predecessors: [0x13bf]
Successors: [0xf3, 0x3b2]
---
0x5df JUMPDEST
0x5e0 PUSH1 0x40
0x5e2 DUP1
0x5e3 MLOAD
0x5e4 SWAP1
0x5e5 DUP2
0x5e6 ADD
0x5e7 PUSH1 0x40
0x5e9 MSTORE
0x5ea DUP1
0x5eb PUSH1 0xa
0x5ed DUP2
0x5ee MSTORE
0x5ef PUSH1 0x20
0x5f1 ADD
0x5f2 PUSH32 0x4a61766153637269707400000000000000000000000000000000000000000000
0x613 DUP2
0x614 MSTORE
0x615 POP
0x616 SWAP1
0x617 POP
0x618 SWAP1
0x619 JUMP
---
0x5df: JUMPDEST 
0x5e0: V431 = 0x40
0x5e3: V432 = M[0x40]
0x5e6: V433 = ADD V432 0x40
0x5e7: V434 = 0x40
0x5e9: M[0x40] = V433
0x5eb: V435 = 0xa
0x5ee: M[V432] = 0xa
0x5ef: V436 = 0x20
0x5f1: V437 = ADD 0x20 V432
0x5f2: V438 = 0x4a61766153637269707400000000000000000000000000000000000000000000
0x614: M[V437] = 0x4a61766153637269707400000000000000000000000000000000000000000000
0x619: JUMP {0xf3, 0x3b2}
---
Entry stack: [V11, {0xf3, 0x3b2}, V1179]
Stack pops: 2
Stack additions: [V432]
Exit stack: [V11, V432]

================================

Block 0x61a
[0x61a:0x626]
---
Predecessors: [0x179]
Successors: [0x627, 0x6a9]
---
0x61a JUMPDEST
0x61b PUSH1 0x0
0x61d DUP1
0x61e DUP3
0x61f EQ
0x620 ISZERO
0x621 DUP1
0x622 ISZERO
0x623 PUSH2 0x6a9
0x626 JUMPI
---
0x61a: JUMPDEST 
0x61b: V439 = 0x0
0x61f: V440 = EQ V116 0x0
0x620: V441 = ISZERO V440
0x622: V442 = ISZERO V441
0x623: V443 = 0x6a9
0x626: JUMPI 0x6a9 V442
---
Entry stack: [V11, 0x1ae, V113, V116]
Stack pops: 1
Stack additions: [S0, 0x0, V441]
Exit stack: [V11, 0x1ae, V113, V116, 0x0, V441]

================================

Block 0x627
[0x627:0x6a8]
---
Predecessors: [0x61a]
Successors: [0x6a9]
---
0x627 POP
0x628 PUSH1 0x0
0x62a PUSH1 0x3
0x62c PUSH1 0x0
0x62e CALLER
0x62f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x644 AND
0x645 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x65a AND
0x65b DUP2
0x65c MSTORE
0x65d PUSH1 0x20
0x65f ADD
0x660 SWAP1
0x661 DUP2
0x662 MSTORE
0x663 PUSH1 0x20
0x665 ADD
0x666 PUSH1 0x0
0x668 SHA3
0x669 PUSH1 0x0
0x66b DUP6
0x66c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x681 AND
0x682 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x697 AND
0x698 DUP2
0x699 MSTORE
0x69a PUSH1 0x20
0x69c ADD
0x69d SWAP1
0x69e DUP2
0x69f MSTORE
0x6a0 PUSH1 0x20
0x6a2 ADD
0x6a3 PUSH1 0x0
0x6a5 SHA3
0x6a6 SLOAD
0x6a7 EQ
0x6a8 ISZERO
---
0x628: V444 = 0x0
0x62a: V445 = 0x3
0x62c: V446 = 0x0
0x62e: V447 = CALLER
0x62f: V448 = 0xffffffffffffffffffffffffffffffffffffffff
0x644: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x645: V450 = 0xffffffffffffffffffffffffffffffffffffffff
0x65a: V451 = AND 0xffffffffffffffffffffffffffffffffffffffff V449
0x65c: M[0x0] = V451
0x65d: V452 = 0x20
0x65f: V453 = ADD 0x20 0x0
0x662: M[0x20] = 0x3
0x663: V454 = 0x20
0x665: V455 = ADD 0x20 0x20
0x666: V456 = 0x0
0x668: V457 = SHA3 0x0 0x40
0x669: V458 = 0x0
0x66c: V459 = 0xffffffffffffffffffffffffffffffffffffffff
0x681: V460 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x682: V461 = 0xffffffffffffffffffffffffffffffffffffffff
0x697: V462 = AND 0xffffffffffffffffffffffffffffffffffffffff V460
0x699: M[0x0] = V462
0x69a: V463 = 0x20
0x69c: V464 = ADD 0x20 0x0
0x69f: M[0x20] = V457
0x6a0: V465 = 0x20
0x6a2: V466 = ADD 0x20 0x20
0x6a3: V467 = 0x0
0x6a5: V468 = SHA3 0x0 0x40
0x6a6: V469 = S[V468]
0x6a7: V470 = EQ V469 0x0
0x6a8: V471 = ISZERO V470
---
Entry stack: [V11, 0x1ae, V113, V116, 0x0, V441]
Stack pops: 4
Stack additions: [S3, S2, S1, V471]
Exit stack: [V11, 0x1ae, V113, V116, 0x0, V471]

================================

Block 0x6a9
[0x6a9:0x6ae]
---
Predecessors: [0x61a, 0x627]
Successors: [0x6af, 0x6b7]
---
0x6a9 JUMPDEST
0x6aa ISZERO
0x6ab PUSH2 0x6b7
0x6ae JUMPI
---
0x6a9: JUMPDEST 
0x6aa: V472 = ISZERO S0
0x6ab: V473 = 0x6b7
0x6ae: JUMPI 0x6b7 V472
---
Entry stack: [V11, 0x1ae, V113, V116, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1ae, V113, V116, 0x0]

================================

Block 0x6af
[0x6af:0x6b6]
---
Predecessors: [0x6a9]
Successors: [0x7a2]
---
0x6af PUSH1 0x0
0x6b1 SWAP1
0x6b2 POP
0x6b3 PUSH2 0x7a2
0x6b6 JUMP
---
0x6af: V474 = 0x0
0x6b3: V475 = 0x7a2
0x6b6: JUMP 0x7a2
---
Entry stack: [V11, 0x1ae, V113, V116, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1ae, V113, V116, 0x0]

================================

Block 0x6b7
[0x6b7:0x7a1]
---
Predecessors: [0x6a9]
Successors: [0x7a2]
---
0x6b7 JUMPDEST
0x6b8 DUP2
0x6b9 PUSH1 0x3
0x6bb PUSH1 0x0
0x6bd CALLER
0x6be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d3 AND
0x6d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6e9 AND
0x6ea DUP2
0x6eb MSTORE
0x6ec PUSH1 0x20
0x6ee ADD
0x6ef SWAP1
0x6f0 DUP2
0x6f1 MSTORE
0x6f2 PUSH1 0x20
0x6f4 ADD
0x6f5 PUSH1 0x0
0x6f7 SHA3
0x6f8 PUSH1 0x0
0x6fa DUP6
0x6fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x710 AND
0x711 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x726 AND
0x727 DUP2
0x728 MSTORE
0x729 PUSH1 0x20
0x72b ADD
0x72c SWAP1
0x72d DUP2
0x72e MSTORE
0x72f PUSH1 0x20
0x731 ADD
0x732 PUSH1 0x0
0x734 SHA3
0x735 DUP2
0x736 SWAP1
0x737 SSTORE
0x738 POP
0x739 DUP3
0x73a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x74f AND
0x750 CALLER
0x751 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x766 AND
0x767 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x788 DUP5
0x789 PUSH1 0x40
0x78b MLOAD
0x78c DUP1
0x78d DUP3
0x78e DUP2
0x78f MSTORE
0x790 PUSH1 0x20
0x792 ADD
0x793 SWAP2
0x794 POP
0x795 POP
0x796 PUSH1 0x40
0x798 MLOAD
0x799 DUP1
0x79a SWAP2
0x79b SUB
0x79c SWAP1
0x79d LOG3
0x79e PUSH1 0x1
0x7a0 SWAP1
0x7a1 POP
---
0x6b7: JUMPDEST 
0x6b9: V476 = 0x3
0x6bb: V477 = 0x0
0x6bd: V478 = CALLER
0x6be: V479 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d3: V480 = AND 0xffffffffffffffffffffffffffffffffffffffff V478
0x6d4: V481 = 0xffffffffffffffffffffffffffffffffffffffff
0x6e9: V482 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x6eb: M[0x0] = V482
0x6ec: V483 = 0x20
0x6ee: V484 = ADD 0x20 0x0
0x6f1: M[0x20] = 0x3
0x6f2: V485 = 0x20
0x6f4: V486 = ADD 0x20 0x20
0x6f5: V487 = 0x0
0x6f7: V488 = SHA3 0x0 0x40
0x6f8: V489 = 0x0
0x6fb: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x710: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x711: V492 = 0xffffffffffffffffffffffffffffffffffffffff
0x726: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x728: M[0x0] = V493
0x729: V494 = 0x20
0x72b: V495 = ADD 0x20 0x0
0x72e: M[0x20] = V488
0x72f: V496 = 0x20
0x731: V497 = ADD 0x20 0x20
0x732: V498 = 0x0
0x734: V499 = SHA3 0x0 0x40
0x737: S[V499] = V116
0x73a: V500 = 0xffffffffffffffffffffffffffffffffffffffff
0x74f: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x750: V502 = CALLER
0x751: V503 = 0xffffffffffffffffffffffffffffffffffffffff
0x766: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V502
0x767: V505 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x789: V506 = 0x40
0x78b: V507 = M[0x40]
0x78f: M[V507] = V116
0x790: V508 = 0x20
0x792: V509 = ADD 0x20 V507
0x796: V510 = 0x40
0x798: V511 = M[0x40]
0x79b: V512 = SUB V509 V511
0x79d: LOG V511 V512 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V504 V501
0x79e: V513 = 0x1
---
Entry stack: [V11, 0x1ae, V113, V116, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V11, 0x1ae, V113, V116, 0x1]

================================

Block 0x7a2
[0x7a2:0x7a7]
---
Predecessors: [0x6af, 0x6b7]
Successors: [0x1ae]
---
0x7a2 JUMPDEST
0x7a3 SWAP3
0x7a4 SWAP2
0x7a5 POP
0x7a6 POP
0x7a7 JUMP
---
0x7a2: JUMPDEST 
0x7a7: JUMP 0x1ae
---
Entry stack: [V11, 0x1ae, V113, V116, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x7a8
[0x7a8:0x7ad]
---
Predecessors: [0x1d3]
Successors: [0x1db]
---
0x7a8 JUMPDEST
0x7a9 PUSH1 0x4
0x7ab SLOAD
0x7ac DUP2
0x7ad JUMP
---
0x7a8: JUMPDEST 
0x7a9: V514 = 0x4
0x7ab: V515 = S[0x4]
0x7ad: JUMP 0x1db
---
Entry stack: [V11, 0x1db]
Stack pops: 1
Stack additions: [S0, V515]
Exit stack: [V11, 0x1db, V515]

================================

Block 0x7ae
[0x7ae:0x7c3]
---
Predecessors: [0x1fc]
Successors: [0x7c4, 0x7c5]
---
0x7ae JUMPDEST
0x7af PUSH1 0x0
0x7b1 PUSH1 0x60
0x7b3 PUSH1 0x4
0x7b5 DUP2
0x7b6 ADD
0x7b7 PUSH1 0x0
0x7b9 CALLDATASIZE
0x7ba SWAP1
0x7bb POP
0x7bc LT
0x7bd ISZERO
0x7be ISZERO
0x7bf ISZERO
0x7c0 PUSH2 0x7c5
0x7c3 JUMPI
---
0x7ae: JUMPDEST 
0x7af: V516 = 0x0
0x7b1: V517 = 0x60
0x7b3: V518 = 0x4
0x7b6: V519 = ADD 0x60 0x4
0x7b7: V520 = 0x0
0x7b9: V521 = CALLDATASIZE
0x7bc: V522 = LT V521 0x64
0x7bd: V523 = ISZERO V522
0x7be: V524 = ISZERO V523
0x7bf: V525 = ISZERO V524
0x7c0: V526 = 0x7c5
0x7c3: JUMPI 0x7c5 V525
---
Entry stack: [V11, 0x250, V152, V157, V160]
Stack pops: 0
Stack additions: [0x0, 0x60]
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60]

================================

Block 0x7c4
[0x7c4:0x7c4]
---
Predecessors: [0x7ae]
Successors: []
---
0x7c4 INVALID
---
0x7c4: INVALID 
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60]

================================

Block 0x7c5
[0x7c5:0x80e]
---
Predecessors: [0x7ae]
Successors: [0x80f, 0x890]
---
0x7c5 JUMPDEST
0x7c6 DUP3
0x7c7 PUSH1 0x2
0x7c9 PUSH1 0x0
0x7cb DUP8
0x7cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7e1 AND
0x7e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f7 AND
0x7f8 DUP2
0x7f9 MSTORE
0x7fa PUSH1 0x20
0x7fc ADD
0x7fd SWAP1
0x7fe DUP2
0x7ff MSTORE
0x800 PUSH1 0x20
0x802 ADD
0x803 PUSH1 0x0
0x805 SHA3
0x806 SLOAD
0x807 LT
0x808 ISZERO
0x809 DUP1
0x80a ISZERO
0x80b PUSH2 0x890
0x80e JUMPI
---
0x7c5: JUMPDEST 
0x7c7: V527 = 0x2
0x7c9: V528 = 0x0
0x7cc: V529 = 0xffffffffffffffffffffffffffffffffffffffff
0x7e1: V530 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x7e2: V531 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f7: V532 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x7f9: M[0x0] = V532
0x7fa: V533 = 0x20
0x7fc: V534 = ADD 0x20 0x0
0x7ff: M[0x20] = 0x2
0x800: V535 = 0x20
0x802: V536 = ADD 0x20 0x20
0x803: V537 = 0x0
0x805: V538 = SHA3 0x0 0x40
0x806: V539 = S[V538]
0x807: V540 = LT V539 V160
0x808: V541 = ISZERO V540
0x80a: V542 = ISZERO V541
0x80b: V543 = 0x890
0x80e: JUMPI 0x890 V542
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, V541]
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, V541]

================================

Block 0x80f
[0x80f:0x88f]
---
Predecessors: [0x7c5]
Successors: [0x890]
---
0x80f POP
0x810 DUP3
0x811 PUSH1 0x3
0x813 PUSH1 0x0
0x815 DUP8
0x816 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82b AND
0x82c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x841 AND
0x842 DUP2
0x843 MSTORE
0x844 PUSH1 0x20
0x846 ADD
0x847 SWAP1
0x848 DUP2
0x849 MSTORE
0x84a PUSH1 0x20
0x84c ADD
0x84d PUSH1 0x0
0x84f SHA3
0x850 PUSH1 0x0
0x852 CALLER
0x853 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x868 AND
0x869 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x87e AND
0x87f DUP2
0x880 MSTORE
0x881 PUSH1 0x20
0x883 ADD
0x884 SWAP1
0x885 DUP2
0x886 MSTORE
0x887 PUSH1 0x20
0x889 ADD
0x88a PUSH1 0x0
0x88c SHA3
0x88d SLOAD
0x88e LT
0x88f ISZERO
---
0x811: V544 = 0x3
0x813: V545 = 0x0
0x816: V546 = 0xffffffffffffffffffffffffffffffffffffffff
0x82b: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x82c: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x841: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x843: M[0x0] = V549
0x844: V550 = 0x20
0x846: V551 = ADD 0x20 0x0
0x849: M[0x20] = 0x3
0x84a: V552 = 0x20
0x84c: V553 = ADD 0x20 0x20
0x84d: V554 = 0x0
0x84f: V555 = SHA3 0x0 0x40
0x850: V556 = 0x0
0x852: V557 = CALLER
0x853: V558 = 0xffffffffffffffffffffffffffffffffffffffff
0x868: V559 = AND 0xffffffffffffffffffffffffffffffffffffffff V557
0x869: V560 = 0xffffffffffffffffffffffffffffffffffffffff
0x87e: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0x880: M[0x0] = V561
0x881: V562 = 0x20
0x883: V563 = ADD 0x20 0x0
0x886: M[0x20] = V555
0x887: V564 = 0x20
0x889: V565 = ADD 0x20 0x20
0x88a: V566 = 0x0
0x88c: V567 = SHA3 0x0 0x40
0x88d: V568 = S[V567]
0x88e: V569 = LT V568 V160
0x88f: V570 = ISZERO V569
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, V541]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V570]
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, V570]

================================

Block 0x890
[0x890:0x896]
---
Predecessors: [0x7c5, 0x80f]
Successors: [0x897, 0x89c]
---
0x890 JUMPDEST
0x891 DUP1
0x892 ISZERO
0x893 PUSH2 0x89c
0x896 JUMPI
---
0x890: JUMPDEST 
0x892: V571 = ISZERO S0
0x893: V572 = 0x89c
0x896: JUMPI 0x89c V571
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, S0]

================================

Block 0x897
[0x897:0x89b]
---
Predecessors: [0x890]
Successors: [0x89c]
---
0x897 POP
0x898 PUSH1 0x0
0x89a DUP4
0x89b GT
---
0x898: V573 = 0x0
0x89b: V574 = GT V160 0x0
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V574]
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, V574]

================================

Block 0x89c
[0x89c:0x8a2]
---
Predecessors: [0x890, 0x897]
Successors: [0x8a3, 0x927]
---
0x89c JUMPDEST
0x89d DUP1
0x89e ISZERO
0x89f PUSH2 0x927
0x8a2 JUMPI
---
0x89c: JUMPDEST 
0x89e: V575 = ISZERO S0
0x89f: V576 = 0x927
0x8a2: JUMPI 0x927 V575
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, S0]

================================

Block 0x8a3
[0x8a3:0x926]
---
Predecessors: [0x89c]
Successors: [0x927]
---
0x8a3 POP
0x8a4 PUSH1 0x2
0x8a6 PUSH1 0x0
0x8a8 DUP6
0x8a9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8be AND
0x8bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d4 AND
0x8d5 DUP2
0x8d6 MSTORE
0x8d7 PUSH1 0x20
0x8d9 ADD
0x8da SWAP1
0x8db DUP2
0x8dc MSTORE
0x8dd PUSH1 0x20
0x8df ADD
0x8e0 PUSH1 0x0
0x8e2 SHA3
0x8e3 SLOAD
0x8e4 DUP4
0x8e5 PUSH1 0x2
0x8e7 PUSH1 0x0
0x8e9 DUP8
0x8ea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8ff AND
0x900 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x915 AND
0x916 DUP2
0x917 MSTORE
0x918 PUSH1 0x20
0x91a ADD
0x91b SWAP1
0x91c DUP2
0x91d MSTORE
0x91e PUSH1 0x20
0x920 ADD
0x921 PUSH1 0x0
0x923 SHA3
0x924 SLOAD
0x925 ADD
0x926 GT
---
0x8a4: V577 = 0x2
0x8a6: V578 = 0x0
0x8a9: V579 = 0xffffffffffffffffffffffffffffffffffffffff
0x8be: V580 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x8bf: V581 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d4: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V580
0x8d6: M[0x0] = V582
0x8d7: V583 = 0x20
0x8d9: V584 = ADD 0x20 0x0
0x8dc: M[0x20] = 0x2
0x8dd: V585 = 0x20
0x8df: V586 = ADD 0x20 0x20
0x8e0: V587 = 0x0
0x8e2: V588 = SHA3 0x0 0x40
0x8e3: V589 = S[V588]
0x8e5: V590 = 0x2
0x8e7: V591 = 0x0
0x8ea: V592 = 0xffffffffffffffffffffffffffffffffffffffff
0x8ff: V593 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x900: V594 = 0xffffffffffffffffffffffffffffffffffffffff
0x915: V595 = AND 0xffffffffffffffffffffffffffffffffffffffff V593
0x917: M[0x0] = V595
0x918: V596 = 0x20
0x91a: V597 = ADD 0x20 0x0
0x91d: M[0x20] = 0x2
0x91e: V598 = 0x20
0x920: V599 = ADD 0x20 0x20
0x921: V600 = 0x0
0x923: V601 = SHA3 0x0 0x40
0x924: V602 = S[V601]
0x925: V603 = ADD V602 V160
0x926: V604 = GT V603 V589
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V604]
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, V604]

================================

Block 0x927
[0x927:0x92c]
---
Predecessors: [0x89c, 0x8a3]
Successors: [0x92d, 0xabe]
---
0x927 JUMPDEST
0x928 ISZERO
0x929 PUSH2 0xabe
0x92c JUMPI
---
0x927: JUMPDEST 
0x928: V605 = ISZERO S0
0x929: V606 = 0xabe
0x92c: JUMPI 0xabe V605
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60]

================================

Block 0x92d
[0x92d:0xabd]
---
Predecessors: [0x927]
Successors: [0xac3]
---
0x92d DUP3
0x92e PUSH1 0x2
0x930 PUSH1 0x0
0x932 DUP8
0x933 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x948 AND
0x949 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x95e AND
0x95f DUP2
0x960 MSTORE
0x961 PUSH1 0x20
0x963 ADD
0x964 SWAP1
0x965 DUP2
0x966 MSTORE
0x967 PUSH1 0x20
0x969 ADD
0x96a PUSH1 0x0
0x96c SHA3
0x96d PUSH1 0x0
0x96f DUP3
0x970 DUP3
0x971 SLOAD
0x972 SUB
0x973 SWAP3
0x974 POP
0x975 POP
0x976 DUP2
0x977 SWAP1
0x978 SSTORE
0x979 POP
0x97a DUP3
0x97b PUSH1 0x3
0x97d PUSH1 0x0
0x97f DUP8
0x980 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x995 AND
0x996 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ab AND
0x9ac DUP2
0x9ad MSTORE
0x9ae PUSH1 0x20
0x9b0 ADD
0x9b1 SWAP1
0x9b2 DUP2
0x9b3 MSTORE
0x9b4 PUSH1 0x20
0x9b6 ADD
0x9b7 PUSH1 0x0
0x9b9 SHA3
0x9ba PUSH1 0x0
0x9bc CALLER
0x9bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d2 AND
0x9d3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e8 AND
0x9e9 DUP2
0x9ea MSTORE
0x9eb PUSH1 0x20
0x9ed ADD
0x9ee SWAP1
0x9ef DUP2
0x9f0 MSTORE
0x9f1 PUSH1 0x20
0x9f3 ADD
0x9f4 PUSH1 0x0
0x9f6 SHA3
0x9f7 PUSH1 0x0
0x9f9 DUP3
0x9fa DUP3
0x9fb SLOAD
0x9fc SUB
0x9fd SWAP3
0x9fe POP
0x9ff POP
0xa00 DUP2
0xa01 SWAP1
0xa02 SSTORE
0xa03 POP
0xa04 DUP3
0xa05 PUSH1 0x2
0xa07 PUSH1 0x0
0xa09 DUP7
0xa0a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1f AND
0xa20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa35 AND
0xa36 DUP2
0xa37 MSTORE
0xa38 PUSH1 0x20
0xa3a ADD
0xa3b SWAP1
0xa3c DUP2
0xa3d MSTORE
0xa3e PUSH1 0x20
0xa40 ADD
0xa41 PUSH1 0x0
0xa43 SHA3
0xa44 PUSH1 0x0
0xa46 DUP3
0xa47 DUP3
0xa48 SLOAD
0xa49 ADD
0xa4a SWAP3
0xa4b POP
0xa4c POP
0xa4d DUP2
0xa4e SWAP1
0xa4f SSTORE
0xa50 POP
0xa51 DUP4
0xa52 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa67 AND
0xa68 DUP6
0xa69 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa7e AND
0xa7f PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xaa0 DUP6
0xaa1 PUSH1 0x40
0xaa3 MLOAD
0xaa4 DUP1
0xaa5 DUP3
0xaa6 DUP2
0xaa7 MSTORE
0xaa8 PUSH1 0x20
0xaaa ADD
0xaab SWAP2
0xaac POP
0xaad POP
0xaae PUSH1 0x40
0xab0 MLOAD
0xab1 DUP1
0xab2 SWAP2
0xab3 SUB
0xab4 SWAP1
0xab5 LOG3
0xab6 PUSH1 0x1
0xab8 SWAP2
0xab9 POP
0xaba PUSH2 0xac3
0xabd JUMP
---
0x92e: V607 = 0x2
0x930: V608 = 0x0
0x933: V609 = 0xffffffffffffffffffffffffffffffffffffffff
0x948: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x949: V611 = 0xffffffffffffffffffffffffffffffffffffffff
0x95e: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V610
0x960: M[0x0] = V612
0x961: V613 = 0x20
0x963: V614 = ADD 0x20 0x0
0x966: M[0x20] = 0x2
0x967: V615 = 0x20
0x969: V616 = ADD 0x20 0x20
0x96a: V617 = 0x0
0x96c: V618 = SHA3 0x0 0x40
0x96d: V619 = 0x0
0x971: V620 = S[V618]
0x972: V621 = SUB V620 V160
0x978: S[V618] = V621
0x97b: V622 = 0x3
0x97d: V623 = 0x0
0x980: V624 = 0xffffffffffffffffffffffffffffffffffffffff
0x995: V625 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x996: V626 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ab: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V625
0x9ad: M[0x0] = V627
0x9ae: V628 = 0x20
0x9b0: V629 = ADD 0x20 0x0
0x9b3: M[0x20] = 0x3
0x9b4: V630 = 0x20
0x9b6: V631 = ADD 0x20 0x20
0x9b7: V632 = 0x0
0x9b9: V633 = SHA3 0x0 0x40
0x9ba: V634 = 0x0
0x9bc: V635 = CALLER
0x9bd: V636 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d2: V637 = AND 0xffffffffffffffffffffffffffffffffffffffff V635
0x9d3: V638 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e8: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V637
0x9ea: M[0x0] = V639
0x9eb: V640 = 0x20
0x9ed: V641 = ADD 0x20 0x0
0x9f0: M[0x20] = V633
0x9f1: V642 = 0x20
0x9f3: V643 = ADD 0x20 0x20
0x9f4: V644 = 0x0
0x9f6: V645 = SHA3 0x0 0x40
0x9f7: V646 = 0x0
0x9fb: V647 = S[V645]
0x9fc: V648 = SUB V647 V160
0xa02: S[V645] = V648
0xa05: V649 = 0x2
0xa07: V650 = 0x0
0xa0a: V651 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1f: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0xa20: V653 = 0xffffffffffffffffffffffffffffffffffffffff
0xa35: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff V652
0xa37: M[0x0] = V654
0xa38: V655 = 0x20
0xa3a: V656 = ADD 0x20 0x0
0xa3d: M[0x20] = 0x2
0xa3e: V657 = 0x20
0xa40: V658 = ADD 0x20 0x20
0xa41: V659 = 0x0
0xa43: V660 = SHA3 0x0 0x40
0xa44: V661 = 0x0
0xa48: V662 = S[V660]
0xa49: V663 = ADD V662 V160
0xa4f: S[V660] = V663
0xa52: V664 = 0xffffffffffffffffffffffffffffffffffffffff
0xa67: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0xa69: V666 = 0xffffffffffffffffffffffffffffffffffffffff
0xa7e: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0xa7f: V668 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xaa1: V669 = 0x40
0xaa3: V670 = M[0x40]
0xaa7: M[V670] = V160
0xaa8: V671 = 0x20
0xaaa: V672 = ADD 0x20 V670
0xaae: V673 = 0x40
0xab0: V674 = M[0x40]
0xab3: V675 = SUB V672 V674
0xab5: LOG V674 V675 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V667 V665
0xab6: V676 = 0x1
0xaba: V677 = 0xac3
0xabd: JUMP 0xac3
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60]
Stack pops: 5
Stack additions: [S4, S3, S2, 0x1, S0]
Exit stack: [V11, 0x250, V152, V157, V160, 0x1, 0x60]

================================

Block 0xabe
[0xabe:0xac2]
---
Predecessors: [0x927]
Successors: [0xac3]
---
0xabe JUMPDEST
0xabf PUSH1 0x0
0xac1 SWAP2
0xac2 POP
---
0xabe: JUMPDEST 
0xabf: V678 = 0x0
---
Entry stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x250, V152, V157, V160, 0x0, 0x60]

================================

Block 0xac3
[0xac3:0xaca]
---
Predecessors: [0x92d, 0xabe]
Successors: [0x250]
---
0xac3 JUMPDEST
0xac4 POP
0xac5 SWAP4
0xac6 SWAP3
0xac7 POP
0xac8 POP
0xac9 POP
0xaca JUMP
---
0xac3: JUMPDEST 
0xaca: JUMP 0x250
---
Entry stack: [V11, 0x250, V152, V157, V160, {0x0, 0x1}, 0x60]
Stack pops: 6
Stack additions: [S1]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0xacb
[0xacb:0xad3]
---
Predecessors: [0x275]
Successors: [0x27d]
---
0xacb JUMPDEST
0xacc PUSH1 0x0
0xace PUSH1 0x8
0xad0 SWAP1
0xad1 POP
0xad2 SWAP1
0xad3 JUMP
---
0xacb: JUMPDEST 
0xacc: V679 = 0x0
0xace: V680 = 0x8
0xad3: JUMP 0x27d
---
Entry stack: [V11, 0x27d]
Stack pops: 1
Stack additions: [0x8]
Exit stack: [V11, 0x8]

================================

Block 0xad4
[0xad4:0xaf4]
---
Predecessors: [0x2a4, 0xb8f]
Successors: [0x2d0, 0xb9e]
---
0xad4 JUMPDEST
0xad5 PUSH1 0x0
0xad7 DUP2
0xad8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaed AND
0xaee BALANCE
0xaef SWAP1
0xaf0 POP
0xaf1 SWAP2
0xaf2 SWAP1
0xaf3 POP
0xaf4 JUMP
---
0xad4: JUMPDEST 
0xad5: V681 = 0x0
0xad8: V682 = 0xffffffffffffffffffffffffffffffffffffffff
0xaed: V683 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xaee: V684 = BALANCE V683
0xaf4: JUMP {0x2d0, 0xb9e}
---
Entry stack: [V11, 0x350, V229, V237, V240, S3, S2, {0x2d0, 0xb9e}, S0]
Stack pops: 2
Stack additions: [V684]
Exit stack: [V11, 0x350, V229, V237, V240, S3, S2, V684]

================================

Block 0xaf5
[0xaf5:0xb4e]
---
Predecessors: [0x2f1]
Successors: [0xb4f, 0xb53]
---
0xaf5 JUMPDEST
0xaf6 PUSH1 0x0
0xaf8 PUSH1 0x1
0xafa PUSH1 0x0
0xafc SWAP1
0xafd SLOAD
0xafe SWAP1
0xaff PUSH2 0x100
0xb02 EXP
0xb03 SWAP1
0xb04 DIV
0xb05 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1a AND
0xb1b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb30 AND
0xb31 CALLER
0xb32 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb47 AND
0xb48 EQ
0xb49 ISZERO
0xb4a ISZERO
0xb4b PUSH2 0xb53
0xb4e JUMPI
---
0xaf5: JUMPDEST 
0xaf6: V685 = 0x0
0xaf8: V686 = 0x1
0xafa: V687 = 0x0
0xafd: V688 = S[0x1]
0xaff: V689 = 0x100
0xb02: V690 = EXP 0x100 0x0
0xb04: V691 = DIV V688 0x1
0xb05: V692 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1a: V693 = AND 0xffffffffffffffffffffffffffffffffffffffff V691
0xb1b: V694 = 0xffffffffffffffffffffffffffffffffffffffff
0xb30: V695 = AND 0xffffffffffffffffffffffffffffffffffffffff V693
0xb31: V696 = CALLER
0xb32: V697 = 0xffffffffffffffffffffffffffffffffffffffff
0xb47: V698 = AND 0xffffffffffffffffffffffffffffffffffffffff V696
0xb48: V699 = EQ V698 V695
0xb49: V700 = ISZERO V699
0xb4a: V701 = ISZERO V700
0xb4b: V702 = 0xb53
0xb4e: JUMPI 0xb53 V701
---
Entry stack: [V11, 0x350, V229, V237, V240]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x350, V229, V237, V240, 0x0]

================================

Block 0xb4f
[0xb4f:0xb52]
---
Predecessors: [0xaf5]
Successors: []
---
0xb4f PUSH1 0x0
0xb51 DUP1
0xb52 REVERT
---
0xb4f: V703 = 0x0
0xb52: REVERT 0x0 0x0
---
Entry stack: [V11, 0x350, V229, V237, V240, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x350, V229, V237, V240, 0x0]

================================

Block 0xb53
[0xb53:0xb6a]
---
Predecessors: [0xaf5]
Successors: [0xb6b, 0xb6f]
---
0xb53 JUMPDEST
0xb54 PUSH1 0x5
0xb56 PUSH1 0x0
0xb58 SWAP1
0xb59 SLOAD
0xb5a SWAP1
0xb5b PUSH2 0x100
0xb5e EXP
0xb5f SWAP1
0xb60 DIV
0xb61 PUSH1 0xff
0xb63 AND
0xb64 ISZERO
0xb65 ISZERO
0xb66 ISZERO
0xb67 PUSH2 0xb6f
0xb6a JUMPI
---
0xb53: JUMPDEST 
0xb54: V704 = 0x5
0xb56: V705 = 0x0
0xb59: V706 = S[0x5]
0xb5b: V707 = 0x100
0xb5e: V708 = EXP 0x100 0x0
0xb60: V709 = DIV V706 0x1
0xb61: V710 = 0xff
0xb63: V711 = AND 0xff V709
0xb64: V712 = ISZERO V711
0xb65: V713 = ISZERO V712
0xb66: V714 = ISZERO V713
0xb67: V715 = 0xb6f
0xb6a: JUMPI 0xb6f V714
---
Entry stack: [V11, 0x350, V229, V237, V240, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x350, V229, V237, V240, 0x0]

================================

Block 0xb6b
[0xb6b:0xb6e]
---
Predecessors: [0xb53]
Successors: []
---
0xb6b PUSH1 0x0
0xb6d DUP1
0xb6e REVERT
---
0xb6b: V716 = 0x0
0xb6e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x350, V229, V237, V240, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x350, V229, V237, V240, 0x0]

================================

Block 0xb6f
[0xb6f:0xb73]
---
Predecessors: [0xb53]
Successors: [0xb74]
---
0xb6f JUMPDEST
0xb70 PUSH1 0x0
0xb72 SWAP1
0xb73 POP
---
0xb6f: JUMPDEST 
0xb70: V717 = 0x0
---
Entry stack: [V11, 0x350, V229, V237, V240, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x350, V229, V237, V240, 0x0]

================================

Block 0xb74
[0xb74:0xb7d]
---
Predecessors: [0xb6f, 0xd1b]
Successors: [0xb7e, 0xd28]
---
0xb74 JUMPDEST
0xb75 DUP4
0xb76 MLOAD
0xb77 DUP2
0xb78 LT
0xb79 ISZERO
0xb7a PUSH2 0xd28
0xb7d JUMPI
---
0xb74: JUMPDEST 
0xb76: V718 = M[V229]
0xb78: V719 = LT S0 V718
0xb79: V720 = ISZERO V719
0xb7a: V721 = 0xd28
0xb7d: JUMPI 0xd28 V720
---
Entry stack: [V11, 0x350, V229, V237, V240, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x350, V229, V237, V240, S0]

================================

Block 0xb7e
[0xb7e:0xb8d]
---
Predecessors: [0xb74]
Successors: [0xb8e, 0xb8f]
---
0xb7e DUP2
0xb7f PUSH2 0xb9e
0xb82 DUP6
0xb83 DUP4
0xb84 DUP2
0xb85 MLOAD
0xb86 DUP2
0xb87 LT
0xb88 ISZERO
0xb89 ISZERO
0xb8a PUSH2 0xb8f
0xb8d JUMPI
---
0xb7f: V722 = 0xb9e
0xb85: V723 = M[V229]
0xb87: V724 = LT S0 V723
0xb88: V725 = ISZERO V724
0xb89: V726 = ISZERO V725
0xb8a: V727 = 0xb8f
0xb8d: JUMPI 0xb8f V726
---
Entry stack: [V11, 0x350, V229, V237, V240, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S1, 0xb9e, S3, S0]
Exit stack: [V11, 0x350, V229, V237, V240, S0, V240, 0xb9e, V229, S0]

================================

Block 0xb8e
[0xb8e:0xb8e]
---
Predecessors: [0xb7e]
Successors: []
---
0xb8e INVALID
---
0xb8e: INVALID 
---
Entry stack: [V11, 0x350, V229, V237, V240, S4, V240, 0xb9e, V229, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x350, V229, V237, V240, S4, V240, 0xb9e, V229, S0]

================================

Block 0xb8f
[0xb8f:0xb9d]
---
Predecessors: [0xb7e]
Successors: [0xad4]
---
0xb8f JUMPDEST
0xb90 SWAP1
0xb91 PUSH1 0x20
0xb93 ADD
0xb94 SWAP1
0xb95 PUSH1 0x20
0xb97 MUL
0xb98 ADD
0xb99 MLOAD
0xb9a PUSH2 0xad4
0xb9d JUMP
---
0xb8f: JUMPDEST 
0xb91: V728 = 0x20
0xb93: V729 = ADD 0x20 V229
0xb95: V730 = 0x20
0xb97: V731 = MUL 0x20 S0
0xb98: V732 = ADD V731 V729
0xb99: V733 = M[V732]
0xb9a: V734 = 0xad4
0xb9d: JUMP 0xad4
---
Entry stack: [V11, 0x350, V229, V237, V240, S4, V240, 0xb9e, V229, S0]
Stack pops: 2
Stack additions: [V733]
Exit stack: [V11, 0x350, V229, V237, V240, S4, V240, 0xb9e, V733]

================================

Block 0xb9e
[0xb9e:0xba4]
---
Predecessors: [0xad4]
Successors: [0xba5, 0xba9]
---
0xb9e JUMPDEST
0xb9f LT
0xba0 ISZERO
0xba1 PUSH2 0xba9
0xba4 JUMPI
---
0xb9e: JUMPDEST 
0xb9f: V735 = LT V684 S1
0xba0: V736 = ISZERO V735
0xba1: V737 = 0xba9
0xba4: JUMPI 0xba9 V736
---
Entry stack: [V11, 0x350, V229, V237, V240, S2, S1, V684]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x350, V229, V237, V240, S2]

================================

Block 0xba5
[0xba5:0xba8]
---
Predecessors: [0xb9e]
Successors: [0xd1b]
---
0xba5 PUSH2 0xd1b
0xba8 JUMP
---
0xba5: V738 = 0xd1b
0xba8: JUMP 0xd1b
---
Entry stack: [V11, 0x350, V229, V237, V240, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x350, V229, V237, V240, S0]

================================

Block 0xba9
[0xba9:0xc29]
---
Predecessors: [0xb9e]
Successors: [0xc2a, 0xc2b]
---
0xba9 JUMPDEST
0xbaa DUP3
0xbab PUSH1 0x2
0xbad PUSH1 0x0
0xbaf PUSH1 0x1
0xbb1 PUSH1 0x0
0xbb3 SWAP1
0xbb4 SLOAD
0xbb5 SWAP1
0xbb6 PUSH2 0x100
0xbb9 EXP
0xbba SWAP1
0xbbb DIV
0xbbc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbd1 AND
0xbd2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe7 AND
0xbe8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbfd AND
0xbfe DUP2
0xbff MSTORE
0xc00 PUSH1 0x20
0xc02 ADD
0xc03 SWAP1
0xc04 DUP2
0xc05 MSTORE
0xc06 PUSH1 0x20
0xc08 ADD
0xc09 PUSH1 0x0
0xc0b SHA3
0xc0c PUSH1 0x0
0xc0e DUP3
0xc0f DUP3
0xc10 SLOAD
0xc11 SUB
0xc12 SWAP3
0xc13 POP
0xc14 POP
0xc15 DUP2
0xc16 SWAP1
0xc17 SSTORE
0xc18 POP
0xc19 DUP3
0xc1a PUSH1 0x2
0xc1c PUSH1 0x0
0xc1e DUP7
0xc1f DUP5
0xc20 DUP2
0xc21 MLOAD
0xc22 DUP2
0xc23 LT
0xc24 ISZERO
0xc25 ISZERO
0xc26 PUSH2 0xc2b
0xc29 JUMPI
---
0xba9: JUMPDEST 
0xbab: V739 = 0x2
0xbad: V740 = 0x0
0xbaf: V741 = 0x1
0xbb1: V742 = 0x0
0xbb4: V743 = S[0x1]
0xbb6: V744 = 0x100
0xbb9: V745 = EXP 0x100 0x0
0xbbb: V746 = DIV V743 0x1
0xbbc: V747 = 0xffffffffffffffffffffffffffffffffffffffff
0xbd1: V748 = AND 0xffffffffffffffffffffffffffffffffffffffff V746
0xbd2: V749 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe7: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff V748
0xbe8: V751 = 0xffffffffffffffffffffffffffffffffffffffff
0xbfd: V752 = AND 0xffffffffffffffffffffffffffffffffffffffff V750
0xbff: M[0x0] = V752
0xc00: V753 = 0x20
0xc02: V754 = ADD 0x20 0x0
0xc05: M[0x20] = 0x2
0xc06: V755 = 0x20
0xc08: V756 = ADD 0x20 0x20
0xc09: V757 = 0x0
0xc0b: V758 = SHA3 0x0 0x40
0xc0c: V759 = 0x0
0xc10: V760 = S[V758]
0xc11: V761 = SUB V760 V237
0xc17: S[V758] = V761
0xc1a: V762 = 0x2
0xc1c: V763 = 0x0
0xc21: V764 = M[V229]
0xc23: V765 = LT S0 V764
0xc24: V766 = ISZERO V765
0xc25: V767 = ISZERO V766
0xc26: V768 = 0xc2b
0xc29: JUMPI 0xc2b V767
---
Entry stack: [V11, 0x350, V229, V237, V240, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S2, 0x2, 0x0, S3, S0]
Exit stack: [V11, 0x350, V229, V237, V240, S0, V237, 0x2, 0x0, V229, S0]

================================

Block 0xc2a
[0xc2a:0xc2a]
---
Predecessors: [0xba9]
Successors: []
---
0xc2a INVALID
---
0xc2a: INVALID 
---
Entry stack: [V11, 0x350, V229, V237, V240, S5, V237, 0x2, 0x0, V229, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x350, V229, V237, V240, S5, V237, 0x2, 0x0, V229, S0]

================================

Block 0xc2b
[0xc2b:0xc88]
---
Predecessors: [0xba9]
Successors: [0xc89, 0xc8a]
---
0xc2b JUMPDEST
0xc2c SWAP1
0xc2d PUSH1 0x20
0xc2f ADD
0xc30 SWAP1
0xc31 PUSH1 0x20
0xc33 MUL
0xc34 ADD
0xc35 MLOAD
0xc36 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4b AND
0xc4c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc61 AND
0xc62 DUP2
0xc63 MSTORE
0xc64 PUSH1 0x20
0xc66 ADD
0xc67 SWAP1
0xc68 DUP2
0xc69 MSTORE
0xc6a PUSH1 0x20
0xc6c ADD
0xc6d PUSH1 0x0
0xc6f SHA3
0xc70 PUSH1 0x0
0xc72 DUP3
0xc73 DUP3
0xc74 SLOAD
0xc75 ADD
0xc76 SWAP3
0xc77 POP
0xc78 POP
0xc79 DUP2
0xc7a SWAP1
0xc7b SSTORE
0xc7c POP
0xc7d DUP4
0xc7e DUP2
0xc7f DUP2
0xc80 MLOAD
0xc81 DUP2
0xc82 LT
0xc83 ISZERO
0xc84 ISZERO
0xc85 PUSH2 0xc8a
0xc88 JUMPI
---
0xc2b: JUMPDEST 
0xc2d: V769 = 0x20
0xc2f: V770 = ADD 0x20 V229
0xc31: V771 = 0x20
0xc33: V772 = MUL 0x20 S0
0xc34: V773 = ADD V772 V770
0xc35: V774 = M[V773]
0xc36: V775 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4b: V776 = AND 0xffffffffffffffffffffffffffffffffffffffff V774
0xc4c: V777 = 0xffffffffffffffffffffffffffffffffffffffff
0xc61: V778 = AND 0xffffffffffffffffffffffffffffffffffffffff V776
0xc63: M[0x0] = V778
0xc64: V779 = 0x20
0xc66: V780 = ADD 0x20 0x0
0xc69: M[0x20] = 0x2
0xc6a: V781 = 0x20
0xc6c: V782 = ADD 0x20 0x20
0xc6d: V783 = 0x0
0xc6f: V784 = SHA3 0x0 0x40
0xc70: V785 = 0x0
0xc74: V786 = S[V784]
0xc75: V787 = ADD V786 V237
0xc7b: S[V784] = V787
0xc80: V788 = M[V229]
0xc82: V789 = LT S5 V788
0xc83: V790 = ISZERO V789
0xc84: V791 = ISZERO V790
0xc85: V792 = 0xc8a
0xc88: JUMPI 0xc8a V791
---
Entry stack: [V11, 0x350, V229, V237, V240, S5, V237, 0x2, 0x0, V229, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S8, S5]
Exit stack: [V11, 0x350, V229, V237, V240, S5, V229, S5]

================================

Block 0xc89
[0xc89:0xc89]
---
Predecessors: [0xc2b]
Successors: []
---
0xc89 INVALID
---
0xc89: INVALID 
---
Entry stack: [V11, 0x350, V229, V237, V240, S2, V229, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x350, V229, V237, V240, S2, V229, S0]

================================

Block 0xc8a
[0xc8a:0xd1a]
---
Predecessors: [0xc2b]
Successors: [0xd1b]
---
0xc8a JUMPDEST
0xc8b SWAP1
0xc8c PUSH1 0x20
0xc8e ADD
0xc8f SWAP1
0xc90 PUSH1 0x20
0xc92 MUL
0xc93 ADD
0xc94 MLOAD
0xc95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcaa AND
0xcab PUSH1 0x1
0xcad PUSH1 0x0
0xcaf SWAP1
0xcb0 SLOAD
0xcb1 SWAP1
0xcb2 PUSH2 0x100
0xcb5 EXP
0xcb6 SWAP1
0xcb7 DIV
0xcb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xccd AND
0xcce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce3 AND
0xce4 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xd05 DUP6
0xd06 PUSH1 0x40
0xd08 MLOAD
0xd09 DUP1
0xd0a DUP3
0xd0b DUP2
0xd0c MSTORE
0xd0d PUSH1 0x20
0xd0f ADD
0xd10 SWAP2
0xd11 POP
0xd12 POP
0xd13 PUSH1 0x40
0xd15 MLOAD
0xd16 DUP1
0xd17 SWAP2
0xd18 SUB
0xd19 SWAP1
0xd1a LOG3
---
0xc8a: JUMPDEST 
0xc8c: V793 = 0x20
0xc8e: V794 = ADD 0x20 V229
0xc90: V795 = 0x20
0xc92: V796 = MUL 0x20 S0
0xc93: V797 = ADD V796 V794
0xc94: V798 = M[V797]
0xc95: V799 = 0xffffffffffffffffffffffffffffffffffffffff
0xcaa: V800 = AND 0xffffffffffffffffffffffffffffffffffffffff V798
0xcab: V801 = 0x1
0xcad: V802 = 0x0
0xcb0: V803 = S[0x1]
0xcb2: V804 = 0x100
0xcb5: V805 = EXP 0x100 0x0
0xcb7: V806 = DIV V803 0x1
0xcb8: V807 = 0xffffffffffffffffffffffffffffffffffffffff
0xccd: V808 = AND 0xffffffffffffffffffffffffffffffffffffffff V806
0xcce: V809 = 0xffffffffffffffffffffffffffffffffffffffff
0xce3: V810 = AND 0xffffffffffffffffffffffffffffffffffffffff V808
0xce4: V811 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xd06: V812 = 0x40
0xd08: V813 = M[0x40]
0xd0c: M[V813] = V237
0xd0d: V814 = 0x20
0xd0f: V815 = ADD 0x20 V813
0xd13: V816 = 0x40
0xd15: V817 = M[0x40]
0xd18: V818 = SUB V815 V817
0xd1a: LOG V817 V818 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V810 V800
---
Entry stack: [V11, 0x350, V229, V237, V240, S2, V229, S0]
Stack pops: 5
Stack additions: [S4, S3, S2]
Exit stack: [V11, 0x350, V229, V237, V240, S2]

================================

Block 0xd1b
[0xd1b:0xd27]
---
Predecessors: [0xba5, 0xc8a]
Successors: [0xb74]
---
0xd1b JUMPDEST
0xd1c DUP1
0xd1d DUP1
0xd1e PUSH1 0x1
0xd20 ADD
0xd21 SWAP2
0xd22 POP
0xd23 POP
0xd24 PUSH2 0xb74
0xd27 JUMP
---
0xd1b: JUMPDEST 
0xd1e: V819 = 0x1
0xd20: V820 = ADD 0x1 S0
0xd24: V821 = 0xb74
0xd27: JUMP 0xb74
---
Entry stack: [V11, 0x350, V229, V237, V240, S0]
Stack pops: 1
Stack additions: [V820]
Exit stack: [V11, 0x350, V229, V237, V240, V820]

================================

Block 0xd28
[0xd28:0xd2d]
---
Predecessors: [0xb74]
Successors: [0x350]
---
0xd28 JUMPDEST
0xd29 POP
0xd2a POP
0xd2b POP
0xd2c POP
0xd2d JUMP
---
0xd28: JUMPDEST 
0xd2d: JUMP 0x350
---
Entry stack: [V11, 0x350, V229, V237, V240, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0xd2e
[0xd2e:0xd76]
---
Predecessors: [0x35d]
Successors: [0x389]
---
0xd2e JUMPDEST
0xd2f PUSH1 0x0
0xd31 PUSH1 0x2
0xd33 PUSH1 0x0
0xd35 DUP4
0xd36 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd4b AND
0xd4c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd61 AND
0xd62 DUP2
0xd63 MSTORE
0xd64 PUSH1 0x20
0xd66 ADD
0xd67 SWAP1
0xd68 DUP2
0xd69 MSTORE
0xd6a PUSH1 0x20
0xd6c ADD
0xd6d PUSH1 0x0
0xd6f SHA3
0xd70 SLOAD
0xd71 SWAP1
0xd72 POP
0xd73 SWAP2
0xd74 SWAP1
0xd75 POP
0xd76 JUMP
---
0xd2e: JUMPDEST 
0xd2f: V822 = 0x0
0xd31: V823 = 0x2
0xd33: V824 = 0x0
0xd36: V825 = 0xffffffffffffffffffffffffffffffffffffffff
0xd4b: V826 = AND 0xffffffffffffffffffffffffffffffffffffffff V252
0xd4c: V827 = 0xffffffffffffffffffffffffffffffffffffffff
0xd61: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff V826
0xd63: M[0x0] = V828
0xd64: V829 = 0x20
0xd66: V830 = ADD 0x20 0x0
0xd69: M[0x20] = 0x2
0xd6a: V831 = 0x20
0xd6c: V832 = ADD 0x20 0x20
0xd6d: V833 = 0x0
0xd6f: V834 = SHA3 0x0 0x40
0xd70: V835 = S[V834]
0xd76: JUMP 0x389
---
Entry stack: [V11, 0x389, V252]
Stack pops: 2
Stack additions: [V835]
Exit stack: [V11, V835]

================================

Block 0xd77
[0xd77:0xd7e]
---
Predecessors: [0x3aa]
Successors: [0x13bf]
---
0xd77 JUMPDEST
0xd78 PUSH2 0xd7f
0xd7b PUSH2 0x13bf
0xd7e JUMP
---
0xd77: JUMPDEST 
0xd78: V836 = 0xd7f
0xd7b: V837 = 0x13bf
0xd7e: JUMP 0x13bf
---
Entry stack: [V11, 0x3b2]
Stack pops: 0
Stack additions: [0xd7f]
Exit stack: [V11, 0x3b2, 0xd7f]

================================

Block 0xd7f
[0xd7f:0xdb9]
---
Predecessors: [0x13bf]
Successors: [0xf3, 0x3b2]
---
0xd7f JUMPDEST
0xd80 PUSH1 0x40
0xd82 DUP1
0xd83 MLOAD
0xd84 SWAP1
0xd85 DUP2
0xd86 ADD
0xd87 PUSH1 0x40
0xd89 MSTORE
0xd8a DUP1
0xd8b PUSH1 0x2
0xd8d DUP2
0xd8e MSTORE
0xd8f PUSH1 0x20
0xd91 ADD
0xd92 PUSH32 0x4a53000000000000000000000000000000000000000000000000000000000000
0xdb3 DUP2
0xdb4 MSTORE
0xdb5 POP
0xdb6 SWAP1
0xdb7 POP
0xdb8 SWAP1
0xdb9 JUMP
---
0xd7f: JUMPDEST 
0xd80: V838 = 0x40
0xd83: V839 = M[0x40]
0xd86: V840 = ADD V839 0x40
0xd87: V841 = 0x40
0xd89: M[0x40] = V840
0xd8b: V842 = 0x2
0xd8e: M[V839] = 0x2
0xd8f: V843 = 0x20
0xd91: V844 = ADD 0x20 V839
0xd92: V845 = 0x4a53000000000000000000000000000000000000000000000000000000000000
0xdb4: M[V844] = 0x4a53000000000000000000000000000000000000000000000000000000000000
0xdb9: JUMP {0xf3, 0x3b2}
---
Entry stack: [V11, {0xf3, 0x3b2}, V1179]
Stack pops: 2
Stack additions: [V839]
Exit stack: [V11, V839]

================================

Block 0xdba
[0xdba:0xe13]
---
Predecessors: [0x438]
Successors: [0xe14, 0xe18]
---
0xdba JUMPDEST
0xdbb PUSH1 0x0
0xdbd PUSH1 0x1
0xdbf PUSH1 0x0
0xdc1 SWAP1
0xdc2 SLOAD
0xdc3 SWAP1
0xdc4 PUSH2 0x100
0xdc7 EXP
0xdc8 SWAP1
0xdc9 DIV
0xdca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xddf AND
0xde0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf5 AND
0xdf6 CALLER
0xdf7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0c AND
0xe0d EQ
0xe0e ISZERO
0xe0f ISZERO
0xe10 PUSH2 0xe18
0xe13 JUMPI
---
0xdba: JUMPDEST 
0xdbb: V846 = 0x0
0xdbd: V847 = 0x1
0xdbf: V848 = 0x0
0xdc2: V849 = S[0x1]
0xdc4: V850 = 0x100
0xdc7: V851 = EXP 0x100 0x0
0xdc9: V852 = DIV V849 0x1
0xdca: V853 = 0xffffffffffffffffffffffffffffffffffffffff
0xddf: V854 = AND 0xffffffffffffffffffffffffffffffffffffffff V852
0xde0: V855 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf5: V856 = AND 0xffffffffffffffffffffffffffffffffffffffff V854
0xdf6: V857 = CALLER
0xdf7: V858 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0c: V859 = AND 0xffffffffffffffffffffffffffffffffffffffff V857
0xe0d: V860 = EQ V859 V856
0xe0e: V861 = ISZERO V860
0xe0f: V862 = ISZERO V861
0xe10: V863 = 0xe18
0xe13: JUMPI 0xe18 V862
---
Entry stack: [V11, 0x440]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x440, 0x0]

================================

Block 0xe14
[0xe14:0xe17]
---
Predecessors: [0xdba]
Successors: []
---
0xe14 PUSH1 0x0
0xe16 DUP1
0xe17 REVERT
---
0xe14: V864 = 0x0
0xe17: REVERT 0x0 0x0
---
Entry stack: [V11, 0x440, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x440, 0x0]

================================

Block 0xe18
[0xe18:0xe65]
---
Predecessors: [0xdba]
Successors: [0x440]
---
0xe18 JUMPDEST
0xe19 PUSH1 0x1
0xe1b PUSH1 0x5
0xe1d PUSH1 0x0
0xe1f PUSH2 0x100
0xe22 EXP
0xe23 DUP2
0xe24 SLOAD
0xe25 DUP2
0xe26 PUSH1 0xff
0xe28 MUL
0xe29 NOT
0xe2a AND
0xe2b SWAP1
0xe2c DUP4
0xe2d ISZERO
0xe2e ISZERO
0xe2f MUL
0xe30 OR
0xe31 SWAP1
0xe32 SSTORE
0xe33 POP
0xe34 PUSH32 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0xe55 PUSH1 0x40
0xe57 MLOAD
0xe58 PUSH1 0x40
0xe5a MLOAD
0xe5b DUP1
0xe5c SWAP2
0xe5d SUB
0xe5e SWAP1
0xe5f LOG1
0xe60 PUSH1 0x1
0xe62 SWAP1
0xe63 POP
0xe64 SWAP1
0xe65 JUMP
---
0xe18: JUMPDEST 
0xe19: V865 = 0x1
0xe1b: V866 = 0x5
0xe1d: V867 = 0x0
0xe1f: V868 = 0x100
0xe22: V869 = EXP 0x100 0x0
0xe24: V870 = S[0x5]
0xe26: V871 = 0xff
0xe28: V872 = MUL 0xff 0x1
0xe29: V873 = NOT 0xff
0xe2a: V874 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V870
0xe2d: V875 = ISZERO 0x1
0xe2e: V876 = ISZERO 0x0
0xe2f: V877 = MUL 0x1 0x1
0xe30: V878 = OR 0x1 V874
0xe32: S[0x5] = V878
0xe34: V879 = 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0xe55: V880 = 0x40
0xe57: V881 = M[0x40]
0xe58: V882 = 0x40
0xe5a: V883 = M[0x40]
0xe5d: V884 = SUB V881 V883
0xe5f: LOG V883 V884 0x7f95d919e78bdebe8a285e6e33357c2fcb65ccf66e72d7573f9f8f6caad0c4cc
0xe60: V885 = 0x1
0xe65: JUMP 0x440
---
Entry stack: [V11, 0x440, 0x0]
Stack pops: 2
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0xe66
[0xe66:0xe7b]
---
Predecessors: [0x465]
Successors: [0xe7c, 0xe7d]
---
0xe66 JUMPDEST
0xe67 PUSH1 0x0
0xe69 PUSH1 0x40
0xe6b PUSH1 0x4
0xe6d DUP2
0xe6e ADD
0xe6f PUSH1 0x0
0xe71 CALLDATASIZE
0xe72 SWAP1
0xe73 POP
0xe74 LT
0xe75 ISZERO
0xe76 ISZERO
0xe77 ISZERO
0xe78 PUSH2 0xe7d
0xe7b JUMPI
---
0xe66: JUMPDEST 
0xe67: V886 = 0x0
0xe69: V887 = 0x40
0xe6b: V888 = 0x4
0xe6e: V889 = ADD 0x40 0x4
0xe6f: V890 = 0x0
0xe71: V891 = CALLDATASIZE
0xe74: V892 = LT V891 0x44
0xe75: V893 = ISZERO V892
0xe76: V894 = ISZERO V893
0xe77: V895 = ISZERO V894
0xe78: V896 = 0xe7d
0xe7b: JUMPI 0xe7d V895
---
Entry stack: [V11, 0x49a, V335, V338]
Stack pops: 0
Stack additions: [0x0, 0x40]
Exit stack: [V11, 0x49a, V335, V338, 0x0, 0x40]

================================

Block 0xe7c
[0xe7c:0xe7c]
---
Predecessors: [0xe66]
Successors: []
---
0xe7c INVALID
---
0xe7c: INVALID 
---
Entry stack: [V11, 0x49a, V335, V338, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x49a, V335, V338, 0x0, 0x40]

================================

Block 0xe7d
[0xe7d:0xec6]
---
Predecessors: [0xe66]
Successors: [0xec7, 0xecc]
---
0xe7d JUMPDEST
0xe7e DUP3
0xe7f PUSH1 0x2
0xe81 PUSH1 0x0
0xe83 CALLER
0xe84 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe99 AND
0xe9a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeaf AND
0xeb0 DUP2
0xeb1 MSTORE
0xeb2 PUSH1 0x20
0xeb4 ADD
0xeb5 SWAP1
0xeb6 DUP2
0xeb7 MSTORE
0xeb8 PUSH1 0x20
0xeba ADD
0xebb PUSH1 0x0
0xebd SHA3
0xebe SLOAD
0xebf LT
0xec0 ISZERO
0xec1 DUP1
0xec2 ISZERO
0xec3 PUSH2 0xecc
0xec6 JUMPI
---
0xe7d: JUMPDEST 
0xe7f: V897 = 0x2
0xe81: V898 = 0x0
0xe83: V899 = CALLER
0xe84: V900 = 0xffffffffffffffffffffffffffffffffffffffff
0xe99: V901 = AND 0xffffffffffffffffffffffffffffffffffffffff V899
0xe9a: V902 = 0xffffffffffffffffffffffffffffffffffffffff
0xeaf: V903 = AND 0xffffffffffffffffffffffffffffffffffffffff V901
0xeb1: M[0x0] = V903
0xeb2: V904 = 0x20
0xeb4: V905 = ADD 0x20 0x0
0xeb7: M[0x20] = 0x2
0xeb8: V906 = 0x20
0xeba: V907 = ADD 0x20 0x20
0xebb: V908 = 0x0
0xebd: V909 = SHA3 0x0 0x40
0xebe: V910 = S[V909]
0xebf: V911 = LT V910 V338
0xec0: V912 = ISZERO V911
0xec2: V913 = ISZERO V912
0xec3: V914 = 0xecc
0xec6: JUMPI 0xecc V913
---
Entry stack: [V11, 0x49a, V335, V338, 0x0, 0x40]
Stack pops: 3
Stack additions: [S2, S1, S0, V912]
Exit stack: [V11, 0x49a, V335, V338, 0x0, 0x40, V912]

================================

Block 0xec7
[0xec7:0xecb]
---
Predecessors: [0xe7d]
Successors: [0xecc]
---
0xec7 POP
0xec8 PUSH1 0x0
0xeca DUP4
0xecb GT
---
0xec8: V915 = 0x0
0xecb: V916 = GT V338 0x0
---
Entry stack: [V11, 0x49a, V335, V338, 0x0, 0x40, V912]
Stack pops: 4
Stack additions: [S3, S2, S1, V916]
Exit stack: [V11, 0x49a, V335, V338, 0x0, 0x40, V916]

================================

Block 0xecc
[0xecc:0xed2]
---
Predecessors: [0xe7d, 0xec7]
Successors: [0xed3, 0xf57]
---
0xecc JUMPDEST
0xecd DUP1
0xece ISZERO
0xecf PUSH2 0xf57
0xed2 JUMPI
---
0xecc: JUMPDEST 
0xece: V917 = ISZERO S0
0xecf: V918 = 0xf57
0xed2: JUMPI 0xf57 V917
---
Entry stack: [V11, 0x49a, V335, V338, 0x0, 0x40, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x49a, V335, V338, 0x0, 0x40, S0]

================================

Block 0xed3
[0xed3:0xf56]
---
Predecessors: [0xecc]
Successors: [0xf57]
---
0xed3 POP
0xed4 PUSH1 0x2
0xed6 PUSH1 0x0
0xed8 DUP6
0xed9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeee AND
0xeef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf04 AND
0xf05 DUP2
0xf06 MSTORE
0xf07 PUSH1 0x20
0xf09 ADD
0xf0a SWAP1
0xf0b DUP2
0xf0c MSTORE
0xf0d PUSH1 0x20
0xf0f ADD
0xf10 PUSH1 0x0
0xf12 SHA3
0xf13 SLOAD
0xf14 DUP4
0xf15 PUSH1 0x2
0xf17 PUSH1 0x0
0xf19 DUP8
0xf1a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf2f AND
0xf30 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf45 AND
0xf46 DUP2
0xf47 MSTORE
0xf48 PUSH1 0x20
0xf4a ADD
0xf4b SWAP1
0xf4c DUP2
0xf4d MSTORE
0xf4e PUSH1 0x20
0xf50 ADD
0xf51 PUSH1 0x0
0xf53 SHA3
0xf54 SLOAD
0xf55 ADD
0xf56 GT
---
0xed4: V919 = 0x2
0xed6: V920 = 0x0
0xed9: V921 = 0xffffffffffffffffffffffffffffffffffffffff
0xeee: V922 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0xeef: V923 = 0xffffffffffffffffffffffffffffffffffffffff
0xf04: V924 = AND 0xffffffffffffffffffffffffffffffffffffffff V922
0xf06: M[0x0] = V924
0xf07: V925 = 0x20
0xf09: V926 = ADD 0x20 0x0
0xf0c: M[0x20] = 0x2
0xf0d: V927 = 0x20
0xf0f: V928 = ADD 0x20 0x20
0xf10: V929 = 0x0
0xf12: V930 = SHA3 0x0 0x40
0xf13: V931 = S[V930]
0xf15: V932 = 0x2
0xf17: V933 = 0x0
0xf1a: V934 = 0xffffffffffffffffffffffffffffffffffffffff
0xf2f: V935 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0xf30: V936 = 0xffffffffffffffffffffffffffffffffffffffff
0xf45: V937 = AND 0xffffffffffffffffffffffffffffffffffffffff V935
0xf47: M[0x0] = V937
0xf48: V938 = 0x20
0xf4a: V939 = ADD 0x20 0x0
0xf4d: M[0x20] = 0x2
0xf4e: V940 = 0x20
0xf50: V941 = ADD 0x20 0x20
0xf51: V942 = 0x0
0xf53: V943 = SHA3 0x0 0x40
0xf54: V944 = S[V943]
0xf55: V945 = ADD V944 V338
0xf56: V946 = GT V945 V931
---
Entry stack: [V11, 0x49a, V335, V338, 0x0, 0x40, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V946]
Exit stack: [V11, 0x49a, V335, V338, 0x0, 0x40, V946]

================================

Block 0xf57
[0xf57:0xf5c]
---
Predecessors: [0xecc, 0xed3]
Successors: [0xf5d, 0x1064]
---
0xf57 JUMPDEST
0xf58 ISZERO
0xf59 PUSH2 0x1064
0xf5c JUMPI
---
0xf57: JUMPDEST 
0xf58: V947 = ISZERO S0
0xf59: V948 = 0x1064
0xf5c: JUMPI 0x1064 V947
---
Entry stack: [V11, 0x49a, V335, V338, 0x0, 0x40, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x49a, V335, V338, 0x0, 0x40]

================================

Block 0xf5d
[0xf5d:0x1063]
---
Predecessors: [0xf57]
Successors: [0x1069]
---
0xf5d DUP3
0xf5e PUSH1 0x2
0xf60 PUSH1 0x0
0xf62 CALLER
0xf63 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf78 AND
0xf79 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf8e AND
0xf8f DUP2
0xf90 MSTORE
0xf91 PUSH1 0x20
0xf93 ADD
0xf94 SWAP1
0xf95 DUP2
0xf96 MSTORE
0xf97 PUSH1 0x20
0xf99 ADD
0xf9a PUSH1 0x0
0xf9c SHA3
0xf9d PUSH1 0x0
0xf9f DUP3
0xfa0 DUP3
0xfa1 SLOAD
0xfa2 SUB
0xfa3 SWAP3
0xfa4 POP
0xfa5 POP
0xfa6 DUP2
0xfa7 SWAP1
0xfa8 SSTORE
0xfa9 POP
0xfaa DUP3
0xfab PUSH1 0x2
0xfad PUSH1 0x0
0xfaf DUP7
0xfb0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc5 AND
0xfc6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfdb AND
0xfdc DUP2
0xfdd MSTORE
0xfde PUSH1 0x20
0xfe0 ADD
0xfe1 SWAP1
0xfe2 DUP2
0xfe3 MSTORE
0xfe4 PUSH1 0x20
0xfe6 ADD
0xfe7 PUSH1 0x0
0xfe9 SHA3
0xfea PUSH1 0x0
0xfec DUP3
0xfed DUP3
0xfee SLOAD
0xfef ADD
0xff0 SWAP3
0xff1 POP
0xff2 POP
0xff3 DUP2
0xff4 SWAP1
0xff5 SSTORE
0xff6 POP
0xff7 DUP4
0xff8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x100d AND
0x100e CALLER
0x100f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1024 AND
0x1025 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1046 DUP6
0x1047 PUSH1 0x40
0x1049 MLOAD
0x104a DUP1
0x104b DUP3
0x104c DUP2
0x104d MSTORE
0x104e PUSH1 0x20
0x1050 ADD
0x1051 SWAP2
0x1052 POP
0x1053 POP
0x1054 PUSH1 0x40
0x1056 MLOAD
0x1057 DUP1
0x1058 SWAP2
0x1059 SUB
0x105a SWAP1
0x105b LOG3
0x105c PUSH1 0x1
0x105e SWAP2
0x105f POP
0x1060 PUSH2 0x1069
0x1063 JUMP
---
0xf5e: V949 = 0x2
0xf60: V950 = 0x0
0xf62: V951 = CALLER
0xf63: V952 = 0xffffffffffffffffffffffffffffffffffffffff
0xf78: V953 = AND 0xffffffffffffffffffffffffffffffffffffffff V951
0xf79: V954 = 0xffffffffffffffffffffffffffffffffffffffff
0xf8e: V955 = AND 0xffffffffffffffffffffffffffffffffffffffff V953
0xf90: M[0x0] = V955
0xf91: V956 = 0x20
0xf93: V957 = ADD 0x20 0x0
0xf96: M[0x20] = 0x2
0xf97: V958 = 0x20
0xf99: V959 = ADD 0x20 0x20
0xf9a: V960 = 0x0
0xf9c: V961 = SHA3 0x0 0x40
0xf9d: V962 = 0x0
0xfa1: V963 = S[V961]
0xfa2: V964 = SUB V963 V338
0xfa8: S[V961] = V964
0xfab: V965 = 0x2
0xfad: V966 = 0x0
0xfb0: V967 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc5: V968 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0xfc6: V969 = 0xffffffffffffffffffffffffffffffffffffffff
0xfdb: V970 = AND 0xffffffffffffffffffffffffffffffffffffffff V968
0xfdd: M[0x0] = V970
0xfde: V971 = 0x20
0xfe0: V972 = ADD 0x20 0x0
0xfe3: M[0x20] = 0x2
0xfe4: V973 = 0x20
0xfe6: V974 = ADD 0x20 0x20
0xfe7: V975 = 0x0
0xfe9: V976 = SHA3 0x0 0x40
0xfea: V977 = 0x0
0xfee: V978 = S[V976]
0xfef: V979 = ADD V978 V338
0xff5: S[V976] = V979
0xff8: V980 = 0xffffffffffffffffffffffffffffffffffffffff
0x100d: V981 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x100e: V982 = CALLER
0x100f: V983 = 0xffffffffffffffffffffffffffffffffffffffff
0x1024: V984 = AND 0xffffffffffffffffffffffffffffffffffffffff V982
0x1025: V985 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1047: V986 = 0x40
0x1049: V987 = M[0x40]
0x104d: M[V987] = V338
0x104e: V988 = 0x20
0x1050: V989 = ADD 0x20 V987
0x1054: V990 = 0x40
0x1056: V991 = M[0x40]
0x1059: V992 = SUB V989 V991
0x105b: LOG V991 V992 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V984 V981
0x105c: V993 = 0x1
0x1060: V994 = 0x1069
0x1063: JUMP 0x1069
---
Entry stack: [V11, 0x49a, V335, V338, 0x0, 0x40]
Stack pops: 4
Stack additions: [S3, S2, 0x1, S0]
Exit stack: [V11, 0x49a, V335, V338, 0x1, 0x40]

================================

Block 0x1064
[0x1064:0x1068]
---
Predecessors: [0xf57]
Successors: [0x1069]
---
0x1064 JUMPDEST
0x1065 PUSH1 0x0
0x1067 SWAP2
0x1068 POP
---
0x1064: JUMPDEST 
0x1065: V995 = 0x0
---
Entry stack: [V11, 0x49a, V335, V338, 0x0, 0x40]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V11, 0x49a, V335, V338, 0x0, 0x40]

================================

Block 0x1069
[0x1069:0x106f]
---
Predecessors: [0xf5d, 0x1064]
Successors: [0x49a]
---
0x1069 JUMPDEST
0x106a POP
0x106b SWAP3
0x106c SWAP2
0x106d POP
0x106e POP
0x106f JUMP
---
0x1069: JUMPDEST 
0x106f: JUMP 0x49a
---
Entry stack: [V11, 0x49a, V335, V338, {0x0, 0x1}, 0x40]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x1070
[0x1070:0x1082]
---
Predecessors: [0x4bf]
Successors: [0x4c7]
---
0x1070 JUMPDEST
0x1071 PUSH1 0x5
0x1073 PUSH1 0x0
0x1075 SWAP1
0x1076 SLOAD
0x1077 SWAP1
0x1078 PUSH2 0x100
0x107b EXP
0x107c SWAP1
0x107d DIV
0x107e PUSH1 0xff
0x1080 AND
0x1081 DUP2
0x1082 JUMP
---
0x1070: JUMPDEST 
0x1071: V996 = 0x5
0x1073: V997 = 0x0
0x1076: V998 = S[0x5]
0x1078: V999 = 0x100
0x107b: V1000 = EXP 0x100 0x0
0x107d: V1001 = DIV V998 0x1
0x107e: V1002 = 0xff
0x1080: V1003 = AND 0xff V1001
0x1082: JUMP 0x4c7
---
Entry stack: [V11, 0x4c7]
Stack pops: 1
Stack additions: [S0, V1003]
Exit stack: [V11, 0x4c7, V1003]

================================

Block 0x1083
[0x1083:0x1109]
---
Predecessors: [0x4ec]
Successors: [0x537]
---
0x1083 JUMPDEST
0x1084 PUSH1 0x0
0x1086 PUSH1 0x3
0x1088 PUSH1 0x0
0x108a DUP5
0x108b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10a0 AND
0x10a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10b6 AND
0x10b7 DUP2
0x10b8 MSTORE
0x10b9 PUSH1 0x20
0x10bb ADD
0x10bc SWAP1
0x10bd DUP2
0x10be MSTORE
0x10bf PUSH1 0x20
0x10c1 ADD
0x10c2 PUSH1 0x0
0x10c4 SHA3
0x10c5 PUSH1 0x0
0x10c7 DUP4
0x10c8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10dd AND
0x10de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f3 AND
0x10f4 DUP2
0x10f5 MSTORE
0x10f6 PUSH1 0x20
0x10f8 ADD
0x10f9 SWAP1
0x10fa DUP2
0x10fb MSTORE
0x10fc PUSH1 0x20
0x10fe ADD
0x10ff PUSH1 0x0
0x1101 SHA3
0x1102 SLOAD
0x1103 SWAP1
0x1104 POP
0x1105 SWAP3
0x1106 SWAP2
0x1107 POP
0x1108 POP
0x1109 JUMP
---
0x1083: JUMPDEST 
0x1084: V1004 = 0x0
0x1086: V1005 = 0x3
0x1088: V1006 = 0x0
0x108b: V1007 = 0xffffffffffffffffffffffffffffffffffffffff
0x10a0: V1008 = AND 0xffffffffffffffffffffffffffffffffffffffff V378
0x10a1: V1009 = 0xffffffffffffffffffffffffffffffffffffffff
0x10b6: V1010 = AND 0xffffffffffffffffffffffffffffffffffffffff V1008
0x10b8: M[0x0] = V1010
0x10b9: V1011 = 0x20
0x10bb: V1012 = ADD 0x20 0x0
0x10be: M[0x20] = 0x3
0x10bf: V1013 = 0x20
0x10c1: V1014 = ADD 0x20 0x20
0x10c2: V1015 = 0x0
0x10c4: V1016 = SHA3 0x0 0x40
0x10c5: V1017 = 0x0
0x10c8: V1018 = 0xffffffffffffffffffffffffffffffffffffffff
0x10dd: V1019 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x10de: V1020 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f3: V1021 = AND 0xffffffffffffffffffffffffffffffffffffffff V1019
0x10f5: M[0x0] = V1021
0x10f6: V1022 = 0x20
0x10f8: V1023 = ADD 0x20 0x0
0x10fb: M[0x20] = V1016
0x10fc: V1024 = 0x20
0x10fe: V1025 = ADD 0x20 0x20
0x10ff: V1026 = 0x0
0x1101: V1027 = SHA3 0x0 0x40
0x1102: V1028 = S[V1027]
0x1109: JUMP 0x537
---
Entry stack: [V11, 0x537, V378, V383]
Stack pops: 3
Stack additions: [V1028]
Exit stack: [V11, V1028]

================================

Block 0x110a
[0x110a:0x1166]
---
Predecessors: [0x558]
Successors: [0x1167, 0x116b]
---
0x110a JUMPDEST
0x110b PUSH1 0x0
0x110d DUP1
0x110e PUSH1 0x0
0x1110 PUSH1 0x1
0x1112 PUSH1 0x0
0x1114 SWAP1
0x1115 SLOAD
0x1116 SWAP1
0x1117 PUSH2 0x100
0x111a EXP
0x111b SWAP1
0x111c DIV
0x111d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1132 AND
0x1133 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1148 AND
0x1149 CALLER
0x114a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x115f AND
0x1160 EQ
0x1161 ISZERO
0x1162 ISZERO
0x1163 PUSH2 0x116b
0x1166 JUMPI
---
0x110a: JUMPDEST 
0x110b: V1029 = 0x0
0x110e: V1030 = 0x0
0x1110: V1031 = 0x1
0x1112: V1032 = 0x0
0x1115: V1033 = S[0x1]
0x1117: V1034 = 0x100
0x111a: V1035 = EXP 0x100 0x0
0x111c: V1036 = DIV V1033 0x1
0x111d: V1037 = 0xffffffffffffffffffffffffffffffffffffffff
0x1132: V1038 = AND 0xffffffffffffffffffffffffffffffffffffffff V1036
0x1133: V1039 = 0xffffffffffffffffffffffffffffffffffffffff
0x1148: V1040 = AND 0xffffffffffffffffffffffffffffffffffffffff V1038
0x1149: V1041 = CALLER
0x114a: V1042 = 0xffffffffffffffffffffffffffffffffffffffff
0x115f: V1043 = AND 0xffffffffffffffffffffffffffffffffffffffff V1041
0x1160: V1044 = EQ V1043 V1040
0x1161: V1045 = ISZERO V1044
0x1162: V1046 = ISZERO V1045
0x1163: V1047 = 0x116b
0x1166: JUMPI 0x116b V1046
---
Entry stack: [V11, 0x584, V402]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x584, V402, 0x0, 0x0, 0x0]

================================

Block 0x1167
[0x1167:0x116a]
---
Predecessors: [0x110a]
Successors: []
---
0x1167 PUSH1 0x0
0x1169 DUP1
0x116a REVERT
---
0x1167: V1048 = 0x0
0x116a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x584, V402, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x584, V402, 0x0, 0x0, 0x0]

================================

Block 0x116b
[0x116b:0x120c]
---
Predecessors: [0x110a]
Successors: [0x120d, 0x1211]
---
0x116b JUMPDEST
0x116c DUP4
0x116d SWAP2
0x116e POP
0x116f DUP2
0x1170 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1185 AND
0x1186 PUSH4 0x70a08231
0x118b ADDRESS
0x118c PUSH1 0x0
0x118e PUSH1 0x40
0x1190 MLOAD
0x1191 PUSH1 0x20
0x1193 ADD
0x1194 MSTORE
0x1195 PUSH1 0x40
0x1197 MLOAD
0x1198 DUP3
0x1199 PUSH4 0xffffffff
0x119e AND
0x119f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x11bd MUL
0x11be DUP2
0x11bf MSTORE
0x11c0 PUSH1 0x4
0x11c2 ADD
0x11c3 DUP1
0x11c4 DUP3
0x11c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11da AND
0x11db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11f0 AND
0x11f1 DUP2
0x11f2 MSTORE
0x11f3 PUSH1 0x20
0x11f5 ADD
0x11f6 SWAP2
0x11f7 POP
0x11f8 POP
0x11f9 PUSH1 0x20
0x11fb PUSH1 0x40
0x11fd MLOAD
0x11fe DUP1
0x11ff DUP4
0x1200 SUB
0x1201 DUP2
0x1202 PUSH1 0x0
0x1204 DUP8
0x1205 DUP1
0x1206 EXTCODESIZE
0x1207 ISZERO
0x1208 ISZERO
0x1209 PUSH2 0x1211
0x120c JUMPI
---
0x116b: JUMPDEST 
0x1170: V1049 = 0xffffffffffffffffffffffffffffffffffffffff
0x1185: V1050 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x1186: V1051 = 0x70a08231
0x118b: V1052 = ADDRESS
0x118c: V1053 = 0x0
0x118e: V1054 = 0x40
0x1190: V1055 = M[0x40]
0x1191: V1056 = 0x20
0x1193: V1057 = ADD 0x20 V1055
0x1194: M[V1057] = 0x0
0x1195: V1058 = 0x40
0x1197: V1059 = M[0x40]
0x1199: V1060 = 0xffffffff
0x119e: V1061 = AND 0xffffffff 0x70a08231
0x119f: V1062 = 0x100000000000000000000000000000000000000000000000000000000
0x11bd: V1063 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x11bf: M[V1059] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x11c0: V1064 = 0x4
0x11c2: V1065 = ADD 0x4 V1059
0x11c5: V1066 = 0xffffffffffffffffffffffffffffffffffffffff
0x11da: V1067 = AND 0xffffffffffffffffffffffffffffffffffffffff V1052
0x11db: V1068 = 0xffffffffffffffffffffffffffffffffffffffff
0x11f0: V1069 = AND 0xffffffffffffffffffffffffffffffffffffffff V1067
0x11f2: M[V1065] = V1069
0x11f3: V1070 = 0x20
0x11f5: V1071 = ADD 0x20 V1065
0x11f9: V1072 = 0x20
0x11fb: V1073 = 0x40
0x11fd: V1074 = M[0x40]
0x1200: V1075 = SUB V1071 V1074
0x1202: V1076 = 0x0
0x1206: V1077 = EXTCODESIZE V1050
0x1207: V1078 = ISZERO V1077
0x1208: V1079 = ISZERO V1078
0x1209: V1080 = 0x1211
0x120c: JUMPI 0x1211 V1079
---
Entry stack: [V11, 0x584, V402, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V1050, 0x70a08231, V1071, 0x20, V1074, V1075, V1074, 0x0, V1050]
Exit stack: [V11, 0x584, V402, 0x0, V402, 0x0, V1050, 0x70a08231, V1071, 0x20, V1074, V1075, V1074, 0x0, V1050]

================================

Block 0x120d
[0x120d:0x1210]
---
Predecessors: [0x116b]
Successors: []
---
0x120d PUSH1 0x0
0x120f DUP1
0x1210 REVERT
---
0x120d: V1081 = 0x0
0x1210: REVERT 0x0 0x0
---
Entry stack: [V11, 0x584, V402, 0x0, V402, 0x0, V1050, 0x70a08231, V1071, 0x20, V1074, V1075, V1074, 0x0, V1050]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x584, V402, 0x0, V402, 0x0, V1050, 0x70a08231, V1071, 0x20, V1074, V1075, V1074, 0x0, V1050]

================================

Block 0x1211
[0x1211:0x121d]
---
Predecessors: [0x116b]
Successors: [0x121e, 0x1222]
---
0x1211 JUMPDEST
0x1212 PUSH2 0x2c6
0x1215 GAS
0x1216 SUB
0x1217 CALL
0x1218 ISZERO
0x1219 ISZERO
0x121a PUSH2 0x1222
0x121d JUMPI
---
0x1211: JUMPDEST 
0x1212: V1082 = 0x2c6
0x1215: V1083 = GAS
0x1216: V1084 = SUB V1083 0x2c6
0x1217: V1085 = CALL V1084 V1050 0x0 V1074 V1075 V1074 0x20
0x1218: V1086 = ISZERO V1085
0x1219: V1087 = ISZERO V1086
0x121a: V1088 = 0x1222
0x121d: JUMPI 0x1222 V1087
---
Entry stack: [V11, 0x584, V402, 0x0, V402, 0x0, V1050, 0x70a08231, V1071, 0x20, V1074, V1075, V1074, 0x0, V1050]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x584, V402, 0x0, V402, 0x0, V1050, 0x70a08231, V1071]

================================

Block 0x121e
[0x121e:0x1221]
---
Predecessors: [0x1211]
Successors: []
---
0x121e PUSH1 0x0
0x1220 DUP1
0x1221 REVERT
---
0x121e: V1089 = 0x0
0x1221: REVERT 0x0 0x0
---
Entry stack: [V11, 0x584, V402, 0x0, V402, 0x0, V1050, 0x70a08231, V1071]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x584, V402, 0x0, V402, 0x0, V1050, 0x70a08231, V1071]

================================

Block 0x1222
[0x1222:0x12f6]
---
Predecessors: [0x1211]
Successors: [0x12f7, 0x12fb]
---
0x1222 JUMPDEST
0x1223 POP
0x1224 POP
0x1225 POP
0x1226 PUSH1 0x40
0x1228 MLOAD
0x1229 DUP1
0x122a MLOAD
0x122b SWAP1
0x122c POP
0x122d SWAP1
0x122e POP
0x122f DUP2
0x1230 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1245 AND
0x1246 PUSH4 0xa9059cbb
0x124b PUSH1 0x1
0x124d PUSH1 0x0
0x124f SWAP1
0x1250 SLOAD
0x1251 SWAP1
0x1252 PUSH2 0x100
0x1255 EXP
0x1256 SWAP1
0x1257 DIV
0x1258 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x126d AND
0x126e DUP4
0x126f PUSH1 0x0
0x1271 PUSH1 0x40
0x1273 MLOAD
0x1274 PUSH1 0x20
0x1276 ADD
0x1277 MSTORE
0x1278 PUSH1 0x40
0x127a MLOAD
0x127b DUP4
0x127c PUSH4 0xffffffff
0x1281 AND
0x1282 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x12a0 MUL
0x12a1 DUP2
0x12a2 MSTORE
0x12a3 PUSH1 0x4
0x12a5 ADD
0x12a6 DUP1
0x12a7 DUP4
0x12a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12bd AND
0x12be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12d3 AND
0x12d4 DUP2
0x12d5 MSTORE
0x12d6 PUSH1 0x20
0x12d8 ADD
0x12d9 DUP3
0x12da DUP2
0x12db MSTORE
0x12dc PUSH1 0x20
0x12de ADD
0x12df SWAP3
0x12e0 POP
0x12e1 POP
0x12e2 POP
0x12e3 PUSH1 0x20
0x12e5 PUSH1 0x40
0x12e7 MLOAD
0x12e8 DUP1
0x12e9 DUP4
0x12ea SUB
0x12eb DUP2
0x12ec PUSH1 0x0
0x12ee DUP8
0x12ef DUP1
0x12f0 EXTCODESIZE
0x12f1 ISZERO
0x12f2 ISZERO
0x12f3 PUSH2 0x12fb
0x12f6 JUMPI
---
0x1222: JUMPDEST 
0x1226: V1090 = 0x40
0x1228: V1091 = M[0x40]
0x122a: V1092 = M[V1091]
0x1230: V1093 = 0xffffffffffffffffffffffffffffffffffffffff
0x1245: V1094 = AND 0xffffffffffffffffffffffffffffffffffffffff V402
0x1246: V1095 = 0xa9059cbb
0x124b: V1096 = 0x1
0x124d: V1097 = 0x0
0x1250: V1098 = S[0x1]
0x1252: V1099 = 0x100
0x1255: V1100 = EXP 0x100 0x0
0x1257: V1101 = DIV V1098 0x1
0x1258: V1102 = 0xffffffffffffffffffffffffffffffffffffffff
0x126d: V1103 = AND 0xffffffffffffffffffffffffffffffffffffffff V1101
0x126f: V1104 = 0x0
0x1271: V1105 = 0x40
0x1273: V1106 = M[0x40]
0x1274: V1107 = 0x20
0x1276: V1108 = ADD 0x20 V1106
0x1277: M[V1108] = 0x0
0x1278: V1109 = 0x40
0x127a: V1110 = M[0x40]
0x127c: V1111 = 0xffffffff
0x1281: V1112 = AND 0xffffffff 0xa9059cbb
0x1282: V1113 = 0x100000000000000000000000000000000000000000000000000000000
0x12a0: V1114 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x12a2: M[V1110] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x12a3: V1115 = 0x4
0x12a5: V1116 = ADD 0x4 V1110
0x12a8: V1117 = 0xffffffffffffffffffffffffffffffffffffffff
0x12bd: V1118 = AND 0xffffffffffffffffffffffffffffffffffffffff V1103
0x12be: V1119 = 0xffffffffffffffffffffffffffffffffffffffff
0x12d3: V1120 = AND 0xffffffffffffffffffffffffffffffffffffffff V1118
0x12d5: M[V1116] = V1120
0x12d6: V1121 = 0x20
0x12d8: V1122 = ADD 0x20 V1116
0x12db: M[V1122] = V1092
0x12dc: V1123 = 0x20
0x12de: V1124 = ADD 0x20 V1122
0x12e3: V1125 = 0x20
0x12e5: V1126 = 0x40
0x12e7: V1127 = M[0x40]
0x12ea: V1128 = SUB V1124 V1127
0x12ec: V1129 = 0x0
0x12f0: V1130 = EXTCODESIZE V1094
0x12f1: V1131 = ISZERO V1130
0x12f2: V1132 = ISZERO V1131
0x12f3: V1133 = 0x12fb
0x12f6: JUMPI 0x12fb V1132
---
Entry stack: [V11, 0x584, V402, 0x0, V402, 0x0, V1050, 0x70a08231, V1071]
Stack pops: 5
Stack additions: [S4, V1092, V1094, 0xa9059cbb, V1124, 0x20, V1127, V1128, V1127, 0x0, V1094]
Exit stack: [V11, 0x584, V402, 0x0, V402, V1092, V1094, 0xa9059cbb, V1124, 0x20, V1127, V1128, V1127, 0x0, V1094]

================================

Block 0x12f7
[0x12f7:0x12fa]
---
Predecessors: [0x1222]
Successors: []
---
0x12f7 PUSH1 0x0
0x12f9 DUP1
0x12fa REVERT
---
0x12f7: V1134 = 0x0
0x12fa: REVERT 0x0 0x0
---
Entry stack: [V11, 0x584, V402, 0x0, V402, V1092, V1094, 0xa9059cbb, V1124, 0x20, V1127, V1128, V1127, 0x0, V1094]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x584, V402, 0x0, V402, V1092, V1094, 0xa9059cbb, V1124, 0x20, V1127, V1128, V1127, 0x0, V1094]

================================

Block 0x12fb
[0x12fb:0x1307]
---
Predecessors: [0x1222]
Successors: [0x1308, 0x130c]
---
0x12fb JUMPDEST
0x12fc PUSH2 0x2c6
0x12ff GAS
0x1300 SUB
0x1301 CALL
0x1302 ISZERO
0x1303 ISZERO
0x1304 PUSH2 0x130c
0x1307 JUMPI
---
0x12fb: JUMPDEST 
0x12fc: V1135 = 0x2c6
0x12ff: V1136 = GAS
0x1300: V1137 = SUB V1136 0x2c6
0x1301: V1138 = CALL V1137 V1094 0x0 V1127 V1128 V1127 0x20
0x1302: V1139 = ISZERO V1138
0x1303: V1140 = ISZERO V1139
0x1304: V1141 = 0x130c
0x1307: JUMPI 0x130c V1140
---
Entry stack: [V11, 0x584, V402, 0x0, V402, V1092, V1094, 0xa9059cbb, V1124, 0x20, V1127, V1128, V1127, 0x0, V1094]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x584, V402, 0x0, V402, V1092, V1094, 0xa9059cbb, V1124]

================================

Block 0x1308
[0x1308:0x130b]
---
Predecessors: [0x12fb]
Successors: []
---
0x1308 PUSH1 0x0
0x130a DUP1
0x130b REVERT
---
0x1308: V1142 = 0x0
0x130b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x584, V402, 0x0, V402, V1092, V1094, 0xa9059cbb, V1124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x584, V402, 0x0, V402, V1092, V1094, 0xa9059cbb, V1124]

================================

Block 0x130c
[0x130c:0x131e]
---
Predecessors: [0x12fb]
Successors: [0x584]
---
0x130c JUMPDEST
0x130d POP
0x130e POP
0x130f POP
0x1310 PUSH1 0x40
0x1312 MLOAD
0x1313 DUP1
0x1314 MLOAD
0x1315 SWAP1
0x1316 POP
0x1317 SWAP3
0x1318 POP
0x1319 POP
0x131a POP
0x131b SWAP2
0x131c SWAP1
0x131d POP
0x131e JUMP
---
0x130c: JUMPDEST 
0x1310: V1143 = 0x40
0x1312: V1144 = M[0x40]
0x1314: V1145 = M[V1144]
0x131e: JUMP 0x584
---
Entry stack: [V11, 0x584, V402, 0x0, V402, V1092, V1094, 0xa9059cbb, V1124]
Stack pops: 8
Stack additions: [V1145]
Exit stack: [V11, V1145]

================================

Block 0x131f
[0x131f:0x1376]
---
Predecessors: [0x5a9]
Successors: [0x1377, 0x137b]
---
0x131f JUMPDEST
0x1320 PUSH1 0x1
0x1322 PUSH1 0x0
0x1324 SWAP1
0x1325 SLOAD
0x1326 SWAP1
0x1327 PUSH2 0x100
0x132a EXP
0x132b SWAP1
0x132c DIV
0x132d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1342 AND
0x1343 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1358 AND
0x1359 CALLER
0x135a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x136f AND
0x1370 EQ
0x1371 ISZERO
0x1372 ISZERO
0x1373 PUSH2 0x137b
0x1376 JUMPI
---
0x131f: JUMPDEST 
0x1320: V1146 = 0x1
0x1322: V1147 = 0x0
0x1325: V1148 = S[0x1]
0x1327: V1149 = 0x100
0x132a: V1150 = EXP 0x100 0x0
0x132c: V1151 = DIV V1148 0x1
0x132d: V1152 = 0xffffffffffffffffffffffffffffffffffffffff
0x1342: V1153 = AND 0xffffffffffffffffffffffffffffffffffffffff V1151
0x1343: V1154 = 0xffffffffffffffffffffffffffffffffffffffff
0x1358: V1155 = AND 0xffffffffffffffffffffffffffffffffffffffff V1153
0x1359: V1156 = CALLER
0x135a: V1157 = 0xffffffffffffffffffffffffffffffffffffffff
0x136f: V1158 = AND 0xffffffffffffffffffffffffffffffffffffffff V1156
0x1370: V1159 = EQ V1158 V1155
0x1371: V1160 = ISZERO V1159
0x1372: V1161 = ISZERO V1160
0x1373: V1162 = 0x137b
0x1376: JUMPI 0x137b V1161
---
Entry stack: [V11, 0x5d5, V425]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5d5, V425]

================================

Block 0x1377
[0x1377:0x137a]
---
Predecessors: [0x131f]
Successors: []
---
0x1377 PUSH1 0x0
0x1379 DUP1
0x137a REVERT
---
0x1377: V1163 = 0x0
0x137a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5d5, V425]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5d5, V425]

================================

Block 0x137b
[0x137b:0x13be]
---
Predecessors: [0x131f]
Successors: [0x5d5]
---
0x137b JUMPDEST
0x137c DUP1
0x137d PUSH1 0x1
0x137f PUSH1 0x0
0x1381 PUSH2 0x100
0x1384 EXP
0x1385 DUP2
0x1386 SLOAD
0x1387 DUP2
0x1388 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x139d MUL
0x139e NOT
0x139f AND
0x13a0 SWAP1
0x13a1 DUP4
0x13a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13b7 AND
0x13b8 MUL
0x13b9 OR
0x13ba SWAP1
0x13bb SSTORE
0x13bc POP
0x13bd POP
0x13be JUMP
---
0x137b: JUMPDEST 
0x137d: V1164 = 0x1
0x137f: V1165 = 0x0
0x1381: V1166 = 0x100
0x1384: V1167 = EXP 0x100 0x0
0x1386: V1168 = S[0x1]
0x1388: V1169 = 0xffffffffffffffffffffffffffffffffffffffff
0x139d: V1170 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x139e: V1171 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x139f: V1172 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1168
0x13a2: V1173 = 0xffffffffffffffffffffffffffffffffffffffff
0x13b7: V1174 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x13b8: V1175 = MUL V1174 0x1
0x13b9: V1176 = OR V1175 V1172
0x13bb: S[0x1] = V1176
0x13be: JUMP 0x5d5
---
Entry stack: [V11, 0x5d5, V425]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x13bf
[0x13bf:0x13d2]
---
Predecessors: [0x5d7, 0xd77]
Successors: [0x5df, 0xd7f]
---
0x13bf JUMPDEST
0x13c0 PUSH1 0x20
0x13c2 PUSH1 0x40
0x13c4 MLOAD
0x13c5 SWAP1
0x13c6 DUP2
0x13c7 ADD
0x13c8 PUSH1 0x40
0x13ca MSTORE
0x13cb DUP1
0x13cc PUSH1 0x0
0x13ce DUP2
0x13cf MSTORE
0x13d0 POP
0x13d1 SWAP1
0x13d2 JUMP
---
0x13bf: JUMPDEST 
0x13c0: V1177 = 0x20
0x13c2: V1178 = 0x40
0x13c4: V1179 = M[0x40]
0x13c7: V1180 = ADD V1179 0x20
0x13c8: V1181 = 0x40
0x13ca: M[0x40] = V1180
0x13cc: V1182 = 0x0
0x13cf: M[V1179] = 0x0
0x13d2: JUMP {0x5df, 0xd7f}
---
Entry stack: [V11, {0xf3, 0x3b2}, {0x5df, 0xd7f}]
Stack pops: 1
Stack additions: [V1179]
Exit stack: [V11, {0xf3, 0x3b2}, V1179]

================================

Block 0x13d3
[0x13d3:0x13fe]
---
Predecessors: []
Successors: []
---
0x13d3 STOP
0x13d4 LOG1
0x13d5 PUSH6 0x627a7a723058
0x13dc SHA3
0x13dd SLOAD
0x13de EXTCODEHASH
0x13df MISSING 0xcd
0x13e0 MISSING 0x48
0x13e1 PUSH21 0xfbf48b8f95ab60e1838105cb31bbdd93c6123d10b7
0x13f7 SDIV
0x13f8 MISSING 0xc3
0x13f9 ADDMOD
0x13fa MISSING 0xc
0x13fb MISSING 0xaf
0x13fc MISSING 0x29
0x13fd STOP
0x13fe MISSING 0x29
---
0x13d3: STOP 
0x13d4: LOG S0 S1 S2
0x13d5: V1183 = 0x627a7a723058
0x13dc: V1184 = SHA3 0x627a7a723058 S3
0x13dd: V1185 = S[V1184]
0x13de: V1186 = EXTCODEHASH V1185
0x13df: MISSING 0xcd
0x13e0: MISSING 0x48
0x13e1: V1187 = 0xfbf48b8f95ab60e1838105cb31bbdd93c6123d10b7
0x13f7: V1188 = SDIV 0xfbf48b8f95ab60e1838105cb31bbdd93c6123d10b7 S0
0x13f8: MISSING 0xc3
0x13f9: V1189 = ADDMOD S0 S1 S2
0x13fa: MISSING 0xc
0x13fb: MISSING 0xaf
0x13fc: MISSING 0x29
0x13fd: STOP 
0x13fe: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1186, V1188, V1189]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xe0
Exit block: 0x41f
Body: 0xe0, 0xe7, 0xeb, 0xf3, 0x118, 0x121, 0x133, 0x147, 0x160, 0x3b2, 0x3d7, 0x3e0, 0x3f2, 0x406, 0x41f, 0x5d7, 0x5df

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x16e
Exit block: 0x1ae
Body: 0x16e, 0x175, 0x179, 0x1ae, 0x61a, 0x627, 0x6a9, 0x6af, 0x6b7, 0x7a2

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1c8
Exit block: 0x1db
Body: 0x1c8, 0x1cf, 0x1d3, 0x1db, 0x7a8

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1f1
Exit block: 0x250
Body: 0x1f1, 0x1f8, 0x1fc, 0x250, 0x7ae, 0x7c4, 0x7c5, 0x80f, 0x890, 0x897, 0x89c, 0x8a3, 0x927, 0x92d, 0xabe, 0xac3

Function 4:
Public function signature: 0x313ce567
Entry block: 0x26a
Exit block: 0x27d
Body: 0x26a, 0x271, 0x275, 0x27d, 0xacb

Function 5:
Public function signature: 0x4d2301cc
Entry block: 0x299
Exit block: 0xb8e
Body: 0x299, 0x2a0, 0x2a4, 0x2d0, 0x350, 0xad4, 0xb74, 0xb7e, 0xb8e, 0xb8f, 0xb9e, 0xba5, 0xba9, 0xc2a, 0xc2b, 0xc89, 0xc8a, 0xd1b, 0xd28

Function 6:
Public function signature: 0x55491da8
Entry block: 0x2e6
Exit block: 0xc89
Body: 0x2d0, 0x2e6, 0x2ed, 0x2f1, 0x350, 0xad4, 0xaf5, 0xb4f, 0xb53, 0xb6b, 0xb6f, 0xb74, 0xb7e, 0xb8e, 0xb8f, 0xb9e, 0xba5, 0xba9, 0xc2a, 0xc2b, 0xc89, 0xc8a, 0xd1b, 0xd28

Function 7:
Public function signature: 0x70a08231
Entry block: 0x352
Exit block: 0x389
Body: 0x352, 0x359, 0x35d, 0x389, 0xd2e

Function 8:
Public function signature: 0x95d89b41
Entry block: 0x39f
Exit block: 0x160
Body: 0xf3, 0x118, 0x121, 0x133, 0x147, 0x160, 0x39f, 0x3a6, 0x3aa, 0x3b2, 0x3d7, 0x3e0, 0x3f2, 0x406, 0x41f, 0xd77, 0xd7f

Function 9:
Public function signature: 0x9b1cbccc
Entry block: 0x42d
Exit block: 0x440
Body: 0x42d, 0x434, 0x438, 0x440, 0xdba, 0xe14, 0xe18

Function 10:
Public function signature: 0xa9059cbb
Entry block: 0x45a
Exit block: 0x49a
Body: 0x45a, 0x461, 0x465, 0x49a, 0xe66, 0xe7c, 0xe7d, 0xec7, 0xecc, 0xed3, 0xf57, 0xf5d, 0x1064, 0x1069

Function 11:
Public function signature: 0xc108d542
Entry block: 0x4b4
Exit block: 0x4c7
Body: 0x4b4, 0x4bb, 0x4bf, 0x4c7, 0x1070

Function 12:
Public function signature: 0xdd62ed3e
Entry block: 0x4e1
Exit block: 0x537
Body: 0x4e1, 0x4e8, 0x4ec, 0x537, 0x1083

Function 13:
Public function signature: 0xe58fc54c
Entry block: 0x54d
Exit block: 0x584
Body: 0x54d, 0x554, 0x558, 0x584, 0x110a, 0x1167, 0x116b, 0x120d, 0x1211, 0x121e, 0x1222, 0x12f7, 0x12fb, 0x1308, 0x130c

Function 14:
Public function signature: 0xf2fde38b
Entry block: 0x59e
Exit block: 0x5d5
Body: 0x59e, 0x5a5, 0x5a9, 0x5d5, 0x131f, 0x1377, 0x137b

Function 15:
Public fallback function
Entry block: 0xdb
Exit block: 0xdb
Body: 0xdb

