Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4b
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4b
0xc: JUMPI 0x4b V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x4d]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x57ea89b6
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x4d
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x57ea89b6
0x3b: V13 = EQ V11 0x57ea89b6
0x3c: V14 = 0x4d
0x3f: JUMPI 0x4d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x60]
---
0x40 DUP1
0x41 PUSH4 0x5beff1c8
0x46 EQ
0x47 PUSH2 0x60
0x4a JUMPI
---
0x41: V15 = 0x5beff1c8
0x46: V16 = EQ 0x5beff1c8 V11
0x47: V17 = 0x60
0x4a: JUMPI 0x60 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x4c]
---
Predecessors: [0x0, 0x40, 0xbf, 0x14f]
Successors: []
---
0x4b JUMPDEST
0x4c STOP
---
0x4b: JUMPDEST 
0x4c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4d
[0x4d:0x53]
---
Predecessors: [0xd]
Successors: [0x54, 0x58]
---
0x4d JUMPDEST
0x4e CALLVALUE
0x4f ISZERO
0x50 PUSH2 0x58
0x53 JUMPI
---
0x4d: JUMPDEST 
0x4e: V18 = CALLVALUE
0x4f: V19 = ISZERO V18
0x50: V20 = 0x58
0x53: JUMPI 0x58 V19
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x54
[0x54:0x57]
---
Predecessors: [0x4d]
Successors: []
---
0x54 PUSH1 0x0
0x56 DUP1
0x57 REVERT
---
0x54: V21 = 0x0
0x57: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5f]
---
Predecessors: [0x4d]
Successors: [0x6b]
---
0x58 JUMPDEST
0x59 PUSH2 0x4b
0x5c PUSH2 0x6b
0x5f JUMP
---
0x58: JUMPDEST 
0x59: V22 = 0x4b
0x5c: V23 = 0x6b
0x5f: JUMP 0x6b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x4b]
Exit stack: [V11, 0x4b]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x40]
Successors: [0xc1]
---
0x60 JUMPDEST
0x61 PUSH2 0x4b
0x64 PUSH1 0x4
0x66 CALLDATALOAD
0x67 PUSH2 0xc1
0x6a JUMP
---
0x60: JUMPDEST 
0x61: V24 = 0x4b
0x64: V25 = 0x4
0x66: V26 = CALLDATALOAD 0x4
0x67: V27 = 0xc1
0x6a: JUMP 0xc1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x4b, V26]
Exit stack: [V11, 0x4b, V26]

================================

Block 0x6b
[0x6b:0x81]
---
Predecessors: [0x58]
Successors: [0x82, 0x86]
---
0x6b JUMPDEST
0x6c PUSH1 0x0
0x6e SLOAD
0x6f CALLER
0x70 PUSH1 0x1
0x72 PUSH1 0xa0
0x74 PUSH1 0x2
0x76 EXP
0x77 SUB
0x78 SWAP1
0x79 DUP2
0x7a AND
0x7b SWAP2
0x7c AND
0x7d EQ
0x7e PUSH2 0x86
0x81 JUMPI
---
0x6b: JUMPDEST 
0x6c: V28 = 0x0
0x6e: V29 = S[0x0]
0x6f: V30 = CALLER
0x70: V31 = 0x1
0x72: V32 = 0xa0
0x74: V33 = 0x2
0x76: V34 = EXP 0x2 0xa0
0x77: V35 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a: V36 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x7c: V37 = AND V29 0xffffffffffffffffffffffffffffffffffffffff
0x7d: V38 = EQ V37 V36
0x7e: V39 = 0x86
0x81: JUMPI 0x86 V38
---
Entry stack: [V11, 0x4b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b]

================================

Block 0x82
[0x82:0x85]
---
Predecessors: [0x6b]
Successors: []
---
0x82 PUSH1 0x0
0x84 DUP1
0x85 REVERT
---
0x82: V40 = 0x0
0x85: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b]

================================

Block 0x86
[0x86:0xba]
---
Predecessors: [0x6b]
Successors: [0xbb, 0xbf]
---
0x86 JUMPDEST
0x87 PUSH1 0x0
0x89 SLOAD
0x8a PUSH1 0x1
0x8c PUSH1 0xa0
0x8e PUSH1 0x2
0x90 EXP
0x91 SUB
0x92 SWAP1
0x93 DUP2
0x94 AND
0x95 SWAP1
0x96 ADDRESS
0x97 AND
0x98 BALANCE
0x99 DUP1
0x9a ISZERO
0x9b PUSH2 0x8fc
0x9e MUL
0x9f SWAP1
0xa0 PUSH1 0x40
0xa2 MLOAD
0xa3 PUSH1 0x0
0xa5 PUSH1 0x40
0xa7 MLOAD
0xa8 DUP1
0xa9 DUP4
0xaa SUB
0xab DUP2
0xac DUP6
0xad DUP9
0xae DUP9
0xaf CALL
0xb0 SWAP4
0xb1 POP
0xb2 POP
0xb3 POP
0xb4 POP
0xb5 ISZERO
0xb6 ISZERO
0xb7 PUSH2 0xbf
0xba JUMPI
---
0x86: JUMPDEST 
0x87: V41 = 0x0
0x89: V42 = S[0x0]
0x8a: V43 = 0x1
0x8c: V44 = 0xa0
0x8e: V45 = 0x2
0x90: V46 = EXP 0x2 0xa0
0x91: V47 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x96: V49 = ADDRESS
0x97: V50 = AND V49 0xffffffffffffffffffffffffffffffffffffffff
0x98: V51 = BALANCE V50
0x9a: V52 = ISZERO V51
0x9b: V53 = 0x8fc
0x9e: V54 = MUL 0x8fc V52
0xa0: V55 = 0x40
0xa2: V56 = M[0x40]
0xa3: V57 = 0x0
0xa5: V58 = 0x40
0xa7: V59 = M[0x40]
0xaa: V60 = SUB V56 V59
0xaf: V61 = CALL V54 V48 V51 V59 V60 V59 0x0
0xb5: V62 = ISZERO V61
0xb6: V63 = ISZERO V62
0xb7: V64 = 0xbf
0xba: JUMPI 0xbf V63
---
Entry stack: [V11, 0x4b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b]

================================

Block 0xbb
[0xbb:0xbe]
---
Predecessors: [0x86]
Successors: []
---
0xbb PUSH1 0x0
0xbd DUP1
0xbe REVERT
---
0xbb: V65 = 0x0
0xbe: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b]

================================

Block 0xbf
[0xbf:0xc0]
---
Predecessors: [0x86]
Successors: [0x4b]
---
0xbf JUMPDEST
0xc0 JUMP
---
0xbf: JUMPDEST 
0xc0: JUMP 0x4b
---
Entry stack: [V11, 0x4b]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xc1
[0xc1:0xd5]
---
Predecessors: [0x60]
Successors: [0x152]
---
0xc1 JUMPDEST
0xc2 PUSH1 0x0
0xc4 SLOAD
0xc5 PUSH2 0xd6
0xc8 SWAP1
0xc9 PUSH1 0x1
0xcb PUSH1 0xa0
0xcd PUSH1 0x2
0xcf EXP
0xd0 SUB
0xd1 AND
0xd2 PUSH2 0x152
0xd5 JUMP
---
0xc1: JUMPDEST 
0xc2: V66 = 0x0
0xc4: V67 = S[0x0]
0xc5: V68 = 0xd6
0xc9: V69 = 0x1
0xcb: V70 = 0xa0
0xcd: V71 = 0x2
0xcf: V72 = EXP 0x2 0xa0
0xd0: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd1: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0xd2: V75 = 0x152
0xd5: JUMP 0x152
---
Entry stack: [V11, 0x4b, V26]
Stack pops: 0
Stack additions: [0xd6, V74]
Exit stack: [V11, 0x4b, V26, 0xd6, V74]

================================

Block 0xd6
[0xd6:0xdf]
---
Predecessors: [0x152]
Successors: [0x152]
---
0xd6 JUMPDEST
0xd7 DUP2
0xd8 PUSH2 0xe0
0xdb CALLER
0xdc PUSH2 0x152
0xdf JUMP
---
0xd6: JUMPDEST 
0xd8: V76 = 0xe0
0xdb: V77 = CALLER
0xdc: V78 = 0x152
0xdf: JUMP 0x152
---
Entry stack: [V11, 0x4b, S5, S4, S3, S2, V26, V148]
Stack pops: 2
Stack additions: [S1, S0, S1, 0xe0, V77]
Exit stack: [V11, 0x4b, S5, S4, S3, S2, V26, V148, V26, 0xe0, V77]

================================

Block 0xe0
[0xe0:0xe8]
---
Predecessors: [0x152]
Successors: [0xe9, 0xf8]
---
0xe0 JUMPDEST
0xe1 MUL
0xe2 LT
0xe3 DUP1
0xe4 ISZERO
0xe5 PUSH2 0xf8
0xe8 JUMPI
---
0xe0: JUMPDEST 
0xe1: V79 = MUL V148 V26
0xe2: V80 = LT V79 S2
0xe4: V81 = ISZERO V80
0xe5: V82 = 0xf8
0xe8: JUMPI 0xf8 V81
---
Entry stack: [V11, 0x4b, S5, S4, S3, S2, V26, V148]
Stack pops: 3
Stack additions: [V80]
Exit stack: [V11, 0x4b, S5, S4, S3, V80]

================================

Block 0xe9
[0xe9:0xf7]
---
Predecessors: [0xe0]
Successors: [0xf8]
---
0xe9 POP
0xea ADDRESS
0xeb PUSH1 0x1
0xed PUSH1 0xa0
0xef PUSH1 0x2
0xf1 EXP
0xf2 SUB
0xf3 AND
0xf4 BALANCE
0xf5 CALLVALUE
0xf6 LT
0xf7 ISZERO
---
0xea: V83 = ADDRESS
0xeb: V84 = 0x1
0xed: V85 = 0xa0
0xef: V86 = 0x2
0xf1: V87 = EXP 0x2 0xa0
0xf2: V88 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf3: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0xf4: V90 = BALANCE V89
0xf5: V91 = CALLVALUE
0xf6: V92 = LT V91 V90
0xf7: V93 = ISZERO V92
---
Entry stack: [V11, 0x4b, S3, S2, S1, V80]
Stack pops: 1
Stack additions: [V93]
Exit stack: [V11, 0x4b, S3, S2, S1, V93]

================================

Block 0xf8
[0xf8:0xfe]
---
Predecessors: [0xe0, 0xe9]
Successors: [0xff, 0x10b]
---
0xf8 JUMPDEST
0xf9 DUP1
0xfa ISZERO
0xfb PUSH2 0x10b
0xfe JUMPI
---
0xf8: JUMPDEST 
0xfa: V94 = ISZERO S0
0xfb: V95 = 0x10b
0xfe: JUMPI 0x10b V94
---
Entry stack: [V11, 0x4b, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x4b, S3, S2, S1, S0]

================================

Block 0xff
[0xff:0x10a]
---
Predecessors: [0xf8]
Successors: [0x10b]
---
0xff POP
0x100 PUSH8 0x3782dace9d90000
0x109 CALLVALUE
0x10a GT
---
0x100: V96 = 0x3782dace9d90000
0x109: V97 = CALLVALUE
0x10a: V98 = GT V97 0x3782dace9d90000
---
Entry stack: [V11, 0x4b, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V98]
Exit stack: [V11, 0x4b, S3, S2, S1, V98]

================================

Block 0x10b
[0x10b:0x110]
---
Predecessors: [0xf8, 0xff]
Successors: [0x111, 0x14f]
---
0x10b JUMPDEST
0x10c ISZERO
0x10d PUSH2 0x14f
0x110 JUMPI
---
0x10b: JUMPDEST 
0x10c: V99 = ISZERO S0
0x10d: V100 = 0x14f
0x110: JUMPI 0x14f V99
---
Entry stack: [V11, 0x4b, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x4b, S3, S2, S1]

================================

Block 0x111
[0x111:0x14a]
---
Predecessors: [0x10b]
Successors: [0x14b, 0x14f]
---
0x111 CALLER
0x112 PUSH1 0x1
0x114 PUSH1 0xa0
0x116 PUSH1 0x2
0x118 EXP
0x119 SUB
0x11a AND
0x11b PUSH2 0x8fc
0x11e CALLVALUE
0x11f ADDRESS
0x120 PUSH1 0x1
0x122 PUSH1 0xa0
0x124 PUSH1 0x2
0x126 EXP
0x127 SUB
0x128 AND
0x129 BALANCE
0x12a ADD
0x12b SWAP1
0x12c DUP2
0x12d ISZERO
0x12e MUL
0x12f SWAP1
0x130 PUSH1 0x40
0x132 MLOAD
0x133 PUSH1 0x0
0x135 PUSH1 0x40
0x137 MLOAD
0x138 DUP1
0x139 DUP4
0x13a SUB
0x13b DUP2
0x13c DUP6
0x13d DUP9
0x13e DUP9
0x13f CALL
0x140 SWAP4
0x141 POP
0x142 POP
0x143 POP
0x144 POP
0x145 ISZERO
0x146 ISZERO
0x147 PUSH2 0x14f
0x14a JUMPI
---
0x111: V101 = CALLER
0x112: V102 = 0x1
0x114: V103 = 0xa0
0x116: V104 = 0x2
0x118: V105 = EXP 0x2 0xa0
0x119: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11a: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x11b: V108 = 0x8fc
0x11e: V109 = CALLVALUE
0x11f: V110 = ADDRESS
0x120: V111 = 0x1
0x122: V112 = 0xa0
0x124: V113 = 0x2
0x126: V114 = EXP 0x2 0xa0
0x127: V115 = SUB 0x10000000000000000000000000000000000000000 0x1
0x128: V116 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x129: V117 = BALANCE V116
0x12a: V118 = ADD V117 V109
0x12d: V119 = ISZERO V118
0x12e: V120 = MUL V119 0x8fc
0x130: V121 = 0x40
0x132: V122 = M[0x40]
0x133: V123 = 0x0
0x135: V124 = 0x40
0x137: V125 = M[0x40]
0x13a: V126 = SUB V122 V125
0x13f: V127 = CALL V120 V107 V118 V125 V126 V125 0x0
0x145: V128 = ISZERO V127
0x146: V129 = ISZERO V128
0x147: V130 = 0x14f
0x14a: JUMPI 0x14f V129
---
Entry stack: [V11, 0x4b, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b, S2, S1, S0]

================================

Block 0x14b
[0x14b:0x14e]
---
Predecessors: [0x111]
Successors: []
---
0x14b PUSH1 0x0
0x14d DUP1
0x14e REVERT
---
0x14b: V131 = 0x0
0x14e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4b, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4b, S2, S1, S0]

================================

Block 0x14f
[0x14f:0x151]
---
Predecessors: [0x10b, 0x111]
Successors: [0x4b]
---
0x14f JUMPDEST
0x150 POP
0x151 JUMP
---
0x14f: JUMPDEST 
0x151: JUMP S1
---
Entry stack: [V11, 0x4b, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x4b, S2]

================================

Block 0x152
[0x152:0x177]
---
Predecessors: [0xc1, 0xd6]
Successors: [0xd6, 0xe0]
---
0x152 JUMPDEST
0x153 PUSH1 0x0
0x155 TIMESTAMP
0x156 DUP3
0x157 PUSH1 0x1
0x159 PUSH1 0xa0
0x15b PUSH1 0x2
0x15d EXP
0x15e SUB
0x15f AND
0x160 ADD
0x161 PUSH1 0x40
0x163 MLOAD
0x164 SWAP1
0x165 DUP2
0x166 MSTORE
0x167 PUSH1 0x20
0x169 ADD
0x16a PUSH1 0x40
0x16c MLOAD
0x16d SWAP1
0x16e DUP2
0x16f SWAP1
0x170 SUB
0x171 SWAP1
0x172 SHA3
0x173 SWAP3
0x174 SWAP2
0x175 POP
0x176 POP
0x177 JUMP
---
0x152: JUMPDEST 
0x153: V132 = 0x0
0x155: V133 = TIMESTAMP
0x157: V134 = 0x1
0x159: V135 = 0xa0
0x15b: V136 = 0x2
0x15d: V137 = EXP 0x2 0xa0
0x15e: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15f: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x160: V140 = ADD V139 V133
0x161: V141 = 0x40
0x163: V142 = M[0x40]
0x166: M[V142] = V140
0x167: V143 = 0x20
0x169: V144 = ADD 0x20 V142
0x16a: V145 = 0x40
0x16c: V146 = M[0x40]
0x170: V147 = SUB V144 V146
0x172: V148 = SHA3 V146 V147
0x177: JUMP {0xd6, 0xe0}
---
Entry stack: [V11, 0x4b, S8, S7, S6, S5, S4, S3, V26, {0xd6, 0xe0}, S0]
Stack pops: 2
Stack additions: [V148]
Exit stack: [V11, 0x4b, S8, S7, S6, S5, S4, S3, V26, V148]

================================

Block 0x178
[0x178:0x1a3]
---
Predecessors: []
Successors: []
---
0x178 STOP
0x179 LOG1
0x17a PUSH6 0x627a7a723058
0x181 SHA3
0x182 MISSING 0x49
0x183 MISSING 0xb6
0x184 MISSING 0x29
0x185 CALLDATACOPY
0x186 CALLVALUE
0x187 MISSING 0xb4
0x188 RETURNDATACOPY
0x189 AND
0x18a MISSING 0xec
0x18b PUSH22 0x7c98427253062ab836b7b4f0e09cc6dfc1e6915a8f0c
0x1a2 STOP
0x1a3 MISSING 0x29
---
0x178: STOP 
0x179: LOG S0 S1 S2
0x17a: V149 = 0x627a7a723058
0x181: V150 = SHA3 0x627a7a723058 S3
0x182: MISSING 0x49
0x183: MISSING 0xb6
0x184: MISSING 0x29
0x185: CALLDATACOPY S0 S1 S2
0x186: V151 = CALLVALUE
0x187: MISSING 0xb4
0x188: RETURNDATACOPY S0 S1 S2
0x189: V152 = AND S3 S4
0x18a: MISSING 0xec
0x18b: V153 = 0x7c98427253062ab836b7b4f0e09cc6dfc1e6915a8f0c
0x1a2: STOP 
0x1a3: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V150, V151, V152, 0x7c98427253062ab836b7b4f0e09cc6dfc1e6915a8f0c]
Exit stack: []

================================

Function 0:
Public function signature: 0x57ea89b6
Entry block: 0x4d
Exit block: 0x4b
Body: 0x4b, 0x4d, 0x54, 0x58, 0x6b, 0x82, 0x86, 0xbb, 0xbf

Function 1:
Public function signature: 0x5beff1c8
Entry block: 0x60
Exit block: 0x4b
Body: 0x4b, 0x60, 0xc1, 0xd6, 0xe0, 0xe9, 0xf8, 0xff, 0x10b, 0x111, 0x14b, 0x14f, 0x152

Function 2:
Public fallback function
Entry block: 0x4b
Exit block: 0x4b
Body: 0x4b

