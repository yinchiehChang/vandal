Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x80]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x80
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x80
0xa: JUMPI 0x80 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x8a]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x2e1a7d4d
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x8a
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x2e1a7d4d
0x39: V12 = EQ V10 0x2e1a7d4d
0x3a: V13 = 0x8a
0x3d: JUMPI 0x8a V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x95]
---
0x3e DUP1
0x3f PUSH4 0x41c0e1b5
0x44 EQ
0x45 PUSH2 0x95
0x48 JUMPI
---
0x3f: V14 = 0x41c0e1b5
0x44: V15 = EQ 0x41c0e1b5 V10
0x45: V16 = 0x95
0x48: JUMPI 0x95 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x9d]
---
0x49 DUP1
0x4a PUSH4 0xb4a99a4e
0x4f EQ
0x50 PUSH2 0x9d
0x53 JUMPI
---
0x4a: V17 = 0xb4a99a4e
0x4f: V18 = EQ 0xb4a99a4e V10
0x50: V19 = 0x9d
0x53: JUMPI 0x9d V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0xcc]
---
0x54 DUP1
0x55 PUSH4 0xb7b0422d
0x5a EQ
0x5b PUSH2 0xcc
0x5e JUMPI
---
0x55: V20 = 0xb7b0422d
0x5a: V21 = EQ 0xb7b0422d V10
0x5b: V22 = 0xcc
0x5e: JUMPI 0xcc V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x80]
---
0x5f DUP1
0x60 PUSH4 0xd0e30db0
0x65 EQ
0x66 PUSH2 0x80
0x69 JUMPI
---
0x60: V23 = 0xd0e30db0
0x65: V24 = EQ 0xd0e30db0 V10
0x66: V25 = 0x80
0x69: JUMPI 0x80 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0xd7]
---
0x6a DUP1
0x6b PUSH4 0xec8cb281
0x70 EQ
0x71 PUSH2 0xd7
0x74 JUMPI
---
0x6b: V26 = 0xec8cb281
0x70: V27 = EQ 0xec8cb281 V10
0x71: V28 = 0xd7
0x74: JUMPI 0xd7 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0xfc]
---
0x75 DUP1
0x76 PUSH4 0xfc7e286d
0x7b EQ
0x7c PUSH2 0xfc
0x7f JUMPI
---
0x76: V29 = 0xfc7e286d
0x7b: V30 = EQ 0xfc7e286d V10
0x7c: V31 = 0xfc
0x7f: JUMPI 0xfc V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x87]
---
Predecessors: [0x0, 0x5f, 0x75]
Successors: [0x11b]
---
0x80 JUMPDEST
0x81 PUSH2 0x88
0x84 PUSH2 0x11b
0x87 JUMP
---
0x80: JUMPDEST 
0x81: V32 = 0x88
0x84: V33 = 0x11b
0x87: JUMP 0x11b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x88]
Exit stack: [V10, 0x88]

================================

Block 0x88
[0x88:0x89]
---
Predecessors: [0x17f, 0x1fe, 0x23e]
Successors: []
---
0x88 JUMPDEST
0x89 STOP
---
0x88: JUMPDEST 
0x89: STOP 
---
Entry stack: [V10, 0x88, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x88, S0]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0xb]
Successors: [0x181]
---
0x8a JUMPDEST
0x8b PUSH2 0x88
0x8e PUSH1 0x4
0x90 CALLDATALOAD
0x91 PUSH2 0x181
0x94 JUMP
---
0x8a: JUMPDEST 
0x8b: V34 = 0x88
0x8e: V35 = 0x4
0x90: V36 = CALLDATALOAD 0x4
0x91: V37 = 0x181
0x94: JUMP 0x181
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x88, V36]
Exit stack: [V10, 0x88, V36]

================================

Block 0x95
[0x95:0x9c]
---
Predecessors: [0x3e]
Successors: [0x202]
---
0x95 JUMPDEST
0x96 PUSH2 0x88
0x99 PUSH2 0x202
0x9c JUMP
---
0x95: JUMPDEST 
0x96: V38 = 0x88
0x99: V39 = 0x202
0x9c: JUMP 0x202
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x88]
Exit stack: [V10, 0x88]

================================

Block 0x9d
[0x9d:0xa3]
---
Predecessors: [0x49]
Successors: [0xa4, 0xa8]
---
0x9d JUMPDEST
0x9e CALLVALUE
0x9f ISZERO
0xa0 PUSH2 0xa8
0xa3 JUMPI
---
0x9d: JUMPDEST 
0x9e: V40 = CALLVALUE
0x9f: V41 = ISZERO V40
0xa0: V42 = 0xa8
0xa3: JUMPI 0xa8 V41
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa4
[0xa4:0xa7]
---
Predecessors: [0x9d]
Successors: []
---
0xa4 PUSH1 0x0
0xa6 DUP1
0xa7 REVERT
---
0xa4: V43 = 0x0
0xa7: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa8
[0xa8:0xaf]
---
Predecessors: [0x9d]
Successors: [0x22f]
---
0xa8 JUMPDEST
0xa9 PUSH2 0xb0
0xac PUSH2 0x22f
0xaf JUMP
---
0xa8: JUMPDEST 
0xa9: V44 = 0xb0
0xac: V45 = 0x22f
0xaf: JUMP 0x22f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb0]
Exit stack: [V10, 0xb0]

================================

Block 0xb0
[0xb0:0xcb]
---
Predecessors: [0x22f]
Successors: []
---
0xb0 JUMPDEST
0xb1 PUSH1 0x40
0xb3 MLOAD
0xb4 PUSH1 0x1
0xb6 PUSH1 0xa0
0xb8 PUSH1 0x2
0xba EXP
0xbb SUB
0xbc SWAP1
0xbd SWAP2
0xbe AND
0xbf DUP2
0xc0 MSTORE
0xc1 PUSH1 0x20
0xc3 ADD
0xc4 PUSH1 0x40
0xc6 MLOAD
0xc7 DUP1
0xc8 SWAP2
0xc9 SUB
0xca SWAP1
0xcb RETURN
---
0xb0: JUMPDEST 
0xb1: V46 = 0x40
0xb3: V47 = M[0x40]
0xb4: V48 = 0x1
0xb6: V49 = 0xa0
0xb8: V50 = 0x2
0xba: V51 = EXP 0x2 0xa0
0xbb: V52 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe: V53 = AND V198 0xffffffffffffffffffffffffffffffffffffffff
0xc0: M[V47] = V53
0xc1: V54 = 0x20
0xc3: V55 = ADD 0x20 V47
0xc4: V56 = 0x40
0xc6: V57 = M[0x40]
0xc9: V58 = SUB V55 V57
0xcb: RETURN V57 V58
---
Entry stack: [V10, 0xb0, V198]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xb0]

================================

Block 0xcc
[0xcc:0xd6]
---
Predecessors: [0x54]
Successors: [0x23e]
---
0xcc JUMPDEST
0xcd PUSH2 0x88
0xd0 PUSH1 0x4
0xd2 CALLDATALOAD
0xd3 PUSH2 0x23e
0xd6 JUMP
---
0xcc: JUMPDEST 
0xcd: V59 = 0x88
0xd0: V60 = 0x4
0xd2: V61 = CALLDATALOAD 0x4
0xd3: V62 = 0x23e
0xd6: JUMP 0x23e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x88, V61]
Exit stack: [V10, 0x88, V61]

================================

Block 0xd7
[0xd7:0xdd]
---
Predecessors: [0x6a]
Successors: [0xde, 0xe2]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 ISZERO
0xda PUSH2 0xe2
0xdd JUMPI
---
0xd7: JUMPDEST 
0xd8: V63 = CALLVALUE
0xd9: V64 = ISZERO V63
0xda: V65 = 0xe2
0xdd: JUMPI 0xe2 V64
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xde
[0xde:0xe1]
---
Predecessors: [0xd7]
Successors: []
---
0xde PUSH1 0x0
0xe0 DUP1
0xe1 REVERT
---
0xde: V66 = 0x0
0xe1: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xe2
[0xe2:0xe9]
---
Predecessors: [0xd7]
Successors: [0x2a9]
---
0xe2 JUMPDEST
0xe3 PUSH2 0xea
0xe6 PUSH2 0x2a9
0xe9 JUMP
---
0xe2: JUMPDEST 
0xe3: V67 = 0xea
0xe6: V68 = 0x2a9
0xe9: JUMP 0x2a9
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xea]
Exit stack: [V10, 0xea]

================================

Block 0xea
[0xea:0xfb]
---
Predecessors: [0x2a9, 0x2af]
Successors: []
---
0xea JUMPDEST
0xeb PUSH1 0x40
0xed MLOAD
0xee SWAP1
0xef DUP2
0xf0 MSTORE
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP1
0xf8 SWAP2
0xf9 SUB
0xfa SWAP1
0xfb RETURN
---
0xea: JUMPDEST 
0xeb: V69 = 0x40
0xed: V70 = M[0x40]
0xf0: M[V70] = S0
0xf1: V71 = 0x20
0xf3: V72 = ADD 0x20 V70
0xf4: V73 = 0x40
0xf6: V74 = M[0x40]
0xf9: V75 = SUB V72 V74
0xfb: RETURN V74 V75
---
Entry stack: [V10, 0xea, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xea]

================================

Block 0xfc
[0xfc:0x102]
---
Predecessors: [0x75]
Successors: [0x103, 0x107]
---
0xfc JUMPDEST
0xfd CALLVALUE
0xfe ISZERO
0xff PUSH2 0x107
0x102 JUMPI
---
0xfc: JUMPDEST 
0xfd: V76 = CALLVALUE
0xfe: V77 = ISZERO V76
0xff: V78 = 0x107
0x102: JUMPI 0x107 V77
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x103
[0x103:0x106]
---
Predecessors: [0xfc]
Successors: []
---
0x103 PUSH1 0x0
0x105 DUP1
0x106 REVERT
---
0x103: V79 = 0x0
0x106: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x107
[0x107:0x11a]
---
Predecessors: [0xfc]
Successors: [0x2af]
---
0x107 JUMPDEST
0x108 PUSH2 0xea
0x10b PUSH1 0x1
0x10d PUSH1 0xa0
0x10f PUSH1 0x2
0x111 EXP
0x112 SUB
0x113 PUSH1 0x4
0x115 CALLDATALOAD
0x116 AND
0x117 PUSH2 0x2af
0x11a JUMP
---
0x107: JUMPDEST 
0x108: V80 = 0xea
0x10b: V81 = 0x1
0x10d: V82 = 0xa0
0x10f: V83 = 0x2
0x111: V84 = EXP 0x2 0xa0
0x112: V85 = SUB 0x10000000000000000000000000000000000000000 0x1
0x113: V86 = 0x4
0x115: V87 = CALLDATALOAD 0x4
0x116: V88 = AND V87 0xffffffffffffffffffffffffffffffffffffffff
0x117: V89 = 0x2af
0x11a: JUMP 0x2af
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xea, V88]
Exit stack: [V10, 0xea, V88]

================================

Block 0x11b
[0x11b:0x12a]
---
Predecessors: [0x80]
Successors: [0x12b, 0x17f]
---
0x11b JUMPDEST
0x11c PUSH8 0xde0b6b3a7640000
0x125 CALLVALUE
0x126 LT
0x127 PUSH2 0x17f
0x12a JUMPI
---
0x11b: JUMPDEST 
0x11c: V90 = 0xde0b6b3a7640000
0x125: V91 = CALLVALUE
0x126: V92 = LT V91 0xde0b6b3a7640000
0x127: V93 = 0x17f
0x12a: JUMPI 0x17f V92
---
Entry stack: [V10, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x88]

================================

Block 0x12b
[0x12b:0x17e]
---
Predecessors: [0x11b]
Successors: [0x17f]
---
0x12b PUSH1 0x1
0x12d PUSH1 0xa0
0x12f PUSH1 0x2
0x131 EXP
0x132 SUB
0x133 CALLER
0x134 AND
0x135 PUSH1 0x0
0x137 DUP2
0x138 DUP2
0x139 MSTORE
0x13a PUSH1 0x2
0x13c PUSH1 0x20
0x13e MSTORE
0x13f PUSH1 0x40
0x141 SWAP1
0x142 DUP2
0x143 SWAP1
0x144 SHA3
0x145 DUP1
0x146 SLOAD
0x147 CALLVALUE
0x148 SWAP1
0x149 DUP2
0x14a ADD
0x14b SWAP1
0x14c SWAP2
0x14d SSTORE
0x14e PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x16f SWAP2
0x170 MLOAD
0x171 SWAP1
0x172 DUP2
0x173 MSTORE
0x174 PUSH1 0x20
0x176 ADD
0x177 PUSH1 0x40
0x179 MLOAD
0x17a DUP1
0x17b SWAP2
0x17c SUB
0x17d SWAP1
0x17e LOG2
---
0x12b: V94 = 0x1
0x12d: V95 = 0xa0
0x12f: V96 = 0x2
0x131: V97 = EXP 0x2 0xa0
0x132: V98 = SUB 0x10000000000000000000000000000000000000000 0x1
0x133: V99 = CALLER
0x134: V100 = AND V99 0xffffffffffffffffffffffffffffffffffffffff
0x135: V101 = 0x0
0x139: M[0x0] = V100
0x13a: V102 = 0x2
0x13c: V103 = 0x20
0x13e: M[0x20] = 0x2
0x13f: V104 = 0x40
0x144: V105 = SHA3 0x0 0x40
0x146: V106 = S[V105]
0x147: V107 = CALLVALUE
0x14a: V108 = ADD V107 V106
0x14d: S[V105] = V108
0x14e: V109 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x170: V110 = M[0x40]
0x173: M[V110] = V107
0x174: V111 = 0x20
0x176: V112 = ADD 0x20 V110
0x177: V113 = 0x40
0x179: V114 = M[0x40]
0x17c: V115 = SUB V112 V114
0x17e: LOG V114 V115 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V100
---
Entry stack: [V10, 0x88]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x88]

================================

Block 0x17f
[0x17f:0x180]
---
Predecessors: [0x11b, 0x12b, 0x21e]
Successors: [0x88]
---
0x17f JUMPDEST
0x180 JUMP
---
0x17f: JUMPDEST 
0x180: JUMP {0x0, 0x88}
---
Entry stack: [V10, 0x88, S1, {0x0, 0x88}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x88, S1]

================================

Block 0x181
[0x181:0x18a]
---
Predecessors: [0x8a]
Successors: [0x2c1]
---
0x181 JUMPDEST
0x182 PUSH1 0x0
0x184 PUSH2 0x18b
0x187 PUSH2 0x2c1
0x18a JUMP
---
0x181: JUMPDEST 
0x182: V116 = 0x0
0x184: V117 = 0x18b
0x187: V118 = 0x2c1
0x18a: JUMP 0x2c1
---
Entry stack: [V10, 0x88, V36]
Stack pops: 0
Stack additions: [0x0, 0x18b]
Exit stack: [V10, 0x88, V36, 0x0, 0x18b]

================================

Block 0x18b
[0x18b:0x191]
---
Predecessors: [0x2c1]
Successors: [0x192, 0x199]
---
0x18b JUMPDEST
0x18c DUP1
0x18d ISZERO
0x18e PUSH2 0x199
0x191 JUMPI
---
0x18b: JUMPDEST 
0x18d: V119 = ISZERO V240
0x18e: V120 = 0x199
0x191: JUMPI 0x199 V119
---
Entry stack: [V10, 0x88, S2, {0x0, 0x88}, V240]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x88, S2, {0x0, 0x88}, V240]

================================

Block 0x192
[0x192:0x198]
---
Predecessors: [0x18b]
Successors: [0x199]
---
0x192 POP
0x193 PUSH1 0x3
0x195 SLOAD
0x196 TIMESTAMP
0x197 LT
0x198 ISZERO
---
0x193: V121 = 0x3
0x195: V122 = S[0x3]
0x196: V123 = TIMESTAMP
0x197: V124 = LT V123 V122
0x198: V125 = ISZERO V124
---
Entry stack: [V10, 0x88, S2, {0x0, 0x88}, V240]
Stack pops: 1
Stack additions: [V125]
Exit stack: [V10, 0x88, S2, {0x0, 0x88}, V125]

================================

Block 0x199
[0x199:0x19e]
---
Predecessors: [0x18b, 0x192]
Successors: [0x19f, 0x1fe]
---
0x199 JUMPDEST
0x19a ISZERO
0x19b PUSH2 0x1fe
0x19e JUMPI
---
0x199: JUMPDEST 
0x19a: V126 = ISZERO S0
0x19b: V127 = 0x1fe
0x19e: JUMPI 0x1fe V126
---
Entry stack: [V10, 0x88, S2, {0x0, 0x88}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x88, S2, {0x0, 0x88}]

================================

Block 0x19f
[0x19f:0x1c2]
---
Predecessors: [0x199]
Successors: [0x1c3, 0x1c8]
---
0x19f POP
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0xa0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 SUB
0x1a8 CALLER
0x1a9 AND
0x1aa PUSH1 0x0
0x1ac SWAP1
0x1ad DUP2
0x1ae MSTORE
0x1af PUSH1 0x2
0x1b1 PUSH1 0x20
0x1b3 MSTORE
0x1b4 PUSH1 0x40
0x1b6 SWAP1
0x1b7 SHA3
0x1b8 SLOAD
0x1b9 DUP1
0x1ba DUP3
0x1bb GT
0x1bc DUP1
0x1bd ISZERO
0x1be SWAP1
0x1bf PUSH2 0x1c8
0x1c2 JUMPI
---
0x1a0: V128 = 0x1
0x1a2: V129 = 0xa0
0x1a4: V130 = 0x2
0x1a6: V131 = EXP 0x2 0xa0
0x1a7: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a8: V133 = CALLER
0x1a9: V134 = AND V133 0xffffffffffffffffffffffffffffffffffffffff
0x1aa: V135 = 0x0
0x1ae: M[0x0] = V134
0x1af: V136 = 0x2
0x1b1: V137 = 0x20
0x1b3: M[0x20] = 0x2
0x1b4: V138 = 0x40
0x1b7: V139 = SHA3 0x0 0x40
0x1b8: V140 = S[V139]
0x1bb: V141 = GT S1 V140
0x1bd: V142 = ISZERO V141
0x1bf: V143 = 0x1c8
0x1c2: JUMPI 0x1c8 V141
---
Entry stack: [V10, 0x88, S1, {0x0, 0x88}]
Stack pops: 2
Stack additions: [S1, V140, V142]
Exit stack: [V10, 0x88, S1, V140, V142]

================================

Block 0x1c3
[0x1c3:0x1c7]
---
Predecessors: [0x19f]
Successors: [0x1c8]
---
0x1c3 POP
0x1c4 PUSH1 0x0
0x1c6 DUP2
0x1c7 GT
---
0x1c4: V144 = 0x0
0x1c7: V145 = GT V140 0x0
---
Entry stack: [V10, 0x88, S2, V140, V142]
Stack pops: 2
Stack additions: [S1, V145]
Exit stack: [V10, 0x88, S2, V140, V145]

================================

Block 0x1c8
[0x1c8:0x1cd]
---
Predecessors: [0x19f, 0x1c3]
Successors: [0x1ce, 0x1fe]
---
0x1c8 JUMPDEST
0x1c9 ISZERO
0x1ca PUSH2 0x1fe
0x1cd JUMPI
---
0x1c8: JUMPDEST 
0x1c9: V146 = ISZERO S0
0x1ca: V147 = 0x1fe
0x1cd: JUMPI 0x1fe V146
---
Entry stack: [V10, 0x88, S2, V140, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x88, S2, V140]

================================

Block 0x1ce
[0x1ce:0x1f9]
---
Predecessors: [0x1c8]
Successors: [0x1fa, 0x1fe]
---
0x1ce PUSH1 0x1
0x1d0 PUSH1 0xa0
0x1d2 PUSH1 0x2
0x1d4 EXP
0x1d5 SUB
0x1d6 CALLER
0x1d7 AND
0x1d8 DUP3
0x1d9 ISZERO
0x1da PUSH2 0x8fc
0x1dd MUL
0x1de DUP4
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 PUSH1 0x0
0x1e4 PUSH1 0x40
0x1e6 MLOAD
0x1e7 DUP1
0x1e8 DUP4
0x1e9 SUB
0x1ea DUP2
0x1eb DUP6
0x1ec DUP9
0x1ed DUP9
0x1ee CALL
0x1ef SWAP4
0x1f0 POP
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 ISZERO
0x1f5 ISZERO
0x1f6 PUSH2 0x1fe
0x1f9 JUMPI
---
0x1ce: V148 = 0x1
0x1d0: V149 = 0xa0
0x1d2: V150 = 0x2
0x1d4: V151 = EXP 0x2 0xa0
0x1d5: V152 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d6: V153 = CALLER
0x1d7: V154 = AND V153 0xffffffffffffffffffffffffffffffffffffffff
0x1d9: V155 = ISZERO S1
0x1da: V156 = 0x8fc
0x1dd: V157 = MUL 0x8fc V155
0x1df: V158 = 0x40
0x1e1: V159 = M[0x40]
0x1e2: V160 = 0x0
0x1e4: V161 = 0x40
0x1e6: V162 = M[0x40]
0x1e9: V163 = SUB V159 V162
0x1ee: V164 = CALL V157 V154 S1 V162 V163 V162 0x0
0x1f4: V165 = ISZERO V164
0x1f5: V166 = ISZERO V165
0x1f6: V167 = 0x1fe
0x1f9: JUMPI 0x1fe V166
---
Entry stack: [V10, 0x88, S1, V140]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x88, S1, V140]

================================

Block 0x1fa
[0x1fa:0x1fd]
---
Predecessors: [0x1ce]
Successors: []
---
0x1fa PUSH1 0x0
0x1fc DUP1
0x1fd REVERT
---
0x1fa: V168 = 0x0
0x1fd: REVERT 0x0 0x0
---
Entry stack: [V10, 0x88, S1, V140]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x88, S1, V140]

================================

Block 0x1fe
[0x1fe:0x201]
---
Predecessors: [0x199, 0x1c8, 0x1ce]
Successors: [0x88]
---
0x1fe JUMPDEST
0x1ff POP
0x200 POP
0x201 JUMP
---
0x1fe: JUMPDEST 
0x201: JUMP 0x88
---
Entry stack: [V10, 0x88, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x202
[0x202:0x209]
---
Predecessors: [0x95]
Successors: [0x2c1]
---
0x202 JUMPDEST
0x203 PUSH2 0x20a
0x206 PUSH2 0x2c1
0x209 JUMP
---
0x202: JUMPDEST 
0x203: V169 = 0x20a
0x206: V170 = 0x2c1
0x209: JUMP 0x2c1
---
Entry stack: [V10, 0x88]
Stack pops: 0
Stack additions: [0x20a]
Exit stack: [V10, 0x88, 0x20a]

================================

Block 0x20a
[0x20a:0x210]
---
Predecessors: [0x2c1]
Successors: [0x211, 0x21e]
---
0x20a JUMPDEST
0x20b DUP1
0x20c ISZERO
0x20d PUSH2 0x21e
0x210 JUMPI
---
0x20a: JUMPDEST 
0x20c: V171 = ISZERO V240
0x20d: V172 = 0x21e
0x210: JUMPI 0x21e V171
---
Entry stack: [V10, 0x88, S2, {0x0, 0x88}, V240]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x88, S2, {0x0, 0x88}, V240]

================================

Block 0x211
[0x211:0x21d]
---
Predecessors: [0x20a]
Successors: [0x21e]
---
0x211 POP
0x212 PUSH1 0x1
0x214 PUSH1 0xa0
0x216 PUSH1 0x2
0x218 EXP
0x219 SUB
0x21a ADDRESS
0x21b AND
0x21c BALANCE
0x21d ISZERO
---
0x212: V173 = 0x1
0x214: V174 = 0xa0
0x216: V175 = 0x2
0x218: V176 = EXP 0x2 0xa0
0x219: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21a: V178 = ADDRESS
0x21b: V179 = AND V178 0xffffffffffffffffffffffffffffffffffffffff
0x21c: V180 = BALANCE V179
0x21d: V181 = ISZERO V180
---
Entry stack: [V10, 0x88, S2, {0x0, 0x88}, V240]
Stack pops: 1
Stack additions: [V181]
Exit stack: [V10, 0x88, S2, {0x0, 0x88}, V181]

================================

Block 0x21e
[0x21e:0x223]
---
Predecessors: [0x20a, 0x211]
Successors: [0x17f, 0x224]
---
0x21e JUMPDEST
0x21f ISZERO
0x220 PUSH2 0x17f
0x223 JUMPI
---
0x21e: JUMPDEST 
0x21f: V182 = ISZERO S0
0x220: V183 = 0x17f
0x223: JUMPI 0x17f V182
---
Entry stack: [V10, 0x88, S2, {0x0, 0x88}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x88, S2, {0x0, 0x88}]

================================

Block 0x224
[0x224:0x22e]
---
Predecessors: [0x21e]
Successors: []
---
0x224 CALLER
0x225 PUSH1 0x1
0x227 PUSH1 0xa0
0x229 PUSH1 0x2
0x22b EXP
0x22c SUB
0x22d AND
0x22e SELFDESTRUCT
---
0x224: V184 = CALLER
0x225: V185 = 0x1
0x227: V186 = 0xa0
0x229: V187 = 0x2
0x22b: V188 = EXP 0x2 0xa0
0x22c: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22d: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x22e: SELFDESTRUCT V190
---
Entry stack: [V10, 0x88, S1, {0x0, 0x88}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x88, S1, {0x0, 0x88}]

================================

Block 0x22f
[0x22f:0x23d]
---
Predecessors: [0xa8]
Successors: [0xb0]
---
0x22f JUMPDEST
0x230 PUSH1 0x1
0x232 SLOAD
0x233 PUSH1 0x1
0x235 PUSH1 0xa0
0x237 PUSH1 0x2
0x239 EXP
0x23a SUB
0x23b AND
0x23c DUP2
0x23d JUMP
---
0x22f: JUMPDEST 
0x230: V191 = 0x1
0x232: V192 = S[0x1]
0x233: V193 = 0x1
0x235: V194 = 0xa0
0x237: V195 = 0x2
0x239: V196 = EXP 0x2 0xa0
0x23a: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x23b: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x23d: JUMP 0xb0
---
Entry stack: [V10, 0xb0]
Stack pops: 1
Stack additions: [S0, V198]
Exit stack: [V10, 0xb0, V198]

================================

Block 0x23e
[0x23e:0x2a8]
---
Predecessors: [0xcc]
Successors: [0x88]
---
0x23e JUMPDEST
0x23f PUSH1 0x1
0x241 DUP1
0x242 SLOAD
0x243 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x258 NOT
0x259 AND
0x25a CALLER
0x25b PUSH1 0x1
0x25d PUSH1 0xa0
0x25f PUSH1 0x2
0x261 EXP
0x262 SUB
0x263 SWAP1
0x264 DUP2
0x265 AND
0x266 SWAP2
0x267 SWAP1
0x268 SWAP2
0x269 OR
0x26a SWAP2
0x26b DUP3
0x26c SWAP1
0x26d SSTORE
0x26e PUSH1 0x3
0x270 DUP4
0x271 SWAP1
0x272 SSTORE
0x273 AND
0x274 PUSH32 0x25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79
0x295 DUP3
0x296 PUSH1 0x40
0x298 MLOAD
0x299 SWAP1
0x29a DUP2
0x29b MSTORE
0x29c PUSH1 0x20
0x29e ADD
0x29f PUSH1 0x40
0x2a1 MLOAD
0x2a2 DUP1
0x2a3 SWAP2
0x2a4 SUB
0x2a5 SWAP1
0x2a6 LOG2
0x2a7 POP
0x2a8 JUMP
---
0x23e: JUMPDEST 
0x23f: V199 = 0x1
0x242: V200 = S[0x1]
0x243: V201 = 0xffffffffffffffffffffffffffffffffffffffff
0x258: V202 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x259: V203 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V200
0x25a: V204 = CALLER
0x25b: V205 = 0x1
0x25d: V206 = 0xa0
0x25f: V207 = 0x2
0x261: V208 = EXP 0x2 0xa0
0x262: V209 = SUB 0x10000000000000000000000000000000000000000 0x1
0x265: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x269: V211 = OR V210 V203
0x26d: S[0x1] = V211
0x26e: V212 = 0x3
0x272: S[0x3] = V61
0x273: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V211
0x274: V214 = 0x25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79
0x296: V215 = 0x40
0x298: V216 = M[0x40]
0x29b: M[V216] = V61
0x29c: V217 = 0x20
0x29e: V218 = ADD 0x20 V216
0x29f: V219 = 0x40
0x2a1: V220 = M[0x40]
0x2a4: V221 = SUB V218 V220
0x2a6: LOG V220 V221 0x25ff68dd81b34665b5ba7e553ee5511bf6812e12adb4a7e2c0d9e26b3099ce79 V213
0x2a8: JUMP 0x88
---
Entry stack: [V10, 0x88, V61]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a9
[0x2a9:0x2ae]
---
Predecessors: [0xe2]
Successors: [0xea]
---
0x2a9 JUMPDEST
0x2aa PUSH1 0x3
0x2ac SLOAD
0x2ad DUP2
0x2ae JUMP
---
0x2a9: JUMPDEST 
0x2aa: V222 = 0x3
0x2ac: V223 = S[0x3]
0x2ae: JUMP 0xea
---
Entry stack: [V10, 0xea]
Stack pops: 1
Stack additions: [S0, V223]
Exit stack: [V10, 0xea, V223]

================================

Block 0x2af
[0x2af:0x2c0]
---
Predecessors: [0x107]
Successors: [0xea]
---
0x2af JUMPDEST
0x2b0 PUSH1 0x2
0x2b2 PUSH1 0x20
0x2b4 MSTORE
0x2b5 PUSH1 0x0
0x2b7 SWAP1
0x2b8 DUP2
0x2b9 MSTORE
0x2ba PUSH1 0x40
0x2bc SWAP1
0x2bd SHA3
0x2be SLOAD
0x2bf DUP2
0x2c0 JUMP
---
0x2af: JUMPDEST 
0x2b0: V224 = 0x2
0x2b2: V225 = 0x20
0x2b4: M[0x20] = 0x2
0x2b5: V226 = 0x0
0x2b9: M[0x0] = V88
0x2ba: V227 = 0x40
0x2bd: V228 = SHA3 0x0 0x40
0x2be: V229 = S[V228]
0x2c0: JUMP 0xea
---
Entry stack: [V10, 0xea, V88]
Stack pops: 2
Stack additions: [S1, V229]
Exit stack: [V10, 0xea, V229]

================================

Block 0x2c1
[0x2c1:0x2d5]
---
Predecessors: [0x181, 0x202]
Successors: [0x18b, 0x20a]
---
0x2c1 JUMPDEST
0x2c2 PUSH1 0x0
0x2c4 SLOAD
0x2c5 CALLER
0x2c6 PUSH1 0x1
0x2c8 PUSH1 0xa0
0x2ca PUSH1 0x2
0x2cc EXP
0x2cd SUB
0x2ce SWAP1
0x2cf DUP2
0x2d0 AND
0x2d1 SWAP2
0x2d2 AND
0x2d3 EQ
0x2d4 SWAP1
0x2d5 JUMP
---
0x2c1: JUMPDEST 
0x2c2: V230 = 0x0
0x2c4: V231 = S[0x0]
0x2c5: V232 = CALLER
0x2c6: V233 = 0x1
0x2c8: V234 = 0xa0
0x2ca: V235 = 0x2
0x2cc: V236 = EXP 0x2 0xa0
0x2cd: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d0: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x2d2: V239 = AND V231 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V240 = EQ V239 V238
0x2d5: JUMP {0x18b, 0x20a}
---
Entry stack: [V10, 0x88, S2, {0x0, 0x88}, {0x18b, 0x20a}]
Stack pops: 1
Stack additions: [V240]
Exit stack: [V10, 0x88, S2, {0x0, 0x88}, V240]

================================

Block 0x2d6
[0x2d6:0x301]
---
Predecessors: []
Successors: []
---
0x2d6 STOP
0x2d7 LOG1
0x2d8 PUSH6 0x627a7a723058
0x2df SHA3
0x2e0 MISSING 0x2e
0x2e1 MISSING 0x2f
0x2e2 MISSING 0xed
0x2e3 MISSING 0xc4
0x2e4 PUSH27 0x2c40cfe2d2f9c744749fb55d0553e43a975150d2b62d8acb25225e
0x300 STOP
0x301 MISSING 0x29
---
0x2d6: STOP 
0x2d7: LOG S0 S1 S2
0x2d8: V241 = 0x627a7a723058
0x2df: V242 = SHA3 0x627a7a723058 S3
0x2e0: MISSING 0x2e
0x2e1: MISSING 0x2f
0x2e2: MISSING 0xed
0x2e3: MISSING 0xc4
0x2e4: V243 = 0x2c40cfe2d2f9c744749fb55d0553e43a975150d2b62d8acb25225e
0x300: STOP 
0x301: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V242, 0x2c40cfe2d2f9c744749fb55d0553e43a975150d2b62d8acb25225e]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x8a
Exit block: 0x1fa
Body: 0x88, 0x8a, 0x181, 0x18b, 0x192, 0x199, 0x19f, 0x1c3, 0x1c8, 0x1ce, 0x1fa, 0x1fe

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x95
Exit block: 0x88
Body: 0x88, 0x95, 0x17f, 0x202, 0x20a, 0x211, 0x21e, 0x224

Function 2:
Public function signature: 0xb4a99a4e
Entry block: 0x9d
Exit block: 0xb0
Body: 0x9d, 0xa4, 0xa8, 0xb0, 0x22f

Function 3:
Public function signature: 0xb7b0422d
Entry block: 0xcc
Exit block: 0x88
Body: 0x88, 0xcc, 0x23e

Function 4:
Public function signature: 0xd0e30db0
Entry block: 0x80
Exit block: 0x88
Body: 0x80, 0x88, 0x11b, 0x12b, 0x17f

Function 5:
Public function signature: 0xec8cb281
Entry block: 0xd7
Exit block: 0xea
Body: 0xd7, 0xde, 0xe2, 0xea, 0x2a9

Function 6:
Public function signature: 0xfc7e286d
Entry block: 0xfc
Exit block: 0xea
Body: 0xea, 0xfc, 0x103, 0x107, 0x2af

Function 7:
Public fallback function
Entry block: 0x80
Exit block: 0x88
Body: 0x80, 0x88, 0x11b, 0x12b, 0x17f

