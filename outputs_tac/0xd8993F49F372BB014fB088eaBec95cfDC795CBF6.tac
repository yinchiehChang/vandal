Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xa6fbb05
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xa6fbb05
0x3c: V13 = EQ 0xa6fbb05 V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x8b]
---
0x41 DUP1
0x42 PUSH4 0x181ffc5f
0x47 EQ
0x48 PUSH2 0x8b
0x4b JUMPI
---
0x42: V15 = 0x181ffc5f
0x47: V16 = EQ 0x181ffc5f V11
0x48: V17 = 0x8b
0x4b: JUMPI 0x8b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xe8]
---
0x4c DUP1
0x4d PUSH4 0x31fd725a
0x52 EQ
0x53 PUSH2 0xe8
0x56 JUMPI
---
0x4d: V18 = 0x31fd725a
0x52: V19 = EQ 0x31fd725a V11
0x53: V20 = 0xe8
0x56: JUMPI 0xe8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x10f]
---
0x57 DUP1
0x58 PUSH4 0x87f24484
0x5d EQ
0x5e PUSH2 0x10f
0x61 JUMPI
---
0x58: V21 = 0x87f24484
0x5d: V22 = EQ 0x87f24484 V11
0x5e: V23 = 0x10f
0x61: JUMPI 0x10f V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x140]
---
0x62 DUP1
0x63 PUSH4 0xb456ecc5
0x68 EQ
0x69 PUSH2 0x140
0x6c JUMPI
---
0x63: V24 = 0xb456ecc5
0x68: V25 = EQ 0xb456ecc5 V11
0x69: V26 = 0x140
0x6c: JUMPI 0x140 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x88]
---
Predecessors: [0xd]
Successors: [0x1b9]
---
0x6f JUMPDEST
0x70 PUSH2 0x89
0x73 PUSH1 0x4
0x75 DUP1
0x76 DUP1
0x77 CALLDATALOAD
0x78 PUSH1 0x0
0x7a NOT
0x7b AND
0x7c SWAP1
0x7d PUSH1 0x20
0x7f ADD
0x80 SWAP1
0x81 SWAP2
0x82 SWAP1
0x83 POP
0x84 POP
0x85 PUSH2 0x1b9
0x88 JUMP
---
0x6f: JUMPDEST 
0x70: V27 = 0x89
0x73: V28 = 0x4
0x77: V29 = CALLDATALOAD 0x4
0x78: V30 = 0x0
0x7a: V31 = NOT 0x0
0x7b: V32 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V29
0x7d: V33 = 0x20
0x7f: V34 = ADD 0x20 0x4
0x85: V35 = 0x1b9
0x88: JUMP 0x1b9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x89, V32]
Exit stack: [V11, 0x89, V32]

================================

Block 0x89
[0x89:0x8a]
---
Predecessors: [0x1ee]
Successors: []
---
0x89 JUMPDEST
0x8a STOP
---
0x89: JUMPDEST 
0x8a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8b
[0x8b:0x91]
---
Predecessors: [0x41]
Successors: [0x92, 0x96]
---
0x8b JUMPDEST
0x8c CALLVALUE
0x8d ISZERO
0x8e PUSH2 0x96
0x91 JUMPI
---
0x8b: JUMPDEST 
0x8c: V36 = CALLVALUE
0x8d: V37 = ISZERO V36
0x8e: V38 = 0x96
0x91: JUMPI 0x96 V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x92
[0x92:0x95]
---
Predecessors: [0x8b]
Successors: []
---
0x92 PUSH1 0x0
0x94 DUP1
0x95 REVERT
---
0x92: V39 = 0x0
0x95: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x96
[0x96:0xe5]
---
Predecessors: [0x8b]
Successors: [0x1f1]
---
0x96 JUMPDEST
0x97 PUSH2 0xe6
0x9a PUSH1 0x4
0x9c DUP1
0x9d DUP1
0x9e CALLDATALOAD
0x9f SWAP1
0xa0 PUSH1 0x20
0xa2 ADD
0xa3 SWAP1
0xa4 DUP3
0xa5 ADD
0xa6 DUP1
0xa7 CALLDATALOAD
0xa8 SWAP1
0xa9 PUSH1 0x20
0xab ADD
0xac SWAP1
0xad DUP1
0xae DUP1
0xaf PUSH1 0x1f
0xb1 ADD
0xb2 PUSH1 0x20
0xb4 DUP1
0xb5 SWAP2
0xb6 DIV
0xb7 MUL
0xb8 PUSH1 0x20
0xba ADD
0xbb PUSH1 0x40
0xbd MLOAD
0xbe SWAP1
0xbf DUP2
0xc0 ADD
0xc1 PUSH1 0x40
0xc3 MSTORE
0xc4 DUP1
0xc5 SWAP4
0xc6 SWAP3
0xc7 SWAP2
0xc8 SWAP1
0xc9 DUP2
0xca DUP2
0xcb MSTORE
0xcc PUSH1 0x20
0xce ADD
0xcf DUP4
0xd0 DUP4
0xd1 DUP1
0xd2 DUP3
0xd3 DUP5
0xd4 CALLDATACOPY
0xd5 DUP3
0xd6 ADD
0xd7 SWAP2
0xd8 POP
0xd9 POP
0xda POP
0xdb POP
0xdc POP
0xdd POP
0xde SWAP2
0xdf SWAP1
0xe0 POP
0xe1 POP
0xe2 PUSH2 0x1f1
0xe5 JUMP
---
0x96: JUMPDEST 
0x97: V40 = 0xe6
0x9a: V41 = 0x4
0x9e: V42 = CALLDATALOAD 0x4
0xa0: V43 = 0x20
0xa2: V44 = ADD 0x20 0x4
0xa5: V45 = ADD 0x4 V42
0xa7: V46 = CALLDATALOAD V45
0xa9: V47 = 0x20
0xab: V48 = ADD 0x20 V45
0xaf: V49 = 0x1f
0xb1: V50 = ADD 0x1f V46
0xb2: V51 = 0x20
0xb6: V52 = DIV V50 0x20
0xb7: V53 = MUL V52 0x20
0xb8: V54 = 0x20
0xba: V55 = ADD 0x20 V53
0xbb: V56 = 0x40
0xbd: V57 = M[0x40]
0xc0: V58 = ADD V57 V55
0xc1: V59 = 0x40
0xc3: M[0x40] = V58
0xcb: M[V57] = V46
0xcc: V60 = 0x20
0xce: V61 = ADD 0x20 V57
0xd4: CALLDATACOPY V61 V48 V46
0xd6: V62 = ADD V61 V46
0xe2: V63 = 0x1f1
0xe5: JUMP 0x1f1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe6, V57]
Exit stack: [V11, 0xe6, V57]

================================

Block 0xe6
[0xe6:0xe7]
---
Predecessors: [0x2bd]
Successors: []
---
0xe6 JUMPDEST
0xe7 STOP
---
0xe6: JUMPDEST 
0xe7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe8
[0xe8:0xee]
---
Predecessors: [0x4c]
Successors: [0xef, 0xf3]
---
0xe8 JUMPDEST
0xe9 CALLVALUE
0xea ISZERO
0xeb PUSH2 0xf3
0xee JUMPI
---
0xe8: JUMPDEST 
0xe9: V64 = CALLVALUE
0xea: V65 = ISZERO V64
0xeb: V66 = 0xf3
0xee: JUMPI 0xf3 V65
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xef
[0xef:0xf2]
---
Predecessors: [0xe8]
Successors: []
---
0xef PUSH1 0x0
0xf1 DUP1
0xf2 REVERT
---
0xef: V67 = 0x0
0xf2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf3
[0xf3:0x10c]
---
Predecessors: [0xe8]
Successors: [0x2c0]
---
0xf3 JUMPDEST
0xf4 PUSH2 0x10d
0xf7 PUSH1 0x4
0xf9 DUP1
0xfa DUP1
0xfb CALLDATALOAD
0xfc PUSH1 0x0
0xfe NOT
0xff AND
0x100 SWAP1
0x101 PUSH1 0x20
0x103 ADD
0x104 SWAP1
0x105 SWAP2
0x106 SWAP1
0x107 POP
0x108 POP
0x109 PUSH2 0x2c0
0x10c JUMP
---
0xf3: JUMPDEST 
0xf4: V68 = 0x10d
0xf7: V69 = 0x4
0xfb: V70 = CALLDATALOAD 0x4
0xfc: V71 = 0x0
0xfe: V72 = NOT 0x0
0xff: V73 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V70
0x101: V74 = 0x20
0x103: V75 = ADD 0x20 0x4
0x109: V76 = 0x2c0
0x10c: JUMP 0x2c0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x10d, V73]
Exit stack: [V11, 0x10d, V73]

================================

Block 0x10d
[0x10d:0x10e]
---
Predecessors: [0x2ed]
Successors: []
---
0x10d JUMPDEST
0x10e STOP
---
0x10d: JUMPDEST 
0x10e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10f
[0x10f:0x115]
---
Predecessors: [0x57]
Successors: [0x116, 0x11a]
---
0x10f JUMPDEST
0x110 CALLVALUE
0x111 ISZERO
0x112 PUSH2 0x11a
0x115 JUMPI
---
0x10f: JUMPDEST 
0x110: V77 = CALLVALUE
0x111: V78 = ISZERO V77
0x112: V79 = 0x11a
0x115: JUMPI 0x11a V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x116
[0x116:0x119]
---
Predecessors: [0x10f]
Successors: []
---
0x116 PUSH1 0x0
0x118 DUP1
0x119 REVERT
---
0x116: V80 = 0x0
0x119: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11a
[0x11a:0x121]
---
Predecessors: [0x10f]
Successors: [0x2f0]
---
0x11a JUMPDEST
0x11b PUSH2 0x122
0x11e PUSH2 0x2f0
0x121 JUMP
---
0x11a: JUMPDEST 
0x11b: V81 = 0x122
0x11e: V82 = 0x2f0
0x121: JUMP 0x2f0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x122]
Exit stack: [V11, 0x122]

================================

Block 0x122
[0x122:0x13f]
---
Predecessors: [0x2f0]
Successors: []
---
0x122 JUMPDEST
0x123 PUSH1 0x40
0x125 MLOAD
0x126 DUP1
0x127 DUP3
0x128 PUSH1 0x0
0x12a NOT
0x12b AND
0x12c PUSH1 0x0
0x12e NOT
0x12f AND
0x130 DUP2
0x131 MSTORE
0x132 PUSH1 0x20
0x134 ADD
0x135 SWAP2
0x136 POP
0x137 POP
0x138 PUSH1 0x40
0x13a MLOAD
0x13b DUP1
0x13c SWAP2
0x13d SUB
0x13e SWAP1
0x13f RETURN
---
0x122: JUMPDEST 
0x123: V83 = 0x40
0x125: V84 = M[0x40]
0x128: V85 = 0x0
0x12a: V86 = NOT 0x0
0x12b: V87 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V249
0x12c: V88 = 0x0
0x12e: V89 = NOT 0x0
0x12f: V90 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V87
0x131: M[V84] = V90
0x132: V91 = 0x20
0x134: V92 = ADD 0x20 V84
0x138: V93 = 0x40
0x13a: V94 = M[0x40]
0x13d: V95 = SUB V92 V94
0x13f: RETURN V94 V95
---
Entry stack: [V11, 0x122, V249]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x122]

================================

Block 0x140
[0x140:0x146]
---
Predecessors: [0x62]
Successors: [0x147, 0x14b]
---
0x140 JUMPDEST
0x141 CALLVALUE
0x142 ISZERO
0x143 PUSH2 0x14b
0x146 JUMPI
---
0x140: JUMPDEST 
0x141: V96 = CALLVALUE
0x142: V97 = ISZERO V96
0x143: V98 = 0x14b
0x146: JUMPI 0x14b V97
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x147
[0x147:0x14a]
---
Predecessors: [0x140]
Successors: []
---
0x147 PUSH1 0x0
0x149 DUP1
0x14a REVERT
---
0x147: V99 = 0x0
0x14a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14b
[0x14b:0x19a]
---
Predecessors: [0x140]
Successors: [0x2f6]
---
0x14b JUMPDEST
0x14c PUSH2 0x19b
0x14f PUSH1 0x4
0x151 DUP1
0x152 DUP1
0x153 CALLDATALOAD
0x154 SWAP1
0x155 PUSH1 0x20
0x157 ADD
0x158 SWAP1
0x159 DUP3
0x15a ADD
0x15b DUP1
0x15c CALLDATALOAD
0x15d SWAP1
0x15e PUSH1 0x20
0x160 ADD
0x161 SWAP1
0x162 DUP1
0x163 DUP1
0x164 PUSH1 0x1f
0x166 ADD
0x167 PUSH1 0x20
0x169 DUP1
0x16a SWAP2
0x16b DIV
0x16c MUL
0x16d PUSH1 0x20
0x16f ADD
0x170 PUSH1 0x40
0x172 MLOAD
0x173 SWAP1
0x174 DUP2
0x175 ADD
0x176 PUSH1 0x40
0x178 MSTORE
0x179 DUP1
0x17a SWAP4
0x17b SWAP3
0x17c SWAP2
0x17d SWAP1
0x17e DUP2
0x17f DUP2
0x180 MSTORE
0x181 PUSH1 0x20
0x183 ADD
0x184 DUP4
0x185 DUP4
0x186 DUP1
0x187 DUP3
0x188 DUP5
0x189 CALLDATACOPY
0x18a DUP3
0x18b ADD
0x18c SWAP2
0x18d POP
0x18e POP
0x18f POP
0x190 POP
0x191 POP
0x192 POP
0x193 SWAP2
0x194 SWAP1
0x195 POP
0x196 POP
0x197 PUSH2 0x2f6
0x19a JUMP
---
0x14b: JUMPDEST 
0x14c: V100 = 0x19b
0x14f: V101 = 0x4
0x153: V102 = CALLDATALOAD 0x4
0x155: V103 = 0x20
0x157: V104 = ADD 0x20 0x4
0x15a: V105 = ADD 0x4 V102
0x15c: V106 = CALLDATALOAD V105
0x15e: V107 = 0x20
0x160: V108 = ADD 0x20 V105
0x164: V109 = 0x1f
0x166: V110 = ADD 0x1f V106
0x167: V111 = 0x20
0x16b: V112 = DIV V110 0x20
0x16c: V113 = MUL V112 0x20
0x16d: V114 = 0x20
0x16f: V115 = ADD 0x20 V113
0x170: V116 = 0x40
0x172: V117 = M[0x40]
0x175: V118 = ADD V117 V115
0x176: V119 = 0x40
0x178: M[0x40] = V118
0x180: M[V117] = V106
0x181: V120 = 0x20
0x183: V121 = ADD 0x20 V117
0x189: CALLDATACOPY V121 V108 V106
0x18b: V122 = ADD V121 V106
0x197: V123 = 0x2f6
0x19a: JUMP 0x2f6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x19b, V117]
Exit stack: [V11, 0x19b, V117]

================================

Block 0x19b
[0x19b:0x1b8]
---
Predecessors: [0x32e]
Successors: []
---
0x19b JUMPDEST
0x19c PUSH1 0x40
0x19e MLOAD
0x19f DUP1
0x1a0 DUP3
0x1a1 PUSH1 0x0
0x1a3 NOT
0x1a4 AND
0x1a5 PUSH1 0x0
0x1a7 NOT
0x1a8 AND
0x1a9 DUP2
0x1aa MSTORE
0x1ab PUSH1 0x20
0x1ad ADD
0x1ae SWAP2
0x1af POP
0x1b0 POP
0x1b1 PUSH1 0x40
0x1b3 MLOAD
0x1b4 DUP1
0x1b5 SWAP2
0x1b6 SUB
0x1b7 SWAP1
0x1b8 RETURN
---
0x19b: JUMPDEST 
0x19c: V124 = 0x40
0x19e: V125 = M[0x40]
0x1a1: V126 = 0x0
0x1a3: V127 = NOT 0x0
0x1a4: V128 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V285
0x1a5: V129 = 0x0
0x1a7: V130 = NOT 0x0
0x1a8: V131 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V128
0x1aa: M[V125] = V131
0x1ab: V132 = 0x20
0x1ad: V133 = ADD 0x20 V125
0x1b1: V134 = 0x40
0x1b3: V135 = M[0x40]
0x1b6: V136 = SUB V133 V135
0x1b8: RETURN V135 V136
---
Entry stack: [V11, V285]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b9
[0x1b9:0x1cf]
---
Predecessors: [0x6f]
Successors: [0x1d0, 0x1dd]
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x0
0x1bc DUP1
0x1bd SWAP1
0x1be SLOAD
0x1bf SWAP1
0x1c0 PUSH2 0x100
0x1c3 EXP
0x1c4 SWAP1
0x1c5 DIV
0x1c6 PUSH1 0xff
0x1c8 AND
0x1c9 ISZERO
0x1ca DUP1
0x1cb ISZERO
0x1cc PUSH2 0x1dd
0x1cf JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V137 = 0x0
0x1be: V138 = S[0x0]
0x1c0: V139 = 0x100
0x1c3: V140 = EXP 0x100 0x0
0x1c5: V141 = DIV V138 0x1
0x1c6: V142 = 0xff
0x1c8: V143 = AND 0xff V141
0x1c9: V144 = ISZERO V143
0x1cb: V145 = ISZERO V144
0x1cc: V146 = 0x1dd
0x1cf: JUMPI 0x1dd V145
---
Entry stack: [V11, 0x89, V32]
Stack pops: 0
Stack additions: [V144]
Exit stack: [V11, 0x89, V32, V144]

================================

Block 0x1d0
[0x1d0:0x1dc]
---
Predecessors: [0x1b9]
Successors: [0x1dd]
---
0x1d0 POP
0x1d1 PUSH8 0xde0b6b3a7640000
0x1da CALLVALUE
0x1db LT
0x1dc ISZERO
---
0x1d1: V147 = 0xde0b6b3a7640000
0x1da: V148 = CALLVALUE
0x1db: V149 = LT V148 0xde0b6b3a7640000
0x1dc: V150 = ISZERO V149
---
Entry stack: [V11, 0x89, V32, V144]
Stack pops: 1
Stack additions: [V150]
Exit stack: [V11, 0x89, V32, V150]

================================

Block 0x1dd
[0x1dd:0x1e2]
---
Predecessors: [0x1b9, 0x1d0]
Successors: [0x1e3, 0x1ee]
---
0x1dd JUMPDEST
0x1de ISZERO
0x1df PUSH2 0x1ee
0x1e2 JUMPI
---
0x1dd: JUMPDEST 
0x1de: V151 = ISZERO S0
0x1df: V152 = 0x1ee
0x1e2: JUMPI 0x1ee V151
---
Entry stack: [V11, 0x89, V32, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x89, V32]

================================

Block 0x1e3
[0x1e3:0x1ed]
---
Predecessors: [0x1dd]
Successors: [0x1ee]
---
0x1e3 DUP1
0x1e4 PUSH1 0x1
0x1e6 DUP2
0x1e7 PUSH1 0x0
0x1e9 NOT
0x1ea AND
0x1eb SWAP1
0x1ec SSTORE
0x1ed POP
---
0x1e4: V153 = 0x1
0x1e7: V154 = 0x0
0x1e9: V155 = NOT 0x0
0x1ea: V156 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V32
0x1ec: S[0x1] = V156
---
Entry stack: [V11, 0x89, V32]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x89, V32]

================================

Block 0x1ee
[0x1ee:0x1f0]
---
Predecessors: [0x1dd, 0x1e3]
Successors: [0x89]
---
0x1ee JUMPDEST
0x1ef POP
0x1f0 JUMP
---
0x1ee: JUMPDEST 
0x1f0: JUMP 0x89
---
Entry stack: [V11, 0x89, V32]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1f1
[0x1f1:0x201]
---
Predecessors: [0x96]
Successors: [0x202]
---
0x1f1 JUMPDEST
0x1f2 DUP1
0x1f3 PUSH1 0x40
0x1f5 MLOAD
0x1f6 DUP1
0x1f7 DUP3
0x1f8 DUP1
0x1f9 MLOAD
0x1fa SWAP1
0x1fb PUSH1 0x20
0x1fd ADD
0x1fe SWAP1
0x1ff DUP1
0x200 DUP4
0x201 DUP4
---
0x1f1: JUMPDEST 
0x1f3: V157 = 0x40
0x1f5: V158 = M[0x40]
0x1f9: V159 = M[V57]
0x1fb: V160 = 0x20
0x1fd: V161 = ADD 0x20 V57
---
Entry stack: [V11, 0xe6, V57]
Stack pops: 1
Stack additions: [S0, S0, V158, V158, V161, V159, V159, V158, V161]
Exit stack: [V11, 0xe6, V57, V57, V158, V158, V161, V159, V159, V158, V161]

================================

Block 0x202
[0x202:0x20c]
---
Predecessors: [0x1f1, 0x20d]
Successors: [0x20d, 0x227]
---
0x202 JUMPDEST
0x203 PUSH1 0x20
0x205 DUP4
0x206 LT
0x207 ISZERO
0x208 ISZERO
0x209 PUSH2 0x227
0x20c JUMPI
---
0x202: JUMPDEST 
0x203: V162 = 0x20
0x206: V163 = LT S2 0x20
0x207: V164 = ISZERO V163
0x208: V165 = ISZERO V164
0x209: V166 = 0x227
0x20c: JUMPI 0x227 V165
---
Entry stack: [V11, 0xe6, V57, V57, V158, V158, V161, V159, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xe6, V57, V57, V158, V158, V161, V159, S2, S1, S0]

================================

Block 0x20d
[0x20d:0x226]
---
Predecessors: [0x202]
Successors: [0x202]
---
0x20d DUP1
0x20e MLOAD
0x20f DUP3
0x210 MSTORE
0x211 PUSH1 0x20
0x213 DUP3
0x214 ADD
0x215 SWAP2
0x216 POP
0x217 PUSH1 0x20
0x219 DUP2
0x21a ADD
0x21b SWAP1
0x21c POP
0x21d PUSH1 0x20
0x21f DUP4
0x220 SUB
0x221 SWAP3
0x222 POP
0x223 PUSH2 0x202
0x226 JUMP
---
0x20e: V167 = M[S0]
0x210: M[S1] = V167
0x211: V168 = 0x20
0x214: V169 = ADD S1 0x20
0x217: V170 = 0x20
0x21a: V171 = ADD S0 0x20
0x21d: V172 = 0x20
0x220: V173 = SUB S2 0x20
0x223: V174 = 0x202
0x226: JUMP 0x202
---
Entry stack: [V11, 0xe6, V57, V57, V158, V158, V161, V159, S2, S1, S0]
Stack pops: 3
Stack additions: [V173, V169, V171]
Exit stack: [V11, 0xe6, V57, V57, V158, V158, V161, V159, V173, V169, V171]

================================

Block 0x227
[0x227:0x265]
---
Predecessors: [0x202]
Successors: [0x266, 0x2bd]
---
0x227 JUMPDEST
0x228 PUSH1 0x1
0x22a DUP4
0x22b PUSH1 0x20
0x22d SUB
0x22e PUSH2 0x100
0x231 EXP
0x232 SUB
0x233 DUP1
0x234 NOT
0x235 DUP3
0x236 MLOAD
0x237 AND
0x238 DUP2
0x239 DUP5
0x23a MLOAD
0x23b AND
0x23c DUP1
0x23d DUP3
0x23e OR
0x23f DUP6
0x240 MSTORE
0x241 POP
0x242 POP
0x243 POP
0x244 POP
0x245 POP
0x246 POP
0x247 SWAP1
0x248 POP
0x249 ADD
0x24a SWAP2
0x24b POP
0x24c POP
0x24d PUSH1 0x40
0x24f MLOAD
0x250 DUP1
0x251 SWAP2
0x252 SUB
0x253 SWAP1
0x254 SHA3
0x255 PUSH1 0x0
0x257 NOT
0x258 AND
0x259 PUSH1 0x1
0x25b SLOAD
0x25c PUSH1 0x0
0x25e NOT
0x25f AND
0x260 EQ
0x261 ISZERO
0x262 PUSH2 0x2bd
0x265 JUMPI
---
0x227: JUMPDEST 
0x228: V175 = 0x1
0x22b: V176 = 0x20
0x22d: V177 = SUB 0x20 S2
0x22e: V178 = 0x100
0x231: V179 = EXP 0x100 V177
0x232: V180 = SUB V179 0x1
0x234: V181 = NOT V180
0x236: V182 = M[S0]
0x237: V183 = AND V182 V181
0x23a: V184 = M[S1]
0x23b: V185 = AND V184 V180
0x23e: V186 = OR V183 V185
0x240: M[S1] = V186
0x249: V187 = ADD V159 V158
0x24d: V188 = 0x40
0x24f: V189 = M[0x40]
0x252: V190 = SUB V187 V189
0x254: V191 = SHA3 V189 V190
0x255: V192 = 0x0
0x257: V193 = NOT 0x0
0x258: V194 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V191
0x259: V195 = 0x1
0x25b: V196 = S[0x1]
0x25c: V197 = 0x0
0x25e: V198 = NOT 0x0
0x25f: V199 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V196
0x260: V200 = EQ V199 V194
0x261: V201 = ISZERO V200
0x262: V202 = 0x2bd
0x265: JUMPI 0x2bd V201
---
Entry stack: [V11, 0xe6, V57, V57, V158, V158, V161, V159, S2, S1, S0]
Stack pops: 8
Stack additions: []
Exit stack: [V11, 0xe6, V57]

================================

Block 0x266
[0x266:0x2b7]
---
Predecessors: [0x227]
Successors: [0x2b8, 0x2bc]
---
0x266 CALLER
0x267 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27c AND
0x27d PUSH2 0x8fc
0x280 ADDRESS
0x281 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x296 AND
0x297 BALANCE
0x298 SWAP1
0x299 DUP2
0x29a ISZERO
0x29b MUL
0x29c SWAP1
0x29d PUSH1 0x40
0x29f MLOAD
0x2a0 PUSH1 0x0
0x2a2 PUSH1 0x40
0x2a4 MLOAD
0x2a5 DUP1
0x2a6 DUP4
0x2a7 SUB
0x2a8 DUP2
0x2a9 DUP6
0x2aa DUP9
0x2ab DUP9
0x2ac CALL
0x2ad SWAP4
0x2ae POP
0x2af POP
0x2b0 POP
0x2b1 POP
0x2b2 ISZERO
0x2b3 ISZERO
0x2b4 PUSH2 0x2bc
0x2b7 JUMPI
---
0x266: V203 = CALLER
0x267: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x27c: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x27d: V206 = 0x8fc
0x280: V207 = ADDRESS
0x281: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x296: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x297: V210 = BALANCE V209
0x29a: V211 = ISZERO V210
0x29b: V212 = MUL V211 0x8fc
0x29d: V213 = 0x40
0x29f: V214 = M[0x40]
0x2a0: V215 = 0x0
0x2a2: V216 = 0x40
0x2a4: V217 = M[0x40]
0x2a7: V218 = SUB V214 V217
0x2ac: V219 = CALL V212 V205 V210 V217 V218 V217 0x0
0x2b2: V220 = ISZERO V219
0x2b3: V221 = ISZERO V220
0x2b4: V222 = 0x2bc
0x2b7: JUMPI 0x2bc V221
---
Entry stack: [V11, 0xe6, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe6, V57]

================================

Block 0x2b8
[0x2b8:0x2bb]
---
Predecessors: [0x266]
Successors: []
---
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb REVERT
---
0x2b8: V223 = 0x0
0x2bb: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe6, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe6, V57]

================================

Block 0x2bc
[0x2bc:0x2bc]
---
Predecessors: [0x266]
Successors: [0x2bd]
---
0x2bc JUMPDEST
---
0x2bc: JUMPDEST 
---
Entry stack: [V11, 0xe6, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe6, V57]

================================

Block 0x2bd
[0x2bd:0x2bf]
---
Predecessors: [0x227, 0x2bc]
Successors: [0xe6]
---
0x2bd JUMPDEST
0x2be POP
0x2bf JUMP
---
0x2bd: JUMPDEST 
0x2bf: JUMP 0xe6
---
Entry stack: [V11, 0xe6, V57]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c0
[0x2c0:0x2d2]
---
Predecessors: [0xf3]
Successors: [0x2d3, 0x2ed]
---
0x2c0 JUMPDEST
0x2c1 PUSH1 0x1
0x2c3 SLOAD
0x2c4 PUSH1 0x0
0x2c6 NOT
0x2c7 AND
0x2c8 DUP2
0x2c9 PUSH1 0x0
0x2cb NOT
0x2cc AND
0x2cd EQ
0x2ce ISZERO
0x2cf PUSH2 0x2ed
0x2d2 JUMPI
---
0x2c0: JUMPDEST 
0x2c1: V224 = 0x1
0x2c3: V225 = S[0x1]
0x2c4: V226 = 0x0
0x2c6: V227 = NOT 0x0
0x2c7: V228 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V225
0x2c9: V229 = 0x0
0x2cb: V230 = NOT 0x0
0x2cc: V231 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V73
0x2cd: V232 = EQ V231 V228
0x2ce: V233 = ISZERO V232
0x2cf: V234 = 0x2ed
0x2d2: JUMPI 0x2ed V233
---
Entry stack: [V11, 0x10d, V73]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x10d, V73]

================================

Block 0x2d3
[0x2d3:0x2ec]
---
Predecessors: [0x2c0]
Successors: [0x2ed]
---
0x2d3 PUSH1 0x1
0x2d5 PUSH1 0x0
0x2d7 DUP1
0x2d8 PUSH2 0x100
0x2db EXP
0x2dc DUP2
0x2dd SLOAD
0x2de DUP2
0x2df PUSH1 0xff
0x2e1 MUL
0x2e2 NOT
0x2e3 AND
0x2e4 SWAP1
0x2e5 DUP4
0x2e6 ISZERO
0x2e7 ISZERO
0x2e8 MUL
0x2e9 OR
0x2ea SWAP1
0x2eb SSTORE
0x2ec POP
---
0x2d3: V235 = 0x1
0x2d5: V236 = 0x0
0x2d8: V237 = 0x100
0x2db: V238 = EXP 0x100 0x0
0x2dd: V239 = S[0x0]
0x2df: V240 = 0xff
0x2e1: V241 = MUL 0xff 0x1
0x2e2: V242 = NOT 0xff
0x2e3: V243 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V239
0x2e6: V244 = ISZERO 0x1
0x2e7: V245 = ISZERO 0x0
0x2e8: V246 = MUL 0x1 0x1
0x2e9: V247 = OR 0x1 V243
0x2eb: S[0x0] = V247
---
Entry stack: [V11, 0x10d, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x10d, V73]

================================

Block 0x2ed
[0x2ed:0x2ef]
---
Predecessors: [0x2c0, 0x2d3]
Successors: [0x10d]
---
0x2ed JUMPDEST
0x2ee POP
0x2ef JUMP
---
0x2ed: JUMPDEST 
0x2ef: JUMP 0x10d
---
Entry stack: [V11, 0x10d, V73]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f0
[0x2f0:0x2f5]
---
Predecessors: [0x11a]
Successors: [0x122]
---
0x2f0 JUMPDEST
0x2f1 PUSH1 0x1
0x2f3 SLOAD
0x2f4 DUP2
0x2f5 JUMP
---
0x2f0: JUMPDEST 
0x2f1: V248 = 0x1
0x2f3: V249 = S[0x1]
0x2f5: JUMP 0x122
---
Entry stack: [V11, 0x122]
Stack pops: 1
Stack additions: [S0, V249]
Exit stack: [V11, 0x122, V249]

================================

Block 0x2f6
[0x2f6:0x308]
---
Predecessors: [0x14b]
Successors: [0x309]
---
0x2f6 JUMPDEST
0x2f7 PUSH1 0x0
0x2f9 DUP2
0x2fa PUSH1 0x40
0x2fc MLOAD
0x2fd DUP1
0x2fe DUP3
0x2ff DUP1
0x300 MLOAD
0x301 SWAP1
0x302 PUSH1 0x20
0x304 ADD
0x305 SWAP1
0x306 DUP1
0x307 DUP4
0x308 DUP4
---
0x2f6: JUMPDEST 
0x2f7: V250 = 0x0
0x2fa: V251 = 0x40
0x2fc: V252 = M[0x40]
0x300: V253 = M[V117]
0x302: V254 = 0x20
0x304: V255 = ADD 0x20 V117
---
Entry stack: [V11, 0x19b, V117]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V252, V252, V255, V253, V253, V252, V255]
Exit stack: [V11, 0x19b, V117, 0x0, V117, V252, V252, V255, V253, V253, V252, V255]

================================

Block 0x309
[0x309:0x313]
---
Predecessors: [0x2f6, 0x314]
Successors: [0x314, 0x32e]
---
0x309 JUMPDEST
0x30a PUSH1 0x20
0x30c DUP4
0x30d LT
0x30e ISZERO
0x30f ISZERO
0x310 PUSH2 0x32e
0x313 JUMPI
---
0x309: JUMPDEST 
0x30a: V256 = 0x20
0x30d: V257 = LT S2 0x20
0x30e: V258 = ISZERO V257
0x30f: V259 = ISZERO V258
0x310: V260 = 0x32e
0x313: JUMPI 0x32e V259
---
Entry stack: [V11, 0x19b, V117, 0x0, V117, V252, V252, V255, V253, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x19b, V117, 0x0, V117, V252, V252, V255, V253, S2, S1, S0]

================================

Block 0x314
[0x314:0x32d]
---
Predecessors: [0x309]
Successors: [0x309]
---
0x314 DUP1
0x315 MLOAD
0x316 DUP3
0x317 MSTORE
0x318 PUSH1 0x20
0x31a DUP3
0x31b ADD
0x31c SWAP2
0x31d POP
0x31e PUSH1 0x20
0x320 DUP2
0x321 ADD
0x322 SWAP1
0x323 POP
0x324 PUSH1 0x20
0x326 DUP4
0x327 SUB
0x328 SWAP3
0x329 POP
0x32a PUSH2 0x309
0x32d JUMP
---
0x315: V261 = M[S0]
0x317: M[S1] = V261
0x318: V262 = 0x20
0x31b: V263 = ADD S1 0x20
0x31e: V264 = 0x20
0x321: V265 = ADD S0 0x20
0x324: V266 = 0x20
0x327: V267 = SUB S2 0x20
0x32a: V268 = 0x309
0x32d: JUMP 0x309
---
Entry stack: [V11, 0x19b, V117, 0x0, V117, V252, V252, V255, V253, S2, S1, S0]
Stack pops: 3
Stack additions: [V267, V263, V265]
Exit stack: [V11, 0x19b, V117, 0x0, V117, V252, V252, V255, V253, V267, V263, V265]

================================

Block 0x32e
[0x32e:0x361]
---
Predecessors: [0x309]
Successors: [0x19b]
---
0x32e JUMPDEST
0x32f PUSH1 0x1
0x331 DUP4
0x332 PUSH1 0x20
0x334 SUB
0x335 PUSH2 0x100
0x338 EXP
0x339 SUB
0x33a DUP1
0x33b NOT
0x33c DUP3
0x33d MLOAD
0x33e AND
0x33f DUP2
0x340 DUP5
0x341 MLOAD
0x342 AND
0x343 DUP1
0x344 DUP3
0x345 OR
0x346 DUP6
0x347 MSTORE
0x348 POP
0x349 POP
0x34a POP
0x34b POP
0x34c POP
0x34d POP
0x34e SWAP1
0x34f POP
0x350 ADD
0x351 SWAP2
0x352 POP
0x353 POP
0x354 PUSH1 0x40
0x356 MLOAD
0x357 DUP1
0x358 SWAP2
0x359 SUB
0x35a SWAP1
0x35b SHA3
0x35c SWAP1
0x35d POP
0x35e SWAP2
0x35f SWAP1
0x360 POP
0x361 JUMP
---
0x32e: JUMPDEST 
0x32f: V269 = 0x1
0x332: V270 = 0x20
0x334: V271 = SUB 0x20 S2
0x335: V272 = 0x100
0x338: V273 = EXP 0x100 V271
0x339: V274 = SUB V273 0x1
0x33b: V275 = NOT V274
0x33d: V276 = M[S0]
0x33e: V277 = AND V276 V275
0x341: V278 = M[S1]
0x342: V279 = AND V278 V274
0x345: V280 = OR V277 V279
0x347: M[S1] = V280
0x350: V281 = ADD V253 V252
0x354: V282 = 0x40
0x356: V283 = M[0x40]
0x359: V284 = SUB V281 V283
0x35b: V285 = SHA3 V283 V284
0x361: JUMP 0x19b
---
Entry stack: [V11, 0x19b, V117, 0x0, V117, V252, V252, V255, V253, S2, S1, S0]
Stack pops: 11
Stack additions: [V285]
Exit stack: [V11, V285]

================================

Block 0x362
[0x362:0x390]
---
Predecessors: []
Successors: []
---
0x362 STOP
0x363 LOG1
0x364 PUSH6 0x627a7a723058
0x36b SHA3
0x36c MSIZE
0x36d MISSING 0xbf
0x36e PUSH20 0x8e33d455f09e5c34bedcca9693fd6a5a0f41eeec
0x383 PUSH13 0x79caf9f41b1284ca0029
---
0x362: STOP 
0x363: LOG S0 S1 S2
0x364: V286 = 0x627a7a723058
0x36b: V287 = SHA3 0x627a7a723058 S3
0x36c: V288 = MSIZE
0x36d: MISSING 0xbf
0x36e: V289 = 0x8e33d455f09e5c34bedcca9693fd6a5a0f41eeec
0x383: V290 = 0x79caf9f41b1284ca0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V288, V287, 0x79caf9f41b1284ca0029, 0x8e33d455f09e5c34bedcca9693fd6a5a0f41eeec]
Exit stack: []

================================

Function 0:
Public function signature: 0xa6fbb05
Entry block: 0x6f
Exit block: 0x89
Body: 0x6f, 0x89, 0x1b9, 0x1d0, 0x1dd, 0x1e3, 0x1ee

Function 1:
Public function signature: 0x181ffc5f
Entry block: 0x8b
Exit block: 0xe6
Body: 0x8b, 0x92, 0x96, 0xe6, 0x1f1, 0x202, 0x20d, 0x227, 0x266, 0x2b8, 0x2bc, 0x2bd

Function 2:
Public function signature: 0x31fd725a
Entry block: 0xe8
Exit block: 0x10d
Body: 0xe8, 0xef, 0xf3, 0x10d, 0x2c0, 0x2d3, 0x2ed

Function 3:
Public function signature: 0x87f24484
Entry block: 0x10f
Exit block: 0x122
Body: 0x10f, 0x116, 0x11a, 0x122, 0x2f0

Function 4:
Public function signature: 0xb456ecc5
Entry block: 0x140
Exit block: 0x19b
Body: 0x140, 0x147, 0x14b, 0x19b, 0x2f6, 0x309, 0x314, 0x32e

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

