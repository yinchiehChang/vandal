Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x11e]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x11e
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x11e
0xc: JUMPI 0x11e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0xd]
---
Predecessors: [0x0]
Successors: []
---
0xd MISSING 0x5f
---
0xd: MISSING 0x5f
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe
[0xe:0x1c]
---
Predecessors: []
Successors: [0x1d, 0x9d]
---
0xe CALLDATALOAD
0xf PUSH1 0xe0
0x11 SHR
0x12 DUP1
0x13 PUSH4 0x751039fc
0x18 GT
0x19 PUSH2 0x9d
0x1c JUMPI
---
0xe: V6 = CALLDATALOAD S0
0xf: V7 = 0xe0
0x11: V8 = SHR 0xe0 V6
0x13: V9 = 0x751039fc
0x18: V10 = GT 0x751039fc V8
0x19: V11 = 0x9d
0x1c: JUMPI 0x9d V10
---
Entry stack: []
Stack pops: 1
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x1d
[0x1d:0x27]
---
Predecessors: [0xe]
Successors: [0x28, 0x62]
---
0x1d DUP1
0x1e PUSH4 0xae39279f
0x23 GT
0x24 PUSH2 0x62
0x27 JUMPI
---
0x1e: V12 = 0xae39279f
0x23: V13 = GT 0xae39279f V8
0x24: V14 = 0x62
0x27: JUMPI 0x62 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x28
[0x28:0x32]
---
Predecessors: [0x1d]
Successors: [0x33, 0x333]
---
0x28 DUP1
0x29 PUSH4 0xae39279f
0x2e EQ
0x2f PUSH2 0x333
0x32 JUMPI
---
0x29: V15 = 0xae39279f
0x2e: V16 = EQ 0xae39279f V8
0x2f: V17 = 0x333
0x32: JUMPI 0x333 V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x33
[0x33:0x3d]
---
Predecessors: [0x28]
Successors: [0x3e, 0x347]
---
0x33 DUP1
0x34 PUSH4 0xcd8de42c
0x39 EQ
0x3a PUSH2 0x347
0x3d JUMPI
---
0x34: V18 = 0xcd8de42c
0x39: V19 = EQ 0xcd8de42c V8
0x3a: V20 = 0x347
0x3d: JUMPI 0x347 V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0x33]
Successors: [0x49, 0x366]
---
0x3e DUP1
0x3f PUSH4 0xdd62ed3e
0x44 EQ
0x45 PUSH2 0x366
0x48 JUMPI
---
0x3f: V21 = 0xdd62ed3e
0x44: V22 = EQ 0xdd62ed3e V8
0x45: V23 = 0x366
0x48: JUMPI 0x366 V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x3aa]
---
0x49 DUP1
0x4a PUSH4 0xed995307
0x4f EQ
0x50 PUSH2 0x3aa
0x53 JUMPI
---
0x4a: V24 = 0xed995307
0x4f: V25 = EQ 0xed995307 V8
0x50: V26 = 0x3aa
0x53: JUMPI 0x3aa V25
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x3b2]
---
0x54 DUP1
0x55 PUSH4 0xf887ea40
0x5a EQ
0x5b PUSH2 0x3b2
0x5e JUMPI
---
0x55: V27 = 0xf887ea40
0x5a: V28 = EQ 0xf887ea40 V8
0x5b: V29 = 0x3b2
0x5e: JUMPI 0x3b2 V28
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5f
[0x5f:0x61]
---
Predecessors: [0x54]
Successors: []
---
0x5f MISSING 0x5f
0x60 DUP1
0x61 REVERT
---
0x5f: MISSING 0x5f
0x61: REVERT S0 S0
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x62
[0x62:0x6d]
---
Predecessors: [0x1d]
Successors: [0x6e, 0x283]
---
0x62 JUMPDEST
0x63 DUP1
0x64 PUSH4 0x751039fc
0x69 EQ
0x6a PUSH2 0x283
0x6d JUMPI
---
0x62: JUMPDEST 
0x64: V30 = 0x751039fc
0x69: V31 = EQ 0x751039fc V8
0x6a: V32 = 0x283
0x6d: JUMPI 0x283 V31
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x6e
[0x6e:0x78]
---
Predecessors: [0x62]
Successors: [0x79, 0x297]
---
0x6e DUP1
0x6f PUSH4 0x8da5cb5b
0x74 EQ
0x75 PUSH2 0x297
0x78 JUMPI
---
0x6f: V33 = 0x8da5cb5b
0x74: V34 = EQ 0x8da5cb5b V8
0x75: V35 = 0x297
0x78: JUMPI 0x297 V34
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x79
[0x79:0x83]
---
Predecessors: [0x6e]
Successors: [0x84, 0x2c7]
---
0x79 DUP1
0x7a PUSH4 0x95d89b41
0x7f EQ
0x80 PUSH2 0x2c7
0x83 JUMPI
---
0x7a: V36 = 0x95d89b41
0x7f: V37 = EQ 0x95d89b41 V8
0x80: V38 = 0x2c7
0x83: JUMPI 0x2c7 V37
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x84
[0x84:0x8e]
---
Predecessors: [0x79]
Successors: [0x8f, 0x2f5]
---
0x84 DUP1
0x85 PUSH4 0xa8aa1b31
0x8a EQ
0x8b PUSH2 0x2f5
0x8e JUMPI
---
0x85: V39 = 0xa8aa1b31
0x8a: V40 = EQ 0xa8aa1b31 V8
0x8b: V41 = 0x2f5
0x8e: JUMPI 0x2f5 V40
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x8f
[0x8f:0x99]
---
Predecessors: [0x84]
Successors: [0x9a, 0x314]
---
0x8f DUP1
0x90 PUSH4 0xa9059cbb
0x95 EQ
0x96 PUSH2 0x314
0x99 JUMPI
---
0x90: V42 = 0xa9059cbb
0x95: V43 = EQ 0xa9059cbb V8
0x96: V44 = 0x314
0x99: JUMPI 0x314 V43
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x9a
[0x9a:0x9c]
---
Predecessors: [0x8f]
Successors: []
---
0x9a MISSING 0x5f
0x9b DUP1
0x9c REVERT
---
0x9a: MISSING 0x5f
0x9c: REVERT S0 S0
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9d
[0x9d:0xa8]
---
Predecessors: [0xe]
Successors: [0xa9, 0xe3]
---
0x9d JUMPDEST
0x9e DUP1
0x9f PUSH4 0x313ce567
0xa4 GT
0xa5 PUSH2 0xe3
0xa8 JUMPI
---
0x9d: JUMPDEST 
0x9f: V45 = 0x313ce567
0xa4: V46 = GT 0x313ce567 V8
0xa5: V47 = 0xe3
0xa8: JUMPI 0xe3 V46
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9d]
Successors: [0xb4, 0x1f0]
---
0xa9 DUP1
0xaa PUSH4 0x313ce567
0xaf EQ
0xb0 PUSH2 0x1f0
0xb3 JUMPI
---
0xaa: V48 = 0x313ce567
0xaf: V49 = EQ 0x313ce567 V8
0xb0: V50 = 0x1f0
0xb3: JUMPI 0x1f0 V49
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x20b]
---
0xb4 DUP1
0xb5 PUSH4 0x6c0a24eb
0xba EQ
0xbb PUSH2 0x20b
0xbe JUMPI
---
0xb5: V51 = 0x6c0a24eb
0xba: V52 = EQ 0x6c0a24eb V8
0xbb: V53 = 0x20b
0xbe: JUMPI 0x20b V52
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x220]
---
0xbf DUP1
0xc0 PUSH4 0x6ddd1713
0xc5 EQ
0xc6 PUSH2 0x220
0xc9 JUMPI
---
0xc0: V54 = 0x6ddd1713
0xc5: V55 = EQ 0x6ddd1713 V8
0xc6: V56 = 0x220
0xc9: JUMPI 0x220 V55
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x239]
---
0xca DUP1
0xcb PUSH4 0x70a08231
0xd0 EQ
0xd1 PUSH2 0x239
0xd4 JUMPI
---
0xcb: V57 = 0x70a08231
0xd0: V58 = EQ 0x70a08231 V8
0xd1: V59 = 0x239
0xd4: JUMPI 0x239 V58
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x26d]
---
0xd5 DUP1
0xd6 PUSH4 0x715018a6
0xdb EQ
0xdc PUSH2 0x26d
0xdf JUMPI
---
0xd6: V60 = 0x715018a6
0xdb: V61 = EQ 0x715018a6 V8
0xdc: V62 = 0x26d
0xdf: JUMPI 0x26d V61
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0xe0
[0xe0:0xe2]
---
Predecessors: [0xd5]
Successors: []
---
0xe0 MISSING 0x5f
0xe1 DUP1
0xe2 REVERT
---
0xe0: MISSING 0x5f
0xe2: REVERT S0 S0
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe3
[0xe3:0xee]
---
Predecessors: [0x9d]
Successors: [0xef, 0x129]
---
0xe3 JUMPDEST
0xe4 DUP1
0xe5 PUSH4 0x445b667
0xea EQ
0xeb PUSH2 0x129
0xee JUMPI
---
0xe3: JUMPDEST 
0xe5: V63 = 0x445b667
0xea: V64 = EQ 0x445b667 V8
0xeb: V65 = 0x129
0xee: JUMPI 0x129 V64
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0xef
[0xef:0xf9]
---
Predecessors: [0xe3]
Successors: [0xfa, 0x151]
---
0xef DUP1
0xf0 PUSH4 0x6fdde03
0xf5 EQ
0xf6 PUSH2 0x151
0xf9 JUMPI
---
0xf0: V66 = 0x6fdde03
0xf5: V67 = EQ 0x6fdde03 V8
0xf6: V68 = 0x151
0xf9: JUMPI 0x151 V67
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0xfa
[0xfa:0x104]
---
Predecessors: [0xef]
Successors: [0x105, 0x18e]
---
0xfa DUP1
0xfb PUSH4 0x95ea7b3
0x100 EQ
0x101 PUSH2 0x18e
0x104 JUMPI
---
0xfb: V69 = 0x95ea7b3
0x100: V70 = EQ 0x95ea7b3 V8
0x101: V71 = 0x18e
0x104: JUMPI 0x18e V70
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x105
[0x105:0x10f]
---
Predecessors: [0xfa]
Successors: [0x110, 0x1bd]
---
0x105 DUP1
0x106 PUSH4 0x18160ddd
0x10b EQ
0x10c PUSH2 0x1bd
0x10f JUMPI
---
0x106: V72 = 0x18160ddd
0x10b: V73 = EQ 0x18160ddd V8
0x10c: V74 = 0x1bd
0x10f: JUMPI 0x1bd V73
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x110
[0x110:0x11a]
---
Predecessors: [0x105]
Successors: [0x11b, 0x1d1]
---
0x110 DUP1
0x111 PUSH4 0x23b872dd
0x116 EQ
0x117 PUSH2 0x1d1
0x11a JUMPI
---
0x111: V75 = 0x23b872dd
0x116: V76 = EQ 0x23b872dd V8
0x117: V77 = 0x1d1
0x11a: JUMPI 0x1d1 V76
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x11b
[0x11b:0x11d]
---
Predecessors: [0x110]
Successors: []
---
0x11b MISSING 0x5f
0x11c DUP1
0x11d REVERT
---
0x11b: MISSING 0x5f
0x11d: REVERT S0 S0
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11e
[0x11e:0x123]
---
Predecessors: [0x0]
Successors: [0x124, 0x125]
---
0x11e JUMPDEST
0x11f CALLDATASIZE
0x120 PUSH2 0x125
0x123 JUMPI
---
0x11e: JUMPDEST 
0x11f: V78 = CALLDATASIZE
0x120: V79 = 0x125
0x123: JUMPI 0x125 V78
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x124
[0x124:0x124]
---
Predecessors: [0x11e]
Successors: []
---
0x124 STOP
---
0x124: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x125
[0x125:0x126]
---
Predecessors: [0x11e]
Successors: []
---
0x125 JUMPDEST
0x126 MISSING 0x5f
---
0x125: JUMPDEST 
0x126: MISSING 0x5f
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x127
[0x127:0x128]
---
Predecessors: []
Successors: []
---
0x127 DUP1
0x128 REVERT
---
0x128: REVERT S0 S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x129
[0x129:0x130]
---
Predecessors: [0xe3]
Successors: [0x131, 0x134]
---
0x129 JUMPDEST
0x12a CALLVALUE
0x12b DUP1
0x12c ISZERO
0x12d PUSH2 0x134
0x130 JUMPI
---
0x129: JUMPDEST 
0x12a: V80 = CALLVALUE
0x12c: V81 = ISZERO V80
0x12d: V82 = 0x134
0x130: JUMPI 0x134 V81
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V80]
Exit stack: [V8, V80]

================================

Block 0x131
[0x131:0x133]
---
Predecessors: [0x129]
Successors: []
---
0x131 MISSING 0x5f
0x132 DUP1
0x133 REVERT
---
0x131: MISSING 0x5f
0x133: REVERT S0 S0
---
Entry stack: [V8, V80]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x134
[0x134:0x13d]
---
Predecessors: [0x129]
Successors: [0x13e]
---
0x134 JUMPDEST
0x135 POP
0x136 PUSH2 0x13e
0x139 PUSH1 0xc
0x13b SLOAD
0x13c DUP2
0x13d JUMP
---
0x134: JUMPDEST 
0x136: V83 = 0x13e
0x139: V84 = 0xc
0x13b: V85 = S[0xc]
0x13d: JUMP 0x13e
---
Entry stack: [V8, V80]
Stack pops: 1
Stack additions: [0x13e, V85]
Exit stack: [V8, 0x13e, V85]

================================

Block 0x13e
[0x13e:0x147]
---
Predecessors: [0x134, 0x1c8, 0x216]
Successors: [0x148]
---
0x13e JUMPDEST
0x13f PUSH1 0x40
0x141 MLOAD
0x142 SWAP1
0x143 DUP2
0x144 MSTORE
0x145 PUSH1 0x20
0x147 ADD
---
0x13e: JUMPDEST 
0x13f: V86 = 0x40
0x141: V87 = M[0x40]
0x144: M[V87] = S0
0x145: V88 = 0x20
0x147: V89 = ADD 0x20 V87
---
Entry stack: [V8, S1, S0]
Stack pops: 1
Stack additions: [V89]
Exit stack: [V8, S1, V89]

================================

Block 0x148
[0x148:0x150]
---
Predecessors: [0x13e, 0x1ad, 0x1fb, 0x2af]
Successors: []
---
0x148 JUMPDEST
0x149 PUSH1 0x40
0x14b MLOAD
0x14c DUP1
0x14d SWAP2
0x14e SUB
0x14f SWAP1
0x150 RETURN
---
0x148: JUMPDEST 
0x149: V90 = 0x40
0x14b: V91 = M[0x40]
0x14e: V92 = SUB S0 V91
0x150: RETURN V91 V92
---
Entry stack: [V8, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, S1]

================================

Block 0x151
[0x151:0x158]
---
Predecessors: [0xef]
Successors: [0x159, 0x15c]
---
0x151 JUMPDEST
0x152 CALLVALUE
0x153 DUP1
0x154 ISZERO
0x155 PUSH2 0x15c
0x158 JUMPI
---
0x151: JUMPDEST 
0x152: V93 = CALLVALUE
0x154: V94 = ISZERO V93
0x155: V95 = 0x15c
0x158: JUMPI 0x15c V94
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V93]
Exit stack: [V8, V93]

================================

Block 0x159
[0x159:0x15b]
---
Predecessors: [0x151]
Successors: []
---
0x159 MISSING 0x5f
0x15a DUP1
0x15b REVERT
---
0x159: MISSING 0x5f
0x15b: REVERT S0 S0
---
Entry stack: [V8, V93]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x15c
[0x15c:0x180]
---
Predecessors: [0x151]
Successors: [0x181]
---
0x15c JUMPDEST
0x15d POP
0x15e PUSH1 0x40
0x160 DUP1
0x161 MLOAD
0x162 DUP1
0x163 DUP3
0x164 ADD
0x165 SWAP1
0x166 SWAP2
0x167 MSTORE
0x168 PUSH1 0xc
0x16a DUP2
0x16b MSTORE
0x16c PUSH12 0x4d6967687479204d6f757365
0x179 PUSH1 0xa0
0x17b SHL
0x17c PUSH1 0x20
0x17e DUP3
0x17f ADD
0x180 MSTORE
---
0x15c: JUMPDEST 
0x15e: V96 = 0x40
0x161: V97 = M[0x40]
0x164: V98 = ADD 0x40 V97
0x167: M[0x40] = V98
0x168: V99 = 0xc
0x16b: M[V97] = 0xc
0x16c: V100 = 0x4d6967687479204d6f757365
0x179: V101 = 0xa0
0x17b: V102 = SHL 0xa0 0x4d6967687479204d6f757365
0x17c: V103 = 0x20
0x17f: V104 = ADD V97 0x20
0x180: M[V104] = 0x4d6967687479204d6f7573650000000000000000000000000000000000000000
---
Entry stack: [V8, V93]
Stack pops: 1
Stack additions: [V97]
Exit stack: [V8, V97]

================================

Block 0x181
[0x181:0x18d]
---
Predecessors: [0x15c, 0x2d2]
Successors: [0x1094]
---
0x181 JUMPDEST
0x182 PUSH1 0x40
0x184 MLOAD
0x185 PUSH2 0x148
0x188 SWAP2
0x189 SWAP1
0x18a PUSH2 0x1094
0x18d JUMP
---
0x181: JUMPDEST 
0x182: V105 = 0x40
0x184: V106 = M[0x40]
0x185: V107 = 0x148
0x18a: V108 = 0x1094
0x18d: JUMP 0x1094
---
Entry stack: [V8, S0]
Stack pops: 1
Stack additions: [0x148, S0, V106]
Exit stack: [V8, 0x148, S0, V106]

================================

Block 0x18e
[0x18e:0x195]
---
Predecessors: [0xfa]
Successors: [0x196, 0x199]
---
0x18e JUMPDEST
0x18f CALLVALUE
0x190 DUP1
0x191 ISZERO
0x192 PUSH2 0x199
0x195 JUMPI
---
0x18e: JUMPDEST 
0x18f: V109 = CALLVALUE
0x191: V110 = ISZERO V109
0x192: V111 = 0x199
0x195: JUMPI 0x199 V110
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V109]
Exit stack: [V8, V109]

================================

Block 0x196
[0x196:0x198]
---
Predecessors: [0x18e]
Successors: []
---
0x196 MISSING 0x5f
0x197 DUP1
0x198 REVERT
---
0x196: MISSING 0x5f
0x198: REVERT S0 S0
---
Entry stack: [V8, V109]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x199
[0x199:0x1a7]
---
Predecessors: [0x18e]
Successors: [0x10f3]
---
0x199 JUMPDEST
0x19a POP
0x19b PUSH2 0x1ad
0x19e PUSH2 0x1a8
0x1a1 CALLDATASIZE
0x1a2 PUSH1 0x4
0x1a4 PUSH2 0x10f3
0x1a7 JUMP
---
0x199: JUMPDEST 
0x19b: V112 = 0x1ad
0x19e: V113 = 0x1a8
0x1a1: V114 = CALLDATASIZE
0x1a2: V115 = 0x4
0x1a4: V116 = 0x10f3
0x1a7: JUMP 0x10f3
---
Entry stack: [V8, V109]
Stack pops: 1
Stack additions: [0x1ad, 0x1a8, V114, 0x4]
Exit stack: [V8, 0x1ad, 0x1a8, V114, 0x4]

================================

Block 0x1a8
[0x1a8:0x1ac]
---
Predecessors: []
Successors: [0x3d1]
---
0x1a8 JUMPDEST
0x1a9 PUSH2 0x3d1
0x1ac JUMP
---
0x1a8: JUMPDEST 
0x1a9: V117 = 0x3d1
0x1ac: JUMP 0x3d1
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1ad
[0x1ad:0x1bc]
---
Predecessors: [0x22b]
Successors: [0x148]
---
0x1ad JUMPDEST
0x1ae PUSH1 0x40
0x1b0 MLOAD
0x1b1 SWAP1
0x1b2 ISZERO
0x1b3 ISZERO
0x1b4 DUP2
0x1b5 MSTORE
0x1b6 PUSH1 0x20
0x1b8 ADD
0x1b9 PUSH2 0x148
0x1bc JUMP
---
0x1ad: JUMPDEST 
0x1ae: V118 = 0x40
0x1b0: V119 = M[0x40]
0x1b2: V120 = ISZERO V162
0x1b3: V121 = ISZERO V120
0x1b5: M[V119] = V121
0x1b6: V122 = 0x20
0x1b8: V123 = ADD 0x20 V119
0x1b9: V124 = 0x148
0x1bc: JUMP 0x148
---
Entry stack: [V8, 0x1ad, V162]
Stack pops: 1
Stack additions: [V123]
Exit stack: [V8, 0x1ad, V123]

================================

Block 0x1bd
[0x1bd:0x1c4]
---
Predecessors: [0x105]
Successors: [0x1c5, 0x1c8]
---
0x1bd JUMPDEST
0x1be CALLVALUE
0x1bf DUP1
0x1c0 ISZERO
0x1c1 PUSH2 0x1c8
0x1c4 JUMPI
---
0x1bd: JUMPDEST 
0x1be: V125 = CALLVALUE
0x1c0: V126 = ISZERO V125
0x1c1: V127 = 0x1c8
0x1c4: JUMPI 0x1c8 V126
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V125]
Exit stack: [V8, V125]

================================

Block 0x1c5
[0x1c5:0x1c7]
---
Predecessors: [0x1bd]
Successors: []
---
0x1c5 MISSING 0x5f
0x1c6 DUP1
0x1c7 REVERT
---
0x1c5: MISSING 0x5f
0x1c7: REVERT S0 S0
---
Entry stack: [V8, V125]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1c8
[0x1c8:0x1d0]
---
Predecessors: [0x1bd]
Successors: [0x13e]
---
0x1c8 JUMPDEST
0x1c9 POP
0x1ca PUSH1 0x1
0x1cc SLOAD
0x1cd PUSH2 0x13e
0x1d0 JUMP
---
0x1c8: JUMPDEST 
0x1ca: V128 = 0x1
0x1cc: V129 = S[0x1]
0x1cd: V130 = 0x13e
0x1d0: JUMP 0x13e
---
Entry stack: [V8, V125]
Stack pops: 1
Stack additions: [V129]
Exit stack: [V8, V129]

================================

Block 0x1d1
[0x1d1:0x1d8]
---
Predecessors: [0x110]
Successors: [0x1d9, 0x1dc]
---
0x1d1 JUMPDEST
0x1d2 CALLVALUE
0x1d3 DUP1
0x1d4 ISZERO
0x1d5 PUSH2 0x1dc
0x1d8 JUMPI
---
0x1d1: JUMPDEST 
0x1d2: V131 = CALLVALUE
0x1d4: V132 = ISZERO V131
0x1d5: V133 = 0x1dc
0x1d8: JUMPI 0x1dc V132
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V131]
Exit stack: [V8, V131]

================================

Block 0x1d9
[0x1d9:0x1db]
---
Predecessors: [0x1d1]
Successors: []
---
0x1d9 MISSING 0x5f
0x1da DUP1
0x1db REVERT
---
0x1d9: MISSING 0x5f
0x1db: REVERT S0 S0
---
Entry stack: [V8, V131]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1dc
[0x1dc:0x1ea]
---
Predecessors: [0x1d1]
Successors: [0x111d]
---
0x1dc JUMPDEST
0x1dd POP
0x1de PUSH2 0x1ad
0x1e1 PUSH2 0x1eb
0x1e4 CALLDATASIZE
0x1e5 PUSH1 0x4
0x1e7 PUSH2 0x111d
0x1ea JUMP
---
0x1dc: JUMPDEST 
0x1de: V134 = 0x1ad
0x1e1: V135 = 0x1eb
0x1e4: V136 = CALLDATASIZE
0x1e5: V137 = 0x4
0x1e7: V138 = 0x111d
0x1ea: JUMP 0x111d
---
Entry stack: [V8, V131]
Stack pops: 1
Stack additions: [0x1ad, 0x1eb, V136, 0x4]
Exit stack: [V8, 0x1ad, 0x1eb, V136, 0x4]

================================

Block 0x1eb
[0x1eb:0x1ef]
---
Predecessors: []
Successors: [0x43d]
---
0x1eb JUMPDEST
0x1ec PUSH2 0x43d
0x1ef JUMP
---
0x1eb: JUMPDEST 
0x1ec: V139 = 0x43d
0x1ef: JUMP 0x43d
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f0
[0x1f0:0x1f7]
---
Predecessors: [0xa9]
Successors: [0x1f8, 0x1fb]
---
0x1f0 JUMPDEST
0x1f1 CALLVALUE
0x1f2 DUP1
0x1f3 ISZERO
0x1f4 PUSH2 0x1fb
0x1f7 JUMPI
---
0x1f0: JUMPDEST 
0x1f1: V140 = CALLVALUE
0x1f3: V141 = ISZERO V140
0x1f4: V142 = 0x1fb
0x1f7: JUMPI 0x1fb V141
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V140]
Exit stack: [V8, V140]

================================

Block 0x1f8
[0x1f8:0x1fa]
---
Predecessors: [0x1f0]
Successors: []
---
0x1f8 MISSING 0x5f
0x1f9 DUP1
0x1fa REVERT
---
0x1f8: MISSING 0x5f
0x1fa: REVERT S0 S0
---
Entry stack: [V8, V140]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1fb
[0x1fb:0x20a]
---
Predecessors: [0x1f0]
Successors: [0x148]
---
0x1fb JUMPDEST
0x1fc POP
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 PUSH1 0x12
0x202 DUP2
0x203 MSTORE
0x204 PUSH1 0x20
0x206 ADD
0x207 PUSH2 0x148
0x20a JUMP
---
0x1fb: JUMPDEST 
0x1fd: V143 = 0x40
0x1ff: V144 = M[0x40]
0x200: V145 = 0x12
0x203: M[V144] = 0x12
0x204: V146 = 0x20
0x206: V147 = ADD 0x20 V144
0x207: V148 = 0x148
0x20a: JUMP 0x148
---
Entry stack: [V8, V140]
Stack pops: 1
Stack additions: [V147]
Exit stack: [V8, V147]

================================

Block 0x20b
[0x20b:0x212]
---
Predecessors: [0xb4]
Successors: [0x213, 0x216]
---
0x20b JUMPDEST
0x20c CALLVALUE
0x20d DUP1
0x20e ISZERO
0x20f PUSH2 0x216
0x212 JUMPI
---
0x20b: JUMPDEST 
0x20c: V149 = CALLVALUE
0x20e: V150 = ISZERO V149
0x20f: V151 = 0x216
0x212: JUMPI 0x216 V150
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V149]
Exit stack: [V8, V149]

================================

Block 0x213
[0x213:0x215]
---
Predecessors: [0x20b]
Successors: []
---
0x213 MISSING 0x5f
0x214 DUP1
0x215 REVERT
---
0x213: MISSING 0x5f
0x215: REVERT S0 S0
---
Entry stack: [V8, V149]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x216
[0x216:0x21f]
---
Predecessors: [0x20b]
Successors: [0x13e]
---
0x216 JUMPDEST
0x217 POP
0x218 PUSH2 0x13e
0x21b PUSH1 0xb
0x21d SLOAD
0x21e DUP2
0x21f JUMP
---
0x216: JUMPDEST 
0x218: V152 = 0x13e
0x21b: V153 = 0xb
0x21d: V154 = S[0xb]
0x21f: JUMP 0x13e
---
Entry stack: [V8, V149]
Stack pops: 1
Stack additions: [0x13e, V154]
Exit stack: [V8, 0x13e, V154]

================================

Block 0x220
[0x220:0x227]
---
Predecessors: [0xbf]
Successors: [0x228, 0x22b]
---
0x220 JUMPDEST
0x221 CALLVALUE
0x222 DUP1
0x223 ISZERO
0x224 PUSH2 0x22b
0x227 JUMPI
---
0x220: JUMPDEST 
0x221: V155 = CALLVALUE
0x223: V156 = ISZERO V155
0x224: V157 = 0x22b
0x227: JUMPI 0x22b V156
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V155]
Exit stack: [V8, V155]

================================

Block 0x228
[0x228:0x22a]
---
Predecessors: [0x220]
Successors: []
---
0x228 MISSING 0x5f
0x229 DUP1
0x22a REVERT
---
0x228: MISSING 0x5f
0x22a: REVERT S0 S0
---
Entry stack: [V8, V155]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x22b
[0x22b:0x238]
---
Predecessors: [0x220]
Successors: [0x1ad]
---
0x22b JUMPDEST
0x22c POP
0x22d PUSH1 0xd
0x22f SLOAD
0x230 PUSH2 0x1ad
0x233 SWAP1
0x234 PUSH1 0xff
0x236 AND
0x237 DUP2
0x238 JUMP
---
0x22b: JUMPDEST 
0x22d: V158 = 0xd
0x22f: V159 = S[0xd]
0x230: V160 = 0x1ad
0x234: V161 = 0xff
0x236: V162 = AND 0xff V159
0x238: JUMP 0x1ad
---
Entry stack: [V8, V155]
Stack pops: 1
Stack additions: [0x1ad, V162]
Exit stack: [V8, 0x1ad, V162]

================================

Block 0x239
[0x239:0x240]
---
Predecessors: [0xca]
Successors: [0x241, 0x244]
---
0x239 JUMPDEST
0x23a CALLVALUE
0x23b DUP1
0x23c ISZERO
0x23d PUSH2 0x244
0x240 JUMPI
---
0x239: JUMPDEST 
0x23a: V163 = CALLVALUE
0x23c: V164 = ISZERO V163
0x23d: V165 = 0x244
0x240: JUMPI 0x244 V164
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V163]
Exit stack: [V8, V163]

================================

Block 0x241
[0x241:0x243]
---
Predecessors: [0x239]
Successors: []
---
0x241 MISSING 0x5f
0x242 DUP1
0x243 REVERT
---
0x241: MISSING 0x5f
0x243: REVERT S0 S0
---
Entry stack: [V8, V163]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x244
[0x244:0x252]
---
Predecessors: [0x239]
Successors: [0x115b]
---
0x244 JUMPDEST
0x245 POP
0x246 PUSH2 0x13e
0x249 PUSH2 0x253
0x24c CALLDATASIZE
0x24d PUSH1 0x4
0x24f PUSH2 0x115b
0x252 JUMP
---
0x244: JUMPDEST 
0x246: V166 = 0x13e
0x249: V167 = 0x253
0x24c: V168 = CALLDATASIZE
0x24d: V169 = 0x4
0x24f: V170 = 0x115b
0x252: JUMP 0x115b
---
Entry stack: [V8, V163]
Stack pops: 1
Stack additions: [0x13e, 0x253, V168, 0x4]
Exit stack: [V8, 0x13e, 0x253, V168, 0x4]

================================

Block 0x253
[0x253:0x26c]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x253 JUMPDEST
0x254 PUSH1 0x1
0x256 PUSH1 0x1
0x258 PUSH1 0xa0
0x25a SHL
0x25b SUB
0x25c AND
0x25d MISSING 0x5f
0x25e SWAP1
0x25f DUP2
0x260 MSTORE
0x261 PUSH1 0x2
0x263 PUSH1 0x20
0x265 MSTORE
0x266 PUSH1 0x40
0x268 SWAP1
0x269 SHA3
0x26a SLOAD
0x26b SWAP1
0x26c JUMP
---
0x253: JUMPDEST 
0x254: V171 = 0x1
0x256: V172 = 0x1
0x258: V173 = 0xa0
0x25a: V174 = SHL 0xa0 0x1
0x25b: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25c: V176 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x25d: MISSING 0x5f
0x260: M[S0] = S1
0x261: V177 = 0x2
0x263: V178 = 0x20
0x265: M[0x20] = 0x2
0x266: V179 = 0x40
0x269: V180 = SHA3 S0 0x40
0x26a: V181 = S[V180]
0x26c: JUMP S2
---
Entry stack: []
Stack pops: 1
Stack additions: [V181]
Exit stack: []

================================

Block 0x26d
[0x26d:0x274]
---
Predecessors: [0xd5]
Successors: [0x275, 0x278]
---
0x26d JUMPDEST
0x26e CALLVALUE
0x26f DUP1
0x270 ISZERO
0x271 PUSH2 0x278
0x274 JUMPI
---
0x26d: JUMPDEST 
0x26e: V182 = CALLVALUE
0x270: V183 = ISZERO V182
0x271: V184 = 0x278
0x274: JUMPI 0x278 V183
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V182]
Exit stack: [V8, V182]

================================

Block 0x275
[0x275:0x277]
---
Predecessors: [0x26d]
Successors: []
---
0x275 MISSING 0x5f
0x276 DUP1
0x277 REVERT
---
0x275: MISSING 0x5f
0x277: REVERT S0 S0
---
Entry stack: [V8, V182]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x278
[0x278:0x280]
---
Predecessors: [0x26d]
Successors: [0x4fb]
---
0x278 JUMPDEST
0x279 POP
0x27a PUSH2 0x281
0x27d PUSH2 0x4fb
0x280 JUMP
---
0x278: JUMPDEST 
0x27a: V185 = 0x281
0x27d: V186 = 0x4fb
0x280: JUMP 0x4fb
---
Entry stack: [V8, V182]
Stack pops: 1
Stack additions: [0x281]
Exit stack: [V8, 0x281]

================================

Block 0x281
[0x281:0x282]
---
Predecessors: []
Successors: []
---
0x281 JUMPDEST
0x282 STOP
---
0x281: JUMPDEST 
0x282: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x283
[0x283:0x28a]
---
Predecessors: [0x62]
Successors: [0x28b, 0x28e]
---
0x283 JUMPDEST
0x284 CALLVALUE
0x285 DUP1
0x286 ISZERO
0x287 PUSH2 0x28e
0x28a JUMPI
---
0x283: JUMPDEST 
0x284: V187 = CALLVALUE
0x286: V188 = ISZERO V187
0x287: V189 = 0x28e
0x28a: JUMPI 0x28e V188
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V187]
Exit stack: [V8, V187]

================================

Block 0x28b
[0x28b:0x28d]
---
Predecessors: [0x283]
Successors: []
---
0x28b MISSING 0x5f
0x28c DUP1
0x28d REVERT
---
0x28b: MISSING 0x5f
0x28d: REVERT S0 S0
---
Entry stack: [V8, V187]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x28e
[0x28e:0x296]
---
Predecessors: [0x283]
Successors: [0x575]
---
0x28e JUMPDEST
0x28f POP
0x290 PUSH2 0x281
0x293 PUSH2 0x575
0x296 JUMP
---
0x28e: JUMPDEST 
0x290: V190 = 0x281
0x293: V191 = 0x575
0x296: JUMP 0x575
---
Entry stack: [V8, V187]
Stack pops: 1
Stack additions: [0x281]
Exit stack: [V8, 0x281]

================================

Block 0x297
[0x297:0x29e]
---
Predecessors: [0x6e]
Successors: [0x29f, 0x2a2]
---
0x297 JUMPDEST
0x298 CALLVALUE
0x299 DUP1
0x29a ISZERO
0x29b PUSH2 0x2a2
0x29e JUMPI
---
0x297: JUMPDEST 
0x298: V192 = CALLVALUE
0x29a: V193 = ISZERO V192
0x29b: V194 = 0x2a2
0x29e: JUMPI 0x2a2 V193
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V192]
Exit stack: [V8, V192]

================================

Block 0x29f
[0x29f:0x2a1]
---
Predecessors: [0x297]
Successors: []
---
0x29f MISSING 0x5f
0x2a0 DUP1
0x2a1 REVERT
---
0x29f: MISSING 0x5f
0x2a1: REVERT S0 S0
---
Entry stack: [V8, V192]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2a2
[0x2a2:0x2ae]
---
Predecessors: [0x297]
Successors: [0x2af]
---
0x2a2 JUMPDEST
0x2a3 POP
0x2a4 MISSING 0x5f
0x2a5 SLOAD
0x2a6 PUSH1 0x1
0x2a8 PUSH1 0x1
0x2aa PUSH1 0xa0
0x2ac SHL
0x2ad SUB
0x2ae AND
---
0x2a2: JUMPDEST 
0x2a4: MISSING 0x5f
0x2a5: V195 = S[S0]
0x2a6: V196 = 0x1
0x2a8: V197 = 0x1
0x2aa: V198 = 0xa0
0x2ac: V199 = SHL 0xa0 0x1
0x2ad: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ae: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
---
Entry stack: [V8, V192]
Stack pops: 2
Stack additions: [V201]
Exit stack: []

================================

Block 0x2af
[0x2af:0x2c6]
---
Predecessors: [0x2a2, 0x300, 0x3bd]
Successors: [0x148]
---
0x2af JUMPDEST
0x2b0 PUSH1 0x40
0x2b2 MLOAD
0x2b3 PUSH1 0x1
0x2b5 PUSH1 0x1
0x2b7 PUSH1 0xa0
0x2b9 SHL
0x2ba SUB
0x2bb SWAP1
0x2bc SWAP2
0x2bd AND
0x2be DUP2
0x2bf MSTORE
0x2c0 PUSH1 0x20
0x2c2 ADD
0x2c3 PUSH2 0x148
0x2c6 JUMP
---
0x2af: JUMPDEST 
0x2b0: V202 = 0x40
0x2b2: V203 = M[0x40]
0x2b3: V204 = 0x1
0x2b5: V205 = 0x1
0x2b7: V206 = 0xa0
0x2b9: V207 = SHL 0xa0 0x1
0x2ba: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bd: V209 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: M[V203] = V209
0x2c0: V210 = 0x20
0x2c2: V211 = ADD 0x20 V203
0x2c3: V212 = 0x148
0x2c6: JUMP 0x148
---
Entry stack: [V8, 0x2af, S0]
Stack pops: 1
Stack additions: [V211]
Exit stack: [V8, 0x2af, V211]

================================

Block 0x2c7
[0x2c7:0x2ce]
---
Predecessors: [0x79]
Successors: [0x2cf, 0x2d2]
---
0x2c7 JUMPDEST
0x2c8 CALLVALUE
0x2c9 DUP1
0x2ca ISZERO
0x2cb PUSH2 0x2d2
0x2ce JUMPI
---
0x2c7: JUMPDEST 
0x2c8: V213 = CALLVALUE
0x2ca: V214 = ISZERO V213
0x2cb: V215 = 0x2d2
0x2ce: JUMPI 0x2d2 V214
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V213]
Exit stack: [V8, V213]

================================

Block 0x2cf
[0x2cf:0x2d1]
---
Predecessors: [0x2c7]
Successors: []
---
0x2cf MISSING 0x5f
0x2d0 DUP1
0x2d1 REVERT
---
0x2cf: MISSING 0x5f
0x2d1: REVERT S0 S0
---
Entry stack: [V8, V213]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2d2
[0x2d2:0x2f4]
---
Predecessors: [0x2c7]
Successors: [0x181]
---
0x2d2 JUMPDEST
0x2d3 POP
0x2d4 PUSH1 0x40
0x2d6 DUP1
0x2d7 MLOAD
0x2d8 DUP1
0x2d9 DUP3
0x2da ADD
0x2db SWAP1
0x2dc SWAP2
0x2dd MSTORE
0x2de PUSH1 0x6
0x2e0 DUP2
0x2e1 MSTORE
0x2e2 PUSH6 0x4d4947485459
0x2e9 PUSH1 0xd0
0x2eb SHL
0x2ec PUSH1 0x20
0x2ee DUP3
0x2ef ADD
0x2f0 MSTORE
0x2f1 PUSH2 0x181
0x2f4 JUMP
---
0x2d2: JUMPDEST 
0x2d4: V216 = 0x40
0x2d7: V217 = M[0x40]
0x2da: V218 = ADD 0x40 V217
0x2dd: M[0x40] = V218
0x2de: V219 = 0x6
0x2e1: M[V217] = 0x6
0x2e2: V220 = 0x4d4947485459
0x2e9: V221 = 0xd0
0x2eb: V222 = SHL 0xd0 0x4d4947485459
0x2ec: V223 = 0x20
0x2ef: V224 = ADD V217 0x20
0x2f0: M[V224] = 0x4d49474854590000000000000000000000000000000000000000000000000000
0x2f1: V225 = 0x181
0x2f4: JUMP 0x181
---
Entry stack: [V8, V213]
Stack pops: 1
Stack additions: [V217]
Exit stack: [V8, V217]

================================

Block 0x2f5
[0x2f5:0x2fc]
---
Predecessors: [0x84]
Successors: [0x2fd, 0x300]
---
0x2f5 JUMPDEST
0x2f6 CALLVALUE
0x2f7 DUP1
0x2f8 ISZERO
0x2f9 PUSH2 0x300
0x2fc JUMPI
---
0x2f5: JUMPDEST 
0x2f6: V226 = CALLVALUE
0x2f8: V227 = ISZERO V226
0x2f9: V228 = 0x300
0x2fc: JUMPI 0x300 V227
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V226]
Exit stack: [V8, V226]

================================

Block 0x2fd
[0x2fd:0x2ff]
---
Predecessors: [0x2f5]
Successors: []
---
0x2fd MISSING 0x5f
0x2fe DUP1
0x2ff REVERT
---
0x2fd: MISSING 0x5f
0x2ff: REVERT S0 S0
---
Entry stack: [V8, V226]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x300
[0x300:0x313]
---
Predecessors: [0x2f5]
Successors: [0x2af]
---
0x300 JUMPDEST
0x301 POP
0x302 PUSH1 0xa
0x304 SLOAD
0x305 PUSH2 0x2af
0x308 SWAP1
0x309 PUSH1 0x1
0x30b PUSH1 0x1
0x30d PUSH1 0xa0
0x30f SHL
0x310 SUB
0x311 AND
0x312 DUP2
0x313 JUMP
---
0x300: JUMPDEST 
0x302: V229 = 0xa
0x304: V230 = S[0xa]
0x305: V231 = 0x2af
0x309: V232 = 0x1
0x30b: V233 = 0x1
0x30d: V234 = 0xa0
0x30f: V235 = SHL 0xa0 0x1
0x310: V236 = SUB 0x10000000000000000000000000000000000000000 0x1
0x311: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x313: JUMP 0x2af
---
Entry stack: [V8, V226]
Stack pops: 1
Stack additions: [0x2af, V237]
Exit stack: [V8, 0x2af, V237]

================================

Block 0x314
[0x314:0x31b]
---
Predecessors: [0x8f]
Successors: [0x31c, 0x31f]
---
0x314 JUMPDEST
0x315 CALLVALUE
0x316 DUP1
0x317 ISZERO
0x318 PUSH2 0x31f
0x31b JUMPI
---
0x314: JUMPDEST 
0x315: V238 = CALLVALUE
0x317: V239 = ISZERO V238
0x318: V240 = 0x31f
0x31b: JUMPI 0x31f V239
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V238]
Exit stack: [V8, V238]

================================

Block 0x31c
[0x31c:0x31e]
---
Predecessors: [0x314]
Successors: []
---
0x31c MISSING 0x5f
0x31d DUP1
0x31e REVERT
---
0x31c: MISSING 0x5f
0x31e: REVERT S0 S0
---
Entry stack: [V8, V238]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x31f
[0x31f:0x32d]
---
Predecessors: [0x314]
Successors: [0x10f3]
---
0x31f JUMPDEST
0x320 POP
0x321 PUSH2 0x1ad
0x324 PUSH2 0x32e
0x327 CALLDATASIZE
0x328 PUSH1 0x4
0x32a PUSH2 0x10f3
0x32d JUMP
---
0x31f: JUMPDEST 
0x321: V241 = 0x1ad
0x324: V242 = 0x32e
0x327: V243 = CALLDATASIZE
0x328: V244 = 0x4
0x32a: V245 = 0x10f3
0x32d: JUMP 0x10f3
---
Entry stack: [V8, V238]
Stack pops: 1
Stack additions: [0x1ad, 0x32e, V243, 0x4]
Exit stack: [V8, 0x1ad, 0x32e, V243, 0x4]

================================

Block 0x32e
[0x32e:0x332]
---
Predecessors: []
Successors: [0x5a6]
---
0x32e JUMPDEST
0x32f PUSH2 0x5a6
0x332 JUMP
---
0x32e: JUMPDEST 
0x32f: V246 = 0x5a6
0x332: JUMP 0x5a6
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x333
[0x333:0x33a]
---
Predecessors: [0x28]
Successors: [0x33b, 0x33e]
---
0x333 JUMPDEST
0x334 CALLVALUE
0x335 DUP1
0x336 ISZERO
0x337 PUSH2 0x33e
0x33a JUMPI
---
0x333: JUMPDEST 
0x334: V247 = CALLVALUE
0x336: V248 = ISZERO V247
0x337: V249 = 0x33e
0x33a: JUMPI 0x33e V248
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V247]
Exit stack: [V8, V247]

================================

Block 0x33b
[0x33b:0x33d]
---
Predecessors: [0x333]
Successors: []
---
0x33b MISSING 0x5f
0x33c DUP1
0x33d REVERT
---
0x33b: MISSING 0x5f
0x33d: REVERT S0 S0
---
Entry stack: [V8, V247]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x33e
[0x33e:0x346]
---
Predecessors: [0x333]
Successors: [0x5b2]
---
0x33e JUMPDEST
0x33f POP
0x340 PUSH2 0x281
0x343 PUSH2 0x5b2
0x346 JUMP
---
0x33e: JUMPDEST 
0x340: V250 = 0x281
0x343: V251 = 0x5b2
0x346: JUMP 0x5b2
---
Entry stack: [V8, V247]
Stack pops: 1
Stack additions: [0x281]
Exit stack: [V8, 0x281]

================================

Block 0x347
[0x347:0x34e]
---
Predecessors: [0x33]
Successors: [0x34f, 0x352]
---
0x347 JUMPDEST
0x348 CALLVALUE
0x349 DUP1
0x34a ISZERO
0x34b PUSH2 0x352
0x34e JUMPI
---
0x347: JUMPDEST 
0x348: V252 = CALLVALUE
0x34a: V253 = ISZERO V252
0x34b: V254 = 0x352
0x34e: JUMPI 0x352 V253
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V252]
Exit stack: [V8, V252]

================================

Block 0x34f
[0x34f:0x351]
---
Predecessors: [0x347]
Successors: []
---
0x34f MISSING 0x5f
0x350 DUP1
0x351 REVERT
---
0x34f: MISSING 0x5f
0x351: REVERT S0 S0
---
Entry stack: [V8, V252]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x352
[0x352:0x360]
---
Predecessors: [0x347]
Successors: [0x115b]
---
0x352 JUMPDEST
0x353 POP
0x354 PUSH2 0x281
0x357 PUSH2 0x361
0x35a CALLDATASIZE
0x35b PUSH1 0x4
0x35d PUSH2 0x115b
0x360 JUMP
---
0x352: JUMPDEST 
0x354: V255 = 0x281
0x357: V256 = 0x361
0x35a: V257 = CALLDATASIZE
0x35b: V258 = 0x4
0x35d: V259 = 0x115b
0x360: JUMP 0x115b
---
Entry stack: [V8, V252]
Stack pops: 1
Stack additions: [0x281, 0x361, V257, 0x4]
Exit stack: [V8, 0x281, 0x361, V257, 0x4]

================================

Block 0x361
[0x361:0x365]
---
Predecessors: []
Successors: [0x5eb]
---
0x361 JUMPDEST
0x362 PUSH2 0x5eb
0x365 JUMP
---
0x361: JUMPDEST 
0x362: V260 = 0x5eb
0x365: JUMP 0x5eb
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x366
[0x366:0x36d]
---
Predecessors: [0x3e]
Successors: [0x36e, 0x371]
---
0x366 JUMPDEST
0x367 CALLVALUE
0x368 DUP1
0x369 ISZERO
0x36a PUSH2 0x371
0x36d JUMPI
---
0x366: JUMPDEST 
0x367: V261 = CALLVALUE
0x369: V262 = ISZERO V261
0x36a: V263 = 0x371
0x36d: JUMPI 0x371 V262
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V261]
Exit stack: [V8, V261]

================================

Block 0x36e
[0x36e:0x370]
---
Predecessors: [0x366]
Successors: []
---
0x36e MISSING 0x5f
0x36f DUP1
0x370 REVERT
---
0x36e: MISSING 0x5f
0x370: REVERT S0 S0
---
Entry stack: [V8, V261]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x371
[0x371:0x37f]
---
Predecessors: [0x366]
Successors: [0x1176]
---
0x371 JUMPDEST
0x372 POP
0x373 PUSH2 0x13e
0x376 PUSH2 0x380
0x379 CALLDATASIZE
0x37a PUSH1 0x4
0x37c PUSH2 0x1176
0x37f JUMP
---
0x371: JUMPDEST 
0x373: V264 = 0x13e
0x376: V265 = 0x380
0x379: V266 = CALLDATASIZE
0x37a: V267 = 0x4
0x37c: V268 = 0x1176
0x37f: JUMP 0x1176
---
Entry stack: [V8, V261]
Stack pops: 1
Stack additions: [0x13e, 0x380, V266, 0x4]
Exit stack: [V8, 0x13e, 0x380, V266, 0x4]

================================

Block 0x380
[0x380:0x3a9]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x380 JUMPDEST
0x381 PUSH1 0x1
0x383 PUSH1 0x1
0x385 PUSH1 0xa0
0x387 SHL
0x388 SUB
0x389 SWAP2
0x38a DUP3
0x38b AND
0x38c MISSING 0x5f
0x38d SWAP1
0x38e DUP2
0x38f MSTORE
0x390 PUSH1 0x3
0x392 PUSH1 0x20
0x394 SWAP1
0x395 DUP2
0x396 MSTORE
0x397 PUSH1 0x40
0x399 DUP1
0x39a DUP4
0x39b SHA3
0x39c SWAP4
0x39d SWAP1
0x39e SWAP5
0x39f AND
0x3a0 DUP3
0x3a1 MSTORE
0x3a2 SWAP2
0x3a3 SWAP1
0x3a4 SWAP2
0x3a5 MSTORE
0x3a6 SHA3
0x3a7 SLOAD
0x3a8 SWAP1
0x3a9 JUMP
---
0x380: JUMPDEST 
0x381: V269 = 0x1
0x383: V270 = 0x1
0x385: V271 = 0xa0
0x387: V272 = SHL 0xa0 0x1
0x388: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38b: V274 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x38c: MISSING 0x5f
0x38f: M[S0] = S1
0x390: V275 = 0x3
0x392: V276 = 0x20
0x396: M[0x20] = 0x3
0x397: V277 = 0x40
0x39b: V278 = SHA3 S0 0x40
0x39f: V279 = AND S3 S2
0x3a1: M[S0] = V279
0x3a5: M[0x20] = V278
0x3a6: V280 = SHA3 S0 0x40
0x3a7: V281 = S[V280]
0x3a9: JUMP S4
---
Entry stack: []
Stack pops: 2
Stack additions: [0xffffffffffffffffffffffffffffffffffffffff, V281]
Exit stack: []

================================

Block 0x3aa
[0x3aa:0x3b1]
---
Predecessors: [0x49]
Successors: [0x636]
---
0x3aa JUMPDEST
0x3ab PUSH2 0x281
0x3ae PUSH2 0x636
0x3b1 JUMP
---
0x3aa: JUMPDEST 
0x3ab: V282 = 0x281
0x3ae: V283 = 0x636
0x3b1: JUMP 0x636
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x281]
Exit stack: [V8, 0x281]

================================

Block 0x3b2
[0x3b2:0x3b9]
---
Predecessors: [0x54]
Successors: [0x3ba, 0x3bd]
---
0x3b2 JUMPDEST
0x3b3 CALLVALUE
0x3b4 DUP1
0x3b5 ISZERO
0x3b6 PUSH2 0x3bd
0x3b9 JUMPI
---
0x3b2: JUMPDEST 
0x3b3: V284 = CALLVALUE
0x3b5: V285 = ISZERO V284
0x3b6: V286 = 0x3bd
0x3b9: JUMPI 0x3bd V285
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [V284]
Exit stack: [V8, V284]

================================

Block 0x3ba
[0x3ba:0x3bc]
---
Predecessors: [0x3b2]
Successors: []
---
0x3ba MISSING 0x5f
0x3bb DUP1
0x3bc REVERT
---
0x3ba: MISSING 0x5f
0x3bc: REVERT S0 S0
---
Entry stack: [V8, V284]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3bd
[0x3bd:0x3d0]
---
Predecessors: [0x3b2]
Successors: [0x2af]
---
0x3bd JUMPDEST
0x3be POP
0x3bf PUSH1 0x9
0x3c1 SLOAD
0x3c2 PUSH2 0x2af
0x3c5 SWAP1
0x3c6 PUSH1 0x1
0x3c8 PUSH1 0x1
0x3ca PUSH1 0xa0
0x3cc SHL
0x3cd SUB
0x3ce AND
0x3cf DUP2
0x3d0 JUMP
---
0x3bd: JUMPDEST 
0x3bf: V287 = 0x9
0x3c1: V288 = S[0x9]
0x3c2: V289 = 0x2af
0x3c6: V290 = 0x1
0x3c8: V291 = 0x1
0x3ca: V292 = 0xa0
0x3cc: V293 = SHL 0xa0 0x1
0x3cd: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ce: V295 = AND 0xffffffffffffffffffffffffffffffffffffffff V288
0x3d0: JUMP 0x2af
---
Entry stack: [V8, V284]
Stack pops: 1
Stack additions: [0x2af, V295]
Exit stack: [V8, 0x2af, V295]

================================

Block 0x3d1
[0x3d1:0x42a]
---
Predecessors: [0x1a8]
Successors: [0x42b]
---
0x3d1 JUMPDEST
0x3d2 CALLER
0x3d3 MISSING 0x5f
0x3d4 DUP2
0x3d5 DUP2
0x3d6 MSTORE
0x3d7 PUSH1 0x3
0x3d9 PUSH1 0x20
0x3db SWAP1
0x3dc DUP2
0x3dd MSTORE
0x3de PUSH1 0x40
0x3e0 DUP1
0x3e1 DUP4
0x3e2 SHA3
0x3e3 PUSH1 0x1
0x3e5 PUSH1 0x1
0x3e7 PUSH1 0xa0
0x3e9 SHL
0x3ea SUB
0x3eb DUP8
0x3ec AND
0x3ed DUP1
0x3ee DUP6
0x3ef MSTORE
0x3f0 SWAP3
0x3f1 MSTORE
0x3f2 DUP1
0x3f3 DUP4
0x3f4 SHA3
0x3f5 DUP6
0x3f6 SWAP1
0x3f7 SSTORE
0x3f8 MLOAD
0x3f9 SWAP2
0x3fa SWAP3
0x3fb SWAP1
0x3fc SWAP2
0x3fd PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x41e SWAP1
0x41f PUSH2 0x42b
0x422 SWAP1
0x423 DUP7
0x424 DUP2
0x425 MSTORE
0x426 PUSH1 0x20
0x428 ADD
0x429 SWAP1
0x42a JUMP
---
0x3d1: JUMPDEST 
0x3d2: V296 = CALLER
0x3d3: MISSING 0x5f
0x3d6: M[S0] = S1
0x3d7: V297 = 0x3
0x3d9: V298 = 0x20
0x3dd: M[0x20] = 0x3
0x3de: V299 = 0x40
0x3e2: V300 = SHA3 S0 0x40
0x3e3: V301 = 0x1
0x3e5: V302 = 0x1
0x3e7: V303 = 0xa0
0x3e9: V304 = SHL 0xa0 0x1
0x3ea: V305 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ec: V306 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x3ef: M[S0] = V306
0x3f1: M[0x20] = V300
0x3f4: V307 = SHA3 S0 0x40
0x3f7: S[V307] = S2
0x3f8: V308 = M[0x40]
0x3fd: V309 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x41f: V310 = 0x42b
0x425: M[V308] = S2
0x426: V311 = 0x20
0x428: V312 = ADD 0x20 V308
0x42a: JUMP 0x42b
---
Entry stack: []
Stack pops: 0
Stack additions: [V296, V312, 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, S1, V306, S0, S2, S3]
Exit stack: []

================================

Block 0x42b
[0x42b:0x436]
---
Predecessors: [0x3d1]
Successors: [0x437]
---
0x42b JUMPDEST
0x42c PUSH1 0x40
0x42e MLOAD
0x42f DUP1
0x430 SWAP2
0x431 SUB
0x432 SWAP1
0x433 LOG3
0x434 POP
0x435 PUSH1 0x1
---
0x42b: JUMPDEST 
0x42c: V313 = 0x40
0x42e: V314 = M[0x40]
0x431: V315 = SUB V312 V314
0x433: LOG V314 V315 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 S2 V306
0x435: V316 = 0x1
---
Entry stack: [S6, S5, S4, V306, S2, 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, V312]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [S6, S5, 0x1]

================================

Block 0x437
[0x437:0x43c]
---
Predecessors: [0x42b, 0xf71, 0x123c, 0x124f, 0x12fc]
Successors: [0x8e8, 0x9b4, 0xf16, 0xf82]
---
0x437 JUMPDEST
0x438 SWAP3
0x439 SWAP2
0x43a POP
0x43b POP
0x43c JUMP
---
0x437: JUMPDEST 
0x43c: JUMP {0x8e8, 0x9b4, 0xf16, 0xf82}
---
Entry stack: [S8, S7, S6, S5, S4, {0x8e8, 0x9b4, 0xf16, 0xf82}, S2, V864, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [S8, S7, S6, S5, S4, S0]

================================

Block 0x43d
[0x43d:0x467]
---
Predecessors: [0x1eb]
Successors: [0x468, 0x4e6]
---
0x43d JUMPDEST
0x43e PUSH1 0x1
0x440 PUSH1 0x1
0x442 PUSH1 0xa0
0x444 SHL
0x445 SUB
0x446 DUP4
0x447 AND
0x448 MISSING 0x5f
0x449 SWAP1
0x44a DUP2
0x44b MSTORE
0x44c PUSH1 0x3
0x44e PUSH1 0x20
0x450 SWAP1
0x451 DUP2
0x452 MSTORE
0x453 PUSH1 0x40
0x455 DUP1
0x456 DUP4
0x457 SHA3
0x458 CALLER
0x459 DUP5
0x45a MSTORE
0x45b SWAP1
0x45c SWAP2
0x45d MSTORE
0x45e DUP2
0x45f SHA3
0x460 SLOAD
0x461 MISSING 0x5f
0x462 NOT
0x463 EQ
0x464 PUSH2 0x4e6
0x467 JUMPI
---
0x43d: JUMPDEST 
0x43e: V317 = 0x1
0x440: V318 = 0x1
0x442: V319 = 0xa0
0x444: V320 = SHL 0xa0 0x1
0x445: V321 = SUB 0x10000000000000000000000000000000000000000 0x1
0x447: V322 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x448: MISSING 0x5f
0x44b: M[S0] = S1
0x44c: V323 = 0x3
0x44e: V324 = 0x20
0x452: M[0x20] = 0x3
0x453: V325 = 0x40
0x457: V326 = SHA3 S0 0x40
0x458: V327 = CALLER
0x45a: M[S0] = V327
0x45d: M[0x20] = V326
0x45f: V328 = SHA3 S0 0x40
0x460: V329 = S[V328]
0x461: MISSING 0x5f
0x462: V330 = NOT S0
0x463: V331 = EQ V330 S1
0x464: V332 = 0x4e6
0x467: JUMPI 0x4e6 V331
---
Entry stack: []
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0x468
[0x468:0x4c1]
---
Predecessors: [0x43d]
Successors: [0x8b9]
---
0x468 PUSH1 0x40
0x46a DUP1
0x46b MLOAD
0x46c DUP1
0x46d DUP3
0x46e ADD
0x46f DUP3
0x470 MSTORE
0x471 PUSH1 0x16
0x473 DUP2
0x474 MSTORE
0x475 PUSH22 0x496e73756666696369656e7420416c6c6f77616e6365
0x48c PUSH1 0x50
0x48e SHL
0x48f PUSH1 0x20
0x491 DUP1
0x492 DUP4
0x493 ADD
0x494 SWAP2
0x495 SWAP1
0x496 SWAP2
0x497 MSTORE
0x498 PUSH1 0x1
0x49a PUSH1 0x1
0x49c PUSH1 0xa0
0x49e SHL
0x49f SUB
0x4a0 DUP8
0x4a1 AND
0x4a2 MISSING 0x5f
0x4a3 SWAP1
0x4a4 DUP2
0x4a5 MSTORE
0x4a6 PUSH1 0x3
0x4a8 DUP3
0x4a9 MSTORE
0x4aa DUP4
0x4ab DUP2
0x4ac SHA3
0x4ad CALLER
0x4ae DUP3
0x4af MSTORE
0x4b0 SWAP1
0x4b1 SWAP2
0x4b2 MSTORE
0x4b3 SWAP2
0x4b4 SWAP1
0x4b5 SWAP2
0x4b6 SHA3
0x4b7 SLOAD
0x4b8 PUSH2 0x4c2
0x4bb SWAP2
0x4bc DUP5
0x4bd SWAP1
0x4be PUSH2 0x8b9
0x4c1 JUMP
---
0x468: V333 = 0x40
0x46b: V334 = M[0x40]
0x46e: V335 = ADD 0x40 V334
0x470: M[0x40] = V335
0x471: V336 = 0x16
0x474: M[V334] = 0x16
0x475: V337 = 0x496e73756666696369656e7420416c6c6f77616e6365
0x48c: V338 = 0x50
0x48e: V339 = SHL 0x50 0x496e73756666696369656e7420416c6c6f77616e6365
0x48f: V340 = 0x20
0x493: V341 = ADD V334 0x20
0x497: M[V341] = 0x496e73756666696369656e7420416c6c6f77616e636500000000000000000000
0x498: V342 = 0x1
0x49a: V343 = 0x1
0x49c: V344 = 0xa0
0x49e: V345 = SHL 0xa0 0x1
0x49f: V346 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a1: V347 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x4a2: MISSING 0x5f
0x4a5: M[S0] = S1
0x4a6: V348 = 0x3
0x4a9: M[S2] = 0x3
0x4ac: V349 = SHA3 S0 S4
0x4ad: V350 = CALLER
0x4af: M[S0] = V350
0x4b2: M[S2] = V349
0x4b6: V351 = SHA3 S0 S4
0x4b7: V352 = S[V351]
0x4b8: V353 = 0x4c2
0x4be: V354 = 0x8b9
0x4c1: JUMP 0x8b9
---
Entry stack: []
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, S6, V352, 0x4c2, S5, S6]
Exit stack: []

================================

Block 0x4c2
[0x4c2:0x4e5]
---
Predecessors: []
Successors: [0x4e6]
---
0x4c2 JUMPDEST
0x4c3 PUSH1 0x1
0x4c5 PUSH1 0x1
0x4c7 PUSH1 0xa0
0x4c9 SHL
0x4ca SUB
0x4cb DUP6
0x4cc AND
0x4cd MISSING 0x5f
0x4ce SWAP1
0x4cf DUP2
0x4d0 MSTORE
0x4d1 PUSH1 0x3
0x4d3 PUSH1 0x20
0x4d5 SWAP1
0x4d6 DUP2
0x4d7 MSTORE
0x4d8 PUSH1 0x40
0x4da DUP1
0x4db DUP4
0x4dc SHA3
0x4dd CALLER
0x4de DUP5
0x4df MSTORE
0x4e0 SWAP1
0x4e1 SWAP2
0x4e2 MSTORE
0x4e3 SWAP1
0x4e4 SHA3
0x4e5 SSTORE
---
0x4c2: JUMPDEST 
0x4c3: V355 = 0x1
0x4c5: V356 = 0x1
0x4c7: V357 = 0xa0
0x4c9: V358 = SHL 0xa0 0x1
0x4ca: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cc: V360 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x4cd: MISSING 0x5f
0x4d0: M[S0] = S1
0x4d1: V361 = 0x3
0x4d3: V362 = 0x20
0x4d7: M[0x20] = 0x3
0x4d8: V363 = 0x40
0x4dc: V364 = SHA3 S0 0x40
0x4dd: V365 = CALLER
0x4df: M[S0] = V365
0x4e2: M[0x20] = V364
0x4e4: V366 = SHA3 S0 0x40
0x4e5: S[V366] = S2
---
Entry stack: []
Stack pops: 5
Stack additions: [S4]
Exit stack: []

================================

Block 0x4e6
[0x4e6:0x4f0]
---
Predecessors: [0x43d, 0x4c2]
Successors: [0x8f1]
---
0x4e6 JUMPDEST
0x4e7 PUSH2 0x4f1
0x4ea DUP5
0x4eb DUP5
0x4ec DUP5
0x4ed PUSH2 0x8f1
0x4f0 JUMP
---
0x4e6: JUMPDEST 
0x4e7: V367 = 0x4f1
0x4ed: V368 = 0x8f1
0x4f0: JUMP 0x8f1
---
Entry stack: []
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x4f1, S3, S2, S1]
Exit stack: [S3, S2, S1, S0, 0x4f1, S3, S2, S1]

================================

Block 0x4f1
[0x4f1:0x4f3]
---
Predecessors: []
Successors: [0x4f4]
---
0x4f1 JUMPDEST
0x4f2 SWAP1
0x4f3 POP
---
0x4f1: JUMPDEST 
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x4f4
[0x4f4:0x4fa]
---
Predecessors: [0x4f1, 0x5e8, 0x90e, 0xf16, 0xf8f]
Successors: []
Has unresolved jump.
---
0x4f4 JUMPDEST
0x4f5 SWAP4
0x4f6 SWAP3
0x4f7 POP
0x4f8 POP
0x4f9 POP
0x4fa JUMP
---
0x4f4: JUMPDEST 
0x4fa: JUMP S4
---
Entry stack: [S5, S4, V1420, V1444, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [S5, S0]

================================

Block 0x4fb
[0x4fb:0x50c]
---
Predecessors: [0x278]
Successors: [0x50d, 0x52d]
---
0x4fb JUMPDEST
0x4fc MISSING 0x5f
0x4fd SLOAD
0x4fe PUSH1 0x1
0x500 PUSH1 0x1
0x502 PUSH1 0xa0
0x504 SHL
0x505 SUB
0x506 AND
0x507 CALLER
0x508 EQ
0x509 PUSH2 0x52d
0x50c JUMPI
---
0x4fb: JUMPDEST 
0x4fc: MISSING 0x5f
0x4fd: V369 = S[S0]
0x4fe: V370 = 0x1
0x500: V371 = 0x1
0x502: V372 = 0xa0
0x504: V373 = SHL 0xa0 0x1
0x505: V374 = SUB 0x10000000000000000000000000000000000000000 0x1
0x506: V375 = AND 0xffffffffffffffffffffffffffffffffffffffff V369
0x507: V376 = CALLER
0x508: V377 = EQ V376 V375
0x509: V378 = 0x52d
0x50c: JUMPI 0x52d V377
---
Entry stack: [V8, 0x281]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x50d
[0x50d:0x523]
---
Predecessors: [0x4fb]
Successors: [0x11ad]
---
0x50d PUSH1 0x40
0x50f MLOAD
0x510 PUSH3 0x461bcd
0x514 PUSH1 0xe5
0x516 SHL
0x517 DUP2
0x518 MSTORE
0x519 PUSH1 0x4
0x51b ADD
0x51c PUSH2 0x524
0x51f SWAP1
0x520 PUSH2 0x11ad
0x523 JUMP
---
0x50d: V379 = 0x40
0x50f: V380 = M[0x40]
0x510: V381 = 0x461bcd
0x514: V382 = 0xe5
0x516: V383 = SHL 0xe5 0x461bcd
0x518: M[V380] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x519: V384 = 0x4
0x51b: V385 = ADD 0x4 V380
0x51c: V386 = 0x524
0x520: V387 = 0x11ad
0x523: JUMP 0x11ad
---
Entry stack: []
Stack pops: 0
Stack additions: [0x524, V385]
Exit stack: [0x524, V385]

================================

Block 0x524
[0x524:0x52c]
---
Predecessors: [0x9bc, 0xf21, 0xf95, 0x11ad]
Successors: []
---
0x524 JUMPDEST
0x525 PUSH1 0x40
0x527 MLOAD
0x528 DUP1
0x529 SWAP2
0x52a SUB
0x52b SWAP1
0x52c REVERT
---
0x524: JUMPDEST 
0x525: V388 = 0x40
0x527: V389 = M[0x40]
0x52a: V390 = SUB S0 V389
0x52c: REVERT V389 V390
---
Entry stack: [S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S5, S4, S3, S2, S1]

================================

Block 0x52d
[0x52d:0x574]
---
Predecessors: [0x4fb]
Successors: []
Has unresolved jump.
---
0x52d JUMPDEST
0x52e MISSING 0x5f
0x52f DUP1
0x530 SLOAD
0x531 PUSH1 0x40
0x533 MLOAD
0x534 PUSH1 0x1
0x536 PUSH1 0x1
0x538 PUSH1 0xa0
0x53a SHL
0x53b SUB
0x53c SWAP1
0x53d SWAP2
0x53e AND
0x53f SWAP1
0x540 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x561 SWAP1
0x562 DUP4
0x563 SWAP1
0x564 LOG3
0x565 MISSING 0x5f
0x566 DUP1
0x567 SLOAD
0x568 PUSH1 0x1
0x56a PUSH1 0x1
0x56c PUSH1 0xa0
0x56e SHL
0x56f SUB
0x570 NOT
0x571 AND
0x572 SWAP1
0x573 SSTORE
0x574 JUMP
---
0x52d: JUMPDEST 
0x52e: MISSING 0x5f
0x530: V391 = S[S0]
0x531: V392 = 0x40
0x533: V393 = M[0x40]
0x534: V394 = 0x1
0x536: V395 = 0x1
0x538: V396 = 0xa0
0x53a: V397 = SHL 0xa0 0x1
0x53b: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53e: V399 = AND V391 0xffffffffffffffffffffffffffffffffffffffff
0x540: V400 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x564: LOG V393 S0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V399 S0
0x565: MISSING 0x5f
0x567: V401 = S[S0]
0x568: V402 = 0x1
0x56a: V403 = 0x1
0x56c: V404 = 0xa0
0x56e: V405 = SHL 0xa0 0x1
0x56f: V406 = SUB 0x10000000000000000000000000000000000000000 0x1
0x570: V407 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x571: V408 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V401
0x573: S[S0] = V408
0x574: JUMP S1
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x575
[0x575:0x586]
---
Predecessors: [0x28e]
Successors: [0x587, 0x59e]
---
0x575 JUMPDEST
0x576 MISSING 0x5f
0x577 SLOAD
0x578 PUSH1 0x1
0x57a PUSH1 0x1
0x57c PUSH1 0xa0
0x57e SHL
0x57f SUB
0x580 AND
0x581 CALLER
0x582 EQ
0x583 PUSH2 0x59e
0x586 JUMPI
---
0x575: JUMPDEST 
0x576: MISSING 0x5f
0x577: V409 = S[S0]
0x578: V410 = 0x1
0x57a: V411 = 0x1
0x57c: V412 = 0xa0
0x57e: V413 = SHL 0xa0 0x1
0x57f: V414 = SUB 0x10000000000000000000000000000000000000000 0x1
0x580: V415 = AND 0xffffffffffffffffffffffffffffffffffffffff V409
0x581: V416 = CALLER
0x582: V417 = EQ V416 V415
0x583: V418 = 0x59e
0x586: JUMPI 0x59e V417
---
Entry stack: [V8, 0x281]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x587
[0x587:0x59d]
---
Predecessors: [0x575]
Successors: [0x11ad]
---
0x587 PUSH1 0x40
0x589 MLOAD
0x58a PUSH3 0x461bcd
0x58e PUSH1 0xe5
0x590 SHL
0x591 DUP2
0x592 MSTORE
0x593 PUSH1 0x4
0x595 ADD
0x596 PUSH2 0x524
0x599 SWAP1
0x59a PUSH2 0x11ad
0x59d JUMP
---
0x587: V419 = 0x40
0x589: V420 = M[0x40]
0x58a: V421 = 0x461bcd
0x58e: V422 = 0xe5
0x590: V423 = SHL 0xe5 0x461bcd
0x592: M[V420] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x593: V424 = 0x4
0x595: V425 = ADD 0x4 V420
0x596: V426 = 0x524
0x59a: V427 = 0x11ad
0x59d: JUMP 0x11ad
---
Entry stack: []
Stack pops: 0
Stack additions: [0x524, V425]
Exit stack: [0x524, V425]

================================

Block 0x59e
[0x59e:0x5a5]
---
Predecessors: [0x575]
Successors: []
Has unresolved jump.
---
0x59e JUMPDEST
0x59f PUSH1 0x1
0x5a1 SLOAD
0x5a2 PUSH1 0xb
0x5a4 SSTORE
0x5a5 JUMP
---
0x59e: JUMPDEST 
0x59f: V428 = 0x1
0x5a1: V429 = S[0x1]
0x5a2: V430 = 0xb
0x5a4: S[0xb] = V429
0x5a5: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5a6
[0x5a6:0x5b1]
---
Predecessors: [0x32e]
Successors: [0x8f1]
---
0x5a6 JUMPDEST
0x5a7 MISSING 0x5f
0x5a8 PUSH2 0x4f4
0x5ab CALLER
0x5ac DUP5
0x5ad DUP5
0x5ae PUSH2 0x8f1
0x5b1 JUMP
---
0x5a6: JUMPDEST 
0x5a7: MISSING 0x5f
0x5a8: V431 = 0x4f4
0x5ab: V432 = CALLER
0x5ae: V433 = 0x8f1
0x5b1: JUMP 0x8f1
---
Entry stack: []
Stack pops: 0
Stack additions: [S1, S2, V432, 0x4f4, S0, S1, S2]
Exit stack: []

================================

Block 0x5b2
[0x5b2:0x5e0]
---
Predecessors: [0x33e]
Successors: [0x5e1, 0x5e8]
---
0x5b2 JUMPDEST
0x5b3 PUSH1 0x6
0x5b5 SLOAD
0x5b6 PUSH1 0x40
0x5b8 MLOAD
0x5b9 PUSH1 0x1
0x5bb PUSH1 0x1
0x5bd PUSH1 0xa0
0x5bf SHL
0x5c0 SUB
0x5c1 SWAP1
0x5c2 SWAP2
0x5c3 AND
0x5c4 SWAP1
0x5c5 MISSING 0x47
0x5c6 DUP1
0x5c7 ISZERO
0x5c8 PUSH2 0x8fc
0x5cb MUL
0x5cc SWAP2
0x5cd MISSING 0x5f
0x5ce DUP2
0x5cf DUP2
0x5d0 DUP2
0x5d1 DUP6
0x5d2 DUP9
0x5d3 DUP9
0x5d4 CALL
0x5d5 SWAP4
0x5d6 POP
0x5d7 POP
0x5d8 POP
0x5d9 POP
0x5da ISZERO
0x5db DUP1
0x5dc ISZERO
0x5dd PUSH2 0x5e8
0x5e0 JUMPI
---
0x5b2: JUMPDEST 
0x5b3: V434 = 0x6
0x5b5: V435 = S[0x6]
0x5b6: V436 = 0x40
0x5b8: V437 = M[0x40]
0x5b9: V438 = 0x1
0x5bb: V439 = 0x1
0x5bd: V440 = 0xa0
0x5bf: V441 = SHL 0xa0 0x1
0x5c0: V442 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c3: V443 = AND V435 0xffffffffffffffffffffffffffffffffffffffff
0x5c5: MISSING 0x47
0x5c7: V444 = ISZERO S0
0x5c8: V445 = 0x8fc
0x5cb: V446 = MUL 0x8fc V444
0x5cd: MISSING 0x5f
0x5d4: V447 = CALL S3 S4 S2 S1 S0 S1 S0
0x5da: V448 = ISZERO V447
0x5dc: V449 = ISZERO V448
0x5dd: V450 = 0x5e8
0x5e0: JUMPI 0x5e8 V449
---
Entry stack: [V8, 0x281]
Stack pops: 0
Stack additions: [V443, V437, S1, S0, V446, V448]
Exit stack: []

================================

Block 0x5e1
[0x5e1:0x5e7]
---
Predecessors: [0x5b2]
Successors: []
---
0x5e1 RETURNDATASIZE
0x5e2 MISSING 0x5f
0x5e3 DUP1
0x5e4 RETURNDATACOPY
0x5e5 RETURNDATASIZE
0x5e6 MISSING 0x5f
0x5e7 REVERT
---
0x5e1: V451 = RETURNDATASIZE
0x5e2: MISSING 0x5f
0x5e4: RETURNDATACOPY S0 S0 S1
0x5e5: V452 = RETURNDATASIZE
0x5e6: MISSING 0x5f
0x5e7: REVERT S0 S1
---
Entry stack: [V448]
Stack pops: 0
Stack additions: [V451, V452]
Exit stack: []

================================

Block 0x5e8
[0x5e8:0x5ea]
---
Predecessors: [0x5b2, 0x10df]
Successors: [0x4f4, 0x110f, 0x113a, 0x114a, 0x1192, 0x11a2]
---
0x5e8 JUMPDEST
0x5e9 POP
0x5ea JUMP
---
0x5e8: JUMPDEST 
0x5ea: JUMP {0x4f4, 0x110f, 0x113a, 0x114a, 0x1192, 0x11a2}
---
Entry stack: [S7, S6, V1420, V1444, S3, S2, {0x4f4, 0x110f, 0x113a, 0x114a, 0x1192, 0x11a2}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [S7, S6, V1420, V1444, S3, S2]

================================

Block 0x5eb
[0x5eb:0x5fc]
---
Predecessors: [0x361]
Successors: [0x5fd, 0x614]
---
0x5eb JUMPDEST
0x5ec MISSING 0x5f
0x5ed SLOAD
0x5ee PUSH1 0x1
0x5f0 PUSH1 0x1
0x5f2 PUSH1 0xa0
0x5f4 SHL
0x5f5 SUB
0x5f6 AND
0x5f7 CALLER
0x5f8 EQ
0x5f9 PUSH2 0x614
0x5fc JUMPI
---
0x5eb: JUMPDEST 
0x5ec: MISSING 0x5f
0x5ed: V453 = S[S0]
0x5ee: V454 = 0x1
0x5f0: V455 = 0x1
0x5f2: V456 = 0xa0
0x5f4: V457 = SHL 0xa0 0x1
0x5f5: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f6: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x5f7: V460 = CALLER
0x5f8: V461 = EQ V460 V459
0x5f9: V462 = 0x614
0x5fc: JUMPI 0x614 V461
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x5fd
[0x5fd:0x613]
---
Predecessors: [0x5eb]
Successors: [0x11ad]
---
0x5fd PUSH1 0x40
0x5ff MLOAD
0x600 PUSH3 0x461bcd
0x604 PUSH1 0xe5
0x606 SHL
0x607 DUP2
0x608 MSTORE
0x609 PUSH1 0x4
0x60b ADD
0x60c PUSH2 0x524
0x60f SWAP1
0x610 PUSH2 0x11ad
0x613 JUMP
---
0x5fd: V463 = 0x40
0x5ff: V464 = M[0x40]
0x600: V465 = 0x461bcd
0x604: V466 = 0xe5
0x606: V467 = SHL 0xe5 0x461bcd
0x608: M[V464] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x609: V468 = 0x4
0x60b: V469 = ADD 0x4 V464
0x60c: V470 = 0x524
0x610: V471 = 0x11ad
0x613: JUMP 0x11ad
---
Entry stack: []
Stack pops: 0
Stack additions: [0x524, V469]
Exit stack: [0x524, V469]

================================

Block 0x614
[0x614:0x635]
---
Predecessors: [0x5eb]
Successors: []
Has unresolved jump.
---
0x614 JUMPDEST
0x615 PUSH1 0x6
0x617 DUP1
0x618 SLOAD
0x619 PUSH1 0x1
0x61b PUSH1 0x1
0x61d PUSH1 0xa0
0x61f SHL
0x620 SUB
0x621 NOT
0x622 AND
0x623 PUSH1 0x1
0x625 PUSH1 0x1
0x627 PUSH1 0xa0
0x629 SHL
0x62a SUB
0x62b SWAP3
0x62c SWAP1
0x62d SWAP3
0x62e AND
0x62f SWAP2
0x630 SWAP1
0x631 SWAP2
0x632 OR
0x633 SWAP1
0x634 SSTORE
0x635 JUMP
---
0x614: JUMPDEST 
0x615: V472 = 0x6
0x618: V473 = S[0x6]
0x619: V474 = 0x1
0x61b: V475 = 0x1
0x61d: V476 = 0xa0
0x61f: V477 = SHL 0xa0 0x1
0x620: V478 = SUB 0x10000000000000000000000000000000000000000 0x1
0x621: V479 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x622: V480 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V473
0x623: V481 = 0x1
0x625: V482 = 0x1
0x627: V483 = 0xa0
0x629: V484 = SHL 0xa0 0x1
0x62a: V485 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62e: V486 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x632: V487 = OR V486 V480
0x634: S[0x6] = V487
0x635: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x636
[0x636:0x647]
---
Predecessors: [0x3aa]
Successors: [0x648, 0x65f]
---
0x636 JUMPDEST
0x637 MISSING 0x5f
0x638 SLOAD
0x639 PUSH1 0x1
0x63b PUSH1 0x1
0x63d PUSH1 0xa0
0x63f SHL
0x640 SUB
0x641 AND
0x642 CALLER
0x643 EQ
0x644 PUSH2 0x65f
0x647 JUMPI
---
0x636: JUMPDEST 
0x637: MISSING 0x5f
0x638: V488 = S[S0]
0x639: V489 = 0x1
0x63b: V490 = 0x1
0x63d: V491 = 0xa0
0x63f: V492 = SHL 0xa0 0x1
0x640: V493 = SUB 0x10000000000000000000000000000000000000000 0x1
0x641: V494 = AND 0xffffffffffffffffffffffffffffffffffffffff V488
0x642: V495 = CALLER
0x643: V496 = EQ V495 V494
0x644: V497 = 0x65f
0x647: JUMPI 0x65f V496
---
Entry stack: [V8, 0x281]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x648
[0x648:0x65e]
---
Predecessors: [0x636]
Successors: [0x11ad]
---
0x648 PUSH1 0x40
0x64a MLOAD
0x64b PUSH3 0x461bcd
0x64f PUSH1 0xe5
0x651 SHL
0x652 DUP2
0x653 MSTORE
0x654 PUSH1 0x4
0x656 ADD
0x657 PUSH2 0x524
0x65a SWAP1
0x65b PUSH2 0x11ad
0x65e JUMP
---
0x648: V498 = 0x40
0x64a: V499 = M[0x40]
0x64b: V500 = 0x461bcd
0x64f: V501 = 0xe5
0x651: V502 = SHL 0xe5 0x461bcd
0x653: M[V499] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x654: V503 = 0x4
0x656: V504 = ADD 0x4 V499
0x657: V505 = 0x524
0x65b: V506 = 0x11ad
0x65e: JUMP 0x11ad
---
Entry stack: []
Stack pops: 0
Stack additions: [0x524, V504]
Exit stack: [0x524, V504]

================================

Block 0x65f
[0x65f:0x6a7]
---
Predecessors: [0x636]
Successors: [0x6a8, 0x6af]
---
0x65f JUMPDEST
0x660 PUSH1 0x9
0x662 MISSING 0x5f
0x663 SWAP1
0x664 SLOAD
0x665 SWAP1
0x666 PUSH2 0x100
0x669 EXP
0x66a SWAP1
0x66b DIV
0x66c PUSH1 0x1
0x66e PUSH1 0x1
0x670 PUSH1 0xa0
0x672 SHL
0x673 SUB
0x674 AND
0x675 PUSH1 0x1
0x677 PUSH1 0x1
0x679 PUSH1 0xa0
0x67b SHL
0x67c SUB
0x67d AND
0x67e PUSH4 0xc45a0155
0x683 PUSH1 0x40
0x685 MLOAD
0x686 DUP2
0x687 PUSH4 0xffffffff
0x68c AND
0x68d PUSH1 0xe0
0x68f SHL
0x690 DUP2
0x691 MSTORE
0x692 PUSH1 0x4
0x694 ADD
0x695 PUSH1 0x20
0x697 PUSH1 0x40
0x699 MLOAD
0x69a DUP1
0x69b DUP4
0x69c SUB
0x69d DUP2
0x69e DUP7
0x69f GAS
0x6a0 STATICCALL
0x6a1 ISZERO
0x6a2 DUP1
0x6a3 ISZERO
0x6a4 PUSH2 0x6af
0x6a7 JUMPI
---
0x65f: JUMPDEST 
0x660: V507 = 0x9
0x662: MISSING 0x5f
0x664: V508 = S[S1]
0x666: V509 = 0x100
0x669: V510 = EXP 0x100 S0
0x66b: V511 = DIV V508 V510
0x66c: V512 = 0x1
0x66e: V513 = 0x1
0x670: V514 = 0xa0
0x672: V515 = SHL 0xa0 0x1
0x673: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x674: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V511
0x675: V518 = 0x1
0x677: V519 = 0x1
0x679: V520 = 0xa0
0x67b: V521 = SHL 0xa0 0x1
0x67c: V522 = SUB 0x10000000000000000000000000000000000000000 0x1
0x67d: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V517
0x67e: V524 = 0xc45a0155
0x683: V525 = 0x40
0x685: V526 = M[0x40]
0x687: V527 = 0xffffffff
0x68c: V528 = AND 0xffffffff 0xc45a0155
0x68d: V529 = 0xe0
0x68f: V530 = SHL 0xe0 0xc45a0155
0x691: M[V526] = 0xc45a015500000000000000000000000000000000000000000000000000000000
0x692: V531 = 0x4
0x694: V532 = ADD 0x4 V526
0x695: V533 = 0x20
0x697: V534 = 0x40
0x699: V535 = M[0x40]
0x69c: V536 = SUB V532 V535
0x69f: V537 = GAS
0x6a0: V538 = STATICCALL V537 V523 V535 V536 V535 0x20
0x6a1: V539 = ISZERO V538
0x6a3: V540 = ISZERO V539
0x6a4: V541 = 0x6af
0x6a7: JUMPI 0x6af V540
---
Entry stack: []
Stack pops: 0
Stack additions: [0x9, V539, V532, 0xc45a0155, V523]
Exit stack: []

================================

Block 0x6a8
[0x6a8:0x6ae]
---
Predecessors: [0x65f]
Successors: []
---
0x6a8 RETURNDATASIZE
0x6a9 MISSING 0x5f
0x6aa DUP1
0x6ab RETURNDATACOPY
0x6ac RETURNDATASIZE
0x6ad MISSING 0x5f
0x6ae REVERT
---
0x6a8: V542 = RETURNDATASIZE
0x6a9: MISSING 0x5f
0x6ab: RETURNDATACOPY S0 S0 S1
0x6ac: V543 = RETURNDATASIZE
0x6ad: MISSING 0x5f
0x6ae: REVERT S0 S1
---
Entry stack: [V523, 0xc45a0155, V532, V539]
Stack pops: 0
Stack additions: [V542, V543]
Exit stack: []

================================

Block 0x6af
[0x6af:0x6d2]
---
Predecessors: [0x65f]
Successors: [0x11e2]
---
0x6af JUMPDEST
0x6b0 POP
0x6b1 POP
0x6b2 POP
0x6b3 POP
0x6b4 PUSH1 0x40
0x6b6 MLOAD
0x6b7 RETURNDATASIZE
0x6b8 PUSH1 0x1f
0x6ba NOT
0x6bb PUSH1 0x1f
0x6bd DUP3
0x6be ADD
0x6bf AND
0x6c0 DUP3
0x6c1 ADD
0x6c2 DUP1
0x6c3 PUSH1 0x40
0x6c5 MSTORE
0x6c6 POP
0x6c7 DUP2
0x6c8 ADD
0x6c9 SWAP1
0x6ca PUSH2 0x6d3
0x6cd SWAP2
0x6ce SWAP1
0x6cf PUSH2 0x11e2
0x6d2 JUMP
---
0x6af: JUMPDEST 
0x6b4: V544 = 0x40
0x6b6: V545 = M[0x40]
0x6b7: V546 = RETURNDATASIZE
0x6b8: V547 = 0x1f
0x6ba: V548 = NOT 0x1f
0x6bb: V549 = 0x1f
0x6be: V550 = ADD V546 0x1f
0x6bf: V551 = AND V550 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x6c1: V552 = ADD V545 V551
0x6c3: V553 = 0x40
0x6c5: M[0x40] = V552
0x6c8: V554 = ADD V545 V546
0x6ca: V555 = 0x6d3
0x6cf: V556 = 0x11e2
0x6d2: JUMP 0x11e2
---
Entry stack: [V523, 0xc45a0155, V532, V539]
Stack pops: 4
Stack additions: [0x6d3, V554, V545]
Exit stack: [0x6d3, V554, V545]

================================

Block 0x6d3
[0x6d3:0x729]
---
Predecessors: []
Successors: [0x72a, 0x731]
---
0x6d3 JUMPDEST
0x6d4 PUSH1 0x1
0x6d6 PUSH1 0x1
0x6d8 PUSH1 0xa0
0x6da SHL
0x6db SUB
0x6dc AND
0x6dd PUSH4 0xc9c65396
0x6e2 PUSH1 0x9
0x6e4 MISSING 0x5f
0x6e5 SWAP1
0x6e6 SLOAD
0x6e7 SWAP1
0x6e8 PUSH2 0x100
0x6eb EXP
0x6ec SWAP1
0x6ed DIV
0x6ee PUSH1 0x1
0x6f0 PUSH1 0x1
0x6f2 PUSH1 0xa0
0x6f4 SHL
0x6f5 SUB
0x6f6 AND
0x6f7 PUSH1 0x1
0x6f9 PUSH1 0x1
0x6fb PUSH1 0xa0
0x6fd SHL
0x6fe SUB
0x6ff AND
0x700 PUSH4 0xad5c4648
0x705 PUSH1 0x40
0x707 MLOAD
0x708 DUP2
0x709 PUSH4 0xffffffff
0x70e AND
0x70f PUSH1 0xe0
0x711 SHL
0x712 DUP2
0x713 MSTORE
0x714 PUSH1 0x4
0x716 ADD
0x717 PUSH1 0x20
0x719 PUSH1 0x40
0x71b MLOAD
0x71c DUP1
0x71d DUP4
0x71e SUB
0x71f DUP2
0x720 DUP7
0x721 GAS
0x722 STATICCALL
0x723 ISZERO
0x724 DUP1
0x725 ISZERO
0x726 PUSH2 0x731
0x729 JUMPI
---
0x6d3: JUMPDEST 
0x6d4: V557 = 0x1
0x6d6: V558 = 0x1
0x6d8: V559 = 0xa0
0x6da: V560 = SHL 0xa0 0x1
0x6db: V561 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6dc: V562 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x6dd: V563 = 0xc9c65396
0x6e2: V564 = 0x9
0x6e4: MISSING 0x5f
0x6e6: V565 = S[S1]
0x6e8: V566 = 0x100
0x6eb: V567 = EXP 0x100 S0
0x6ed: V568 = DIV V565 V567
0x6ee: V569 = 0x1
0x6f0: V570 = 0x1
0x6f2: V571 = 0xa0
0x6f4: V572 = SHL 0xa0 0x1
0x6f5: V573 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f6: V574 = AND 0xffffffffffffffffffffffffffffffffffffffff V568
0x6f7: V575 = 0x1
0x6f9: V576 = 0x1
0x6fb: V577 = 0xa0
0x6fd: V578 = SHL 0xa0 0x1
0x6fe: V579 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ff: V580 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0x700: V581 = 0xad5c4648
0x705: V582 = 0x40
0x707: V583 = M[0x40]
0x709: V584 = 0xffffffff
0x70e: V585 = AND 0xffffffff 0xad5c4648
0x70f: V586 = 0xe0
0x711: V587 = SHL 0xe0 0xad5c4648
0x713: M[V583] = 0xad5c464800000000000000000000000000000000000000000000000000000000
0x714: V588 = 0x4
0x716: V589 = ADD 0x4 V583
0x717: V590 = 0x20
0x719: V591 = 0x40
0x71b: V592 = M[0x40]
0x71e: V593 = SUB V589 V592
0x721: V594 = GAS
0x722: V595 = STATICCALL V594 V580 V592 V593 V592 0x20
0x723: V596 = ISZERO V595
0x725: V597 = ISZERO V596
0x726: V598 = 0x731
0x729: JUMPI 0x731 V597
---
Entry stack: []
Stack pops: 1
Stack additions: [V562, 0xc9c65396, V596, V589, 0xad5c4648, V580]
Exit stack: []

================================

Block 0x72a
[0x72a:0x730]
---
Predecessors: [0x6d3]
Successors: []
---
0x72a RETURNDATASIZE
0x72b MISSING 0x5f
0x72c DUP1
0x72d RETURNDATACOPY
0x72e RETURNDATASIZE
0x72f MISSING 0x5f
0x730 REVERT
---
0x72a: V599 = RETURNDATASIZE
0x72b: MISSING 0x5f
0x72d: RETURNDATACOPY S0 S0 S1
0x72e: V600 = RETURNDATASIZE
0x72f: MISSING 0x5f
0x730: REVERT S0 S1
---
Entry stack: [V580, 0xad5c4648, V589, V596]
Stack pops: 0
Stack additions: [V599, V600]
Exit stack: []

================================

Block 0x731
[0x731:0x754]
---
Predecessors: [0x6d3]
Successors: [0x11e2]
---
0x731 JUMPDEST
0x732 POP
0x733 POP
0x734 POP
0x735 POP
0x736 PUSH1 0x40
0x738 MLOAD
0x739 RETURNDATASIZE
0x73a PUSH1 0x1f
0x73c NOT
0x73d PUSH1 0x1f
0x73f DUP3
0x740 ADD
0x741 AND
0x742 DUP3
0x743 ADD
0x744 DUP1
0x745 PUSH1 0x40
0x747 MSTORE
0x748 POP
0x749 DUP2
0x74a ADD
0x74b SWAP1
0x74c PUSH2 0x755
0x74f SWAP2
0x750 SWAP1
0x751 PUSH2 0x11e2
0x754 JUMP
---
0x731: JUMPDEST 
0x736: V601 = 0x40
0x738: V602 = M[0x40]
0x739: V603 = RETURNDATASIZE
0x73a: V604 = 0x1f
0x73c: V605 = NOT 0x1f
0x73d: V606 = 0x1f
0x740: V607 = ADD V603 0x1f
0x741: V608 = AND V607 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x743: V609 = ADD V602 V608
0x745: V610 = 0x40
0x747: M[0x40] = V609
0x74a: V611 = ADD V602 V603
0x74c: V612 = 0x755
0x751: V613 = 0x11e2
0x754: JUMP 0x11e2
---
Entry stack: [V580, 0xad5c4648, V589, V596]
Stack pops: 4
Stack additions: [0x755, V611, V602]
Exit stack: [0x755, V611, V602]

================================

Block 0x755
[0x755:0x796]
---
Predecessors: []
Successors: [0x797, 0x79e]
---
0x755 JUMPDEST
0x756 PUSH1 0x40
0x758 MLOAD
0x759 PUSH1 0x1
0x75b PUSH1 0x1
0x75d PUSH1 0xe0
0x75f SHL
0x760 SUB
0x761 NOT
0x762 PUSH1 0xe0
0x764 DUP5
0x765 SWAP1
0x766 SHL
0x767 AND
0x768 DUP2
0x769 MSTORE
0x76a PUSH1 0x1
0x76c PUSH1 0x1
0x76e PUSH1 0xa0
0x770 SHL
0x771 SUB
0x772 SWAP1
0x773 SWAP2
0x774 AND
0x775 PUSH1 0x4
0x777 DUP3
0x778 ADD
0x779 MSTORE
0x77a ADDRESS
0x77b PUSH1 0x24
0x77d DUP3
0x77e ADD
0x77f MSTORE
0x780 PUSH1 0x44
0x782 ADD
0x783 PUSH1 0x20
0x785 PUSH1 0x40
0x787 MLOAD
0x788 DUP1
0x789 DUP4
0x78a SUB
0x78b DUP2
0x78c MISSING 0x5f
0x78d DUP8
0x78e GAS
0x78f CALL
0x790 ISZERO
0x791 DUP1
0x792 ISZERO
0x793 PUSH2 0x79e
0x796 JUMPI
---
0x755: JUMPDEST 
0x756: V614 = 0x40
0x758: V615 = M[0x40]
0x759: V616 = 0x1
0x75b: V617 = 0x1
0x75d: V618 = 0xe0
0x75f: V619 = SHL 0xe0 0x1
0x760: V620 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x761: V621 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x762: V622 = 0xe0
0x766: V623 = SHL 0xe0 S1
0x767: V624 = AND V623 0xffffffff00000000000000000000000000000000000000000000000000000000
0x769: M[V615] = V624
0x76a: V625 = 0x1
0x76c: V626 = 0x1
0x76e: V627 = 0xa0
0x770: V628 = SHL 0xa0 0x1
0x771: V629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x774: V630 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x775: V631 = 0x4
0x778: V632 = ADD V615 0x4
0x779: M[V632] = V630
0x77a: V633 = ADDRESS
0x77b: V634 = 0x24
0x77e: V635 = ADD V615 0x24
0x77f: M[V635] = V633
0x780: V636 = 0x44
0x782: V637 = ADD 0x44 V615
0x783: V638 = 0x20
0x785: V639 = 0x40
0x787: V640 = M[0x40]
0x78a: V641 = SUB V637 V640
0x78c: MISSING 0x5f
0x78e: V642 = GAS
0x78f: V643 = CALL V642 S7 S0 S1 S2 S3 S4
0x790: V644 = ISZERO V643
0x792: V645 = ISZERO V644
0x793: V646 = 0x79e
0x796: JUMPI 0x79e V645
---
Entry stack: []
Stack pops: 2
Stack additions: [S1, V637, 0x20, V640, V644, S5, S6, S7]
Exit stack: []

================================

Block 0x797
[0x797:0x79d]
---
Predecessors: [0x755]
Successors: []
---
0x797 RETURNDATASIZE
0x798 MISSING 0x5f
0x799 DUP1
0x79a RETURNDATACOPY
0x79b RETURNDATASIZE
0x79c MISSING 0x5f
0x79d REVERT
---
0x797: V647 = RETURNDATASIZE
0x798: MISSING 0x5f
0x79a: RETURNDATACOPY S0 S0 S1
0x79b: V648 = RETURNDATASIZE
0x79c: MISSING 0x5f
0x79d: REVERT S0 S1
---
Entry stack: [S3, S2, S1, V644]
Stack pops: 0
Stack additions: [V647, V648]
Exit stack: []

================================

Block 0x79e
[0x79e:0x7c1]
---
Predecessors: [0x755]
Successors: [0x11e2]
---
0x79e JUMPDEST
0x79f POP
0x7a0 POP
0x7a1 POP
0x7a2 POP
0x7a3 PUSH1 0x40
0x7a5 MLOAD
0x7a6 RETURNDATASIZE
0x7a7 PUSH1 0x1f
0x7a9 NOT
0x7aa PUSH1 0x1f
0x7ac DUP3
0x7ad ADD
0x7ae AND
0x7af DUP3
0x7b0 ADD
0x7b1 DUP1
0x7b2 PUSH1 0x40
0x7b4 MSTORE
0x7b5 POP
0x7b6 DUP2
0x7b7 ADD
0x7b8 SWAP1
0x7b9 PUSH2 0x7c2
0x7bc SWAP2
0x7bd SWAP1
0x7be PUSH2 0x11e2
0x7c1 JUMP
---
0x79e: JUMPDEST 
0x7a3: V649 = 0x40
0x7a5: V650 = M[0x40]
0x7a6: V651 = RETURNDATASIZE
0x7a7: V652 = 0x1f
0x7a9: V653 = NOT 0x1f
0x7aa: V654 = 0x1f
0x7ad: V655 = ADD V651 0x1f
0x7ae: V656 = AND V655 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x7b0: V657 = ADD V650 V656
0x7b2: V658 = 0x40
0x7b4: M[0x40] = V657
0x7b7: V659 = ADD V650 V651
0x7b9: V660 = 0x7c2
0x7be: V661 = 0x11e2
0x7c1: JUMP 0x11e2
---
Entry stack: [S3, S2, S1, V644]
Stack pops: 4
Stack additions: [0x7c2, V659, V650]
Exit stack: [0x7c2, V659, V650]

================================

Block 0x7c2
[0x7c2:0x87a]
---
Predecessors: []
Successors: [0x87b, 0x882]
---
0x7c2 JUMPDEST
0x7c3 PUSH1 0xa
0x7c5 DUP1
0x7c6 SLOAD
0x7c7 PUSH1 0x1
0x7c9 PUSH1 0x1
0x7cb PUSH1 0xa0
0x7cd SHL
0x7ce SUB
0x7cf SWAP3
0x7d0 DUP4
0x7d1 AND
0x7d2 PUSH1 0x1
0x7d4 PUSH1 0x1
0x7d6 PUSH1 0xa0
0x7d8 SHL
0x7d9 SUB
0x7da NOT
0x7db SWAP1
0x7dc SWAP2
0x7dd AND
0x7de OR
0x7df SWAP1
0x7e0 SSTORE
0x7e1 PUSH1 0x9
0x7e3 SLOAD
0x7e4 AND
0x7e5 PUSH4 0xf305d719
0x7ea CALLVALUE
0x7eb ADDRESS
0x7ec PUSH2 0x809
0x7ef DUP2
0x7f0 PUSH1 0x1
0x7f2 PUSH1 0x1
0x7f4 PUSH1 0xa0
0x7f6 SHL
0x7f7 SUB
0x7f8 AND
0x7f9 MISSING 0x5f
0x7fa SWAP1
0x7fb DUP2
0x7fc MSTORE
0x7fd PUSH1 0x2
0x7ff PUSH1 0x20
0x801 MSTORE
0x802 PUSH1 0x40
0x804 SWAP1
0x805 SHA3
0x806 SLOAD
0x807 SWAP1
0x808 JUMP
0x809 JUMPDEST
0x80a MISSING 0x5f
0x80b DUP1
0x80c PUSH2 0x81c
0x80f MISSING 0x5f
0x810 SLOAD
0x811 PUSH1 0x1
0x813 PUSH1 0x1
0x815 PUSH1 0xa0
0x817 SHL
0x818 SUB
0x819 AND
0x81a SWAP1
0x81b JUMP
0x81c JUMPDEST
0x81d PUSH1 0x40
0x81f MLOAD
0x820 PUSH1 0xe0
0x822 DUP9
0x823 SWAP1
0x824 SHL
0x825 PUSH1 0x1
0x827 PUSH1 0x1
0x829 PUSH1 0xe0
0x82b SHL
0x82c SUB
0x82d NOT
0x82e AND
0x82f DUP2
0x830 MSTORE
0x831 PUSH1 0x1
0x833 PUSH1 0x1
0x835 PUSH1 0xa0
0x837 SHL
0x838 SUB
0x839 SWAP6
0x83a DUP7
0x83b AND
0x83c PUSH1 0x4
0x83e DUP3
0x83f ADD
0x840 MSTORE
0x841 PUSH1 0x24
0x843 DUP2
0x844 ADD
0x845 SWAP5
0x846 SWAP1
0x847 SWAP5
0x848 MSTORE
0x849 PUSH1 0x44
0x84b DUP5
0x84c ADD
0x84d SWAP3
0x84e SWAP1
0x84f SWAP3
0x850 MSTORE
0x851 PUSH1 0x64
0x853 DUP4
0x854 ADD
0x855 MSTORE
0x856 SWAP1
0x857 SWAP2
0x858 AND
0x859 PUSH1 0x84
0x85b DUP3
0x85c ADD
0x85d MSTORE
0x85e TIMESTAMP
0x85f PUSH1 0xa4
0x861 DUP3
0x862 ADD
0x863 MSTORE
0x864 PUSH1 0xc4
0x866 ADD
0x867 PUSH1 0x60
0x869 PUSH1 0x40
0x86b MLOAD
0x86c DUP1
0x86d DUP4
0x86e SUB
0x86f DUP2
0x870 DUP6
0x871 DUP9
0x872 GAS
0x873 CALL
0x874 ISZERO
0x875 DUP1
0x876 ISZERO
0x877 PUSH2 0x882
0x87a JUMPI
---
0x7c2: JUMPDEST 
0x7c3: V662 = 0xa
0x7c6: V663 = S[0xa]
0x7c7: V664 = 0x1
0x7c9: V665 = 0x1
0x7cb: V666 = 0xa0
0x7cd: V667 = SHL 0xa0 0x1
0x7ce: V668 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d1: V669 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7d2: V670 = 0x1
0x7d4: V671 = 0x1
0x7d6: V672 = 0xa0
0x7d8: V673 = SHL 0xa0 0x1
0x7d9: V674 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7da: V675 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x7dd: V676 = AND V663 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x7de: V677 = OR V676 V669
0x7e0: S[0xa] = V677
0x7e1: V678 = 0x9
0x7e3: V679 = S[0x9]
0x7e4: V680 = AND V679 0xffffffffffffffffffffffffffffffffffffffff
0x7e5: V681 = 0xf305d719
0x7ea: V682 = CALLVALUE
0x7eb: V683 = ADDRESS
0x7ec: V684 = 0x809
0x7f0: V685 = 0x1
0x7f2: V686 = 0x1
0x7f4: V687 = 0xa0
0x7f6: V688 = SHL 0xa0 0x1
0x7f7: V689 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f8: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff V683
0x7f9: MISSING 0x5f
0x7fc: M[S0] = S1
0x7fd: V691 = 0x2
0x7ff: V692 = 0x20
0x801: M[0x20] = 0x2
0x802: V693 = 0x40
0x805: V694 = SHA3 S0 0x40
0x806: V695 = S[V694]
0x808: JUMP S2
0x809: JUMPDEST 
0x80a: MISSING 0x5f
0x80c: V696 = 0x81c
0x80f: MISSING 0x5f
0x810: V697 = S[S0]
0x811: V698 = 0x1
0x813: V699 = 0x1
0x815: V700 = 0xa0
0x817: V701 = SHL 0xa0 0x1
0x818: V702 = SUB 0x10000000000000000000000000000000000000000 0x1
0x819: V703 = AND 0xffffffffffffffffffffffffffffffffffffffff V697
0x81b: JUMP S1
0x81c: JUMPDEST 
0x81d: V704 = 0x40
0x81f: V705 = M[0x40]
0x820: V706 = 0xe0
0x824: V707 = SHL 0xe0 S6
0x825: V708 = 0x1
0x827: V709 = 0x1
0x829: V710 = 0xe0
0x82b: V711 = SHL 0xe0 0x1
0x82c: V712 = SUB 0x100000000000000000000000000000000000000000000000000000000 0x1
0x82d: V713 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x82e: V714 = AND 0xffffffff00000000000000000000000000000000000000000000000000000000 V707
0x830: M[V705] = V714
0x831: V715 = 0x1
0x833: V716 = 0x1
0x835: V717 = 0xa0
0x837: V718 = SHL 0xa0 0x1
0x838: V719 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83b: V720 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0x83c: V721 = 0x4
0x83f: V722 = ADD V705 0x4
0x840: M[V722] = V720
0x841: V723 = 0x24
0x844: V724 = ADD V705 0x24
0x848: M[V724] = S3
0x849: V725 = 0x44
0x84c: V726 = ADD V705 0x44
0x850: M[V726] = S2
0x851: V727 = 0x64
0x854: V728 = ADD V705 0x64
0x855: M[V728] = S1
0x858: V729 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x859: V730 = 0x84
0x85c: V731 = ADD V705 0x84
0x85d: M[V731] = V729
0x85e: V732 = TIMESTAMP
0x85f: V733 = 0xa4
0x862: V734 = ADD V705 0xa4
0x863: M[V734] = V732
0x864: V735 = 0xc4
0x866: V736 = ADD 0xc4 V705
0x867: V737 = 0x60
0x869: V738 = 0x40
0x86b: V739 = M[0x40]
0x86e: V740 = SUB V736 V739
0x872: V741 = GAS
0x873: V742 = CALL V741 S7 S5 V739 V740 V739 0x60
0x874: V743 = ISZERO V742
0x876: V744 = ISZERO V743
0x877: V745 = 0x882
0x87a: JUMPI 0x882 V744
---
Entry stack: []
Stack pops: 1
Stack additions: [V680, 0xf305d719, V682, V683, 0x81c, S0, V743, V736, S5, S6, S7]
Exit stack: []

================================

Block 0x87b
[0x87b:0x881]
---
Predecessors: [0x7c2]
Successors: []
---
0x87b RETURNDATASIZE
0x87c MISSING 0x5f
0x87d DUP1
0x87e RETURNDATACOPY
0x87f RETURNDATASIZE
0x880 MISSING 0x5f
0x881 REVERT
---
0x87b: V746 = RETURNDATASIZE
0x87c: MISSING 0x5f
0x87e: RETURNDATACOPY S0 S0 S1
0x87f: V747 = RETURNDATASIZE
0x880: MISSING 0x5f
0x881: REVERT S0 S1
---
Entry stack: [S4, S3, S2, V736, V743]
Stack pops: 0
Stack additions: [V746, V747]
Exit stack: []

================================

Block 0x882
[0x882:0x8a6]
---
Predecessors: [0x7c2]
Successors: [0x11fd]
---
0x882 JUMPDEST
0x883 POP
0x884 POP
0x885 POP
0x886 POP
0x887 POP
0x888 PUSH1 0x40
0x88a MLOAD
0x88b RETURNDATASIZE
0x88c PUSH1 0x1f
0x88e NOT
0x88f PUSH1 0x1f
0x891 DUP3
0x892 ADD
0x893 AND
0x894 DUP3
0x895 ADD
0x896 DUP1
0x897 PUSH1 0x40
0x899 MSTORE
0x89a POP
0x89b DUP2
0x89c ADD
0x89d SWAP1
0x89e PUSH2 0x8a7
0x8a1 SWAP2
0x8a2 SWAP1
0x8a3 PUSH2 0x11fd
0x8a6 JUMP
---
0x882: JUMPDEST 
0x888: V748 = 0x40
0x88a: V749 = M[0x40]
0x88b: V750 = RETURNDATASIZE
0x88c: V751 = 0x1f
0x88e: V752 = NOT 0x1f
0x88f: V753 = 0x1f
0x892: V754 = ADD V750 0x1f
0x893: V755 = AND V754 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x895: V756 = ADD V749 V755
0x897: V757 = 0x40
0x899: M[0x40] = V756
0x89c: V758 = ADD V749 V750
0x89e: V759 = 0x8a7
0x8a3: V760 = 0x11fd
0x8a6: JUMP 0x11fd
---
Entry stack: [S4, S3, S2, V736, V743]
Stack pops: 5
Stack additions: [0x8a7, V758, V749]
Exit stack: [0x8a7, V758, V749]

================================

Block 0x8a7
[0x8a7:0x8b8]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0x8a7 JUMPDEST
0x8a8 POP
0x8a9 POP
0x8aa PUSH1 0xd
0x8ac DUP1
0x8ad SLOAD
0x8ae PUSH1 0xff
0x8b0 NOT
0x8b1 AND
0x8b2 PUSH1 0x1
0x8b4 OR
0x8b5 SWAP1
0x8b6 SSTORE
0x8b7 POP
0x8b8 JUMP
---
0x8a7: JUMPDEST 
0x8aa: V761 = 0xd
0x8ad: V762 = S[0xd]
0x8ae: V763 = 0xff
0x8b0: V764 = NOT 0xff
0x8b1: V765 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V762
0x8b2: V766 = 0x1
0x8b4: V767 = OR 0x1 V765
0x8b6: S[0xd] = V767
0x8b8: JUMP S3
---
Entry stack: []
Stack pops: 4
Stack additions: []
Exit stack: []

================================

Block 0x8b9
[0x8b9:0x8c3]
---
Predecessors: [0x468, 0xaae, 0xbd2, 0x1027]
Successors: [0x8c4, 0x8dc]
---
0x8b9 JUMPDEST
0x8ba MISSING 0x5f
0x8bb DUP2
0x8bc DUP5
0x8bd DUP5
0x8be GT
0x8bf ISZERO
0x8c0 PUSH2 0x8dc
0x8c3 JUMPI
---
0x8b9: JUMPDEST 
0x8ba: MISSING 0x5f
0x8be: V768 = GT S2 S3
0x8bf: V769 = ISZERO V768
0x8c0: V770 = 0x8dc
0x8c3: JUMPI 0x8dc V769
---
Entry stack: [S6, S5, S4, {0x4c2, 0x4f4, 0xafe, 0xc22}, S2, S1, V1350]
Stack pops: 0
Stack additions: [S1, S0, S1, S2, S3]
Exit stack: []

================================

Block 0x8c4
[0x8c4:0x8db]
---
Predecessors: [0x8b9]
Successors: [0x1094]
---
0x8c4 PUSH1 0x40
0x8c6 MLOAD
0x8c7 PUSH3 0x461bcd
0x8cb PUSH1 0xe5
0x8cd SHL
0x8ce DUP2
0x8cf MSTORE
0x8d0 PUSH1 0x4
0x8d2 ADD
0x8d3 PUSH2 0x524
0x8d6 SWAP2
0x8d7 SWAP1
0x8d8 PUSH2 0x1094
0x8db JUMP
---
0x8c4: V771 = 0x40
0x8c6: V772 = M[0x40]
0x8c7: V773 = 0x461bcd
0x8cb: V774 = 0xe5
0x8cd: V775 = SHL 0xe5 0x461bcd
0x8cf: M[V772] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8d0: V776 = 0x4
0x8d2: V777 = ADD 0x4 V772
0x8d3: V778 = 0x524
0x8d8: V779 = 0x1094
0x8db: JUMP 0x1094
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x524, S0, V777]
Exit stack: [S4, S3, S2, S1, 0x524, S0, V777]

================================

Block 0x8dc
[0x8dc:0x8e7]
---
Predecessors: [0x8b9]
Successors: [0x123c]
---
0x8dc JUMPDEST
0x8dd POP
0x8de MISSING 0x5f
0x8df PUSH2 0x8e8
0x8e2 DUP5
0x8e3 DUP7
0x8e4 PUSH2 0x123c
0x8e7 JUMP
---
0x8dc: JUMPDEST 
0x8de: MISSING 0x5f
0x8df: V780 = 0x8e8
0x8e4: V781 = 0x123c
0x8e7: JUMP 0x123c
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S4, S3, 0x8e8, S0, S1, S2, S3, S4]
Exit stack: []

================================

Block 0x8e8
[0x8e8:0x8f0]
---
Predecessors: [0x437]
Successors: []
Has unresolved jump.
---
0x8e8 JUMPDEST
0x8e9 SWAP6
0x8ea SWAP5
0x8eb POP
0x8ec POP
0x8ed POP
0x8ee POP
0x8ef POP
0x8f0 JUMP
---
0x8e8: JUMPDEST 
0x8f0: JUMP S6
---
Entry stack: [S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x8f1
[0x8f1:0x903]
---
Predecessors: [0x4e6, 0x5a6]
Successors: [0x904, 0x915]
---
0x8f1 JUMPDEST
0x8f2 PUSH1 0xd
0x8f4 SLOAD
0x8f5 MISSING 0x5f
0x8f6 SWAP1
0x8f7 PUSH2 0x100
0x8fa SWAP1
0x8fb DIV
0x8fc PUSH1 0xff
0x8fe AND
0x8ff ISZERO
0x900 PUSH2 0x915
0x903 JUMPI
---
0x8f1: JUMPDEST 
0x8f2: V782 = 0xd
0x8f4: V783 = S[0xd]
0x8f5: MISSING 0x5f
0x8f7: V784 = 0x100
0x8fb: V785 = DIV S1 0x100
0x8fc: V786 = 0xff
0x8fe: V787 = AND 0xff V785
0x8ff: V788 = ISZERO V787
0x900: V789 = 0x915
0x903: JUMPI 0x915 V788
---
Entry stack: [S7, S6, S5, S4, {0x4f1, 0x4f4}, V432, S1, S0]
Stack pops: 0
Stack additions: [V783, S0]
Exit stack: []

================================

Block 0x904
[0x904:0x90d]
---
Predecessors: [0x8f1]
Successors: [0xbd2]
---
0x904 PUSH2 0x90e
0x907 DUP5
0x908 DUP5
0x909 DUP5
0x90a PUSH2 0xbd2
0x90d JUMP
---
0x904: V790 = 0x90e
0x90a: V791 = 0xbd2
0x90d: JUMP 0xbd2
---
Entry stack: [S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x90e, S3, S2, S1]
Exit stack: [S2, S1, S0, S0, 0x90e, S2, S1, S0]

================================

Block 0x90e
[0x90e:0x914]
---
Predecessors: []
Successors: [0x4f4]
---
0x90e JUMPDEST
0x90f SWAP1
0x910 POP
0x911 PUSH2 0x4f4
0x914 JUMP
---
0x90e: JUMPDEST 
0x911: V792 = 0x4f4
0x914: JUMP 0x4f4
---
Entry stack: []
Stack pops: 2
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0x915
[0x915:0x928]
---
Predecessors: [0x8f1]
Successors: [0x929, 0x937]
---
0x915 JUMPDEST
0x916 PUSH1 0x1
0x918 PUSH1 0x1
0x91a PUSH1 0xa0
0x91c SHL
0x91d SUB
0x91e DUP5
0x91f AND
0x920 ADDRESS
0x921 EQ
0x922 DUP1
0x923 ISZERO
0x924 SWAP1
0x925 PUSH2 0x937
0x928 JUMPI
---
0x915: JUMPDEST 
0x916: V793 = 0x1
0x918: V794 = 0x1
0x91a: V795 = 0xa0
0x91c: V796 = SHL 0xa0 0x1
0x91d: V797 = SUB 0x10000000000000000000000000000000000000000 0x1
0x91f: V798 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x920: V799 = ADDRESS
0x921: V800 = EQ V799 V798
0x923: V801 = ISZERO V800
0x925: V802 = 0x937
0x928: JUMPI 0x937 V800
---
Entry stack: [S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V801]
Exit stack: [S2, S1, S0, S0, V801]

================================

Block 0x929
[0x929:0x936]
---
Predecessors: [0x915]
Successors: [0x937]
---
0x929 POP
0x92a PUSH1 0x1
0x92c PUSH1 0x1
0x92e PUSH1 0xa0
0x930 SHL
0x931 SUB
0x932 DUP4
0x933 AND
0x934 ADDRESS
0x935 EQ
0x936 ISZERO
---
0x92a: V803 = 0x1
0x92c: V804 = 0x1
0x92e: V805 = 0xa0
0x930: V806 = SHL 0xa0 0x1
0x931: V807 = SUB 0x10000000000000000000000000000000000000000 0x1
0x933: V808 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x934: V809 = ADDRESS
0x935: V810 = EQ V809 V808
0x936: V811 = ISZERO V810
---
Entry stack: [S4, S3, S2, S1, V801]
Stack pops: 4
Stack additions: [S3, S2, S1, V811]
Exit stack: [S4, S3, S2, S1, V811]

================================

Block 0x937
[0x937:0x93d]
---
Predecessors: [0x915, 0x929]
Successors: [0x93e, 0x951]
---
0x937 JUMPDEST
0x938 DUP1
0x939 ISZERO
0x93a PUSH2 0x951
0x93d JUMPI
---
0x937: JUMPDEST 
0x939: V812 = ISZERO S0
0x93a: V813 = 0x951
0x93d: JUMPI 0x951 V812
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S4, S3, S2, S1, S0]

================================

Block 0x93e
[0x93e:0x950]
---
Predecessors: [0x937]
Successors: [0x951]
---
0x93e POP
0x93f PUSH1 0xa
0x941 SLOAD
0x942 PUSH1 0x1
0x944 PUSH1 0x1
0x946 PUSH1 0xa0
0x948 SHL
0x949 SUB
0x94a DUP5
0x94b DUP2
0x94c AND
0x94d SWAP2
0x94e AND
0x94f EQ
0x950 ISZERO
---
0x93f: V814 = 0xa
0x941: V815 = S[0xa]
0x942: V816 = 0x1
0x944: V817 = 0x1
0x946: V818 = 0xa0
0x948: V819 = SHL 0xa0 0x1
0x949: V820 = SUB 0x10000000000000000000000000000000000000000 0x1
0x94c: V821 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x94e: V822 = AND V815 0xffffffffffffffffffffffffffffffffffffffff
0x94f: V823 = EQ V822 V821
0x950: V824 = ISZERO V823
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V824]
Exit stack: [S4, S3, S2, S1, V824]

================================

Block 0x951
[0x951:0x957]
---
Predecessors: [0x937, 0x93e]
Successors: [0x958, 0x968]
---
0x951 JUMPDEST
0x952 DUP1
0x953 ISZERO
0x954 PUSH2 0x968
0x957 JUMPI
---
0x951: JUMPDEST 
0x953: V825 = ISZERO S0
0x954: V826 = 0x968
0x957: JUMPI 0x968 V825
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S4, S3, S2, S1, S0]

================================

Block 0x958
[0x958:0x967]
---
Predecessors: [0x951]
Successors: [0x968]
---
0x958 POP
0x959 PUSH1 0x1
0x95b PUSH1 0x1
0x95d PUSH1 0xa0
0x95f SHL
0x960 SUB
0x961 DUP4
0x962 AND
0x963 PUSH2 0xdead
0x966 EQ
0x967 ISZERO
---
0x959: V827 = 0x1
0x95b: V828 = 0x1
0x95d: V829 = 0xa0
0x95f: V830 = SHL 0xa0 0x1
0x960: V831 = SUB 0x10000000000000000000000000000000000000000 0x1
0x962: V832 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x963: V833 = 0xdead
0x966: V834 = EQ 0xdead V832
0x967: V835 = ISZERO V834
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V835]
Exit stack: [S4, S3, S2, S1, V835]

================================

Block 0x968
[0x968:0x96d]
---
Predecessors: [0x951, 0x958]
Successors: [0x96e, 0xa11]
---
0x968 JUMPDEST
0x969 ISZERO
0x96a PUSH2 0xa11
0x96d JUMPI
---
0x968: JUMPDEST 
0x969: V836 = ISZERO S0
0x96a: V837 = 0xa11
0x96d: JUMPI 0xa11 V836
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S4, S3, S2, S1]

================================

Block 0x96e
[0x96e:0x98d]
---
Predecessors: [0x968]
Successors: [0x98e, 0x9b7]
---
0x96e PUSH1 0x1
0x970 PUSH1 0x1
0x972 PUSH1 0xa0
0x974 SHL
0x975 SUB
0x976 DUP4
0x977 AND
0x978 MISSING 0x5f
0x979 SWAP1
0x97a DUP2
0x97b MSTORE
0x97c PUSH1 0x5
0x97e PUSH1 0x20
0x980 MSTORE
0x981 PUSH1 0x40
0x983 SWAP1
0x984 SHA3
0x985 SLOAD
0x986 PUSH1 0xff
0x988 AND
0x989 DUP1
0x98a PUSH2 0x9b7
0x98d JUMPI
---
0x96e: V838 = 0x1
0x970: V839 = 0x1
0x972: V840 = 0xa0
0x974: V841 = SHL 0xa0 0x1
0x975: V842 = SUB 0x10000000000000000000000000000000000000000 0x1
0x977: V843 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x978: MISSING 0x5f
0x97b: M[S0] = S1
0x97c: V844 = 0x5
0x97e: V845 = 0x20
0x980: M[0x20] = 0x5
0x981: V846 = 0x40
0x984: V847 = SHA3 S0 0x40
0x985: V848 = S[V847]
0x986: V849 = 0xff
0x988: V850 = AND 0xff V848
0x98a: V851 = 0x9b7
0x98d: JUMPI 0x9b7 V850
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, V850]
Exit stack: []

================================

Block 0x98e
[0x98e:0x9b3]
---
Predecessors: [0x96e]
Successors: [0x124f]
---
0x98e POP
0x98f PUSH1 0xb
0x991 SLOAD
0x992 PUSH1 0x1
0x994 PUSH1 0x1
0x996 PUSH1 0xa0
0x998 SHL
0x999 SUB
0x99a DUP5
0x99b AND
0x99c MISSING 0x5f
0x99d SWAP1
0x99e DUP2
0x99f MSTORE
0x9a0 PUSH1 0x2
0x9a2 PUSH1 0x20
0x9a4 MSTORE
0x9a5 PUSH1 0x40
0x9a7 SWAP1
0x9a8 SHA3
0x9a9 SLOAD
0x9aa PUSH2 0x9b4
0x9ad SWAP1
0x9ae DUP5
0x9af SWAP1
0x9b0 PUSH2 0x124f
0x9b3 JUMP
---
0x98f: V852 = 0xb
0x991: V853 = S[0xb]
0x992: V854 = 0x1
0x994: V855 = 0x1
0x996: V856 = 0xa0
0x998: V857 = SHL 0xa0 0x1
0x999: V858 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99b: V859 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x99c: MISSING 0x5f
0x99f: M[S0] = S1
0x9a0: V860 = 0x2
0x9a2: V861 = 0x20
0x9a4: M[0x20] = 0x2
0x9a5: V862 = 0x40
0x9a8: V863 = SHA3 S0 0x40
0x9a9: V864 = S[V863]
0x9aa: V865 = 0x9b4
0x9b0: V866 = 0x124f
0x9b3: JUMP 0x124f
---
Entry stack: [V850]
Stack pops: 4
Stack additions: [S3, V864, S4, 0x9b4, S2, S3, S4]
Exit stack: []

================================

Block 0x9b4
[0x9b4:0x9b6]
---
Predecessors: [0x437]
Successors: [0x9b7]
---
0x9b4 JUMPDEST
0x9b5 GT
0x9b6 ISZERO
---
0x9b4: JUMPDEST 
0x9b5: V867 = GT S0 S1
0x9b6: V868 = ISZERO V867
---
Entry stack: [S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [V868]
Exit stack: [S5, S4, S3, S2, V868]

================================

Block 0x9b7
[0x9b7:0x9bb]
---
Predecessors: [0x96e, 0x9b4]
Successors: [0x9bc, 0xa11]
---
0x9b7 JUMPDEST
0x9b8 PUSH2 0xa11
0x9bb JUMPI
---
0x9b7: JUMPDEST 
0x9b8: V869 = 0xa11
0x9bb: JUMPI 0xa11 S0
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [S4, S3, S2, S1]

================================

Block 0x9bc
[0x9bc:0xa10]
---
Predecessors: [0x9b7]
Successors: [0x524]
---
0x9bc PUSH1 0x40
0x9be MLOAD
0x9bf PUSH3 0x461bcd
0x9c3 PUSH1 0xe5
0x9c5 SHL
0x9c6 DUP2
0x9c7 MSTORE
0x9c8 PUSH1 0x20
0x9ca PUSH1 0x4
0x9cc DUP3
0x9cd ADD
0x9ce MSTORE
0x9cf PUSH1 0x25
0x9d1 PUSH1 0x24
0x9d3 DUP3
0x9d4 ADD
0x9d5 MSTORE
0x9d6 PUSH32 0x5472616e7366657220616d6f756e742065786365656473207468652062616720
0x9f7 PUSH1 0x44
0x9f9 DUP3
0x9fa ADD
0x9fb MSTORE
0x9fc PUSH5 0x39b4bd3297
0xa02 PUSH1 0xd9
0xa04 SHL
0xa05 PUSH1 0x64
0xa07 DUP3
0xa08 ADD
0xa09 MSTORE
0xa0a PUSH1 0x84
0xa0c ADD
0xa0d PUSH2 0x524
0xa10 JUMP
---
0x9bc: V870 = 0x40
0x9be: V871 = M[0x40]
0x9bf: V872 = 0x461bcd
0x9c3: V873 = 0xe5
0x9c5: V874 = SHL 0xe5 0x461bcd
0x9c7: M[V871] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x9c8: V875 = 0x20
0x9ca: V876 = 0x4
0x9cd: V877 = ADD V871 0x4
0x9ce: M[V877] = 0x20
0x9cf: V878 = 0x25
0x9d1: V879 = 0x24
0x9d4: V880 = ADD V871 0x24
0x9d5: M[V880] = 0x25
0x9d6: V881 = 0x5472616e7366657220616d6f756e742065786365656473207468652062616720
0x9f7: V882 = 0x44
0x9fa: V883 = ADD V871 0x44
0x9fb: M[V883] = 0x5472616e7366657220616d6f756e742065786365656473207468652062616720
0x9fc: V884 = 0x39b4bd3297
0xa02: V885 = 0xd9
0xa04: V886 = SHL 0xd9 0x39b4bd3297
0xa05: V887 = 0x64
0xa08: V888 = ADD V871 0x64
0xa09: M[V888] = 0x73697a652e000000000000000000000000000000000000000000000000000000
0xa0a: V889 = 0x84
0xa0c: V890 = ADD 0x84 V871
0xa0d: V891 = 0x524
0xa10: JUMP 0x524
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V890]
Exit stack: [S3, S2, S1, S0, V890]

================================

Block 0xa11
[0xa11:0xa18]
---
Predecessors: [0x968, 0x9b7]
Successors: [0xcb5]
---
0xa11 JUMPDEST
0xa12 PUSH2 0xa19
0xa15 PUSH2 0xcb5
0xa18 JUMP
---
0xa11: JUMPDEST 
0xa12: V892 = 0xa19
0xa15: V893 = 0xcb5
0xa18: JUMP 0xcb5
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0xa19]
Exit stack: [S3, S2, S1, S0, 0xa19]

================================

Block 0xa19
[0xa19:0xa1e]
---
Predecessors: []
Successors: [0xa1f, 0xa26]
---
0xa19 JUMPDEST
0xa1a ISZERO
0xa1b PUSH2 0xa26
0xa1e JUMPI
---
0xa19: JUMPDEST 
0xa1a: V894 = ISZERO S0
0xa1b: V895 = 0xa26
0xa1e: JUMPI 0xa26 V894
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xa1f
[0xa1f:0xa25]
---
Predecessors: [0xa19]
Successors: [0xd09]
---
0xa1f PUSH2 0xa26
0xa22 PUSH2 0xd09
0xa25 JUMP
---
0xa1f: V896 = 0xa26
0xa22: V897 = 0xd09
0xa25: JUMP 0xd09
---
Entry stack: []
Stack pops: 0
Stack additions: [0xa26]
Exit stack: [0xa26]

================================

Block 0xa26
[0xa26:0xa39]
---
Predecessors: [0xa19]
Successors: [0xa3a, 0xaa8]
---
0xa26 JUMPDEST
0xa27 PUSH1 0x6
0xa29 SLOAD
0xa2a PUSH1 0x1
0xa2c PUSH1 0x1
0xa2e PUSH1 0xa0
0xa30 SHL
0xa31 SUB
0xa32 AND
0xa33 BALANCE
0xa34 ISZERO
0xa35 DUP1
0xa36 PUSH2 0xaa8
0xa39 JUMPI
---
0xa26: JUMPDEST 
0xa27: V898 = 0x6
0xa29: V899 = S[0x6]
0xa2a: V900 = 0x1
0xa2c: V901 = 0x1
0xa2e: V902 = 0xa0
0xa30: V903 = SHL 0xa0 0x1
0xa31: V904 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa32: V905 = AND 0xffffffffffffffffffffffffffffffffffffffff V899
0xa33: V906 = BALANCE V905
0xa34: V907 = ISZERO V906
0xa36: V908 = 0xaa8
0xa39: JUMPI 0xaa8 V907
---
Entry stack: []
Stack pops: 0
Stack additions: [V907]
Exit stack: [V907]

================================

Block 0xa3a
[0xa3a:0xa7a]
---
Predecessors: [0xa26]
Successors: [0xa7b, 0xa82]
---
0xa3a POP
0xa3b PUSH1 0x6
0xa3d SLOAD
0xa3e PUSH1 0x40
0xa40 MLOAD
0xa41 PUSH4 0x70a08231
0xa46 PUSH1 0xe0
0xa48 SHL
0xa49 DUP2
0xa4a MSTORE
0xa4b PUSH1 0x1
0xa4d PUSH1 0x1
0xa4f PUSH1 0xa0
0xa51 SHL
0xa52 SUB
0xa53 DUP7
0xa54 DUP2
0xa55 AND
0xa56 PUSH1 0x4
0xa58 DUP4
0xa59 ADD
0xa5a MSTORE
0xa5b SWAP1
0xa5c SWAP2
0xa5d AND
0xa5e SWAP1
0xa5f PUSH4 0x70a08231
0xa64 SWAP1
0xa65 PUSH1 0x24
0xa67 ADD
0xa68 PUSH1 0x20
0xa6a PUSH1 0x40
0xa6c MLOAD
0xa6d DUP1
0xa6e DUP4
0xa6f SUB
0xa70 DUP2
0xa71 DUP7
0xa72 GAS
0xa73 STATICCALL
0xa74 ISZERO
0xa75 DUP1
0xa76 ISZERO
0xa77 PUSH2 0xa82
0xa7a JUMPI
---
0xa3b: V909 = 0x6
0xa3d: V910 = S[0x6]
0xa3e: V911 = 0x40
0xa40: V912 = M[0x40]
0xa41: V913 = 0x70a08231
0xa46: V914 = 0xe0
0xa48: V915 = SHL 0xe0 0x70a08231
0xa4a: M[V912] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa4b: V916 = 0x1
0xa4d: V917 = 0x1
0xa4f: V918 = 0xa0
0xa51: V919 = SHL 0xa0 0x1
0xa52: V920 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa55: V921 = AND 0xffffffffffffffffffffffffffffffffffffffff S4
0xa56: V922 = 0x4
0xa59: V923 = ADD V912 0x4
0xa5a: M[V923] = V921
0xa5d: V924 = AND V910 0xffffffffffffffffffffffffffffffffffffffff
0xa5f: V925 = 0x70a08231
0xa65: V926 = 0x24
0xa67: V927 = ADD 0x24 V912
0xa68: V928 = 0x20
0xa6a: V929 = 0x40
0xa6c: V930 = M[0x40]
0xa6f: V931 = SUB V927 V930
0xa72: V932 = GAS
0xa73: V933 = STATICCALL V932 V924 V930 V931 V930 0x20
0xa74: V934 = ISZERO V933
0xa76: V935 = ISZERO V934
0xa77: V936 = 0xa82
0xa7a: JUMPI 0xa82 V935
---
Entry stack: [V907]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V924, 0x70a08231, V927, V934]
Exit stack: [S3, S2, S1, S0, V924, 0x70a08231, V927, V934]

================================

Block 0xa7b
[0xa7b:0xa81]
---
Predecessors: [0xa3a]
Successors: []
---
0xa7b RETURNDATASIZE
0xa7c MISSING 0x5f
0xa7d DUP1
0xa7e RETURNDATACOPY
0xa7f RETURNDATASIZE
0xa80 MISSING 0x5f
0xa81 REVERT
---
0xa7b: V937 = RETURNDATASIZE
0xa7c: MISSING 0x5f
0xa7e: RETURNDATACOPY S0 S0 S1
0xa7f: V938 = RETURNDATASIZE
0xa80: MISSING 0x5f
0xa81: REVERT S0 S1
---
Entry stack: [S7, S6, S5, S4, V924, 0x70a08231, V927, V934]
Stack pops: 0
Stack additions: [V937, V938]
Exit stack: []

================================

Block 0xa82
[0xa82:0xaa5]
---
Predecessors: [0xa3a]
Successors: [0x1262]
---
0xa82 JUMPDEST
0xa83 POP
0xa84 POP
0xa85 POP
0xa86 POP
0xa87 PUSH1 0x40
0xa89 MLOAD
0xa8a RETURNDATASIZE
0xa8b PUSH1 0x1f
0xa8d NOT
0xa8e PUSH1 0x1f
0xa90 DUP3
0xa91 ADD
0xa92 AND
0xa93 DUP3
0xa94 ADD
0xa95 DUP1
0xa96 PUSH1 0x40
0xa98 MSTORE
0xa99 POP
0xa9a DUP2
0xa9b ADD
0xa9c SWAP1
0xa9d PUSH2 0xaa6
0xaa0 SWAP2
0xaa1 SWAP1
0xaa2 PUSH2 0x1262
0xaa5 JUMP
---
0xa82: JUMPDEST 
0xa87: V939 = 0x40
0xa89: V940 = M[0x40]
0xa8a: V941 = RETURNDATASIZE
0xa8b: V942 = 0x1f
0xa8d: V943 = NOT 0x1f
0xa8e: V944 = 0x1f
0xa91: V945 = ADD V941 0x1f
0xa92: V946 = AND V945 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xa94: V947 = ADD V940 V946
0xa96: V948 = 0x40
0xa98: M[0x40] = V947
0xa9b: V949 = ADD V940 V941
0xa9d: V950 = 0xaa6
0xaa2: V951 = 0x1262
0xaa5: JUMP 0x1262
---
Entry stack: [S7, S6, S5, S4, V924, 0x70a08231, V927, V934]
Stack pops: 4
Stack additions: [0xaa6, V949, V940]
Exit stack: [S7, S6, S5, S4, 0xaa6, V949, V940]

================================

Block 0xaa6
[0xaa6:0xaa7]
---
Predecessors: []
Successors: [0xaa8]
---
0xaa6 JUMPDEST
0xaa7 ISZERO
---
0xaa6: JUMPDEST 
0xaa7: V952 = ISZERO S0
---
Entry stack: []
Stack pops: 1
Stack additions: [V952]
Exit stack: [V952]

================================

Block 0xaa8
[0xaa8:0xaad]
---
Predecessors: [0xa26, 0xaa6]
Successors: [0xaae, 0xb17]
---
0xaa8 JUMPDEST
0xaa9 ISZERO
0xaaa PUSH2 0xb17
0xaad JUMPI
---
0xaa8: JUMPDEST 
0xaa9: V953 = ISZERO S0
0xaaa: V954 = 0xb17
0xaad: JUMPI 0xb17 V953
---
Entry stack: [S0]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xaae
[0xaae:0xafd]
---
Predecessors: [0xaa8]
Successors: [0x8b9]
---
0xaae PUSH1 0x40
0xab0 DUP1
0xab1 MLOAD
0xab2 DUP1
0xab3 DUP3
0xab4 ADD
0xab5 DUP3
0xab6 MSTORE
0xab7 PUSH1 0x14
0xab9 DUP2
0xaba MSTORE
0xabb PUSH20 0x496e73756666696369656e742042616c616e6365
0xad0 PUSH1 0x60
0xad2 SHL
0xad3 PUSH1 0x20
0xad5 DUP1
0xad6 DUP4
0xad7 ADD
0xad8 SWAP2
0xad9 SWAP1
0xada SWAP2
0xadb MSTORE
0xadc PUSH1 0x1
0xade PUSH1 0x1
0xae0 PUSH1 0xa0
0xae2 SHL
0xae3 SUB
0xae4 DUP8
0xae5 AND
0xae6 MISSING 0x5f
0xae7 SWAP1
0xae8 DUP2
0xae9 MSTORE
0xaea PUSH1 0x2
0xaec SWAP1
0xaed SWAP2
0xaee MSTORE
0xaef SWAP2
0xaf0 SWAP1
0xaf1 SWAP2
0xaf2 SHA3
0xaf3 SLOAD
0xaf4 PUSH2 0xafe
0xaf7 SWAP2
0xaf8 DUP5
0xaf9 SWAP1
0xafa PUSH2 0x8b9
0xafd JUMP
---
0xaae: V955 = 0x40
0xab1: V956 = M[0x40]
0xab4: V957 = ADD 0x40 V956
0xab6: M[0x40] = V957
0xab7: V958 = 0x14
0xaba: M[V956] = 0x14
0xabb: V959 = 0x496e73756666696369656e742042616c616e6365
0xad0: V960 = 0x60
0xad2: V961 = SHL 0x60 0x496e73756666696369656e742042616c616e6365
0xad3: V962 = 0x20
0xad7: V963 = ADD V956 0x20
0xadb: M[V963] = 0x496e73756666696369656e742042616c616e6365000000000000000000000000
0xadc: V964 = 0x1
0xade: V965 = 0x1
0xae0: V966 = 0xa0
0xae2: V967 = SHL 0xa0 0x1
0xae3: V968 = SUB 0x10000000000000000000000000000000000000000 0x1
0xae5: V969 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xae6: MISSING 0x5f
0xae9: M[S0] = S1
0xaea: V970 = 0x2
0xaee: M[S2] = 0x2
0xaf2: V971 = SHA3 S0 S4
0xaf3: V972 = S[V971]
0xaf4: V973 = 0xafe
0xafa: V974 = 0x8b9
0xafd: JUMP 0x8b9
---
Entry stack: []
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, S6, V972, 0xafe, S5, S6]
Exit stack: []

================================

Block 0xafe
[0xafe:0xb16]
---
Predecessors: []
Successors: [0xb17]
---
0xafe JUMPDEST
0xaff PUSH1 0x1
0xb01 PUSH1 0x1
0xb03 PUSH1 0xa0
0xb05 SHL
0xb06 SUB
0xb07 DUP6
0xb08 AND
0xb09 MISSING 0x5f
0xb0a SWAP1
0xb0b DUP2
0xb0c MSTORE
0xb0d PUSH1 0x2
0xb0f PUSH1 0x20
0xb11 MSTORE
0xb12 PUSH1 0x40
0xb14 SWAP1
0xb15 SHA3
0xb16 SSTORE
---
0xafe: JUMPDEST 
0xaff: V975 = 0x1
0xb01: V976 = 0x1
0xb03: V977 = 0xa0
0xb05: V978 = SHL 0xa0 0x1
0xb06: V979 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb08: V980 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xb09: MISSING 0x5f
0xb0c: M[S0] = S1
0xb0d: V981 = 0x2
0xb0f: V982 = 0x20
0xb11: M[0x20] = 0x2
0xb12: V983 = 0x40
0xb15: V984 = SHA3 S0 0x40
0xb16: S[V984] = S2
---
Entry stack: []
Stack pops: 5
Stack additions: [S4]
Exit stack: []

================================

Block 0xb17
[0xb17:0xb37]
---
Predecessors: [0xaa8, 0xafe]
Successors: [0xb38, 0xb3d]
---
0xb17 JUMPDEST
0xb18 PUSH1 0x1
0xb1a PUSH1 0x1
0xb1c PUSH1 0xa0
0xb1e SHL
0xb1f SUB
0xb20 DUP5
0xb21 AND
0xb22 MISSING 0x5f
0xb23 SWAP1
0xb24 DUP2
0xb25 MSTORE
0xb26 PUSH1 0x4
0xb28 PUSH1 0x20
0xb2a MSTORE
0xb2b PUSH1 0x40
0xb2d DUP2
0xb2e SHA3
0xb2f SLOAD
0xb30 PUSH1 0xff
0xb32 AND
0xb33 ISZERO
0xb34 PUSH2 0xb3d
0xb37 JUMPI
---
0xb17: JUMPDEST 
0xb18: V985 = 0x1
0xb1a: V986 = 0x1
0xb1c: V987 = 0xa0
0xb1e: V988 = SHL 0xa0 0x1
0xb1f: V989 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb21: V990 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xb22: MISSING 0x5f
0xb25: M[S0] = S1
0xb26: V991 = 0x4
0xb28: V992 = 0x20
0xb2a: M[0x20] = 0x4
0xb2b: V993 = 0x40
0xb2e: V994 = SHA3 S0 0x40
0xb2f: V995 = S[V994]
0xb30: V996 = 0xff
0xb32: V997 = AND 0xff V995
0xb33: V998 = ISZERO V997
0xb34: V999 = 0xb3d
0xb37: JUMPI 0xb3d V998
---
Entry stack: []
Stack pops: 4
Stack additions: [S3, S0]
Exit stack: []

================================

Block 0xb38
[0xb38:0xb3c]
---
Predecessors: [0xb17]
Successors: [0xb47]
---
0xb38 DUP3
0xb39 PUSH2 0xb47
0xb3c JUMP
---
0xb39: V1000 = 0xb47
0xb3c: JUMP 0xb47
---
Entry stack: [S0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [S1, S0, S0, S1]

================================

Block 0xb3d
[0xb3d:0xb46]
---
Predecessors: [0xb17]
Successors: [0xe62]
---
0xb3d JUMPDEST
0xb3e PUSH2 0xb47
0xb41 DUP6
0xb42 DUP5
0xb43 PUSH2 0xe62
0xb46 JUMP
---
0xb3d: JUMPDEST 
0xb3e: V1001 = 0xb47
0xb43: V1002 = 0xe62
0xb46: JUMP 0xe62
---
Entry stack: [S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0xb47, S4, S2]
Exit stack: [S3, S2, S1, S0, S0, 0xb47, S3, S1]

================================

Block 0xb47
[0xb47:0xb6b]
---
Predecessors: [0xb38]
Successors: [0xf0a]
---
0xb47 JUMPDEST
0xb48 PUSH1 0x1
0xb4a PUSH1 0x1
0xb4c PUSH1 0xa0
0xb4e SHL
0xb4f SUB
0xb50 DUP6
0xb51 AND
0xb52 MISSING 0x5f
0xb53 SWAP1
0xb54 DUP2
0xb55 MSTORE
0xb56 PUSH1 0x2
0xb58 PUSH1 0x20
0xb5a MSTORE
0xb5b PUSH1 0x40
0xb5d SWAP1
0xb5e SHA3
0xb5f SLOAD
0xb60 SWAP1
0xb61 SWAP2
0xb62 POP
0xb63 PUSH2 0xb6c
0xb66 SWAP1
0xb67 DUP3
0xb68 PUSH2 0xf0a
0xb6b JUMP
---
0xb47: JUMPDEST 
0xb48: V1003 = 0x1
0xb4a: V1004 = 0x1
0xb4c: V1005 = 0xa0
0xb4e: V1006 = SHL 0xa0 0x1
0xb4f: V1007 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb51: V1008 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xb52: MISSING 0x5f
0xb55: M[S0] = S1
0xb56: V1009 = 0x2
0xb58: V1010 = 0x20
0xb5a: M[0x20] = 0x2
0xb5b: V1011 = 0x40
0xb5e: V1012 = SHA3 S0 0x40
0xb5f: V1013 = S[V1012]
0xb63: V1014 = 0xb6c
0xb68: V1015 = 0xf0a
0xb6b: JUMP 0xf0a
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S2, V1013, 0xb6c, S2]
Exit stack: []

================================

Block 0xb6c
[0xb6c:0xbbe]
---
Predecessors: []
Successors: [0xbbf]
---
0xb6c JUMPDEST
0xb6d PUSH1 0x1
0xb6f PUSH1 0x1
0xb71 PUSH1 0xa0
0xb73 SHL
0xb74 SUB
0xb75 DUP1
0xb76 DUP7
0xb77 AND
0xb78 MISSING 0x5f
0xb79 DUP2
0xb7a DUP2
0xb7b MSTORE
0xb7c PUSH1 0x2
0xb7e PUSH1 0x20
0xb80 MSTORE
0xb81 PUSH1 0x40
0xb83 SWAP1
0xb84 DUP2
0xb85 SWAP1
0xb86 SHA3
0xb87 SWAP4
0xb88 SWAP1
0xb89 SWAP4
0xb8a SSTORE
0xb8b SWAP2
0xb8c MLOAD
0xb8d SWAP1
0xb8e DUP8
0xb8f AND
0xb90 SWAP1
0xb91 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xbb2 SWAP1
0xbb3 PUSH2 0xbbf
0xbb6 SWAP1
0xbb7 DUP6
0xbb8 DUP2
0xbb9 MSTORE
0xbba PUSH1 0x20
0xbbc ADD
0xbbd SWAP1
0xbbe JUMP
---
0xb6c: JUMPDEST 
0xb6d: V1016 = 0x1
0xb6f: V1017 = 0x1
0xb71: V1018 = 0xa0
0xb73: V1019 = SHL 0xa0 0x1
0xb74: V1020 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb77: V1021 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xb78: MISSING 0x5f
0xb7b: M[S0] = S1
0xb7c: V1022 = 0x2
0xb7e: V1023 = 0x20
0xb80: M[0x20] = 0x2
0xb81: V1024 = 0x40
0xb86: V1025 = SHA3 S0 0x40
0xb8a: S[V1025] = S3
0xb8c: V1026 = M[0x40]
0xb8f: V1027 = AND S8 S2
0xb91: V1028 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xbb3: V1029 = 0xbbf
0xbb9: M[V1026] = S4
0xbba: V1030 = 0x20
0xbbc: V1031 = ADD 0x20 V1026
0xbbe: JUMP 0xbbf
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, V1031, 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, V1027, S1, S4, S5, S6, S7, S8]
Exit stack: []

================================

Block 0xbbf
[0xbbf:0xbd1]
---
Predecessors: [0xb6c]
Successors: []
Has unresolved jump.
---
0xbbf JUMPDEST
0xbc0 PUSH1 0x40
0xbc2 MLOAD
0xbc3 DUP1
0xbc4 SWAP2
0xbc5 SUB
0xbc6 SWAP1
0xbc7 LOG3
0xbc8 POP
0xbc9 PUSH1 0x1
0xbcb SWAP5
0xbcc SWAP4
0xbcd POP
0xbce POP
0xbcf POP
0xbd0 POP
0xbd1 JUMP
---
0xbbf: JUMPDEST 
0xbc0: V1032 = 0x40
0xbc2: V1033 = M[0x40]
0xbc5: V1034 = SUB V1031 V1033
0xbc7: LOG V1033 V1034 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1027 S3
0xbc9: V1035 = 0x1
0xbd1: JUMP S9
---
Entry stack: [S8, S7, S6, S5, S4, S3, V1027, 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, V1031]
Stack pops: 10
Stack additions: [0x1]
Exit stack: [0x1]

================================

Block 0xbd2
[0xbd2:0xc21]
---
Predecessors: [0x904]
Successors: [0x8b9]
---
0xbd2 JUMPDEST
0xbd3 PUSH1 0x40
0xbd5 DUP1
0xbd6 MLOAD
0xbd7 DUP1
0xbd8 DUP3
0xbd9 ADD
0xbda DUP3
0xbdb MSTORE
0xbdc PUSH1 0x14
0xbde DUP2
0xbdf MSTORE
0xbe0 PUSH20 0x496e73756666696369656e742042616c616e6365
0xbf5 PUSH1 0x60
0xbf7 SHL
0xbf8 PUSH1 0x20
0xbfa DUP1
0xbfb DUP4
0xbfc ADD
0xbfd SWAP2
0xbfe SWAP1
0xbff SWAP2
0xc00 MSTORE
0xc01 PUSH1 0x1
0xc03 PUSH1 0x1
0xc05 PUSH1 0xa0
0xc07 SHL
0xc08 SUB
0xc09 DUP7
0xc0a AND
0xc0b MISSING 0x5f
0xc0c SWAP1
0xc0d DUP2
0xc0e MSTORE
0xc0f PUSH1 0x2
0xc11 SWAP1
0xc12 SWAP2
0xc13 MSTORE
0xc14 SWAP2
0xc15 DUP3
0xc16 SHA3
0xc17 SLOAD
0xc18 PUSH2 0xc22
0xc1b SWAP2
0xc1c DUP5
0xc1d SWAP1
0xc1e PUSH2 0x8b9
0xc21 JUMP
---
0xbd2: JUMPDEST 
0xbd3: V1036 = 0x40
0xbd6: V1037 = M[0x40]
0xbd9: V1038 = ADD 0x40 V1037
0xbdb: M[0x40] = V1038
0xbdc: V1039 = 0x14
0xbdf: M[V1037] = 0x14
0xbe0: V1040 = 0x496e73756666696369656e742042616c616e6365
0xbf5: V1041 = 0x60
0xbf7: V1042 = SHL 0x60 0x496e73756666696369656e742042616c616e6365
0xbf8: V1043 = 0x20
0xbfc: V1044 = ADD V1037 0x20
0xc00: M[V1044] = 0x496e73756666696369656e742042616c616e6365000000000000000000000000
0xc01: V1045 = 0x1
0xc03: V1046 = 0x1
0xc05: V1047 = 0xa0
0xc07: V1048 = SHL 0xa0 0x1
0xc08: V1049 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc0a: V1050 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xc0b: MISSING 0x5f
0xc0e: M[S0] = S1
0xc0f: V1051 = 0x2
0xc13: M[S2] = 0x2
0xc16: V1052 = SHA3 S0 S4
0xc17: V1053 = S[V1052]
0xc18: V1054 = 0xc22
0xc1e: V1055 = 0x8b9
0xc21: JUMP 0x8b9
---
Entry stack: [S7, S6, S5, S4, 0x90e, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x40, S3, S5, V1053, 0xc22, S0, S5]
Exit stack: []

================================

Block 0xc22
[0xc22:0xc4f]
---
Predecessors: []
Successors: [0xf0a]
---
0xc22 JUMPDEST
0xc23 PUSH1 0x1
0xc25 PUSH1 0x1
0xc27 PUSH1 0xa0
0xc29 SHL
0xc2a SUB
0xc2b DUP1
0xc2c DUP7
0xc2d AND
0xc2e MISSING 0x5f
0xc2f SWAP1
0xc30 DUP2
0xc31 MSTORE
0xc32 PUSH1 0x2
0xc34 PUSH1 0x20
0xc36 MSTORE
0xc37 PUSH1 0x40
0xc39 DUP1
0xc3a DUP3
0xc3b SHA3
0xc3c SWAP4
0xc3d SWAP1
0xc3e SWAP4
0xc3f SSTORE
0xc40 SWAP1
0xc41 DUP6
0xc42 AND
0xc43 DUP2
0xc44 MSTORE
0xc45 SHA3
0xc46 SLOAD
0xc47 PUSH2 0xc50
0xc4a SWAP1
0xc4b DUP4
0xc4c PUSH2 0xf0a
0xc4f JUMP
---
0xc22: JUMPDEST 
0xc23: V1056 = 0x1
0xc25: V1057 = 0x1
0xc27: V1058 = 0xa0
0xc29: V1059 = SHL 0xa0 0x1
0xc2a: V1060 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc2d: V1061 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xc2e: MISSING 0x5f
0xc31: M[S0] = S1
0xc32: V1062 = 0x2
0xc34: V1063 = 0x20
0xc36: M[0x20] = 0x2
0xc37: V1064 = 0x40
0xc3b: V1065 = SHA3 S0 0x40
0xc3f: S[V1065] = S3
0xc42: V1066 = AND S6 S2
0xc44: M[S0] = V1066
0xc45: V1067 = SHA3 S0 0x40
0xc46: V1068 = S[V1067]
0xc47: V1069 = 0xc50
0xc4c: V1070 = 0xf0a
0xc4f: JUMP 0xf0a
---
Entry stack: []
Stack pops: 5
Stack additions: [S4, S3, S5, V1068, 0xc50, S4, S5, S6]
Exit stack: []

================================

Block 0xc50
[0xc50:0xca2]
---
Predecessors: []
Successors: [0xca3]
---
0xc50 JUMPDEST
0xc51 PUSH1 0x1
0xc53 PUSH1 0x1
0xc55 PUSH1 0xa0
0xc57 SHL
0xc58 SUB
0xc59 DUP1
0xc5a DUP6
0xc5b AND
0xc5c MISSING 0x5f
0xc5d DUP2
0xc5e DUP2
0xc5f MSTORE
0xc60 PUSH1 0x2
0xc62 PUSH1 0x20
0xc64 MSTORE
0xc65 PUSH1 0x40
0xc67 SWAP1
0xc68 DUP2
0xc69 SWAP1
0xc6a SHA3
0xc6b SWAP4
0xc6c SWAP1
0xc6d SWAP4
0xc6e SSTORE
0xc6f SWAP2
0xc70 MLOAD
0xc71 SWAP1
0xc72 DUP7
0xc73 AND
0xc74 SWAP1
0xc75 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc96 SWAP1
0xc97 PUSH2 0xca3
0xc9a SWAP1
0xc9b DUP7
0xc9c DUP2
0xc9d MSTORE
0xc9e PUSH1 0x20
0xca0 ADD
0xca1 SWAP1
0xca2 JUMP
---
0xc50: JUMPDEST 
0xc51: V1071 = 0x1
0xc53: V1072 = 0x1
0xc55: V1073 = 0xa0
0xc57: V1074 = SHL 0xa0 0x1
0xc58: V1075 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc5b: V1076 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xc5c: MISSING 0x5f
0xc5f: M[S0] = S1
0xc60: V1077 = 0x2
0xc62: V1078 = 0x20
0xc64: M[0x20] = 0x2
0xc65: V1079 = 0x40
0xc6a: V1080 = SHA3 S0 0x40
0xc6e: S[V1080] = S3
0xc70: V1081 = M[0x40]
0xc73: V1082 = AND S7 S2
0xc75: V1083 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xc97: V1084 = 0xca3
0xc9d: M[V1081] = S5
0xc9e: V1085 = 0x20
0xca0: V1086 = ADD 0x20 V1081
0xca2: JUMP 0xca3
---
Entry stack: []
Stack pops: 4
Stack additions: [S3, S2, V1086, 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, V1082, S1, S4, S5, S6, S7]
Exit stack: []

================================

Block 0xca3
[0xca3:0xcb4]
---
Predecessors: [0xc50]
Successors: []
Has unresolved jump.
---
0xca3 JUMPDEST
0xca4 PUSH1 0x40
0xca6 MLOAD
0xca7 DUP1
0xca8 SWAP2
0xca9 SUB
0xcaa SWAP1
0xcab LOG3
0xcac POP
0xcad PUSH1 0x1
0xcaf SWAP4
0xcb0 SWAP3
0xcb1 POP
0xcb2 POP
0xcb3 POP
0xcb4 JUMP
---
0xca3: JUMPDEST 
0xca4: V1087 = 0x40
0xca6: V1088 = M[0x40]
0xca9: V1089 = SUB V1086 V1088
0xcab: LOG V1088 V1089 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1082 S3
0xcad: V1090 = 0x1
0xcb4: JUMP S8
---
Entry stack: [S7, S6, S5, S4, S3, V1082, 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, V1086]
Stack pops: 9
Stack additions: [0x1]
Exit stack: [0x1]

================================

Block 0xcb5
[0xcb5:0xccc]
---
Predecessors: [0xa11]
Successors: [0xccd, 0xcda]
---
0xcb5 JUMPDEST
0xcb6 PUSH1 0xa
0xcb8 SLOAD
0xcb9 MISSING 0x5f
0xcba SWAP1
0xcbb PUSH1 0x1
0xcbd PUSH1 0x1
0xcbf PUSH1 0xa0
0xcc1 SHL
0xcc2 SUB
0xcc3 AND
0xcc4 CALLER
0xcc5 EQ
0xcc6 DUP1
0xcc7 ISZERO
0xcc8 SWAP1
0xcc9 PUSH2 0xcda
0xccc JUMPI
---
0xcb5: JUMPDEST 
0xcb6: V1091 = 0xa
0xcb8: V1092 = S[0xa]
0xcb9: MISSING 0x5f
0xcbb: V1093 = 0x1
0xcbd: V1094 = 0x1
0xcbf: V1095 = 0xa0
0xcc1: V1096 = SHL 0xa0 0x1
0xcc2: V1097 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc3: V1098 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xcc4: V1099 = CALLER
0xcc5: V1100 = EQ V1099 V1098
0xcc7: V1101 = ISZERO V1100
0xcc9: V1102 = 0xcda
0xccc: JUMPI 0xcda V1100
---
Entry stack: [S4, S3, S2, S1, 0xa19]
Stack pops: 0
Stack additions: [V1092, V1101, S0]
Exit stack: []

================================

Block 0xccd
[0xccd:0xcd9]
---
Predecessors: [0xcb5]
Successors: [0xcda]
---
0xccd POP
0xcce PUSH1 0xd
0xcd0 SLOAD
0xcd1 PUSH2 0x100
0xcd4 SWAP1
0xcd5 DIV
0xcd6 PUSH1 0xff
0xcd8 AND
0xcd9 ISZERO
---
0xcce: V1103 = 0xd
0xcd0: V1104 = S[0xd]
0xcd1: V1105 = 0x100
0xcd5: V1106 = DIV V1104 0x100
0xcd6: V1107 = 0xff
0xcd8: V1108 = AND 0xff V1106
0xcd9: V1109 = ISZERO V1108
---
Entry stack: [S1, V1101]
Stack pops: 1
Stack additions: [V1109]
Exit stack: [S1, V1109]

================================

Block 0xcda
[0xcda:0xce0]
---
Predecessors: [0xcb5, 0xccd]
Successors: [0xce1, 0xce8]
---
0xcda JUMPDEST
0xcdb DUP1
0xcdc ISZERO
0xcdd PUSH2 0xce8
0xce0 JUMPI
---
0xcda: JUMPDEST 
0xcdc: V1110 = ISZERO S0
0xcdd: V1111 = 0xce8
0xce0: JUMPI 0xce8 V1110
---
Entry stack: [S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S1, S0]

================================

Block 0xce1
[0xce1:0xce7]
---
Predecessors: [0xcda]
Successors: [0xce8]
---
0xce1 POP
0xce2 PUSH1 0xd
0xce4 SLOAD
0xce5 PUSH1 0xff
0xce7 AND
---
0xce2: V1112 = 0xd
0xce4: V1113 = S[0xd]
0xce5: V1114 = 0xff
0xce7: V1115 = AND 0xff V1113
---
Entry stack: [S1, S0]
Stack pops: 1
Stack additions: [V1115]
Exit stack: [S1, V1115]

================================

Block 0xce8
[0xce8:0xcee]
---
Predecessors: [0xcda, 0xce1]
Successors: [0xcef, 0xd04]
---
0xce8 JUMPDEST
0xce9 DUP1
0xcea ISZERO
0xceb PUSH2 0xd04
0xcee JUMPI
---
0xce8: JUMPDEST 
0xcea: V1116 = ISZERO S0
0xceb: V1117 = 0xd04
0xcee: JUMPI 0xd04 V1116
---
Entry stack: [S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S1, S0]

================================

Block 0xcef
[0xcef:0xd03]
---
Predecessors: [0xce8]
Successors: [0xd04]
---
0xcef POP
0xcf0 PUSH1 0xc
0xcf2 SLOAD
0xcf3 ADDRESS
0xcf4 MISSING 0x5f
0xcf5 SWAP1
0xcf6 DUP2
0xcf7 MSTORE
0xcf8 PUSH1 0x2
0xcfa PUSH1 0x20
0xcfc MSTORE
0xcfd PUSH1 0x40
0xcff SWAP1
0xd00 SHA3
0xd01 SLOAD
0xd02 LT
0xd03 ISZERO
---
0xcf0: V1118 = 0xc
0xcf2: V1119 = S[0xc]
0xcf3: V1120 = ADDRESS
0xcf4: MISSING 0x5f
0xcf7: M[S0] = S1
0xcf8: V1121 = 0x2
0xcfa: V1122 = 0x20
0xcfc: M[0x20] = 0x2
0xcfd: V1123 = 0x40
0xd00: V1124 = SHA3 S0 0x40
0xd01: V1125 = S[V1124]
0xd02: V1126 = LT V1125 S2
0xd03: V1127 = ISZERO V1126
---
Entry stack: [S1, S0]
Stack pops: 1
Stack additions: [V1119, V1127]
Exit stack: []

================================

Block 0xd04
[0xd04:0xd08]
---
Predecessors: [0xce8, 0xcef]
Successors: []
Has unresolved jump.
---
0xd04 JUMPDEST
0xd05 SWAP1
0xd06 POP
0xd07 SWAP1
0xd08 JUMP
---
0xd04: JUMPDEST 
0xd08: JUMP S2
---
Entry stack: [S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xd09
[0xd09:0xd4a]
---
Predecessors: [0xa1f]
Successors: [0xd4b, 0xd52]
---
0xd09 JUMPDEST
0xd0a PUSH1 0xd
0xd0c DUP1
0xd0d SLOAD
0xd0e PUSH2 0xff00
0xd11 NOT
0xd12 AND
0xd13 PUSH2 0x100
0xd16 OR
0xd17 SWAP1
0xd18 SSTORE
0xd19 PUSH1 0xc
0xd1b SLOAD
0xd1c PUSH1 0x40
0xd1e DUP1
0xd1f MLOAD
0xd20 PUSH1 0x2
0xd22 DUP1
0xd23 DUP3
0xd24 MSTORE
0xd25 PUSH1 0x60
0xd27 DUP3
0xd28 ADD
0xd29 DUP4
0xd2a MSTORE
0xd2b DUP4
0xd2c SWAP3
0xd2d MISSING 0x5f
0xd2e SWAP3
0xd2f SWAP2
0xd30 SWAP1
0xd31 PUSH1 0x20
0xd33 DUP4
0xd34 ADD
0xd35 SWAP1
0xd36 DUP1
0xd37 CALLDATASIZE
0xd38 DUP4
0xd39 CALLDATACOPY
0xd3a ADD
0xd3b SWAP1
0xd3c POP
0xd3d POP
0xd3e SWAP1
0xd3f POP
0xd40 ADDRESS
0xd41 DUP2
0xd42 MISSING 0x5f
0xd43 DUP2
0xd44 MLOAD
0xd45 DUP2
0xd46 LT
0xd47 PUSH2 0xd52
0xd4a JUMPI
---
0xd09: JUMPDEST 
0xd0a: V1128 = 0xd
0xd0d: V1129 = S[0xd]
0xd0e: V1130 = 0xff00
0xd11: V1131 = NOT 0xff00
0xd12: V1132 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1129
0xd13: V1133 = 0x100
0xd16: V1134 = OR 0x100 V1132
0xd18: S[0xd] = V1134
0xd19: V1135 = 0xc
0xd1b: V1136 = S[0xc]
0xd1c: V1137 = 0x40
0xd1f: V1138 = M[0x40]
0xd20: V1139 = 0x2
0xd24: M[V1138] = 0x2
0xd25: V1140 = 0x60
0xd28: V1141 = ADD V1138 0x60
0xd2a: M[0x40] = V1141
0xd2d: MISSING 0x5f
0xd31: V1142 = 0x20
0xd34: V1143 = ADD S3 0x20
0xd37: V1144 = CALLDATASIZE
0xd39: CALLDATACOPY V1143 V1144 S1
0xd3a: V1145 = ADD S1 V1143
0xd40: V1146 = ADDRESS
0xd42: MISSING 0x5f
0xd44: V1147 = M[S1]
0xd46: V1148 = LT S0 V1147
0xd47: V1149 = 0xd52
0xd4a: JUMPI 0xd52 V1148
---
Entry stack: [0xa26]
Stack pops: 0
Stack additions: [V1136, V1136, V1138, 0x2, 0x40, S3, V1146, S3, S0, S1]
Exit stack: []

================================

Block 0xd4b
[0xd4b:0xd51]
---
Predecessors: [0xd09]
Successors: [0x1279]
---
0xd4b PUSH2 0xd52
0xd4e PUSH2 0x1279
0xd51 JUMP
---
0xd4b: V1150 = 0xd52
0xd4e: V1151 = 0x1279
0xd51: JUMP 0x1279
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [0xd52]
Exit stack: [S1, S0, 0xd52]

================================

Block 0xd52
[0xd52:0xda1]
---
Predecessors: [0xd09]
Successors: [0xda2, 0xda9]
---
0xd52 JUMPDEST
0xd53 PUSH1 0x1
0xd55 PUSH1 0x1
0xd57 PUSH1 0xa0
0xd59 SHL
0xd5a SUB
0xd5b SWAP3
0xd5c DUP4
0xd5d AND
0xd5e PUSH1 0x20
0xd60 SWAP2
0xd61 DUP3
0xd62 MUL
0xd63 SWAP3
0xd64 SWAP1
0xd65 SWAP3
0xd66 ADD
0xd67 DUP2
0xd68 ADD
0xd69 SWAP2
0xd6a SWAP1
0xd6b SWAP2
0xd6c MSTORE
0xd6d PUSH1 0x9
0xd6f SLOAD
0xd70 PUSH1 0x40
0xd72 DUP1
0xd73 MLOAD
0xd74 PUSH4 0x15ab88c9
0xd79 PUSH1 0xe3
0xd7b SHL
0xd7c DUP2
0xd7d MSTORE
0xd7e SWAP1
0xd7f MLOAD
0xd80 SWAP2
0xd81 SWAP1
0xd82 SWAP4
0xd83 AND
0xd84 SWAP3
0xd85 PUSH4 0xad5c4648
0xd8a SWAP3
0xd8b PUSH1 0x4
0xd8d DUP1
0xd8e DUP4
0xd8f ADD
0xd90 SWAP4
0xd91 SWAP2
0xd92 SWAP3
0xd93 DUP3
0xd94 SWAP1
0xd95 SUB
0xd96 ADD
0xd97 DUP2
0xd98 DUP7
0xd99 GAS
0xd9a STATICCALL
0xd9b ISZERO
0xd9c DUP1
0xd9d ISZERO
0xd9e PUSH2 0xda9
0xda1 JUMPI
---
0xd52: JUMPDEST 
0xd53: V1152 = 0x1
0xd55: V1153 = 0x1
0xd57: V1154 = 0xa0
0xd59: V1155 = SHL 0xa0 0x1
0xd5a: V1156 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd5d: V1157 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd5e: V1158 = 0x20
0xd62: V1159 = MUL 0x20 S0
0xd66: V1160 = ADD V1159 S1
0xd68: V1161 = ADD 0x20 V1160
0xd6c: M[V1161] = V1157
0xd6d: V1162 = 0x9
0xd6f: V1163 = S[0x9]
0xd70: V1164 = 0x40
0xd73: V1165 = M[0x40]
0xd74: V1166 = 0x15ab88c9
0xd79: V1167 = 0xe3
0xd7b: V1168 = SHL 0xe3 0x15ab88c9
0xd7d: M[V1165] = 0xad5c464800000000000000000000000000000000000000000000000000000000
0xd7f: V1169 = M[0x40]
0xd83: V1170 = AND 0xffffffffffffffffffffffffffffffffffffffff V1163
0xd85: V1171 = 0xad5c4648
0xd8b: V1172 = 0x4
0xd8f: V1173 = ADD V1165 0x4
0xd95: V1174 = SUB V1165 V1169
0xd96: V1175 = ADD V1174 0x4
0xd99: V1176 = GAS
0xd9a: V1177 = STATICCALL V1176 V1170 V1169 V1175 V1169 0x20
0xd9b: V1178 = ISZERO V1177
0xd9d: V1179 = ISZERO V1178
0xd9e: V1180 = 0xda9
0xda1: JUMPI 0xda9 V1179
---
Entry stack: [S1, S0]
Stack pops: 3
Stack additions: [V1170, 0xad5c4648, V1173, V1178]
Exit stack: [V1170, 0xad5c4648, V1173, V1178]

================================

Block 0xda2
[0xda2:0xda8]
---
Predecessors: [0xd52]
Successors: []
---
0xda2 RETURNDATASIZE
0xda3 MISSING 0x5f
0xda4 DUP1
0xda5 RETURNDATACOPY
0xda6 RETURNDATASIZE
0xda7 MISSING 0x5f
0xda8 REVERT
---
0xda2: V1181 = RETURNDATASIZE
0xda3: MISSING 0x5f
0xda5: RETURNDATACOPY S0 S0 S1
0xda6: V1182 = RETURNDATASIZE
0xda7: MISSING 0x5f
0xda8: REVERT S0 S1
---
Entry stack: [V1170, 0xad5c4648, V1173, V1178]
Stack pops: 0
Stack additions: [V1181, V1182]
Exit stack: []

================================

Block 0xda9
[0xda9:0xdcc]
---
Predecessors: [0xd52]
Successors: [0x11e2]
---
0xda9 JUMPDEST
0xdaa POP
0xdab POP
0xdac POP
0xdad POP
0xdae PUSH1 0x40
0xdb0 MLOAD
0xdb1 RETURNDATASIZE
0xdb2 PUSH1 0x1f
0xdb4 NOT
0xdb5 PUSH1 0x1f
0xdb7 DUP3
0xdb8 ADD
0xdb9 AND
0xdba DUP3
0xdbb ADD
0xdbc DUP1
0xdbd PUSH1 0x40
0xdbf MSTORE
0xdc0 POP
0xdc1 DUP2
0xdc2 ADD
0xdc3 SWAP1
0xdc4 PUSH2 0xdcd
0xdc7 SWAP2
0xdc8 SWAP1
0xdc9 PUSH2 0x11e2
0xdcc JUMP
---
0xda9: JUMPDEST 
0xdae: V1183 = 0x40
0xdb0: V1184 = M[0x40]
0xdb1: V1185 = RETURNDATASIZE
0xdb2: V1186 = 0x1f
0xdb4: V1187 = NOT 0x1f
0xdb5: V1188 = 0x1f
0xdb8: V1189 = ADD V1185 0x1f
0xdb9: V1190 = AND V1189 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0xdbb: V1191 = ADD V1184 V1190
0xdbd: V1192 = 0x40
0xdbf: M[0x40] = V1191
0xdc2: V1193 = ADD V1184 V1185
0xdc4: V1194 = 0xdcd
0xdc9: V1195 = 0x11e2
0xdcc: JUMP 0x11e2
---
Entry stack: [V1170, 0xad5c4648, V1173, V1178]
Stack pops: 4
Stack additions: [0xdcd, V1193, V1184]
Exit stack: [0xdcd, V1193, V1184]

================================

Block 0xdcd
[0xdcd:0xdd8]
---
Predecessors: []
Successors: [0xdd9, 0xde0]
---
0xdcd JUMPDEST
0xdce DUP2
0xdcf PUSH1 0x1
0xdd1 DUP2
0xdd2 MLOAD
0xdd3 DUP2
0xdd4 LT
0xdd5 PUSH2 0xde0
0xdd8 JUMPI
---
0xdcd: JUMPDEST 
0xdcf: V1196 = 0x1
0xdd2: V1197 = M[S1]
0xdd4: V1198 = LT 0x1 V1197
0xdd5: V1199 = 0xde0
0xdd8: JUMPI 0xde0 V1198
---
Entry stack: []
Stack pops: 2
Stack additions: [S1, S0, S1, 0x1]
Exit stack: [S1, S0, S1, 0x1]

================================

Block 0xdd9
[0xdd9:0xddf]
---
Predecessors: [0xdcd]
Successors: [0x1279]
---
0xdd9 PUSH2 0xde0
0xddc PUSH2 0x1279
0xddf JUMP
---
0xdd9: V1200 = 0xde0
0xddc: V1201 = 0x1279
0xddf: JUMP 0x1279
---
Entry stack: [S3, S2, S1, 0x1]
Stack pops: 0
Stack additions: [0xde0]
Exit stack: [S3, S2, S1, 0x1, 0xde0]

================================

Block 0xde0
[0xde0:0xe24]
---
Predecessors: [0xdcd]
Successors: [0x128d]
---
0xde0 JUMPDEST
0xde1 PUSH1 0x1
0xde3 PUSH1 0x1
0xde5 PUSH1 0xa0
0xde7 SHL
0xde8 SUB
0xde9 SWAP3
0xdea DUP4
0xdeb AND
0xdec PUSH1 0x20
0xdee SWAP2
0xdef DUP3
0xdf0 MUL
0xdf1 SWAP3
0xdf2 SWAP1
0xdf3 SWAP3
0xdf4 ADD
0xdf5 ADD
0xdf6 MSTORE
0xdf7 PUSH1 0x9
0xdf9 SLOAD
0xdfa PUSH1 0x40
0xdfc MLOAD
0xdfd PUSH4 0x791ac947
0xe02 PUSH1 0xe0
0xe04 SHL
0xe05 DUP2
0xe06 MSTORE
0xe07 SWAP2
0xe08 AND
0xe09 SWAP1
0xe0a PUSH4 0x791ac947
0xe0f SWAP1
0xe10 PUSH2 0xe25
0xe13 SWAP1
0xe14 DUP6
0xe15 SWAP1
0xe16 MISSING 0x5f
0xe17 SWAP1
0xe18 DUP7
0xe19 SWAP1
0xe1a ADDRESS
0xe1b SWAP1
0xe1c TIMESTAMP
0xe1d SWAP1
0xe1e PUSH1 0x4
0xe20 ADD
0xe21 PUSH2 0x128d
0xe24 JUMP
---
0xde0: JUMPDEST 
0xde1: V1202 = 0x1
0xde3: V1203 = 0x1
0xde5: V1204 = 0xa0
0xde7: V1205 = SHL 0xa0 0x1
0xde8: V1206 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdeb: V1207 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xdec: V1208 = 0x20
0xdf0: V1209 = MUL 0x20 0x1
0xdf4: V1210 = ADD 0x20 S1
0xdf5: V1211 = ADD V1210 0x20
0xdf6: M[V1211] = V1207
0xdf7: V1212 = 0x9
0xdf9: V1213 = S[0x9]
0xdfa: V1214 = 0x40
0xdfc: V1215 = M[0x40]
0xdfd: V1216 = 0x791ac947
0xe02: V1217 = 0xe0
0xe04: V1218 = SHL 0xe0 0x791ac947
0xe06: M[V1215] = 0x791ac94700000000000000000000000000000000000000000000000000000000
0xe08: V1219 = AND 0xffffffffffffffffffffffffffffffffffffffff V1213
0xe0a: V1220 = 0x791ac947
0xe10: V1221 = 0xe25
0xe16: MISSING 0x5f
0xe1a: V1222 = ADDRESS
0xe1c: V1223 = TIMESTAMP
0xe1e: V1224 = 0x4
0xe20: V1225 = ADD 0x4 S1
0xe21: V1226 = 0x128d
0xe24: JUMP 0x128d
---
Entry stack: [S3, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S4, S3, V1225, V1223, V1222, S6, S0, S2, S3, S4, S5, S6]
Exit stack: []

================================

Block 0xe25
[0xe25:0xe38]
---
Predecessors: []
Successors: [0xe39, 0xe3c]
---
0xe25 JUMPDEST
0xe26 MISSING 0x5f
0xe27 PUSH1 0x40
0xe29 MLOAD
0xe2a DUP1
0xe2b DUP4
0xe2c SUB
0xe2d DUP2
0xe2e MISSING 0x5f
0xe2f DUP8
0xe30 DUP1
0xe31 EXTCODESIZE
0xe32 ISZERO
0xe33 DUP1
0xe34 ISZERO
0xe35 PUSH2 0xe3c
0xe38 JUMPI
---
0xe25: JUMPDEST 
0xe26: MISSING 0x5f
0xe27: V1227 = 0x40
0xe29: V1228 = M[0x40]
0xe2c: V1229 = SUB S1 V1228
0xe2e: MISSING 0x5f
0xe31: V1230 = EXTCODESIZE S7
0xe32: V1231 = ISZERO V1230
0xe34: V1232 = ISZERO V1231
0xe35: V1233 = 0xe3c
0xe38: JUMPI 0xe3c V1232
---
Entry stack: []
Stack pops: 0
Stack additions: [V1228, V1229, V1228, S0, S1, V1231, S7, S0, S1, S2, S3, S4, S5, S6, S7]
Exit stack: []

================================

Block 0xe39
[0xe39:0xe3b]
---
Predecessors: [0xe25]
Successors: []
---
0xe39 MISSING 0x5f
0xe3a DUP1
0xe3b REVERT
---
0xe39: MISSING 0x5f
0xe3b: REVERT S0 S0
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, V1231]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xe3c
[0xe3c:0xe46]
---
Predecessors: [0xe25]
Successors: [0xe47, 0xe4e]
---
0xe3c JUMPDEST
0xe3d POP
0xe3e GAS
0xe3f CALL
0xe40 ISZERO
0xe41 DUP1
0xe42 ISZERO
0xe43 PUSH2 0xe4e
0xe46 JUMPI
---
0xe3c: JUMPDEST 
0xe3e: V1234 = GAS
0xe3f: V1235 = CALL V1234 S1 S2 S3 S4 S5 S6
0xe40: V1236 = ISZERO V1235
0xe42: V1237 = ISZERO V1236
0xe43: V1238 = 0xe4e
0xe46: JUMPI 0xe4e V1237
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, S2, S1, V1231]
Stack pops: 7
Stack additions: [V1236]
Exit stack: [S9, S8, S7, V1236]

================================

Block 0xe47
[0xe47:0xe4d]
---
Predecessors: [0xe3c]
Successors: []
---
0xe47 RETURNDATASIZE
0xe48 MISSING 0x5f
0xe49 DUP1
0xe4a RETURNDATACOPY
0xe4b RETURNDATASIZE
0xe4c MISSING 0x5f
0xe4d REVERT
---
0xe47: V1239 = RETURNDATASIZE
0xe48: MISSING 0x5f
0xe4a: RETURNDATACOPY S0 S0 S1
0xe4b: V1240 = RETURNDATASIZE
0xe4c: MISSING 0x5f
0xe4d: REVERT S0 S1
---
Entry stack: [S3, S2, S1, V1236]
Stack pops: 0
Stack additions: [V1239, V1240]
Exit stack: []

================================

Block 0xe4e
[0xe4e:0xe61]
---
Predecessors: [0xe3c]
Successors: []
Has unresolved jump.
---
0xe4e JUMPDEST
0xe4f POP
0xe50 POP
0xe51 PUSH1 0xd
0xe53 DUP1
0xe54 SLOAD
0xe55 PUSH2 0xff00
0xe58 NOT
0xe59 AND
0xe5a SWAP1
0xe5b SSTORE
0xe5c POP
0xe5d POP
0xe5e POP
0xe5f POP
0xe60 POP
0xe61 JUMP
---
0xe4e: JUMPDEST 
0xe51: V1241 = 0xd
0xe54: V1242 = S[0xd]
0xe55: V1243 = 0xff00
0xe58: V1244 = NOT 0xff00
0xe59: V1245 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V1242
0xe5b: S[0xd] = V1245
0xe61: JUMP S7
---
Entry stack: [S3, S2, S1, V1236]
Stack pops: 8
Stack additions: []
Exit stack: []

================================

Block 0xe62
[0xe62:0xe7d]
---
Predecessors: [0xb3d]
Successors: [0xf68]
---
0xe62 JUMPDEST
0xe63 MISSING 0x5f
0xe64 DUP1
0xe65 PUSH2 0xe84
0xe68 PUSH1 0x64
0xe6a PUSH2 0xe7e
0xe6d PUSH1 0x7
0xe6f SLOAD
0xe70 DUP7
0xe71 PUSH2 0xf68
0xe74 SWAP1
0xe75 SWAP2
0xe76 SWAP1
0xe77 PUSH4 0xffffffff
0xe7c AND
0xe7d JUMP
---
0xe62: JUMPDEST 
0xe63: MISSING 0x5f
0xe65: V1246 = 0xe84
0xe68: V1247 = 0x64
0xe6a: V1248 = 0xe7e
0xe6d: V1249 = 0x7
0xe6f: V1250 = S[0x7]
0xe71: V1251 = 0xf68
0xe77: V1252 = 0xffffffff
0xe7c: V1253 = AND 0xffffffff 0xf68
0xe7d: JUMP 0xf68
---
Entry stack: [S7, S6, S5, S4, S3, 0xb47, S1, S0]
Stack pops: 0
Stack additions: [V1250, S1, 0xe7e, 0x64, 0xe84, S0, S0, S1]
Exit stack: []

================================

Block 0xe7e
[0xe7e:0xe83]
---
Predecessors: []
Successors: [0xfe6]
---
0xe7e JUMPDEST
0xe7f SWAP1
0xe80 PUSH2 0xfe6
0xe83 JUMP
---
0xe7e: JUMPDEST 
0xe80: V1254 = 0xfe6
0xe83: JUMP 0xfe6
---
Entry stack: []
Stack pops: 2
Stack additions: [S0, S1]
Exit stack: [S0, S1]

================================

Block 0xe84
[0xe84:0xe9f]
---
Predecessors: []
Successors: [0xf0a]
---
0xe84 JUMPDEST
0xe85 ADDRESS
0xe86 MISSING 0x5f
0xe87 SWAP1
0xe88 DUP2
0xe89 MSTORE
0xe8a PUSH1 0x2
0xe8c PUSH1 0x20
0xe8e MSTORE
0xe8f PUSH1 0x40
0xe91 SWAP1
0xe92 SHA3
0xe93 SLOAD
0xe94 SWAP1
0xe95 SWAP2
0xe96 POP
0xe97 PUSH2 0xea0
0xe9a SWAP1
0xe9b DUP3
0xe9c PUSH2 0xf0a
0xe9f JUMP
---
0xe84: JUMPDEST 
0xe85: V1255 = ADDRESS
0xe86: MISSING 0x5f
0xe89: M[S0] = S1
0xe8a: V1256 = 0x2
0xe8c: V1257 = 0x20
0xe8e: M[0x20] = 0x2
0xe8f: V1258 = 0x40
0xe92: V1259 = SHA3 S0 0x40
0xe93: V1260 = S[V1259]
0xe97: V1261 = 0xea0
0xe9c: V1262 = 0xf0a
0xe9f: JUMP 0xf0a
---
Entry stack: []
Stack pops: 0
Stack additions: [V1255, S2, V1260, 0xea0, S2]
Exit stack: []

================================

Block 0xea0
[0xea0:0xeef]
---
Predecessors: []
Successors: [0xef0]
---
0xea0 JUMPDEST
0xea1 ADDRESS
0xea2 MISSING 0x5f
0xea3 DUP2
0xea4 DUP2
0xea5 MSTORE
0xea6 PUSH1 0x2
0xea8 PUSH1 0x20
0xeaa MSTORE
0xeab PUSH1 0x40
0xead SWAP1
0xeae DUP2
0xeaf SWAP1
0xeb0 SHA3
0xeb1 SWAP3
0xeb2 SWAP1
0xeb3 SWAP3
0xeb4 SSTORE
0xeb5 SWAP1
0xeb6 MLOAD
0xeb7 PUSH1 0x1
0xeb9 PUSH1 0x1
0xebb PUSH1 0xa0
0xebd SHL
0xebe SUB
0xebf DUP7
0xec0 AND
0xec1 SWAP1
0xec2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xee3 SWAP1
0xee4 PUSH2 0xef0
0xee7 SWAP1
0xee8 DUP6
0xee9 DUP2
0xeea MSTORE
0xeeb PUSH1 0x20
0xeed ADD
0xeee SWAP1
0xeef JUMP
---
0xea0: JUMPDEST 
0xea1: V1263 = ADDRESS
0xea2: MISSING 0x5f
0xea5: M[S0] = S1
0xea6: V1264 = 0x2
0xea8: V1265 = 0x20
0xeaa: M[0x20] = 0x2
0xeab: V1266 = 0x40
0xeb0: V1267 = SHA3 S0 0x40
0xeb4: S[V1267] = S2
0xeb6: V1268 = M[0x40]
0xeb7: V1269 = 0x1
0xeb9: V1270 = 0x1
0xebb: V1271 = 0xa0
0xebd: V1272 = SHL 0xa0 0x1
0xebe: V1273 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec0: V1274 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0xec2: V1275 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xee4: V1276 = 0xef0
0xeea: M[V1268] = S3
0xeeb: V1277 = 0x20
0xeed: V1278 = ADD 0x20 V1268
0xeef: JUMP 0xef0
---
Entry stack: []
Stack pops: 0
Stack additions: [V1263, V1278, 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, V1274, S1, S3, S4, S5, S6]
Exit stack: []

================================

Block 0xef0
[0xef0:0xf01]
---
Predecessors: [0xea0]
Successors: [0x1027]
---
0xef0 JUMPDEST
0xef1 PUSH1 0x40
0xef3 MLOAD
0xef4 DUP1
0xef5 SWAP2
0xef6 SUB
0xef7 SWAP1
0xef8 LOG3
0xef9 PUSH2 0xf02
0xefc DUP4
0xefd DUP3
0xefe PUSH2 0x1027
0xf01 JUMP
---
0xef0: JUMPDEST 
0xef1: V1279 = 0x40
0xef3: V1280 = M[0x40]
0xef6: V1281 = SUB V1278 V1280
0xef8: LOG V1280 V1281 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1274 S3
0xef9: V1282 = 0xf02
0xefe: V1283 = 0x1027
0xf01: JUMP 0x1027
---
Entry stack: [S7, S6, S5, S4, S3, V1274, 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, V1278]
Stack pops: 7
Stack additions: [S6, S5, S4, 0xf02, S6, S4]
Exit stack: [S7, S6, S5, S4, 0xf02, S6, S4]

================================

Block 0xf02
[0xf02:0xf09]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0xf02 JUMPDEST
0xf03 SWAP5
0xf04 SWAP4
0xf05 POP
0xf06 POP
0xf07 POP
0xf08 POP
0xf09 JUMP
---
0xf02: JUMPDEST 
0xf09: JUMP S5
---
Entry stack: []
Stack pops: 6
Stack additions: [S0]
Exit stack: [S0]

================================

Block 0xf0a
[0xf0a:0xf15]
---
Predecessors: [0xb47, 0xc22, 0xe84]
Successors: [0x124f]
---
0xf0a JUMPDEST
0xf0b MISSING 0x5f
0xf0c DUP1
0xf0d PUSH2 0xf16
0xf10 DUP4
0xf11 DUP6
0xf12 PUSH2 0x124f
0xf15 JUMP
---
0xf0a: JUMPDEST 
0xf0b: MISSING 0x5f
0xf0d: V1284 = 0xf16
0xf12: V1285 = 0x124f
0xf15: JUMP 0x124f
---
Entry stack: [S5, S4, S3, {0xb6c, 0xc50, 0xea0}, S1, S0]
Stack pops: 0
Stack additions: [S2, S1, 0xf16, S0, S0, S1, S2]
Exit stack: []

================================

Block 0xf16
[0xf16:0xf20]
---
Predecessors: [0x437]
Successors: [0x4f4, 0xf21]
---
0xf16 JUMPDEST
0xf17 SWAP1
0xf18 POP
0xf19 DUP4
0xf1a DUP2
0xf1b LT
0xf1c ISZERO
0xf1d PUSH2 0x4f4
0xf20 JUMPI
---
0xf16: JUMPDEST 
0xf1b: V1286 = LT S0 S4
0xf1c: V1287 = ISZERO V1286
0xf1d: V1288 = 0x4f4
0xf20: JUMPI 0x4f4 V1287
---
Entry stack: [S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S0]
Exit stack: [S5, S4, S3, S2, S0]

================================

Block 0xf21
[0xf21:0xf67]
---
Predecessors: [0xf16]
Successors: [0x524]
---
0xf21 PUSH1 0x40
0xf23 MLOAD
0xf24 PUSH3 0x461bcd
0xf28 PUSH1 0xe5
0xf2a SHL
0xf2b DUP2
0xf2c MSTORE
0xf2d PUSH1 0x20
0xf2f PUSH1 0x4
0xf31 DUP3
0xf32 ADD
0xf33 MSTORE
0xf34 PUSH1 0x1b
0xf36 PUSH1 0x24
0xf38 DUP3
0xf39 ADD
0xf3a MSTORE
0xf3b PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xf5c PUSH1 0x44
0xf5e DUP3
0xf5f ADD
0xf60 MSTORE
0xf61 PUSH1 0x64
0xf63 ADD
0xf64 PUSH2 0x524
0xf67 JUMP
---
0xf21: V1289 = 0x40
0xf23: V1290 = M[0x40]
0xf24: V1291 = 0x461bcd
0xf28: V1292 = 0xe5
0xf2a: V1293 = SHL 0xe5 0x461bcd
0xf2c: M[V1290] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xf2d: V1294 = 0x20
0xf2f: V1295 = 0x4
0xf32: V1296 = ADD V1290 0x4
0xf33: M[V1296] = 0x20
0xf34: V1297 = 0x1b
0xf36: V1298 = 0x24
0xf39: V1299 = ADD V1290 0x24
0xf3a: M[V1299] = 0x1b
0xf3b: V1300 = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xf5c: V1301 = 0x44
0xf5f: V1302 = ADD V1290 0x44
0xf60: M[V1302] = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xf61: V1303 = 0x64
0xf63: V1304 = ADD 0x64 V1290
0xf64: V1305 = 0x524
0xf67: JUMP 0x524
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [V1304]
Exit stack: [S4, S3, S2, S1, S0, V1304]

================================

Block 0xf68
[0xf68:0xf70]
---
Predecessors: [0xe62]
Successors: [0xf71, 0xf77]
---
0xf68 JUMPDEST
0xf69 MISSING 0x5f
0xf6a DUP3
0xf6b MISSING 0x5f
0xf6c SUB
0xf6d PUSH2 0xf77
0xf70 JUMPI
---
0xf68: JUMPDEST 
0xf69: MISSING 0x5f
0xf6b: MISSING 0x5f
0xf6c: V1306 = SUB S0 S1
0xf6d: V1307 = 0xf77
0xf70: JUMPI 0xf77 V1306
---
Entry stack: [S7, S6, S5, 0xe84, 0x64, 0xe7e, S1, V1250]
Stack pops: 0
Stack additions: [S2, S0, S1, S2]
Exit stack: []

================================

Block 0xf71
[0xf71:0xf76]
---
Predecessors: [0xf68]
Successors: [0x437]
---
0xf71 POP
0xf72 MISSING 0x5f
0xf73 PUSH2 0x437
0xf76 JUMP
---
0xf72: MISSING 0x5f
0xf73: V1308 = 0x437
0xf76: JUMP 0x437
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xf77
[0xf77:0xf81]
---
Predecessors: [0xf68]
Successors: [0x12fc]
---
0xf77 JUMPDEST
0xf78 MISSING 0x5f
0xf79 PUSH2 0xf82
0xf7c DUP4
0xf7d DUP6
0xf7e PUSH2 0x12fc
0xf81 JUMP
---
0xf77: JUMPDEST 
0xf78: MISSING 0x5f
0xf79: V1309 = 0xf82
0xf7e: V1310 = 0x12fc
0xf81: JUMP 0x12fc
---
Entry stack: []
Stack pops: 0
Stack additions: [S3, S2, 0xf82, S0, S1, S2, S3]
Exit stack: []

================================

Block 0xf82
[0xf82:0xf8e]
---
Predecessors: [0x437]
Successors: [0x1313]
---
0xf82 JUMPDEST
0xf83 SWAP1
0xf84 POP
0xf85 DUP3
0xf86 PUSH2 0xf8f
0xf89 DUP6
0xf8a DUP4
0xf8b PUSH2 0x1313
0xf8e JUMP
---
0xf82: JUMPDEST 
0xf86: V1311 = 0xf8f
0xf8b: V1312 = 0x1313
0xf8e: JUMP 0x1313
---
Entry stack: [S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S0, S3, 0xf8f, S4, S0]
Exit stack: [S5, S4, S3, S2, S0, S3, 0xf8f, S4, S0]

================================

Block 0xf8f
[0xf8f:0xf94]
---
Predecessors: []
Successors: [0x4f4, 0xf95]
---
0xf8f JUMPDEST
0xf90 EQ
0xf91 PUSH2 0x4f4
0xf94 JUMPI
---
0xf8f: JUMPDEST 
0xf90: V1313 = EQ S0 S1
0xf91: V1314 = 0x4f4
0xf94: JUMPI 0x4f4 V1313
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0xf95
[0xf95:0xfe5]
---
Predecessors: [0xf8f]
Successors: [0x524]
---
0xf95 PUSH1 0x40
0xf97 MLOAD
0xf98 PUSH3 0x461bcd
0xf9c PUSH1 0xe5
0xf9e SHL
0xf9f DUP2
0xfa0 MSTORE
0xfa1 PUSH1 0x20
0xfa3 PUSH1 0x4
0xfa5 DUP3
0xfa6 ADD
0xfa7 MSTORE
0xfa8 PUSH1 0x21
0xfaa PUSH1 0x24
0xfac DUP3
0xfad ADD
0xfae MSTORE
0xfaf PUSH32 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f
0xfd0 PUSH1 0x44
0xfd2 DUP3
0xfd3 ADD
0xfd4 MSTORE
0xfd5 PUSH1 0x77
0xfd7 PUSH1 0xf8
0xfd9 SHL
0xfda PUSH1 0x64
0xfdc DUP3
0xfdd ADD
0xfde MSTORE
0xfdf PUSH1 0x84
0xfe1 ADD
0xfe2 PUSH2 0x524
0xfe5 JUMP
---
0xf95: V1315 = 0x40
0xf97: V1316 = M[0x40]
0xf98: V1317 = 0x461bcd
0xf9c: V1318 = 0xe5
0xf9e: V1319 = SHL 0xe5 0x461bcd
0xfa0: M[V1316] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xfa1: V1320 = 0x20
0xfa3: V1321 = 0x4
0xfa6: V1322 = ADD V1316 0x4
0xfa7: M[V1322] = 0x20
0xfa8: V1323 = 0x21
0xfaa: V1324 = 0x24
0xfad: V1325 = ADD V1316 0x24
0xfae: M[V1325] = 0x21
0xfaf: V1326 = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f
0xfd0: V1327 = 0x44
0xfd3: V1328 = ADD V1316 0x44
0xfd4: M[V1328] = 0x536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f
0xfd5: V1329 = 0x77
0xfd7: V1330 = 0xf8
0xfd9: V1331 = SHL 0xf8 0x77
0xfda: V1332 = 0x64
0xfdd: V1333 = ADD V1316 0x64
0xfde: M[V1333] = 0x7700000000000000000000000000000000000000000000000000000000000000
0xfdf: V1334 = 0x84
0xfe1: V1335 = ADD 0x84 V1316
0xfe2: V1336 = 0x524
0xfe5: JUMP 0x524
---
Entry stack: []
Stack pops: 0
Stack additions: [V1335]
Exit stack: [V1335]

================================

Block 0xfe6
[0xfe6:0x1026]
---
Predecessors: [0xe7e]
Successors: [0x1068]
---
0xfe6 JUMPDEST
0xfe7 MISSING 0x5f
0xfe8 PUSH2 0x4f4
0xfeb DUP4
0xfec DUP4
0xfed PUSH1 0x40
0xfef MLOAD
0xff0 DUP1
0xff1 PUSH1 0x40
0xff3 ADD
0xff4 PUSH1 0x40
0xff6 MSTORE
0xff7 DUP1
0xff8 PUSH1 0x1a
0xffa DUP2
0xffb MSTORE
0xffc PUSH1 0x20
0xffe ADD
0xfff PUSH32 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000
0x1020 DUP2
0x1021 MSTORE
0x1022 POP
0x1023 PUSH2 0x1068
0x1026 JUMP
---
0xfe6: JUMPDEST 
0xfe7: MISSING 0x5f
0xfe8: V1337 = 0x4f4
0xfed: V1338 = 0x40
0xfef: V1339 = M[0x40]
0xff1: V1340 = 0x40
0xff3: V1341 = ADD 0x40 V1339
0xff4: V1342 = 0x40
0xff6: M[0x40] = V1341
0xff8: V1343 = 0x1a
0xffb: M[V1339] = 0x1a
0xffc: V1344 = 0x20
0xffe: V1345 = ADD 0x20 V1339
0xfff: V1346 = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000
0x1021: M[V1345] = 0x536166654d6174683a206469766973696f6e206279207a65726f000000000000
0x1023: V1347 = 0x1068
0x1026: JUMP 0x1068
---
Entry stack: [S1, S0]
Stack pops: 0
Stack additions: [V1339, S1, S2, 0x4f4, S0, S1, S2]
Exit stack: []

================================

Block 0x1027
[0x1027:0x1067]
---
Predecessors: [0xef0]
Successors: [0x8b9]
---
0x1027 JUMPDEST
0x1028 MISSING 0x5f
0x1029 PUSH2 0x4f4
0x102c DUP4
0x102d DUP4
0x102e PUSH1 0x40
0x1030 MLOAD
0x1031 DUP1
0x1032 PUSH1 0x40
0x1034 ADD
0x1035 PUSH1 0x40
0x1037 MSTORE
0x1038 DUP1
0x1039 PUSH1 0x1e
0x103b DUP2
0x103c MSTORE
0x103d PUSH1 0x20
0x103f ADD
0x1040 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000
0x1061 DUP2
0x1062 MSTORE
0x1063 POP
0x1064 PUSH2 0x8b9
0x1067 JUMP
---
0x1027: JUMPDEST 
0x1028: MISSING 0x5f
0x1029: V1348 = 0x4f4
0x102e: V1349 = 0x40
0x1030: V1350 = M[0x40]
0x1032: V1351 = 0x40
0x1034: V1352 = ADD 0x40 V1350
0x1035: V1353 = 0x40
0x1037: M[0x40] = V1352
0x1039: V1354 = 0x1e
0x103c: M[V1350] = 0x1e
0x103d: V1355 = 0x20
0x103f: V1356 = ADD 0x20 V1350
0x1040: V1357 = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000
0x1062: M[V1356] = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000
0x1064: V1358 = 0x8b9
0x1067: JUMP 0x8b9
---
Entry stack: [S6, S5, S4, S3, 0xf02, S1, S0]
Stack pops: 0
Stack additions: [V1350, S1, S2, 0x4f4, S0, S1, S2]
Exit stack: []

================================

Block 0x1068
[0x1068:0x106f]
---
Predecessors: [0xfe6]
Successors: [0x1070, 0x1088]
---
0x1068 JUMPDEST
0x1069 MISSING 0x5f
0x106a DUP2
0x106b DUP4
0x106c PUSH2 0x1088
0x106f JUMPI
---
0x1068: JUMPDEST 
0x1069: MISSING 0x5f
0x106c: V1359 = 0x1088
0x106f: JUMPI 0x1088 S2
---
Entry stack: [S6, S5, S4, 0x4f4, S2, S1, V1339]
Stack pops: 0
Stack additions: [S1, S0, S1, S2]
Exit stack: []

================================

Block 0x1070
[0x1070:0x1087]
---
Predecessors: [0x1068]
Successors: [0x1094]
---
0x1070 PUSH1 0x40
0x1072 MLOAD
0x1073 PUSH3 0x461bcd
0x1077 PUSH1 0xe5
0x1079 SHL
0x107a DUP2
0x107b MSTORE
0x107c PUSH1 0x4
0x107e ADD
0x107f PUSH2 0x524
0x1082 SWAP2
0x1083 SWAP1
0x1084 PUSH2 0x1094
0x1087 JUMP
---
0x1070: V1360 = 0x40
0x1072: V1361 = M[0x40]
0x1073: V1362 = 0x461bcd
0x1077: V1363 = 0xe5
0x1079: V1364 = SHL 0xe5 0x461bcd
0x107b: M[V1361] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x107c: V1365 = 0x4
0x107e: V1366 = ADD 0x4 V1361
0x107f: V1367 = 0x524
0x1084: V1368 = 0x1094
0x1087: JUMP 0x1094
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 1
Stack additions: [0x524, S0, V1366]
Exit stack: [S3, S2, S1, 0x524, S0, V1366]

================================

Block 0x1088
[0x1088:0x1093]
---
Predecessors: [0x1068]
Successors: [0x1313]
---
0x1088 JUMPDEST
0x1089 POP
0x108a MISSING 0x5f
0x108b PUSH2 0x8e8
0x108e DUP5
0x108f DUP7
0x1090 PUSH2 0x1313
0x1093 JUMP
---
0x1088: JUMPDEST 
0x108a: MISSING 0x5f
0x108b: V1369 = 0x8e8
0x1090: V1370 = 0x1313
0x1093: JUMP 0x1313
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S4, S3, 0x8e8, S0, S1, S2, S3, S4]
Exit stack: []

================================

Block 0x1094
[0x1094:0x10a2]
---
Predecessors: [0x181, 0x8c4, 0x1070]
Successors: []
---
0x1094 JUMPDEST
0x1095 MISSING 0x5f
0x1096 PUSH1 0x20
0x1098 DUP1
0x1099 DUP4
0x109a MSTORE
0x109b DUP4
0x109c MLOAD
0x109d DUP1
0x109e DUP3
0x109f DUP6
0x10a0 ADD
0x10a1 MSTORE
0x10a2 MISSING 0x5f
---
0x1094: JUMPDEST 
0x1095: MISSING 0x5f
0x1096: V1371 = 0x20
0x109a: M[S1] = 0x20
0x109c: V1372 = M[S2]
0x10a0: V1373 = ADD S1 0x20
0x10a1: M[V1373] = V1372
0x10a2: MISSING 0x5f
---
Entry stack: [S6, S5, S4, V8, {0x148, 0x524}, S1, S0]
Stack pops: 0
Stack additions: [V1372, 0x20, S0, S1, S2]
Exit stack: []

================================

Block 0x10a3
[0x10a3:0x10ab]
---
Predecessors: [0x10ac]
Successors: [0x10ac, 0x10bf]
---
0x10a3 JUMPDEST
0x10a4 DUP2
0x10a5 DUP2
0x10a6 LT
0x10a7 ISZERO
0x10a8 PUSH2 0x10bf
0x10ab JUMPI
---
0x10a3: JUMPDEST 
0x10a6: V1374 = LT V1383 S1
0x10a7: V1375 = ISZERO V1374
0x10a8: V1376 = 0x10bf
0x10ab: JUMPI 0x10bf V1375
---
Entry stack: [S5, S4, S3, S2, S1, V1383]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [S5, S4, S3, S2, S1, V1383]

================================

Block 0x10ac
[0x10ac:0x10be]
---
Predecessors: [0x10a3]
Successors: [0x10a3]
---
0x10ac DUP6
0x10ad DUP2
0x10ae ADD
0x10af DUP4
0x10b0 ADD
0x10b1 MLOAD
0x10b2 DUP6
0x10b3 DUP3
0x10b4 ADD
0x10b5 PUSH1 0x40
0x10b7 ADD
0x10b8 MSTORE
0x10b9 DUP3
0x10ba ADD
0x10bb PUSH2 0x10a3
0x10be JUMP
---
0x10ae: V1377 = ADD V1383 S5
0x10b0: V1378 = ADD S2 V1377
0x10b1: V1379 = M[V1378]
0x10b4: V1380 = ADD V1383 S4
0x10b5: V1381 = 0x40
0x10b7: V1382 = ADD 0x40 V1380
0x10b8: M[V1382] = V1379
0x10ba: V1383 = ADD S2 V1383
0x10bb: V1384 = 0x10a3
0x10be: JUMP 0x10a3
---
Entry stack: [S5, S4, S3, S2, S1, V1383]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V1383]
Exit stack: [S5, S4, S3, S2, S1, V1383]

================================

Block 0x10bf
[0x10bf:0x10de]
---
Predecessors: [0x10a3]
Successors: []
Has unresolved jump.
---
0x10bf JUMPDEST
0x10c0 POP
0x10c1 MISSING 0x5f
0x10c2 PUSH1 0x40
0x10c4 DUP3
0x10c5 DUP7
0x10c6 ADD
0x10c7 ADD
0x10c8 MSTORE
0x10c9 PUSH1 0x40
0x10cb PUSH1 0x1f
0x10cd NOT
0x10ce PUSH1 0x1f
0x10d0 DUP4
0x10d1 ADD
0x10d2 AND
0x10d3 DUP6
0x10d4 ADD
0x10d5 ADD
0x10d6 SWAP3
0x10d7 POP
0x10d8 POP
0x10d9 POP
0x10da SWAP3
0x10db SWAP2
0x10dc POP
0x10dd POP
0x10de JUMP
---
0x10bf: JUMPDEST 
0x10c1: MISSING 0x5f
0x10c2: V1385 = 0x40
0x10c6: V1386 = ADD S4 S1
0x10c7: V1387 = ADD V1386 0x40
0x10c8: M[V1387] = S0
0x10c9: V1388 = 0x40
0x10cb: V1389 = 0x1f
0x10cd: V1390 = NOT 0x1f
0x10ce: V1391 = 0x1f
0x10d1: V1392 = ADD S1 0x1f
0x10d2: V1393 = AND V1392 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x10d4: V1394 = ADD S4 V1393
0x10d5: V1395 = ADD V1394 0x40
0x10de: JUMP S6
---
Entry stack: [S5, S4, S3, S2, S1, V1383]
Stack pops: 2
Stack additions: [V1395]
Exit stack: []

================================

Block 0x10df
[0x10df:0x10ef]
---
Predecessors: [0x1104, 0x112f, 0x113a, 0x116b, 0x1187, 0x1192, 0x11f2]
Successors: [0x5e8, 0x10f0]
---
0x10df JUMPDEST
0x10e0 PUSH1 0x1
0x10e2 PUSH1 0x1
0x10e4 PUSH1 0xa0
0x10e6 SHL
0x10e7 SUB
0x10e8 DUP2
0x10e9 AND
0x10ea DUP2
0x10eb EQ
0x10ec PUSH2 0x5e8
0x10ef JUMPI
---
0x10df: JUMPDEST 
0x10e0: V1396 = 0x1
0x10e2: V1397 = 0x1
0x10e4: V1398 = 0xa0
0x10e6: V1399 = SHL 0xa0 0x1
0x10e7: V1400 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10e9: V1401 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x10eb: V1402 = EQ S0 V1401
0x10ec: V1403 = 0x5e8
0x10ef: JUMPI 0x5e8 V1402
---
Entry stack: [S7, S6, S5, S4, S3, S2, {0x4f4, 0x110f, 0x113a, 0x114a, 0x1192, 0x11a2}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [S7, S6, S5, S4, S3, S2, {0x4f4, 0x110f, 0x113a, 0x114a, 0x1192, 0x11a2}, S0]

================================

Block 0x10f0
[0x10f0:0x10f2]
---
Predecessors: [0x10df]
Successors: []
---
0x10f0 MISSING 0x5f
0x10f1 DUP1
0x10f2 REVERT
---
0x10f0: MISSING 0x5f
0x10f2: REVERT S0 S0
---
Entry stack: [S7, S6, V1420, V1444, S3, S2, {0x4f4, 0x110f, 0x113a, 0x114a, 0x1192, 0x11a2}, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x10f3
[0x10f3:0x1100]
---
Predecessors: [0x199, 0x31f]
Successors: [0x1101, 0x1104]
---
0x10f3 JUMPDEST
0x10f4 MISSING 0x5f
0x10f5 DUP1
0x10f6 PUSH1 0x40
0x10f8 DUP4
0x10f9 DUP6
0x10fa SUB
0x10fb SLT
0x10fc ISZERO
0x10fd PUSH2 0x1104
0x1100 JUMPI
---
0x10f3: JUMPDEST 
0x10f4: MISSING 0x5f
0x10f6: V1404 = 0x40
0x10fa: V1405 = SUB S2 S1
0x10fb: V1406 = SLT V1405 0x40
0x10fc: V1407 = ISZERO V1406
0x10fd: V1408 = 0x1104
0x1100: JUMPI 0x1104 V1407
---
Entry stack: [V8, 0x1ad, {0x1a8, 0x32e}, S1, 0x4]
Stack pops: 0
Stack additions: [S0, S0, S1, S2]
Exit stack: []

================================

Block 0x1101
[0x1101:0x1103]
---
Predecessors: [0x10f3]
Successors: []
---
0x1101 MISSING 0x5f
0x1102 DUP1
0x1103 REVERT
---
0x1101: MISSING 0x5f
0x1103: REVERT S0 S0
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1104
[0x1104:0x110e]
---
Predecessors: [0x10f3]
Successors: [0x10df]
---
0x1104 JUMPDEST
0x1105 DUP3
0x1106 CALLDATALOAD
0x1107 PUSH2 0x110f
0x110a DUP2
0x110b PUSH2 0x10df
0x110e JUMP
---
0x1104: JUMPDEST 
0x1106: V1409 = CALLDATALOAD S2
0x1107: V1410 = 0x110f
0x110b: V1411 = 0x10df
0x110e: JUMP 0x10df
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1409, 0x110f, V1409]
Exit stack: [S3, S2, S1, S0, V1409, 0x110f, V1409]

================================

Block 0x110f
[0x110f:0x111c]
---
Predecessors: [0x5e8]
Successors: []
Has unresolved jump.
---
0x110f JUMPDEST
0x1110 SWAP5
0x1111 PUSH1 0x20
0x1113 SWAP4
0x1114 SWAP1
0x1115 SWAP4
0x1116 ADD
0x1117 CALLDATALOAD
0x1118 SWAP4
0x1119 POP
0x111a POP
0x111b POP
0x111c JUMP
---
0x110f: JUMPDEST 
0x1111: V1412 = 0x20
0x1116: V1413 = ADD 0x20 V1420
0x1117: V1414 = CALLDATALOAD V1413
0x111c: JUMP S5
---
Entry stack: [S5, S4, V1420, V1444, S1, S0]
Stack pops: 6
Stack additions: [S0, V1414]
Exit stack: [S0, V1414]

================================

Block 0x111d
[0x111d:0x112b]
---
Predecessors: [0x1dc]
Successors: [0x112c, 0x112f]
---
0x111d JUMPDEST
0x111e MISSING 0x5f
0x111f DUP1
0x1120 MISSING 0x5f
0x1121 PUSH1 0x60
0x1123 DUP5
0x1124 DUP7
0x1125 SUB
0x1126 SLT
0x1127 ISZERO
0x1128 PUSH2 0x112f
0x112b JUMPI
---
0x111d: JUMPDEST 
0x111e: MISSING 0x5f
0x1120: MISSING 0x5f
0x1121: V1415 = 0x60
0x1125: V1416 = SUB S4 S3
0x1126: V1417 = SLT V1416 0x60
0x1127: V1418 = ISZERO V1417
0x1128: V1419 = 0x112f
0x112b: JUMPI 0x112f V1418
---
Entry stack: [V8, 0x1ad, 0x1eb, V136, 0x4]
Stack pops: 0
Stack additions: [S0, S0, S0, S1, S2, S3, S4]
Exit stack: []

================================

Block 0x112c
[0x112c:0x112e]
---
Predecessors: [0x111d]
Successors: []
---
0x112c MISSING 0x5f
0x112d DUP1
0x112e REVERT
---
0x112c: MISSING 0x5f
0x112e: REVERT S0 S0
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x112f
[0x112f:0x1139]
---
Predecessors: [0x111d]
Successors: [0x10df]
---
0x112f JUMPDEST
0x1130 DUP4
0x1131 CALLDATALOAD
0x1132 PUSH2 0x113a
0x1135 DUP2
0x1136 PUSH2 0x10df
0x1139 JUMP
---
0x112f: JUMPDEST 
0x1131: V1420 = CALLDATALOAD S3
0x1132: V1421 = 0x113a
0x1136: V1422 = 0x10df
0x1139: JUMP 0x10df
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V1420, 0x113a, V1420]
Exit stack: [S4, S3, S2, S1, S0, V1420, 0x113a, V1420]

================================

Block 0x113a
[0x113a:0x1149]
---
Predecessors: [0x5e8]
Successors: [0x10df]
---
0x113a JUMPDEST
0x113b SWAP3
0x113c POP
0x113d PUSH1 0x20
0x113f DUP5
0x1140 ADD
0x1141 CALLDATALOAD
0x1142 PUSH2 0x114a
0x1145 DUP2
0x1146 PUSH2 0x10df
0x1149 JUMP
---
0x113a: JUMPDEST 
0x113d: V1423 = 0x20
0x1140: V1424 = ADD S4 0x20
0x1141: V1425 = CALLDATALOAD V1424
0x1142: V1426 = 0x114a
0x1146: V1427 = 0x10df
0x1149: JUMP 0x10df
---
Entry stack: [S5, S4, V1420, V1444, S1, S0]
Stack pops: 5
Stack additions: [S4, S0, S2, S1, V1425, 0x114a, V1425]
Exit stack: [S5, S4, S0, V1444, S1, V1425, 0x114a, V1425]

================================

Block 0x114a
[0x114a:0x115a]
---
Predecessors: [0x5e8]
Successors: []
Has unresolved jump.
---
0x114a JUMPDEST
0x114b SWAP3
0x114c SWAP6
0x114d SWAP3
0x114e SWAP5
0x114f POP
0x1150 POP
0x1151 POP
0x1152 PUSH1 0x40
0x1154 SWAP2
0x1155 SWAP1
0x1156 SWAP2
0x1157 ADD
0x1158 CALLDATALOAD
0x1159 SWAP1
0x115a JUMP
---
0x114a: JUMPDEST 
0x1152: V1428 = 0x40
0x1157: V1429 = ADD 0x40 S4
0x1158: V1430 = CALLDATALOAD V1429
0x115a: JUMP S6
---
Entry stack: [S5, S4, V1420, V1444, S1, S0]
Stack pops: 7
Stack additions: [S3, S0, V1430]
Exit stack: [V1420, S0, V1430]

================================

Block 0x115b
[0x115b:0x1167]
---
Predecessors: [0x244, 0x352]
Successors: [0x1168, 0x116b]
---
0x115b JUMPDEST
0x115c MISSING 0x5f
0x115d PUSH1 0x20
0x115f DUP3
0x1160 DUP5
0x1161 SUB
0x1162 SLT
0x1163 ISZERO
0x1164 PUSH2 0x116b
0x1167 JUMPI
---
0x115b: JUMPDEST 
0x115c: MISSING 0x5f
0x115d: V1431 = 0x20
0x1161: V1432 = SUB S2 S1
0x1162: V1433 = SLT V1432 0x20
0x1163: V1434 = ISZERO V1433
0x1164: V1435 = 0x116b
0x1167: JUMPI 0x116b V1434
---
Entry stack: [V8, {0x13e, 0x281}, {0x253, 0x361}, S1, 0x4]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0x1168
[0x1168:0x116a]
---
Predecessors: [0x115b]
Successors: []
---
0x1168 MISSING 0x5f
0x1169 DUP1
0x116a REVERT
---
0x1168: MISSING 0x5f
0x116a: REVERT S0 S0
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x116b
[0x116b:0x1175]
---
Predecessors: [0x115b]
Successors: [0x10df]
---
0x116b JUMPDEST
0x116c DUP2
0x116d CALLDATALOAD
0x116e PUSH2 0x4f4
0x1171 DUP2
0x1172 PUSH2 0x10df
0x1175 JUMP
---
0x116b: JUMPDEST 
0x116d: V1436 = CALLDATALOAD S1
0x116e: V1437 = 0x4f4
0x1172: V1438 = 0x10df
0x1175: JUMP 0x10df
---
Entry stack: [S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V1436, 0x4f4, V1436]
Exit stack: [S2, S1, S0, V1436, 0x4f4, V1436]

================================

Block 0x1176
[0x1176:0x1183]
---
Predecessors: [0x371]
Successors: [0x1184, 0x1187]
---
0x1176 JUMPDEST
0x1177 MISSING 0x5f
0x1178 DUP1
0x1179 PUSH1 0x40
0x117b DUP4
0x117c DUP6
0x117d SUB
0x117e SLT
0x117f ISZERO
0x1180 PUSH2 0x1187
0x1183 JUMPI
---
0x1176: JUMPDEST 
0x1177: MISSING 0x5f
0x1179: V1439 = 0x40
0x117d: V1440 = SUB S2 S1
0x117e: V1441 = SLT V1440 0x40
0x117f: V1442 = ISZERO V1441
0x1180: V1443 = 0x1187
0x1183: JUMPI 0x1187 V1442
---
Entry stack: [V8, 0x13e, 0x380, V266, 0x4]
Stack pops: 0
Stack additions: [S0, S0, S1, S2]
Exit stack: []

================================

Block 0x1184
[0x1184:0x1186]
---
Predecessors: [0x1176]
Successors: []
---
0x1184 MISSING 0x5f
0x1185 DUP1
0x1186 REVERT
---
0x1184: MISSING 0x5f
0x1186: REVERT S0 S0
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1187
[0x1187:0x1191]
---
Predecessors: [0x1176]
Successors: [0x10df]
---
0x1187 JUMPDEST
0x1188 DUP3
0x1189 CALLDATALOAD
0x118a PUSH2 0x1192
0x118d DUP2
0x118e PUSH2 0x10df
0x1191 JUMP
---
0x1187: JUMPDEST 
0x1189: V1444 = CALLDATALOAD S2
0x118a: V1445 = 0x1192
0x118e: V1446 = 0x10df
0x1191: JUMP 0x10df
---
Entry stack: [S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1444, 0x1192, V1444]
Exit stack: [S3, S2, S1, S0, V1444, 0x1192, V1444]

================================

Block 0x1192
[0x1192:0x11a1]
---
Predecessors: [0x5e8]
Successors: [0x10df]
---
0x1192 JUMPDEST
0x1193 SWAP2
0x1194 POP
0x1195 PUSH1 0x20
0x1197 DUP4
0x1198 ADD
0x1199 CALLDATALOAD
0x119a PUSH2 0x11a2
0x119d DUP2
0x119e PUSH2 0x10df
0x11a1 JUMP
---
0x1192: JUMPDEST 
0x1195: V1447 = 0x20
0x1198: V1448 = ADD V1420 0x20
0x1199: V1449 = CALLDATALOAD V1448
0x119a: V1450 = 0x11a2
0x119e: V1451 = 0x10df
0x11a1: JUMP 0x10df
---
Entry stack: [S5, S4, V1420, V1444, S1, S0]
Stack pops: 4
Stack additions: [S3, S0, S1, V1449, 0x11a2, V1449]
Exit stack: [S5, S4, V1420, S0, S1, V1449, 0x11a2, V1449]

================================

Block 0x11a2
[0x11a2:0x11ac]
---
Predecessors: [0x5e8]
Successors: []
Has unresolved jump.
---
0x11a2 JUMPDEST
0x11a3 DUP1
0x11a4 SWAP2
0x11a5 POP
0x11a6 POP
0x11a7 SWAP3
0x11a8 POP
0x11a9 SWAP3
0x11aa SWAP1
0x11ab POP
0x11ac JUMP
---
0x11a2: JUMPDEST 
0x11ac: JUMP S5
---
Entry stack: [S5, S4, V1420, V1444, S1, S0]
Stack pops: 6
Stack additions: [S2, S0]
Exit stack: [V1444, S0]

================================

Block 0x11ad
[0x11ad:0x11e1]
---
Predecessors: [0x50d, 0x587, 0x5fd, 0x648]
Successors: [0x524]
---
0x11ad JUMPDEST
0x11ae PUSH1 0x20
0x11b0 DUP1
0x11b1 DUP3
0x11b2 MSTORE
0x11b3 DUP2
0x11b4 DUP2
0x11b5 ADD
0x11b6 MSTORE
0x11b7 PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572
0x11d8 PUSH1 0x40
0x11da DUP3
0x11db ADD
0x11dc MSTORE
0x11dd PUSH1 0x60
0x11df ADD
0x11e0 SWAP1
0x11e1 JUMP
---
0x11ad: JUMPDEST 
0x11ae: V1452 = 0x20
0x11b2: M[S0] = 0x20
0x11b5: V1453 = ADD 0x20 S0
0x11b6: M[V1453] = 0x20
0x11b7: V1454 = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572
0x11d8: V1455 = 0x40
0x11db: V1456 = ADD S0 0x40
0x11dc: M[V1456] = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572
0x11dd: V1457 = 0x60
0x11df: V1458 = ADD 0x60 S0
0x11e1: JUMP 0x524
---
Entry stack: [0x524, S0]
Stack pops: 2
Stack additions: [V1458]
Exit stack: [V1458]

================================

Block 0x11e2
[0x11e2:0x11ee]
---
Predecessors: [0x6af, 0x731, 0x79e, 0xda9]
Successors: [0x11ef, 0x11f2]
---
0x11e2 JUMPDEST
0x11e3 MISSING 0x5f
0x11e4 PUSH1 0x20
0x11e6 DUP3
0x11e7 DUP5
0x11e8 SUB
0x11e9 SLT
0x11ea ISZERO
0x11eb PUSH2 0x11f2
0x11ee JUMPI
---
0x11e2: JUMPDEST 
0x11e3: MISSING 0x5f
0x11e4: V1459 = 0x20
0x11e8: V1460 = SUB S2 S1
0x11e9: V1461 = SLT V1460 0x20
0x11ea: V1462 = ISZERO V1461
0x11eb: V1463 = 0x11f2
0x11ee: JUMPI 0x11f2 V1462
---
Entry stack: [{0x6d3, 0x755, 0x7c2, 0xdcd}, S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0x11ef
[0x11ef:0x11f1]
---
Predecessors: [0x11e2]
Successors: []
---
0x11ef MISSING 0x5f
0x11f0 DUP1
0x11f1 REVERT
---
0x11ef: MISSING 0x5f
0x11f1: REVERT S0 S0
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x11f2
[0x11f2:0x11fc]
---
Predecessors: [0x11e2]
Successors: [0x10df]
---
0x11f2 JUMPDEST
0x11f3 DUP2
0x11f4 MLOAD
0x11f5 PUSH2 0x4f4
0x11f8 DUP2
0x11f9 PUSH2 0x10df
0x11fc JUMP
---
0x11f2: JUMPDEST 
0x11f4: V1464 = M[S1]
0x11f5: V1465 = 0x4f4
0x11f9: V1466 = 0x10df
0x11fc: JUMP 0x10df
---
Entry stack: [S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V1464, 0x4f4, V1464]
Exit stack: [S2, S1, S0, V1464, 0x4f4, V1464]

================================

Block 0x11fd
[0x11fd:0x120b]
---
Predecessors: [0x882]
Successors: [0x120c, 0x120f]
---
0x11fd JUMPDEST
0x11fe MISSING 0x5f
0x11ff DUP1
0x1200 MISSING 0x5f
0x1201 PUSH1 0x60
0x1203 DUP5
0x1204 DUP7
0x1205 SUB
0x1206 SLT
0x1207 ISZERO
0x1208 PUSH2 0x120f
0x120b JUMPI
---
0x11fd: JUMPDEST 
0x11fe: MISSING 0x5f
0x1200: MISSING 0x5f
0x1201: V1467 = 0x60
0x1205: V1468 = SUB S4 S3
0x1206: V1469 = SLT V1468 0x60
0x1207: V1470 = ISZERO V1469
0x1208: V1471 = 0x120f
0x120b: JUMPI 0x120f V1470
---
Entry stack: [0x8a7, V758, V749]
Stack pops: 0
Stack additions: [S0, S0, S0, S1, S2, S3, S4]
Exit stack: []

================================

Block 0x120c
[0x120c:0x120e]
---
Predecessors: [0x11fd]
Successors: []
---
0x120c MISSING 0x5f
0x120d DUP1
0x120e REVERT
---
0x120c: MISSING 0x5f
0x120e: REVERT S0 S0
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x120f
[0x120f:0x1227]
---
Predecessors: [0x11fd]
Successors: []
Has unresolved jump.
---
0x120f JUMPDEST
0x1210 DUP4
0x1211 MLOAD
0x1212 SWAP3
0x1213 POP
0x1214 PUSH1 0x20
0x1216 DUP5
0x1217 ADD
0x1218 MLOAD
0x1219 SWAP2
0x121a POP
0x121b PUSH1 0x40
0x121d DUP5
0x121e ADD
0x121f MLOAD
0x1220 SWAP1
0x1221 POP
0x1222 SWAP3
0x1223 POP
0x1224 SWAP3
0x1225 POP
0x1226 SWAP3
0x1227 JUMP
---
0x120f: JUMPDEST 
0x1211: V1472 = M[S3]
0x1214: V1473 = 0x20
0x1217: V1474 = ADD S3 0x20
0x1218: V1475 = M[V1474]
0x121b: V1476 = 0x40
0x121e: V1477 = ADD S3 0x40
0x121f: V1478 = M[V1477]
0x1227: JUMP S5
---
Entry stack: [S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V1472, V1475, V1478]
Exit stack: [V1472, V1475, V1478]

================================

Block 0x1228
[0x1228:0x123b]
---
Predecessors: [0x1248, 0x125b, 0x130c]
Successors: []
---
0x1228 JUMPDEST
0x1229 PUSH4 0x4e487b71
0x122e PUSH1 0xe0
0x1230 SHL
0x1231 MISSING 0x5f
0x1232 MSTORE
0x1233 PUSH1 0x11
0x1235 PUSH1 0x4
0x1237 MSTORE
0x1238 PUSH1 0x24
0x123a MISSING 0x5f
0x123b REVERT
---
0x1228: JUMPDEST 
0x1229: V1479 = 0x4e487b71
0x122e: V1480 = 0xe0
0x1230: V1481 = SHL 0xe0 0x4e487b71
0x1231: MISSING 0x5f
0x1232: M[S0] = S1
0x1233: V1482 = 0x11
0x1235: V1483 = 0x4
0x1237: M[0x4] = 0x11
0x1238: V1484 = 0x24
0x123a: MISSING 0x5f
0x123b: REVERT S0 S1
---
Entry stack: [S9, S8, S7, S6, S5, {0x8e8, 0x9b4, 0xf16, 0xf82}, S3, V864, S1, 0x437]
Stack pops: 0
Stack additions: [0x4e487b7100000000000000000000000000000000000000000000000000000000, 0x24]
Exit stack: []

================================

Block 0x123c
[0x123c:0x1247]
---
Predecessors: [0x8dc]
Successors: [0x437, 0x1248]
---
0x123c JUMPDEST
0x123d DUP2
0x123e DUP2
0x123f SUB
0x1240 DUP2
0x1241 DUP2
0x1242 GT
0x1243 ISZERO
0x1244 PUSH2 0x437
0x1247 JUMPI
---
0x123c: JUMPDEST 
0x123f: V1485 = SUB S0 S1
0x1242: V1486 = GT V1485 S0
0x1243: V1487 = ISZERO V1486
0x1244: V1488 = 0x437
0x1247: JUMPI 0x437 V1487
---
Entry stack: [S7, S6, S5, S4, S3, 0x8e8, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V1485]
Exit stack: [S7, S6, S5, S4, S3, 0x8e8, S1, S0, V1485]

================================

Block 0x1248
[0x1248:0x124e]
---
Predecessors: [0x123c]
Successors: [0x1228]
---
0x1248 PUSH2 0x437
0x124b PUSH2 0x1228
0x124e JUMP
---
0x1248: V1489 = 0x437
0x124b: V1490 = 0x1228
0x124e: JUMP 0x1228
---
Entry stack: [S8, S7, S6, S5, S4, 0x8e8, S2, S1, V1485]
Stack pops: 0
Stack additions: [0x437]
Exit stack: [S8, S7, S6, S5, S4, 0x8e8, S2, S1, V1485, 0x437]

================================

Block 0x124f
[0x124f:0x125a]
---
Predecessors: [0x98e, 0xf0a]
Successors: [0x437, 0x125b]
---
0x124f JUMPDEST
0x1250 DUP1
0x1251 DUP3
0x1252 ADD
0x1253 DUP1
0x1254 DUP3
0x1255 GT
0x1256 ISZERO
0x1257 PUSH2 0x437
0x125a JUMPI
---
0x124f: JUMPDEST 
0x1252: V1491 = ADD S1 V864
0x1255: V1492 = GT V864 V1491
0x1256: V1493 = ISZERO V1492
0x1257: V1494 = 0x437
0x125a: JUMPI 0x437 V1493
---
Entry stack: [S6, S5, S4, S3, {0x9b4, 0xf16}, S1, V864]
Stack pops: 2
Stack additions: [S1, S0, V1491]
Exit stack: [S6, S5, S4, S3, {0x9b4, 0xf16}, S1, V864, V1491]

================================

Block 0x125b
[0x125b:0x1261]
---
Predecessors: [0x124f]
Successors: [0x1228]
---
0x125b PUSH2 0x437
0x125e PUSH2 0x1228
0x1261 JUMP
---
0x125b: V1495 = 0x437
0x125e: V1496 = 0x1228
0x1261: JUMP 0x1228
---
Entry stack: [S7, S6, S5, S4, {0x9b4, 0xf16}, S2, V864, V1491]
Stack pops: 0
Stack additions: [0x437]
Exit stack: [S7, S6, S5, S4, {0x9b4, 0xf16}, S2, V864, V1491, 0x437]

================================

Block 0x1262
[0x1262:0x126e]
---
Predecessors: [0xa82]
Successors: [0x126f, 0x1272]
---
0x1262 JUMPDEST
0x1263 MISSING 0x5f
0x1264 PUSH1 0x20
0x1266 DUP3
0x1267 DUP5
0x1268 SUB
0x1269 SLT
0x126a ISZERO
0x126b PUSH2 0x1272
0x126e JUMPI
---
0x1262: JUMPDEST 
0x1263: MISSING 0x5f
0x1264: V1497 = 0x20
0x1268: V1498 = SUB S2 S1
0x1269: V1499 = SLT V1498 0x20
0x126a: V1500 = ISZERO V1499
0x126b: V1501 = 0x1272
0x126e: JUMPI 0x1272 V1500
---
Entry stack: [S6, S5, S4, S3, 0xaa6, V949, V940]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0x126f
[0x126f:0x1271]
---
Predecessors: [0x1262]
Successors: []
---
0x126f MISSING 0x5f
0x1270 DUP1
0x1271 REVERT
---
0x126f: MISSING 0x5f
0x1271: REVERT S0 S0
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1272
[0x1272:0x1278]
---
Predecessors: [0x1262]
Successors: []
Has unresolved jump.
---
0x1272 JUMPDEST
0x1273 POP
0x1274 MLOAD
0x1275 SWAP2
0x1276 SWAP1
0x1277 POP
0x1278 JUMP
---
0x1272: JUMPDEST 
0x1274: V1502 = M[S1]
0x1278: JUMP S3
---
Entry stack: [S2, S1, S0]
Stack pops: 4
Stack additions: [V1502]
Exit stack: [V1502]

================================

Block 0x1279
[0x1279:0x128c]
---
Predecessors: [0xd4b, 0xdd9]
Successors: []
---
0x1279 JUMPDEST
0x127a PUSH4 0x4e487b71
0x127f PUSH1 0xe0
0x1281 SHL
0x1282 MISSING 0x5f
0x1283 MSTORE
0x1284 PUSH1 0x32
0x1286 PUSH1 0x4
0x1288 MSTORE
0x1289 PUSH1 0x24
0x128b MISSING 0x5f
0x128c REVERT
---
0x1279: JUMPDEST 
0x127a: V1503 = 0x4e487b71
0x127f: V1504 = 0xe0
0x1281: V1505 = SHL 0xe0 0x4e487b71
0x1282: MISSING 0x5f
0x1283: M[S0] = S1
0x1284: V1506 = 0x32
0x1286: V1507 = 0x4
0x1288: M[0x4] = 0x32
0x1289: V1508 = 0x24
0x128b: MISSING 0x5f
0x128c: REVERT S0 S1
---
Entry stack: [S4, S3, S2, 0x1, {0xd52, 0xde0}]
Stack pops: 0
Stack additions: [0x4e487b7100000000000000000000000000000000000000000000000000000000, 0x24]
Exit stack: []

================================

Block 0x128d
[0x128d:0x12b5]
---
Predecessors: [0xde0]
Successors: []
---
0x128d JUMPDEST
0x128e MISSING 0x5f
0x128f PUSH1 0xa0
0x1291 DUP3
0x1292 ADD
0x1293 DUP8
0x1294 DUP4
0x1295 MSTORE
0x1296 PUSH1 0x20
0x1298 DUP8
0x1299 DUP2
0x129a DUP6
0x129b ADD
0x129c MSTORE
0x129d PUSH1 0xa0
0x129f PUSH1 0x40
0x12a1 DUP6
0x12a2 ADD
0x12a3 MSTORE
0x12a4 DUP2
0x12a5 DUP8
0x12a6 MLOAD
0x12a7 DUP1
0x12a8 DUP5
0x12a9 MSTORE
0x12aa PUSH1 0xc0
0x12ac DUP7
0x12ad ADD
0x12ae SWAP2
0x12af POP
0x12b0 DUP3
0x12b1 DUP10
0x12b2 ADD
0x12b3 SWAP4
0x12b4 POP
0x12b5 MISSING 0x5f
---
0x128d: JUMPDEST 
0x128e: MISSING 0x5f
0x128f: V1509 = 0xa0
0x1292: V1510 = ADD S1 0xa0
0x1295: M[S1] = S6
0x1296: V1511 = 0x20
0x129b: V1512 = ADD S1 0x20
0x129c: M[V1512] = S5
0x129d: V1513 = 0xa0
0x129f: V1514 = 0x40
0x12a2: V1515 = ADD S1 0x40
0x12a3: M[V1515] = 0xa0
0x12a6: V1516 = M[S4]
0x12a9: M[V1510] = V1516
0x12aa: V1517 = 0xc0
0x12ad: V1518 = ADD S1 0xc0
0x12b2: V1519 = ADD S4 0x20
0x12b5: MISSING 0x5f
---
Entry stack: [S9, S8, S7, S6, S5, S4, S3, V1222, V1223, V1225]
Stack pops: 0
Stack additions: [V1516, V1518, 0x20, V1519, S0, S1, S2, S3, S4, S5, S6]
Exit stack: []

================================

Block 0x12b6
[0x12b6:0x12be]
---
Predecessors: [0x12bf]
Successors: [0x12bf, 0x12db]
---
0x12b6 JUMPDEST
0x12b7 DUP2
0x12b8 DUP2
0x12b9 LT
0x12ba ISZERO
0x12bb PUSH2 0x12db
0x12be JUMPI
---
0x12b6: JUMPDEST 
0x12b9: V1520 = LT V1533 S1
0x12ba: V1521 = ISZERO V1520
0x12bb: V1522 = 0x12db
0x12be: JUMPI 0x12db V1521
---
Entry stack: [V1530, S3, V1531, S1, V1533]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V1530, S3, V1531, S1, V1533]

================================

Block 0x12bf
[0x12bf:0x12da]
---
Predecessors: [0x12b6]
Successors: [0x12b6]
---
0x12bf DUP5
0x12c0 MLOAD
0x12c1 PUSH1 0x1
0x12c3 PUSH1 0x1
0x12c5 PUSH1 0xa0
0x12c7 SHL
0x12c8 SUB
0x12c9 AND
0x12ca DUP4
0x12cb MSTORE
0x12cc SWAP4
0x12cd DUP4
0x12ce ADD
0x12cf SWAP4
0x12d0 SWAP2
0x12d1 DUP4
0x12d2 ADD
0x12d3 SWAP2
0x12d4 PUSH1 0x1
0x12d6 ADD
0x12d7 PUSH2 0x12b6
0x12da JUMP
---
0x12c0: V1523 = M[V1530]
0x12c1: V1524 = 0x1
0x12c3: V1525 = 0x1
0x12c5: V1526 = 0xa0
0x12c7: V1527 = SHL 0xa0 0x1
0x12c8: V1528 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12c9: V1529 = AND 0xffffffffffffffffffffffffffffffffffffffff V1523
0x12cb: M[V1531] = V1529
0x12ce: V1530 = ADD S3 V1530
0x12d2: V1531 = ADD S3 V1531
0x12d4: V1532 = 0x1
0x12d6: V1533 = ADD 0x1 V1533
0x12d7: V1534 = 0x12b6
0x12da: JUMP 0x12b6
---
Entry stack: [V1530, S3, V1531, S1, V1533]
Stack pops: 5
Stack additions: [V1530, S3, V1531, S1, V1533]
Exit stack: [V1530, S3, V1531, S1, V1533]

================================

Block 0x12db
[0x12db:0x12fb]
---
Predecessors: [0x12b6]
Successors: []
Has unresolved jump.
---
0x12db JUMPDEST
0x12dc POP
0x12dd POP
0x12de PUSH1 0x1
0x12e0 PUSH1 0x1
0x12e2 PUSH1 0xa0
0x12e4 SHL
0x12e5 SUB
0x12e6 SWAP7
0x12e7 SWAP1
0x12e8 SWAP7
0x12e9 AND
0x12ea PUSH1 0x60
0x12ec DUP6
0x12ed ADD
0x12ee MSTORE
0x12ef POP
0x12f0 POP
0x12f1 POP
0x12f2 PUSH1 0x80
0x12f4 ADD
0x12f5 MSTORE
0x12f6 SWAP4
0x12f7 SWAP3
0x12f8 POP
0x12f9 POP
0x12fa POP
0x12fb JUMP
---
0x12db: JUMPDEST 
0x12de: V1535 = 0x1
0x12e0: V1536 = 0x1
0x12e2: V1537 = 0xa0
0x12e4: V1538 = SHL 0xa0 0x1
0x12e5: V1539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12e9: V1540 = AND 0xffffffffffffffffffffffffffffffffffffffff S8
0x12ea: V1541 = 0x60
0x12ed: V1542 = ADD S6 0x60
0x12ee: M[V1542] = V1540
0x12f2: V1543 = 0x80
0x12f4: V1544 = ADD 0x80 S6
0x12f5: M[V1544] = S7
0x12fb: JUMP S12
---
Entry stack: [V1530, S3, V1531, S1, V1533]
Stack pops: 13
Stack additions: [S2]
Exit stack: [V1531]

================================

Block 0x12fc
[0x12fc:0x130b]
---
Predecessors: [0xf77]
Successors: [0x437, 0x130c]
---
0x12fc JUMPDEST
0x12fd DUP1
0x12fe DUP3
0x12ff MUL
0x1300 DUP2
0x1301 ISZERO
0x1302 DUP3
0x1303 DUP3
0x1304 DIV
0x1305 DUP5
0x1306 EQ
0x1307 OR
0x1308 PUSH2 0x437
0x130b JUMPI
---
0x12fc: JUMPDEST 
0x12ff: V1545 = MUL S1 S0
0x1301: V1546 = ISZERO S0
0x1304: V1547 = DIV V1545 S0
0x1306: V1548 = EQ S1 V1547
0x1307: V1549 = OR V1548 V1546
0x1308: V1550 = 0x437
0x130b: JUMPI 0x437 V1549
---
Entry stack: [S6, S5, S4, S3, 0xf82, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V1545]
Exit stack: [S6, S5, S4, S3, 0xf82, S1, S0, V1545]

================================

Block 0x130c
[0x130c:0x1312]
---
Predecessors: [0x12fc]
Successors: [0x1228]
---
0x130c PUSH2 0x437
0x130f PUSH2 0x1228
0x1312 JUMP
---
0x130c: V1551 = 0x437
0x130f: V1552 = 0x1228
0x1312: JUMP 0x1228
---
Entry stack: [S7, S6, S5, S4, 0xf82, S2, S1, V1545]
Stack pops: 0
Stack additions: [0x437]
Exit stack: [S7, S6, S5, S4, 0xf82, S2, S1, V1545, 0x437]

================================

Block 0x1313
[0x1313:0x1319]
---
Predecessors: [0xf82, 0x1088]
Successors: [0x131a, 0x132d]
---
0x1313 JUMPDEST
0x1314 MISSING 0x5f
0x1315 DUP3
0x1316 PUSH2 0x132d
0x1319 JUMPI
---
0x1313: JUMPDEST 
0x1314: MISSING 0x5f
0x1316: V1553 = 0x132d
0x1319: JUMPI 0x132d S2
---
Entry stack: [S8, S7, S6, S5, S4, S3, {0x8e8, 0xf8f}, S1, S0]
Stack pops: 0
Stack additions: [S0, S1, S2]
Exit stack: []

================================

Block 0x131a
[0x131a:0x132c]
---
Predecessors: [0x1313]
Successors: []
---
0x131a PUSH4 0x4e487b71
0x131f PUSH1 0xe0
0x1321 SHL
0x1322 MISSING 0x5f
0x1323 MSTORE
0x1324 PUSH1 0x12
0x1326 PUSH1 0x4
0x1328 MSTORE
0x1329 PUSH1 0x24
0x132b MISSING 0x5f
0x132c REVERT
---
0x131a: V1554 = 0x4e487b71
0x131f: V1555 = 0xe0
0x1321: V1556 = SHL 0xe0 0x4e487b71
0x1322: MISSING 0x5f
0x1323: M[S0] = S1
0x1324: V1557 = 0x12
0x1326: V1558 = 0x4
0x1328: M[0x4] = 0x12
0x1329: V1559 = 0x24
0x132b: MISSING 0x5f
0x132c: REVERT S0 S1
---
Entry stack: [S2, S1, S0]
Stack pops: 0
Stack additions: [0x4e487b7100000000000000000000000000000000000000000000000000000000, 0x24]
Exit stack: []

================================

Block 0x132d
[0x132d:0x1350]
---
Predecessors: [0x1313]
Successors: [0x1351]
Has unresolved jump.
---
0x132d JUMPDEST
0x132e POP
0x132f DIV
0x1330 SWAP1
0x1331 JUMP
0x1332 INVALID
0x1333 LOG2
0x1334 PUSH5 0x6970667358
0x133a MISSING 0x22
0x133b SLT
0x133c SHA3
0x133d LT
0x133e MISSING 0x26
0x133f MISSING 0xc7
0x1340 SWAP15
0x1341 MISSING 0xde
0x1342 MISSING 0xaf
0x1343 PUSH9 0xd1168554d59d0f1b75
0x134d DUP4
0x134e MISSING 0xe6
0x134f NOT
0x1350 JUMPI
---
0x132d: JUMPDEST 
0x132f: V1560 = DIV S1 S2
0x1331: JUMP S3
0x1332: INVALID 
0x1333: LOG S0 S1 S2 S3
0x1334: V1561 = 0x6970667358
0x133a: MISSING 0x22
0x133b: V1562 = SLT S0 S1
0x133c: V1563 = SHA3 V1562 S2
0x133d: V1564 = LT V1563 S3
0x133e: MISSING 0x26
0x133f: MISSING 0xc7
0x1341: MISSING 0xde
0x1342: MISSING 0xaf
0x1343: V1565 = 0xd1168554d59d0f1b75
0x134e: MISSING 0xe6
0x134f: V1566 = NOT S0
0x1350: JUMPI V1566 S1
---
Entry stack: [S2, S1, S0]
Stack pops: 779
Stack additions: []
Exit stack: []

================================

Block 0x1351
[0x1351:0x1369]
---
Predecessors: [0x132d]
Successors: []
---
0x1351 MISSING 0xde
0x1352 PUSH23 0x3866ef9a25b54e0a784b64736f6c63430008140033
---
0x1351: MISSING 0xde
0x1352: V1567 = 0x3866ef9a25b54e0a784b64736f6c63430008140033
---
Entry stack: []
Stack pops: 0
Stack additions: [0x3866ef9a25b54e0a784b64736f6c63430008140033]
Exit stack: []

================================

Function 0:
Private function
Entry block: 0x10df
Exit block: 0x5e8
Body: 0x5e8, 0x10df

Function 1:
Private function
Entry block: 0x124f
Exit block: 0x437
Body: 0x437, 0x124f

