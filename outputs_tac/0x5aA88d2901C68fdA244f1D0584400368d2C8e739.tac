Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1ac9f70d
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1ac9f70d
0x3c: V13 = EQ 0x1ac9f70d V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x92]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0x92
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0x92
0x4b: JUMPI 0x92 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x9c]
---
0x4c DUP1
0x4d PUSH4 0xb4a99a4e
0x52 EQ
0x53 PUSH2 0x9c
0x56 JUMPI
---
0x4d: V18 = 0xb4a99a4e
0x52: V19 = EQ 0xb4a99a4e V11
0x53: V20 = 0x9c
0x56: JUMPI 0x9c V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xf1]
---
0x57 DUP1
0x58 PUSH4 0xba21d62a
0x5d EQ
0x5e PUSH2 0xf1
0x61 JUMPI
---
0x58: V21 = 0xba21d62a
0x5d: V22 = EQ 0xba21d62a V11
0x5e: V23 = 0xf1
0x61: JUMPI 0xf1 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x8f]
---
Predecessors: [0xd]
Successors: [0x162]
---
0x64 JUMPDEST
0x65 PUSH2 0x90
0x68 PUSH1 0x4
0x6a DUP1
0x6b DUP1
0x6c CALLDATALOAD
0x6d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82 AND
0x83 SWAP1
0x84 PUSH1 0x20
0x86 ADD
0x87 SWAP1
0x88 SWAP2
0x89 SWAP1
0x8a POP
0x8b POP
0x8c PUSH2 0x162
0x8f JUMP
---
0x64: JUMPDEST 
0x65: V24 = 0x90
0x68: V25 = 0x4
0x6c: V26 = CALLDATALOAD 0x4
0x6d: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x82: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x84: V29 = 0x20
0x86: V30 = ADD 0x20 0x4
0x8c: V31 = 0x162
0x8f: JUMP 0x162
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x90, V28]
Exit stack: [V11, 0x90, V28]

================================

Block 0x90
[0x90:0x91]
---
Predecessors: [0x1dc]
Successors: []
---
0x90 JUMPDEST
0x91 STOP
---
0x90: JUMPDEST 
0x91: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x92
[0x92:0x99]
---
Predecessors: [0x41]
Successors: [0x1df]
---
0x92 JUMPDEST
0x93 PUSH2 0x9a
0x96 PUSH2 0x1df
0x99 JUMP
---
0x92: JUMPDEST 
0x93: V32 = 0x9a
0x96: V33 = 0x1df
0x99: JUMP 0x1df
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x9a]
Exit stack: [V11, 0x9a]

================================

Block 0x9a
[0x9a:0x9b]
---
Predecessors: [0x2b2]
Successors: []
---
0x9a JUMPDEST
0x9b STOP
---
0x9a: JUMPDEST 
0x9b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9c
[0x9c:0xa2]
---
Predecessors: [0x4c]
Successors: [0xa3, 0xa7]
---
0x9c JUMPDEST
0x9d CALLVALUE
0x9e ISZERO
0x9f PUSH2 0xa7
0xa2 JUMPI
---
0x9c: JUMPDEST 
0x9d: V34 = CALLVALUE
0x9e: V35 = ISZERO V34
0x9f: V36 = 0xa7
0xa2: JUMPI 0xa7 V35
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xa6]
---
Predecessors: [0x9c]
Successors: []
---
0xa3 PUSH1 0x0
0xa5 DUP1
0xa6 REVERT
---
0xa3: V37 = 0x0
0xa6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa7
[0xa7:0xae]
---
Predecessors: [0x9c]
Successors: [0x2b4]
---
0xa7 JUMPDEST
0xa8 PUSH2 0xaf
0xab PUSH2 0x2b4
0xae JUMP
---
0xa7: JUMPDEST 
0xa8: V38 = 0xaf
0xab: V39 = 0x2b4
0xae: JUMP 0x2b4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xaf]
Exit stack: [V11, 0xaf]

================================

Block 0xaf
[0xaf:0xf0]
---
Predecessors: [0x2b4]
Successors: []
---
0xaf JUMPDEST
0xb0 PUSH1 0x40
0xb2 MLOAD
0xb3 DUP1
0xb4 DUP3
0xb5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xca AND
0xcb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe0 AND
0xe1 DUP2
0xe2 MSTORE
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 SWAP2
0xe7 POP
0xe8 POP
0xe9 PUSH1 0x40
0xeb MLOAD
0xec DUP1
0xed SWAP2
0xee SUB
0xef SWAP1
0xf0 RETURN
---
0xaf: JUMPDEST 
0xb0: V40 = 0x40
0xb2: V41 = M[0x40]
0xb5: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xca: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0xcb: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xe0: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xe2: M[V41] = V45
0xe3: V46 = 0x20
0xe5: V47 = ADD 0x20 V41
0xe9: V48 = 0x40
0xeb: V49 = M[0x40]
0xee: V50 = SUB V47 V49
0xf0: RETURN V49 V50
---
Entry stack: [V11, 0xaf, V161]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xaf]

================================

Block 0xf1
[0xf1:0x15f]
---
Predecessors: [0x57]
Successors: [0x2d9]
---
0xf1 JUMPDEST
0xf2 PUSH2 0x160
0xf5 PUSH1 0x4
0xf7 DUP1
0xf8 DUP1
0xf9 CALLDATALOAD
0xfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f AND
0x110 SWAP1
0x111 PUSH1 0x20
0x113 ADD
0x114 SWAP1
0x115 SWAP2
0x116 SWAP1
0x117 DUP1
0x118 CALLDATALOAD
0x119 SWAP1
0x11a PUSH1 0x20
0x11c ADD
0x11d SWAP1
0x11e DUP3
0x11f ADD
0x120 DUP1
0x121 CALLDATALOAD
0x122 SWAP1
0x123 PUSH1 0x20
0x125 ADD
0x126 SWAP1
0x127 DUP1
0x128 DUP1
0x129 PUSH1 0x1f
0x12b ADD
0x12c PUSH1 0x20
0x12e DUP1
0x12f SWAP2
0x130 DIV
0x131 MUL
0x132 PUSH1 0x20
0x134 ADD
0x135 PUSH1 0x40
0x137 MLOAD
0x138 SWAP1
0x139 DUP2
0x13a ADD
0x13b PUSH1 0x40
0x13d MSTORE
0x13e DUP1
0x13f SWAP4
0x140 SWAP3
0x141 SWAP2
0x142 SWAP1
0x143 DUP2
0x144 DUP2
0x145 MSTORE
0x146 PUSH1 0x20
0x148 ADD
0x149 DUP4
0x14a DUP4
0x14b DUP1
0x14c DUP3
0x14d DUP5
0x14e CALLDATACOPY
0x14f DUP3
0x150 ADD
0x151 SWAP2
0x152 POP
0x153 POP
0x154 POP
0x155 POP
0x156 POP
0x157 POP
0x158 SWAP2
0x159 SWAP1
0x15a POP
0x15b POP
0x15c PUSH2 0x2d9
0x15f JUMP
---
0xf1: JUMPDEST 
0xf2: V51 = 0x160
0xf5: V52 = 0x4
0xf9: V53 = CALLDATALOAD 0x4
0xfa: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x111: V56 = 0x20
0x113: V57 = ADD 0x20 0x4
0x118: V58 = CALLDATALOAD 0x24
0x11a: V59 = 0x20
0x11c: V60 = ADD 0x20 0x24
0x11f: V61 = ADD 0x4 V58
0x121: V62 = CALLDATALOAD V61
0x123: V63 = 0x20
0x125: V64 = ADD 0x20 V61
0x129: V65 = 0x1f
0x12b: V66 = ADD 0x1f V62
0x12c: V67 = 0x20
0x130: V68 = DIV V66 0x20
0x131: V69 = MUL V68 0x20
0x132: V70 = 0x20
0x134: V71 = ADD 0x20 V69
0x135: V72 = 0x40
0x137: V73 = M[0x40]
0x13a: V74 = ADD V73 V71
0x13b: V75 = 0x40
0x13d: M[0x40] = V74
0x145: M[V73] = V62
0x146: V76 = 0x20
0x148: V77 = ADD 0x20 V73
0x14e: CALLDATACOPY V77 V64 V62
0x150: V78 = ADD V77 V62
0x15c: V79 = 0x2d9
0x15f: JUMP 0x2d9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x160, V55, V73]
Exit stack: [V11, 0x160, V55, V73]

================================

Block 0x160
[0x160:0x161]
---
Predecessors: [0x3a7]
Successors: []
---
0x160 JUMPDEST
0x161 STOP
---
0x160: JUMPDEST 
0x161: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x162
[0x162:0x182]
---
Predecessors: [0x64]
Successors: [0x183, 0x1dc]
---
0x162 JUMPDEST
0x163 ADDRESS
0x164 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x179 AND
0x17a BALANCE
0x17b CALLVALUE
0x17c LT
0x17d ISZERO
0x17e ISZERO
0x17f PUSH2 0x1dc
0x182 JUMPI
---
0x162: JUMPDEST 
0x163: V80 = ADDRESS
0x164: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x179: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x17a: V83 = BALANCE V82
0x17b: V84 = CALLVALUE
0x17c: V85 = LT V84 V83
0x17d: V86 = ISZERO V85
0x17e: V87 = ISZERO V86
0x17f: V88 = 0x1dc
0x182: JUMPI 0x1dc V87
---
Entry stack: [V11, 0x90, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V28]

================================

Block 0x183
[0x183:0x1d6]
---
Predecessors: [0x162]
Successors: [0x1d7, 0x1db]
---
0x183 DUP1
0x184 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x199 AND
0x19a PUSH2 0x8fc
0x19d CALLVALUE
0x19e ADDRESS
0x19f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b4 AND
0x1b5 BALANCE
0x1b6 ADD
0x1b7 SWAP1
0x1b8 DUP2
0x1b9 ISZERO
0x1ba MUL
0x1bb SWAP1
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf PUSH1 0x0
0x1c1 PUSH1 0x40
0x1c3 MLOAD
0x1c4 DUP1
0x1c5 DUP4
0x1c6 SUB
0x1c7 DUP2
0x1c8 DUP6
0x1c9 DUP9
0x1ca DUP9
0x1cb CALL
0x1cc SWAP4
0x1cd POP
0x1ce POP
0x1cf POP
0x1d0 POP
0x1d1 ISZERO
0x1d2 ISZERO
0x1d3 PUSH2 0x1db
0x1d6 JUMPI
---
0x184: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x199: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x19a: V91 = 0x8fc
0x19d: V92 = CALLVALUE
0x19e: V93 = ADDRESS
0x19f: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1b5: V96 = BALANCE V95
0x1b6: V97 = ADD V96 V92
0x1b9: V98 = ISZERO V97
0x1ba: V99 = MUL V98 0x8fc
0x1bc: V100 = 0x40
0x1be: V101 = M[0x40]
0x1bf: V102 = 0x0
0x1c1: V103 = 0x40
0x1c3: V104 = M[0x40]
0x1c6: V105 = SUB V101 V104
0x1cb: V106 = CALL V99 V90 V97 V104 V105 V104 0x0
0x1d1: V107 = ISZERO V106
0x1d2: V108 = ISZERO V107
0x1d3: V109 = 0x1db
0x1d6: JUMPI 0x1db V108
---
Entry stack: [V11, 0x90, V28]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x90, V28]

================================

Block 0x1d7
[0x1d7:0x1da]
---
Predecessors: [0x183]
Successors: []
---
0x1d7 PUSH1 0x0
0x1d9 DUP1
0x1da REVERT
---
0x1d7: V110 = 0x0
0x1da: REVERT 0x0 0x0
---
Entry stack: [V11, 0x90, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V28]

================================

Block 0x1db
[0x1db:0x1db]
---
Predecessors: [0x183]
Successors: [0x1dc]
---
0x1db JUMPDEST
---
0x1db: JUMPDEST 
---
Entry stack: [V11, 0x90, V28]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V28]

================================

Block 0x1dc
[0x1dc:0x1de]
---
Predecessors: [0x162, 0x1db]
Successors: [0x90]
---
0x1dc JUMPDEST
0x1dd POP
0x1de JUMP
---
0x1dc: JUMPDEST 
0x1de: JUMP 0x90
---
Entry stack: [V11, 0x90, V28]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1df
[0x1df:0x235]
---
Predecessors: [0x92]
Successors: [0x236, 0x23a]
---
0x1df JUMPDEST
0x1e0 PUSH1 0x0
0x1e2 DUP1
0x1e3 SWAP1
0x1e4 SLOAD
0x1e5 SWAP1
0x1e6 PUSH2 0x100
0x1e9 EXP
0x1ea SWAP1
0x1eb DIV
0x1ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x201 AND
0x202 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x217 AND
0x218 CALLER
0x219 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22e AND
0x22f EQ
0x230 ISZERO
0x231 ISZERO
0x232 PUSH2 0x23a
0x235 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V111 = 0x0
0x1e4: V112 = S[0x0]
0x1e6: V113 = 0x100
0x1e9: V114 = EXP 0x100 0x0
0x1eb: V115 = DIV V112 0x1
0x1ec: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x201: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x202: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x217: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x218: V120 = CALLER
0x219: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x22e: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x22f: V123 = EQ V122 V119
0x230: V124 = ISZERO V123
0x231: V125 = ISZERO V124
0x232: V126 = 0x23a
0x235: JUMPI 0x23a V125
---
Entry stack: [V11, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x236
[0x236:0x239]
---
Predecessors: [0x1df]
Successors: []
---
0x236 PUSH1 0x0
0x238 DUP1
0x239 REVERT
---
0x236: V127 = 0x0
0x239: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x23a
[0x23a:0x2ad]
---
Predecessors: [0x1df]
Successors: [0x2ae, 0x2b2]
---
0x23a JUMPDEST
0x23b PUSH1 0x0
0x23d DUP1
0x23e SWAP1
0x23f SLOAD
0x240 SWAP1
0x241 PUSH2 0x100
0x244 EXP
0x245 SWAP1
0x246 DIV
0x247 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25c AND
0x25d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x272 AND
0x273 PUSH2 0x8fc
0x276 ADDRESS
0x277 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28c AND
0x28d BALANCE
0x28e SWAP1
0x28f DUP2
0x290 ISZERO
0x291 MUL
0x292 SWAP1
0x293 PUSH1 0x40
0x295 MLOAD
0x296 PUSH1 0x0
0x298 PUSH1 0x40
0x29a MLOAD
0x29b DUP1
0x29c DUP4
0x29d SUB
0x29e DUP2
0x29f DUP6
0x2a0 DUP9
0x2a1 DUP9
0x2a2 CALL
0x2a3 SWAP4
0x2a4 POP
0x2a5 POP
0x2a6 POP
0x2a7 POP
0x2a8 ISZERO
0x2a9 ISZERO
0x2aa PUSH2 0x2b2
0x2ad JUMPI
---
0x23a: JUMPDEST 
0x23b: V128 = 0x0
0x23f: V129 = S[0x0]
0x241: V130 = 0x100
0x244: V131 = EXP 0x100 0x0
0x246: V132 = DIV V129 0x1
0x247: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x25c: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x25d: V135 = 0xffffffffffffffffffffffffffffffffffffffff
0x272: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x273: V137 = 0x8fc
0x276: V138 = ADDRESS
0x277: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x28c: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x28d: V141 = BALANCE V140
0x290: V142 = ISZERO V141
0x291: V143 = MUL V142 0x8fc
0x293: V144 = 0x40
0x295: V145 = M[0x40]
0x296: V146 = 0x0
0x298: V147 = 0x40
0x29a: V148 = M[0x40]
0x29d: V149 = SUB V145 V148
0x2a2: V150 = CALL V143 V136 V141 V148 V149 V148 0x0
0x2a8: V151 = ISZERO V150
0x2a9: V152 = ISZERO V151
0x2aa: V153 = 0x2b2
0x2ad: JUMPI 0x2b2 V152
---
Entry stack: [V11, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x2ae
[0x2ae:0x2b1]
---
Predecessors: [0x23a]
Successors: []
---
0x2ae PUSH1 0x0
0x2b0 DUP1
0x2b1 REVERT
---
0x2ae: V154 = 0x0
0x2b1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9a]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9a]

================================

Block 0x2b2
[0x2b2:0x2b3]
---
Predecessors: [0x23a]
Successors: [0x9a]
---
0x2b2 JUMPDEST
0x2b3 JUMP
---
0x2b2: JUMPDEST 
0x2b3: JUMP 0x9a
---
Entry stack: [V11, 0x9a]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b4
[0x2b4:0x2d8]
---
Predecessors: [0xa7]
Successors: [0xaf]
---
0x2b4 JUMPDEST
0x2b5 PUSH1 0x0
0x2b7 DUP1
0x2b8 SWAP1
0x2b9 SLOAD
0x2ba SWAP1
0x2bb PUSH2 0x100
0x2be EXP
0x2bf SWAP1
0x2c0 DIV
0x2c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d6 AND
0x2d7 DUP2
0x2d8 JUMP
---
0x2b4: JUMPDEST 
0x2b5: V155 = 0x0
0x2b9: V156 = S[0x0]
0x2bb: V157 = 0x100
0x2be: V158 = EXP 0x100 0x0
0x2c0: V159 = DIV V156 0x1
0x2c1: V160 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d6: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x2d8: JUMP 0xaf
---
Entry stack: [V11, 0xaf]
Stack pops: 1
Stack additions: [S0, V161]
Exit stack: [V11, 0xaf, V161]

================================

Block 0x2d9
[0x2d9:0x32f]
---
Predecessors: [0xf1]
Successors: [0x330, 0x334]
---
0x2d9 JUMPDEST
0x2da PUSH1 0x0
0x2dc DUP1
0x2dd SWAP1
0x2de SLOAD
0x2df SWAP1
0x2e0 PUSH2 0x100
0x2e3 EXP
0x2e4 SWAP1
0x2e5 DIV
0x2e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fb AND
0x2fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x311 AND
0x312 CALLER
0x313 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x328 AND
0x329 EQ
0x32a ISZERO
0x32b ISZERO
0x32c PUSH2 0x334
0x32f JUMPI
---
0x2d9: JUMPDEST 
0x2da: V162 = 0x0
0x2de: V163 = S[0x0]
0x2e0: V164 = 0x100
0x2e3: V165 = EXP 0x100 0x0
0x2e5: V166 = DIV V163 0x1
0x2e6: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fb: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x2fc: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x311: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x312: V171 = CALLER
0x313: V172 = 0xffffffffffffffffffffffffffffffffffffffff
0x328: V173 = AND 0xffffffffffffffffffffffffffffffffffffffff V171
0x329: V174 = EQ V173 V170
0x32a: V175 = ISZERO V174
0x32b: V176 = ISZERO V175
0x32c: V177 = 0x334
0x32f: JUMPI 0x334 V176
---
Entry stack: [V11, 0x160, V55, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x160, V55, V73]

================================

Block 0x330
[0x330:0x333]
---
Predecessors: [0x2d9]
Successors: []
---
0x330 PUSH1 0x0
0x332 DUP1
0x333 REVERT
---
0x330: V178 = 0x0
0x333: REVERT 0x0 0x0
---
Entry stack: [V11, 0x160, V55, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x160, V55, V73]

================================

Block 0x334
[0x334:0x35e]
---
Predecessors: [0x2d9]
Successors: [0x35f]
---
0x334 JUMPDEST
0x335 DUP2
0x336 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34b AND
0x34c CALLVALUE
0x34d DUP3
0x34e PUSH1 0x40
0x350 MLOAD
0x351 DUP1
0x352 DUP3
0x353 DUP1
0x354 MLOAD
0x355 SWAP1
0x356 PUSH1 0x20
0x358 ADD
0x359 SWAP1
0x35a DUP1
0x35b DUP4
0x35c DUP4
0x35d PUSH1 0x0
---
0x334: JUMPDEST 
0x336: V179 = 0xffffffffffffffffffffffffffffffffffffffff
0x34b: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0x34c: V181 = CALLVALUE
0x34e: V182 = 0x40
0x350: V183 = M[0x40]
0x354: V184 = M[V73]
0x356: V185 = 0x20
0x358: V186 = ADD 0x20 V73
0x35d: V187 = 0x0
---
Entry stack: [V11, 0x160, V55, V73]
Stack pops: 2
Stack additions: [S1, S0, V180, V181, S0, V183, V183, V186, V184, V184, V183, V186, 0x0]
Exit stack: [V11, 0x160, V55, V73, V180, V181, V73, V183, V183, V186, V184, V184, V183, V186, 0x0]

================================

Block 0x35f
[0x35f:0x367]
---
Predecessors: [0x334, 0x368]
Successors: [0x368, 0x37a]
---
0x35f JUMPDEST
0x360 DUP4
0x361 DUP2
0x362 LT
0x363 ISZERO
0x364 PUSH2 0x37a
0x367 JUMPI
---
0x35f: JUMPDEST 
0x362: V188 = LT S0 V184
0x363: V189 = ISZERO V188
0x364: V190 = 0x37a
0x367: JUMPI 0x37a V189
---
Entry stack: [V11, 0x160, V55, V73, V180, V181, V73, V183, V183, V186, V184, V184, V183, V186, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x160, V55, V73, V180, V181, V73, V183, V183, V186, V184, V184, V183, V186, S0]

================================

Block 0x368
[0x368:0x379]
---
Predecessors: [0x35f]
Successors: [0x35f]
---
0x368 DUP1
0x369 DUP3
0x36a ADD
0x36b MLOAD
0x36c DUP2
0x36d DUP5
0x36e ADD
0x36f MSTORE
0x370 PUSH1 0x20
0x372 DUP2
0x373 ADD
0x374 SWAP1
0x375 POP
0x376 PUSH2 0x35f
0x379 JUMP
---
0x36a: V191 = ADD V186 S0
0x36b: V192 = M[V191]
0x36e: V193 = ADD V183 S0
0x36f: M[V193] = V192
0x370: V194 = 0x20
0x373: V195 = ADD S0 0x20
0x376: V196 = 0x35f
0x379: JUMP 0x35f
---
Entry stack: [V11, 0x160, V55, V73, V180, V181, V73, V183, V183, V186, V184, V184, V183, V186, S0]
Stack pops: 3
Stack additions: [S2, S1, V195]
Exit stack: [V11, 0x160, V55, V73, V180, V181, V73, V183, V183, V186, V184, V184, V183, V186, V195]

================================

Block 0x37a
[0x37a:0x38d]
---
Predecessors: [0x35f]
Successors: [0x38e, 0x3a7]
---
0x37a JUMPDEST
0x37b POP
0x37c POP
0x37d POP
0x37e POP
0x37f SWAP1
0x380 POP
0x381 SWAP1
0x382 DUP2
0x383 ADD
0x384 SWAP1
0x385 PUSH1 0x1f
0x387 AND
0x388 DUP1
0x389 ISZERO
0x38a PUSH2 0x3a7
0x38d JUMPI
---
0x37a: JUMPDEST 
0x383: V197 = ADD V184 V183
0x385: V198 = 0x1f
0x387: V199 = AND 0x1f V184
0x389: V200 = ISZERO V199
0x38a: V201 = 0x3a7
0x38d: JUMPI 0x3a7 V200
---
Entry stack: [V11, 0x160, V55, V73, V180, V181, V73, V183, V183, V186, V184, V184, V183, V186, S0]
Stack pops: 7
Stack additions: [V197, V199]
Exit stack: [V11, 0x160, V55, V73, V180, V181, V73, V183, V197, V199]

================================

Block 0x38e
[0x38e:0x3a6]
---
Predecessors: [0x37a]
Successors: [0x3a7]
---
0x38e DUP1
0x38f DUP3
0x390 SUB
0x391 DUP1
0x392 MLOAD
0x393 PUSH1 0x1
0x395 DUP4
0x396 PUSH1 0x20
0x398 SUB
0x399 PUSH2 0x100
0x39c EXP
0x39d SUB
0x39e NOT
0x39f AND
0x3a0 DUP2
0x3a1 MSTORE
0x3a2 PUSH1 0x20
0x3a4 ADD
0x3a5 SWAP2
0x3a6 POP
---
0x390: V202 = SUB V197 V199
0x392: V203 = M[V202]
0x393: V204 = 0x1
0x396: V205 = 0x20
0x398: V206 = SUB 0x20 V199
0x399: V207 = 0x100
0x39c: V208 = EXP 0x100 V206
0x39d: V209 = SUB V208 0x1
0x39e: V210 = NOT V209
0x39f: V211 = AND V210 V203
0x3a1: M[V202] = V211
0x3a2: V212 = 0x20
0x3a4: V213 = ADD 0x20 V202
---
Entry stack: [V11, 0x160, V55, V73, V180, V181, V73, V183, V197, V199]
Stack pops: 2
Stack additions: [V213, S0]
Exit stack: [V11, 0x160, V55, V73, V180, V181, V73, V183, V213, V199]

================================

Block 0x3a7
[0x3a7:0x3c4]
---
Predecessors: [0x37a, 0x38e]
Successors: [0x160]
---
0x3a7 JUMPDEST
0x3a8 POP
0x3a9 SWAP2
0x3aa POP
0x3ab POP
0x3ac PUSH1 0x0
0x3ae PUSH1 0x40
0x3b0 MLOAD
0x3b1 DUP1
0x3b2 DUP4
0x3b3 SUB
0x3b4 DUP2
0x3b5 DUP6
0x3b6 DUP8
0x3b7 PUSH2 0x8796
0x3ba GAS
0x3bb SUB
0x3bc CALL
0x3bd SWAP3
0x3be POP
0x3bf POP
0x3c0 POP
0x3c1 POP
0x3c2 POP
0x3c3 POP
0x3c4 JUMP
---
0x3a7: JUMPDEST 
0x3ac: V214 = 0x0
0x3ae: V215 = 0x40
0x3b0: V216 = M[0x40]
0x3b3: V217 = SUB S1 V216
0x3b7: V218 = 0x8796
0x3ba: V219 = GAS
0x3bb: V220 = SUB V219 0x8796
0x3bc: V221 = CALL V220 V180 V181 V216 V217 V216 0x0
0x3c4: JUMP 0x160
---
Entry stack: [V11, 0x160, V55, V73, V180, V181, V73, V183, S1, V199]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c5
[0x3c5:0x3f0]
---
Predecessors: []
Successors: []
---
0x3c5 STOP
0x3c6 LOG1
0x3c7 PUSH6 0x627a7a723058
0x3ce SHA3
0x3cf MISSING 0xd0
0x3d0 ADD
0x3d1 LOG2
0x3d2 MISSING 0xaa
0x3d3 GASPRICE
0x3d4 PUSH25 0x3cfdbd66de9be95887cb8174d24874716d449202943529ca7
0x3ee MUL
0x3ef STOP
0x3f0 MISSING 0x29
---
0x3c5: STOP 
0x3c6: LOG S0 S1 S2
0x3c7: V222 = 0x627a7a723058
0x3ce: V223 = SHA3 0x627a7a723058 S3
0x3cf: MISSING 0xd0
0x3d0: V224 = ADD S0 S1
0x3d1: LOG V224 S2 S3 S4
0x3d2: MISSING 0xaa
0x3d3: V225 = GASPRICE
0x3d4: V226 = 0x3cfdbd66de9be95887cb8174d24874716d449202943529ca7
0x3ee: V227 = MUL 0x3cfdbd66de9be95887cb8174d24874716d449202943529ca7 V225
0x3ef: STOP 
0x3f0: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V223, V227]
Exit stack: []

================================

Function 0:
Public function signature: 0x1ac9f70d
Entry block: 0x64
Exit block: 0x1d7
Body: 0x64, 0x90, 0x162, 0x183, 0x1d7, 0x1db, 0x1dc

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x92
Exit block: 0x9a
Body: 0x92, 0x9a, 0x1df, 0x236, 0x23a, 0x2ae, 0x2b2

Function 2:
Public function signature: 0xb4a99a4e
Entry block: 0x9c
Exit block: 0xaf
Body: 0x9c, 0xa3, 0xa7, 0xaf, 0x2b4

Function 3:
Public function signature: 0xba21d62a
Entry block: 0xf1
Exit block: 0x160
Body: 0xf1, 0x160, 0x2d9, 0x330, 0x334, 0x35f, 0x368, 0x37a, 0x38e, 0x3a7

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

