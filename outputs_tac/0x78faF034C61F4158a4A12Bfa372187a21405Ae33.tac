Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3ccfd60b
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3ccfd60b
0x3b: V13 = EQ V11 0x3ccfd60b
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x78]
---
0x40 DUP1
0x41 PUSH4 0x8f32d59b
0x46 EQ
0x47 PUSH2 0x78
0x4a JUMPI
---
0x41: V15 = 0x8f32d59b
0x46: V16 = EQ 0x8f32d59b V11
0x47: V17 = 0x78
0x4a: JUMPI 0x78 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xa1]
---
0x4b DUP1
0x4c PUSH4 0xb4a99a4e
0x51 EQ
0x52 PUSH2 0xa1
0x55 JUMPI
---
0x4c: V18 = 0xb4a99a4e
0x51: V19 = EQ 0xb4a99a4e V11
0x52: V20 = 0xa1
0x55: JUMPI 0xa1 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xdf]
---
0x56 DUP1
0x57 PUSH4 0xba0bba40
0x5c EQ
0x5d PUSH2 0xdf
0x60 JUMPI
---
0x57: V21 = 0xba0bba40
0x5c: V22 = EQ 0xba0bba40 V11
0x5d: V23 = 0xdf
0x60: JUMPI 0xdf V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x123, 0x181]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0xd]
Successors: [0x6b, 0x6f]
---
0x63 JUMPDEST
0x64 CALLVALUE
0x65 DUP1
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x63: JUMPDEST 
0x64: V24 = CALLVALUE
0x66: V25 = ISZERO V24
0x67: V26 = 0x6f
0x6a: JUMPI 0x6f V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x63]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V27 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x6f
[0x6f:0x77]
---
Predecessors: [0x63]
Successors: [0xe7]
---
0x6f JUMPDEST
0x70 POP
0x71 PUSH2 0x61
0x74 PUSH2 0xe7
0x77 JUMP
---
0x6f: JUMPDEST 
0x71: V28 = 0x61
0x74: V29 = 0xe7
0x77: JUMP 0xe7
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x78
[0x78:0x7f]
---
Predecessors: [0x40]
Successors: [0x80, 0x84]
---
0x78 JUMPDEST
0x79 CALLVALUE
0x7a DUP1
0x7b ISZERO
0x7c PUSH2 0x84
0x7f JUMPI
---
0x78: JUMPDEST 
0x79: V30 = CALLVALUE
0x7b: V31 = ISZERO V30
0x7c: V32 = 0x84
0x7f: JUMPI 0x84 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V11, V30]

================================

Block 0x80
[0x80:0x83]
---
Predecessors: [0x78]
Successors: []
---
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x80: V33 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V11, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V30]

================================

Block 0x84
[0x84:0x8c]
---
Predecessors: [0x78]
Successors: [0x125]
---
0x84 JUMPDEST
0x85 POP
0x86 PUSH2 0x8d
0x89 PUSH2 0x125
0x8c JUMP
---
0x84: JUMPDEST 
0x86: V34 = 0x8d
0x89: V35 = 0x125
0x8c: JUMP 0x125
---
Entry stack: [V11, V30]
Stack pops: 1
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0x8d
[0x8d:0xa0]
---
Predecessors: [0x152]
Successors: []
---
0x8d JUMPDEST
0x8e PUSH1 0x40
0x90 DUP1
0x91 MLOAD
0x92 SWAP2
0x93 ISZERO
0x94 ISZERO
0x95 DUP3
0x96 MSTORE
0x97 MLOAD
0x98 SWAP1
0x99 DUP2
0x9a SWAP1
0x9b SUB
0x9c PUSH1 0x20
0x9e ADD
0x9f SWAP1
0xa0 RETURN
---
0x8d: JUMPDEST 
0x8e: V36 = 0x40
0x91: V37 = M[0x40]
0x93: V38 = ISZERO {0x0, 0x1}
0x94: V39 = ISZERO V38
0x96: M[V37] = V39
0x97: V40 = M[0x40]
0x9b: V41 = SUB V37 V40
0x9c: V42 = 0x20
0x9e: V43 = ADD 0x20 V41
0xa0: RETURN V40 V43
---
Entry stack: [V11, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0xa1
[0xa1:0xa8]
---
Predecessors: [0x4b]
Successors: [0xa9, 0xad]
---
0xa1 JUMPDEST
0xa2 CALLVALUE
0xa3 DUP1
0xa4 ISZERO
0xa5 PUSH2 0xad
0xa8 JUMPI
---
0xa1: JUMPDEST 
0xa2: V44 = CALLVALUE
0xa4: V45 = ISZERO V44
0xa5: V46 = 0xad
0xa8: JUMPI 0xad V45
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V44]
Exit stack: [V11, V44]

================================

Block 0xa9
[0xa9:0xac]
---
Predecessors: [0xa1]
Successors: []
---
0xa9 PUSH1 0x0
0xab DUP1
0xac REVERT
---
0xa9: V47 = 0x0
0xac: REVERT 0x0 0x0
---
Entry stack: [V11, V44]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V44]

================================

Block 0xad
[0xad:0xb5]
---
Predecessors: [0xa1]
Successors: [0x155]
---
0xad JUMPDEST
0xae POP
0xaf PUSH2 0xb6
0xb2 PUSH2 0x155
0xb5 JUMP
---
0xad: JUMPDEST 
0xaf: V48 = 0xb6
0xb2: V49 = 0x155
0xb5: JUMP 0x155
---
Entry stack: [V11, V44]
Stack pops: 1
Stack additions: [0xb6]
Exit stack: [V11, 0xb6]

================================

Block 0xb6
[0xb6:0xde]
---
Predecessors: [0x155]
Successors: []
---
0xb6 JUMPDEST
0xb7 PUSH1 0x40
0xb9 DUP1
0xba MLOAD
0xbb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd0 SWAP1
0xd1 SWAP3
0xd2 AND
0xd3 DUP3
0xd4 MSTORE
0xd5 MLOAD
0xd6 SWAP1
0xd7 DUP2
0xd8 SWAP1
0xd9 SUB
0xda PUSH1 0x20
0xdc ADD
0xdd SWAP1
0xde RETURN
---
0xb6: JUMPDEST 
0xb7: V50 = 0x40
0xba: V51 = M[0x40]
0xbb: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xd2: V53 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0xd4: M[V51] = V53
0xd5: V54 = M[0x40]
0xd9: V55 = SUB V51 V54
0xda: V56 = 0x20
0xdc: V57 = ADD 0x20 V55
0xde: RETURN V54 V57
---
Entry stack: [V11, 0xb6, V95]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb6]

================================

Block 0xdf
[0xdf:0xe6]
---
Predecessors: [0x56]
Successors: [0x171]
---
0xdf JUMPDEST
0xe0 PUSH2 0x61
0xe3 PUSH2 0x171
0xe6 JUMP
---
0xdf: JUMPDEST 
0xe0: V58 = 0x61
0xe3: V59 = 0x171
0xe6: JUMP 0x171
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0xe7
[0xe7:0xee]
---
Predecessors: [0x6f]
Successors: [0x125]
---
0xe7 JUMPDEST
0xe8 PUSH2 0xef
0xeb PUSH2 0x125
0xee JUMP
---
0xe7: JUMPDEST 
0xe8: V60 = 0xef
0xeb: V61 = 0x125
0xee: JUMP 0x125
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [0xef]
Exit stack: [V11, 0x61, 0xef]

================================

Block 0xef
[0xef:0xf4]
---
Predecessors: [0x152]
Successors: [0xf5, 0x123]
---
0xef JUMPDEST
0xf0 ISZERO
0xf1 PUSH2 0x123
0xf4 JUMPI
---
0xef: JUMPDEST 
0xf0: V62 = ISZERO {0x0, 0x1}
0xf1: V63 = 0x123
0xf4: JUMPI 0x123 V62
---
Entry stack: [V11, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0xf5
[0xf5:0x117]
---
Predecessors: [0xef]
Successors: [0x118, 0x121]
---
0xf5 PUSH1 0x40
0xf7 MLOAD
0xf8 CALLER
0xf9 SWAP1
0xfa ADDRESS
0xfb BALANCE
0xfc DUP1
0xfd ISZERO
0xfe PUSH2 0x8fc
0x101 MUL
0x102 SWAP2
0x103 PUSH1 0x0
0x105 DUP2
0x106 DUP2
0x107 DUP2
0x108 DUP6
0x109 DUP9
0x10a DUP9
0x10b CALL
0x10c SWAP4
0x10d POP
0x10e POP
0x10f POP
0x110 POP
0x111 ISZERO
0x112 DUP1
0x113 ISZERO
0x114 PUSH2 0x121
0x117 JUMPI
---
0xf5: V64 = 0x40
0xf7: V65 = M[0x40]
0xf8: V66 = CALLER
0xfa: V67 = ADDRESS
0xfb: V68 = BALANCE V67
0xfd: V69 = ISZERO V68
0xfe: V70 = 0x8fc
0x101: V71 = MUL 0x8fc V69
0x103: V72 = 0x0
0x10b: V73 = CALL V71 V66 V68 V65 0x0 V65 0x0
0x111: V74 = ISZERO V73
0x113: V75 = ISZERO V74
0x114: V76 = 0x121
0x117: JUMPI 0x121 V75
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: [V74]
Exit stack: [V11, S0, V74]

================================

Block 0x118
[0x118:0x120]
---
Predecessors: [0xf5]
Successors: []
---
0x118 RETURNDATASIZE
0x119 PUSH1 0x0
0x11b DUP1
0x11c RETURNDATACOPY
0x11d RETURNDATASIZE
0x11e PUSH1 0x0
0x120 REVERT
---
0x118: V77 = RETURNDATASIZE
0x119: V78 = 0x0
0x11c: RETURNDATACOPY 0x0 0x0 V77
0x11d: V79 = RETURNDATASIZE
0x11e: V80 = 0x0
0x120: REVERT 0x0 V79
---
Entry stack: [V11, S1, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, V74]

================================

Block 0x121
[0x121:0x122]
---
Predecessors: [0xf5]
Successors: [0x123]
---
0x121 JUMPDEST
0x122 POP
---
0x121: JUMPDEST 
---
Entry stack: [V11, S1, V74]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x123
[0x123:0x124]
---
Predecessors: [0xef, 0x121, 0x171]
Successors: [0x61]
---
0x123 JUMPDEST
0x124 JUMP
---
0x123: JUMPDEST 
0x124: JUMP S0
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x125
[0x125:0x146]
---
Predecessors: [0x84, 0xe7]
Successors: [0x147, 0x14e]
---
0x125 JUMPDEST
0x126 PUSH1 0x0
0x128 DUP1
0x129 SLOAD
0x12a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13f AND
0x140 CALLER
0x141 EQ
0x142 ISZERO
0x143 PUSH2 0x14e
0x146 JUMPI
---
0x125: JUMPDEST 
0x126: V81 = 0x0
0x129: V82 = S[0x0]
0x12a: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x13f: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x140: V85 = CALLER
0x141: V86 = EQ V85 V84
0x142: V87 = ISZERO V86
0x143: V88 = 0x14e
0x146: JUMPI 0x14e V87
---
Entry stack: [V11, S1, {0x8d, 0xef}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, S1, {0x8d, 0xef}, 0x0]

================================

Block 0x147
[0x147:0x14d]
---
Predecessors: [0x125]
Successors: [0x152]
---
0x147 POP
0x148 PUSH1 0x1
0x14a PUSH2 0x152
0x14d JUMP
---
0x148: V89 = 0x1
0x14a: V90 = 0x152
0x14d: JUMP 0x152
---
Entry stack: [V11, S2, {0x8d, 0xef}, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V11, S2, {0x8d, 0xef}, 0x1]

================================

Block 0x14e
[0x14e:0x151]
---
Predecessors: [0x125]
Successors: [0x152]
---
0x14e JUMPDEST
0x14f POP
0x150 PUSH1 0x0
---
0x14e: JUMPDEST 
0x150: V91 = 0x0
---
Entry stack: [V11, S2, {0x8d, 0xef}, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, S2, {0x8d, 0xef}, 0x0]

================================

Block 0x152
[0x152:0x154]
---
Predecessors: [0x147, 0x14e]
Successors: [0x8d, 0xef]
---
0x152 JUMPDEST
0x153 SWAP1
0x154 JUMP
---
0x152: JUMPDEST 
0x154: JUMP {0x8d, 0xef}
---
Entry stack: [V11, S2, {0x8d, 0xef}, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, S2, {0x0, 0x1}]

================================

Block 0x155
[0x155:0x170]
---
Predecessors: [0xad]
Successors: [0xb6]
---
0x155 JUMPDEST
0x156 PUSH1 0x1
0x158 SLOAD
0x159 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16e AND
0x16f DUP2
0x170 JUMP
---
0x155: JUMPDEST 
0x156: V92 = 0x1
0x158: V93 = S[0x1]
0x159: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x16e: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x170: JUMP 0xb6
---
Entry stack: [V11, 0xb6]
Stack pops: 1
Stack additions: [S0, V95]
Exit stack: [V11, 0xb6, V95]

================================

Block 0x171
[0x171:0x180]
---
Predecessors: [0xdf]
Successors: [0x123, 0x181]
---
0x171 JUMPDEST
0x172 PUSH8 0x6f05b59d3b20000
0x17b CALLVALUE
0x17c LT
0x17d PUSH2 0x123
0x180 JUMPI
---
0x171: JUMPDEST 
0x172: V96 = 0x6f05b59d3b20000
0x17b: V97 = CALLVALUE
0x17c: V98 = LT V97 0x6f05b59d3b20000
0x17d: V99 = 0x123
0x180: JUMPI 0x123 V98
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x181
[0x181:0x1a0]
---
Predecessors: [0x171]
Successors: [0x61]
---
0x181 PUSH1 0x1
0x183 DUP1
0x184 SLOAD
0x185 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19a NOT
0x19b AND
0x19c CALLER
0x19d OR
0x19e SWAP1
0x19f SSTORE
0x1a0 JUMP
---
0x181: V100 = 0x1
0x184: V101 = S[0x1]
0x185: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x19a: V103 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x19b: V104 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V101
0x19c: V105 = CALLER
0x19d: V106 = OR V105 V104
0x19f: S[0x1] = V106
0x1a0: JUMP 0x61
---
Entry stack: [V11, 0x61]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1a1
[0x1a1:0x1d4]
---
Predecessors: []
Successors: []
---
0x1a1 STOP
0x1a2 LOG1
0x1a3 PUSH6 0x627a7a723058
0x1aa SHA3
0x1ab EXTCODEHASH
0x1ac MISSING 0xb3
0x1ad DIFFICULTY
0x1ae MSTORE
0x1af MISSING 0xcf
0x1b0 CODESIZE
0x1b1 BALANCE
0x1b2 DUP3
0x1b3 MISSING 0xa7
0x1b4 PUSH32 0x4781f1d7d32f24bbb4e7b2567a21568cf635b2781cf80029
---
0x1a1: STOP 
0x1a2: LOG S0 S1 S2
0x1a3: V107 = 0x627a7a723058
0x1aa: V108 = SHA3 0x627a7a723058 S3
0x1ab: V109 = EXTCODEHASH V108
0x1ac: MISSING 0xb3
0x1ad: V110 = DIFFICULTY
0x1ae: M[V110] = S0
0x1af: MISSING 0xcf
0x1b0: V111 = CODESIZE
0x1b1: V112 = BALANCE V111
0x1b3: MISSING 0xa7
0x1b4: V113 = 0x4781f1d7d32f24bbb4e7b2567a21568cf635b2781cf80029
---
Entry stack: []
Stack pops: 0
Stack additions: [V109, S1, V112, S0, S1, 0x4781f1d7d32f24bbb4e7b2567a21568cf635b2781cf80029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x63
Exit block: 0x118
Body: 0x61, 0x63, 0x6b, 0x6f, 0xe7, 0xef, 0xf5, 0x118, 0x121, 0x123

Function 1:
Public function signature: 0x8f32d59b
Entry block: 0x78
Exit block: 0x80
Body: 0x78, 0x80, 0x84, 0x8d

Function 2:
Public function signature: 0xb4a99a4e
Entry block: 0xa1
Exit block: 0xb6
Body: 0xa1, 0xa9, 0xad, 0xb6, 0x155

Function 3:
Public function signature: 0xba0bba40
Entry block: 0xdf
Exit block: 0x61
Body: 0x61, 0xdf, 0x123, 0x171, 0x181

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

Function 5:
Private function
Entry block: 0x125
Exit block: 0x152
Body: 0x125, 0x147, 0x14e, 0x152

