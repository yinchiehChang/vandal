Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xa6fbb05
0x3c EQ
0x3d PUSH2 0x7a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xa6fbb05
0x3c: V13 = EQ 0xa6fbb05 V11
0x3d: V14 = 0x7a
0x40: JUMPI 0x7a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x96]
---
0x41 DUP1
0x42 PUSH4 0x181ffc5f
0x47 EQ
0x48 PUSH2 0x96
0x4b JUMPI
---
0x42: V15 = 0x181ffc5f
0x47: V16 = EQ 0x181ffc5f V11
0x48: V17 = 0x96
0x4b: JUMPI 0x96 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xb9]
---
0x4c DUP1
0x4d PUSH4 0x31fd725a
0x52 EQ
0x53 PUSH2 0xb9
0x56 JUMPI
---
0x4d: V18 = 0x31fd725a
0x52: V19 = EQ 0x31fd725a V11
0x53: V20 = 0xb9
0x56: JUMPI 0xb9 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xe0]
---
0x57 DUP1
0x58 PUSH4 0x87f24484
0x5d EQ
0x5e PUSH2 0xe0
0x61 JUMPI
---
0x58: V21 = 0x87f24484
0x5d: V22 = EQ 0x87f24484 V11
0x5e: V23 = 0xe0
0x61: JUMPI 0xe0 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x111]
---
0x62 DUP1
0x63 PUSH4 0xb456ecc5
0x68 EQ
0x69 PUSH2 0x111
0x6c JUMPI
---
0x63: V24 = 0xb456ecc5
0x68: V25 = EQ 0xb456ecc5 V11
0x69: V26 = 0x111
0x6c: JUMPI 0x111 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x18a]
---
0x6d DUP1
0x6e PUSH4 0xcd8b02c8
0x73 EQ
0x74 PUSH2 0x18a
0x77 JUMPI
---
0x6e: V27 = 0xcd8b02c8
0x73: V28 = EQ 0xcd8b02c8 V11
0x74: V29 = 0x18a
0x77: JUMPI 0x18a V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x93]
---
Predecessors: [0xd]
Successors: [0x194]
---
0x7a JUMPDEST
0x7b PUSH2 0x94
0x7e PUSH1 0x4
0x80 DUP1
0x81 DUP1
0x82 CALLDATALOAD
0x83 PUSH1 0x0
0x85 NOT
0x86 AND
0x87 SWAP1
0x88 PUSH1 0x20
0x8a ADD
0x8b SWAP1
0x8c SWAP2
0x8d SWAP1
0x8e POP
0x8f POP
0x90 PUSH2 0x194
0x93 JUMP
---
0x7a: JUMPDEST 
0x7b: V30 = 0x94
0x7e: V31 = 0x4
0x82: V32 = CALLDATALOAD 0x4
0x83: V33 = 0x0
0x85: V34 = NOT 0x0
0x86: V35 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V32
0x88: V36 = 0x20
0x8a: V37 = ADD 0x20 0x4
0x90: V38 = 0x194
0x93: JUMP 0x194
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x94, V35]
Exit stack: [V11, 0x94, V35]

================================

Block 0x94
[0x94:0x95]
---
Predecessors: [0x209]
Successors: []
---
0x94 JUMPDEST
0x95 STOP
---
0x94: JUMPDEST 
0x95: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x96
[0x96:0xb6]
---
Predecessors: [0x41]
Successors: [0x20c]
---
0x96 JUMPDEST
0x97 PUSH2 0xb7
0x9a PUSH1 0x4
0x9c DUP1
0x9d DUP1
0x9e CALLDATALOAD
0x9f SWAP1
0xa0 PUSH1 0x20
0xa2 ADD
0xa3 SWAP1
0xa4 DUP3
0xa5 ADD
0xa6 DUP1
0xa7 CALLDATALOAD
0xa8 SWAP1
0xa9 PUSH1 0x20
0xab ADD
0xac SWAP2
0xad SWAP1
0xae SWAP2
0xaf SWAP3
0xb0 SWAP1
0xb1 POP
0xb2 POP
0xb3 PUSH2 0x20c
0xb6 JUMP
---
0x96: JUMPDEST 
0x97: V39 = 0xb7
0x9a: V40 = 0x4
0x9e: V41 = CALLDATALOAD 0x4
0xa0: V42 = 0x20
0xa2: V43 = ADD 0x20 0x4
0xa5: V44 = ADD 0x4 V41
0xa7: V45 = CALLDATALOAD V44
0xa9: V46 = 0x20
0xab: V47 = ADD 0x20 V44
0xb3: V48 = 0x20c
0xb6: JUMP 0x20c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb7, V47, V45]
Exit stack: [V11, 0xb7, V47, V45]

================================

Block 0xb7
[0xb7:0xb8]
---
Predecessors: [0x292]
Successors: []
---
0xb7 JUMPDEST
0xb8 STOP
---
0xb7: JUMPDEST 
0xb8: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xbf]
---
Predecessors: [0x4c]
Successors: [0xc0, 0xc4]
---
0xb9 JUMPDEST
0xba CALLVALUE
0xbb ISZERO
0xbc PUSH2 0xc4
0xbf JUMPI
---
0xb9: JUMPDEST 
0xba: V49 = CALLVALUE
0xbb: V50 = ISZERO V49
0xbc: V51 = 0xc4
0xbf: JUMPI 0xc4 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc0
[0xc0:0xc3]
---
Predecessors: [0xb9]
Successors: []
---
0xc0 PUSH1 0x0
0xc2 DUP1
0xc3 REVERT
---
0xc0: V52 = 0x0
0xc3: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xdd]
---
Predecessors: [0xb9]
Successors: [0x296]
---
0xc4 JUMPDEST
0xc5 PUSH2 0xde
0xc8 PUSH1 0x4
0xca DUP1
0xcb DUP1
0xcc CALLDATALOAD
0xcd PUSH1 0x0
0xcf NOT
0xd0 AND
0xd1 SWAP1
0xd2 PUSH1 0x20
0xd4 ADD
0xd5 SWAP1
0xd6 SWAP2
0xd7 SWAP1
0xd8 POP
0xd9 POP
0xda PUSH2 0x296
0xdd JUMP
---
0xc4: JUMPDEST 
0xc5: V53 = 0xde
0xc8: V54 = 0x4
0xcc: V55 = CALLDATALOAD 0x4
0xcd: V56 = 0x0
0xcf: V57 = NOT 0x0
0xd0: V58 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V55
0xd2: V59 = 0x20
0xd4: V60 = ADD 0x20 0x4
0xda: V61 = 0x296
0xdd: JUMP 0x296
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xde, V58]
Exit stack: [V11, 0xde, V58]

================================

Block 0xde
[0xde:0xdf]
---
Predecessors: [0x2c3]
Successors: []
---
0xde JUMPDEST
0xdf STOP
---
0xde: JUMPDEST 
0xdf: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe0
[0xe0:0xe6]
---
Predecessors: [0x57]
Successors: [0xe7, 0xeb]
---
0xe0 JUMPDEST
0xe1 CALLVALUE
0xe2 ISZERO
0xe3 PUSH2 0xeb
0xe6 JUMPI
---
0xe0: JUMPDEST 
0xe1: V62 = CALLVALUE
0xe2: V63 = ISZERO V62
0xe3: V64 = 0xeb
0xe6: JUMPI 0xeb V63
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe7
[0xe7:0xea]
---
Predecessors: [0xe0]
Successors: []
---
0xe7 PUSH1 0x0
0xe9 DUP1
0xea REVERT
---
0xe7: V65 = 0x0
0xea: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xeb
[0xeb:0xf2]
---
Predecessors: [0xe0]
Successors: [0x2c6]
---
0xeb JUMPDEST
0xec PUSH2 0xf3
0xef PUSH2 0x2c6
0xf2 JUMP
---
0xeb: JUMPDEST 
0xec: V66 = 0xf3
0xef: V67 = 0x2c6
0xf2: JUMP 0x2c6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xf3]
Exit stack: [V11, 0xf3]

================================

Block 0xf3
[0xf3:0x110]
---
Predecessors: [0x2c6]
Successors: []
---
0xf3 JUMPDEST
0xf4 PUSH1 0x40
0xf6 MLOAD
0xf7 DUP1
0xf8 DUP3
0xf9 PUSH1 0x0
0xfb NOT
0xfc AND
0xfd PUSH1 0x0
0xff NOT
0x100 AND
0x101 DUP2
0x102 MSTORE
0x103 PUSH1 0x20
0x105 ADD
0x106 SWAP2
0x107 POP
0x108 POP
0x109 PUSH1 0x40
0x10b MLOAD
0x10c DUP1
0x10d SWAP2
0x10e SUB
0x10f SWAP1
0x110 RETURN
---
0xf3: JUMPDEST 
0xf4: V68 = 0x40
0xf6: V69 = M[0x40]
0xf9: V70 = 0x0
0xfb: V71 = NOT 0x0
0xfc: V72 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V221
0xfd: V73 = 0x0
0xff: V74 = NOT 0x0
0x100: V75 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V72
0x102: M[V69] = V75
0x103: V76 = 0x20
0x105: V77 = ADD 0x20 V69
0x109: V78 = 0x40
0x10b: V79 = M[0x40]
0x10e: V80 = SUB V77 V79
0x110: RETURN V79 V80
---
Entry stack: [V11, 0xf3, V221]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf3]

================================

Block 0x111
[0x111:0x117]
---
Predecessors: [0x62]
Successors: [0x118, 0x11c]
---
0x111 JUMPDEST
0x112 CALLVALUE
0x113 ISZERO
0x114 PUSH2 0x11c
0x117 JUMPI
---
0x111: JUMPDEST 
0x112: V81 = CALLVALUE
0x113: V82 = ISZERO V81
0x114: V83 = 0x11c
0x117: JUMPI 0x11c V82
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x118
[0x118:0x11b]
---
Predecessors: [0x111]
Successors: []
---
0x118 PUSH1 0x0
0x11a DUP1
0x11b REVERT
---
0x118: V84 = 0x0
0x11b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x11c
[0x11c:0x16b]
---
Predecessors: [0x111]
Successors: [0x2cc]
---
0x11c JUMPDEST
0x11d PUSH2 0x16c
0x120 PUSH1 0x4
0x122 DUP1
0x123 DUP1
0x124 CALLDATALOAD
0x125 SWAP1
0x126 PUSH1 0x20
0x128 ADD
0x129 SWAP1
0x12a DUP3
0x12b ADD
0x12c DUP1
0x12d CALLDATALOAD
0x12e SWAP1
0x12f PUSH1 0x20
0x131 ADD
0x132 SWAP1
0x133 DUP1
0x134 DUP1
0x135 PUSH1 0x1f
0x137 ADD
0x138 PUSH1 0x20
0x13a DUP1
0x13b SWAP2
0x13c DIV
0x13d MUL
0x13e PUSH1 0x20
0x140 ADD
0x141 PUSH1 0x40
0x143 MLOAD
0x144 SWAP1
0x145 DUP2
0x146 ADD
0x147 PUSH1 0x40
0x149 MSTORE
0x14a DUP1
0x14b SWAP4
0x14c SWAP3
0x14d SWAP2
0x14e SWAP1
0x14f DUP2
0x150 DUP2
0x151 MSTORE
0x152 PUSH1 0x20
0x154 ADD
0x155 DUP4
0x156 DUP4
0x157 DUP1
0x158 DUP3
0x159 DUP5
0x15a CALLDATACOPY
0x15b DUP3
0x15c ADD
0x15d SWAP2
0x15e POP
0x15f POP
0x160 POP
0x161 POP
0x162 POP
0x163 POP
0x164 SWAP2
0x165 SWAP1
0x166 POP
0x167 POP
0x168 PUSH2 0x2cc
0x16b JUMP
---
0x11c: JUMPDEST 
0x11d: V85 = 0x16c
0x120: V86 = 0x4
0x124: V87 = CALLDATALOAD 0x4
0x126: V88 = 0x20
0x128: V89 = ADD 0x20 0x4
0x12b: V90 = ADD 0x4 V87
0x12d: V91 = CALLDATALOAD V90
0x12f: V92 = 0x20
0x131: V93 = ADD 0x20 V90
0x135: V94 = 0x1f
0x137: V95 = ADD 0x1f V91
0x138: V96 = 0x20
0x13c: V97 = DIV V95 0x20
0x13d: V98 = MUL V97 0x20
0x13e: V99 = 0x20
0x140: V100 = ADD 0x20 V98
0x141: V101 = 0x40
0x143: V102 = M[0x40]
0x146: V103 = ADD V102 V100
0x147: V104 = 0x40
0x149: M[0x40] = V103
0x151: M[V102] = V91
0x152: V105 = 0x20
0x154: V106 = ADD 0x20 V102
0x15a: CALLDATACOPY V106 V93 V91
0x15c: V107 = ADD V106 V91
0x168: V108 = 0x2cc
0x16b: JUMP 0x2cc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x16c, V102]
Exit stack: [V11, 0x16c, V102]

================================

Block 0x16c
[0x16c:0x189]
---
Predecessors: [0x304]
Successors: []
---
0x16c JUMPDEST
0x16d PUSH1 0x40
0x16f MLOAD
0x170 DUP1
0x171 DUP3
0x172 PUSH1 0x0
0x174 NOT
0x175 AND
0x176 PUSH1 0x0
0x178 NOT
0x179 AND
0x17a DUP2
0x17b MSTORE
0x17c PUSH1 0x20
0x17e ADD
0x17f SWAP2
0x180 POP
0x181 POP
0x182 PUSH1 0x40
0x184 MLOAD
0x185 DUP1
0x186 SWAP2
0x187 SUB
0x188 SWAP1
0x189 RETURN
---
0x16c: JUMPDEST 
0x16d: V109 = 0x40
0x16f: V110 = M[0x40]
0x172: V111 = 0x0
0x174: V112 = NOT 0x0
0x175: V113 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V257
0x176: V114 = 0x0
0x178: V115 = NOT 0x0
0x179: V116 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V113
0x17b: M[V110] = V116
0x17c: V117 = 0x20
0x17e: V118 = ADD 0x20 V110
0x182: V119 = 0x40
0x184: V120 = M[0x40]
0x187: V121 = SUB V118 V120
0x189: RETURN V120 V121
---
Entry stack: [V11, V257]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x18a
[0x18a:0x191]
---
Predecessors: [0x6d]
Successors: [0x338]
---
0x18a JUMPDEST
0x18b PUSH2 0x192
0x18e PUSH2 0x338
0x191 JUMP
---
0x18a: JUMPDEST 
0x18b: V122 = 0x192
0x18e: V123 = 0x338
0x191: JUMP 0x338
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x192]
Exit stack: [V11, 0x192]

================================

Block 0x192
[0x192:0x193]
---
Predecessors: [0x408]
Successors: []
---
0x192 JUMPDEST
0x193 STOP
---
0x192: JUMPDEST 
0x193: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x194
[0x194:0x1aa]
---
Predecessors: [0x7a]
Successors: [0x1ab, 0x1b7]
---
0x194 JUMPDEST
0x195 PUSH1 0x0
0x197 DUP1
0x198 SWAP1
0x199 SLOAD
0x19a SWAP1
0x19b PUSH2 0x100
0x19e EXP
0x19f SWAP1
0x1a0 DIV
0x1a1 PUSH1 0xff
0x1a3 AND
0x1a4 ISZERO
0x1a5 DUP1
0x1a6 ISZERO
0x1a7 PUSH2 0x1b7
0x1aa JUMPI
---
0x194: JUMPDEST 
0x195: V124 = 0x0
0x199: V125 = S[0x0]
0x19b: V126 = 0x100
0x19e: V127 = EXP 0x100 0x0
0x1a0: V128 = DIV V125 0x1
0x1a1: V129 = 0xff
0x1a3: V130 = AND 0xff V128
0x1a4: V131 = ISZERO V130
0x1a6: V132 = ISZERO V131
0x1a7: V133 = 0x1b7
0x1aa: JUMPI 0x1b7 V132
---
Entry stack: [V11, 0x94, V35]
Stack pops: 0
Stack additions: [V131]
Exit stack: [V11, 0x94, V35, V131]

================================

Block 0x1ab
[0x1ab:0x1b6]
---
Predecessors: [0x194]
Successors: [0x1b7]
---
0x1ab POP
0x1ac PUSH8 0xde0b6b3a7640000
0x1b5 CALLVALUE
0x1b6 GT
---
0x1ac: V134 = 0xde0b6b3a7640000
0x1b5: V135 = CALLVALUE
0x1b6: V136 = GT V135 0xde0b6b3a7640000
---
Entry stack: [V11, 0x94, V35, V131]
Stack pops: 1
Stack additions: [V136]
Exit stack: [V11, 0x94, V35, V136]

================================

Block 0x1b7
[0x1b7:0x1bc]
---
Predecessors: [0x194, 0x1ab]
Successors: [0x1bd, 0x209]
---
0x1b7 JUMPDEST
0x1b8 ISZERO
0x1b9 PUSH2 0x209
0x1bc JUMPI
---
0x1b7: JUMPDEST 
0x1b8: V137 = ISZERO S0
0x1b9: V138 = 0x209
0x1bc: JUMPI 0x209 V137
---
Entry stack: [V11, 0x94, V35, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x94, V35]

================================

Block 0x1bd
[0x1bd:0x208]
---
Predecessors: [0x1b7]
Successors: [0x209]
---
0x1bd DUP1
0x1be PUSH1 0x1
0x1c0 DUP2
0x1c1 PUSH1 0x0
0x1c3 NOT
0x1c4 AND
0x1c5 SWAP1
0x1c6 SSTORE
0x1c7 POP
0x1c8 CALLER
0x1c9 PUSH1 0x0
0x1cb PUSH1 0x1
0x1cd PUSH2 0x100
0x1d0 EXP
0x1d1 DUP2
0x1d2 SLOAD
0x1d3 DUP2
0x1d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e9 MUL
0x1ea NOT
0x1eb AND
0x1ec SWAP1
0x1ed DUP4
0x1ee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x203 AND
0x204 MUL
0x205 OR
0x206 SWAP1
0x207 SSTORE
0x208 POP
---
0x1be: V139 = 0x1
0x1c1: V140 = 0x0
0x1c3: V141 = NOT 0x0
0x1c4: V142 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V35
0x1c6: S[0x1] = V142
0x1c8: V143 = CALLER
0x1c9: V144 = 0x0
0x1cb: V145 = 0x1
0x1cd: V146 = 0x100
0x1d0: V147 = EXP 0x100 0x1
0x1d2: V148 = S[0x0]
0x1d4: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e9: V150 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x100
0x1ea: V151 = NOT 0xffffffffffffffffffffffffffffffffffffffff00
0x1eb: V152 = AND 0xffffffffffffffffffffff0000000000000000000000000000000000000000ff V148
0x1ee: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x203: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x204: V155 = MUL V154 0x100
0x205: V156 = OR V155 V152
0x207: S[0x0] = V156
---
Entry stack: [V11, 0x94, V35]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x94, V35]

================================

Block 0x209
[0x209:0x20b]
---
Predecessors: [0x1b7, 0x1bd]
Successors: [0x94]
---
0x209 JUMPDEST
0x20a POP
0x20b JUMP
---
0x209: JUMPDEST 
0x20b: JUMP 0x94
---
Entry stack: [V11, 0x94, V35]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x20c
[0x20c:0x23a]
---
Predecessors: [0x96]
Successors: [0x23b, 0x292]
---
0x20c JUMPDEST
0x20d DUP2
0x20e DUP2
0x20f PUSH1 0x40
0x211 MLOAD
0x212 DUP1
0x213 DUP4
0x214 DUP4
0x215 DUP1
0x216 DUP3
0x217 DUP5
0x218 CALLDATACOPY
0x219 DUP3
0x21a ADD
0x21b SWAP2
0x21c POP
0x21d POP
0x21e SWAP3
0x21f POP
0x220 POP
0x221 POP
0x222 PUSH1 0x40
0x224 MLOAD
0x225 DUP1
0x226 SWAP2
0x227 SUB
0x228 SWAP1
0x229 SHA3
0x22a PUSH1 0x0
0x22c NOT
0x22d AND
0x22e PUSH1 0x1
0x230 SLOAD
0x231 PUSH1 0x0
0x233 NOT
0x234 AND
0x235 EQ
0x236 ISZERO
0x237 PUSH2 0x292
0x23a JUMPI
---
0x20c: JUMPDEST 
0x20f: V157 = 0x40
0x211: V158 = M[0x40]
0x218: CALLDATACOPY V158 V47 V45
0x21a: V159 = ADD V158 V45
0x222: V160 = 0x40
0x224: V161 = M[0x40]
0x227: V162 = SUB V159 V161
0x229: V163 = SHA3 V161 V162
0x22a: V164 = 0x0
0x22c: V165 = NOT 0x0
0x22d: V166 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V163
0x22e: V167 = 0x1
0x230: V168 = S[0x1]
0x231: V169 = 0x0
0x233: V170 = NOT 0x0
0x234: V171 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V168
0x235: V172 = EQ V171 V166
0x236: V173 = ISZERO V172
0x237: V174 = 0x292
0x23a: JUMPI 0x292 V173
---
Entry stack: [V11, 0xb7, V47, V45]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xb7, V47, V45]

================================

Block 0x23b
[0x23b:0x28c]
---
Predecessors: [0x20c]
Successors: [0x28d, 0x291]
---
0x23b CALLER
0x23c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x251 AND
0x252 PUSH2 0x8fc
0x255 ADDRESS
0x256 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26b AND
0x26c BALANCE
0x26d SWAP1
0x26e DUP2
0x26f ISZERO
0x270 MUL
0x271 SWAP1
0x272 PUSH1 0x40
0x274 MLOAD
0x275 PUSH1 0x0
0x277 PUSH1 0x40
0x279 MLOAD
0x27a DUP1
0x27b DUP4
0x27c SUB
0x27d DUP2
0x27e DUP6
0x27f DUP9
0x280 DUP9
0x281 CALL
0x282 SWAP4
0x283 POP
0x284 POP
0x285 POP
0x286 POP
0x287 ISZERO
0x288 ISZERO
0x289 PUSH2 0x291
0x28c JUMPI
---
0x23b: V175 = CALLER
0x23c: V176 = 0xffffffffffffffffffffffffffffffffffffffff
0x251: V177 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x252: V178 = 0x8fc
0x255: V179 = ADDRESS
0x256: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x26b: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x26c: V182 = BALANCE V181
0x26f: V183 = ISZERO V182
0x270: V184 = MUL V183 0x8fc
0x272: V185 = 0x40
0x274: V186 = M[0x40]
0x275: V187 = 0x0
0x277: V188 = 0x40
0x279: V189 = M[0x40]
0x27c: V190 = SUB V186 V189
0x281: V191 = CALL V184 V177 V182 V189 V190 V189 0x0
0x287: V192 = ISZERO V191
0x288: V193 = ISZERO V192
0x289: V194 = 0x291
0x28c: JUMPI 0x291 V193
---
Entry stack: [V11, 0xb7, V47, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb7, V47, V45]

================================

Block 0x28d
[0x28d:0x290]
---
Predecessors: [0x23b]
Successors: []
---
0x28d PUSH1 0x0
0x28f DUP1
0x290 REVERT
---
0x28d: V195 = 0x0
0x290: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb7, V47, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb7, V47, V45]

================================

Block 0x291
[0x291:0x291]
---
Predecessors: [0x23b]
Successors: [0x292]
---
0x291 JUMPDEST
---
0x291: JUMPDEST 
---
Entry stack: [V11, 0xb7, V47, V45]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb7, V47, V45]

================================

Block 0x292
[0x292:0x295]
---
Predecessors: [0x20c, 0x291]
Successors: [0xb7]
---
0x292 JUMPDEST
0x293 POP
0x294 POP
0x295 JUMP
---
0x292: JUMPDEST 
0x295: JUMP 0xb7
---
Entry stack: [V11, 0xb7, V47, V45]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x296
[0x296:0x2a8]
---
Predecessors: [0xc4]
Successors: [0x2a9, 0x2c3]
---
0x296 JUMPDEST
0x297 PUSH1 0x1
0x299 SLOAD
0x29a PUSH1 0x0
0x29c NOT
0x29d AND
0x29e DUP2
0x29f PUSH1 0x0
0x2a1 NOT
0x2a2 AND
0x2a3 EQ
0x2a4 ISZERO
0x2a5 PUSH2 0x2c3
0x2a8 JUMPI
---
0x296: JUMPDEST 
0x297: V196 = 0x1
0x299: V197 = S[0x1]
0x29a: V198 = 0x0
0x29c: V199 = NOT 0x0
0x29d: V200 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V197
0x29f: V201 = 0x0
0x2a1: V202 = NOT 0x0
0x2a2: V203 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V58
0x2a3: V204 = EQ V203 V200
0x2a4: V205 = ISZERO V204
0x2a5: V206 = 0x2c3
0x2a8: JUMPI 0x2c3 V205
---
Entry stack: [V11, 0xde, V58]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xde, V58]

================================

Block 0x2a9
[0x2a9:0x2c2]
---
Predecessors: [0x296]
Successors: [0x2c3]
---
0x2a9 PUSH1 0x1
0x2ab PUSH1 0x0
0x2ad DUP1
0x2ae PUSH2 0x100
0x2b1 EXP
0x2b2 DUP2
0x2b3 SLOAD
0x2b4 DUP2
0x2b5 PUSH1 0xff
0x2b7 MUL
0x2b8 NOT
0x2b9 AND
0x2ba SWAP1
0x2bb DUP4
0x2bc ISZERO
0x2bd ISZERO
0x2be MUL
0x2bf OR
0x2c0 SWAP1
0x2c1 SSTORE
0x2c2 POP
---
0x2a9: V207 = 0x1
0x2ab: V208 = 0x0
0x2ae: V209 = 0x100
0x2b1: V210 = EXP 0x100 0x0
0x2b3: V211 = S[0x0]
0x2b5: V212 = 0xff
0x2b7: V213 = MUL 0xff 0x1
0x2b8: V214 = NOT 0xff
0x2b9: V215 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V211
0x2bc: V216 = ISZERO 0x1
0x2bd: V217 = ISZERO 0x0
0x2be: V218 = MUL 0x1 0x1
0x2bf: V219 = OR 0x1 V215
0x2c1: S[0x0] = V219
---
Entry stack: [V11, 0xde, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xde, V58]

================================

Block 0x2c3
[0x2c3:0x2c5]
---
Predecessors: [0x296, 0x2a9]
Successors: [0xde]
---
0x2c3 JUMPDEST
0x2c4 POP
0x2c5 JUMP
---
0x2c3: JUMPDEST 
0x2c5: JUMP 0xde
---
Entry stack: [V11, 0xde, V58]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c6
[0x2c6:0x2cb]
---
Predecessors: [0xeb]
Successors: [0xf3]
---
0x2c6 JUMPDEST
0x2c7 PUSH1 0x1
0x2c9 SLOAD
0x2ca DUP2
0x2cb JUMP
---
0x2c6: JUMPDEST 
0x2c7: V220 = 0x1
0x2c9: V221 = S[0x1]
0x2cb: JUMP 0xf3
---
Entry stack: [V11, 0xf3]
Stack pops: 1
Stack additions: [S0, V221]
Exit stack: [V11, 0xf3, V221]

================================

Block 0x2cc
[0x2cc:0x2de]
---
Predecessors: [0x11c]
Successors: [0x2df]
---
0x2cc JUMPDEST
0x2cd PUSH1 0x0
0x2cf DUP2
0x2d0 PUSH1 0x40
0x2d2 MLOAD
0x2d3 DUP1
0x2d4 DUP3
0x2d5 DUP1
0x2d6 MLOAD
0x2d7 SWAP1
0x2d8 PUSH1 0x20
0x2da ADD
0x2db SWAP1
0x2dc DUP1
0x2dd DUP4
0x2de DUP4
---
0x2cc: JUMPDEST 
0x2cd: V222 = 0x0
0x2d0: V223 = 0x40
0x2d2: V224 = M[0x40]
0x2d6: V225 = M[V102]
0x2d8: V226 = 0x20
0x2da: V227 = ADD 0x20 V102
---
Entry stack: [V11, 0x16c, V102]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V224, V224, V227, V225, V225, V224, V227]
Exit stack: [V11, 0x16c, V102, 0x0, V102, V224, V224, V227, V225, V225, V224, V227]

================================

Block 0x2df
[0x2df:0x2e9]
---
Predecessors: [0x2cc, 0x2ea]
Successors: [0x2ea, 0x304]
---
0x2df JUMPDEST
0x2e0 PUSH1 0x20
0x2e2 DUP4
0x2e3 LT
0x2e4 ISZERO
0x2e5 ISZERO
0x2e6 PUSH2 0x304
0x2e9 JUMPI
---
0x2df: JUMPDEST 
0x2e0: V228 = 0x20
0x2e3: V229 = LT S2 0x20
0x2e4: V230 = ISZERO V229
0x2e5: V231 = ISZERO V230
0x2e6: V232 = 0x304
0x2e9: JUMPI 0x304 V231
---
Entry stack: [V11, 0x16c, V102, 0x0, V102, V224, V224, V227, V225, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x16c, V102, 0x0, V102, V224, V224, V227, V225, S2, S1, S0]

================================

Block 0x2ea
[0x2ea:0x303]
---
Predecessors: [0x2df]
Successors: [0x2df]
---
0x2ea DUP1
0x2eb MLOAD
0x2ec DUP3
0x2ed MSTORE
0x2ee PUSH1 0x20
0x2f0 DUP3
0x2f1 ADD
0x2f2 SWAP2
0x2f3 POP
0x2f4 PUSH1 0x20
0x2f6 DUP2
0x2f7 ADD
0x2f8 SWAP1
0x2f9 POP
0x2fa PUSH1 0x20
0x2fc DUP4
0x2fd SUB
0x2fe SWAP3
0x2ff POP
0x300 PUSH2 0x2df
0x303 JUMP
---
0x2eb: V233 = M[S0]
0x2ed: M[S1] = V233
0x2ee: V234 = 0x20
0x2f1: V235 = ADD S1 0x20
0x2f4: V236 = 0x20
0x2f7: V237 = ADD S0 0x20
0x2fa: V238 = 0x20
0x2fd: V239 = SUB S2 0x20
0x300: V240 = 0x2df
0x303: JUMP 0x2df
---
Entry stack: [V11, 0x16c, V102, 0x0, V102, V224, V224, V227, V225, S2, S1, S0]
Stack pops: 3
Stack additions: [V239, V235, V237]
Exit stack: [V11, 0x16c, V102, 0x0, V102, V224, V224, V227, V225, V239, V235, V237]

================================

Block 0x304
[0x304:0x337]
---
Predecessors: [0x2df]
Successors: [0x16c]
---
0x304 JUMPDEST
0x305 PUSH1 0x1
0x307 DUP4
0x308 PUSH1 0x20
0x30a SUB
0x30b PUSH2 0x100
0x30e EXP
0x30f SUB
0x310 DUP1
0x311 NOT
0x312 DUP3
0x313 MLOAD
0x314 AND
0x315 DUP2
0x316 DUP5
0x317 MLOAD
0x318 AND
0x319 DUP1
0x31a DUP3
0x31b OR
0x31c DUP6
0x31d MSTORE
0x31e POP
0x31f POP
0x320 POP
0x321 POP
0x322 POP
0x323 POP
0x324 SWAP1
0x325 POP
0x326 ADD
0x327 SWAP2
0x328 POP
0x329 POP
0x32a PUSH1 0x40
0x32c MLOAD
0x32d DUP1
0x32e SWAP2
0x32f SUB
0x330 SWAP1
0x331 SHA3
0x332 SWAP1
0x333 POP
0x334 SWAP2
0x335 SWAP1
0x336 POP
0x337 JUMP
---
0x304: JUMPDEST 
0x305: V241 = 0x1
0x308: V242 = 0x20
0x30a: V243 = SUB 0x20 S2
0x30b: V244 = 0x100
0x30e: V245 = EXP 0x100 V243
0x30f: V246 = SUB V245 0x1
0x311: V247 = NOT V246
0x313: V248 = M[S0]
0x314: V249 = AND V248 V247
0x317: V250 = M[S1]
0x318: V251 = AND V250 V246
0x31b: V252 = OR V249 V251
0x31d: M[S1] = V252
0x326: V253 = ADD V225 V224
0x32a: V254 = 0x40
0x32c: V255 = M[0x40]
0x32f: V256 = SUB V253 V255
0x331: V257 = SHA3 V255 V256
0x337: JUMP 0x16c
---
Entry stack: [V11, 0x16c, V102, 0x0, V102, V224, V224, V227, V225, S2, S1, S0]
Stack pops: 11
Stack additions: [V257]
Exit stack: [V11, V257]

================================

Block 0x338
[0x338:0x38e]
---
Predecessors: [0x18a]
Successors: [0x38f, 0x408]
---
0x338 JUMPDEST
0x339 PUSH1 0x0
0x33b PUSH1 0x1
0x33d SWAP1
0x33e SLOAD
0x33f SWAP1
0x340 PUSH2 0x100
0x343 EXP
0x344 SWAP1
0x345 DIV
0x346 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35b AND
0x35c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x371 AND
0x372 CALLER
0x373 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x388 AND
0x389 EQ
0x38a ISZERO
0x38b PUSH2 0x408
0x38e JUMPI
---
0x338: JUMPDEST 
0x339: V258 = 0x0
0x33b: V259 = 0x1
0x33e: V260 = S[0x0]
0x340: V261 = 0x100
0x343: V262 = EXP 0x100 0x1
0x345: V263 = DIV V260 0x100
0x346: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x35b: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x35c: V266 = 0xffffffffffffffffffffffffffffffffffffffff
0x371: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x372: V268 = CALLER
0x373: V269 = 0xffffffffffffffffffffffffffffffffffffffff
0x388: V270 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x389: V271 = EQ V270 V267
0x38a: V272 = ISZERO V271
0x38b: V273 = 0x408
0x38e: JUMPI 0x408 V272
---
Entry stack: [V11, 0x192]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x192]

================================

Block 0x38f
[0x38f:0x402]
---
Predecessors: [0x338]
Successors: [0x403, 0x407]
---
0x38f PUSH1 0x0
0x391 PUSH1 0x1
0x393 SWAP1
0x394 SLOAD
0x395 SWAP1
0x396 PUSH2 0x100
0x399 EXP
0x39a SWAP1
0x39b DIV
0x39c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b1 AND
0x3b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c7 AND
0x3c8 PUSH2 0x8fc
0x3cb ADDRESS
0x3cc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e1 AND
0x3e2 BALANCE
0x3e3 SWAP1
0x3e4 DUP2
0x3e5 ISZERO
0x3e6 MUL
0x3e7 SWAP1
0x3e8 PUSH1 0x40
0x3ea MLOAD
0x3eb PUSH1 0x0
0x3ed PUSH1 0x40
0x3ef MLOAD
0x3f0 DUP1
0x3f1 DUP4
0x3f2 SUB
0x3f3 DUP2
0x3f4 DUP6
0x3f5 DUP9
0x3f6 DUP9
0x3f7 CALL
0x3f8 SWAP4
0x3f9 POP
0x3fa POP
0x3fb POP
0x3fc POP
0x3fd ISZERO
0x3fe ISZERO
0x3ff PUSH2 0x407
0x402 JUMPI
---
0x38f: V274 = 0x0
0x391: V275 = 0x1
0x394: V276 = S[0x0]
0x396: V277 = 0x100
0x399: V278 = EXP 0x100 0x1
0x39b: V279 = DIV V276 0x100
0x39c: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b1: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x3b2: V282 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c7: V283 = AND 0xffffffffffffffffffffffffffffffffffffffff V281
0x3c8: V284 = 0x8fc
0x3cb: V285 = ADDRESS
0x3cc: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e1: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x3e2: V288 = BALANCE V287
0x3e5: V289 = ISZERO V288
0x3e6: V290 = MUL V289 0x8fc
0x3e8: V291 = 0x40
0x3ea: V292 = M[0x40]
0x3eb: V293 = 0x0
0x3ed: V294 = 0x40
0x3ef: V295 = M[0x40]
0x3f2: V296 = SUB V292 V295
0x3f7: V297 = CALL V290 V283 V288 V295 V296 V295 0x0
0x3fd: V298 = ISZERO V297
0x3fe: V299 = ISZERO V298
0x3ff: V300 = 0x407
0x402: JUMPI 0x407 V299
---
Entry stack: [V11, 0x192]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x192]

================================

Block 0x403
[0x403:0x406]
---
Predecessors: [0x38f]
Successors: []
---
0x403 PUSH1 0x0
0x405 DUP1
0x406 REVERT
---
0x403: V301 = 0x0
0x406: REVERT 0x0 0x0
---
Entry stack: [V11, 0x192]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x192]

================================

Block 0x407
[0x407:0x407]
---
Predecessors: [0x38f]
Successors: [0x408]
---
0x407 JUMPDEST
---
0x407: JUMPDEST 
---
Entry stack: [V11, 0x192]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x192]

================================

Block 0x408
[0x408:0x409]
---
Predecessors: [0x338, 0x407]
Successors: [0x192]
---
0x408 JUMPDEST
0x409 JUMP
---
0x408: JUMPDEST 
0x409: JUMP 0x192
---
Entry stack: [V11, 0x192]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x40a
[0x40a:0x443]
---
Predecessors: []
Successors: []
---
0x40a STOP
0x40b LOG1
0x40c PUSH6 0x627a7a723058
0x413 SHA3
0x414 MISSING 0xab
0x415 PUSH23 0x27d15221f0baf10a534c289814a408ece54781f4eb28f9
0x42d PUSH22 0x40014b08785d0029
---
0x40a: STOP 
0x40b: LOG S0 S1 S2
0x40c: V302 = 0x627a7a723058
0x413: V303 = SHA3 0x627a7a723058 S3
0x414: MISSING 0xab
0x415: V304 = 0x27d15221f0baf10a534c289814a408ece54781f4eb28f9
0x42d: V305 = 0x40014b08785d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V303, 0x40014b08785d0029, 0x27d15221f0baf10a534c289814a408ece54781f4eb28f9]
Exit stack: []

================================

Function 0:
Public function signature: 0xa6fbb05
Entry block: 0x7a
Exit block: 0x94
Body: 0x7a, 0x94, 0x194, 0x1ab, 0x1b7, 0x1bd, 0x209

Function 1:
Public function signature: 0x181ffc5f
Entry block: 0x96
Exit block: 0x28d
Body: 0x96, 0xb7, 0x20c, 0x23b, 0x28d, 0x291, 0x292

Function 2:
Public function signature: 0x31fd725a
Entry block: 0xb9
Exit block: 0xde
Body: 0xb9, 0xc0, 0xc4, 0xde, 0x296, 0x2a9, 0x2c3

Function 3:
Public function signature: 0x87f24484
Entry block: 0xe0
Exit block: 0xf3
Body: 0xe0, 0xe7, 0xeb, 0xf3, 0x2c6

Function 4:
Public function signature: 0xb456ecc5
Entry block: 0x111
Exit block: 0x16c
Body: 0x111, 0x118, 0x11c, 0x16c, 0x2cc, 0x2df, 0x2ea, 0x304

Function 5:
Public function signature: 0xcd8b02c8
Entry block: 0x18a
Exit block: 0x192
Body: 0x18a, 0x192, 0x338, 0x38f, 0x403, 0x407, 0x408

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

