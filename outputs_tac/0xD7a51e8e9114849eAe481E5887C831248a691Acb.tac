Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xeb]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xeb
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xeb
0xa: JUMPI 0xeb V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x377]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x6fdde03
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x377
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x6fdde03
0x20: V14 = EQ V12 0x6fdde03
0x21: V15 = 0x377
0x24: JUMPI 0x377 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x402]
---
0x25 DUP1
0x26 PUSH4 0x95ea7b3
0x2b EQ
0x2c PUSH2 0x402
0x2f JUMPI
---
0x26: V16 = 0x95ea7b3
0x2b: V17 = EQ 0x95ea7b3 V12
0x2c: V18 = 0x402
0x2f: JUMPI 0x402 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x438]
---
0x30 DUP1
0x31 PUSH4 0xdcf4b8f
0x36 EQ
0x37 PUSH2 0x438
0x3a JUMPI
---
0x31: V19 = 0xdcf4b8f
0x36: V20 = EQ 0xdcf4b8f V12
0x37: V21 = 0x438
0x3a: JUMPI 0x438 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x45d]
---
0x3b DUP1
0x3c PUSH4 0x18160ddd
0x41 EQ
0x42 PUSH2 0x45d
0x45 JUMPI
---
0x3c: V22 = 0x18160ddd
0x41: V23 = EQ 0x18160ddd V12
0x42: V24 = 0x45d
0x45: JUMPI 0x45d V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x482]
---
0x46 DUP1
0x47 PUSH4 0x23b872dd
0x4c EQ
0x4d PUSH2 0x482
0x50 JUMPI
---
0x47: V25 = 0x23b872dd
0x4c: V26 = EQ 0x23b872dd V12
0x4d: V27 = 0x482
0x50: JUMPI 0x482 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x4be]
---
0x51 DUP1
0x52 PUSH4 0x313ce567
0x57 EQ
0x58 PUSH2 0x4be
0x5b JUMPI
---
0x52: V28 = 0x313ce567
0x57: V29 = EQ 0x313ce567 V12
0x58: V30 = 0x4be
0x5b: JUMPI 0x4be V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x4e7]
---
0x5c DUP1
0x5d PUSH4 0x64acdb77
0x62 EQ
0x63 PUSH2 0x4e7
0x66 JUMPI
---
0x5d: V31 = 0x64acdb77
0x62: V32 = EQ 0x64acdb77 V12
0x63: V33 = 0x4e7
0x66: JUMPI 0x4e7 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x4fc]
---
0x67 DUP1
0x68 PUSH4 0x70a08231
0x6d EQ
0x6e PUSH2 0x4fc
0x71 JUMPI
---
0x68: V34 = 0x70a08231
0x6d: V35 = EQ 0x70a08231 V12
0x6e: V36 = 0x4fc
0x71: JUMPI 0x4fc V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x52d]
---
0x72 DUP1
0x73 PUSH4 0x79c65068
0x78 EQ
0x79 PUSH2 0x52d
0x7c JUMPI
---
0x73: V37 = 0x79c65068
0x78: V38 = EQ 0x79c65068 V12
0x79: V39 = 0x52d
0x7c: JUMPI 0x52d V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x551]
---
0x7d DUP1
0x7e PUSH4 0x8da5cb5b
0x83 EQ
0x84 PUSH2 0x551
0x87 JUMPI
---
0x7e: V40 = 0x8da5cb5b
0x83: V41 = EQ 0x8da5cb5b V12
0x84: V42 = 0x551
0x87: JUMPI 0x551 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x580]
---
0x88 DUP1
0x89 PUSH4 0x8f580996
0x8e EQ
0x8f PUSH2 0x580
0x92 JUMPI
---
0x89: V43 = 0x8f580996
0x8e: V44 = EQ 0x8f580996 V12
0x8f: V45 = 0x580
0x92: JUMPI 0x580 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x595]
---
0x93 DUP1
0x94 PUSH4 0x95d89b41
0x99 EQ
0x9a PUSH2 0x595
0x9d JUMPI
---
0x94: V46 = 0x95d89b41
0x99: V47 = EQ 0x95d89b41 V12
0x9a: V48 = 0x595
0x9d: JUMPI 0x595 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x620]
---
0x9e DUP1
0x9f PUSH4 0x98b01fe3
0xa4 EQ
0xa5 PUSH2 0x620
0xa8 JUMPI
---
0x9f: V49 = 0x98b01fe3
0xa4: V50 = EQ 0x98b01fe3 V12
0xa5: V51 = 0x620
0xa8: JUMPI 0x620 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x645]
---
0xa9 DUP1
0xaa PUSH4 0xa9059cbb
0xaf EQ
0xb0 PUSH2 0x645
0xb3 JUMPI
---
0xaa: V52 = 0xa9059cbb
0xaf: V53 = EQ 0xa9059cbb V12
0xb0: V54 = 0x645
0xb3: JUMPI 0x645 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x67b]
---
0xb4 DUP1
0xb5 PUSH4 0xc59d4847
0xba EQ
0xbb PUSH2 0x67b
0xbe JUMPI
---
0xb5: V55 = 0xc59d4847
0xba: V56 = EQ 0xc59d4847 V12
0xbb: V57 = 0x67b
0xbe: JUMPI 0x67b V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x6ba]
---
0xbf DUP1
0xc0 PUSH4 0xda040c0f
0xc5 EQ
0xc6 PUSH2 0x6ba
0xc9 JUMPI
---
0xc0: V58 = 0xda040c0f
0xc5: V59 = EQ 0xda040c0f V12
0xc6: V60 = 0x6ba
0xc9: JUMPI 0x6ba V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x6e1]
---
0xca DUP1
0xcb PUSH4 0xdd62ed3e
0xd0 EQ
0xd1 PUSH2 0x6e1
0xd4 JUMPI
---
0xcb: V61 = 0xdd62ed3e
0xd0: V62 = EQ 0xdd62ed3e V12
0xd1: V63 = 0x6e1
0xd4: JUMPI 0x6e1 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x718]
---
0xd5 DUP1
0xd6 PUSH4 0xe58fc54c
0xdb EQ
0xdc PUSH2 0x718
0xdf JUMPI
---
0xd6: V64 = 0xe58fc54c
0xdb: V65 = EQ 0xe58fc54c V12
0xdc: V66 = 0x718
0xdf: JUMPI 0x718 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x74b]
---
0xe0 DUP1
0xe1 PUSH4 0xf2fde38b
0xe6 EQ
0xe7 PUSH2 0x74b
0xea JUMPI
---
0xe1: V67 = 0xf2fde38b
0xe6: V68 = EQ 0xf2fde38b V12
0xe7: V69 = 0x74b
0xea: JUMPI 0x74b V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0x0, 0xe0]
Successors: [0xef]
---
0xeb JUMPDEST
0xec PUSH2 0x375
---
0xeb: JUMPDEST 
0xec: V70 = 0x375
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x375]
Exit stack: [V12, 0x375]

================================

Block 0xef
[0xef:0x10b]
---
Predecessors: [0xeb]
Successors: [0x10c, 0x110]
---
0xef JUMPDEST
0xf0 PUSH1 0x0
0xf2 DUP1
0xf3 PUSH1 0x0
0xf5 DUP1
0xf6 PUSH1 0x1
0xf8 PUSH1 0x14
0xfa SWAP1
0xfb SLOAD
0xfc SWAP1
0xfd PUSH2 0x100
0x100 EXP
0x101 SWAP1
0x102 DIV
0x103 PUSH1 0xff
0x105 AND
0x106 ISZERO
0x107 ISZERO
0x108 PUSH2 0x110
0x10b JUMPI
---
0xef: JUMPDEST 
0xf0: V71 = 0x0
0xf3: V72 = 0x0
0xf6: V73 = 0x1
0xf8: V74 = 0x14
0xfb: V75 = S[0x1]
0xfd: V76 = 0x100
0x100: V77 = EXP 0x100 0x14
0x102: V78 = DIV V75 0x10000000000000000000000000000000000000000
0x103: V79 = 0xff
0x105: V80 = AND 0xff V78
0x106: V81 = ISZERO V80
0x107: V82 = ISZERO V81
0x108: V83 = 0x110
0x10b: JUMPI 0x110 V82
---
Entry stack: [V12, 0x375]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x375, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x10c
[0x10c:0x10f]
---
Predecessors: [0xef]
Successors: []
---
0x10c PUSH1 0x0
0x10e DUP1
0x10f REVERT
---
0x10c: V84 = 0x0
0x10f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x375, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x110
[0x110:0x117]
---
Predecessors: [0xef]
Successors: [0x118, 0x11c]
---
0x110 JUMPDEST
0x111 CALLVALUE
0x112 ISZERO
0x113 ISZERO
0x114 PUSH2 0x11c
0x117 JUMPI
---
0x110: JUMPDEST 
0x111: V85 = CALLVALUE
0x112: V86 = ISZERO V85
0x113: V87 = ISZERO V86
0x114: V88 = 0x11c
0x117: JUMPI 0x11c V87
---
Entry stack: [V12, 0x375, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x118
[0x118:0x11b]
---
Predecessors: [0x110]
Successors: [0x36f]
---
0x118 PUSH2 0x36f
0x11b JUMP
---
0x118: V89 = 0x36f
0x11b: JUMP 0x36f
---
Entry stack: [V12, 0x375, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x11c
[0x11c:0x14b]
---
Predecessors: [0x110]
Successors: [0x14c, 0x150]
---
0x11c JUMPDEST
0x11d PUSH1 0x1
0x11f SLOAD
0x120 PUSH1 0x1
0x122 PUSH1 0xa0
0x124 PUSH1 0x2
0x126 EXP
0x127 SUB
0x128 AND
0x129 CALLVALUE
0x12a DUP1
0x12b ISZERO
0x12c PUSH2 0x8fc
0x12f MUL
0x130 SWAP1
0x131 PUSH1 0x40
0x133 MLOAD
0x134 PUSH1 0x0
0x136 PUSH1 0x40
0x138 MLOAD
0x139 DUP1
0x13a DUP4
0x13b SUB
0x13c DUP2
0x13d DUP6
0x13e DUP9
0x13f DUP9
0x140 CALL
0x141 SWAP4
0x142 POP
0x143 POP
0x144 POP
0x145 POP
0x146 ISZERO
0x147 ISZERO
0x148 PUSH2 0x150
0x14b JUMPI
---
0x11c: JUMPDEST 
0x11d: V90 = 0x1
0x11f: V91 = S[0x1]
0x120: V92 = 0x1
0x122: V93 = 0xa0
0x124: V94 = 0x2
0x126: V95 = EXP 0x2 0xa0
0x127: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x128: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x129: V98 = CALLVALUE
0x12b: V99 = ISZERO V98
0x12c: V100 = 0x8fc
0x12f: V101 = MUL 0x8fc V99
0x131: V102 = 0x40
0x133: V103 = M[0x40]
0x134: V104 = 0x0
0x136: V105 = 0x40
0x138: V106 = M[0x40]
0x13b: V107 = SUB V103 V106
0x140: V108 = CALL V101 V97 V98 V106 V107 V106 0x0
0x146: V109 = ISZERO V108
0x147: V110 = ISZERO V109
0x148: V111 = 0x150
0x14b: JUMPI 0x150 V110
---
Entry stack: [V12, 0x375, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x14c
[0x14c:0x14f]
---
Predecessors: [0x11c]
Successors: []
---
0x14c PUSH1 0x0
0x14e DUP1
0x14f REVERT
---
0x14c: V112 = 0x0
0x14f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x375, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x150
[0x150:0x16f]
---
Predecessors: [0x11c]
Successors: [0x170, 0x31e]
---
0x150 JUMPDEST
0x151 PUSH1 0x4
0x153 DUP1
0x154 SLOAD
0x155 CALLVALUE
0x156 SWAP1
0x157 DUP2
0x158 ADD
0x159 SWAP1
0x15a SWAP2
0x15b SSTORE
0x15c PUSH1 0x14
0x15e DUP2
0x15f MUL
0x160 SWAP5
0x161 POP
0x162 PUSH7 0x2386f26fc10000
0x16a SWAP1
0x16b LT
0x16c PUSH2 0x31e
0x16f JUMPI
---
0x150: JUMPDEST 
0x151: V113 = 0x4
0x154: V114 = S[0x4]
0x155: V115 = CALLVALUE
0x158: V116 = ADD V115 V114
0x15b: S[0x4] = V116
0x15c: V117 = 0x14
0x15f: V118 = MUL V115 0x14
0x162: V119 = 0x2386f26fc10000
0x16b: V120 = LT V115 0x2386f26fc10000
0x16c: V121 = 0x31e
0x16f: JUMPI 0x31e V120
---
Entry stack: [V12, 0x375, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V118, S2, S1, S0]
Exit stack: [V12, 0x375, V118, 0x0, 0x0, 0x0]

================================

Block 0x170
[0x170:0x1cc]
---
Predecessors: [0x150]
Successors: [0x1cd, 0x1d1]
---
0x170 PUSH1 0x4
0x172 SLOAD
0x173 DUP5
0x174 ADD
0x175 SWAP4
0x176 POP
0x177 PUSH1 0x3
0x179 COINBASE
0x17a NUMBER
0x17b TIMESTAMP
0x17c PUSH1 0x0
0x17e PUSH1 0x40
0x180 MLOAD
0x181 PUSH1 0x20
0x183 ADD
0x184 MSTORE
0x185 PUSH1 0x40
0x187 MLOAD
0x188 PUSH1 0x1
0x18a PUSH1 0xa0
0x18c PUSH1 0x2
0x18e EXP
0x18f SUB
0x190 SWAP4
0x191 SWAP1
0x192 SWAP4
0x193 AND
0x194 PUSH13 0x1000000000000000000000000
0x1a2 MUL
0x1a3 DUP4
0x1a4 MSTORE
0x1a5 PUSH1 0x14
0x1a7 DUP4
0x1a8 ADD
0x1a9 SWAP2
0x1aa SWAP1
0x1ab SWAP2
0x1ac MSTORE
0x1ad PUSH1 0x34
0x1af DUP3
0x1b0 ADD
0x1b1 MSTORE
0x1b2 PUSH1 0x54
0x1b4 ADD
0x1b5 PUSH1 0x20
0x1b7 PUSH1 0x40
0x1b9 MLOAD
0x1ba DUP1
0x1bb DUP4
0x1bc SUB
0x1bd DUP2
0x1be PUSH1 0x0
0x1c0 DUP7
0x1c1 PUSH2 0x646e
0x1c4 GAS
0x1c5 SUB
0x1c6 CALL
0x1c7 ISZERO
0x1c8 ISZERO
0x1c9 PUSH2 0x1d1
0x1cc JUMPI
---
0x170: V122 = 0x4
0x172: V123 = S[0x4]
0x174: V124 = ADD V118 V123
0x177: V125 = 0x3
0x179: V126 = COINBASE
0x17a: V127 = NUMBER
0x17b: V128 = TIMESTAMP
0x17c: V129 = 0x0
0x17e: V130 = 0x40
0x180: V131 = M[0x40]
0x181: V132 = 0x20
0x183: V133 = ADD 0x20 V131
0x184: M[V133] = 0x0
0x185: V134 = 0x40
0x187: V135 = M[0x40]
0x188: V136 = 0x1
0x18a: V137 = 0xa0
0x18c: V138 = 0x2
0x18e: V139 = EXP 0x2 0xa0
0x18f: V140 = SUB 0x10000000000000000000000000000000000000000 0x1
0x193: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x194: V142 = 0x1000000000000000000000000
0x1a2: V143 = MUL 0x1000000000000000000000000 V141
0x1a4: M[V135] = V143
0x1a5: V144 = 0x14
0x1a8: V145 = ADD V135 0x14
0x1ac: M[V145] = V127
0x1ad: V146 = 0x34
0x1b0: V147 = ADD V135 0x34
0x1b1: M[V147] = V128
0x1b2: V148 = 0x54
0x1b4: V149 = ADD 0x54 V135
0x1b5: V150 = 0x20
0x1b7: V151 = 0x40
0x1b9: V152 = M[0x40]
0x1bc: V153 = SUB V149 V152
0x1be: V154 = 0x0
0x1c1: V155 = 0x646e
0x1c4: V156 = GAS
0x1c5: V157 = SUB V156 0x646e
0x1c6: V158 = CALL V157 0x3 0x0 V152 V153 V152 0x20
0x1c7: V159 = ISZERO V158
0x1c8: V160 = ISZERO V159
0x1c9: V161 = 0x1d1
0x1cc: JUMPI 0x1d1 V160
---
Entry stack: [V12, 0x375, V118, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V124, S2, S1, S0, 0x3, V149]
Exit stack: [V12, 0x375, V124, 0x0, 0x0, 0x0, 0x3, V149]

================================

Block 0x1cd
[0x1cd:0x1d0]
---
Predecessors: [0x170]
Successors: []
---
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 REVERT
---
0x1cd: V162 = 0x0
0x1d0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x375, V124, 0x0, 0x0, 0x0, 0x3, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375, V124, 0x0, 0x0, 0x0, 0x3, V149]

================================

Block 0x1d1
[0x1d1:0x1eb]
---
Predecessors: [0x170]
Successors: [0x1ec]
---
0x1d1 JUMPDEST
0x1d2 POP
0x1d3 POP
0x1d4 PUSH1 0x40
0x1d6 MLOAD
0x1d7 MLOAD
0x1d8 PUSH13 0x1000000000000000000000000
0x1e6 MUL
0x1e7 SWAP3
0x1e8 POP
0x1e9 DUP3
0x1ea PUSH1 0x0
---
0x1d1: JUMPDEST 
0x1d4: V163 = 0x40
0x1d6: V164 = M[0x40]
0x1d7: V165 = M[V164]
0x1d8: V166 = 0x1000000000000000000000000
0x1e6: V167 = MUL 0x1000000000000000000000000 V165
0x1ea: V168 = 0x0
---
Entry stack: [V12, 0x375, V124, 0x0, 0x0, 0x0, 0x3, V149]
Stack pops: 5
Stack additions: [V167, S3, S2, V167, 0x0]
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0, V167, 0x0]

================================

Block 0x1ec
[0x1ec:0x223]
---
Predecessors: [0x1d1]
Successors: [0x224, 0x31e]
---
0x1ec JUMPDEST
0x1ed BYTE
0x1ee PUSH1 0xf8
0x1f0 PUSH1 0x2
0x1f2 EXP
0x1f3 MUL
0x1f4 PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x214 NOT
0x215 AND
0x216 PUSH1 0x0
0x218 PUSH1 0xf8
0x21a PUSH1 0x2
0x21c EXP
0x21d MUL
0x21e EQ
0x21f ISZERO
0x220 PUSH2 0x31e
0x223 JUMPI
---
0x1ec: JUMPDEST 
0x1ed: V169 = BYTE 0x0 V167
0x1ee: V170 = 0xf8
0x1f0: V171 = 0x2
0x1f2: V172 = EXP 0x2 0xf8
0x1f3: V173 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V169
0x1f4: V174 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x214: V175 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x215: V176 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V173
0x216: V177 = 0x0
0x218: V178 = 0xf8
0x21a: V179 = 0x2
0x21c: V180 = EXP 0x2 0xf8
0x21d: V181 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x0
0x21e: V182 = EQ 0x0 V176
0x21f: V183 = ISZERO V182
0x220: V184 = 0x31e
0x223: JUMPI 0x31e V183
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0, V167, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0]

================================

Block 0x224
[0x224:0x226]
---
Predecessors: [0x1ec]
Successors: [0x227]
---
0x224 DUP3
0x225 PUSH1 0x1
---
0x225: V185 = 0x1
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, 0x1]
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0, V167, 0x1]

================================

Block 0x227
[0x227:0x256]
---
Predecessors: [0x224]
Successors: [0x257, 0x25d]
---
0x227 JUMPDEST
0x228 BYTE
0x229 PUSH1 0xf8
0x22b PUSH1 0x2
0x22d EXP
0x22e MUL
0x22f PUSH32 0x800000000000000000000000000000000000000000000000000000000000000
0x250 AND
0x251 ISZERO
0x252 ISZERO
0x253 PUSH2 0x25d
0x256 JUMPI
---
0x227: JUMPDEST 
0x228: V186 = BYTE 0x1 V167
0x229: V187 = 0xf8
0x22b: V188 = 0x2
0x22d: V189 = EXP 0x2 0xf8
0x22e: V190 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V186
0x22f: V191 = 0x800000000000000000000000000000000000000000000000000000000000000
0x250: V192 = AND 0x800000000000000000000000000000000000000000000000000000000000000 V190
0x251: V193 = ISZERO V192
0x252: V194 = ISZERO V193
0x253: V195 = 0x25d
0x256: JUMPI 0x25d V194
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0, V167, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0]

================================

Block 0x257
[0x257:0x25c]
---
Predecessors: [0x227]
Successors: [0x260]
---
0x257 PUSH1 0x0
0x259 PUSH2 0x260
0x25c JUMP
---
0x257: V196 = 0x0
0x259: V197 = 0x260
0x25c: JUMP 0x260
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0, 0x0]

================================

Block 0x25d
[0x25d:0x25f]
---
Predecessors: [0x227]
Successors: [0x260]
---
0x25d JUMPDEST
0x25e PUSH1 0x1
---
0x25d: JUMPDEST 
0x25e: V198 = 0x1
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0, 0x1]

================================

Block 0x260
[0x260:0x263]
---
Predecessors: [0x257, 0x25d]
Successors: [0x264]
---
0x260 JUMPDEST
0x261 DUP4
0x262 PUSH1 0x1
---
0x260: JUMPDEST 
0x262: V199 = 0x1
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, 0x1]
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, V167, 0x1]

================================

Block 0x264
[0x264:0x293]
---
Predecessors: [0x260]
Successors: [0x294, 0x29a]
---
0x264 JUMPDEST
0x265 BYTE
0x266 PUSH1 0xf8
0x268 PUSH1 0x2
0x26a EXP
0x26b MUL
0x26c PUSH32 0x400000000000000000000000000000000000000000000000000000000000000
0x28d AND
0x28e ISZERO
0x28f ISZERO
0x290 PUSH2 0x29a
0x293 JUMPI
---
0x264: JUMPDEST 
0x265: V200 = BYTE 0x1 V167
0x266: V201 = 0xf8
0x268: V202 = 0x2
0x26a: V203 = EXP 0x2 0xf8
0x26b: V204 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V200
0x26c: V205 = 0x400000000000000000000000000000000000000000000000000000000000000
0x28d: V206 = AND 0x400000000000000000000000000000000000000000000000000000000000000 V204
0x28e: V207 = ISZERO V206
0x28f: V208 = ISZERO V207
0x290: V209 = 0x29a
0x293: JUMPI 0x29a V208
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, V167, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}]

================================

Block 0x294
[0x294:0x299]
---
Predecessors: [0x264]
Successors: [0x29d]
---
0x294 PUSH1 0x0
0x296 PUSH2 0x29d
0x299 JUMP
---
0x294: V210 = 0x0
0x296: V211 = 0x29d
0x299: JUMP 0x29d
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, 0x0]

================================

Block 0x29a
[0x29a:0x29c]
---
Predecessors: [0x264]
Successors: [0x29d]
---
0x29a JUMPDEST
0x29b PUSH1 0x1
---
0x29a: JUMPDEST 
0x29b: V212 = 0x1
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, 0x1]

================================

Block 0x29d
[0x29d:0x2a0]
---
Predecessors: [0x294, 0x29a]
Successors: [0x2a1]
---
0x29d JUMPDEST
0x29e DUP5
0x29f PUSH1 0x1
---
0x29d: JUMPDEST 
0x29f: V213 = 0x1
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, 0x1]
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, V167, 0x1]

================================

Block 0x2a1
[0x2a1:0x2d0]
---
Predecessors: [0x29d]
Successors: [0x2d1, 0x2d7]
---
0x2a1 JUMPDEST
0x2a2 BYTE
0x2a3 PUSH1 0xf8
0x2a5 PUSH1 0x2
0x2a7 EXP
0x2a8 MUL
0x2a9 PUSH32 0x200000000000000000000000000000000000000000000000000000000000000
0x2ca AND
0x2cb ISZERO
0x2cc ISZERO
0x2cd PUSH2 0x2d7
0x2d0 JUMPI
---
0x2a1: JUMPDEST 
0x2a2: V214 = BYTE 0x1 V167
0x2a3: V215 = 0xf8
0x2a5: V216 = 0x2
0x2a7: V217 = EXP 0x2 0xf8
0x2a8: V218 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V214
0x2a9: V219 = 0x200000000000000000000000000000000000000000000000000000000000000
0x2ca: V220 = AND 0x200000000000000000000000000000000000000000000000000000000000000 V218
0x2cb: V221 = ISZERO V220
0x2cc: V222 = ISZERO V221
0x2cd: V223 = 0x2d7
0x2d0: JUMPI 0x2d7 V222
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, V167, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}]

================================

Block 0x2d1
[0x2d1:0x2d6]
---
Predecessors: [0x2a1]
Successors: [0x2da]
---
0x2d1 PUSH1 0x0
0x2d3 PUSH2 0x2da
0x2d6 JUMP
---
0x2d1: V224 = 0x0
0x2d3: V225 = 0x2da
0x2d6: JUMP 0x2da
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, 0x0]

================================

Block 0x2d7
[0x2d7:0x2d9]
---
Predecessors: [0x2a1]
Successors: [0x2da]
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x1
---
0x2d7: JUMPDEST 
0x2d8: V226 = 0x1
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, 0x1]

================================

Block 0x2da
[0x2da:0x2dd]
---
Predecessors: [0x2d1, 0x2d7]
Successors: [0x2de]
---
0x2da JUMPDEST
0x2db DUP6
0x2dc PUSH1 0x1
---
0x2da: JUMPDEST 
0x2dc: V227 = 0x1
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5, 0x1]
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, V167, 0x1]

================================

Block 0x2de
[0x2de:0x2ee]
---
Predecessors: [0x2da]
Successors: [0x2ef, 0x2f5]
---
0x2de JUMPDEST
0x2df BYTE
0x2e0 PUSH1 0xf8
0x2e2 PUSH1 0x2
0x2e4 EXP
0x2e5 SWAP1
0x2e6 DUP2
0x2e7 MUL
0x2e8 AND
0x2e9 ISZERO
0x2ea ISZERO
0x2eb PUSH2 0x2f5
0x2ee JUMPI
---
0x2de: JUMPDEST 
0x2df: V228 = BYTE 0x1 V167
0x2e0: V229 = 0xf8
0x2e2: V230 = 0x2
0x2e4: V231 = EXP 0x2 0xf8
0x2e7: V232 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V228
0x2e8: V233 = AND V232 0x100000000000000000000000000000000000000000000000000000000000000
0x2e9: V234 = ISZERO V233
0x2ea: V235 = ISZERO V234
0x2eb: V236 = 0x2f5
0x2ee: JUMPI 0x2f5 V235
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, V167, 0x1]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]

================================

Block 0x2ef
[0x2ef:0x2f4]
---
Predecessors: [0x2de]
Successors: [0x2f8]
---
0x2ef PUSH1 0x0
0x2f1 PUSH2 0x2f8
0x2f4 JUMP
---
0x2ef: V237 = 0x0
0x2f1: V238 = 0x2f8
0x2f4: JUMP 0x2f8
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x0]

================================

Block 0x2f5
[0x2f5:0x2f7]
---
Predecessors: [0x2de]
Successors: [0x2f8]
---
0x2f5 JUMPDEST
0x2f6 PUSH1 0x1
---
0x2f5: JUMPDEST 
0x2f6: V239 = 0x1
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, 0x1]

================================

Block 0x2f8
[0x2f8:0x31d]
---
Predecessors: [0x2ef, 0x2f5]
Successors: [0x31e]
---
0x2f8 JUMPDEST
0x2f9 ADD
0x2fa ADD
0x2fb ADD
0x2fc SWAP2
0x2fd POP
0x2fe DUP2
0x2ff PUSH1 0xff
0x301 AND
0x302 CALLVALUE
0x303 PUSH1 0x64
0x305 MUL
0x306 MUL
0x307 SWAP1
0x308 POP
0x309 DUP1
0x30a DUP5
0x30b ADD
0x30c SWAP4
0x30d POP
0x30e DUP1
0x30f PUSH1 0x5
0x311 PUSH1 0x0
0x313 DUP3
0x314 DUP3
0x315 SLOAD
0x316 ADD
0x317 SWAP3
0x318 POP
0x319 POP
0x31a DUP2
0x31b SWAP1
0x31c SSTORE
0x31d POP
---
0x2f8: JUMPDEST 
0x2f9: V240 = ADD {0x0, 0x1} {0x0, 0x1}
0x2fa: V241 = ADD V240 {0x0, 0x1}
0x2fb: V242 = ADD V241 {0x0, 0x1}
0x2ff: V243 = 0xff
0x301: V244 = AND 0xff V242
0x302: V245 = CALLVALUE
0x303: V246 = 0x64
0x305: V247 = MUL 0x64 V245
0x306: V248 = MUL V247 V244
0x30b: V249 = ADD V124 V248
0x30f: V250 = 0x5
0x311: V251 = 0x0
0x315: V252 = S[0x5]
0x316: V253 = ADD V252 V248
0x31c: S[0x5] = V253
---
Entry stack: [V12, 0x375, V124, V167, 0x0, 0x0, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}, {0x0, 0x1}]
Stack pops: 8
Stack additions: [V249, S6, V242, V248]
Exit stack: [V12, 0x375, V249, V167, V242, V248]

================================

Block 0x31e
[0x31e:0x31e]
---
Predecessors: [0x150, 0x1ec, 0x2f8]
Successors: [0x31f]
---
0x31e JUMPDEST
---
0x31e: JUMPDEST 
---
Entry stack: [V12, 0x375, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375, S3, S2, S1, S0]

================================

Block 0x31f
[0x31f:0x36e]
---
Predecessors: [0x31e]
Successors: [0x36f]
---
0x31f JUMPDEST
0x320 PUSH1 0x6
0x322 DUP1
0x323 SLOAD
0x324 DUP6
0x325 ADD
0x326 SWAP1
0x327 SSTORE
0x328 PUSH1 0x1
0x32a PUSH1 0xa0
0x32c PUSH1 0x2
0x32e EXP
0x32f SUB
0x330 CALLER
0x331 DUP2
0x332 AND
0x333 PUSH1 0x0
0x335 DUP2
0x336 DUP2
0x337 MSTORE
0x338 PUSH1 0x2
0x33a PUSH1 0x20
0x33c MSTORE
0x33d PUSH1 0x40
0x33f SWAP1
0x340 DUP2
0x341 SWAP1
0x342 SHA3
0x343 DUP1
0x344 SLOAD
0x345 DUP9
0x346 ADD
0x347 SWAP1
0x348 SSTORE
0x349 SWAP1
0x34a SWAP2
0x34b ADDRESS
0x34c AND
0x34d SWAP1
0x34e PUSH1 0x0
0x350 DUP1
0x351 MLOAD
0x352 PUSH1 0x20
0x354 PUSH2 0xde0
0x357 DUP4
0x358 CODECOPY
0x359 DUP2
0x35a MLOAD
0x35b SWAP2
0x35c MSTORE
0x35d SWAP1
0x35e DUP8
0x35f SWAP1
0x360 MLOAD
0x361 SWAP1
0x362 DUP2
0x363 MSTORE
0x364 PUSH1 0x20
0x366 ADD
0x367 PUSH1 0x40
0x369 MLOAD
0x36a DUP1
0x36b SWAP2
0x36c SUB
0x36d SWAP1
0x36e LOG3
---
0x31f: JUMPDEST 
0x320: V254 = 0x6
0x323: V255 = S[0x6]
0x325: V256 = ADD S3 V255
0x327: S[0x6] = V256
0x328: V257 = 0x1
0x32a: V258 = 0xa0
0x32c: V259 = 0x2
0x32e: V260 = EXP 0x2 0xa0
0x32f: V261 = SUB 0x10000000000000000000000000000000000000000 0x1
0x330: V262 = CALLER
0x332: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x333: V264 = 0x0
0x337: M[0x0] = V263
0x338: V265 = 0x2
0x33a: V266 = 0x20
0x33c: M[0x20] = 0x2
0x33d: V267 = 0x40
0x342: V268 = SHA3 0x0 0x40
0x344: V269 = S[V268]
0x346: V270 = ADD S3 V269
0x348: S[V268] = V270
0x34b: V271 = ADDRESS
0x34c: V272 = AND V271 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V273 = 0x0
0x351: V274 = M[0x0]
0x352: V275 = 0x20
0x354: V276 = 0xde0
0x358: CODECOPY 0x0 0xde0 0x20
0x35a: V277 = M[0x0]
0x35c: M[0x0] = V274
0x360: V278 = M[0x40]
0x363: M[V278] = S3
0x364: V279 = 0x20
0x366: V280 = ADD 0x20 V278
0x367: V281 = 0x40
0x369: V282 = M[0x40]
0x36c: V283 = SUB V280 V282
0x36e: LOG V282 V283 V277 V272 V263
---
Entry stack: [V12, 0x375, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x375, S3, S2, S1, S0]

================================

Block 0x36f
[0x36f:0x374]
---
Predecessors: [0x118, 0x31f]
Successors: [0x375]
---
0x36f JUMPDEST
0x370 POP
0x371 POP
0x372 POP
0x373 POP
0x374 JUMP
---
0x36f: JUMPDEST 
0x374: JUMP 0x375
---
Entry stack: [V12, 0x375, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x375
[0x375:0x376]
---
Predecessors: [0x36f, 0x9c6, 0xa6d, 0xad1, 0xdca]
Successors: []
---
0x375 JUMPDEST
0x376 STOP
---
0x375: JUMPDEST 
0x376: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x377
[0x377:0x37d]
---
Predecessors: [0xb]
Successors: [0x37e, 0x382]
---
0x377 JUMPDEST
0x378 CALLVALUE
0x379 ISZERO
0x37a PUSH2 0x382
0x37d JUMPI
---
0x377: JUMPDEST 
0x378: V284 = CALLVALUE
0x379: V285 = ISZERO V284
0x37a: V286 = 0x382
0x37d: JUMPI 0x382 V285
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37e
[0x37e:0x381]
---
Predecessors: [0x377]
Successors: []
---
0x37e PUSH1 0x0
0x380 DUP1
0x381 REVERT
---
0x37e: V287 = 0x0
0x381: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x382
[0x382:0x389]
---
Predecessors: [0x377]
Successors: [0x76c]
---
0x382 JUMPDEST
0x383 PUSH2 0x38a
0x386 PUSH2 0x76c
0x389 JUMP
---
0x382: JUMPDEST 
0x383: V288 = 0x38a
0x386: V289 = 0x76c
0x389: JUMP 0x76c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x38a]
Exit stack: [V12, 0x38a]

================================

Block 0x38a
[0x38a:0x3ad]
---
Predecessors: [0x7ab, 0xb12]
Successors: [0x3ae]
---
0x38a JUMPDEST
0x38b PUSH1 0x40
0x38d MLOAD
0x38e PUSH1 0x20
0x390 DUP1
0x391 DUP3
0x392 MSTORE
0x393 DUP2
0x394 SWAP1
0x395 DUP2
0x396 ADD
0x397 DUP4
0x398 DUP2
0x399 DUP2
0x39a MLOAD
0x39b DUP2
0x39c MSTORE
0x39d PUSH1 0x20
0x39f ADD
0x3a0 SWAP2
0x3a1 POP
0x3a2 DUP1
0x3a3 MLOAD
0x3a4 SWAP1
0x3a5 PUSH1 0x20
0x3a7 ADD
0x3a8 SWAP1
0x3a9 DUP1
0x3aa DUP4
0x3ab DUP4
0x3ac PUSH1 0x0
---
0x38a: JUMPDEST 
0x38b: V290 = 0x40
0x38d: V291 = M[0x40]
0x38e: V292 = 0x20
0x392: M[V291] = 0x20
0x396: V293 = ADD V291 0x20
0x39a: V294 = M[S0]
0x39c: M[V293] = V294
0x39d: V295 = 0x20
0x39f: V296 = ADD 0x20 V293
0x3a3: V297 = M[S0]
0x3a5: V298 = 0x20
0x3a7: V299 = ADD 0x20 S0
0x3ac: V300 = 0x0
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: [S0, V291, V291, V296, V299, V297, V297, V296, V299, 0x0]
Exit stack: [V12, S0, V291, V291, V296, V299, V297, V297, V296, V299, 0x0]

================================

Block 0x3ae
[0x3ae:0x3b6]
---
Predecessors: [0x38a, 0x3bf, 0x5dd]
Successors: [0x3b7, 0x3c7]
---
0x3ae JUMPDEST
0x3af DUP4
0x3b0 DUP2
0x3b1 LT
0x3b2 ISZERO
0x3b3 PUSH2 0x3c7
0x3b6 JUMPI
---
0x3ae: JUMPDEST 
0x3b1: V301 = LT S0 S3
0x3b2: V302 = ISZERO V301
0x3b3: V303 = 0x3c7
0x3b6: JUMPI 0x3c7 V302
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x3b7
[0x3b7:0x3be]
---
Predecessors: [0x3ae]
Successors: [0x3bf]
---
0x3b7 DUP1
0x3b8 DUP3
0x3b9 ADD
0x3ba MLOAD
0x3bb DUP2
0x3bc DUP5
0x3bd ADD
0x3be MSTORE
---
0x3b9: V304 = ADD S1 S0
0x3ba: V305 = M[V304]
0x3bd: V306 = ADD S2 S0
0x3be: M[V306] = V305
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x3bf
[0x3bf:0x3c6]
---
Predecessors: [0x3b7]
Successors: [0x3ae]
---
0x3bf JUMPDEST
0x3c0 PUSH1 0x20
0x3c2 ADD
0x3c3 PUSH2 0x3ae
0x3c6 JUMP
---
0x3bf: JUMPDEST 
0x3c0: V307 = 0x20
0x3c2: V308 = ADD 0x20 S0
0x3c3: V309 = 0x3ae
0x3c6: JUMP 0x3ae
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V308]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, V308]

================================

Block 0x3c7
[0x3c7:0x3da]
---
Predecessors: [0x3ae, 0x5cc]
Successors: [0x3db, 0x3f4]
---
0x3c7 JUMPDEST
0x3c8 POP
0x3c9 POP
0x3ca POP
0x3cb POP
0x3cc SWAP1
0x3cd POP
0x3ce SWAP1
0x3cf DUP2
0x3d0 ADD
0x3d1 SWAP1
0x3d2 PUSH1 0x1f
0x3d4 AND
0x3d5 DUP1
0x3d6 ISZERO
0x3d7 PUSH2 0x3f4
0x3da JUMPI
---
0x3c7: JUMPDEST 
0x3d0: V310 = ADD S4 S6
0x3d2: V311 = 0x1f
0x3d4: V312 = AND 0x1f S4
0x3d6: V313 = ISZERO V312
0x3d7: V314 = 0x3f4
0x3da: JUMPI 0x3f4 V313
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V310, V312]
Exit stack: [V12, S9, S8, S7, V310, V312]

================================

Block 0x3db
[0x3db:0x3f3]
---
Predecessors: [0x3c7]
Successors: [0x3f4]
---
0x3db DUP1
0x3dc DUP3
0x3dd SUB
0x3de DUP1
0x3df MLOAD
0x3e0 PUSH1 0x1
0x3e2 DUP4
0x3e3 PUSH1 0x20
0x3e5 SUB
0x3e6 PUSH2 0x100
0x3e9 EXP
0x3ea SUB
0x3eb NOT
0x3ec AND
0x3ed DUP2
0x3ee MSTORE
0x3ef PUSH1 0x20
0x3f1 ADD
0x3f2 SWAP2
0x3f3 POP
---
0x3dd: V315 = SUB V310 V312
0x3df: V316 = M[V315]
0x3e0: V317 = 0x1
0x3e3: V318 = 0x20
0x3e5: V319 = SUB 0x20 V312
0x3e6: V320 = 0x100
0x3e9: V321 = EXP 0x100 V319
0x3ea: V322 = SUB V321 0x1
0x3eb: V323 = NOT V322
0x3ec: V324 = AND V323 V316
0x3ee: M[V315] = V324
0x3ef: V325 = 0x20
0x3f1: V326 = ADD 0x20 V315
---
Entry stack: [V12, S4, S3, S2, V310, V312]
Stack pops: 2
Stack additions: [V326, S0]
Exit stack: [V12, S4, S3, S2, V326, V312]

================================

Block 0x3f4
[0x3f4:0x401]
---
Predecessors: [0x3c7, 0x3db, 0x5e5]
Successors: []
---
0x3f4 JUMPDEST
0x3f5 POP
0x3f6 SWAP3
0x3f7 POP
0x3f8 POP
0x3f9 POP
0x3fa PUSH1 0x40
0x3fc MLOAD
0x3fd DUP1
0x3fe SWAP2
0x3ff SUB
0x400 SWAP1
0x401 RETURN
---
0x3f4: JUMPDEST 
0x3fa: V327 = 0x40
0x3fc: V328 = M[0x40]
0x3ff: V329 = SUB S1 V328
0x401: RETURN V328 V329
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x402
[0x402:0x408]
---
Predecessors: [0x25]
Successors: [0x409, 0x40d]
---
0x402 JUMPDEST
0x403 CALLVALUE
0x404 ISZERO
0x405 PUSH2 0x40d
0x408 JUMPI
---
0x402: JUMPDEST 
0x403: V330 = CALLVALUE
0x404: V331 = ISZERO V330
0x405: V332 = 0x40d
0x408: JUMPI 0x40d V331
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x409
[0x409:0x40c]
---
Predecessors: [0x402]
Successors: []
---
0x409 PUSH1 0x0
0x40b DUP1
0x40c REVERT
---
0x409: V333 = 0x0
0x40c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x40d
[0x40d:0x423]
---
Predecessors: [0x402]
Successors: [0x7ae]
---
0x40d JUMPDEST
0x40e PUSH2 0x424
0x411 PUSH1 0x1
0x413 PUSH1 0xa0
0x415 PUSH1 0x2
0x417 EXP
0x418 SUB
0x419 PUSH1 0x4
0x41b CALLDATALOAD
0x41c AND
0x41d PUSH1 0x24
0x41f CALLDATALOAD
0x420 PUSH2 0x7ae
0x423 JUMP
---
0x40d: JUMPDEST 
0x40e: V334 = 0x424
0x411: V335 = 0x1
0x413: V336 = 0xa0
0x415: V337 = 0x2
0x417: V338 = EXP 0x2 0xa0
0x418: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x419: V340 = 0x4
0x41b: V341 = CALLDATALOAD 0x4
0x41c: V342 = AND V341 0xffffffffffffffffffffffffffffffffffffffff
0x41d: V343 = 0x24
0x41f: V344 = CALLDATALOAD 0x24
0x420: V345 = 0x7ae
0x423: JUMP 0x7ae
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x424, V342, V344]
Exit stack: [V12, 0x424, V342, V344]

================================

Block 0x424
[0x424:0x437]
---
Predecessors: [0x854, 0x97a, 0xbe0, 0xc17, 0xd7e]
Successors: []
---
0x424 JUMPDEST
0x425 PUSH1 0x40
0x427 MLOAD
0x428 SWAP1
0x429 ISZERO
0x42a ISZERO
0x42b DUP2
0x42c MSTORE
0x42d PUSH1 0x20
0x42f ADD
0x430 PUSH1 0x40
0x432 MLOAD
0x433 DUP1
0x434 SWAP2
0x435 SUB
0x436 SWAP1
0x437 RETURN
---
0x424: JUMPDEST 
0x425: V346 = 0x40
0x427: V347 = M[0x40]
0x429: V348 = ISZERO S0
0x42a: V349 = ISZERO V348
0x42c: M[V347] = V349
0x42d: V350 = 0x20
0x42f: V351 = ADD 0x20 V347
0x430: V352 = 0x40
0x432: V353 = M[0x40]
0x435: V354 = SUB V351 V353
0x437: RETURN V353 V354
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x438
[0x438:0x43e]
---
Predecessors: [0x30]
Successors: [0x43f, 0x443]
---
0x438 JUMPDEST
0x439 CALLVALUE
0x43a ISZERO
0x43b PUSH2 0x443
0x43e JUMPI
---
0x438: JUMPDEST 
0x439: V355 = CALLVALUE
0x43a: V356 = ISZERO V355
0x43b: V357 = 0x443
0x43e: JUMPI 0x443 V356
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x43f
[0x43f:0x442]
---
Predecessors: [0x438]
Successors: []
---
0x43f PUSH1 0x0
0x441 DUP1
0x442 REVERT
---
0x43f: V358 = 0x0
0x442: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x443
[0x443:0x44a]
---
Predecessors: [0x438]
Successors: [0x85a]
---
0x443 JUMPDEST
0x444 PUSH2 0x44b
0x447 PUSH2 0x85a
0x44a JUMP
---
0x443: JUMPDEST 
0x444: V359 = 0x44b
0x447: V360 = 0x85a
0x44a: JUMP 0x85a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x44b]
Exit stack: [V12, 0x44b]

================================

Block 0x44b
[0x44b:0x45c]
---
Predecessors: [0x85a, 0x860, 0x9e2, 0xb15, 0xc5f]
Successors: []
---
0x44b JUMPDEST
0x44c PUSH1 0x40
0x44e MLOAD
0x44f SWAP1
0x450 DUP2
0x451 MSTORE
0x452 PUSH1 0x20
0x454 ADD
0x455 PUSH1 0x40
0x457 MLOAD
0x458 DUP1
0x459 SWAP2
0x45a SUB
0x45b SWAP1
0x45c RETURN
---
0x44b: JUMPDEST 
0x44c: V361 = 0x40
0x44e: V362 = M[0x40]
0x451: M[V362] = S0
0x452: V363 = 0x20
0x454: V364 = ADD 0x20 V362
0x455: V365 = 0x40
0x457: V366 = M[0x40]
0x45a: V367 = SUB V364 V366
0x45c: RETURN V366 V367
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x45d
[0x45d:0x463]
---
Predecessors: [0x3b]
Successors: [0x464, 0x468]
---
0x45d JUMPDEST
0x45e CALLVALUE
0x45f ISZERO
0x460 PUSH2 0x468
0x463 JUMPI
---
0x45d: JUMPDEST 
0x45e: V368 = CALLVALUE
0x45f: V369 = ISZERO V368
0x460: V370 = 0x468
0x463: JUMPI 0x468 V369
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x464
[0x464:0x467]
---
Predecessors: [0x45d]
Successors: []
---
0x464 PUSH1 0x0
0x466 DUP1
0x467 REVERT
---
0x464: V371 = 0x0
0x467: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x468
[0x468:0x46f]
---
Predecessors: [0x45d]
Successors: [0x860]
---
0x468 JUMPDEST
0x469 PUSH2 0x44b
0x46c PUSH2 0x860
0x46f JUMP
---
0x468: JUMPDEST 
0x469: V372 = 0x44b
0x46c: V373 = 0x860
0x46f: JUMP 0x860
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x44b]
Exit stack: [V12, 0x44b]

================================

Block 0x470
[0x470:0x481]
---
Predecessors: []
Successors: []
---
0x470 JUMPDEST
0x471 PUSH1 0x40
0x473 MLOAD
0x474 SWAP1
0x475 DUP2
0x476 MSTORE
0x477 PUSH1 0x20
0x479 ADD
0x47a PUSH1 0x40
0x47c MLOAD
0x47d DUP1
0x47e SWAP2
0x47f SUB
0x480 SWAP1
0x481 RETURN
---
0x470: JUMPDEST 
0x471: V374 = 0x40
0x473: V375 = M[0x40]
0x476: M[V375] = S0
0x477: V376 = 0x20
0x479: V377 = ADD 0x20 V375
0x47a: V378 = 0x40
0x47c: V379 = M[0x40]
0x47f: V380 = SUB V377 V379
0x481: RETURN V379 V380
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x482
[0x482:0x488]
---
Predecessors: [0x46]
Successors: [0x489, 0x48d]
---
0x482 JUMPDEST
0x483 CALLVALUE
0x484 ISZERO
0x485 PUSH2 0x48d
0x488 JUMPI
---
0x482: JUMPDEST 
0x483: V381 = CALLVALUE
0x484: V382 = ISZERO V381
0x485: V383 = 0x48d
0x488: JUMPI 0x48d V382
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x489
[0x489:0x48c]
---
Predecessors: [0x482]
Successors: []
---
0x489 PUSH1 0x0
0x48b DUP1
0x48c REVERT
---
0x489: V384 = 0x0
0x48c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x48d
[0x48d:0x4a9]
---
Predecessors: [0x482]
Successors: [0x866]
---
0x48d JUMPDEST
0x48e PUSH2 0x424
0x491 PUSH1 0x1
0x493 PUSH1 0xa0
0x495 PUSH1 0x2
0x497 EXP
0x498 SUB
0x499 PUSH1 0x4
0x49b CALLDATALOAD
0x49c DUP2
0x49d AND
0x49e SWAP1
0x49f PUSH1 0x24
0x4a1 CALLDATALOAD
0x4a2 AND
0x4a3 PUSH1 0x44
0x4a5 CALLDATALOAD
0x4a6 PUSH2 0x866
0x4a9 JUMP
---
0x48d: JUMPDEST 
0x48e: V385 = 0x424
0x491: V386 = 0x1
0x493: V387 = 0xa0
0x495: V388 = 0x2
0x497: V389 = EXP 0x2 0xa0
0x498: V390 = SUB 0x10000000000000000000000000000000000000000 0x1
0x499: V391 = 0x4
0x49b: V392 = CALLDATALOAD 0x4
0x49d: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V392
0x49f: V394 = 0x24
0x4a1: V395 = CALLDATALOAD 0x24
0x4a2: V396 = AND V395 0xffffffffffffffffffffffffffffffffffffffff
0x4a3: V397 = 0x44
0x4a5: V398 = CALLDATALOAD 0x44
0x4a6: V399 = 0x866
0x4a9: JUMP 0x866
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x424, V393, V396, V398]
Exit stack: [V12, 0x424, V393, V396, V398]

================================

Block 0x4aa
[0x4aa:0x4bd]
---
Predecessors: []
Successors: []
---
0x4aa JUMPDEST
0x4ab PUSH1 0x40
0x4ad MLOAD
0x4ae SWAP1
0x4af ISZERO
0x4b0 ISZERO
0x4b1 DUP2
0x4b2 MSTORE
0x4b3 PUSH1 0x20
0x4b5 ADD
0x4b6 PUSH1 0x40
0x4b8 MLOAD
0x4b9 DUP1
0x4ba SWAP2
0x4bb SUB
0x4bc SWAP1
0x4bd RETURN
---
0x4aa: JUMPDEST 
0x4ab: V400 = 0x40
0x4ad: V401 = M[0x40]
0x4af: V402 = ISZERO S0
0x4b0: V403 = ISZERO V402
0x4b2: M[V401] = V403
0x4b3: V404 = 0x20
0x4b5: V405 = ADD 0x20 V401
0x4b6: V406 = 0x40
0x4b8: V407 = M[0x40]
0x4bb: V408 = SUB V405 V407
0x4bd: RETURN V407 V408
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4be
[0x4be:0x4c4]
---
Predecessors: [0x51]
Successors: [0x4c5, 0x4c9]
---
0x4be JUMPDEST
0x4bf CALLVALUE
0x4c0 ISZERO
0x4c1 PUSH2 0x4c9
0x4c4 JUMPI
---
0x4be: JUMPDEST 
0x4bf: V409 = CALLVALUE
0x4c0: V410 = ISZERO V409
0x4c1: V411 = 0x4c9
0x4c4: JUMPI 0x4c9 V410
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c5
[0x4c5:0x4c8]
---
Predecessors: [0x4be]
Successors: []
---
0x4c5 PUSH1 0x0
0x4c7 DUP1
0x4c8 REVERT
---
0x4c5: V412 = 0x0
0x4c8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c9
[0x4c9:0x4d0]
---
Predecessors: [0x4be]
Successors: [0x986]
---
0x4c9 JUMPDEST
0x4ca PUSH2 0x4d1
0x4cd PUSH2 0x986
0x4d0 JUMP
---
0x4c9: JUMPDEST 
0x4ca: V413 = 0x4d1
0x4cd: V414 = 0x986
0x4d0: JUMP 0x986
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4d1]
Exit stack: [V12, 0x4d1]

================================

Block 0x4d1
[0x4d1:0x4e6]
---
Predecessors: [0x989]
Successors: []
---
0x4d1 JUMPDEST
0x4d2 PUSH1 0x40
0x4d4 MLOAD
0x4d5 PUSH1 0xff
0x4d7 SWAP1
0x4d8 SWAP2
0x4d9 AND
0x4da DUP2
0x4db MSTORE
0x4dc PUSH1 0x20
0x4de ADD
0x4df PUSH1 0x40
0x4e1 MLOAD
0x4e2 DUP1
0x4e3 SWAP2
0x4e4 SUB
0x4e5 SWAP1
0x4e6 RETURN
---
0x4d1: JUMPDEST 
0x4d2: V415 = 0x40
0x4d4: V416 = M[0x40]
0x4d5: V417 = 0xff
0x4d9: V418 = AND 0x5 0xff
0x4db: M[V416] = 0x5
0x4dc: V419 = 0x20
0x4de: V420 = ADD 0x20 V416
0x4df: V421 = 0x40
0x4e1: V422 = M[0x40]
0x4e4: V423 = SUB V420 V422
0x4e6: RETURN V422 V423
---
Entry stack: [V12, 0x5]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x4e7
[0x4e7:0x4ed]
---
Predecessors: [0x5c]
Successors: [0x4ee, 0x4f2]
---
0x4e7 JUMPDEST
0x4e8 CALLVALUE
0x4e9 ISZERO
0x4ea PUSH2 0x4f2
0x4ed JUMPI
---
0x4e7: JUMPDEST 
0x4e8: V424 = CALLVALUE
0x4e9: V425 = ISZERO V424
0x4ea: V426 = 0x4f2
0x4ed: JUMPI 0x4f2 V425
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ee
[0x4ee:0x4f1]
---
Predecessors: [0x4e7]
Successors: []
---
0x4ee PUSH1 0x0
0x4f0 DUP1
0x4f1 REVERT
---
0x4ee: V427 = 0x0
0x4f1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4f2
[0x4f2:0x4f9]
---
Predecessors: [0x4e7]
Successors: [0x98c]
---
0x4f2 JUMPDEST
0x4f3 PUSH2 0x375
0x4f6 PUSH2 0x98c
0x4f9 JUMP
---
0x4f2: JUMPDEST 
0x4f3: V428 = 0x375
0x4f6: V429 = 0x98c
0x4f9: JUMP 0x98c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x375]
Exit stack: [V12, 0x375]

================================

Block 0x4fa
[0x4fa:0x4fb]
---
Predecessors: []
Successors: []
---
0x4fa JUMPDEST
0x4fb STOP
---
0x4fa: JUMPDEST 
0x4fb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4fc
[0x4fc:0x502]
---
Predecessors: [0x67]
Successors: [0x503, 0x507]
---
0x4fc JUMPDEST
0x4fd CALLVALUE
0x4fe ISZERO
0x4ff PUSH2 0x507
0x502 JUMPI
---
0x4fc: JUMPDEST 
0x4fd: V430 = CALLVALUE
0x4fe: V431 = ISZERO V430
0x4ff: V432 = 0x507
0x502: JUMPI 0x507 V431
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x503
[0x503:0x506]
---
Predecessors: [0x4fc]
Successors: []
---
0x503 PUSH1 0x0
0x505 DUP1
0x506 REVERT
---
0x503: V433 = 0x0
0x506: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x507
[0x507:0x51a]
---
Predecessors: [0x4fc]
Successors: [0x9c8]
---
0x507 JUMPDEST
0x508 PUSH2 0x44b
0x50b PUSH1 0x1
0x50d PUSH1 0xa0
0x50f PUSH1 0x2
0x511 EXP
0x512 SUB
0x513 PUSH1 0x4
0x515 CALLDATALOAD
0x516 AND
0x517 PUSH2 0x9c8
0x51a JUMP
---
0x507: JUMPDEST 
0x508: V434 = 0x44b
0x50b: V435 = 0x1
0x50d: V436 = 0xa0
0x50f: V437 = 0x2
0x511: V438 = EXP 0x2 0xa0
0x512: V439 = SUB 0x10000000000000000000000000000000000000000 0x1
0x513: V440 = 0x4
0x515: V441 = CALLDATALOAD 0x4
0x516: V442 = AND V441 0xffffffffffffffffffffffffffffffffffffffff
0x517: V443 = 0x9c8
0x51a: JUMP 0x9c8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x44b, V442]
Exit stack: [V12, 0x44b, V442]

================================

Block 0x51b
[0x51b:0x52c]
---
Predecessors: []
Successors: []
---
0x51b JUMPDEST
0x51c PUSH1 0x40
0x51e MLOAD
0x51f SWAP1
0x520 DUP2
0x521 MSTORE
0x522 PUSH1 0x20
0x524 ADD
0x525 PUSH1 0x40
0x527 MLOAD
0x528 DUP1
0x529 SWAP2
0x52a SUB
0x52b SWAP1
0x52c RETURN
---
0x51b: JUMPDEST 
0x51c: V444 = 0x40
0x51e: V445 = M[0x40]
0x521: M[V445] = S0
0x522: V446 = 0x20
0x524: V447 = ADD 0x20 V445
0x525: V448 = 0x40
0x527: V449 = M[0x40]
0x52a: V450 = SUB V447 V449
0x52c: RETURN V449 V450
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x52d
[0x52d:0x533]
---
Predecessors: [0x72]
Successors: [0x534, 0x538]
---
0x52d JUMPDEST
0x52e CALLVALUE
0x52f ISZERO
0x530 PUSH2 0x538
0x533 JUMPI
---
0x52d: JUMPDEST 
0x52e: V451 = CALLVALUE
0x52f: V452 = ISZERO V451
0x530: V453 = 0x538
0x533: JUMPI 0x538 V452
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x534
[0x534:0x537]
---
Predecessors: [0x52d]
Successors: []
---
0x534 PUSH1 0x0
0x536 DUP1
0x537 REVERT
---
0x534: V454 = 0x0
0x537: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x538
[0x538:0x54e]
---
Predecessors: [0x52d]
Successors: [0x9e7]
---
0x538 JUMPDEST
0x539 PUSH2 0x375
0x53c PUSH1 0x1
0x53e PUSH1 0xa0
0x540 PUSH1 0x2
0x542 EXP
0x543 SUB
0x544 PUSH1 0x4
0x546 CALLDATALOAD
0x547 AND
0x548 PUSH1 0x24
0x54a CALLDATALOAD
0x54b PUSH2 0x9e7
0x54e JUMP
---
0x538: JUMPDEST 
0x539: V455 = 0x375
0x53c: V456 = 0x1
0x53e: V457 = 0xa0
0x540: V458 = 0x2
0x542: V459 = EXP 0x2 0xa0
0x543: V460 = SUB 0x10000000000000000000000000000000000000000 0x1
0x544: V461 = 0x4
0x546: V462 = CALLDATALOAD 0x4
0x547: V463 = AND V462 0xffffffffffffffffffffffffffffffffffffffff
0x548: V464 = 0x24
0x54a: V465 = CALLDATALOAD 0x24
0x54b: V466 = 0x9e7
0x54e: JUMP 0x9e7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x375, V463, V465]
Exit stack: [V12, 0x375, V463, V465]

================================

Block 0x54f
[0x54f:0x550]
---
Predecessors: []
Successors: []
---
0x54f JUMPDEST
0x550 STOP
---
0x54f: JUMPDEST 
0x550: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x551
[0x551:0x557]
---
Predecessors: [0x7d]
Successors: [0x558, 0x55c]
---
0x551 JUMPDEST
0x552 CALLVALUE
0x553 ISZERO
0x554 PUSH2 0x55c
0x557 JUMPI
---
0x551: JUMPDEST 
0x552: V467 = CALLVALUE
0x553: V468 = ISZERO V467
0x554: V469 = 0x55c
0x557: JUMPI 0x55c V468
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x558
[0x558:0x55b]
---
Predecessors: [0x551]
Successors: []
---
0x558 PUSH1 0x0
0x55a DUP1
0x55b REVERT
---
0x558: V470 = 0x0
0x55b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x55c
[0x55c:0x563]
---
Predecessors: [0x551]
Successors: [0xa71]
---
0x55c JUMPDEST
0x55d PUSH2 0x564
0x560 PUSH2 0xa71
0x563 JUMP
---
0x55c: JUMPDEST 
0x55d: V471 = 0x564
0x560: V472 = 0xa71
0x563: JUMP 0xa71
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x564]
Exit stack: [V12, 0x564]

================================

Block 0x564
[0x564:0x57f]
---
Predecessors: [0xa71]
Successors: []
---
0x564 JUMPDEST
0x565 PUSH1 0x40
0x567 MLOAD
0x568 PUSH1 0x1
0x56a PUSH1 0xa0
0x56c PUSH1 0x2
0x56e EXP
0x56f SUB
0x570 SWAP1
0x571 SWAP2
0x572 AND
0x573 DUP2
0x574 MSTORE
0x575 PUSH1 0x20
0x577 ADD
0x578 PUSH1 0x40
0x57a MLOAD
0x57b DUP1
0x57c SWAP2
0x57d SUB
0x57e SWAP1
0x57f RETURN
---
0x564: JUMPDEST 
0x565: V473 = 0x40
0x567: V474 = M[0x40]
0x568: V475 = 0x1
0x56a: V476 = 0xa0
0x56c: V477 = 0x2
0x56e: V478 = EXP 0x2 0xa0
0x56f: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x572: V480 = AND V912 0xffffffffffffffffffffffffffffffffffffffff
0x574: M[V474] = V480
0x575: V481 = 0x20
0x577: V482 = ADD 0x20 V474
0x578: V483 = 0x40
0x57a: V484 = M[0x40]
0x57d: V485 = SUB V482 V484
0x57f: RETURN V484 V485
---
Entry stack: [V12, 0x564, V912]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x564]

================================

Block 0x580
[0x580:0x586]
---
Predecessors: [0x88]
Successors: [0x587, 0x58b]
---
0x580 JUMPDEST
0x581 CALLVALUE
0x582 ISZERO
0x583 PUSH2 0x58b
0x586 JUMPI
---
0x580: JUMPDEST 
0x581: V486 = CALLVALUE
0x582: V487 = ISZERO V486
0x583: V488 = 0x58b
0x586: JUMPI 0x58b V487
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x587
[0x587:0x58a]
---
Predecessors: [0x580]
Successors: []
---
0x587 PUSH1 0x0
0x589 DUP1
0x58a REVERT
---
0x587: V489 = 0x0
0x58a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x58b
[0x58b:0x592]
---
Predecessors: [0x580]
Successors: [0xa80]
---
0x58b JUMPDEST
0x58c PUSH2 0x375
0x58f PUSH2 0xa80
0x592 JUMP
---
0x58b: JUMPDEST 
0x58c: V490 = 0x375
0x58f: V491 = 0xa80
0x592: JUMP 0xa80
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x375]
Exit stack: [V12, 0x375]

================================

Block 0x593
[0x593:0x594]
---
Predecessors: []
Successors: []
---
0x593 JUMPDEST
0x594 STOP
---
0x593: JUMPDEST 
0x594: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x595
[0x595:0x59b]
---
Predecessors: [0x93]
Successors: [0x59c, 0x5a0]
---
0x595 JUMPDEST
0x596 CALLVALUE
0x597 ISZERO
0x598 PUSH2 0x5a0
0x59b JUMPI
---
0x595: JUMPDEST 
0x596: V492 = CALLVALUE
0x597: V493 = ISZERO V492
0x598: V494 = 0x5a0
0x59b: JUMPI 0x5a0 V493
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x59c
[0x59c:0x59f]
---
Predecessors: [0x595]
Successors: []
---
0x59c PUSH1 0x0
0x59e DUP1
0x59f REVERT
---
0x59c: V495 = 0x0
0x59f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5a0
[0x5a0:0x5a7]
---
Predecessors: [0x595]
Successors: [0xad3]
---
0x5a0 JUMPDEST
0x5a1 PUSH2 0x38a
0x5a4 PUSH2 0xad3
0x5a7 JUMP
---
0x5a0: JUMPDEST 
0x5a1: V496 = 0x38a
0x5a4: V497 = 0xad3
0x5a7: JUMP 0xad3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x38a]
Exit stack: [V12, 0x38a]

================================

Block 0x5a8
[0x5a8:0x5cb]
---
Predecessors: []
Successors: [0x5cc]
---
0x5a8 JUMPDEST
0x5a9 PUSH1 0x40
0x5ab MLOAD
0x5ac PUSH1 0x20
0x5ae DUP1
0x5af DUP3
0x5b0 MSTORE
0x5b1 DUP2
0x5b2 SWAP1
0x5b3 DUP2
0x5b4 ADD
0x5b5 DUP4
0x5b6 DUP2
0x5b7 DUP2
0x5b8 MLOAD
0x5b9 DUP2
0x5ba MSTORE
0x5bb PUSH1 0x20
0x5bd ADD
0x5be SWAP2
0x5bf POP
0x5c0 DUP1
0x5c1 MLOAD
0x5c2 SWAP1
0x5c3 PUSH1 0x20
0x5c5 ADD
0x5c6 SWAP1
0x5c7 DUP1
0x5c8 DUP4
0x5c9 DUP4
0x5ca PUSH1 0x0
---
0x5a8: JUMPDEST 
0x5a9: V498 = 0x40
0x5ab: V499 = M[0x40]
0x5ac: V500 = 0x20
0x5b0: M[V499] = 0x20
0x5b4: V501 = ADD V499 0x20
0x5b8: V502 = M[S0]
0x5ba: M[V501] = V502
0x5bb: V503 = 0x20
0x5bd: V504 = ADD 0x20 V501
0x5c1: V505 = M[S0]
0x5c3: V506 = 0x20
0x5c5: V507 = ADD 0x20 S0
0x5ca: V508 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V499, V499, V504, V507, V505, V505, V504, V507, 0x0]
Exit stack: [S0, V499, V499, V504, V507, V505, V505, V504, V507, 0x0]

================================

Block 0x5cc
[0x5cc:0x5d4]
---
Predecessors: [0x5a8]
Successors: [0x3c7, 0x5d5]
---
0x5cc JUMPDEST
0x5cd DUP4
0x5ce DUP2
0x5cf LT
0x5d0 ISZERO
0x5d1 PUSH2 0x3c7
0x5d4 JUMPI
---
0x5cc: JUMPDEST 
0x5cf: V509 = LT 0x0 V505
0x5d0: V510 = ISZERO V509
0x5d1: V511 = 0x3c7
0x5d4: JUMPI 0x3c7 V510
---
Entry stack: [S9, V499, V499, V504, V507, V505, V505, V504, V507, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V499, V499, V504, V507, V505, V505, V504, V507, 0x0]

================================

Block 0x5d5
[0x5d5:0x5dc]
---
Predecessors: [0x5cc]
Successors: [0x5dd]
---
0x5d5 DUP1
0x5d6 DUP3
0x5d7 ADD
0x5d8 MLOAD
0x5d9 DUP2
0x5da DUP5
0x5db ADD
0x5dc MSTORE
---
0x5d7: V512 = ADD V507 0x0
0x5d8: V513 = M[V512]
0x5db: V514 = ADD V504 0x0
0x5dc: M[V514] = V513
---
Entry stack: [S9, V499, V499, V504, V507, V505, V505, V504, V507, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V499, V499, V504, V507, V505, V505, V504, V507, 0x0]

================================

Block 0x5dd
[0x5dd:0x5e4]
---
Predecessors: [0x5d5]
Successors: [0x3ae]
---
0x5dd JUMPDEST
0x5de PUSH1 0x20
0x5e0 ADD
0x5e1 PUSH2 0x3ae
0x5e4 JUMP
---
0x5dd: JUMPDEST 
0x5de: V515 = 0x20
0x5e0: V516 = ADD 0x20 0x0
0x5e1: V517 = 0x3ae
0x5e4: JUMP 0x3ae
---
Entry stack: [S9, V499, V499, V504, V507, V505, V505, V504, V507, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V499, V499, V504, V507, V505, V505, V504, V507, 0x20]

================================

Block 0x5e5
[0x5e5:0x5f8]
---
Predecessors: []
Successors: [0x3f4, 0x5f9]
---
0x5e5 JUMPDEST
0x5e6 POP
0x5e7 POP
0x5e8 POP
0x5e9 POP
0x5ea SWAP1
0x5eb POP
0x5ec SWAP1
0x5ed DUP2
0x5ee ADD
0x5ef SWAP1
0x5f0 PUSH1 0x1f
0x5f2 AND
0x5f3 DUP1
0x5f4 ISZERO
0x5f5 PUSH2 0x3f4
0x5f8 JUMPI
---
0x5e5: JUMPDEST 
0x5ee: V518 = ADD S4 S6
0x5f0: V519 = 0x1f
0x5f2: V520 = AND 0x1f S4
0x5f4: V521 = ISZERO V520
0x5f5: V522 = 0x3f4
0x5f8: JUMPI 0x3f4 V521
---
Entry stack: []
Stack pops: 7
Stack additions: [V518, V520]
Exit stack: [V518, V520]

================================

Block 0x5f9
[0x5f9:0x611]
---
Predecessors: [0x5e5]
Successors: [0x612]
---
0x5f9 DUP1
0x5fa DUP3
0x5fb SUB
0x5fc DUP1
0x5fd MLOAD
0x5fe PUSH1 0x1
0x600 DUP4
0x601 PUSH1 0x20
0x603 SUB
0x604 PUSH2 0x100
0x607 EXP
0x608 SUB
0x609 NOT
0x60a AND
0x60b DUP2
0x60c MSTORE
0x60d PUSH1 0x20
0x60f ADD
0x610 SWAP2
0x611 POP
---
0x5fb: V523 = SUB V518 V520
0x5fd: V524 = M[V523]
0x5fe: V525 = 0x1
0x601: V526 = 0x20
0x603: V527 = SUB 0x20 V520
0x604: V528 = 0x100
0x607: V529 = EXP 0x100 V527
0x608: V530 = SUB V529 0x1
0x609: V531 = NOT V530
0x60a: V532 = AND V531 V524
0x60c: M[V523] = V532
0x60d: V533 = 0x20
0x60f: V534 = ADD 0x20 V523
---
Entry stack: [V518, V520]
Stack pops: 2
Stack additions: [V534, S0]
Exit stack: [V534, V520]

================================

Block 0x612
[0x612:0x61f]
---
Predecessors: [0x5f9]
Successors: []
---
0x612 JUMPDEST
0x613 POP
0x614 SWAP3
0x615 POP
0x616 POP
0x617 POP
0x618 PUSH1 0x40
0x61a MLOAD
0x61b DUP1
0x61c SWAP2
0x61d SUB
0x61e SWAP1
0x61f RETURN
---
0x612: JUMPDEST 
0x618: V535 = 0x40
0x61a: V536 = M[0x40]
0x61d: V537 = SUB V534 V536
0x61f: RETURN V536 V537
---
Entry stack: [V534, V520]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x620
[0x620:0x626]
---
Predecessors: [0x9e]
Successors: [0x627, 0x62b]
---
0x620 JUMPDEST
0x621 CALLVALUE
0x622 ISZERO
0x623 PUSH2 0x62b
0x626 JUMPI
---
0x620: JUMPDEST 
0x621: V538 = CALLVALUE
0x622: V539 = ISZERO V538
0x623: V540 = 0x62b
0x626: JUMPI 0x62b V539
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x627
[0x627:0x62a]
---
Predecessors: [0x620]
Successors: []
---
0x627 PUSH1 0x0
0x629 DUP1
0x62a REVERT
---
0x627: V541 = 0x0
0x62a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x62b
[0x62b:0x632]
---
Predecessors: [0x620]
Successors: [0xb15]
---
0x62b JUMPDEST
0x62c PUSH2 0x44b
0x62f PUSH2 0xb15
0x632 JUMP
---
0x62b: JUMPDEST 
0x62c: V542 = 0x44b
0x62f: V543 = 0xb15
0x632: JUMP 0xb15
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x44b]
Exit stack: [V12, 0x44b]

================================

Block 0x633
[0x633:0x644]
---
Predecessors: []
Successors: []
---
0x633 JUMPDEST
0x634 PUSH1 0x40
0x636 MLOAD
0x637 SWAP1
0x638 DUP2
0x639 MSTORE
0x63a PUSH1 0x20
0x63c ADD
0x63d PUSH1 0x40
0x63f MLOAD
0x640 DUP1
0x641 SWAP2
0x642 SUB
0x643 SWAP1
0x644 RETURN
---
0x633: JUMPDEST 
0x634: V544 = 0x40
0x636: V545 = M[0x40]
0x639: M[V545] = S0
0x63a: V546 = 0x20
0x63c: V547 = ADD 0x20 V545
0x63d: V548 = 0x40
0x63f: V549 = M[0x40]
0x642: V550 = SUB V547 V549
0x644: RETURN V549 V550
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x645
[0x645:0x64b]
---
Predecessors: [0xa9]
Successors: [0x64c, 0x650]
---
0x645 JUMPDEST
0x646 CALLVALUE
0x647 ISZERO
0x648 PUSH2 0x650
0x64b JUMPI
---
0x645: JUMPDEST 
0x646: V551 = CALLVALUE
0x647: V552 = ISZERO V551
0x648: V553 = 0x650
0x64b: JUMPI 0x650 V552
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x64c
[0x64c:0x64f]
---
Predecessors: [0x645]
Successors: []
---
0x64c PUSH1 0x0
0x64e DUP1
0x64f REVERT
---
0x64c: V554 = 0x0
0x64f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x650
[0x650:0x666]
---
Predecessors: [0x645]
Successors: [0xb1b]
---
0x650 JUMPDEST
0x651 PUSH2 0x424
0x654 PUSH1 0x1
0x656 PUSH1 0xa0
0x658 PUSH1 0x2
0x65a EXP
0x65b SUB
0x65c PUSH1 0x4
0x65e CALLDATALOAD
0x65f AND
0x660 PUSH1 0x24
0x662 CALLDATALOAD
0x663 PUSH2 0xb1b
0x666 JUMP
---
0x650: JUMPDEST 
0x651: V555 = 0x424
0x654: V556 = 0x1
0x656: V557 = 0xa0
0x658: V558 = 0x2
0x65a: V559 = EXP 0x2 0xa0
0x65b: V560 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65c: V561 = 0x4
0x65e: V562 = CALLDATALOAD 0x4
0x65f: V563 = AND V562 0xffffffffffffffffffffffffffffffffffffffff
0x660: V564 = 0x24
0x662: V565 = CALLDATALOAD 0x24
0x663: V566 = 0xb1b
0x666: JUMP 0xb1b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x424, V563, V565]
Exit stack: [V12, 0x424, V563, V565]

================================

Block 0x667
[0x667:0x67a]
---
Predecessors: []
Successors: []
---
0x667 JUMPDEST
0x668 PUSH1 0x40
0x66a MLOAD
0x66b SWAP1
0x66c ISZERO
0x66d ISZERO
0x66e DUP2
0x66f MSTORE
0x670 PUSH1 0x20
0x672 ADD
0x673 PUSH1 0x40
0x675 MLOAD
0x676 DUP1
0x677 SWAP2
0x678 SUB
0x679 SWAP1
0x67a RETURN
---
0x667: JUMPDEST 
0x668: V567 = 0x40
0x66a: V568 = M[0x40]
0x66c: V569 = ISZERO S0
0x66d: V570 = ISZERO V569
0x66f: M[V568] = V570
0x670: V571 = 0x20
0x672: V572 = ADD 0x20 V568
0x673: V573 = 0x40
0x675: V574 = M[0x40]
0x678: V575 = SUB V572 V574
0x67a: RETURN V574 V575
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x67b
[0x67b:0x681]
---
Predecessors: [0xb4]
Successors: [0x682, 0x686]
---
0x67b JUMPDEST
0x67c CALLVALUE
0x67d ISZERO
0x67e PUSH2 0x686
0x681 JUMPI
---
0x67b: JUMPDEST 
0x67c: V576 = CALLVALUE
0x67d: V577 = ISZERO V576
0x67e: V578 = 0x686
0x681: JUMPI 0x686 V577
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x682
[0x682:0x685]
---
Predecessors: [0x67b]
Successors: []
---
0x682 PUSH1 0x0
0x684 DUP1
0x685 REVERT
---
0x682: V579 = 0x0
0x685: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x686
[0x686:0x68d]
---
Predecessors: [0x67b]
Successors: [0xbe9]
---
0x686 JUMPDEST
0x687 PUSH2 0x68e
0x68a PUSH2 0xbe9
0x68d JUMP
---
0x686: JUMPDEST 
0x687: V580 = 0x68e
0x68a: V581 = 0xbe9
0x68d: JUMP 0xbe9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x68e]
Exit stack: [V12, 0x68e]

================================

Block 0x68e
[0x68e:0x6b9]
---
Predecessors: [0xc11]
Successors: []
---
0x68e JUMPDEST
0x68f PUSH1 0x40
0x691 MLOAD
0x692 SWAP4
0x693 DUP5
0x694 MSTORE
0x695 PUSH1 0x20
0x697 DUP5
0x698 ADD
0x699 SWAP3
0x69a SWAP1
0x69b SWAP3
0x69c MSTORE
0x69d PUSH1 0x40
0x69f DUP1
0x6a0 DUP5
0x6a1 ADD
0x6a2 SWAP2
0x6a3 SWAP1
0x6a4 SWAP2
0x6a5 MSTORE
0x6a6 SWAP1
0x6a7 ISZERO
0x6a8 ISZERO
0x6a9 PUSH1 0x60
0x6ab DUP4
0x6ac ADD
0x6ad MSTORE
0x6ae PUSH1 0x80
0x6b0 SWAP1
0x6b1 SWAP2
0x6b2 ADD
0x6b3 SWAP1
0x6b4 MLOAD
0x6b5 DUP1
0x6b6 SWAP2
0x6b7 SUB
0x6b8 SWAP1
0x6b9 RETURN
---
0x68e: JUMPDEST 
0x68f: V582 = 0x40
0x691: V583 = M[0x40]
0x694: M[V583] = V1014
0x695: V584 = 0x20
0x698: V585 = ADD V583 0x20
0x69c: M[V585] = V1016
0x69d: V586 = 0x40
0x6a1: V587 = ADD V583 0x40
0x6a5: M[V587] = V1018
0x6a7: V588 = ISZERO V1024
0x6a8: V589 = ISZERO V588
0x6a9: V590 = 0x60
0x6ac: V591 = ADD V583 0x60
0x6ad: M[V591] = V589
0x6ae: V592 = 0x80
0x6b2: V593 = ADD V583 0x80
0x6b4: V594 = M[0x40]
0x6b7: V595 = SUB V593 V594
0x6b9: RETURN V594 V595
---
Entry stack: [V12, V1014, V1016, V1018, V1024]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x6ba
[0x6ba:0x6c0]
---
Predecessors: [0xbf]
Successors: [0x6c1, 0x6c5]
---
0x6ba JUMPDEST
0x6bb CALLVALUE
0x6bc ISZERO
0x6bd PUSH2 0x6c5
0x6c0 JUMPI
---
0x6ba: JUMPDEST 
0x6bb: V596 = CALLVALUE
0x6bc: V597 = ISZERO V596
0x6bd: V598 = 0x6c5
0x6c0: JUMPI 0x6c5 V597
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6c1
[0x6c1:0x6c4]
---
Predecessors: [0x6ba]
Successors: []
---
0x6c1 PUSH1 0x0
0x6c3 DUP1
0x6c4 REVERT
---
0x6c1: V599 = 0x0
0x6c4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6c5
[0x6c5:0x6cc]
---
Predecessors: [0x6ba]
Successors: [0xc17]
---
0x6c5 JUMPDEST
0x6c6 PUSH2 0x424
0x6c9 PUSH2 0xc17
0x6cc JUMP
---
0x6c5: JUMPDEST 
0x6c6: V600 = 0x424
0x6c9: V601 = 0xc17
0x6cc: JUMP 0xc17
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x424]
Exit stack: [V12, 0x424]

================================

Block 0x6cd
[0x6cd:0x6e0]
---
Predecessors: []
Successors: []
---
0x6cd JUMPDEST
0x6ce PUSH1 0x40
0x6d0 MLOAD
0x6d1 SWAP1
0x6d2 ISZERO
0x6d3 ISZERO
0x6d4 DUP2
0x6d5 MSTORE
0x6d6 PUSH1 0x20
0x6d8 ADD
0x6d9 PUSH1 0x40
0x6db MLOAD
0x6dc DUP1
0x6dd SWAP2
0x6de SUB
0x6df SWAP1
0x6e0 RETURN
---
0x6cd: JUMPDEST 
0x6ce: V602 = 0x40
0x6d0: V603 = M[0x40]
0x6d2: V604 = ISZERO S0
0x6d3: V605 = ISZERO V604
0x6d5: M[V603] = V605
0x6d6: V606 = 0x20
0x6d8: V607 = ADD 0x20 V603
0x6d9: V608 = 0x40
0x6db: V609 = M[0x40]
0x6de: V610 = SUB V607 V609
0x6e0: RETURN V609 V610
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x6e1
[0x6e1:0x6e7]
---
Predecessors: [0xca]
Successors: [0x6e8, 0x6ec]
---
0x6e1 JUMPDEST
0x6e2 CALLVALUE
0x6e3 ISZERO
0x6e4 PUSH2 0x6ec
0x6e7 JUMPI
---
0x6e1: JUMPDEST 
0x6e2: V611 = CALLVALUE
0x6e3: V612 = ISZERO V611
0x6e4: V613 = 0x6ec
0x6e7: JUMPI 0x6ec V612
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6e8
[0x6e8:0x6eb]
---
Predecessors: [0x6e1]
Successors: []
---
0x6e8 PUSH1 0x0
0x6ea DUP1
0x6eb REVERT
---
0x6e8: V614 = 0x0
0x6eb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x6ec
[0x6ec:0x705]
---
Predecessors: [0x6e1]
Successors: [0xc38]
---
0x6ec JUMPDEST
0x6ed PUSH2 0x44b
0x6f0 PUSH1 0x1
0x6f2 PUSH1 0xa0
0x6f4 PUSH1 0x2
0x6f6 EXP
0x6f7 SUB
0x6f8 PUSH1 0x4
0x6fa CALLDATALOAD
0x6fb DUP2
0x6fc AND
0x6fd SWAP1
0x6fe PUSH1 0x24
0x700 CALLDATALOAD
0x701 AND
0x702 PUSH2 0xc38
0x705 JUMP
---
0x6ec: JUMPDEST 
0x6ed: V615 = 0x44b
0x6f0: V616 = 0x1
0x6f2: V617 = 0xa0
0x6f4: V618 = 0x2
0x6f6: V619 = EXP 0x2 0xa0
0x6f7: V620 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f8: V621 = 0x4
0x6fa: V622 = CALLDATALOAD 0x4
0x6fc: V623 = AND 0xffffffffffffffffffffffffffffffffffffffff V622
0x6fe: V624 = 0x24
0x700: V625 = CALLDATALOAD 0x24
0x701: V626 = AND V625 0xffffffffffffffffffffffffffffffffffffffff
0x702: V627 = 0xc38
0x705: JUMP 0xc38
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x44b, V623, V626]
Exit stack: [V12, 0x44b, V623, V626]

================================

Block 0x706
[0x706:0x717]
---
Predecessors: []
Successors: []
---
0x706 JUMPDEST
0x707 PUSH1 0x40
0x709 MLOAD
0x70a SWAP1
0x70b DUP2
0x70c MSTORE
0x70d PUSH1 0x20
0x70f ADD
0x710 PUSH1 0x40
0x712 MLOAD
0x713 DUP1
0x714 SWAP2
0x715 SUB
0x716 SWAP1
0x717 RETURN
---
0x706: JUMPDEST 
0x707: V628 = 0x40
0x709: V629 = M[0x40]
0x70c: M[V629] = S0
0x70d: V630 = 0x20
0x70f: V631 = ADD 0x20 V629
0x710: V632 = 0x40
0x712: V633 = M[0x40]
0x715: V634 = SUB V631 V633
0x717: RETURN V633 V634
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x718
[0x718:0x71e]
---
Predecessors: [0xd5]
Successors: [0x71f, 0x723]
---
0x718 JUMPDEST
0x719 CALLVALUE
0x71a ISZERO
0x71b PUSH2 0x723
0x71e JUMPI
---
0x718: JUMPDEST 
0x719: V635 = CALLVALUE
0x71a: V636 = ISZERO V635
0x71b: V637 = 0x723
0x71e: JUMPI 0x723 V636
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x71f
[0x71f:0x722]
---
Predecessors: [0x718]
Successors: []
---
0x71f PUSH1 0x0
0x721 DUP1
0x722 REVERT
---
0x71f: V638 = 0x0
0x722: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x723
[0x723:0x736]
---
Predecessors: [0x718]
Successors: [0xc65]
---
0x723 JUMPDEST
0x724 PUSH2 0x424
0x727 PUSH1 0x1
0x729 PUSH1 0xa0
0x72b PUSH1 0x2
0x72d EXP
0x72e SUB
0x72f PUSH1 0x4
0x731 CALLDATALOAD
0x732 AND
0x733 PUSH2 0xc65
0x736 JUMP
---
0x723: JUMPDEST 
0x724: V639 = 0x424
0x727: V640 = 0x1
0x729: V641 = 0xa0
0x72b: V642 = 0x2
0x72d: V643 = EXP 0x2 0xa0
0x72e: V644 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72f: V645 = 0x4
0x731: V646 = CALLDATALOAD 0x4
0x732: V647 = AND V646 0xffffffffffffffffffffffffffffffffffffffff
0x733: V648 = 0xc65
0x736: JUMP 0xc65
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x424, V647]
Exit stack: [V12, 0x424, V647]

================================

Block 0x737
[0x737:0x74a]
---
Predecessors: []
Successors: []
---
0x737 JUMPDEST
0x738 PUSH1 0x40
0x73a MLOAD
0x73b SWAP1
0x73c ISZERO
0x73d ISZERO
0x73e DUP2
0x73f MSTORE
0x740 PUSH1 0x20
0x742 ADD
0x743 PUSH1 0x40
0x745 MLOAD
0x746 DUP1
0x747 SWAP2
0x748 SUB
0x749 SWAP1
0x74a RETURN
---
0x737: JUMPDEST 
0x738: V649 = 0x40
0x73a: V650 = M[0x40]
0x73c: V651 = ISZERO S0
0x73d: V652 = ISZERO V651
0x73f: M[V650] = V652
0x740: V653 = 0x20
0x742: V654 = ADD 0x20 V650
0x743: V655 = 0x40
0x745: V656 = M[0x40]
0x748: V657 = SUB V654 V656
0x74a: RETURN V656 V657
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x74b
[0x74b:0x751]
---
Predecessors: [0xe0]
Successors: [0x752, 0x756]
---
0x74b JUMPDEST
0x74c CALLVALUE
0x74d ISZERO
0x74e PUSH2 0x756
0x751 JUMPI
---
0x74b: JUMPDEST 
0x74c: V658 = CALLVALUE
0x74d: V659 = ISZERO V658
0x74e: V660 = 0x756
0x751: JUMPI 0x756 V659
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x752
[0x752:0x755]
---
Predecessors: [0x74b]
Successors: []
---
0x752 PUSH1 0x0
0x754 DUP1
0x755 REVERT
---
0x752: V661 = 0x0
0x755: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x756
[0x756:0x769]
---
Predecessors: [0x74b]
Successors: [0xd85]
---
0x756 JUMPDEST
0x757 PUSH2 0x375
0x75a PUSH1 0x1
0x75c PUSH1 0xa0
0x75e PUSH1 0x2
0x760 EXP
0x761 SUB
0x762 PUSH1 0x4
0x764 CALLDATALOAD
0x765 AND
0x766 PUSH2 0xd85
0x769 JUMP
---
0x756: JUMPDEST 
0x757: V662 = 0x375
0x75a: V663 = 0x1
0x75c: V664 = 0xa0
0x75e: V665 = 0x2
0x760: V666 = EXP 0x2 0xa0
0x761: V667 = SUB 0x10000000000000000000000000000000000000000 0x1
0x762: V668 = 0x4
0x764: V669 = CALLDATALOAD 0x4
0x765: V670 = AND V669 0xffffffffffffffffffffffffffffffffffffffff
0x766: V671 = 0xd85
0x769: JUMP 0xd85
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x375, V670]
Exit stack: [V12, 0x375, V670]

================================

Block 0x76a
[0x76a:0x76b]
---
Predecessors: []
Successors: []
---
0x76a JUMPDEST
0x76b STOP
---
0x76a: JUMPDEST 
0x76b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x76c
[0x76c:0x773]
---
Predecessors: [0x382]
Successors: [0xdcd]
---
0x76c JUMPDEST
0x76d PUSH2 0x774
0x770 PUSH2 0xdcd
0x773 JUMP
---
0x76c: JUMPDEST 
0x76d: V672 = 0x774
0x770: V673 = 0xdcd
0x773: JUMP 0xdcd
---
Entry stack: [V12, 0x38a]
Stack pops: 0
Stack additions: [0x774]
Exit stack: [V12, 0x38a, 0x774]

================================

Block 0x774
[0x774:0x7aa]
---
Predecessors: [0xdcd]
Successors: [0x7ab]
---
0x774 JUMPDEST
0x775 PUSH1 0x40
0x777 DUP1
0x778 MLOAD
0x779 SWAP1
0x77a DUP2
0x77b ADD
0x77c PUSH1 0x40
0x77e MSTORE
0x77f PUSH1 0xa
0x781 DUP2
0x782 MSTORE
0x783 PUSH32 0x50756d7020546f6b656e00000000000000000000000000000000000000000000
0x7a4 PUSH1 0x20
0x7a6 DUP3
0x7a7 ADD
0x7a8 MSTORE
0x7a9 SWAP1
0x7aa POP
---
0x774: JUMPDEST 
0x775: V674 = 0x40
0x778: V675 = M[0x40]
0x77b: V676 = ADD V675 0x40
0x77c: V677 = 0x40
0x77e: M[0x40] = V676
0x77f: V678 = 0xa
0x782: M[V675] = 0xa
0x783: V679 = 0x50756d7020546f6b656e00000000000000000000000000000000000000000000
0x7a4: V680 = 0x20
0x7a7: V681 = ADD V675 0x20
0x7a8: M[V681] = 0x50756d7020546f6b656e00000000000000000000000000000000000000000000
---
Entry stack: [V12, 0x38a, V1194]
Stack pops: 1
Stack additions: [V675]
Exit stack: [V12, 0x38a, V675]

================================

Block 0x7ab
[0x7ab:0x7ad]
---
Predecessors: [0x774]
Successors: [0x38a]
---
0x7ab JUMPDEST
0x7ac SWAP1
0x7ad JUMP
---
0x7ab: JUMPDEST 
0x7ad: JUMP 0x38a
---
Entry stack: [V12, 0x38a, V675]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V675]

================================

Block 0x7ae
[0x7ae:0x7b9]
---
Predecessors: [0x40d]
Successors: [0x7ba, 0x7e3]
---
0x7ae JUMPDEST
0x7af PUSH1 0x0
0x7b1 DUP2
0x7b2 ISZERO
0x7b3 DUP1
0x7b4 ISZERO
0x7b5 SWAP1
0x7b6 PUSH2 0x7e3
0x7b9 JUMPI
---
0x7ae: JUMPDEST 
0x7af: V682 = 0x0
0x7b2: V683 = ISZERO V344
0x7b4: V684 = ISZERO V683
0x7b6: V685 = 0x7e3
0x7b9: JUMPI 0x7e3 V683
---
Entry stack: [V12, 0x424, V342, V344]
Stack pops: 1
Stack additions: [S0, 0x0, V684]
Exit stack: [V12, 0x424, V342, V344, 0x0, V684]

================================

Block 0x7ba
[0x7ba:0x7e2]
---
Predecessors: [0x7ae]
Successors: [0x7e3]
---
0x7ba POP
0x7bb PUSH1 0x1
0x7bd PUSH1 0xa0
0x7bf PUSH1 0x2
0x7c1 EXP
0x7c2 SUB
0x7c3 CALLER
0x7c4 DUP2
0x7c5 AND
0x7c6 PUSH1 0x0
0x7c8 SWAP1
0x7c9 DUP2
0x7ca MSTORE
0x7cb PUSH1 0x3
0x7cd PUSH1 0x20
0x7cf SWAP1
0x7d0 DUP2
0x7d1 MSTORE
0x7d2 PUSH1 0x40
0x7d4 DUP1
0x7d5 DUP4
0x7d6 SHA3
0x7d7 SWAP4
0x7d8 DUP8
0x7d9 AND
0x7da DUP4
0x7db MSTORE
0x7dc SWAP3
0x7dd SWAP1
0x7de MSTORE
0x7df SHA3
0x7e0 SLOAD
0x7e1 ISZERO
0x7e2 ISZERO
---
0x7bb: V686 = 0x1
0x7bd: V687 = 0xa0
0x7bf: V688 = 0x2
0x7c1: V689 = EXP 0x2 0xa0
0x7c2: V690 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c3: V691 = CALLER
0x7c5: V692 = AND 0xffffffffffffffffffffffffffffffffffffffff V691
0x7c6: V693 = 0x0
0x7ca: M[0x0] = V692
0x7cb: V694 = 0x3
0x7cd: V695 = 0x20
0x7d1: M[0x20] = 0x3
0x7d2: V696 = 0x40
0x7d6: V697 = SHA3 0x0 0x40
0x7d9: V698 = AND V342 0xffffffffffffffffffffffffffffffffffffffff
0x7db: M[0x0] = V698
0x7de: M[0x20] = V697
0x7df: V699 = SHA3 0x0 0x40
0x7e0: V700 = S[V699]
0x7e1: V701 = ISZERO V700
0x7e2: V702 = ISZERO V701
---
Entry stack: [V12, 0x424, V342, V344, 0x0, V684]
Stack pops: 4
Stack additions: [S3, S2, S1, V702]
Exit stack: [V12, 0x424, V342, V344, 0x0, V702]

================================

Block 0x7e3
[0x7e3:0x7e8]
---
Predecessors: [0x7ae, 0x7ba]
Successors: [0x7e9, 0x7f0]
---
0x7e3 JUMPDEST
0x7e4 ISZERO
0x7e5 PUSH2 0x7f0
0x7e8 JUMPI
---
0x7e3: JUMPDEST 
0x7e4: V703 = ISZERO S0
0x7e5: V704 = 0x7f0
0x7e8: JUMPI 0x7f0 V703
---
Entry stack: [V12, 0x424, V342, V344, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x424, V342, V344, 0x0]

================================

Block 0x7e9
[0x7e9:0x7ef]
---
Predecessors: [0x7e3]
Successors: [0x854]
---
0x7e9 POP
0x7ea PUSH1 0x0
0x7ec PUSH2 0x854
0x7ef JUMP
---
0x7ea: V705 = 0x0
0x7ec: V706 = 0x854
0x7ef: JUMP 0x854
---
Entry stack: [V12, 0x424, V342, V344, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x424, V342, V344, 0x0]

================================

Block 0x7f0
[0x7f0:0x853]
---
Predecessors: [0x7e3]
Successors: [0x854]
---
0x7f0 JUMPDEST
0x7f1 PUSH1 0x1
0x7f3 PUSH1 0xa0
0x7f5 PUSH1 0x2
0x7f7 EXP
0x7f8 SUB
0x7f9 CALLER
0x7fa DUP2
0x7fb AND
0x7fc PUSH1 0x0
0x7fe DUP2
0x7ff DUP2
0x800 MSTORE
0x801 PUSH1 0x3
0x803 PUSH1 0x20
0x805 SWAP1
0x806 DUP2
0x807 MSTORE
0x808 PUSH1 0x40
0x80a DUP1
0x80b DUP4
0x80c SHA3
0x80d SWAP5
0x80e DUP9
0x80f AND
0x810 DUP1
0x811 DUP5
0x812 MSTORE
0x813 SWAP5
0x814 SWAP1
0x815 SWAP2
0x816 MSTORE
0x817 SWAP1
0x818 DUP2
0x819 SWAP1
0x81a SHA3
0x81b DUP6
0x81c SWAP1
0x81d SSTORE
0x81e PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x83f SWAP1
0x840 DUP6
0x841 SWAP1
0x842 MLOAD
0x843 SWAP1
0x844 DUP2
0x845 MSTORE
0x846 PUSH1 0x20
0x848 ADD
0x849 PUSH1 0x40
0x84b MLOAD
0x84c DUP1
0x84d SWAP2
0x84e SUB
0x84f SWAP1
0x850 LOG3
0x851 POP
0x852 PUSH1 0x1
---
0x7f0: JUMPDEST 
0x7f1: V707 = 0x1
0x7f3: V708 = 0xa0
0x7f5: V709 = 0x2
0x7f7: V710 = EXP 0x2 0xa0
0x7f8: V711 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f9: V712 = CALLER
0x7fb: V713 = AND 0xffffffffffffffffffffffffffffffffffffffff V712
0x7fc: V714 = 0x0
0x800: M[0x0] = V713
0x801: V715 = 0x3
0x803: V716 = 0x20
0x807: M[0x20] = 0x3
0x808: V717 = 0x40
0x80c: V718 = SHA3 0x0 0x40
0x80f: V719 = AND V342 0xffffffffffffffffffffffffffffffffffffffff
0x812: M[0x0] = V719
0x816: M[0x20] = V718
0x81a: V720 = SHA3 0x0 0x40
0x81d: S[V720] = V344
0x81e: V721 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x842: V722 = M[0x40]
0x845: M[V722] = V344
0x846: V723 = 0x20
0x848: V724 = ADD 0x20 V722
0x849: V725 = 0x40
0x84b: V726 = M[0x40]
0x84e: V727 = SUB V724 V726
0x850: LOG V726 V727 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V713 V719
0x852: V728 = 0x1
---
Entry stack: [V12, 0x424, V342, V344, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V12, 0x424, V342, V344, 0x1]

================================

Block 0x854
[0x854:0x859]
---
Predecessors: [0x7e9, 0x7f0]
Successors: [0x424]
---
0x854 JUMPDEST
0x855 SWAP3
0x856 SWAP2
0x857 POP
0x858 POP
0x859 JUMP
---
0x854: JUMPDEST 
0x859: JUMP 0x424
---
Entry stack: [V12, 0x424, V342, V344, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x85a
[0x85a:0x85f]
---
Predecessors: [0x443]
Successors: [0x44b]
---
0x85a JUMPDEST
0x85b PUSH1 0x4
0x85d SLOAD
0x85e DUP2
0x85f JUMP
---
0x85a: JUMPDEST 
0x85b: V729 = 0x4
0x85d: V730 = S[0x4]
0x85f: JUMP 0x44b
---
Entry stack: [V12, 0x44b]
Stack pops: 1
Stack additions: [S0, V730]
Exit stack: [V12, 0x44b, V730]

================================

Block 0x860
[0x860:0x865]
---
Predecessors: [0x468]
Successors: [0x44b]
---
0x860 JUMPDEST
0x861 PUSH1 0x6
0x863 SLOAD
0x864 DUP2
0x865 JUMP
---
0x860: JUMPDEST 
0x861: V731 = 0x6
0x863: V732 = S[0x6]
0x865: JUMP 0x44b
---
Entry stack: [V12, 0x44b]
Stack pops: 1
Stack additions: [S0, V732]
Exit stack: [V12, 0x44b, V732]

================================

Block 0x866
[0x866:0x876]
---
Predecessors: [0x48d]
Successors: [0x877, 0x87b]
---
0x866 JUMPDEST
0x867 PUSH1 0x0
0x869 DUP1
0x86a DUP1
0x86b DUP1
0x86c DUP1
0x86d DUP1
0x86e PUSH1 0x64
0x870 CALLDATASIZE
0x871 LT
0x872 ISZERO
0x873 PUSH2 0x87b
0x876 JUMPI
---
0x866: JUMPDEST 
0x867: V733 = 0x0
0x86e: V734 = 0x64
0x870: V735 = CALLDATASIZE
0x871: V736 = LT V735 0x64
0x872: V737 = ISZERO V736
0x873: V738 = 0x87b
0x876: JUMPI 0x87b V737
---
Entry stack: [V12, 0x424, V393, V396, V398]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x424, V393, V396, V398, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x877
[0x877:0x87a]
---
Predecessors: [0x866]
Successors: []
---
0x877 PUSH1 0x0
0x879 DUP1
0x87a REVERT
---
0x877: V739 = 0x0
0x87a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x424, V393, V396, V398, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x424, V393, V396, V398, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x87b
[0x87b:0x882]
---
Predecessors: [0x866]
Successors: [0x883, 0x88b]
---
0x87b JUMPDEST
0x87c DUP7
0x87d ISZERO
0x87e ISZERO
0x87f PUSH2 0x88b
0x882 JUMPI
---
0x87b: JUMPDEST 
0x87d: V740 = ISZERO V398
0x87e: V741 = ISZERO V740
0x87f: V742 = 0x88b
0x882: JUMPI 0x88b V741
---
Entry stack: [V12, 0x424, V393, V396, V398, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x424, V393, V396, V398, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x883
[0x883:0x88a]
---
Predecessors: [0x87b]
Successors: [0x979]
---
0x883 PUSH1 0x0
0x885 SWAP6
0x886 POP
0x887 PUSH2 0x979
0x88a JUMP
---
0x883: V743 = 0x0
0x887: V744 = 0x979
0x88a: JUMP 0x979
---
Entry stack: [V12, 0x424, V393, V396, V398, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x424, V393, V396, V398, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x88b
[0x88b:0x8e7]
---
Predecessors: [0x87b]
Successors: [0x8e8, 0x8ea]
---
0x88b JUMPDEST
0x88c POP
0x88d POP
0x88e POP
0x88f POP
0x890 PUSH1 0x1
0x892 PUSH1 0xa0
0x894 PUSH1 0x2
0x896 EXP
0x897 SUB
0x898 DUP6
0x899 DUP2
0x89a AND
0x89b PUSH1 0x0
0x89d SWAP1
0x89e DUP2
0x89f MSTORE
0x8a0 PUSH1 0x2
0x8a2 PUSH1 0x20
0x8a4 DUP2
0x8a5 DUP2
0x8a6 MSTORE
0x8a7 PUSH1 0x40
0x8a9 DUP1
0x8aa DUP5
0x8ab SHA3
0x8ac SLOAD
0x8ad PUSH1 0x3
0x8af DUP4
0x8b0 MSTORE
0x8b1 DUP2
0x8b2 DUP6
0x8b3 SHA3
0x8b4 CALLER
0x8b5 DUP8
0x8b6 AND
0x8b7 DUP7
0x8b8 MSTORE
0x8b9 DUP4
0x8ba MSTORE
0x8bb DUP2
0x8bc DUP6
0x8bd SHA3
0x8be SLOAD
0x8bf SWAP6
0x8c0 DUP11
0x8c1 AND
0x8c2 DUP6
0x8c3 MSTORE
0x8c4 SWAP3
0x8c5 SWAP1
0x8c6 SWAP2
0x8c7 MSTORE
0x8c8 SWAP1
0x8c9 SWAP2
0x8ca SHA3
0x8cb SLOAD
0x8cc SWAP1
0x8cd SWAP3
0x8ce POP
0x8cf DUP5
0x8d0 DUP4
0x8d1 GT
0x8d2 DUP1
0x8d3 ISZERO
0x8d4 SWAP2
0x8d5 DUP7
0x8d6 DUP5
0x8d7 GT
0x8d8 ISZERO
0x8d9 SWAP2
0x8da DUP8
0x8db DUP3
0x8dc ADD
0x8dd SWAP2
0x8de SWAP1
0x8df SWAP2
0x8e0 GT
0x8e1 SWAP1
0x8e2 DUP4
0x8e3 SWAP1
0x8e4 PUSH2 0x8ea
0x8e7 JUMPI
---
0x88b: JUMPDEST 
0x890: V745 = 0x1
0x892: V746 = 0xa0
0x894: V747 = 0x2
0x896: V748 = EXP 0x2 0xa0
0x897: V749 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89a: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x89b: V751 = 0x0
0x89f: M[0x0] = V750
0x8a0: V752 = 0x2
0x8a2: V753 = 0x20
0x8a6: M[0x20] = 0x2
0x8a7: V754 = 0x40
0x8ab: V755 = SHA3 0x0 0x40
0x8ac: V756 = S[V755]
0x8ad: V757 = 0x3
0x8b0: M[0x20] = 0x3
0x8b3: V758 = SHA3 0x0 0x40
0x8b4: V759 = CALLER
0x8b6: V760 = AND 0xffffffffffffffffffffffffffffffffffffffff V759
0x8b8: M[0x0] = V760
0x8ba: M[0x20] = V758
0x8bd: V761 = SHA3 0x0 0x40
0x8be: V762 = S[V761]
0x8c1: V763 = AND V396 0xffffffffffffffffffffffffffffffffffffffff
0x8c3: M[0x0] = V763
0x8c7: M[0x20] = 0x2
0x8ca: V764 = SHA3 0x0 0x40
0x8cb: V765 = S[V764]
0x8d1: V766 = GT V756 V398
0x8d3: V767 = ISZERO V766
0x8d7: V768 = GT V762 V398
0x8d8: V769 = ISZERO V768
0x8dc: V770 = ADD V765 V398
0x8e0: V771 = GT V770 V765
0x8e4: V772 = 0x8ea
0x8e7: JUMPI 0x8ea V766
---
Entry stack: [V12, 0x424, V393, V396, V398, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V756, V762, V767, V769, V771, V767]
Exit stack: [V12, 0x424, V393, V396, V398, 0x0, V756, V762, V767, V769, V771, V767]

================================

Block 0x8e8
[0x8e8:0x8e9]
---
Predecessors: [0x88b]
Successors: [0x8ea]
---
0x8e8 POP
0x8e9 DUP2
---
0x8e8: NOP 
---
Entry stack: [V12, 0x424, V393, V396, V398, 0x0, V756, V762, V767, V769, V771, V767]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V12, 0x424, V393, V396, V398, 0x0, V756, V762, V767, V769, V771, V769]

================================

Block 0x8ea
[0x8ea:0x8f0]
---
Predecessors: [0x88b, 0x8e8]
Successors: [0x8f1, 0x8f4]
---
0x8ea JUMPDEST
0x8eb DUP1
0x8ec ISZERO
0x8ed PUSH2 0x8f4
0x8f0 JUMPI
---
0x8ea: JUMPDEST 
0x8ec: V773 = ISZERO S0
0x8ed: V774 = 0x8f4
0x8f0: JUMPI 0x8f4 V773
---
Entry stack: [V12, 0x424, V393, V396, V398, 0x0, V756, V762, V767, V769, V771, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x424, V393, V396, V398, 0x0, V756, V762, V767, V769, V771, S0]

================================

Block 0x8f1
[0x8f1:0x8f3]
---
Predecessors: [0x8ea]
Successors: [0x8f4]
---
0x8f1 POP
0x8f2 DUP1
0x8f3 ISZERO
---
0x8f3: V775 = ISZERO V771
---
Entry stack: [V12, 0x424, V393, V396, V398, 0x0, V756, V762, V767, V769, V771, S0]
Stack pops: 2
Stack additions: [S1, V775]
Exit stack: [V12, 0x424, V393, V396, V398, 0x0, V756, V762, V767, V769, V771, V775]

================================

Block 0x8f4
[0x8f4:0x8f9]
---
Predecessors: [0x8ea, 0x8f1]
Successors: [0x8fa, 0x974]
---
0x8f4 JUMPDEST
0x8f5 ISZERO
0x8f6 PUSH2 0x974
0x8f9 JUMPI
---
0x8f4: JUMPDEST 
0x8f5: V776 = ISZERO S0
0x8f6: V777 = 0x974
0x8f9: JUMPI 0x974 V776
---
Entry stack: [V12, 0x424, V393, V396, V398, 0x0, V756, V762, V767, V769, V771, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x424, V393, V396, V398, 0x0, V756, V762, V767, V769, V771]

================================

Block 0x8fa
[0x8fa:0x973]
---
Predecessors: [0x8f4]
Successors: [0x979]
---
0x8fa PUSH1 0x1
0x8fc PUSH1 0xa0
0x8fe PUSH1 0x2
0x900 EXP
0x901 SUB
0x902 DUP1
0x903 DUP10
0x904 AND
0x905 PUSH1 0x0
0x907 DUP2
0x908 DUP2
0x909 MSTORE
0x90a PUSH1 0x2
0x90c PUSH1 0x20
0x90e SWAP1
0x90f DUP2
0x910 MSTORE
0x911 PUSH1 0x40
0x913 DUP1
0x914 DUP4
0x915 SHA3
0x916 DUP1
0x917 SLOAD
0x918 DUP14
0x919 ADD
0x91a SWAP1
0x91b SSTORE
0x91c DUP14
0x91d DUP6
0x91e AND
0x91f DUP1
0x920 DUP5
0x921 MSTORE
0x922 DUP2
0x923 DUP5
0x924 SHA3
0x925 DUP1
0x926 SLOAD
0x927 DUP15
0x928 SWAP1
0x929 SUB
0x92a SWAP1
0x92b SSTORE
0x92c PUSH1 0x3
0x92e DUP4
0x92f MSTORE
0x930 DUP2
0x931 DUP5
0x932 SHA3
0x933 CALLER
0x934 SWAP1
0x935 SWAP7
0x936 AND
0x937 DUP5
0x938 MSTORE
0x939 SWAP5
0x93a SWAP1
0x93b SWAP2
0x93c MSTORE
0x93d SWAP1
0x93e DUP2
0x93f SWAP1
0x940 SHA3
0x941 DUP1
0x942 SLOAD
0x943 DUP12
0x944 SWAP1
0x945 SUB
0x946 SWAP1
0x947 SSTORE
0x948 SWAP1
0x949 SWAP2
0x94a SWAP1
0x94b PUSH1 0x0
0x94d DUP1
0x94e MLOAD
0x94f PUSH1 0x20
0x951 PUSH2 0xde0
0x954 DUP4
0x955 CODECOPY
0x956 DUP2
0x957 MLOAD
0x958 SWAP2
0x959 MSTORE
0x95a SWAP1
0x95b DUP11
0x95c SWAP1
0x95d MLOAD
0x95e SWAP1
0x95f DUP2
0x960 MSTORE
0x961 PUSH1 0x20
0x963 ADD
0x964 PUSH1 0x40
0x966 MLOAD
0x967 DUP1
0x968 SWAP2
0x969 SUB
0x96a SWAP1
0x96b LOG3
0x96c PUSH1 0x1
0x96e SWAP6
0x96f POP
0x970 PUSH2 0x979
0x973 JUMP
---
0x8fa: V778 = 0x1
0x8fc: V779 = 0xa0
0x8fe: V780 = 0x2
0x900: V781 = EXP 0x2 0xa0
0x901: V782 = SUB 0x10000000000000000000000000000000000000000 0x1
0x904: V783 = AND V396 0xffffffffffffffffffffffffffffffffffffffff
0x905: V784 = 0x0
0x909: M[0x0] = V783
0x90a: V785 = 0x2
0x90c: V786 = 0x20
0x910: M[0x20] = 0x2
0x911: V787 = 0x40
0x915: V788 = SHA3 0x0 0x40
0x917: V789 = S[V788]
0x919: V790 = ADD V398 V789
0x91b: S[V788] = V790
0x91e: V791 = AND 0xffffffffffffffffffffffffffffffffffffffff V393
0x921: M[0x0] = V791
0x924: V792 = SHA3 0x0 0x40
0x926: V793 = S[V792]
0x929: V794 = SUB V793 V398
0x92b: S[V792] = V794
0x92c: V795 = 0x3
0x92f: M[0x20] = 0x3
0x932: V796 = SHA3 0x0 0x40
0x933: V797 = CALLER
0x936: V798 = AND 0xffffffffffffffffffffffffffffffffffffffff V797
0x938: M[0x0] = V798
0x93c: M[0x20] = V796
0x940: V799 = SHA3 0x0 0x40
0x942: V800 = S[V799]
0x945: V801 = SUB V800 V398
0x947: S[V799] = V801
0x94b: V802 = 0x0
0x94e: V803 = M[0x0]
0x94f: V804 = 0x20
0x951: V805 = 0xde0
0x955: CODECOPY 0x0 0xde0 0x20
0x957: V806 = M[0x0]
0x959: M[0x0] = V803
0x95d: V807 = M[0x40]
0x960: M[V807] = V398
0x961: V808 = 0x20
0x963: V809 = ADD 0x20 V807
0x964: V810 = 0x40
0x966: V811 = M[0x40]
0x969: V812 = SUB V809 V811
0x96b: LOG V811 V812 V806 V791 V783
0x96c: V813 = 0x1
0x970: V814 = 0x979
0x973: JUMP 0x979
---
Entry stack: [V12, 0x424, V393, V396, V398, 0x0, V756, V762, V767, V769, V771]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x424, V393, V396, V398, 0x1, V756, V762, V767, V769, V771]

================================

Block 0x974
[0x974:0x978]
---
Predecessors: [0x8f4]
Successors: [0x979]
---
0x974 JUMPDEST
0x975 PUSH1 0x0
0x977 SWAP6
0x978 POP
---
0x974: JUMPDEST 
0x975: V815 = 0x0
---
Entry stack: [V12, 0x424, V393, V396, V398, 0x0, V756, V762, V767, V769, V771]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x424, V393, V396, V398, 0x0, V756, V762, V767, V769, V771]

================================

Block 0x979
[0x979:0x979]
---
Predecessors: [0x883, 0x8fa, 0x974]
Successors: [0x97a]
---
0x979 JUMPDEST
---
0x979: JUMPDEST 
---
Entry stack: [V12, 0x424, V393, V396, V398, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x424, V393, V396, V398, {0x0, 0x1}, S4, S3, S2, S1, S0]

================================

Block 0x97a
[0x97a:0x985]
---
Predecessors: [0x979]
Successors: [0x424]
---
0x97a JUMPDEST
0x97b POP
0x97c POP
0x97d POP
0x97e POP
0x97f POP
0x980 SWAP4
0x981 SWAP3
0x982 POP
0x983 POP
0x984 POP
0x985 JUMP
---
0x97a: JUMPDEST 
0x985: JUMP 0x424
---
Entry stack: [V12, 0x424, V393, V396, V398, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S5]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x986
[0x986:0x988]
---
Predecessors: [0x4c9]
Successors: [0x989]
---
0x986 JUMPDEST
0x987 PUSH1 0x5
---
0x986: JUMPDEST 
0x987: V816 = 0x5
---
Entry stack: [V12, 0x4d1]
Stack pops: 0
Stack additions: [0x5]
Exit stack: [V12, 0x4d1, 0x5]

================================

Block 0x989
[0x989:0x98b]
---
Predecessors: [0x986]
Successors: [0x4d1]
---
0x989 JUMPDEST
0x98a SWAP1
0x98b JUMP
---
0x989: JUMPDEST 
0x98b: JUMP 0x4d1
---
Entry stack: [V12, 0x4d1, 0x5]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x5]

================================

Block 0x98c
[0x98c:0x9a2]
---
Predecessors: [0x4f2]
Successors: [0x9a3, 0x9a7]
---
0x98c JUMPDEST
0x98d PUSH1 0x1
0x98f SLOAD
0x990 CALLER
0x991 PUSH1 0x1
0x993 PUSH1 0xa0
0x995 PUSH1 0x2
0x997 EXP
0x998 SUB
0x999 SWAP1
0x99a DUP2
0x99b AND
0x99c SWAP2
0x99d AND
0x99e EQ
0x99f PUSH2 0x9a7
0x9a2 JUMPI
---
0x98c: JUMPDEST 
0x98d: V817 = 0x1
0x98f: V818 = S[0x1]
0x990: V819 = CALLER
0x991: V820 = 0x1
0x993: V821 = 0xa0
0x995: V822 = 0x2
0x997: V823 = EXP 0x2 0xa0
0x998: V824 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99b: V825 = AND 0xffffffffffffffffffffffffffffffffffffffff V819
0x99d: V826 = AND V818 0xffffffffffffffffffffffffffffffffffffffff
0x99e: V827 = EQ V826 V825
0x99f: V828 = 0x9a7
0x9a2: JUMPI 0x9a7 V827
---
Entry stack: [V12, 0x375]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375]

================================

Block 0x9a3
[0x9a3:0x9a6]
---
Predecessors: [0x98c]
Successors: []
---
0x9a3 PUSH1 0x0
0x9a5 DUP1
0x9a6 REVERT
---
0x9a3: V829 = 0x0
0x9a6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x375]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375]

================================

Block 0x9a7
[0x9a7:0x9c5]
---
Predecessors: [0x98c]
Successors: [0x9c6]
---
0x9a7 JUMPDEST
0x9a8 PUSH1 0x1
0x9aa DUP1
0x9ab SLOAD
0x9ac PUSH21 0xff0000000000000000000000000000000000000000
0x9c2 NOT
0x9c3 AND
0x9c4 SWAP1
0x9c5 SSTORE
---
0x9a7: JUMPDEST 
0x9a8: V830 = 0x1
0x9ab: V831 = S[0x1]
0x9ac: V832 = 0xff0000000000000000000000000000000000000000
0x9c2: V833 = NOT 0xff0000000000000000000000000000000000000000
0x9c3: V834 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V831
0x9c5: S[0x1] = V834
---
Entry stack: [V12, 0x375]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375]

================================

Block 0x9c6
[0x9c6:0x9c7]
---
Predecessors: [0x9a7]
Successors: [0x375]
---
0x9c6 JUMPDEST
0x9c7 JUMP
---
0x9c6: JUMPDEST 
0x9c7: JUMP 0x375
---
Entry stack: [V12, 0x375]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x9c8
[0x9c8:0x9e1]
---
Predecessors: [0x507]
Successors: [0x9e2]
---
0x9c8 JUMPDEST
0x9c9 PUSH1 0x1
0x9cb PUSH1 0xa0
0x9cd PUSH1 0x2
0x9cf EXP
0x9d0 SUB
0x9d1 DUP2
0x9d2 AND
0x9d3 PUSH1 0x0
0x9d5 SWAP1
0x9d6 DUP2
0x9d7 MSTORE
0x9d8 PUSH1 0x2
0x9da PUSH1 0x20
0x9dc MSTORE
0x9dd PUSH1 0x40
0x9df SWAP1
0x9e0 SHA3
0x9e1 SLOAD
---
0x9c8: JUMPDEST 
0x9c9: V835 = 0x1
0x9cb: V836 = 0xa0
0x9cd: V837 = 0x2
0x9cf: V838 = EXP 0x2 0xa0
0x9d0: V839 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d2: V840 = AND V442 0xffffffffffffffffffffffffffffffffffffffff
0x9d3: V841 = 0x0
0x9d7: M[0x0] = V840
0x9d8: V842 = 0x2
0x9da: V843 = 0x20
0x9dc: M[0x20] = 0x2
0x9dd: V844 = 0x40
0x9e0: V845 = SHA3 0x0 0x40
0x9e1: V846 = S[V845]
---
Entry stack: [V12, 0x44b, V442]
Stack pops: 1
Stack additions: [S0, V846]
Exit stack: [V12, 0x44b, V442, V846]

================================

Block 0x9e2
[0x9e2:0x9e6]
---
Predecessors: [0x9c8]
Successors: [0x44b]
---
0x9e2 JUMPDEST
0x9e3 SWAP2
0x9e4 SWAP1
0x9e5 POP
0x9e6 JUMP
---
0x9e2: JUMPDEST 
0x9e6: JUMP 0x44b
---
Entry stack: [V12, 0x44b, V442, V846]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V846]

================================

Block 0x9e7
[0x9e7:0x9fd]
---
Predecessors: [0x538]
Successors: [0x9fe, 0xa02]
---
0x9e7 JUMPDEST
0x9e8 PUSH1 0x0
0x9ea SLOAD
0x9eb CALLER
0x9ec PUSH1 0x1
0x9ee PUSH1 0xa0
0x9f0 PUSH1 0x2
0x9f2 EXP
0x9f3 SUB
0x9f4 SWAP1
0x9f5 DUP2
0x9f6 AND
0x9f7 SWAP2
0x9f8 AND
0x9f9 EQ
0x9fa PUSH2 0xa02
0x9fd JUMPI
---
0x9e7: JUMPDEST 
0x9e8: V847 = 0x0
0x9ea: V848 = S[0x0]
0x9eb: V849 = CALLER
0x9ec: V850 = 0x1
0x9ee: V851 = 0xa0
0x9f0: V852 = 0x2
0x9f2: V853 = EXP 0x2 0xa0
0x9f3: V854 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f6: V855 = AND 0xffffffffffffffffffffffffffffffffffffffff V849
0x9f8: V856 = AND V848 0xffffffffffffffffffffffffffffffffffffffff
0x9f9: V857 = EQ V856 V855
0x9fa: V858 = 0xa02
0x9fd: JUMPI 0xa02 V857
---
Entry stack: [V12, 0x375, V463, V465]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375, V463, V465]

================================

Block 0x9fe
[0x9fe:0xa01]
---
Predecessors: [0x9e7]
Successors: []
---
0x9fe PUSH1 0x0
0xa00 DUP1
0xa01 REVERT
---
0x9fe: V859 = 0x0
0xa01: REVERT 0x0 0x0
---
Entry stack: [V12, 0x375, V463, V465]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375, V463, V465]

================================

Block 0xa02
[0xa02:0xa6b]
---
Predecessors: [0x9e7]
Successors: [0xa6c]
---
0xa02 JUMPDEST
0xa03 PUSH1 0x6
0xa05 DUP1
0xa06 SLOAD
0xa07 DUP3
0xa08 SWAP1
0xa09 SUB
0xa0a SWAP1
0xa0b SSTORE
0xa0c PUSH1 0x1
0xa0e SLOAD
0xa0f PUSH1 0x1
0xa11 PUSH1 0xa0
0xa13 PUSH1 0x2
0xa15 EXP
0xa16 SUB
0xa17 AND
0xa18 PUSH1 0x0
0xa1a PUSH1 0x0
0xa1c DUP1
0xa1d MLOAD
0xa1e PUSH1 0x20
0xa20 PUSH2 0xde0
0xa23 DUP4
0xa24 CODECOPY
0xa25 DUP2
0xa26 MLOAD
0xa27 SWAP2
0xa28 MSTORE
0xa29 DUP4
0xa2a PUSH1 0x40
0xa2c MLOAD
0xa2d SWAP1
0xa2e DUP2
0xa2f MSTORE
0xa30 PUSH1 0x20
0xa32 ADD
0xa33 PUSH1 0x40
0xa35 MLOAD
0xa36 DUP1
0xa37 SWAP2
0xa38 SUB
0xa39 SWAP1
0xa3a LOG3
0xa3b PUSH1 0x1
0xa3d SLOAD
0xa3e PUSH1 0x1
0xa40 PUSH1 0xa0
0xa42 PUSH1 0x2
0xa44 EXP
0xa45 SUB
0xa46 DUP1
0xa47 DUP5
0xa48 AND
0xa49 SWAP2
0xa4a AND
0xa4b PUSH1 0x0
0xa4d DUP1
0xa4e MLOAD
0xa4f PUSH1 0x20
0xa51 PUSH2 0xde0
0xa54 DUP4
0xa55 CODECOPY
0xa56 DUP2
0xa57 MLOAD
0xa58 SWAP2
0xa59 MSTORE
0xa5a DUP4
0xa5b PUSH1 0x40
0xa5d MLOAD
0xa5e SWAP1
0xa5f DUP2
0xa60 MSTORE
0xa61 PUSH1 0x20
0xa63 ADD
0xa64 PUSH1 0x40
0xa66 MLOAD
0xa67 DUP1
0xa68 SWAP2
0xa69 SUB
0xa6a SWAP1
0xa6b LOG3
---
0xa02: JUMPDEST 
0xa03: V860 = 0x6
0xa06: V861 = S[0x6]
0xa09: V862 = SUB V861 V465
0xa0b: S[0x6] = V862
0xa0c: V863 = 0x1
0xa0e: V864 = S[0x1]
0xa0f: V865 = 0x1
0xa11: V866 = 0xa0
0xa13: V867 = 0x2
0xa15: V868 = EXP 0x2 0xa0
0xa16: V869 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa17: V870 = AND 0xffffffffffffffffffffffffffffffffffffffff V864
0xa18: V871 = 0x0
0xa1a: V872 = 0x0
0xa1d: V873 = M[0x0]
0xa1e: V874 = 0x20
0xa20: V875 = 0xde0
0xa24: CODECOPY 0x0 0xde0 0x20
0xa26: V876 = M[0x0]
0xa28: M[0x0] = V873
0xa2a: V877 = 0x40
0xa2c: V878 = M[0x40]
0xa2f: M[V878] = V465
0xa30: V879 = 0x20
0xa32: V880 = ADD 0x20 V878
0xa33: V881 = 0x40
0xa35: V882 = M[0x40]
0xa38: V883 = SUB V880 V882
0xa3a: LOG V882 V883 V876 0x0 V870
0xa3b: V884 = 0x1
0xa3d: V885 = S[0x1]
0xa3e: V886 = 0x1
0xa40: V887 = 0xa0
0xa42: V888 = 0x2
0xa44: V889 = EXP 0x2 0xa0
0xa45: V890 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa48: V891 = AND V463 0xffffffffffffffffffffffffffffffffffffffff
0xa4a: V892 = AND V885 0xffffffffffffffffffffffffffffffffffffffff
0xa4b: V893 = 0x0
0xa4e: V894 = M[0x0]
0xa4f: V895 = 0x20
0xa51: V896 = 0xde0
0xa55: CODECOPY 0x0 0xde0 0x20
0xa57: V897 = M[0x0]
0xa59: M[0x0] = V894
0xa5b: V898 = 0x40
0xa5d: V899 = M[0x40]
0xa60: M[V899] = V465
0xa61: V900 = 0x20
0xa63: V901 = ADD 0x20 V899
0xa64: V902 = 0x40
0xa66: V903 = M[0x40]
0xa69: V904 = SUB V901 V903
0xa6b: LOG V903 V904 V897 V892 V891
---
Entry stack: [V12, 0x375, V463, V465]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x375, V463, V465]

================================

Block 0xa6c
[0xa6c:0xa6c]
---
Predecessors: [0xa02]
Successors: [0xa6d]
---
0xa6c JUMPDEST
---
0xa6c: JUMPDEST 
---
Entry stack: [V12, 0x375, V463, V465]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375, V463, V465]

================================

Block 0xa6d
[0xa6d:0xa70]
---
Predecessors: [0xa6c]
Successors: [0x375]
---
0xa6d JUMPDEST
0xa6e POP
0xa6f POP
0xa70 JUMP
---
0xa6d: JUMPDEST 
0xa70: JUMP 0x375
---
Entry stack: [V12, 0x375, V463, V465]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0xa71
[0xa71:0xa7f]
---
Predecessors: [0x55c]
Successors: [0x564]
---
0xa71 JUMPDEST
0xa72 PUSH1 0x0
0xa74 SLOAD
0xa75 PUSH1 0x1
0xa77 PUSH1 0xa0
0xa79 PUSH1 0x2
0xa7b EXP
0xa7c SUB
0xa7d AND
0xa7e DUP2
0xa7f JUMP
---
0xa71: JUMPDEST 
0xa72: V905 = 0x0
0xa74: V906 = S[0x0]
0xa75: V907 = 0x1
0xa77: V908 = 0xa0
0xa79: V909 = 0x2
0xa7b: V910 = EXP 0x2 0xa0
0xa7c: V911 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7d: V912 = AND 0xffffffffffffffffffffffffffffffffffffffff V906
0xa7f: JUMP 0x564
---
Entry stack: [V12, 0x564]
Stack pops: 1
Stack additions: [S0, V912]
Exit stack: [V12, 0x564, V912]

================================

Block 0xa80
[0xa80:0xa96]
---
Predecessors: [0x58b]
Successors: [0xa97, 0xa9b]
---
0xa80 JUMPDEST
0xa81 PUSH1 0x1
0xa83 SLOAD
0xa84 CALLER
0xa85 PUSH1 0x1
0xa87 PUSH1 0xa0
0xa89 PUSH1 0x2
0xa8b EXP
0xa8c SUB
0xa8d SWAP1
0xa8e DUP2
0xa8f AND
0xa90 SWAP2
0xa91 AND
0xa92 EQ
0xa93 PUSH2 0xa9b
0xa96 JUMPI
---
0xa80: JUMPDEST 
0xa81: V913 = 0x1
0xa83: V914 = S[0x1]
0xa84: V915 = CALLER
0xa85: V916 = 0x1
0xa87: V917 = 0xa0
0xa89: V918 = 0x2
0xa8b: V919 = EXP 0x2 0xa0
0xa8c: V920 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa8f: V921 = AND 0xffffffffffffffffffffffffffffffffffffffff V915
0xa91: V922 = AND V914 0xffffffffffffffffffffffffffffffffffffffff
0xa92: V923 = EQ V922 V921
0xa93: V924 = 0xa9b
0xa96: JUMPI 0xa9b V923
---
Entry stack: [V12, 0x375]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375]

================================

Block 0xa97
[0xa97:0xa9a]
---
Predecessors: [0xa80]
Successors: []
---
0xa97 PUSH1 0x0
0xa99 DUP1
0xa9a REVERT
---
0xa97: V925 = 0x0
0xa9a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x375]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375]

================================

Block 0xa9b
[0xa9b:0xad0]
---
Predecessors: [0xa80]
Successors: [0xad1]
---
0xa9b JUMPDEST
0xa9c PUSH1 0x1
0xa9e DUP1
0xa9f SLOAD
0xaa0 PUSH21 0xff0000000000000000000000000000000000000000
0xab6 NOT
0xab7 AND
0xab8 PUSH21 0x10000000000000000000000000000000000000000
0xace OR
0xacf SWAP1
0xad0 SSTORE
---
0xa9b: JUMPDEST 
0xa9c: V926 = 0x1
0xa9f: V927 = S[0x1]
0xaa0: V928 = 0xff0000000000000000000000000000000000000000
0xab6: V929 = NOT 0xff0000000000000000000000000000000000000000
0xab7: V930 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V927
0xab8: V931 = 0x10000000000000000000000000000000000000000
0xace: V932 = OR 0x10000000000000000000000000000000000000000 V930
0xad0: S[0x1] = V932
---
Entry stack: [V12, 0x375]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375]

================================

Block 0xad1
[0xad1:0xad2]
---
Predecessors: [0xa9b]
Successors: [0x375]
---
0xad1 JUMPDEST
0xad2 JUMP
---
0xad1: JUMPDEST 
0xad2: JUMP 0x375
---
Entry stack: [V12, 0x375]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0xad3
[0xad3:0xada]
---
Predecessors: [0x5a0]
Successors: [0xdcd]
---
0xad3 JUMPDEST
0xad4 PUSH2 0xadb
0xad7 PUSH2 0xdcd
0xada JUMP
---
0xad3: JUMPDEST 
0xad4: V933 = 0xadb
0xad7: V934 = 0xdcd
0xada: JUMP 0xdcd
---
Entry stack: [V12, 0x38a]
Stack pops: 0
Stack additions: [0xadb]
Exit stack: [V12, 0x38a, 0xadb]

================================

Block 0xadb
[0xadb:0xb11]
---
Predecessors: [0xdcd]
Successors: [0xb12]
---
0xadb JUMPDEST
0xadc PUSH1 0x40
0xade DUP1
0xadf MLOAD
0xae0 SWAP1
0xae1 DUP2
0xae2 ADD
0xae3 PUSH1 0x40
0xae5 MSTORE
0xae6 PUSH1 0x3
0xae8 DUP2
0xae9 MSTORE
0xaea PUSH32 0x50544b0000000000000000000000000000000000000000000000000000000000
0xb0b PUSH1 0x20
0xb0d DUP3
0xb0e ADD
0xb0f MSTORE
0xb10 SWAP1
0xb11 POP
---
0xadb: JUMPDEST 
0xadc: V935 = 0x40
0xadf: V936 = M[0x40]
0xae2: V937 = ADD V936 0x40
0xae3: V938 = 0x40
0xae5: M[0x40] = V937
0xae6: V939 = 0x3
0xae9: M[V936] = 0x3
0xaea: V940 = 0x50544b0000000000000000000000000000000000000000000000000000000000
0xb0b: V941 = 0x20
0xb0e: V942 = ADD V936 0x20
0xb0f: M[V942] = 0x50544b0000000000000000000000000000000000000000000000000000000000
---
Entry stack: [V12, 0x38a, V1194]
Stack pops: 1
Stack additions: [V936]
Exit stack: [V12, 0x38a, V936]

================================

Block 0xb12
[0xb12:0xb14]
---
Predecessors: [0xadb]
Successors: [0x38a]
---
0xb12 JUMPDEST
0xb13 SWAP1
0xb14 JUMP
---
0xb12: JUMPDEST 
0xb14: JUMP 0x38a
---
Entry stack: [V12, 0x38a, V936]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V936]

================================

Block 0xb15
[0xb15:0xb1a]
---
Predecessors: [0x62b]
Successors: [0x44b]
---
0xb15 JUMPDEST
0xb16 PUSH1 0x5
0xb18 SLOAD
0xb19 DUP2
0xb1a JUMP
---
0xb15: JUMPDEST 
0xb16: V943 = 0x5
0xb18: V944 = S[0x5]
0xb1a: JUMP 0x44b
---
Entry stack: [V12, 0x44b]
Stack pops: 1
Stack additions: [S0, V944]
Exit stack: [V12, 0x44b, V944]

================================

Block 0xb1b
[0xb1b:0xb29]
---
Predecessors: [0x650]
Successors: [0xb2a, 0xb2e]
---
0xb1b JUMPDEST
0xb1c PUSH1 0x0
0xb1e DUP1
0xb1f DUP1
0xb20 DUP1
0xb21 PUSH1 0x44
0xb23 CALLDATASIZE
0xb24 LT
0xb25 ISZERO
0xb26 PUSH2 0xb2e
0xb29 JUMPI
---
0xb1b: JUMPDEST 
0xb1c: V945 = 0x0
0xb21: V946 = 0x44
0xb23: V947 = CALLDATASIZE
0xb24: V948 = LT V947 0x44
0xb25: V949 = ISZERO V948
0xb26: V950 = 0xb2e
0xb29: JUMPI 0xb2e V949
---
Entry stack: [V12, 0x424, V563, V565]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x424, V563, V565, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xb2a
[0xb2a:0xb2d]
---
Predecessors: [0xb1b]
Successors: []
---
0xb2a PUSH1 0x0
0xb2c DUP1
0xb2d REVERT
---
0xb2a: V951 = 0x0
0xb2d: REVERT 0x0 0x0
---
Entry stack: [V12, 0x424, V563, V565, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x424, V563, V565, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xb2e
[0xb2e:0xb35]
---
Predecessors: [0xb1b]
Successors: [0xb36, 0xb3e]
---
0xb2e JUMPDEST
0xb2f DUP5
0xb30 ISZERO
0xb31 ISZERO
0xb32 PUSH2 0xb3e
0xb35 JUMPI
---
0xb2e: JUMPDEST 
0xb30: V952 = ISZERO V565
0xb31: V953 = ISZERO V952
0xb32: V954 = 0xb3e
0xb35: JUMPI 0xb3e V953
---
Entry stack: [V12, 0x424, V563, V565, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x424, V563, V565, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xb36
[0xb36:0xb3d]
---
Predecessors: [0xb2e]
Successors: [0xbdf]
---
0xb36 PUSH1 0x0
0xb38 SWAP4
0xb39 POP
0xb3a PUSH2 0xbdf
0xb3d JUMP
---
0xb36: V955 = 0x0
0xb3a: V956 = 0xbdf
0xb3d: JUMP 0xbdf
---
Entry stack: [V12, 0x424, V563, V565, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x424, V563, V565, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xb3e
[0xb3e:0xb75]
---
Predecessors: [0xb2e]
Successors: [0xb76, 0xb79]
---
0xb3e JUMPDEST
0xb3f POP
0xb40 POP
0xb41 POP
0xb42 PUSH1 0x1
0xb44 PUSH1 0xa0
0xb46 PUSH1 0x2
0xb48 EXP
0xb49 SUB
0xb4a CALLER
0xb4b DUP2
0xb4c AND
0xb4d PUSH1 0x0
0xb4f SWAP1
0xb50 DUP2
0xb51 MSTORE
0xb52 PUSH1 0x2
0xb54 PUSH1 0x20
0xb56 MSTORE
0xb57 PUSH1 0x40
0xb59 DUP1
0xb5a DUP3
0xb5b SHA3
0xb5c SLOAD
0xb5d SWAP3
0xb5e DUP7
0xb5f AND
0xb60 DUP3
0xb61 MSTORE
0xb62 SWAP1
0xb63 SHA3
0xb64 SLOAD
0xb65 DUP4
0xb66 DUP3
0xb67 LT
0xb68 DUP1
0xb69 ISZERO
0xb6a SWAP2
0xb6b DUP1
0xb6c DUP7
0xb6d ADD
0xb6e LT
0xb6f SWAP1
0xb70 DUP3
0xb71 SWAP1
0xb72 PUSH2 0xb79
0xb75 JUMPI
---
0xb3e: JUMPDEST 
0xb42: V957 = 0x1
0xb44: V958 = 0xa0
0xb46: V959 = 0x2
0xb48: V960 = EXP 0x2 0xa0
0xb49: V961 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4a: V962 = CALLER
0xb4c: V963 = AND 0xffffffffffffffffffffffffffffffffffffffff V962
0xb4d: V964 = 0x0
0xb51: M[0x0] = V963
0xb52: V965 = 0x2
0xb54: V966 = 0x20
0xb56: M[0x20] = 0x2
0xb57: V967 = 0x40
0xb5b: V968 = SHA3 0x0 0x40
0xb5c: V969 = S[V968]
0xb5f: V970 = AND V563 0xffffffffffffffffffffffffffffffffffffffff
0xb61: M[0x0] = V970
0xb63: V971 = SHA3 0x0 0x40
0xb64: V972 = S[V971]
0xb67: V973 = LT V969 V565
0xb69: V974 = ISZERO V973
0xb6d: V975 = ADD V565 V972
0xb6e: V976 = LT V975 V972
0xb72: V977 = 0xb79
0xb75: JUMPI 0xb79 V973
---
Entry stack: [V12, 0x424, V563, V565, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V969, V974, V976, V974]
Exit stack: [V12, 0x424, V563, V565, 0x0, V969, V974, V976, V974]

================================

Block 0xb76
[0xb76:0xb78]
---
Predecessors: [0xb3e]
Successors: [0xb79]
---
0xb76 POP
0xb77 DUP1
0xb78 ISZERO
---
0xb78: V978 = ISZERO V976
---
Entry stack: [V12, 0x424, V563, V565, 0x0, V969, V974, V976, V974]
Stack pops: 2
Stack additions: [S1, V978]
Exit stack: [V12, 0x424, V563, V565, 0x0, V969, V974, V976, V978]

================================

Block 0xb79
[0xb79:0xb7e]
---
Predecessors: [0xb3e, 0xb76]
Successors: [0xb7f, 0xbda]
---
0xb79 JUMPDEST
0xb7a ISZERO
0xb7b PUSH2 0xbda
0xb7e JUMPI
---
0xb79: JUMPDEST 
0xb7a: V979 = ISZERO S0
0xb7b: V980 = 0xbda
0xb7e: JUMPI 0xbda V979
---
Entry stack: [V12, 0x424, V563, V565, 0x0, V969, V974, V976, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x424, V563, V565, 0x0, V969, V974, V976]

================================

Block 0xb7f
[0xb7f:0xbd9]
---
Predecessors: [0xb79]
Successors: [0xbdf]
---
0xb7f PUSH1 0x1
0xb81 PUSH1 0xa0
0xb83 PUSH1 0x2
0xb85 EXP
0xb86 SUB
0xb87 CALLER
0xb88 DUP2
0xb89 AND
0xb8a PUSH1 0x0
0xb8c DUP2
0xb8d DUP2
0xb8e MSTORE
0xb8f PUSH1 0x2
0xb91 PUSH1 0x20
0xb93 MSTORE
0xb94 PUSH1 0x40
0xb96 DUP1
0xb97 DUP3
0xb98 SHA3
0xb99 DUP1
0xb9a SLOAD
0xb9b DUP11
0xb9c SWAP1
0xb9d SUB
0xb9e SWAP1
0xb9f SSTORE
0xba0 SWAP3
0xba1 DUP10
0xba2 AND
0xba3 DUP1
0xba4 DUP3
0xba5 MSTORE
0xba6 SWAP1
0xba7 DUP4
0xba8 SWAP1
0xba9 SHA3
0xbaa DUP1
0xbab SLOAD
0xbac DUP10
0xbad ADD
0xbae SWAP1
0xbaf SSTORE
0xbb0 SWAP2
0xbb1 PUSH1 0x0
0xbb3 DUP1
0xbb4 MLOAD
0xbb5 PUSH1 0x20
0xbb7 PUSH2 0xde0
0xbba DUP4
0xbbb CODECOPY
0xbbc DUP2
0xbbd MLOAD
0xbbe SWAP2
0xbbf MSTORE
0xbc0 SWAP1
0xbc1 DUP9
0xbc2 SWAP1
0xbc3 MLOAD
0xbc4 SWAP1
0xbc5 DUP2
0xbc6 MSTORE
0xbc7 PUSH1 0x20
0xbc9 ADD
0xbca PUSH1 0x40
0xbcc MLOAD
0xbcd DUP1
0xbce SWAP2
0xbcf SUB
0xbd0 SWAP1
0xbd1 LOG3
0xbd2 PUSH1 0x1
0xbd4 SWAP4
0xbd5 POP
0xbd6 PUSH2 0xbdf
0xbd9 JUMP
---
0xb7f: V981 = 0x1
0xb81: V982 = 0xa0
0xb83: V983 = 0x2
0xb85: V984 = EXP 0x2 0xa0
0xb86: V985 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb87: V986 = CALLER
0xb89: V987 = AND 0xffffffffffffffffffffffffffffffffffffffff V986
0xb8a: V988 = 0x0
0xb8e: M[0x0] = V987
0xb8f: V989 = 0x2
0xb91: V990 = 0x20
0xb93: M[0x20] = 0x2
0xb94: V991 = 0x40
0xb98: V992 = SHA3 0x0 0x40
0xb9a: V993 = S[V992]
0xb9d: V994 = SUB V993 V565
0xb9f: S[V992] = V994
0xba2: V995 = AND V563 0xffffffffffffffffffffffffffffffffffffffff
0xba5: M[0x0] = V995
0xba9: V996 = SHA3 0x0 0x40
0xbab: V997 = S[V996]
0xbad: V998 = ADD V565 V997
0xbaf: S[V996] = V998
0xbb1: V999 = 0x0
0xbb4: V1000 = M[0x0]
0xbb5: V1001 = 0x20
0xbb7: V1002 = 0xde0
0xbbb: CODECOPY 0x0 0xde0 0x20
0xbbd: V1003 = M[0x0]
0xbbf: M[0x0] = V1000
0xbc3: V1004 = M[0x40]
0xbc6: M[V1004] = V565
0xbc7: V1005 = 0x20
0xbc9: V1006 = ADD 0x20 V1004
0xbca: V1007 = 0x40
0xbcc: V1008 = M[0x40]
0xbcf: V1009 = SUB V1006 V1008
0xbd1: LOG V1008 V1009 V1003 V987 V995
0xbd2: V1010 = 0x1
0xbd6: V1011 = 0xbdf
0xbd9: JUMP 0xbdf
---
Entry stack: [V12, 0x424, V563, V565, 0x0, V969, V974, V976]
Stack pops: 6
Stack additions: [S5, S4, 0x1, S2, S1, S0]
Exit stack: [V12, 0x424, V563, V565, 0x1, V969, V974, V976]

================================

Block 0xbda
[0xbda:0xbde]
---
Predecessors: [0xb79]
Successors: [0xbdf]
---
0xbda JUMPDEST
0xbdb PUSH1 0x0
0xbdd SWAP4
0xbde POP
---
0xbda: JUMPDEST 
0xbdb: V1012 = 0x0
---
Entry stack: [V12, 0x424, V563, V565, 0x0, V969, V974, V976]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x424, V563, V565, 0x0, V969, V974, V976]

================================

Block 0xbdf
[0xbdf:0xbdf]
---
Predecessors: [0xb36, 0xb7f, 0xbda]
Successors: [0xbe0]
---
0xbdf JUMPDEST
---
0xbdf: JUMPDEST 
---
Entry stack: [V12, 0x424, V563, V565, {0x0, 0x1}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x424, V563, V565, {0x0, 0x1}, S2, S1, S0]

================================

Block 0xbe0
[0xbe0:0xbe8]
---
Predecessors: [0xbdf]
Successors: [0x424]
---
0xbe0 JUMPDEST
0xbe1 POP
0xbe2 POP
0xbe3 POP
0xbe4 SWAP3
0xbe5 SWAP2
0xbe6 POP
0xbe7 POP
0xbe8 JUMP
---
0xbe0: JUMPDEST 
0xbe8: JUMP 0x424
---
Entry stack: [V12, 0x424, V563, V565, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0xbe9
[0xbe9:0xc10]
---
Predecessors: [0x686]
Successors: [0xc11]
---
0xbe9 JUMPDEST
0xbea PUSH1 0x4
0xbec SLOAD
0xbed PUSH1 0x6
0xbef SLOAD
0xbf0 PUSH1 0x5
0xbf2 SLOAD
0xbf3 PUSH1 0x1
0xbf5 SLOAD
0xbf6 PUSH21 0x10000000000000000000000000000000000000000
0xc0c SWAP1
0xc0d DIV
0xc0e PUSH1 0xff
0xc10 AND
---
0xbe9: JUMPDEST 
0xbea: V1013 = 0x4
0xbec: V1014 = S[0x4]
0xbed: V1015 = 0x6
0xbef: V1016 = S[0x6]
0xbf0: V1017 = 0x5
0xbf2: V1018 = S[0x5]
0xbf3: V1019 = 0x1
0xbf5: V1020 = S[0x1]
0xbf6: V1021 = 0x10000000000000000000000000000000000000000
0xc0d: V1022 = DIV V1020 0x10000000000000000000000000000000000000000
0xc0e: V1023 = 0xff
0xc10: V1024 = AND 0xff V1022
---
Entry stack: [V12, 0x68e]
Stack pops: 0
Stack additions: [V1014, V1016, V1018, V1024]
Exit stack: [V12, 0x68e, V1014, V1016, V1018, V1024]

================================

Block 0xc11
[0xc11:0xc16]
---
Predecessors: [0xbe9]
Successors: [0x68e]
---
0xc11 JUMPDEST
0xc12 SWAP1
0xc13 SWAP2
0xc14 SWAP3
0xc15 SWAP4
0xc16 JUMP
---
0xc11: JUMPDEST 
0xc16: JUMP 0x68e
---
Entry stack: [V12, 0x68e, V1014, V1016, V1018, V1024]
Stack pops: 5
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, V1014, V1016, V1018, V1024]

================================

Block 0xc17
[0xc17:0xc37]
---
Predecessors: [0x6c5]
Successors: [0x424]
---
0xc17 JUMPDEST
0xc18 PUSH1 0x1
0xc1a SLOAD
0xc1b PUSH21 0x10000000000000000000000000000000000000000
0xc31 SWAP1
0xc32 DIV
0xc33 PUSH1 0xff
0xc35 AND
0xc36 DUP2
0xc37 JUMP
---
0xc17: JUMPDEST 
0xc18: V1025 = 0x1
0xc1a: V1026 = S[0x1]
0xc1b: V1027 = 0x10000000000000000000000000000000000000000
0xc32: V1028 = DIV V1026 0x10000000000000000000000000000000000000000
0xc33: V1029 = 0xff
0xc35: V1030 = AND 0xff V1028
0xc37: JUMP 0x424
---
Entry stack: [V12, 0x424]
Stack pops: 1
Stack additions: [S0, V1030]
Exit stack: [V12, 0x424, V1030]

================================

Block 0xc38
[0xc38:0xc5e]
---
Predecessors: [0x6ec]
Successors: [0xc5f]
---
0xc38 JUMPDEST
0xc39 PUSH1 0x1
0xc3b PUSH1 0xa0
0xc3d PUSH1 0x2
0xc3f EXP
0xc40 SUB
0xc41 DUP1
0xc42 DUP4
0xc43 AND
0xc44 PUSH1 0x0
0xc46 SWAP1
0xc47 DUP2
0xc48 MSTORE
0xc49 PUSH1 0x3
0xc4b PUSH1 0x20
0xc4d SWAP1
0xc4e DUP2
0xc4f MSTORE
0xc50 PUSH1 0x40
0xc52 DUP1
0xc53 DUP4
0xc54 SHA3
0xc55 SWAP4
0xc56 DUP6
0xc57 AND
0xc58 DUP4
0xc59 MSTORE
0xc5a SWAP3
0xc5b SWAP1
0xc5c MSTORE
0xc5d SHA3
0xc5e SLOAD
---
0xc38: JUMPDEST 
0xc39: V1031 = 0x1
0xc3b: V1032 = 0xa0
0xc3d: V1033 = 0x2
0xc3f: V1034 = EXP 0x2 0xa0
0xc40: V1035 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc43: V1036 = AND V623 0xffffffffffffffffffffffffffffffffffffffff
0xc44: V1037 = 0x0
0xc48: M[0x0] = V1036
0xc49: V1038 = 0x3
0xc4b: V1039 = 0x20
0xc4f: M[0x20] = 0x3
0xc50: V1040 = 0x40
0xc54: V1041 = SHA3 0x0 0x40
0xc57: V1042 = AND V626 0xffffffffffffffffffffffffffffffffffffffff
0xc59: M[0x0] = V1042
0xc5c: M[0x20] = V1041
0xc5d: V1043 = SHA3 0x0 0x40
0xc5e: V1044 = S[V1043]
---
Entry stack: [V12, 0x44b, V623, V626]
Stack pops: 2
Stack additions: [S1, S0, V1044]
Exit stack: [V12, 0x44b, V623, V626, V1044]

================================

Block 0xc5f
[0xc5f:0xc64]
---
Predecessors: [0xc38]
Successors: [0x44b]
---
0xc5f JUMPDEST
0xc60 SWAP3
0xc61 SWAP2
0xc62 POP
0xc63 POP
0xc64 JUMP
---
0xc5f: JUMPDEST 
0xc64: JUMP 0x44b
---
Entry stack: [V12, 0x44b, V623, V626, V1044]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, V1044]

================================

Block 0xc65
[0xc65:0xc82]
---
Predecessors: [0x723]
Successors: [0xc83, 0xc87]
---
0xc65 JUMPDEST
0xc66 PUSH1 0x1
0xc68 SLOAD
0xc69 PUSH1 0x0
0xc6b SWAP1
0xc6c DUP2
0xc6d SWAP1
0xc6e DUP2
0xc6f SWAP1
0xc70 CALLER
0xc71 PUSH1 0x1
0xc73 PUSH1 0xa0
0xc75 PUSH1 0x2
0xc77 EXP
0xc78 SUB
0xc79 SWAP1
0xc7a DUP2
0xc7b AND
0xc7c SWAP2
0xc7d AND
0xc7e EQ
0xc7f PUSH2 0xc87
0xc82 JUMPI
---
0xc65: JUMPDEST 
0xc66: V1045 = 0x1
0xc68: V1046 = S[0x1]
0xc69: V1047 = 0x0
0xc70: V1048 = CALLER
0xc71: V1049 = 0x1
0xc73: V1050 = 0xa0
0xc75: V1051 = 0x2
0xc77: V1052 = EXP 0x2 0xa0
0xc78: V1053 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7b: V1054 = AND 0xffffffffffffffffffffffffffffffffffffffff V1048
0xc7d: V1055 = AND V1046 0xffffffffffffffffffffffffffffffffffffffff
0xc7e: V1056 = EQ V1055 V1054
0xc7f: V1057 = 0xc87
0xc82: JUMPI 0xc87 V1056
---
Entry stack: [V12, 0x424, V647]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x424, V647, 0x0, 0x0, 0x0]

================================

Block 0xc83
[0xc83:0xc86]
---
Predecessors: [0xc65]
Successors: []
---
0xc83 PUSH1 0x0
0xc85 DUP1
0xc86 REVERT
---
0xc83: V1058 = 0x0
0xc86: REVERT 0x0 0x0
---
Entry stack: [V12, 0x424, V647, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x424, V647, 0x0, 0x0, 0x0]

================================

Block 0xc87
[0xc87:0xcdc]
---
Predecessors: [0xc65]
Successors: [0xcdd, 0xce1]
---
0xc87 JUMPDEST
0xc88 DUP4
0xc89 SWAP2
0xc8a POP
0xc8b DUP2
0xc8c PUSH1 0x1
0xc8e PUSH1 0xa0
0xc90 PUSH1 0x2
0xc92 EXP
0xc93 SUB
0xc94 AND
0xc95 PUSH4 0x70a08231
0xc9a ADDRESS
0xc9b PUSH1 0x0
0xc9d PUSH1 0x40
0xc9f MLOAD
0xca0 PUSH1 0x20
0xca2 ADD
0xca3 MSTORE
0xca4 PUSH1 0x40
0xca6 MLOAD
0xca7 PUSH1 0xe0
0xca9 PUSH1 0x2
0xcab EXP
0xcac PUSH4 0xffffffff
0xcb1 DUP5
0xcb2 AND
0xcb3 MUL
0xcb4 DUP2
0xcb5 MSTORE
0xcb6 PUSH1 0x1
0xcb8 PUSH1 0xa0
0xcba PUSH1 0x2
0xcbc EXP
0xcbd SUB
0xcbe SWAP1
0xcbf SWAP2
0xcc0 AND
0xcc1 PUSH1 0x4
0xcc3 DUP3
0xcc4 ADD
0xcc5 MSTORE
0xcc6 PUSH1 0x24
0xcc8 ADD
0xcc9 PUSH1 0x20
0xccb PUSH1 0x40
0xccd MLOAD
0xcce DUP1
0xccf DUP4
0xcd0 SUB
0xcd1 DUP2
0xcd2 PUSH1 0x0
0xcd4 DUP8
0xcd5 DUP1
0xcd6 EXTCODESIZE
0xcd7 ISZERO
0xcd8 ISZERO
0xcd9 PUSH2 0xce1
0xcdc JUMPI
---
0xc87: JUMPDEST 
0xc8c: V1059 = 0x1
0xc8e: V1060 = 0xa0
0xc90: V1061 = 0x2
0xc92: V1062 = EXP 0x2 0xa0
0xc93: V1063 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc94: V1064 = AND 0xffffffffffffffffffffffffffffffffffffffff V647
0xc95: V1065 = 0x70a08231
0xc9a: V1066 = ADDRESS
0xc9b: V1067 = 0x0
0xc9d: V1068 = 0x40
0xc9f: V1069 = M[0x40]
0xca0: V1070 = 0x20
0xca2: V1071 = ADD 0x20 V1069
0xca3: M[V1071] = 0x0
0xca4: V1072 = 0x40
0xca6: V1073 = M[0x40]
0xca7: V1074 = 0xe0
0xca9: V1075 = 0x2
0xcab: V1076 = EXP 0x2 0xe0
0xcac: V1077 = 0xffffffff
0xcb2: V1078 = AND 0x70a08231 0xffffffff
0xcb3: V1079 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xcb5: M[V1073] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xcb6: V1080 = 0x1
0xcb8: V1081 = 0xa0
0xcba: V1082 = 0x2
0xcbc: V1083 = EXP 0x2 0xa0
0xcbd: V1084 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc0: V1085 = AND V1066 0xffffffffffffffffffffffffffffffffffffffff
0xcc1: V1086 = 0x4
0xcc4: V1087 = ADD V1073 0x4
0xcc5: M[V1087] = V1085
0xcc6: V1088 = 0x24
0xcc8: V1089 = ADD 0x24 V1073
0xcc9: V1090 = 0x20
0xccb: V1091 = 0x40
0xccd: V1092 = M[0x40]
0xcd0: V1093 = SUB V1089 V1092
0xcd2: V1094 = 0x0
0xcd6: V1095 = EXTCODESIZE V1064
0xcd7: V1096 = ISZERO V1095
0xcd8: V1097 = ISZERO V1096
0xcd9: V1098 = 0xce1
0xcdc: JUMPI 0xce1 V1097
---
Entry stack: [V12, 0x424, V647, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V1064, 0x70a08231, V1089, 0x20, V1092, V1093, V1092, 0x0, V1064]
Exit stack: [V12, 0x424, V647, 0x0, V647, 0x0, V1064, 0x70a08231, V1089, 0x20, V1092, V1093, V1092, 0x0, V1064]

================================

Block 0xcdd
[0xcdd:0xce0]
---
Predecessors: [0xc87]
Successors: []
---
0xcdd PUSH1 0x0
0xcdf DUP1
0xce0 REVERT
---
0xcdd: V1099 = 0x0
0xce0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x424, V647, 0x0, V647, 0x0, V1064, 0x70a08231, V1089, 0x20, V1092, V1093, V1092, 0x0, V1064]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x424, V647, 0x0, V647, 0x0, V1064, 0x70a08231, V1089, 0x20, V1092, V1093, V1092, 0x0, V1064]

================================

Block 0xce1
[0xce1:0xced]
---
Predecessors: [0xc87]
Successors: [0xcee, 0xcf2]
---
0xce1 JUMPDEST
0xce2 PUSH2 0x2c6
0xce5 GAS
0xce6 SUB
0xce7 CALL
0xce8 ISZERO
0xce9 ISZERO
0xcea PUSH2 0xcf2
0xced JUMPI
---
0xce1: JUMPDEST 
0xce2: V1100 = 0x2c6
0xce5: V1101 = GAS
0xce6: V1102 = SUB V1101 0x2c6
0xce7: V1103 = CALL V1102 V1064 0x0 V1092 V1093 V1092 0x20
0xce8: V1104 = ISZERO V1103
0xce9: V1105 = ISZERO V1104
0xcea: V1106 = 0xcf2
0xced: JUMPI 0xcf2 V1105
---
Entry stack: [V12, 0x424, V647, 0x0, V647, 0x0, V1064, 0x70a08231, V1089, 0x20, V1092, V1093, V1092, 0x0, V1064]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x424, V647, 0x0, V647, 0x0, V1064, 0x70a08231, V1089]

================================

Block 0xcee
[0xcee:0xcf1]
---
Predecessors: [0xce1]
Successors: []
---
0xcee PUSH1 0x0
0xcf0 DUP1
0xcf1 REVERT
---
0xcee: V1107 = 0x0
0xcf1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x424, V647, 0x0, V647, 0x0, V1064, 0x70a08231, V1089]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x424, V647, 0x0, V647, 0x0, V1064, 0x70a08231, V1089]

================================

Block 0xcf2
[0xcf2:0xd5c]
---
Predecessors: [0xce1]
Successors: [0xd5d, 0xd61]
---
0xcf2 JUMPDEST
0xcf3 POP
0xcf4 POP
0xcf5 POP
0xcf6 PUSH1 0x40
0xcf8 MLOAD
0xcf9 DUP1
0xcfa MLOAD
0xcfb PUSH1 0x1
0xcfd SLOAD
0xcfe SWAP1
0xcff SWAP3
0xd00 POP
0xd01 PUSH1 0x1
0xd03 PUSH1 0xa0
0xd05 PUSH1 0x2
0xd07 EXP
0xd08 SUB
0xd09 DUP1
0xd0a DUP6
0xd0b AND
0xd0c SWAP3
0xd0d POP
0xd0e PUSH4 0xa9059cbb
0xd13 SWAP2
0xd14 AND
0xd15 DUP4
0xd16 PUSH1 0x0
0xd18 PUSH1 0x40
0xd1a MLOAD
0xd1b PUSH1 0x20
0xd1d ADD
0xd1e MSTORE
0xd1f PUSH1 0x40
0xd21 MLOAD
0xd22 PUSH1 0xe0
0xd24 PUSH1 0x2
0xd26 EXP
0xd27 PUSH4 0xffffffff
0xd2c DUP6
0xd2d AND
0xd2e MUL
0xd2f DUP2
0xd30 MSTORE
0xd31 PUSH1 0x1
0xd33 PUSH1 0xa0
0xd35 PUSH1 0x2
0xd37 EXP
0xd38 SUB
0xd39 SWAP1
0xd3a SWAP3
0xd3b AND
0xd3c PUSH1 0x4
0xd3e DUP4
0xd3f ADD
0xd40 MSTORE
0xd41 PUSH1 0x24
0xd43 DUP3
0xd44 ADD
0xd45 MSTORE
0xd46 PUSH1 0x44
0xd48 ADD
0xd49 PUSH1 0x20
0xd4b PUSH1 0x40
0xd4d MLOAD
0xd4e DUP1
0xd4f DUP4
0xd50 SUB
0xd51 DUP2
0xd52 PUSH1 0x0
0xd54 DUP8
0xd55 DUP1
0xd56 EXTCODESIZE
0xd57 ISZERO
0xd58 ISZERO
0xd59 PUSH2 0xd61
0xd5c JUMPI
---
0xcf2: JUMPDEST 
0xcf6: V1108 = 0x40
0xcf8: V1109 = M[0x40]
0xcfa: V1110 = M[V1109]
0xcfb: V1111 = 0x1
0xcfd: V1112 = S[0x1]
0xd01: V1113 = 0x1
0xd03: V1114 = 0xa0
0xd05: V1115 = 0x2
0xd07: V1116 = EXP 0x2 0xa0
0xd08: V1117 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd0b: V1118 = AND V647 0xffffffffffffffffffffffffffffffffffffffff
0xd0e: V1119 = 0xa9059cbb
0xd14: V1120 = AND V1112 0xffffffffffffffffffffffffffffffffffffffff
0xd16: V1121 = 0x0
0xd18: V1122 = 0x40
0xd1a: V1123 = M[0x40]
0xd1b: V1124 = 0x20
0xd1d: V1125 = ADD 0x20 V1123
0xd1e: M[V1125] = 0x0
0xd1f: V1126 = 0x40
0xd21: V1127 = M[0x40]
0xd22: V1128 = 0xe0
0xd24: V1129 = 0x2
0xd26: V1130 = EXP 0x2 0xe0
0xd27: V1131 = 0xffffffff
0xd2d: V1132 = AND 0xa9059cbb 0xffffffff
0xd2e: V1133 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xd30: M[V1127] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xd31: V1134 = 0x1
0xd33: V1135 = 0xa0
0xd35: V1136 = 0x2
0xd37: V1137 = EXP 0x2 0xa0
0xd38: V1138 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd3b: V1139 = AND V1120 0xffffffffffffffffffffffffffffffffffffffff
0xd3c: V1140 = 0x4
0xd3f: V1141 = ADD V1127 0x4
0xd40: M[V1141] = V1139
0xd41: V1142 = 0x24
0xd44: V1143 = ADD V1127 0x24
0xd45: M[V1143] = V1110
0xd46: V1144 = 0x44
0xd48: V1145 = ADD 0x44 V1127
0xd49: V1146 = 0x20
0xd4b: V1147 = 0x40
0xd4d: V1148 = M[0x40]
0xd50: V1149 = SUB V1145 V1148
0xd52: V1150 = 0x0
0xd56: V1151 = EXTCODESIZE V1118
0xd57: V1152 = ISZERO V1151
0xd58: V1153 = ISZERO V1152
0xd59: V1154 = 0xd61
0xd5c: JUMPI 0xd61 V1153
---
Entry stack: [V12, 0x424, V647, 0x0, V647, 0x0, V1064, 0x70a08231, V1089]
Stack pops: 5
Stack additions: [S4, V1110, V1118, 0xa9059cbb, V1145, 0x20, V1148, V1149, V1148, 0x0, V1118]
Exit stack: [V12, 0x424, V647, 0x0, V647, V1110, V1118, 0xa9059cbb, V1145, 0x20, V1148, V1149, V1148, 0x0, V1118]

================================

Block 0xd5d
[0xd5d:0xd60]
---
Predecessors: [0xcf2]
Successors: []
---
0xd5d PUSH1 0x0
0xd5f DUP1
0xd60 REVERT
---
0xd5d: V1155 = 0x0
0xd60: REVERT 0x0 0x0
---
Entry stack: [V12, 0x424, V647, 0x0, V647, V1110, V1118, 0xa9059cbb, V1145, 0x20, V1148, V1149, V1148, 0x0, V1118]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x424, V647, 0x0, V647, V1110, V1118, 0xa9059cbb, V1145, 0x20, V1148, V1149, V1148, 0x0, V1118]

================================

Block 0xd61
[0xd61:0xd6d]
---
Predecessors: [0xcf2]
Successors: [0xd6e, 0xd72]
---
0xd61 JUMPDEST
0xd62 PUSH2 0x2c6
0xd65 GAS
0xd66 SUB
0xd67 CALL
0xd68 ISZERO
0xd69 ISZERO
0xd6a PUSH2 0xd72
0xd6d JUMPI
---
0xd61: JUMPDEST 
0xd62: V1156 = 0x2c6
0xd65: V1157 = GAS
0xd66: V1158 = SUB V1157 0x2c6
0xd67: V1159 = CALL V1158 V1118 0x0 V1148 V1149 V1148 0x20
0xd68: V1160 = ISZERO V1159
0xd69: V1161 = ISZERO V1160
0xd6a: V1162 = 0xd72
0xd6d: JUMPI 0xd72 V1161
---
Entry stack: [V12, 0x424, V647, 0x0, V647, V1110, V1118, 0xa9059cbb, V1145, 0x20, V1148, V1149, V1148, 0x0, V1118]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x424, V647, 0x0, V647, V1110, V1118, 0xa9059cbb, V1145]

================================

Block 0xd6e
[0xd6e:0xd71]
---
Predecessors: [0xd61]
Successors: []
---
0xd6e PUSH1 0x0
0xd70 DUP1
0xd71 REVERT
---
0xd6e: V1163 = 0x0
0xd71: REVERT 0x0 0x0
---
Entry stack: [V12, 0x424, V647, 0x0, V647, V1110, V1118, 0xa9059cbb, V1145]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x424, V647, 0x0, V647, V1110, V1118, 0xa9059cbb, V1145]

================================

Block 0xd72
[0xd72:0xd7d]
---
Predecessors: [0xd61]
Successors: [0xd7e]
---
0xd72 JUMPDEST
0xd73 POP
0xd74 POP
0xd75 POP
0xd76 PUSH1 0x40
0xd78 MLOAD
0xd79 DUP1
0xd7a MLOAD
0xd7b SWAP4
0xd7c POP
0xd7d POP
---
0xd72: JUMPDEST 
0xd76: V1164 = 0x40
0xd78: V1165 = M[0x40]
0xd7a: V1166 = M[V1165]
---
Entry stack: [V12, 0x424, V647, 0x0, V647, V1110, V1118, 0xa9059cbb, V1145]
Stack pops: 6
Stack additions: [V1166, S4, S3]
Exit stack: [V12, 0x424, V647, V1166, V647, V1110]

================================

Block 0xd7e
[0xd7e:0xd84]
---
Predecessors: [0xd72]
Successors: [0x424]
---
0xd7e JUMPDEST
0xd7f POP
0xd80 POP
0xd81 SWAP2
0xd82 SWAP1
0xd83 POP
0xd84 JUMP
---
0xd7e: JUMPDEST 
0xd84: JUMP 0x424
---
Entry stack: [V12, 0x424, V647, V1166, V647, V1110]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V12, V1166]

================================

Block 0xd85
[0xd85:0xd9b]
---
Predecessors: [0x756]
Successors: [0xd9c, 0xda0]
---
0xd85 JUMPDEST
0xd86 PUSH1 0x0
0xd88 SLOAD
0xd89 CALLER
0xd8a PUSH1 0x1
0xd8c PUSH1 0xa0
0xd8e PUSH1 0x2
0xd90 EXP
0xd91 SUB
0xd92 SWAP1
0xd93 DUP2
0xd94 AND
0xd95 SWAP2
0xd96 AND
0xd97 EQ
0xd98 PUSH2 0xda0
0xd9b JUMPI
---
0xd85: JUMPDEST 
0xd86: V1167 = 0x0
0xd88: V1168 = S[0x0]
0xd89: V1169 = CALLER
0xd8a: V1170 = 0x1
0xd8c: V1171 = 0xa0
0xd8e: V1172 = 0x2
0xd90: V1173 = EXP 0x2 0xa0
0xd91: V1174 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd94: V1175 = AND 0xffffffffffffffffffffffffffffffffffffffff V1169
0xd96: V1176 = AND V1168 0xffffffffffffffffffffffffffffffffffffffff
0xd97: V1177 = EQ V1176 V1175
0xd98: V1178 = 0xda0
0xd9b: JUMPI 0xda0 V1177
---
Entry stack: [V12, 0x375, V670]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375, V670]

================================

Block 0xd9c
[0xd9c:0xd9f]
---
Predecessors: [0xd85]
Successors: []
---
0xd9c PUSH1 0x0
0xd9e DUP1
0xd9f REVERT
---
0xd9c: V1179 = 0x0
0xd9f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x375, V670]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375, V670]

================================

Block 0xda0
[0xda0:0xdc8]
---
Predecessors: [0xd85]
Successors: [0xdc9]
---
0xda0 JUMPDEST
0xda1 PUSH1 0x0
0xda3 DUP1
0xda4 SLOAD
0xda5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdba NOT
0xdbb AND
0xdbc PUSH1 0x1
0xdbe PUSH1 0xa0
0xdc0 PUSH1 0x2
0xdc2 EXP
0xdc3 SUB
0xdc4 DUP4
0xdc5 AND
0xdc6 OR
0xdc7 SWAP1
0xdc8 SSTORE
---
0xda0: JUMPDEST 
0xda1: V1180 = 0x0
0xda4: V1181 = S[0x0]
0xda5: V1182 = 0xffffffffffffffffffffffffffffffffffffffff
0xdba: V1183 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xdbb: V1184 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1181
0xdbc: V1185 = 0x1
0xdbe: V1186 = 0xa0
0xdc0: V1187 = 0x2
0xdc2: V1188 = EXP 0x2 0xa0
0xdc3: V1189 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdc5: V1190 = AND V670 0xffffffffffffffffffffffffffffffffffffffff
0xdc6: V1191 = OR V1190 V1184
0xdc8: S[0x0] = V1191
---
Entry stack: [V12, 0x375, V670]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x375, V670]

================================

Block 0xdc9
[0xdc9:0xdc9]
---
Predecessors: [0xda0]
Successors: [0xdca]
---
0xdc9 JUMPDEST
---
0xdc9: JUMPDEST 
---
Entry stack: [V12, 0x375, V670]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x375, V670]

================================

Block 0xdca
[0xdca:0xdcc]
---
Predecessors: [0xdc9]
Successors: [0x375]
---
0xdca JUMPDEST
0xdcb POP
0xdcc JUMP
---
0xdca: JUMPDEST 
0xdcc: JUMP 0x375
---
Entry stack: [V12, 0x375, V670]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xdcd
[0xdcd:0xdde]
---
Predecessors: [0x76c, 0xad3]
Successors: [0x774, 0xadb]
---
0xdcd JUMPDEST
0xdce PUSH1 0x20
0xdd0 PUSH1 0x40
0xdd2 MLOAD
0xdd3 SWAP1
0xdd4 DUP2
0xdd5 ADD
0xdd6 PUSH1 0x40
0xdd8 MSTORE
0xdd9 PUSH1 0x0
0xddb DUP2
0xddc MSTORE
0xddd SWAP1
0xdde JUMP
---
0xdcd: JUMPDEST 
0xdce: V1192 = 0x20
0xdd0: V1193 = 0x40
0xdd2: V1194 = M[0x40]
0xdd5: V1195 = ADD V1194 0x20
0xdd6: V1196 = 0x40
0xdd8: M[0x40] = V1195
0xdd9: V1197 = 0x0
0xddc: M[V1194] = 0x0
0xdde: JUMP {0x774, 0xadb}
---
Entry stack: [V12, 0x38a, {0x774, 0xadb}]
Stack pops: 1
Stack additions: [V1194]
Exit stack: [V12, 0x38a, V1194]

================================

Block 0xddf
[0xddf:0xe2a]
---
Predecessors: []
Successors: []
---
0xddf STOP
0xde0 MISSING 0xdd
0xde1 CALLCODE
0xde2 MSTORE
0xde3 MISSING 0xad
0xde4 SHL
0xde5 MISSING 0xe2
0xde6 MISSING 0xc8
0xde7 SWAP12
0xde8 PUSH10 0xc2b068fc378daa952ba7
0xdf3 CALL
0xdf4 PUSH4 0xc4a11628
0xdf9 CREATE2
0xdfa GAS
0xdfb MISSING 0x4d
0xdfc CREATE2
0xdfd MISSING 0x23
0xdfe MISSING 0xb3
0xdff MISSING 0xef
0xe00 LOG1
0xe01 PUSH6 0x627a7a723058
0xe08 SHA3
0xe09 MISSING 0x5f
0xe0a MISSING 0xae
0xe0b BYTE
0xe0c MISSING 0xac
0xe0d MISSING 0x4f
0xe0e MISSING 0xc0
0xe0f MISSING 0x49
0xe10 MISSING 0x24
0xe11 MISSING 0xc9
0xe12 MULMOD
0xe13 MISSING 0xc7
0xe14 DUP8
0xe15 MISSING 0xa6
0xe16 MISSING 0xb5
0xe17 EQ
0xe18 MISSING 0x47
0xe19 MISSING 0xf8
0xe1a PUSH16 0x8fd3856dfbbaef4a54e00c85b6230029
---
0xddf: STOP 
0xde0: MISSING 0xdd
0xde1: V1198 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0xde2: M[V1198] = S7
0xde3: MISSING 0xad
0xde4: V1199 = SHL S0 S1
0xde5: MISSING 0xe2
0xde6: MISSING 0xc8
0xde8: V1200 = 0xc2b068fc378daa952ba7
0xdf3: V1201 = CALL 0xc2b068fc378daa952ba7 S12 S1 S2 S3 S4 S5
0xdf4: V1202 = 0xc4a11628
0xdf9: V1203 = CREATE2 0xc4a11628 V1201 S6 S7
0xdfa: V1204 = GAS
0xdfb: MISSING 0x4d
0xdfc: V1205 = CREATE2 S0 S1 S2 S3
0xdfd: MISSING 0x23
0xdfe: MISSING 0xb3
0xdff: MISSING 0xef
0xe00: LOG S0 S1 S2
0xe01: V1206 = 0x627a7a723058
0xe08: V1207 = SHA3 0x627a7a723058 S3
0xe09: MISSING 0x5f
0xe0a: MISSING 0xae
0xe0b: V1208 = BYTE S0 S1
0xe0c: MISSING 0xac
0xe0d: MISSING 0x4f
0xe0e: MISSING 0xc0
0xe0f: MISSING 0x49
0xe10: MISSING 0x24
0xe11: MISSING 0xc9
0xe12: V1209 = MULMOD S0 S1 S2
0xe13: MISSING 0xc7
0xe15: MISSING 0xa6
0xe16: MISSING 0xb5
0xe17: V1210 = EQ S0 S1
0xe18: MISSING 0x47
0xe19: MISSING 0xf8
0xe1a: V1211 = 0x8fd3856dfbbaef4a54e00c85b6230029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1199, V1204, V1203, S8, S9, S10, S11, S0, V1205, V1207, V1208, V1209, S7, S0, S1, S2, S3, S4, S5, S6, S7, V1210, 0x8fd3856dfbbaef4a54e00c85b6230029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x377
Exit block: 0x3f4
Body: 0x377, 0x37e, 0x382, 0x38a, 0x3ae, 0x3b7, 0x3bf, 0x3c7, 0x3db, 0x3f4, 0x76c, 0x774, 0x7ab

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x402
Exit block: 0x424
Body: 0x402, 0x409, 0x40d, 0x424, 0x7ae, 0x7ba, 0x7e3, 0x7e9, 0x7f0, 0x854

Function 2:
Public function signature: 0xdcf4b8f
Entry block: 0x438
Exit block: 0x44b
Body: 0x438, 0x43f, 0x443, 0x44b, 0x85a

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x45d
Exit block: 0x44b
Body: 0x44b, 0x45d, 0x464, 0x468, 0x860

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x482
Exit block: 0x424
Body: 0x424, 0x482, 0x489, 0x48d, 0x866, 0x877, 0x87b, 0x883, 0x88b, 0x8e8, 0x8ea, 0x8f1, 0x8f4, 0x8fa, 0x974, 0x979, 0x97a

Function 5:
Public function signature: 0x313ce567
Entry block: 0x4be
Exit block: 0x4d1
Body: 0x4be, 0x4c5, 0x4c9, 0x4d1, 0x986, 0x989

Function 6:
Public function signature: 0x64acdb77
Entry block: 0x4e7
Exit block: 0x375
Body: 0x375, 0x4e7, 0x4ee, 0x4f2, 0x98c, 0x9a3, 0x9a7, 0x9c6

Function 7:
Public function signature: 0x70a08231
Entry block: 0x4fc
Exit block: 0x44b
Body: 0x44b, 0x4fc, 0x503, 0x507, 0x9c8, 0x9e2

Function 8:
Public function signature: 0x79c65068
Entry block: 0x52d
Exit block: 0x375
Body: 0x375, 0x52d, 0x534, 0x538, 0x9e7, 0x9fe, 0xa02, 0xa6c, 0xa6d

Function 9:
Public function signature: 0x8da5cb5b
Entry block: 0x551
Exit block: 0x564
Body: 0x551, 0x558, 0x55c, 0x564, 0xa71

Function 10:
Public function signature: 0x8f580996
Entry block: 0x580
Exit block: 0x375
Body: 0x375, 0x580, 0x587, 0x58b, 0xa80, 0xa97, 0xa9b, 0xad1

Function 11:
Public function signature: 0x95d89b41
Entry block: 0x595
Exit block: 0x3f4
Body: 0x38a, 0x3ae, 0x3b7, 0x3bf, 0x3c7, 0x3db, 0x3f4, 0x595, 0x59c, 0x5a0, 0xad3, 0xadb, 0xb12

Function 12:
Public function signature: 0x98b01fe3
Entry block: 0x620
Exit block: 0x44b
Body: 0x44b, 0x620, 0x627, 0x62b, 0xb15

Function 13:
Public function signature: 0xa9059cbb
Entry block: 0x645
Exit block: 0x424
Body: 0x424, 0x645, 0x64c, 0x650, 0xb1b, 0xb2a, 0xb2e, 0xb36, 0xb3e, 0xb76, 0xb79, 0xb7f, 0xbda, 0xbdf, 0xbe0

Function 14:
Public function signature: 0xc59d4847
Entry block: 0x67b
Exit block: 0x68e
Body: 0x67b, 0x682, 0x686, 0x68e, 0xbe9, 0xc11

Function 15:
Public function signature: 0xda040c0f
Entry block: 0x6ba
Exit block: 0x424
Body: 0x424, 0x6ba, 0x6c1, 0x6c5, 0xc17

Function 16:
Public function signature: 0xdd62ed3e
Entry block: 0x6e1
Exit block: 0x44b
Body: 0x44b, 0x6e1, 0x6e8, 0x6ec, 0xc38, 0xc5f

Function 17:
Public function signature: 0xe58fc54c
Entry block: 0x718
Exit block: 0x424
Body: 0x424, 0x718, 0x71f, 0x723, 0xc65, 0xc83, 0xc87, 0xcdd, 0xce1, 0xcee, 0xcf2, 0xd5d, 0xd61, 0xd6e, 0xd72, 0xd7e

Function 18:
Public function signature: 0xf2fde38b
Entry block: 0x74b
Exit block: 0x375
Body: 0x375, 0x74b, 0x752, 0x756, 0xd85, 0xd9c, 0xda0, 0xdc9, 0xdca

Function 19:
Public fallback function
Entry block: 0xeb
Exit block: 0x1cd
Body: 0xeb, 0xef, 0x10c, 0x110, 0x118, 0x11c, 0x14c, 0x150, 0x170, 0x1cd, 0x1d1, 0x1ec, 0x224, 0x227, 0x257, 0x25d, 0x260, 0x264, 0x294, 0x29a, 0x29d, 0x2a1, 0x2d1, 0x2d7, 0x2da, 0x2de, 0x2ef, 0x2f5, 0x2f8, 0x31e, 0x31f, 0x36f, 0x375

