Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x58]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x57ea89b6
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x58
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x57ea89b6
0x3b: V13 = EQ V11 0x57ea89b6
0x3c: V14 = 0x58
0x3f: JUMPI 0x58 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x6b]
---
0x40 DUP1
0x41 PUSH4 0x75f96ead
0x46 EQ
0x47 PUSH2 0x6b
0x4a JUMPI
---
0x41: V15 = 0x75f96ead
0x46: V16 = EQ 0x75f96ead V11
0x47: V17 = 0x6b
0x4a: JUMPI 0x6b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x76]
---
0x4b DUP1
0x4c PUSH4 0xc2610cda
0x51 EQ
0x52 PUSH2 0x76
0x55 JUMPI
---
0x4c: V18 = 0xc2610cda
0x51: V19 = EQ 0xc2610cda V11
0x52: V20 = 0x76
0x55: JUMPI 0x76 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x57]
---
Predecessors: [0x0, 0x4b, 0x109, 0x1a9]
Successors: []
---
0x56 JUMPDEST
0x57 STOP
---
0x56: JUMPDEST 
0x57: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5e]
---
Predecessors: [0xd]
Successors: [0x5f, 0x63]
---
0x58 JUMPDEST
0x59 CALLVALUE
0x5a ISZERO
0x5b PUSH2 0x63
0x5e JUMPI
---
0x58: JUMPDEST 
0x59: V21 = CALLVALUE
0x5a: V22 = ISZERO V21
0x5b: V23 = 0x63
0x5e: JUMPI 0x63 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5f
[0x5f:0x62]
---
Predecessors: [0x58]
Successors: []
---
0x5f PUSH1 0x0
0x61 DUP1
0x62 REVERT
---
0x5f: V24 = 0x0
0x62: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0x58]
Successors: [0x9b]
---
0x63 JUMPDEST
0x64 PUSH2 0x56
0x67 PUSH2 0x9b
0x6a JUMP
---
0x63: JUMPDEST 
0x64: V25 = 0x56
0x67: V26 = 0x9b
0x6a: JUMP 0x9b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x40]
Successors: [0x10b]
---
0x6b JUMPDEST
0x6c PUSH2 0x56
0x6f PUSH1 0x4
0x71 CALLDATALOAD
0x72 PUSH2 0x10b
0x75 JUMP
---
0x6b: JUMPDEST 
0x6c: V27 = 0x56
0x6f: V28 = 0x4
0x71: V29 = CALLDATALOAD 0x4
0x72: V30 = 0x10b
0x75: JUMP 0x10b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x56, V29]
Exit stack: [V11, 0x56, V29]

================================

Block 0x76
[0x76:0x7c]
---
Predecessors: [0x4b]
Successors: [0x7d, 0x81]
---
0x76 JUMPDEST
0x77 CALLVALUE
0x78 ISZERO
0x79 PUSH2 0x81
0x7c JUMPI
---
0x76: JUMPDEST 
0x77: V31 = CALLVALUE
0x78: V32 = ISZERO V31
0x79: V33 = 0x81
0x7c: JUMPI 0x81 V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0x80]
---
Predecessors: [0x76]
Successors: []
---
0x7d PUSH1 0x0
0x7f DUP1
0x80 REVERT
---
0x7d: V34 = 0x0
0x80: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x81
[0x81:0x88]
---
Predecessors: [0x76]
Successors: [0x1ac]
---
0x81 JUMPDEST
0x82 PUSH2 0x89
0x85 PUSH2 0x1ac
0x88 JUMP
---
0x81: JUMPDEST 
0x82: V35 = 0x89
0x85: V36 = 0x1ac
0x88: JUMP 0x1ac
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x89]
Exit stack: [V11, 0x89]

================================

Block 0x89
[0x89:0x9a]
---
Predecessors: [0x1ac]
Successors: []
---
0x89 JUMPDEST
0x8a PUSH1 0x40
0x8c MLOAD
0x8d SWAP1
0x8e DUP2
0x8f MSTORE
0x90 PUSH1 0x20
0x92 ADD
0x93 PUSH1 0x40
0x95 MLOAD
0x96 DUP1
0x97 SWAP2
0x98 SUB
0x99 SWAP1
0x9a RETURN
---
0x89: JUMPDEST 
0x8a: V37 = 0x40
0x8c: V38 = M[0x40]
0x8f: M[V38] = V122
0x90: V39 = 0x20
0x92: V40 = ADD 0x20 V38
0x93: V41 = 0x40
0x95: V42 = M[0x40]
0x98: V43 = SUB V40 V42
0x9a: RETURN V42 V43
---
Entry stack: [V11, 0x89, V122]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x89]

================================

Block 0x9b
[0x9b:0xbe]
---
Predecessors: [0x63]
Successors: [0xbf, 0xc3]
---
0x9b JUMPDEST
0x9c PUSH1 0x0
0x9e SLOAD
0x9f CALLER
0xa0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5 SWAP1
0xb6 DUP2
0xb7 AND
0xb8 SWAP2
0xb9 AND
0xba EQ
0xbb PUSH2 0xc3
0xbe JUMPI
---
0x9b: JUMPDEST 
0x9c: V44 = 0x0
0x9e: V45 = S[0x0]
0x9f: V46 = CALLER
0xa0: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xb9: V49 = AND V45 0xffffffffffffffffffffffffffffffffffffffff
0xba: V50 = EQ V49 V48
0xbb: V51 = 0xc3
0xbe: JUMPI 0xc3 V50
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0x9b]
Successors: []
---
0xbf PUSH1 0x0
0xc1 DUP1
0xc2 REVERT
---
0xbf: V52 = 0x0
0xc2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0xc3
[0xc3:0x104]
---
Predecessors: [0x9b]
Successors: [0x105, 0x109]
---
0xc3 JUMPDEST
0xc4 PUSH1 0x0
0xc6 SLOAD
0xc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc SWAP1
0xdd DUP2
0xde AND
0xdf SWAP1
0xe0 ADDRESS
0xe1 AND
0xe2 BALANCE
0xe3 DUP1
0xe4 ISZERO
0xe5 PUSH2 0x8fc
0xe8 MUL
0xe9 SWAP1
0xea PUSH1 0x40
0xec MLOAD
0xed PUSH1 0x0
0xef PUSH1 0x40
0xf1 MLOAD
0xf2 DUP1
0xf3 DUP4
0xf4 SUB
0xf5 DUP2
0xf6 DUP6
0xf7 DUP9
0xf8 DUP9
0xf9 CALL
0xfa SWAP4
0xfb POP
0xfc POP
0xfd POP
0xfe POP
0xff ISZERO
0x100 ISZERO
0x101 PUSH2 0x109
0x104 JUMPI
---
0xc3: JUMPDEST 
0xc4: V53 = 0x0
0xc6: V54 = S[0x0]
0xc7: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xde: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xe0: V57 = ADDRESS
0xe1: V58 = AND V57 0xffffffffffffffffffffffffffffffffffffffff
0xe2: V59 = BALANCE V58
0xe4: V60 = ISZERO V59
0xe5: V61 = 0x8fc
0xe8: V62 = MUL 0x8fc V60
0xea: V63 = 0x40
0xec: V64 = M[0x40]
0xed: V65 = 0x0
0xef: V66 = 0x40
0xf1: V67 = M[0x40]
0xf4: V68 = SUB V64 V67
0xf9: V69 = CALL V62 V56 V59 V67 V68 V67 0x0
0xff: V70 = ISZERO V69
0x100: V71 = ISZERO V70
0x101: V72 = 0x109
0x104: JUMPI 0x109 V71
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x105
[0x105:0x108]
---
Predecessors: [0xc3]
Successors: []
---
0x105 PUSH1 0x0
0x107 DUP1
0x108 REVERT
---
0x105: V73 = 0x0
0x108: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x109
[0x109:0x10a]
---
Predecessors: [0xc3]
Successors: [0x56]
---
0x109 JUMPDEST
0x10a JUMP
---
0x109: JUMPDEST 
0x10a: JUMP 0x56
---
Entry stack: [V11, 0x56]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x10b
[0x10b:0x12c]
---
Predecessors: [0x6b]
Successors: [0x12d, 0x139]
---
0x10b JUMPDEST
0x10c ADDRESS
0x10d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x122 AND
0x123 BALANCE
0x124 CALLVALUE
0x125 LT
0x126 ISZERO
0x127 DUP1
0x128 ISZERO
0x129 PUSH2 0x139
0x12c JUMPI
---
0x10b: JUMPDEST 
0x10c: V74 = ADDRESS
0x10d: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x122: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x123: V77 = BALANCE V76
0x124: V78 = CALLVALUE
0x125: V79 = LT V78 V77
0x126: V80 = ISZERO V79
0x128: V81 = ISZERO V80
0x129: V82 = 0x139
0x12c: JUMPI 0x139 V81
---
Entry stack: [V11, 0x56, V29]
Stack pops: 0
Stack additions: [V80]
Exit stack: [V11, 0x56, V29, V80]

================================

Block 0x12d
[0x12d:0x138]
---
Predecessors: [0x10b]
Successors: [0x139]
---
0x12d POP
0x12e PUSH8 0x16345785d8a0000
0x137 CALLVALUE
0x138 GT
---
0x12e: V83 = 0x16345785d8a0000
0x137: V84 = CALLVALUE
0x138: V85 = GT V84 0x16345785d8a0000
---
Entry stack: [V11, 0x56, V29, V80]
Stack pops: 1
Stack additions: [V85]
Exit stack: [V11, 0x56, V29, V85]

================================

Block 0x139
[0x139:0x13e]
---
Predecessors: [0x10b, 0x12d]
Successors: [0x13f, 0x1a9]
---
0x139 JUMPDEST
0x13a ISZERO
0x13b PUSH2 0x1a9
0x13e JUMPI
---
0x139: JUMPDEST 
0x13a: V86 = ISZERO S0
0x13b: V87 = 0x1a9
0x13e: JUMPI 0x1a9 V86
---
Entry stack: [V11, 0x56, V29, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x56, V29]

================================

Block 0x13f
[0x13f:0x150]
---
Predecessors: [0x139]
Successors: [0x151, 0x1a9]
---
0x13f PUSH1 0x1
0x141 SLOAD
0x142 PUSH1 0x2
0x144 DUP3
0x145 DUP1
0x146 MUL
0x147 DIV
0x148 PUSH1 0x7
0x14a ADD
0x14b EQ
0x14c ISZERO
0x14d PUSH2 0x1a9
0x150 JUMPI
---
0x13f: V88 = 0x1
0x141: V89 = S[0x1]
0x142: V90 = 0x2
0x146: V91 = MUL V29 V29
0x147: V92 = DIV V91 0x2
0x148: V93 = 0x7
0x14a: V94 = ADD 0x7 V92
0x14b: V95 = EQ V94 V89
0x14c: V96 = ISZERO V95
0x14d: V97 = 0x1a9
0x150: JUMPI 0x1a9 V96
---
Entry stack: [V11, 0x56, V29]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x56, V29]

================================

Block 0x151
[0x151:0x1a4]
---
Predecessors: [0x13f]
Successors: [0x1a5, 0x1a9]
---
0x151 CALLER
0x152 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x167 AND
0x168 PUSH2 0x8fc
0x16b CALLVALUE
0x16c ADDRESS
0x16d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x182 AND
0x183 BALANCE
0x184 ADD
0x185 SWAP1
0x186 DUP2
0x187 ISZERO
0x188 MUL
0x189 SWAP1
0x18a PUSH1 0x40
0x18c MLOAD
0x18d PUSH1 0x0
0x18f PUSH1 0x40
0x191 MLOAD
0x192 DUP1
0x193 DUP4
0x194 SUB
0x195 DUP2
0x196 DUP6
0x197 DUP9
0x198 DUP9
0x199 CALL
0x19a SWAP4
0x19b POP
0x19c POP
0x19d POP
0x19e POP
0x19f ISZERO
0x1a0 ISZERO
0x1a1 PUSH2 0x1a9
0x1a4 JUMPI
---
0x151: V98 = CALLER
0x152: V99 = 0xffffffffffffffffffffffffffffffffffffffff
0x167: V100 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x168: V101 = 0x8fc
0x16b: V102 = CALLVALUE
0x16c: V103 = ADDRESS
0x16d: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x182: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x183: V106 = BALANCE V105
0x184: V107 = ADD V106 V102
0x187: V108 = ISZERO V107
0x188: V109 = MUL V108 0x8fc
0x18a: V110 = 0x40
0x18c: V111 = M[0x40]
0x18d: V112 = 0x0
0x18f: V113 = 0x40
0x191: V114 = M[0x40]
0x194: V115 = SUB V111 V114
0x199: V116 = CALL V109 V100 V107 V114 V115 V114 0x0
0x19f: V117 = ISZERO V116
0x1a0: V118 = ISZERO V117
0x1a1: V119 = 0x1a9
0x1a4: JUMPI 0x1a9 V118
---
Entry stack: [V11, 0x56, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V29]

================================

Block 0x1a5
[0x1a5:0x1a8]
---
Predecessors: [0x151]
Successors: []
---
0x1a5 PUSH1 0x0
0x1a7 DUP1
0x1a8 REVERT
---
0x1a5: V120 = 0x0
0x1a8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V29]

================================

Block 0x1a9
[0x1a9:0x1ab]
---
Predecessors: [0x139, 0x13f, 0x151]
Successors: [0x56]
---
0x1a9 JUMPDEST
0x1aa POP
0x1ab JUMP
---
0x1a9: JUMPDEST 
0x1ab: JUMP 0x56
---
Entry stack: [V11, 0x56, V29]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ac
[0x1ac:0x1b1]
---
Predecessors: [0x81]
Successors: [0x89]
---
0x1ac JUMPDEST
0x1ad PUSH1 0x1
0x1af SLOAD
0x1b0 DUP2
0x1b1 JUMP
---
0x1ac: JUMPDEST 
0x1ad: V121 = 0x1
0x1af: V122 = S[0x1]
0x1b1: JUMP 0x89
---
Entry stack: [V11, 0x89]
Stack pops: 1
Stack additions: [S0, V122]
Exit stack: [V11, 0x89, V122]

================================

Block 0x1b2
[0x1b2:0x1f5]
---
Predecessors: []
Successors: []
---
0x1b2 STOP
0x1b3 LOG1
0x1b4 PUSH6 0x627a7a723058
0x1bb SHA3
0x1bc DUP13
0x1bd SWAP8
0x1be MISSING 0xa9
0x1bf MISSING 0x47
0x1c0 PUSH21 0x31d3caa6ccb0912af39e6a5cdbd136b43364b4a053
0x1d6 MISSING 0xbf
0x1d7 MISSING 0xaa
0x1d8 MISSING 0xd2
0x1d9 PUSH28 0xa10d0029
---
0x1b2: STOP 
0x1b3: LOG S0 S1 S2
0x1b4: V123 = 0x627a7a723058
0x1bb: V124 = SHA3 0x627a7a723058 S3
0x1be: MISSING 0xa9
0x1bf: MISSING 0x47
0x1c0: V125 = 0x31d3caa6ccb0912af39e6a5cdbd136b43364b4a053
0x1d6: MISSING 0xbf
0x1d7: MISSING 0xaa
0x1d8: MISSING 0xd2
0x1d9: V126 = 0xa10d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S10, V124, S4, S5, S6, S7, S8, S9, S15, S11, S12, S13, S14, S15, 0x31d3caa6ccb0912af39e6a5cdbd136b43364b4a053, 0xa10d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x57ea89b6
Entry block: 0x58
Exit block: 0x56
Body: 0x56, 0x58, 0x5f, 0x63, 0x9b, 0xbf, 0xc3, 0x105, 0x109

Function 1:
Public function signature: 0x75f96ead
Entry block: 0x6b
Exit block: 0x1a5
Body: 0x56, 0x6b, 0x10b, 0x12d, 0x139, 0x13f, 0x151, 0x1a5, 0x1a9

Function 2:
Public function signature: 0xc2610cda
Entry block: 0x76
Exit block: 0x89
Body: 0x76, 0x7d, 0x81, 0x89, 0x1ac

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x56
Body: 0x56

