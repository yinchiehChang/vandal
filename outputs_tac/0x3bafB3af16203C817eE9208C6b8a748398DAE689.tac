Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x54]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x54
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x54
0xa: JUMPI 0x54 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x56]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x3ccfd60b
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x56
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x3ccfd60b
0x39: V12 = EQ V10 0x3ccfd60b
0x3a: V13 = 0x56
0x3d: JUMPI 0x56 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x5e]
---
0x3e DUP1
0x3f PUSH4 0x6f92f186
0x44 EQ
0x45 PUSH2 0x5e
0x48 JUMPI
---
0x3f: V14 = 0x6f92f186
0x44: V15 = EQ 0x6f92f186 V10
0x45: V16 = 0x5e
0x48: JUMPI 0x5e V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x72]
---
0x49 DUP1
0x4a PUSH4 0xb4a99a4e
0x4f EQ
0x50 PUSH2 0x72
0x53 JUMPI
---
0x4a: V17 = 0xb4a99a4e
0x4f: V18 = EQ 0xb4a99a4e V10
0x50: V19 = 0x72
0x53: JUMPI 0x72 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x55]
---
Predecessors: [0x0, 0x49, 0xf5, 0x147]
Successors: []
---
0x54 JUMPDEST
0x55 STOP
---
0x54: JUMPDEST 
0x55: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x56
[0x56:0x5d]
---
Predecessors: [0xb]
Successors: [0xa1]
---
0x56 JUMPDEST
0x57 PUSH2 0x54
0x5a PUSH2 0xa1
0x5d JUMP
---
0x56: JUMPDEST 
0x57: V20 = 0x54
0x5a: V21 = 0xa1
0x5d: JUMP 0xa1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x54]
Exit stack: [V10, 0x54]

================================

Block 0x5e
[0x5e:0x71]
---
Predecessors: [0x3e]
Successors: [0xf7]
---
0x5e JUMPDEST
0x5f PUSH2 0x54
0x62 PUSH1 0x1
0x64 PUSH1 0xa0
0x66 PUSH1 0x2
0x68 EXP
0x69 SUB
0x6a PUSH1 0x4
0x6c CALLDATALOAD
0x6d AND
0x6e PUSH2 0xf7
0x71 JUMP
---
0x5e: JUMPDEST 
0x5f: V22 = 0x54
0x62: V23 = 0x1
0x64: V24 = 0xa0
0x66: V25 = 0x2
0x68: V26 = EXP 0x2 0xa0
0x69: V27 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a: V28 = 0x4
0x6c: V29 = CALLDATALOAD 0x4
0x6d: V30 = AND V29 0xffffffffffffffffffffffffffffffffffffffff
0x6e: V31 = 0xf7
0x71: JUMP 0xf7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x54, V30]
Exit stack: [V10, 0x54, V30]

================================

Block 0x72
[0x72:0x78]
---
Predecessors: [0x49]
Successors: [0x79, 0x7d]
---
0x72 JUMPDEST
0x73 CALLVALUE
0x74 ISZERO
0x75 PUSH2 0x7d
0x78 JUMPI
---
0x72: JUMPDEST 
0x73: V32 = CALLVALUE
0x74: V33 = ISZERO V32
0x75: V34 = 0x7d
0x78: JUMPI 0x7d V33
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x79
[0x79:0x7c]
---
Predecessors: [0x72]
Successors: []
---
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x79: V35 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7d
[0x7d:0x84]
---
Predecessors: [0x72]
Successors: [0x14a]
---
0x7d JUMPDEST
0x7e PUSH2 0x85
0x81 PUSH2 0x14a
0x84 JUMP
---
0x7d: JUMPDEST 
0x7e: V36 = 0x85
0x81: V37 = 0x14a
0x84: JUMP 0x14a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x85]
Exit stack: [V10, 0x85]

================================

Block 0x85
[0x85:0xa0]
---
Predecessors: [0x14a]
Successors: []
---
0x85 JUMPDEST
0x86 PUSH1 0x40
0x88 MLOAD
0x89 PUSH1 0x1
0x8b PUSH1 0xa0
0x8d PUSH1 0x2
0x8f EXP
0x90 SUB
0x91 SWAP1
0x92 SWAP2
0x93 AND
0x94 DUP2
0x95 MSTORE
0x96 PUSH1 0x20
0x98 ADD
0x99 PUSH1 0x40
0x9b MLOAD
0x9c DUP1
0x9d SWAP2
0x9e SUB
0x9f SWAP1
0xa0 RETURN
---
0x85: JUMPDEST 
0x86: V38 = 0x40
0x88: V39 = M[0x40]
0x89: V40 = 0x1
0x8b: V41 = 0xa0
0x8d: V42 = 0x2
0x8f: V43 = EXP 0x2 0xa0
0x90: V44 = SUB 0x10000000000000000000000000000000000000000 0x1
0x93: V45 = AND V137 0xffffffffffffffffffffffffffffffffffffffff
0x95: M[V39] = V45
0x96: V46 = 0x20
0x98: V47 = ADD 0x20 V39
0x99: V48 = 0x40
0x9b: V49 = M[0x40]
0x9e: V50 = SUB V47 V49
0xa0: RETURN V49 V50
---
Entry stack: [V10, 0x85, V137]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x85]

================================

Block 0xa1
[0xa1:0xb7]
---
Predecessors: [0x56]
Successors: [0xb8, 0xbc]
---
0xa1 JUMPDEST
0xa2 PUSH1 0x0
0xa4 SLOAD
0xa5 CALLER
0xa6 PUSH1 0x1
0xa8 PUSH1 0xa0
0xaa PUSH1 0x2
0xac EXP
0xad SUB
0xae SWAP1
0xaf DUP2
0xb0 AND
0xb1 SWAP2
0xb2 AND
0xb3 EQ
0xb4 PUSH2 0xbc
0xb7 JUMPI
---
0xa1: JUMPDEST 
0xa2: V51 = 0x0
0xa4: V52 = S[0x0]
0xa5: V53 = CALLER
0xa6: V54 = 0x1
0xa8: V55 = 0xa0
0xaa: V56 = 0x2
0xac: V57 = EXP 0x2 0xa0
0xad: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0: V59 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0xb2: V60 = AND V52 0xffffffffffffffffffffffffffffffffffffffff
0xb3: V61 = EQ V60 V59
0xb4: V62 = 0xbc
0xb7: JUMPI 0xbc V61
---
Entry stack: [V10, 0x54]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x54]

================================

Block 0xb8
[0xb8:0xbb]
---
Predecessors: [0xa1]
Successors: []
---
0xb8 PUSH1 0x0
0xba DUP1
0xbb REVERT
---
0xb8: V63 = 0x0
0xbb: REVERT 0x0 0x0
---
Entry stack: [V10, 0x54]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x54]

================================

Block 0xbc
[0xbc:0xf0]
---
Predecessors: [0xa1]
Successors: [0xf1, 0xf5]
---
0xbc JUMPDEST
0xbd PUSH1 0x0
0xbf SLOAD
0xc0 PUSH1 0x1
0xc2 PUSH1 0xa0
0xc4 PUSH1 0x2
0xc6 EXP
0xc7 SUB
0xc8 SWAP1
0xc9 DUP2
0xca AND
0xcb SWAP1
0xcc ADDRESS
0xcd AND
0xce BALANCE
0xcf DUP1
0xd0 ISZERO
0xd1 PUSH2 0x8fc
0xd4 MUL
0xd5 SWAP1
0xd6 PUSH1 0x40
0xd8 MLOAD
0xd9 PUSH1 0x0
0xdb PUSH1 0x40
0xdd MLOAD
0xde DUP1
0xdf DUP4
0xe0 SUB
0xe1 DUP2
0xe2 DUP6
0xe3 DUP9
0xe4 DUP9
0xe5 CALL
0xe6 SWAP4
0xe7 POP
0xe8 POP
0xe9 POP
0xea POP
0xeb ISZERO
0xec ISZERO
0xed PUSH2 0xf5
0xf0 JUMPI
---
0xbc: JUMPDEST 
0xbd: V64 = 0x0
0xbf: V65 = S[0x0]
0xc0: V66 = 0x1
0xc2: V67 = 0xa0
0xc4: V68 = 0x2
0xc6: V69 = EXP 0x2 0xa0
0xc7: V70 = SUB 0x10000000000000000000000000000000000000000 0x1
0xca: V71 = AND 0xffffffffffffffffffffffffffffffffffffffff V65
0xcc: V72 = ADDRESS
0xcd: V73 = AND V72 0xffffffffffffffffffffffffffffffffffffffff
0xce: V74 = BALANCE V73
0xd0: V75 = ISZERO V74
0xd1: V76 = 0x8fc
0xd4: V77 = MUL 0x8fc V75
0xd6: V78 = 0x40
0xd8: V79 = M[0x40]
0xd9: V80 = 0x0
0xdb: V81 = 0x40
0xdd: V82 = M[0x40]
0xe0: V83 = SUB V79 V82
0xe5: V84 = CALL V77 V71 V74 V82 V83 V82 0x0
0xeb: V85 = ISZERO V84
0xec: V86 = ISZERO V85
0xed: V87 = 0xf5
0xf0: JUMPI 0xf5 V86
---
Entry stack: [V10, 0x54]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x54]

================================

Block 0xf1
[0xf1:0xf4]
---
Predecessors: [0xbc]
Successors: []
---
0xf1 PUSH1 0x0
0xf3 DUP1
0xf4 REVERT
---
0xf1: V88 = 0x0
0xf4: REVERT 0x0 0x0
---
Entry stack: [V10, 0x54]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x54]

================================

Block 0xf5
[0xf5:0xf6]
---
Predecessors: [0xbc]
Successors: [0x54]
---
0xf5 JUMPDEST
0xf6 JUMP
---
0xf5: JUMPDEST 
0xf6: JUMP 0x54
---
Entry stack: [V10, 0x54]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xf7
[0xf7:0x108]
---
Predecessors: [0x5e]
Successors: [0x109, 0x147]
---
0xf7 JUMPDEST
0xf8 PUSH1 0x1
0xfa PUSH1 0xa0
0xfc PUSH1 0x2
0xfe EXP
0xff SUB
0x100 ADDRESS
0x101 AND
0x102 BALANCE
0x103 CALLVALUE
0x104 LT
0x105 PUSH2 0x147
0x108 JUMPI
---
0xf7: JUMPDEST 
0xf8: V89 = 0x1
0xfa: V90 = 0xa0
0xfc: V91 = 0x2
0xfe: V92 = EXP 0x2 0xa0
0xff: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0x100: V94 = ADDRESS
0x101: V95 = AND V94 0xffffffffffffffffffffffffffffffffffffffff
0x102: V96 = BALANCE V95
0x103: V97 = CALLVALUE
0x104: V98 = LT V97 V96
0x105: V99 = 0x147
0x108: JUMPI 0x147 V98
---
Entry stack: [V10, 0x54, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x54, V30]

================================

Block 0x109
[0x109:0x142]
---
Predecessors: [0xf7]
Successors: [0x143, 0x147]
---
0x109 DUP1
0x10a PUSH1 0x1
0x10c PUSH1 0xa0
0x10e PUSH1 0x2
0x110 EXP
0x111 SUB
0x112 AND
0x113 PUSH2 0x8fc
0x116 CALLVALUE
0x117 ADDRESS
0x118 PUSH1 0x1
0x11a PUSH1 0xa0
0x11c PUSH1 0x2
0x11e EXP
0x11f SUB
0x120 AND
0x121 BALANCE
0x122 ADD
0x123 SWAP1
0x124 DUP2
0x125 ISZERO
0x126 MUL
0x127 SWAP1
0x128 PUSH1 0x40
0x12a MLOAD
0x12b PUSH1 0x0
0x12d PUSH1 0x40
0x12f MLOAD
0x130 DUP1
0x131 DUP4
0x132 SUB
0x133 DUP2
0x134 DUP6
0x135 DUP9
0x136 DUP9
0x137 CALL
0x138 SWAP4
0x139 POP
0x13a POP
0x13b POP
0x13c POP
0x13d ISZERO
0x13e ISZERO
0x13f PUSH2 0x147
0x142 JUMPI
---
0x10a: V100 = 0x1
0x10c: V101 = 0xa0
0x10e: V102 = 0x2
0x110: V103 = EXP 0x2 0xa0
0x111: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x112: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0x113: V106 = 0x8fc
0x116: V107 = CALLVALUE
0x117: V108 = ADDRESS
0x118: V109 = 0x1
0x11a: V110 = 0xa0
0x11c: V111 = 0x2
0x11e: V112 = EXP 0x2 0xa0
0x11f: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x120: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x121: V115 = BALANCE V114
0x122: V116 = ADD V115 V107
0x125: V117 = ISZERO V116
0x126: V118 = MUL V117 0x8fc
0x128: V119 = 0x40
0x12a: V120 = M[0x40]
0x12b: V121 = 0x0
0x12d: V122 = 0x40
0x12f: V123 = M[0x40]
0x132: V124 = SUB V120 V123
0x137: V125 = CALL V118 V105 V116 V123 V124 V123 0x0
0x13d: V126 = ISZERO V125
0x13e: V127 = ISZERO V126
0x13f: V128 = 0x147
0x142: JUMPI 0x147 V127
---
Entry stack: [V10, 0x54, V30]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x54, V30]

================================

Block 0x143
[0x143:0x146]
---
Predecessors: [0x109]
Successors: []
---
0x143 PUSH1 0x0
0x145 DUP1
0x146 REVERT
---
0x143: V129 = 0x0
0x146: REVERT 0x0 0x0
---
Entry stack: [V10, 0x54, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x54, V30]

================================

Block 0x147
[0x147:0x149]
---
Predecessors: [0xf7, 0x109]
Successors: [0x54]
---
0x147 JUMPDEST
0x148 POP
0x149 JUMP
---
0x147: JUMPDEST 
0x149: JUMP 0x54
---
Entry stack: [V10, 0x54, V30]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x14a
[0x14a:0x158]
---
Predecessors: [0x7d]
Successors: [0x85]
---
0x14a JUMPDEST
0x14b PUSH1 0x0
0x14d SLOAD
0x14e PUSH1 0x1
0x150 PUSH1 0xa0
0x152 PUSH1 0x2
0x154 EXP
0x155 SUB
0x156 AND
0x157 DUP2
0x158 JUMP
---
0x14a: JUMPDEST 
0x14b: V130 = 0x0
0x14d: V131 = S[0x0]
0x14e: V132 = 0x1
0x150: V133 = 0xa0
0x152: V134 = 0x2
0x154: V135 = EXP 0x2 0xa0
0x155: V136 = SUB 0x10000000000000000000000000000000000000000 0x1
0x156: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x158: JUMP 0x85
---
Entry stack: [V10, 0x85]
Stack pops: 1
Stack additions: [S0, V137]
Exit stack: [V10, 0x85, V137]

================================

Block 0x159
[0x159:0x18b]
---
Predecessors: []
Successors: []
---
0x159 STOP
0x15a LOG1
0x15b PUSH6 0x627a7a723058
0x162 SHA3
0x163 TIMESTAMP
0x164 MISSING 0xd4
0x165 MISSING 0x5f
0x166 DUP1
0x167 NUMBER
0x168 MISSING 0xa5
0x169 MISSING 0xb9
0x16a SWAP7
0x16b PUSH32 0xd1f29bdf387ba7532a357c1ccf0a6a750d28ae3be72b1d0029
---
0x159: STOP 
0x15a: LOG S0 S1 S2
0x15b: V138 = 0x627a7a723058
0x162: V139 = SHA3 0x627a7a723058 S3
0x163: V140 = TIMESTAMP
0x164: MISSING 0xd4
0x165: MISSING 0x5f
0x167: V141 = NUMBER
0x168: MISSING 0xa5
0x169: MISSING 0xb9
0x16b: V142 = 0xd1f29bdf387ba7532a357c1ccf0a6a750d28ae3be72b1d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V140, V139, V141, S0, S0, 0xd1f29bdf387ba7532a357c1ccf0a6a750d28ae3be72b1d0029, S7, S1, S2, S3, S4, S5, S6, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x56
Exit block: 0x54
Body: 0x54, 0x56, 0xa1, 0xb8, 0xbc, 0xf1, 0xf5

Function 1:
Public function signature: 0x6f92f186
Entry block: 0x5e
Exit block: 0x54
Body: 0x54, 0x5e, 0xf7, 0x109, 0x143, 0x147

Function 2:
Public function signature: 0xb4a99a4e
Entry block: 0x72
Exit block: 0x85
Body: 0x72, 0x79, 0x7d, 0x85, 0x14a

Function 3:
Public fallback function
Entry block: 0x54
Exit block: 0x54
Body: 0x54

