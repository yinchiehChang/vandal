Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x94]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1f6d4942
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x94
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1f6d4942
0x3b: V13 = EQ V11 0x1f6d4942
0x3c: V14 = 0x94
0x3f: JUMPI 0x94 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xd4]
---
0x40 DUP1
0x41 PUSH4 0x2b8f2042
0x46 EQ
0x47 PUSH2 0xd4
0x4a JUMPI
---
0x41: V15 = 0x2b8f2042
0x46: V16 = EQ 0x2b8f2042 V11
0x47: V17 = 0xd4
0x4a: JUMPI 0xd4 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xe9]
---
0x4b DUP1
0x4c PUSH4 0x8da5cb5b
0x51 EQ
0x52 PUSH2 0xe9
0x55 JUMPI
---
0x4c: V18 = 0x8da5cb5b
0x51: V19 = EQ 0x8da5cb5b V11
0x52: V20 = 0xe9
0x55: JUMPI 0xe9 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x127]
---
0x56 DUP1
0x57 PUSH4 0xa6f9dae1
0x5c EQ
0x5d PUSH2 0x127
0x60 JUMPI
---
0x57: V21 = 0xa6f9dae1
0x5c: V22 = EQ 0xa6f9dae1 V11
0x5d: V23 = 0x127
0x60: JUMPI 0x127 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x155]
---
0x61 DUP1
0x62 PUSH4 0xe9fad8ee
0x67 EQ
0x68 PUSH2 0x155
0x6b JUMPI
---
0x62: V24 = 0xe9fad8ee
0x67: V25 = EQ 0xe9fad8ee V11
0x68: V26 = 0x155
0x6b: JUMPI 0x155 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x7c]
---
Predecessors: [0x0, 0x61]
Successors: [0x7d, 0x92]
---
0x6c JUMPDEST
0x6d PUSH8 0x2c68af0bb140000
0x76 CALLVALUE
0x77 GT
0x78 ISZERO
0x79 PUSH2 0x92
0x7c JUMPI
---
0x6c: JUMPDEST 
0x6d: V27 = 0x2c68af0bb140000
0x76: V28 = CALLVALUE
0x77: V29 = GT V28 0x2c68af0bb140000
0x78: V30 = ISZERO V29
0x79: V31 = 0x92
0x7c: JUMPI 0x92 V30
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7d
[0x7d:0x91]
---
Predecessors: [0x6c]
Successors: [0x92]
---
0x7d CALLER
0x7e PUSH1 0x0
0x80 SWAP1
0x81 DUP2
0x82 MSTORE
0x83 PUSH1 0x2
0x85 PUSH1 0x20
0x87 MSTORE
0x88 PUSH1 0x40
0x8a SWAP1
0x8b SHA3
0x8c DUP1
0x8d SLOAD
0x8e CALLVALUE
0x8f ADD
0x90 SWAP1
0x91 SSTORE
---
0x7d: V32 = CALLER
0x7e: V33 = 0x0
0x82: M[0x0] = V32
0x83: V34 = 0x2
0x85: V35 = 0x20
0x87: M[0x20] = 0x2
0x88: V36 = 0x40
0x8b: V37 = SHA3 0x0 0x40
0x8d: V38 = S[V37]
0x8e: V39 = CALLVALUE
0x8f: V40 = ADD V39 V38
0x91: S[V37] = V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x92
[0x92:0x93]
---
Predecessors: [0x6c, 0x7d, 0x1cd, 0x206, 0x2b4]
Successors: []
---
0x92 JUMPDEST
0x93 STOP
---
0x92: JUMPDEST 
0x93: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x94
[0x94:0x9b]
---
Predecessors: [0xd]
Successors: [0x9c, 0xa0]
---
0x94 JUMPDEST
0x95 CALLVALUE
0x96 DUP1
0x97 ISZERO
0x98 PUSH2 0xa0
0x9b JUMPI
---
0x94: JUMPDEST 
0x95: V41 = CALLVALUE
0x97: V42 = ISZERO V41
0x98: V43 = 0xa0
0x9b: JUMPI 0xa0 V42
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V41]
Exit stack: [V11, V41]

================================

Block 0x9c
[0x9c:0x9f]
---
Predecessors: [0x94]
Successors: []
---
0x9c PUSH1 0x0
0x9e DUP1
0x9f REVERT
---
0x9c: V44 = 0x0
0x9f: REVERT 0x0 0x0
---
Entry stack: [V11, V41]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V41]

================================

Block 0xa0
[0xa0:0xc1]
---
Predecessors: [0x94]
Successors: [0x16a]
---
0xa0 JUMPDEST
0xa1 POP
0xa2 PUSH2 0xc2
0xa5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xba PUSH1 0x4
0xbc CALLDATALOAD
0xbd AND
0xbe PUSH2 0x16a
0xc1 JUMP
---
0xa0: JUMPDEST 
0xa2: V45 = 0xc2
0xa5: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xba: V47 = 0x4
0xbc: V48 = CALLDATALOAD 0x4
0xbd: V49 = AND V48 0xffffffffffffffffffffffffffffffffffffffff
0xbe: V50 = 0x16a
0xc1: JUMP 0x16a
---
Entry stack: [V11, V41]
Stack pops: 1
Stack additions: [0xc2, V49]
Exit stack: [V11, 0xc2, V49]

================================

Block 0xc2
[0xc2:0xd3]
---
Predecessors: [0x16a]
Successors: []
---
0xc2 JUMPDEST
0xc3 PUSH1 0x40
0xc5 DUP1
0xc6 MLOAD
0xc7 SWAP2
0xc8 DUP3
0xc9 MSTORE
0xca MLOAD
0xcb SWAP1
0xcc DUP2
0xcd SWAP1
0xce SUB
0xcf PUSH1 0x20
0xd1 ADD
0xd2 SWAP1
0xd3 RETURN
---
0xc2: JUMPDEST 
0xc3: V51 = 0x40
0xc6: V52 = M[0x40]
0xc9: M[V52] = V98
0xca: V53 = M[0x40]
0xce: V54 = SUB V52 V53
0xcf: V55 = 0x20
0xd1: V56 = ADD 0x20 V54
0xd3: RETURN V53 V56
---
Entry stack: [V11, 0xc2, V98]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc2]

================================

Block 0xd4
[0xd4:0xdb]
---
Predecessors: [0x40]
Successors: [0xdc, 0xe0]
---
0xd4 JUMPDEST
0xd5 CALLVALUE
0xd6 DUP1
0xd7 ISZERO
0xd8 PUSH2 0xe0
0xdb JUMPI
---
0xd4: JUMPDEST 
0xd5: V57 = CALLVALUE
0xd7: V58 = ISZERO V57
0xd8: V59 = 0xe0
0xdb: JUMPI 0xe0 V58
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V57]
Exit stack: [V11, V57]

================================

Block 0xdc
[0xdc:0xdf]
---
Predecessors: [0xd4]
Successors: []
---
0xdc PUSH1 0x0
0xde DUP1
0xdf REVERT
---
0xdc: V60 = 0x0
0xdf: REVERT 0x0 0x0
---
Entry stack: [V11, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V57]

================================

Block 0xe0
[0xe0:0xe8]
---
Predecessors: [0xd4]
Successors: [0x17c]
---
0xe0 JUMPDEST
0xe1 POP
0xe2 PUSH2 0x92
0xe5 PUSH2 0x17c
0xe8 JUMP
---
0xe0: JUMPDEST 
0xe2: V61 = 0x92
0xe5: V62 = 0x17c
0xe8: JUMP 0x17c
---
Entry stack: [V11, V57]
Stack pops: 1
Stack additions: [0x92]
Exit stack: [V11, 0x92]

================================

Block 0xe9
[0xe9:0xf0]
---
Predecessors: [0x4b]
Successors: [0xf1, 0xf5]
---
0xe9 JUMPDEST
0xea CALLVALUE
0xeb DUP1
0xec ISZERO
0xed PUSH2 0xf5
0xf0 JUMPI
---
0xe9: JUMPDEST 
0xea: V63 = CALLVALUE
0xec: V64 = ISZERO V63
0xed: V65 = 0xf5
0xf0: JUMPI 0xf5 V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V63]
Exit stack: [V11, V63]

================================

Block 0xf1
[0xf1:0xf4]
---
Predecessors: [0xe9]
Successors: []
---
0xf1 PUSH1 0x0
0xf3 DUP1
0xf4 REVERT
---
0xf1: V66 = 0x0
0xf4: REVERT 0x0 0x0
---
Entry stack: [V11, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V63]

================================

Block 0xf5
[0xf5:0xfd]
---
Predecessors: [0xe9]
Successors: [0x1d0]
---
0xf5 JUMPDEST
0xf6 POP
0xf7 PUSH2 0xfe
0xfa PUSH2 0x1d0
0xfd JUMP
---
0xf5: JUMPDEST 
0xf7: V67 = 0xfe
0xfa: V68 = 0x1d0
0xfd: JUMP 0x1d0
---
Entry stack: [V11, V63]
Stack pops: 1
Stack additions: [0xfe]
Exit stack: [V11, 0xfe]

================================

Block 0xfe
[0xfe:0x126]
---
Predecessors: [0x1d0]
Successors: []
---
0xfe JUMPDEST
0xff PUSH1 0x40
0x101 DUP1
0x102 MLOAD
0x103 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x118 SWAP1
0x119 SWAP3
0x11a AND
0x11b DUP3
0x11c MSTORE
0x11d MLOAD
0x11e SWAP1
0x11f DUP2
0x120 SWAP1
0x121 SUB
0x122 PUSH1 0x20
0x124 ADD
0x125 SWAP1
0x126 RETURN
---
0xfe: JUMPDEST 
0xff: V69 = 0x40
0x102: V70 = M[0x40]
0x103: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x11a: V72 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x11c: M[V70] = V72
0x11d: V73 = M[0x40]
0x121: V74 = SUB V70 V73
0x122: V75 = 0x20
0x124: V76 = ADD 0x20 V74
0x126: RETURN V73 V76
---
Entry stack: [V11, 0xfe, V127]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xfe]

================================

Block 0x127
[0x127:0x12e]
---
Predecessors: [0x56]
Successors: [0x12f, 0x133]
---
0x127 JUMPDEST
0x128 CALLVALUE
0x129 DUP1
0x12a ISZERO
0x12b PUSH2 0x133
0x12e JUMPI
---
0x127: JUMPDEST 
0x128: V77 = CALLVALUE
0x12a: V78 = ISZERO V77
0x12b: V79 = 0x133
0x12e: JUMPI 0x133 V78
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V77]
Exit stack: [V11, V77]

================================

Block 0x12f
[0x12f:0x132]
---
Predecessors: [0x127]
Successors: []
---
0x12f PUSH1 0x0
0x131 DUP1
0x132 REVERT
---
0x12f: V80 = 0x0
0x132: REVERT 0x0 0x0
---
Entry stack: [V11, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V77]

================================

Block 0x133
[0x133:0x154]
---
Predecessors: [0x127]
Successors: [0x1ec]
---
0x133 JUMPDEST
0x134 POP
0x135 PUSH2 0x92
0x138 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14d PUSH1 0x4
0x14f CALLDATALOAD
0x150 AND
0x151 PUSH2 0x1ec
0x154 JUMP
---
0x133: JUMPDEST 
0x135: V81 = 0x92
0x138: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x14d: V83 = 0x4
0x14f: V84 = CALLDATALOAD 0x4
0x150: V85 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0x151: V86 = 0x1ec
0x154: JUMP 0x1ec
---
Entry stack: [V11, V77]
Stack pops: 1
Stack additions: [0x92, V85]
Exit stack: [V11, 0x92, V85]

================================

Block 0x155
[0x155:0x15c]
---
Predecessors: [0x61]
Successors: [0x15d, 0x161]
---
0x155 JUMPDEST
0x156 CALLVALUE
0x157 DUP1
0x158 ISZERO
0x159 PUSH2 0x161
0x15c JUMPI
---
0x155: JUMPDEST 
0x156: V87 = CALLVALUE
0x158: V88 = ISZERO V87
0x159: V89 = 0x161
0x15c: JUMPI 0x161 V88
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V87]
Exit stack: [V11, V87]

================================

Block 0x15d
[0x15d:0x160]
---
Predecessors: [0x155]
Successors: []
---
0x15d PUSH1 0x0
0x15f DUP1
0x160 REVERT
---
0x15d: V90 = 0x0
0x160: REVERT 0x0 0x0
---
Entry stack: [V11, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V87]

================================

Block 0x161
[0x161:0x169]
---
Predecessors: [0x155]
Successors: [0x242]
---
0x161 JUMPDEST
0x162 POP
0x163 PUSH2 0x92
0x166 PUSH2 0x242
0x169 JUMP
---
0x161: JUMPDEST 
0x163: V91 = 0x92
0x166: V92 = 0x242
0x169: JUMP 0x242
---
Entry stack: [V11, V87]
Stack pops: 1
Stack additions: [0x92]
Exit stack: [V11, 0x92]

================================

Block 0x16a
[0x16a:0x17b]
---
Predecessors: [0xa0]
Successors: [0xc2]
---
0x16a JUMPDEST
0x16b PUSH1 0x2
0x16d PUSH1 0x20
0x16f MSTORE
0x170 PUSH1 0x0
0x172 SWAP1
0x173 DUP2
0x174 MSTORE
0x175 PUSH1 0x40
0x177 SWAP1
0x178 SHA3
0x179 SLOAD
0x17a DUP2
0x17b JUMP
---
0x16a: JUMPDEST 
0x16b: V93 = 0x2
0x16d: V94 = 0x20
0x16f: M[0x20] = 0x2
0x170: V95 = 0x0
0x174: M[0x0] = V49
0x175: V96 = 0x40
0x178: V97 = SHA3 0x0 0x40
0x179: V98 = S[V97]
0x17b: JUMP 0xc2
---
Entry stack: [V11, 0xc2, V49]
Stack pops: 2
Stack additions: [S1, V98]
Exit stack: [V11, 0xc2, V98]

================================

Block 0x17c
[0x17c:0x19b]
---
Predecessors: [0xe0]
Successors: [0x19c, 0x1a0]
---
0x17c JUMPDEST
0x17d PUSH1 0x0
0x17f SLOAD
0x180 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x195 AND
0x196 CALLER
0x197 EQ
0x198 PUSH2 0x1a0
0x19b JUMPI
---
0x17c: JUMPDEST 
0x17d: V99 = 0x0
0x17f: V100 = S[0x0]
0x180: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x195: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x196: V103 = CALLER
0x197: V104 = EQ V103 V102
0x198: V105 = 0x1a0
0x19b: JUMPI 0x1a0 V104
---
Entry stack: [V11, 0x92]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x92]

================================

Block 0x19c
[0x19c:0x19f]
---
Predecessors: [0x17c]
Successors: []
---
0x19c PUSH1 0x0
0x19e DUP1
0x19f REVERT
---
0x19c: V106 = 0x0
0x19f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x92]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x92]

================================

Block 0x1a0
[0x1a0:0x1c3]
---
Predecessors: [0x17c]
Successors: [0x1c4, 0x1cd]
---
0x1a0 JUMPDEST
0x1a1 PUSH1 0x40
0x1a3 MLOAD
0x1a4 CALLER
0x1a5 SWAP1
0x1a6 ADDRESS
0x1a7 BALANCE
0x1a8 DUP1
0x1a9 ISZERO
0x1aa PUSH2 0x8fc
0x1ad MUL
0x1ae SWAP2
0x1af PUSH1 0x0
0x1b1 DUP2
0x1b2 DUP2
0x1b3 DUP2
0x1b4 DUP6
0x1b5 DUP9
0x1b6 DUP9
0x1b7 CALL
0x1b8 SWAP4
0x1b9 POP
0x1ba POP
0x1bb POP
0x1bc POP
0x1bd ISZERO
0x1be DUP1
0x1bf ISZERO
0x1c0 PUSH2 0x1cd
0x1c3 JUMPI
---
0x1a0: JUMPDEST 
0x1a1: V107 = 0x40
0x1a3: V108 = M[0x40]
0x1a4: V109 = CALLER
0x1a6: V110 = ADDRESS
0x1a7: V111 = BALANCE V110
0x1a9: V112 = ISZERO V111
0x1aa: V113 = 0x8fc
0x1ad: V114 = MUL 0x8fc V112
0x1af: V115 = 0x0
0x1b7: V116 = CALL V114 V109 V111 V108 0x0 V108 0x0
0x1bd: V117 = ISZERO V116
0x1bf: V118 = ISZERO V117
0x1c0: V119 = 0x1cd
0x1c3: JUMPI 0x1cd V118
---
Entry stack: [V11, 0x92]
Stack pops: 0
Stack additions: [V117]
Exit stack: [V11, 0x92, V117]

================================

Block 0x1c4
[0x1c4:0x1cc]
---
Predecessors: [0x1a0]
Successors: []
---
0x1c4 RETURNDATASIZE
0x1c5 PUSH1 0x0
0x1c7 DUP1
0x1c8 RETURNDATACOPY
0x1c9 RETURNDATASIZE
0x1ca PUSH1 0x0
0x1cc REVERT
---
0x1c4: V120 = RETURNDATASIZE
0x1c5: V121 = 0x0
0x1c8: RETURNDATACOPY 0x0 0x0 V120
0x1c9: V122 = RETURNDATASIZE
0x1ca: V123 = 0x0
0x1cc: REVERT 0x0 V122
---
Entry stack: [V11, 0x92, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x92, V117]

================================

Block 0x1cd
[0x1cd:0x1cf]
---
Predecessors: [0x1a0, 0x25d]
Successors: [0x92]
---
0x1cd JUMPDEST
0x1ce POP
0x1cf JUMP
---
0x1cd: JUMPDEST 
0x1cf: JUMP 0x92
---
Entry stack: [V11, 0x92, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1d0
[0x1d0:0x1eb]
---
Predecessors: [0xf5]
Successors: [0xfe]
---
0x1d0 JUMPDEST
0x1d1 PUSH1 0x1
0x1d3 SLOAD
0x1d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e9 AND
0x1ea DUP2
0x1eb JUMP
---
0x1d0: JUMPDEST 
0x1d1: V124 = 0x1
0x1d3: V125 = S[0x1]
0x1d4: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e9: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x1eb: JUMP 0xfe
---
Entry stack: [V11, 0xfe]
Stack pops: 1
Stack additions: [S0, V127]
Exit stack: [V11, 0xfe, V127]

================================

Block 0x1ec
[0x1ec:0x201]
---
Predecessors: [0x133]
Successors: [0x202, 0x206]
---
0x1ec JUMPDEST
0x1ed CALLER
0x1ee PUSH1 0x0
0x1f0 SWAP1
0x1f1 DUP2
0x1f2 MSTORE
0x1f3 PUSH1 0x2
0x1f5 PUSH1 0x20
0x1f7 MSTORE
0x1f8 PUSH1 0x40
0x1fa DUP2
0x1fb SHA3
0x1fc SLOAD
0x1fd GT
0x1fe PUSH2 0x206
0x201 JUMPI
---
0x1ec: JUMPDEST 
0x1ed: V128 = CALLER
0x1ee: V129 = 0x0
0x1f2: M[0x0] = V128
0x1f3: V130 = 0x2
0x1f5: V131 = 0x20
0x1f7: M[0x20] = 0x2
0x1f8: V132 = 0x40
0x1fb: V133 = SHA3 0x0 0x40
0x1fc: V134 = S[V133]
0x1fd: V135 = GT V134 0x0
0x1fe: V136 = 0x206
0x201: JUMPI 0x206 V135
---
Entry stack: [V11, 0x92, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x92, V85]

================================

Block 0x202
[0x202:0x205]
---
Predecessors: [0x1ec]
Successors: []
---
0x202 PUSH1 0x0
0x204 DUP1
0x205 REVERT
---
0x202: V137 = 0x0
0x205: REVERT 0x0 0x0
---
Entry stack: [V11, 0x92, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x92, V85]

================================

Block 0x206
[0x206:0x241]
---
Predecessors: [0x1ec]
Successors: [0x92]
---
0x206 JUMPDEST
0x207 PUSH1 0x1
0x209 DUP1
0x20a SLOAD
0x20b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x220 NOT
0x221 AND
0x222 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x237 SWAP3
0x238 SWAP1
0x239 SWAP3
0x23a AND
0x23b SWAP2
0x23c SWAP1
0x23d SWAP2
0x23e OR
0x23f SWAP1
0x240 SSTORE
0x241 JUMP
---
0x206: JUMPDEST 
0x207: V138 = 0x1
0x20a: V139 = S[0x1]
0x20b: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x220: V141 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x221: V142 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V139
0x222: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x23a: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x23e: V145 = OR V144 V142
0x240: S[0x1] = V145
0x241: JUMP 0x92
---
Entry stack: [V11, 0x92, V85]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x242
[0x242:0x258]
---
Predecessors: [0x161]
Successors: [0x259, 0x25d]
---
0x242 JUMPDEST
0x243 CALLER
0x244 PUSH1 0x0
0x246 SWAP1
0x247 DUP2
0x248 MSTORE
0x249 PUSH1 0x2
0x24b PUSH1 0x20
0x24d MSTORE
0x24e PUSH1 0x40
0x250 DUP2
0x251 SHA3
0x252 SLOAD
0x253 DUP2
0x254 LT
0x255 PUSH2 0x25d
0x258 JUMPI
---
0x242: JUMPDEST 
0x243: V146 = CALLER
0x244: V147 = 0x0
0x248: M[0x0] = V146
0x249: V148 = 0x2
0x24b: V149 = 0x20
0x24d: M[0x20] = 0x2
0x24e: V150 = 0x40
0x251: V151 = SHA3 0x0 0x40
0x252: V152 = S[V151]
0x254: V153 = LT 0x0 V152
0x255: V154 = 0x25d
0x258: JUMPI 0x25d V153
---
Entry stack: [V11, 0x92]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x92, 0x0]

================================

Block 0x259
[0x259:0x25c]
---
Predecessors: [0x242]
Successors: []
---
0x259 PUSH1 0x0
0x25b DUP1
0x25c REVERT
---
0x259: V155 = 0x0
0x25c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x92, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x92, 0x0]

================================

Block 0x25d
[0x25d:0x279]
---
Predecessors: [0x242]
Successors: [0x1cd, 0x27a]
---
0x25d JUMPDEST
0x25e POP
0x25f CALLER
0x260 PUSH1 0x0
0x262 SWAP1
0x263 DUP2
0x264 MSTORE
0x265 PUSH1 0x2
0x267 PUSH1 0x20
0x269 MSTORE
0x26a PUSH1 0x40
0x26c SWAP1
0x26d SHA3
0x26e SLOAD
0x26f PUSH1 0xa
0x271 DUP2
0x272 DIV
0x273 SWAP1
0x274 DUP2
0x275 GT
0x276 PUSH2 0x1cd
0x279 JUMPI
---
0x25d: JUMPDEST 
0x25f: V156 = CALLER
0x260: V157 = 0x0
0x264: M[0x0] = V156
0x265: V158 = 0x2
0x267: V159 = 0x20
0x269: M[0x20] = 0x2
0x26a: V160 = 0x40
0x26d: V161 = SHA3 0x0 0x40
0x26e: V162 = S[V161]
0x26f: V163 = 0xa
0x272: V164 = DIV V162 0xa
0x275: V165 = GT V164 V162
0x276: V166 = 0x1cd
0x279: JUMPI 0x1cd V165
---
Entry stack: [V11, 0x92, 0x0]
Stack pops: 1
Stack additions: [V164]
Exit stack: [V11, 0x92, V164]

================================

Block 0x27a
[0x27a:0x2aa]
---
Predecessors: [0x25d]
Successors: [0x2ab, 0x2b4]
---
0x27a CALLER
0x27b PUSH1 0x0
0x27d DUP2
0x27e DUP2
0x27f MSTORE
0x280 PUSH1 0x2
0x282 PUSH1 0x20
0x284 MSTORE
0x285 PUSH1 0x40
0x287 DUP1
0x288 DUP3
0x289 SHA3
0x28a DUP3
0x28b SWAP1
0x28c SSTORE
0x28d MLOAD
0x28e DUP4
0x28f ISZERO
0x290 PUSH2 0x8fc
0x293 MUL
0x294 SWAP2
0x295 DUP5
0x296 SWAP2
0x297 SWAP1
0x298 DUP2
0x299 DUP2
0x29a DUP2
0x29b DUP6
0x29c DUP9
0x29d DUP9
0x29e CALL
0x29f SWAP4
0x2a0 POP
0x2a1 POP
0x2a2 POP
0x2a3 POP
0x2a4 ISZERO
0x2a5 DUP1
0x2a6 ISZERO
0x2a7 PUSH2 0x2b4
0x2aa JUMPI
---
0x27a: V167 = CALLER
0x27b: V168 = 0x0
0x27f: M[0x0] = V167
0x280: V169 = 0x2
0x282: V170 = 0x20
0x284: M[0x20] = 0x2
0x285: V171 = 0x40
0x289: V172 = SHA3 0x0 0x40
0x28c: S[V172] = 0x0
0x28d: V173 = M[0x40]
0x28f: V174 = ISZERO V164
0x290: V175 = 0x8fc
0x293: V176 = MUL 0x8fc V174
0x29e: V177 = CALL V176 V167 V164 V173 0x0 V173 0x0
0x2a4: V178 = ISZERO V177
0x2a6: V179 = ISZERO V178
0x2a7: V180 = 0x2b4
0x2aa: JUMPI 0x2b4 V179
---
Entry stack: [V11, 0x92, V164]
Stack pops: 1
Stack additions: [S0, V178]
Exit stack: [V11, 0x92, V164, V178]

================================

Block 0x2ab
[0x2ab:0x2b3]
---
Predecessors: [0x27a]
Successors: []
---
0x2ab RETURNDATASIZE
0x2ac PUSH1 0x0
0x2ae DUP1
0x2af RETURNDATACOPY
0x2b0 RETURNDATASIZE
0x2b1 PUSH1 0x0
0x2b3 REVERT
---
0x2ab: V181 = RETURNDATASIZE
0x2ac: V182 = 0x0
0x2af: RETURNDATACOPY 0x0 0x0 V181
0x2b0: V183 = RETURNDATASIZE
0x2b1: V184 = 0x0
0x2b3: REVERT 0x0 V183
---
Entry stack: [V11, 0x92, V164, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x92, V164, V178]

================================

Block 0x2b4
[0x2b4:0x2b7]
---
Predecessors: [0x27a]
Successors: [0x92]
---
0x2b4 JUMPDEST
0x2b5 POP
0x2b6 POP
0x2b7 JUMP
---
0x2b4: JUMPDEST 
0x2b7: JUMP 0x92
---
Entry stack: [V11, 0x92, V164, V178]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b8
[0x2b8:0x2ed]
---
Predecessors: []
Successors: []
---
0x2b8 STOP
0x2b9 LOG1
0x2ba PUSH6 0x627a7a723058
0x2c1 SHA3
0x2c2 CODECOPY
0x2c3 MISSING 0xd8
0x2c4 SWAP13
0x2c5 MISSING 0x2e
0x2c6 MISSING 0xce
0x2c7 CALLCODE
0x2c8 PUSH6 0xc6733d2a3620
0x2cf MISSING 0xfb
0x2d0 MISSING 0x4c
0x2d1 MISSING 0x24
0x2d2 PUSH7 0x1436c9c7ef6953
0x2da TIMESTAMP
0x2db CALLCODE
0x2dc CALLER
0x2dd PUSH16 0x8df7af80029
---
0x2b8: STOP 
0x2b9: LOG S0 S1 S2
0x2ba: V185 = 0x627a7a723058
0x2c1: V186 = SHA3 0x627a7a723058 S3
0x2c2: CODECOPY V186 S4 S5
0x2c3: MISSING 0xd8
0x2c5: MISSING 0x2e
0x2c6: MISSING 0xce
0x2c7: V187 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0x2c8: V188 = 0xc6733d2a3620
0x2cf: MISSING 0xfb
0x2d0: MISSING 0x4c
0x2d1: MISSING 0x24
0x2d2: V189 = 0x1436c9c7ef6953
0x2da: V190 = TIMESTAMP
0x2db: V191 = CALLCODE V190 0x1436c9c7ef6953 S0 S1 S2 S3 S4
0x2dc: V192 = CALLER
0x2dd: V193 = 0x8df7af80029
---
Entry stack: []
Stack pops: 0
Stack additions: [S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S0, 0xc6733d2a3620, V187, 0x8df7af80029, V192, V191]
Exit stack: []

================================

Function 0:
Public function signature: 0x1f6d4942
Entry block: 0x94
Exit block: 0xc2
Body: 0x94, 0x9c, 0xa0, 0xc2, 0x16a

Function 1:
Public function signature: 0x2b8f2042
Entry block: 0xd4
Exit block: 0x92
Body: 0x92, 0xd4, 0xdc, 0xe0, 0x17c, 0x19c, 0x1a0, 0x1c4, 0x1cd

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xe9
Exit block: 0xfe
Body: 0xe9, 0xf1, 0xf5, 0xfe, 0x1d0

Function 3:
Public function signature: 0xa6f9dae1
Entry block: 0x127
Exit block: 0x92
Body: 0x92, 0x127, 0x12f, 0x133, 0x1ec, 0x202, 0x206

Function 4:
Public function signature: 0xe9fad8ee
Entry block: 0x155
Exit block: 0x92
Body: 0x92, 0x155, 0x15d, 0x161, 0x1cd, 0x242, 0x259, 0x25d, 0x27a, 0x2ab, 0x2b4

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0x92
Body: 0x6c, 0x7d, 0x92

