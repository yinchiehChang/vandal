Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6d]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3fe43822
0x3c EQ
0x3d PUSH2 0x6d
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3fe43822
0x3c: V13 = EQ 0x3fe43822 V11
0x3d: V14 = 0x6d
0x40: JUMPI 0x6d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x85]
---
0x41 DUP1
0x42 PUSH4 0xc2808d1a
0x47 EQ
0x48 PUSH2 0x85
0x4b JUMPI
---
0x42: V15 = 0xc2808d1a
0x47: V16 = EQ 0xc2808d1a V11
0x48: V17 = 0x85
0x4b: JUMPI 0x85 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xae]
---
0x4c DUP1
0x4d PUSH4 0xe203b506
0x52 EQ
0x53 PUSH2 0xae
0x56 JUMPI
---
0x4d: V18 = 0xe203b506
0x52: V19 = EQ 0xe203b506 V11
0x53: V20 = 0xae
0x56: JUMPI 0xae V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xfb]
---
0x57 DUP1
0x58 PUSH4 0xe5b5fe72
0x5d EQ
0x5e PUSH2 0xfb
0x61 JUMPI
---
0x58: V21 = 0xe5b5fe72
0x5d: V22 = EQ 0xe5b5fe72 V11
0x5e: V23 = 0xfb
0x61: JUMPI 0xfb V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6a]
---
Predecessors: [0x0, 0x57]
Successors: [0x129]
---
0x62 JUMPDEST
0x63 PUSH2 0x6b
0x66 CALLER
0x67 PUSH2 0x129
0x6a JUMP
---
0x62: JUMPDEST 
0x63: V24 = 0x6b
0x66: V25 = CALLER
0x67: V26 = 0x129
0x6a: JUMP 0x129
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6b, V25]
Exit stack: [V11, 0x6b, V25]

================================

Block 0x6b
[0x6b:0x6c]
---
Predecessors: [0x283]
Successors: []
---
0x6b JUMPDEST
0x6c STOP
---
0x6b: JUMPDEST 
0x6c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x82]
---
Predecessors: [0xd]
Successors: [0x290]
---
0x6d JUMPDEST
0x6e PUSH2 0x83
0x71 PUSH1 0x4
0x73 DUP1
0x74 DUP1
0x75 CALLDATALOAD
0x76 SWAP1
0x77 PUSH1 0x20
0x79 ADD
0x7a SWAP1
0x7b SWAP2
0x7c SWAP1
0x7d POP
0x7e POP
0x7f PUSH2 0x290
0x82 JUMP
---
0x6d: JUMPDEST 
0x6e: V27 = 0x83
0x71: V28 = 0x4
0x75: V29 = CALLDATALOAD 0x4
0x77: V30 = 0x20
0x79: V31 = ADD 0x20 0x4
0x7f: V32 = 0x290
0x82: JUMP 0x290
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x83, V29]
Exit stack: [V11, 0x83, V29]

================================

Block 0x83
[0x83:0x84]
---
Predecessors: [0x4c4]
Successors: []
---
0x83 JUMPDEST
0x84 STOP
---
0x83: JUMPDEST 
0x84: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0x8b]
---
Predecessors: [0x41]
Successors: [0x8c, 0x90]
---
0x85 JUMPDEST
0x86 CALLVALUE
0x87 ISZERO
0x88 PUSH2 0x90
0x8b JUMPI
---
0x85: JUMPDEST 
0x86: V33 = CALLVALUE
0x87: V34 = ISZERO V33
0x88: V35 = 0x90
0x8b: JUMPI 0x90 V34
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8c
[0x8c:0x8f]
---
Predecessors: [0x85]
Successors: []
---
0x8c PUSH1 0x0
0x8e DUP1
0x8f REVERT
---
0x8c: V36 = 0x0
0x8f: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x90
[0x90:0x97]
---
Predecessors: [0x85]
Successors: [0x4c7]
---
0x90 JUMPDEST
0x91 PUSH2 0x98
0x94 PUSH2 0x4c7
0x97 JUMP
---
0x90: JUMPDEST 
0x91: V37 = 0x98
0x94: V38 = 0x4c7
0x97: JUMP 0x4c7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x98]
Exit stack: [V11, 0x98]

================================

Block 0x98
[0x98:0xad]
---
Predecessors: [0x4c7]
Successors: []
---
0x98 JUMPDEST
0x99 PUSH1 0x40
0x9b MLOAD
0x9c DUP1
0x9d DUP3
0x9e DUP2
0x9f MSTORE
0xa0 PUSH1 0x20
0xa2 ADD
0xa3 SWAP2
0xa4 POP
0xa5 POP
0xa6 PUSH1 0x40
0xa8 MLOAD
0xa9 DUP1
0xaa SWAP2
0xab SUB
0xac SWAP1
0xad RETURN
---
0x98: JUMPDEST 
0x99: V39 = 0x40
0x9b: V40 = M[0x40]
0x9f: M[V40] = V274
0xa0: V41 = 0x20
0xa2: V42 = ADD 0x20 V40
0xa6: V43 = 0x40
0xa8: V44 = M[0x40]
0xab: V45 = SUB V42 V44
0xad: RETURN V44 V45
---
Entry stack: [V11, 0x98, V274]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x98]

================================

Block 0xae
[0xae:0xb4]
---
Predecessors: [0x4c]
Successors: [0xb5, 0xb9]
---
0xae JUMPDEST
0xaf CALLVALUE
0xb0 ISZERO
0xb1 PUSH2 0xb9
0xb4 JUMPI
---
0xae: JUMPDEST 
0xaf: V46 = CALLVALUE
0xb0: V47 = ISZERO V46
0xb1: V48 = 0xb9
0xb4: JUMPI 0xb9 V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb5
[0xb5:0xb8]
---
Predecessors: [0xae]
Successors: []
---
0xb5 PUSH1 0x0
0xb7 DUP1
0xb8 REVERT
---
0xb5: V49 = 0x0
0xb8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xe4]
---
Predecessors: [0xae]
Successors: [0x4cd]
---
0xb9 JUMPDEST
0xba PUSH2 0xe5
0xbd PUSH1 0x4
0xbf DUP1
0xc0 DUP1
0xc1 CALLDATALOAD
0xc2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd7 AND
0xd8 SWAP1
0xd9 PUSH1 0x20
0xdb ADD
0xdc SWAP1
0xdd SWAP2
0xde SWAP1
0xdf POP
0xe0 POP
0xe1 PUSH2 0x4cd
0xe4 JUMP
---
0xb9: JUMPDEST 
0xba: V50 = 0xe5
0xbd: V51 = 0x4
0xc1: V52 = CALLDATALOAD 0x4
0xc2: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xd7: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xd9: V55 = 0x20
0xdb: V56 = ADD 0x20 0x4
0xe1: V57 = 0x4cd
0xe4: JUMP 0x4cd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe5, V54]
Exit stack: [V11, 0xe5, V54]

================================

Block 0xe5
[0xe5:0xfa]
---
Predecessors: [0x4cd]
Successors: []
---
0xe5 JUMPDEST
0xe6 PUSH1 0x40
0xe8 MLOAD
0xe9 DUP1
0xea DUP3
0xeb DUP2
0xec MSTORE
0xed PUSH1 0x20
0xef ADD
0xf0 SWAP2
0xf1 POP
0xf2 POP
0xf3 PUSH1 0x40
0xf5 MLOAD
0xf6 DUP1
0xf7 SWAP2
0xf8 SUB
0xf9 SWAP1
0xfa RETURN
---
0xe5: JUMPDEST 
0xe6: V58 = 0x40
0xe8: V59 = M[0x40]
0xec: M[V59] = V282
0xed: V60 = 0x20
0xef: V61 = ADD 0x20 V59
0xf3: V62 = 0x40
0xf5: V63 = M[0x40]
0xf8: V64 = SUB V61 V63
0xfa: RETURN V63 V64
---
Entry stack: [V11, 0xe5, V282]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe5]

================================

Block 0xfb
[0xfb:0x126]
---
Predecessors: [0x57]
Successors: [0x129]
---
0xfb JUMPDEST
0xfc PUSH2 0x127
0xff PUSH1 0x4
0x101 DUP1
0x102 DUP1
0x103 CALLDATALOAD
0x104 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x119 AND
0x11a SWAP1
0x11b PUSH1 0x20
0x11d ADD
0x11e SWAP1
0x11f SWAP2
0x120 SWAP1
0x121 POP
0x122 POP
0x123 PUSH2 0x129
0x126 JUMP
---
0xfb: JUMPDEST 
0xfc: V65 = 0x127
0xff: V66 = 0x4
0x103: V67 = CALLDATALOAD 0x4
0x104: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x119: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x11b: V70 = 0x20
0x11d: V71 = ADD 0x20 0x4
0x123: V72 = 0x129
0x126: JUMP 0x129
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x127, V69]
Exit stack: [V11, 0x127, V69]

================================

Block 0x127
[0x127:0x128]
---
Predecessors: [0x283]
Successors: []
---
0x127 JUMPDEST
0x128 STOP
---
0x127: JUMPDEST 
0x128: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x129
[0x129:0x26d]
---
Predecessors: [0x62, 0xfb]
Successors: [0x26e, 0x272]
---
0x129 JUMPDEST
0x12a CALLVALUE
0x12b PUSH1 0x0
0x12d DUP1
0x12e DUP4
0x12f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x144 AND
0x145 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15a AND
0x15b DUP2
0x15c MSTORE
0x15d PUSH1 0x20
0x15f ADD
0x160 SWAP1
0x161 DUP2
0x162 MSTORE
0x163 PUSH1 0x20
0x165 ADD
0x166 PUSH1 0x0
0x168 SHA3
0x169 PUSH1 0x0
0x16b DUP3
0x16c DUP3
0x16d SLOAD
0x16e ADD
0x16f SWAP3
0x170 POP
0x171 POP
0x172 DUP2
0x173 SWAP1
0x174 SSTORE
0x175 POP
0x176 PUSH1 0x2
0x178 PUSH1 0x0
0x17a SWAP1
0x17b SLOAD
0x17c SWAP1
0x17d PUSH2 0x100
0x180 EXP
0x181 SWAP1
0x182 DIV
0x183 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x198 AND
0x199 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ae AND
0x1af PUSH4 0x4c2f04a4
0x1b4 CALLER
0x1b5 CALLVALUE
0x1b6 PUSH1 0x40
0x1b8 MLOAD
0x1b9 DUP4
0x1ba PUSH4 0xffffffff
0x1bf AND
0x1c0 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1de MUL
0x1df DUP2
0x1e0 MSTORE
0x1e1 PUSH1 0x4
0x1e3 ADD
0x1e4 DUP1
0x1e5 DUP4
0x1e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fb AND
0x1fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x211 AND
0x212 DUP2
0x213 MSTORE
0x214 PUSH1 0x20
0x216 ADD
0x217 DUP3
0x218 DUP2
0x219 MSTORE
0x21a PUSH1 0x20
0x21c ADD
0x21d DUP1
0x21e PUSH1 0x20
0x220 ADD
0x221 DUP3
0x222 DUP2
0x223 SUB
0x224 DUP3
0x225 MSTORE
0x226 PUSH1 0x3
0x228 DUP2
0x229 MSTORE
0x22a PUSH1 0x20
0x22c ADD
0x22d DUP1
0x22e PUSH32 0x5075740000000000000000000000000000000000000000000000000000000000
0x24f DUP2
0x250 MSTORE
0x251 POP
0x252 PUSH1 0x20
0x254 ADD
0x255 SWAP4
0x256 POP
0x257 POP
0x258 POP
0x259 POP
0x25a PUSH1 0x0
0x25c PUSH1 0x40
0x25e MLOAD
0x25f DUP1
0x260 DUP4
0x261 SUB
0x262 DUP2
0x263 PUSH1 0x0
0x265 DUP8
0x266 DUP1
0x267 EXTCODESIZE
0x268 ISZERO
0x269 ISZERO
0x26a PUSH2 0x272
0x26d JUMPI
---
0x129: JUMPDEST 
0x12a: V73 = CALLVALUE
0x12b: V74 = 0x0
0x12f: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x144: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x145: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x15a: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x15c: M[0x0] = V78
0x15d: V79 = 0x20
0x15f: V80 = ADD 0x20 0x0
0x162: M[0x20] = 0x0
0x163: V81 = 0x20
0x165: V82 = ADD 0x20 0x20
0x166: V83 = 0x0
0x168: V84 = SHA3 0x0 0x40
0x169: V85 = 0x0
0x16d: V86 = S[V84]
0x16e: V87 = ADD V86 V73
0x174: S[V84] = V87
0x176: V88 = 0x2
0x178: V89 = 0x0
0x17b: V90 = S[0x2]
0x17d: V91 = 0x100
0x180: V92 = EXP 0x100 0x0
0x182: V93 = DIV V90 0x1
0x183: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x198: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x199: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1af: V98 = 0x4c2f04a4
0x1b4: V99 = CALLER
0x1b5: V100 = CALLVALUE
0x1b6: V101 = 0x40
0x1b8: V102 = M[0x40]
0x1ba: V103 = 0xffffffff
0x1bf: V104 = AND 0xffffffff 0x4c2f04a4
0x1c0: V105 = 0x100000000000000000000000000000000000000000000000000000000
0x1de: V106 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4c2f04a4
0x1e0: M[V102] = 0x4c2f04a400000000000000000000000000000000000000000000000000000000
0x1e1: V107 = 0x4
0x1e3: V108 = ADD 0x4 V102
0x1e6: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fb: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x1fc: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x211: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x213: M[V108] = V112
0x214: V113 = 0x20
0x216: V114 = ADD 0x20 V108
0x219: M[V114] = V100
0x21a: V115 = 0x20
0x21c: V116 = ADD 0x20 V114
0x21e: V117 = 0x20
0x220: V118 = ADD 0x20 V116
0x223: V119 = SUB V118 V108
0x225: M[V116] = V119
0x226: V120 = 0x3
0x229: M[V118] = 0x3
0x22a: V121 = 0x20
0x22c: V122 = ADD 0x20 V118
0x22e: V123 = 0x5075740000000000000000000000000000000000000000000000000000000000
0x250: M[V122] = 0x5075740000000000000000000000000000000000000000000000000000000000
0x252: V124 = 0x20
0x254: V125 = ADD 0x20 V122
0x25a: V126 = 0x0
0x25c: V127 = 0x40
0x25e: V128 = M[0x40]
0x261: V129 = SUB V125 V128
0x263: V130 = 0x0
0x267: V131 = EXTCODESIZE V97
0x268: V132 = ISZERO V131
0x269: V133 = ISZERO V132
0x26a: V134 = 0x272
0x26d: JUMPI 0x272 V133
---
Entry stack: [V11, {0x6b, 0x127}, S0]
Stack pops: 1
Stack additions: [S0, V97, 0x4c2f04a4, V125, 0x0, V128, V129, V128, 0x0, V97]
Exit stack: [V11, {0x6b, 0x127}, S0, V97, 0x4c2f04a4, V125, 0x0, V128, V129, V128, 0x0, V97]

================================

Block 0x26e
[0x26e:0x271]
---
Predecessors: [0x129]
Successors: []
---
0x26e PUSH1 0x0
0x270 DUP1
0x271 REVERT
---
0x26e: V135 = 0x0
0x271: REVERT 0x0 0x0
---
Entry stack: [V11, {0x6b, 0x127}, S9, V97, 0x4c2f04a4, V125, 0x0, V128, V129, V128, 0x0, V97]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6b, 0x127}, S9, V97, 0x4c2f04a4, V125, 0x0, V128, V129, V128, 0x0, V97]

================================

Block 0x272
[0x272:0x27e]
---
Predecessors: [0x129]
Successors: [0x27f, 0x283]
---
0x272 JUMPDEST
0x273 PUSH2 0x2c6
0x276 GAS
0x277 SUB
0x278 CALL
0x279 ISZERO
0x27a ISZERO
0x27b PUSH2 0x283
0x27e JUMPI
---
0x272: JUMPDEST 
0x273: V136 = 0x2c6
0x276: V137 = GAS
0x277: V138 = SUB V137 0x2c6
0x278: V139 = CALL V138 V97 0x0 V128 V129 V128 0x0
0x279: V140 = ISZERO V139
0x27a: V141 = ISZERO V140
0x27b: V142 = 0x283
0x27e: JUMPI 0x283 V141
---
Entry stack: [V11, {0x6b, 0x127}, S9, V97, 0x4c2f04a4, V125, 0x0, V128, V129, V128, 0x0, V97]
Stack pops: 6
Stack additions: []
Exit stack: [V11, {0x6b, 0x127}, S9, V97, 0x4c2f04a4, V125]

================================

Block 0x27f
[0x27f:0x282]
---
Predecessors: [0x272]
Successors: []
---
0x27f PUSH1 0x0
0x281 DUP1
0x282 REVERT
---
0x27f: V143 = 0x0
0x282: REVERT 0x0 0x0
---
Entry stack: [V11, {0x6b, 0x127}, S3, S2, 0x4c2f04a4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x6b, 0x127}, S3, S2, 0x4c2f04a4, S0]

================================

Block 0x283
[0x283:0x28f]
---
Predecessors: [0x272]
Successors: [0x6b, 0x127]
---
0x283 JUMPDEST
0x284 POP
0x285 POP
0x286 POP
0x287 NUMBER
0x288 PUSH1 0x3
0x28a DUP2
0x28b SWAP1
0x28c SSTORE
0x28d POP
0x28e POP
0x28f JUMP
---
0x283: JUMPDEST 
0x287: V144 = NUMBER
0x288: V145 = 0x3
0x28c: S[0x3] = V144
0x28f: JUMP {0x6b, 0x127}
---
Entry stack: [V11, {0x6b, 0x127}, S3, S2, 0x4c2f04a4, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x290
[0x290:0x2da]
---
Predecessors: [0x6d]
Successors: [0x2db, 0x31e]
---
0x290 JUMPDEST
0x291 PUSH1 0x1
0x293 SLOAD
0x294 PUSH1 0x0
0x296 DUP1
0x297 CALLER
0x298 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ad AND
0x2ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c3 AND
0x2c4 DUP2
0x2c5 MSTORE
0x2c6 PUSH1 0x20
0x2c8 ADD
0x2c9 SWAP1
0x2ca DUP2
0x2cb MSTORE
0x2cc PUSH1 0x20
0x2ce ADD
0x2cf PUSH1 0x0
0x2d1 SHA3
0x2d2 SLOAD
0x2d3 LT
0x2d4 ISZERO
0x2d5 DUP1
0x2d6 ISZERO
0x2d7 PUSH2 0x31e
0x2da JUMPI
---
0x290: JUMPDEST 
0x291: V146 = 0x1
0x293: V147 = S[0x1]
0x294: V148 = 0x0
0x297: V149 = CALLER
0x298: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ad: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x2ae: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c3: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x2c5: M[0x0] = V153
0x2c6: V154 = 0x20
0x2c8: V155 = ADD 0x20 0x0
0x2cb: M[0x20] = 0x0
0x2cc: V156 = 0x20
0x2ce: V157 = ADD 0x20 0x20
0x2cf: V158 = 0x0
0x2d1: V159 = SHA3 0x0 0x40
0x2d2: V160 = S[V159]
0x2d3: V161 = LT V160 V147
0x2d4: V162 = ISZERO V161
0x2d6: V163 = ISZERO V162
0x2d7: V164 = 0x31e
0x2da: JUMPI 0x31e V163
---
Entry stack: [V11, 0x83, V29]
Stack pops: 0
Stack additions: [V162]
Exit stack: [V11, 0x83, V29, V162]

================================

Block 0x2db
[0x2db:0x31d]
---
Predecessors: [0x290]
Successors: [0x31e]
---
0x2db POP
0x2dc PUSH1 0x0
0x2de DUP1
0x2df CALLER
0x2e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f5 AND
0x2f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30b AND
0x30c DUP2
0x30d MSTORE
0x30e PUSH1 0x20
0x310 ADD
0x311 SWAP1
0x312 DUP2
0x313 MSTORE
0x314 PUSH1 0x20
0x316 ADD
0x317 PUSH1 0x0
0x319 SHA3
0x31a SLOAD
0x31b DUP2
0x31c GT
0x31d ISZERO
---
0x2dc: V165 = 0x0
0x2df: V166 = CALLER
0x2e0: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f5: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x2f6: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x30b: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x30d: M[0x0] = V170
0x30e: V171 = 0x20
0x310: V172 = ADD 0x20 0x0
0x313: M[0x20] = 0x0
0x314: V173 = 0x20
0x316: V174 = ADD 0x20 0x20
0x317: V175 = 0x0
0x319: V176 = SHA3 0x0 0x40
0x31a: V177 = S[V176]
0x31c: V178 = GT V29 V177
0x31d: V179 = ISZERO V178
---
Entry stack: [V11, 0x83, V29, V162]
Stack pops: 2
Stack additions: [S1, V179]
Exit stack: [V11, 0x83, V29, V179]

================================

Block 0x31e
[0x31e:0x324]
---
Predecessors: [0x290, 0x2db]
Successors: [0x325, 0x32b]
---
0x31e JUMPDEST
0x31f DUP1
0x320 ISZERO
0x321 PUSH2 0x32b
0x324 JUMPI
---
0x31e: JUMPDEST 
0x320: V180 = ISZERO S0
0x321: V181 = 0x32b
0x324: JUMPI 0x32b V180
---
Entry stack: [V11, 0x83, V29, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x83, V29, S0]

================================

Block 0x325
[0x325:0x32a]
---
Predecessors: [0x31e]
Successors: [0x32b]
---
0x325 POP
0x326 PUSH1 0x3
0x328 SLOAD
0x329 NUMBER
0x32a GT
---
0x326: V182 = 0x3
0x328: V183 = S[0x3]
0x329: V184 = NUMBER
0x32a: V185 = GT V184 V183
---
Entry stack: [V11, 0x83, V29, S0]
Stack pops: 1
Stack additions: [V185]
Exit stack: [V11, 0x83, V29, V185]

================================

Block 0x32b
[0x32b:0x330]
---
Predecessors: [0x31e, 0x325]
Successors: [0x331, 0x4c4]
---
0x32b JUMPDEST
0x32c ISZERO
0x32d PUSH2 0x4c4
0x330 JUMPI
---
0x32b: JUMPDEST 
0x32c: V186 = ISZERO S0
0x32d: V187 = 0x4c4
0x330: JUMPI 0x4c4 V186
---
Entry stack: [V11, 0x83, V29, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x83, V29]

================================

Block 0x331
[0x331:0x365]
---
Predecessors: [0x32b]
Successors: [0x366, 0x4c3]
---
0x331 CALLER
0x332 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x347 AND
0x348 DUP2
0x349 PUSH1 0x40
0x34b MLOAD
0x34c PUSH1 0x0
0x34e PUSH1 0x40
0x350 MLOAD
0x351 DUP1
0x352 DUP4
0x353 SUB
0x354 DUP2
0x355 DUP6
0x356 DUP8
0x357 PUSH2 0x8796
0x35a GAS
0x35b SUB
0x35c CALL
0x35d SWAP3
0x35e POP
0x35f POP
0x360 POP
0x361 ISZERO
0x362 PUSH2 0x4c3
0x365 JUMPI
---
0x331: V188 = CALLER
0x332: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x347: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x349: V191 = 0x40
0x34b: V192 = M[0x40]
0x34c: V193 = 0x0
0x34e: V194 = 0x40
0x350: V195 = M[0x40]
0x353: V196 = SUB V192 V195
0x357: V197 = 0x8796
0x35a: V198 = GAS
0x35b: V199 = SUB V198 0x8796
0x35c: V200 = CALL V199 V190 V29 V195 V196 V195 0x0
0x361: V201 = ISZERO V200
0x362: V202 = 0x4c3
0x365: JUMPI 0x4c3 V201
---
Entry stack: [V11, 0x83, V29]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x83, V29]

================================

Block 0x366
[0x366:0x4a9]
---
Predecessors: [0x331]
Successors: [0x4aa, 0x4ae]
---
0x366 DUP1
0x367 PUSH1 0x0
0x369 DUP1
0x36a CALLER
0x36b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x380 AND
0x381 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x396 AND
0x397 DUP2
0x398 MSTORE
0x399 PUSH1 0x20
0x39b ADD
0x39c SWAP1
0x39d DUP2
0x39e MSTORE
0x39f PUSH1 0x20
0x3a1 ADD
0x3a2 PUSH1 0x0
0x3a4 SHA3
0x3a5 PUSH1 0x0
0x3a7 DUP3
0x3a8 DUP3
0x3a9 SLOAD
0x3aa SUB
0x3ab SWAP3
0x3ac POP
0x3ad POP
0x3ae DUP2
0x3af SWAP1
0x3b0 SSTORE
0x3b1 POP
0x3b2 PUSH1 0x2
0x3b4 PUSH1 0x0
0x3b6 SWAP1
0x3b7 SLOAD
0x3b8 SWAP1
0x3b9 PUSH2 0x100
0x3bc EXP
0x3bd SWAP1
0x3be DIV
0x3bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d4 AND
0x3d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ea AND
0x3eb PUSH4 0x4c2f04a4
0x3f0 CALLER
0x3f1 DUP4
0x3f2 PUSH1 0x40
0x3f4 MLOAD
0x3f5 DUP4
0x3f6 PUSH4 0xffffffff
0x3fb AND
0x3fc PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x41a MUL
0x41b DUP2
0x41c MSTORE
0x41d PUSH1 0x4
0x41f ADD
0x420 DUP1
0x421 DUP4
0x422 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x437 AND
0x438 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44d AND
0x44e DUP2
0x44f MSTORE
0x450 PUSH1 0x20
0x452 ADD
0x453 DUP3
0x454 DUP2
0x455 MSTORE
0x456 PUSH1 0x20
0x458 ADD
0x459 DUP1
0x45a PUSH1 0x20
0x45c ADD
0x45d DUP3
0x45e DUP2
0x45f SUB
0x460 DUP3
0x461 MSTORE
0x462 PUSH1 0x7
0x464 DUP2
0x465 MSTORE
0x466 PUSH1 0x20
0x468 ADD
0x469 DUP1
0x46a PUSH32 0x436f6c6c65637400000000000000000000000000000000000000000000000000
0x48b DUP2
0x48c MSTORE
0x48d POP
0x48e PUSH1 0x20
0x490 ADD
0x491 SWAP4
0x492 POP
0x493 POP
0x494 POP
0x495 POP
0x496 PUSH1 0x0
0x498 PUSH1 0x40
0x49a MLOAD
0x49b DUP1
0x49c DUP4
0x49d SUB
0x49e DUP2
0x49f PUSH1 0x0
0x4a1 DUP8
0x4a2 DUP1
0x4a3 EXTCODESIZE
0x4a4 ISZERO
0x4a5 ISZERO
0x4a6 PUSH2 0x4ae
0x4a9 JUMPI
---
0x367: V203 = 0x0
0x36a: V204 = CALLER
0x36b: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x380: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x381: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x396: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x398: M[0x0] = V208
0x399: V209 = 0x20
0x39b: V210 = ADD 0x20 0x0
0x39e: M[0x20] = 0x0
0x39f: V211 = 0x20
0x3a1: V212 = ADD 0x20 0x20
0x3a2: V213 = 0x0
0x3a4: V214 = SHA3 0x0 0x40
0x3a5: V215 = 0x0
0x3a9: V216 = S[V214]
0x3aa: V217 = SUB V216 V29
0x3b0: S[V214] = V217
0x3b2: V218 = 0x2
0x3b4: V219 = 0x0
0x3b7: V220 = S[0x2]
0x3b9: V221 = 0x100
0x3bc: V222 = EXP 0x100 0x0
0x3be: V223 = DIV V220 0x1
0x3bf: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d4: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x3d5: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ea: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x3eb: V228 = 0x4c2f04a4
0x3f0: V229 = CALLER
0x3f2: V230 = 0x40
0x3f4: V231 = M[0x40]
0x3f6: V232 = 0xffffffff
0x3fb: V233 = AND 0xffffffff 0x4c2f04a4
0x3fc: V234 = 0x100000000000000000000000000000000000000000000000000000000
0x41a: V235 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4c2f04a4
0x41c: M[V231] = 0x4c2f04a400000000000000000000000000000000000000000000000000000000
0x41d: V236 = 0x4
0x41f: V237 = ADD 0x4 V231
0x422: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x437: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x438: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x44d: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x44f: M[V237] = V241
0x450: V242 = 0x20
0x452: V243 = ADD 0x20 V237
0x455: M[V243] = V29
0x456: V244 = 0x20
0x458: V245 = ADD 0x20 V243
0x45a: V246 = 0x20
0x45c: V247 = ADD 0x20 V245
0x45f: V248 = SUB V247 V237
0x461: M[V245] = V248
0x462: V249 = 0x7
0x465: M[V247] = 0x7
0x466: V250 = 0x20
0x468: V251 = ADD 0x20 V247
0x46a: V252 = 0x436f6c6c65637400000000000000000000000000000000000000000000000000
0x48c: M[V251] = 0x436f6c6c65637400000000000000000000000000000000000000000000000000
0x48e: V253 = 0x20
0x490: V254 = ADD 0x20 V251
0x496: V255 = 0x0
0x498: V256 = 0x40
0x49a: V257 = M[0x40]
0x49d: V258 = SUB V254 V257
0x49f: V259 = 0x0
0x4a3: V260 = EXTCODESIZE V227
0x4a4: V261 = ISZERO V260
0x4a5: V262 = ISZERO V261
0x4a6: V263 = 0x4ae
0x4a9: JUMPI 0x4ae V262
---
Entry stack: [V11, 0x83, V29]
Stack pops: 1
Stack additions: [S0, V227, 0x4c2f04a4, V254, 0x0, V257, V258, V257, 0x0, V227]
Exit stack: [V11, 0x83, V29, V227, 0x4c2f04a4, V254, 0x0, V257, V258, V257, 0x0, V227]

================================

Block 0x4aa
[0x4aa:0x4ad]
---
Predecessors: [0x366]
Successors: []
---
0x4aa PUSH1 0x0
0x4ac DUP1
0x4ad REVERT
---
0x4aa: V264 = 0x0
0x4ad: REVERT 0x0 0x0
---
Entry stack: [V11, 0x83, V29, V227, 0x4c2f04a4, V254, 0x0, V257, V258, V257, 0x0, V227]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x83, V29, V227, 0x4c2f04a4, V254, 0x0, V257, V258, V257, 0x0, V227]

================================

Block 0x4ae
[0x4ae:0x4ba]
---
Predecessors: [0x366]
Successors: [0x4bb, 0x4bf]
---
0x4ae JUMPDEST
0x4af PUSH2 0x2c6
0x4b2 GAS
0x4b3 SUB
0x4b4 CALL
0x4b5 ISZERO
0x4b6 ISZERO
0x4b7 PUSH2 0x4bf
0x4ba JUMPI
---
0x4ae: JUMPDEST 
0x4af: V265 = 0x2c6
0x4b2: V266 = GAS
0x4b3: V267 = SUB V266 0x2c6
0x4b4: V268 = CALL V267 V227 0x0 V257 V258 V257 0x0
0x4b5: V269 = ISZERO V268
0x4b6: V270 = ISZERO V269
0x4b7: V271 = 0x4bf
0x4ba: JUMPI 0x4bf V270
---
Entry stack: [V11, 0x83, V29, V227, 0x4c2f04a4, V254, 0x0, V257, V258, V257, 0x0, V227]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x83, V29, V227, 0x4c2f04a4, V254]

================================

Block 0x4bb
[0x4bb:0x4be]
---
Predecessors: [0x4ae]
Successors: []
---
0x4bb PUSH1 0x0
0x4bd DUP1
0x4be REVERT
---
0x4bb: V272 = 0x0
0x4be: REVERT 0x0 0x0
---
Entry stack: [V11, 0x83, V29, V227, 0x4c2f04a4, V254]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x83, V29, V227, 0x4c2f04a4, V254]

================================

Block 0x4bf
[0x4bf:0x4c2]
---
Predecessors: [0x4ae]
Successors: [0x4c3]
---
0x4bf JUMPDEST
0x4c0 POP
0x4c1 POP
0x4c2 POP
---
0x4bf: JUMPDEST 
---
Entry stack: [V11, 0x83, V29, V227, 0x4c2f04a4, V254]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x83, V29]

================================

Block 0x4c3
[0x4c3:0x4c3]
---
Predecessors: [0x331, 0x4bf]
Successors: [0x4c4]
---
0x4c3 JUMPDEST
---
0x4c3: JUMPDEST 
---
Entry stack: [V11, 0x83, V29]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x83, V29]

================================

Block 0x4c4
[0x4c4:0x4c6]
---
Predecessors: [0x32b, 0x4c3]
Successors: [0x83]
---
0x4c4 JUMPDEST
0x4c5 POP
0x4c6 JUMP
---
0x4c4: JUMPDEST 
0x4c6: JUMP 0x83
---
Entry stack: [V11, 0x83, V29]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x4c7
[0x4c7:0x4cc]
---
Predecessors: [0x90]
Successors: [0x98]
---
0x4c7 JUMPDEST
0x4c8 PUSH1 0x1
0x4ca SLOAD
0x4cb DUP2
0x4cc JUMP
---
0x4c7: JUMPDEST 
0x4c8: V273 = 0x1
0x4ca: V274 = S[0x1]
0x4cc: JUMP 0x98
---
Entry stack: [V11, 0x98]
Stack pops: 1
Stack additions: [S0, V274]
Exit stack: [V11, 0x98, V274]

================================

Block 0x4cd
[0x4cd:0x4e4]
---
Predecessors: [0xb9]
Successors: [0xe5]
---
0x4cd JUMPDEST
0x4ce PUSH1 0x0
0x4d0 PUSH1 0x20
0x4d2 MSTORE
0x4d3 DUP1
0x4d4 PUSH1 0x0
0x4d6 MSTORE
0x4d7 PUSH1 0x40
0x4d9 PUSH1 0x0
0x4db SHA3
0x4dc PUSH1 0x0
0x4de SWAP2
0x4df POP
0x4e0 SWAP1
0x4e1 POP
0x4e2 SLOAD
0x4e3 DUP2
0x4e4 JUMP
---
0x4cd: JUMPDEST 
0x4ce: V275 = 0x0
0x4d0: V276 = 0x20
0x4d2: M[0x20] = 0x0
0x4d4: V277 = 0x0
0x4d6: M[0x0] = V54
0x4d7: V278 = 0x40
0x4d9: V279 = 0x0
0x4db: V280 = SHA3 0x0 0x40
0x4dc: V281 = 0x0
0x4e2: V282 = S[V280]
0x4e4: JUMP 0xe5
---
Entry stack: [V11, 0xe5, V54]
Stack pops: 2
Stack additions: [S1, V282]
Exit stack: [V11, 0xe5, V282]

================================

Block 0x4e5
[0x4e5:0x510]
---
Predecessors: []
Successors: []
---
0x4e5 STOP
0x4e6 LOG1
0x4e7 PUSH6 0x627a7a723058
0x4ee SHA3
0x4ef DELEGATECALL
0x4f0 DUP16
0x4f1 LOG3
0x4f2 SWAP1
0x4f3 GASLIMIT
0x4f4 PUSH27 0xcf6af482b376eac20dfa4ac4098e90cc4ea3c2f466d9d6e3117100
0x510 MISSING 0x29
---
0x4e5: STOP 
0x4e6: LOG S0 S1 S2
0x4e7: V283 = 0x627a7a723058
0x4ee: V284 = SHA3 0x627a7a723058 S3
0x4ef: V285 = DELEGATECALL V284 S4 S5 S6 S7 S8
0x4f1: LOG S23 V285 S9 S10 S11
0x4f3: V286 = GASLIMIT
0x4f4: V287 = 0xcf6af482b376eac20dfa4ac4098e90cc4ea3c2f466d9d6e3117100
0x510: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xcf6af482b376eac20dfa4ac4098e90cc4ea3c2f466d9d6e3117100, V286, S13, S12, S14, S15, S16, S17, S18, S19, S20, S21, S22, S23]
Exit stack: []

================================

Function 0:
Public function signature: 0x3fe43822
Entry block: 0x6d
Exit block: 0x4bb
Body: 0x6d, 0x83, 0x290, 0x2db, 0x31e, 0x325, 0x32b, 0x331, 0x366, 0x4aa, 0x4ae, 0x4bb, 0x4bf, 0x4c3, 0x4c4

Function 1:
Public function signature: 0xc2808d1a
Entry block: 0x85
Exit block: 0x98
Body: 0x85, 0x8c, 0x90, 0x98, 0x4c7

Function 2:
Public function signature: 0xe203b506
Entry block: 0xae
Exit block: 0xe5
Body: 0xae, 0xb5, 0xb9, 0xe5, 0x4cd

Function 3:
Public function signature: 0xe5b5fe72
Entry block: 0xfb
Exit block: 0x127
Body: 0xfb, 0x127

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x6b
Body: 0x62, 0x6b

Function 5:
Private function
Entry block: 0x129
Exit block: 0x283
Body: 0x129, 0x272, 0x283

