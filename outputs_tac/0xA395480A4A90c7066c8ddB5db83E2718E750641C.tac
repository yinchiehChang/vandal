Block 0x0
[0x0:0x38]
---
Predecessors: []
Successors: [0x39, 0x67]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x0
0x7 CALLDATALOAD
0x8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26 SWAP1
0x27 DIV
0x28 PUSH4 0xffffffff
0x2d AND
0x2e DUP1
0x2f PUSH4 0x3ccfd60b
0x34 EQ
0x35 PUSH2 0x67
0x38 JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x0
0x7: V3 = CALLDATALOAD 0x0
0x8: V4 = 0x100000000000000000000000000000000000000000000000000000000
0x27: V5 = DIV V3 0x100000000000000000000000000000000000000000000000000000000
0x28: V6 = 0xffffffff
0x2d: V7 = AND 0xffffffff V5
0x2f: V8 = 0x3ccfd60b
0x34: V9 = EQ 0x3ccfd60b V7
0x35: V10 = 0x67
0x38: JUMPI 0x67 V9
---
Entry stack: []
Stack pops: 0
Stack additions: [V7]
Exit stack: [V7]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0x0]
Successors: [0x44, 0x79]
---
0x39 DUP1
0x3a PUSH4 0x5a70fe72
0x3f EQ
0x40 PUSH2 0x79
0x43 JUMPI
---
0x3a: V11 = 0x5a70fe72
0x3f: V12 = EQ 0x5a70fe72 V7
0x40: V13 = 0x79
0x43: JUMPI 0x79 V12
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0x9f]
---
0x44 DUP1
0x45 PUSH4 0x6046d718
0x4a EQ
0x4b PUSH2 0x9f
0x4e JUMPI
---
0x45: V14 = 0x6046d718
0x4a: V15 = EQ 0x6046d718 V7
0x4b: V16 = 0x9f
0x4e: JUMPI 0x9f V15
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x102]
---
0x4f DUP1
0x50 PUSH4 0xb0a94ef7
0x55 EQ
0x56 PUSH2 0x102
0x59 JUMPI
---
0x50: V17 = 0xb0a94ef7
0x55: V18 = EQ 0xb0a94ef7 V7
0x56: V19 = 0x102
0x59: JUMPI 0x102 V18
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0x122]
---
0x5a DUP1
0x5b PUSH4 0xc0819961
0x60 EQ
0x61 PUSH2 0x122
0x64 JUMPI
---
0x5b: V20 = 0xc0819961
0x60: V21 = EQ 0xc0819961 V7
0x61: V22 = 0x122
0x64: JUMPI 0x122 V21
---
Entry stack: [V7]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V7]

================================

Block 0x65
[0x65:0x66]
---
Predecessors: [0x5a]
Successors: []
---
0x65 JUMPDEST
0x66 INVALID
---
0x65: JUMPDEST 
0x66: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x67
[0x67:0x6d]
---
Predecessors: [0x0]
Successors: [0x6e, 0x6f]
---
0x67 JUMPDEST
0x68 CALLVALUE
0x69 ISZERO
0x6a PUSH2 0x6f
0x6d JUMPI
---
0x67: JUMPDEST 
0x68: V23 = CALLVALUE
0x69: V24 = ISZERO V23
0x6a: V25 = 0x6f
0x6d: JUMPI 0x6f V24
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x6e
[0x6e:0x6e]
---
Predecessors: [0x67]
Successors: []
---
0x6e INVALID
---
0x6e: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0x67]
Successors: [0x12c]
---
0x6f JUMPDEST
0x70 PUSH2 0x77
0x73 PUSH2 0x12c
0x76 JUMP
---
0x6f: JUMPDEST 
0x70: V26 = 0x77
0x73: V27 = 0x12c
0x76: JUMP 0x12c
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V7, 0x77]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x2a4]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x79
[0x79:0x7f]
---
Predecessors: [0x39]
Successors: [0x80, 0x81]
---
0x79 JUMPDEST
0x7a CALLVALUE
0x7b ISZERO
0x7c PUSH2 0x81
0x7f JUMPI
---
0x79: JUMPDEST 
0x7a: V28 = CALLVALUE
0x7b: V29 = ISZERO V28
0x7c: V30 = 0x81
0x7f: JUMPI 0x81 V29
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x80
[0x80:0x80]
---
Predecessors: [0x79]
Successors: []
---
0x80 INVALID
---
0x80: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x81
[0x81:0x88]
---
Predecessors: [0x79]
Successors: [0x2a6]
---
0x81 JUMPDEST
0x82 PUSH2 0x89
0x85 PUSH2 0x2a6
0x88 JUMP
---
0x81: JUMPDEST 
0x82: V31 = 0x89
0x85: V32 = 0x2a6
0x88: JUMP 0x2a6
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x89]
Exit stack: [V7, 0x89]

================================

Block 0x89
[0x89:0x9e]
---
Predecessors: [0x2eb]
Successors: []
---
0x89 JUMPDEST
0x8a PUSH1 0x40
0x8c MLOAD
0x8d DUP1
0x8e DUP3
0x8f DUP2
0x90 MSTORE
0x91 PUSH1 0x20
0x93 ADD
0x94 SWAP2
0x95 POP
0x96 POP
0x97 PUSH1 0x40
0x99 MLOAD
0x9a DUP1
0x9b SWAP2
0x9c SUB
0x9d SWAP1
0x9e RETURN
---
0x89: JUMPDEST 
0x8a: V33 = 0x40
0x8c: V34 = M[0x40]
0x90: M[V34] = V160
0x91: V35 = 0x20
0x93: V36 = ADD 0x20 V34
0x97: V37 = 0x40
0x99: V38 = M[0x40]
0x9c: V39 = SUB V36 V38
0x9e: RETURN V38 V39
---
Entry stack: [V7, V160]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x9f
[0x9f:0xff]
---
Predecessors: [0x44]
Successors: [0x2ee]
---
0x9f JUMPDEST
0xa0 PUSH2 0x100
0xa3 PUSH1 0x4
0xa5 DUP1
0xa6 DUP1
0xa7 CALLDATALOAD
0xa8 SWAP1
0xa9 PUSH1 0x20
0xab ADD
0xac SWAP1
0xad SWAP2
0xae SWAP1
0xaf DUP1
0xb0 CALLDATALOAD
0xb1 PUSH1 0x0
0xb3 NOT
0xb4 AND
0xb5 SWAP1
0xb6 PUSH1 0x20
0xb8 ADD
0xb9 SWAP1
0xba SWAP2
0xbb SWAP1
0xbc DUP1
0xbd CALLDATALOAD
0xbe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd3 AND
0xd4 SWAP1
0xd5 PUSH1 0x20
0xd7 ADD
0xd8 SWAP1
0xd9 SWAP2
0xda SWAP1
0xdb DUP1
0xdc CALLDATALOAD
0xdd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf2 AND
0xf3 SWAP1
0xf4 PUSH1 0x20
0xf6 ADD
0xf7 SWAP1
0xf8 SWAP2
0xf9 SWAP1
0xfa POP
0xfb POP
0xfc PUSH2 0x2ee
0xff JUMP
---
0x9f: JUMPDEST 
0xa0: V40 = 0x100
0xa3: V41 = 0x4
0xa7: V42 = CALLDATALOAD 0x4
0xa9: V43 = 0x20
0xab: V44 = ADD 0x20 0x4
0xb0: V45 = CALLDATALOAD 0x24
0xb1: V46 = 0x0
0xb3: V47 = NOT 0x0
0xb4: V48 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V45
0xb6: V49 = 0x20
0xb8: V50 = ADD 0x20 0x24
0xbd: V51 = CALLDATALOAD 0x44
0xbe: V52 = 0xffffffffffffffffffffffffffffffffffffffff
0xd3: V53 = AND 0xffffffffffffffffffffffffffffffffffffffff V51
0xd5: V54 = 0x20
0xd7: V55 = ADD 0x20 0x44
0xdc: V56 = CALLDATALOAD 0x64
0xdd: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0xf2: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xf4: V59 = 0x20
0xf6: V60 = ADD 0x20 0x64
0xfc: V61 = 0x2ee
0xff: JUMP 0x2ee
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x100, V42, V48, V53, V58]
Exit stack: [V7, 0x100, V42, V48, V53, V58]

================================

Block 0x100
[0x100:0x101]
---
Predecessors: [0x412]
Successors: []
---
0x100 JUMPDEST
0x101 STOP
---
0x100: JUMPDEST 
0x101: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x102
[0x102:0x108]
---
Predecessors: [0x4f]
Successors: [0x109, 0x10a]
---
0x102 JUMPDEST
0x103 CALLVALUE
0x104 ISZERO
0x105 PUSH2 0x10a
0x108 JUMPI
---
0x102: JUMPDEST 
0x103: V62 = CALLVALUE
0x104: V63 = ISZERO V62
0x105: V64 = 0x10a
0x108: JUMPI 0x10a V63
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x109
[0x109:0x109]
---
Predecessors: [0x102]
Successors: []
---
0x109 INVALID
---
0x109: INVALID 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x10a
[0x10a:0x11f]
---
Predecessors: [0x102]
Successors: [0x418]
---
0x10a JUMPDEST
0x10b PUSH2 0x120
0x10e PUSH1 0x4
0x110 DUP1
0x111 DUP1
0x112 CALLDATALOAD
0x113 SWAP1
0x114 PUSH1 0x20
0x116 ADD
0x117 SWAP1
0x118 SWAP2
0x119 SWAP1
0x11a POP
0x11b POP
0x11c PUSH2 0x418
0x11f JUMP
---
0x10a: JUMPDEST 
0x10b: V65 = 0x120
0x10e: V66 = 0x4
0x112: V67 = CALLDATALOAD 0x4
0x114: V68 = 0x20
0x116: V69 = ADD 0x20 0x4
0x11c: V70 = 0x418
0x11f: JUMP 0x418
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x120, V67]
Exit stack: [V7, 0x120, V67]

================================

Block 0x120
[0x120:0x121]
---
Predecessors: [0x5c4]
Successors: []
---
0x120 JUMPDEST
0x121 STOP
---
0x120: JUMPDEST 
0x121: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x122
[0x122:0x129]
---
Predecessors: [0x5a]
Successors: [0x5c7]
---
0x122 JUMPDEST
0x123 PUSH2 0x12a
0x126 PUSH2 0x5c7
0x129 JUMP
---
0x122: JUMPDEST 
0x123: V71 = 0x12a
0x126: V72 = 0x5c7
0x129: JUMP 0x5c7
---
Entry stack: [V7]
Stack pops: 0
Stack additions: [0x12a]
Exit stack: [V7, 0x12a]

================================

Block 0x12a
[0x12a:0x12b]
---
Predecessors: [0x626]
Successors: []
---
0x12a JUMPDEST
0x12b STOP
---
0x12a: JUMPDEST 
0x12b: STOP 
---
Entry stack: [V7]
Stack pops: 0
Stack additions: []
Exit stack: [V7]

================================

Block 0x12c
[0x12c:0x182]
---
Predecessors: [0x6f]
Successors: [0x183, 0x2a3]
---
0x12c JUMPDEST
0x12d PUSH1 0x0
0x12f PUSH1 0x0
0x131 SWAP1
0x132 SLOAD
0x133 SWAP1
0x134 PUSH2 0x100
0x137 EXP
0x138 SWAP1
0x139 DIV
0x13a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14f AND
0x150 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x165 AND
0x166 CALLER
0x167 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17c AND
0x17d EQ
0x17e ISZERO
0x17f PUSH2 0x2a3
0x182 JUMPI
---
0x12c: JUMPDEST 
0x12d: V73 = 0x0
0x12f: V74 = 0x0
0x132: V75 = S[0x0]
0x134: V76 = 0x100
0x137: V77 = EXP 0x100 0x0
0x139: V78 = DIV V75 0x1
0x13a: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x14f: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V78
0x150: V81 = 0xffffffffffffffffffffffffffffffffffffffff
0x165: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V80
0x166: V83 = CALLER
0x167: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x17c: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0x17d: V86 = EQ V85 V82
0x17e: V87 = ISZERO V86
0x17f: V88 = 0x2a3
0x182: JUMPI 0x2a3 V87
---
Entry stack: [V7, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77]

================================

Block 0x183
[0x183:0x28f]
---
Predecessors: [0x12c]
Successors: [0x290, 0x291]
---
0x183 ADDRESS
0x184 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x199 AND
0x19a PUSH4 0x6046d718
0x19f ADDRESS
0x1a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b5 AND
0x1b6 BALANCE
0x1b7 CALLER
0x1b8 PUSH1 0x0
0x1ba PUSH1 0x0
0x1bc SWAP1
0x1bd SLOAD
0x1be SWAP1
0x1bf PUSH2 0x100
0x1c2 EXP
0x1c3 SWAP1
0x1c4 DIV
0x1c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1da AND
0x1db PUSH1 0x40
0x1dd MLOAD
0x1de DUP5
0x1df PUSH4 0xffffffff
0x1e4 AND
0x1e5 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x203 MUL
0x204 DUP2
0x205 MSTORE
0x206 PUSH1 0x4
0x208 ADD
0x209 DUP1
0x20a DUP5
0x20b DUP2
0x20c MSTORE
0x20d PUSH1 0x20
0x20f ADD
0x210 PUSH1 0x0
0x212 ADD
0x213 DUP4
0x214 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x229 AND
0x22a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23f AND
0x240 DUP2
0x241 MSTORE
0x242 PUSH1 0x20
0x244 ADD
0x245 DUP3
0x246 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25b AND
0x25c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x271 AND
0x272 DUP2
0x273 MSTORE
0x274 PUSH1 0x20
0x276 ADD
0x277 SWAP4
0x278 POP
0x279 POP
0x27a POP
0x27b POP
0x27c PUSH1 0x0
0x27e PUSH1 0x40
0x280 MLOAD
0x281 DUP1
0x282 DUP4
0x283 SUB
0x284 DUP2
0x285 PUSH1 0x0
0x287 DUP8
0x288 DUP1
0x289 EXTCODESIZE
0x28a ISZERO
0x28b ISZERO
0x28c PUSH2 0x291
0x28f JUMPI
---
0x183: V89 = ADDRESS
0x184: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x199: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x19a: V92 = 0x6046d718
0x19f: V93 = ADDRESS
0x1a0: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b5: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1b6: V96 = BALANCE V95
0x1b7: V97 = CALLER
0x1b8: V98 = 0x0
0x1ba: V99 = 0x0
0x1bd: V100 = S[0x0]
0x1bf: V101 = 0x100
0x1c2: V102 = EXP 0x100 0x0
0x1c4: V103 = DIV V100 0x1
0x1c5: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1db: V106 = 0x40
0x1dd: V107 = M[0x40]
0x1df: V108 = 0xffffffff
0x1e4: V109 = AND 0xffffffff 0x6046d718
0x1e5: V110 = 0x100000000000000000000000000000000000000000000000000000000
0x203: V111 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x6046d718
0x205: M[V107] = 0x6046d71800000000000000000000000000000000000000000000000000000000
0x206: V112 = 0x4
0x208: V113 = ADD 0x4 V107
0x20c: M[V113] = V96
0x20d: V114 = 0x20
0x20f: V115 = ADD 0x20 V113
0x210: V116 = 0x0
0x212: V117 = ADD 0x0 V115
0x214: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x229: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V97
0x22a: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x23f: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x241: M[V117] = V121
0x242: V122 = 0x20
0x244: V123 = ADD 0x20 V117
0x246: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x25b: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x25c: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x271: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x273: M[V123] = V127
0x274: V128 = 0x20
0x276: V129 = ADD 0x20 V123
0x27c: V130 = 0x0
0x27e: V131 = 0x40
0x280: V132 = M[0x40]
0x283: V133 = SUB V129 V132
0x285: V134 = 0x0
0x289: V135 = EXTCODESIZE V91
0x28a: V136 = ISZERO V135
0x28b: V137 = ISZERO V136
0x28c: V138 = 0x291
0x28f: JUMPI 0x291 V137
---
Entry stack: [V7, 0x77]
Stack pops: 0
Stack additions: [V91, 0x6046d718, V129, 0x0, V132, V133, V132, 0x0, V91]
Exit stack: [V7, 0x77, V91, 0x6046d718, V129, 0x0, V132, V133, V132, 0x0, V91]

================================

Block 0x290
[0x290:0x290]
---
Predecessors: [0x183]
Successors: []
---
0x290 INVALID
---
0x290: INVALID 
---
Entry stack: [V7, 0x77, V91, 0x6046d718, V129, 0x0, V132, V133, V132, 0x0, V91]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V91, 0x6046d718, V129, 0x0, V132, V133, V132, 0x0, V91]

================================

Block 0x291
[0x291:0x29d]
---
Predecessors: [0x183]
Successors: [0x29e, 0x29f]
---
0x291 JUMPDEST
0x292 PUSH2 0x2c6
0x295 GAS
0x296 SUB
0x297 CALL
0x298 ISZERO
0x299 ISZERO
0x29a PUSH2 0x29f
0x29d JUMPI
---
0x291: JUMPDEST 
0x292: V139 = 0x2c6
0x295: V140 = GAS
0x296: V141 = SUB V140 0x2c6
0x297: V142 = CALL V141 V91 0x0 V132 V133 V132 0x0
0x298: V143 = ISZERO V142
0x299: V144 = ISZERO V143
0x29a: V145 = 0x29f
0x29d: JUMPI 0x29f V144
---
Entry stack: [V7, 0x77, V91, 0x6046d718, V129, 0x0, V132, V133, V132, 0x0, V91]
Stack pops: 6
Stack additions: []
Exit stack: [V7, 0x77, V91, 0x6046d718, V129]

================================

Block 0x29e
[0x29e:0x29e]
---
Predecessors: [0x291]
Successors: []
---
0x29e INVALID
---
0x29e: INVALID 
---
Entry stack: [V7, 0x77, V91, 0x6046d718, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77, V91, 0x6046d718, V129]

================================

Block 0x29f
[0x29f:0x2a2]
---
Predecessors: [0x291]
Successors: [0x2a3]
---
0x29f JUMPDEST
0x2a0 POP
0x2a1 POP
0x2a2 POP
---
0x29f: JUMPDEST 
---
Entry stack: [V7, 0x77, V91, 0x6046d718, V129]
Stack pops: 3
Stack additions: []
Exit stack: [V7, 0x77]

================================

Block 0x2a3
[0x2a3:0x2a3]
---
Predecessors: [0x12c, 0x29f]
Successors: [0x2a4]
---
0x2a3 JUMPDEST
---
0x2a3: JUMPDEST 
---
Entry stack: [V7, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x77]

================================

Block 0x2a4
[0x2a4:0x2a5]
---
Predecessors: [0x2a3]
Successors: [0x77]
---
0x2a4 JUMPDEST
0x2a5 JUMP
---
0x2a4: JUMPDEST 
0x2a5: JUMP 0x77
---
Entry stack: [V7, 0x77]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x2a6
[0x2a6:0x2ea]
---
Predecessors: [0x81]
Successors: [0x2eb]
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x0
0x2a9 PUSH1 0x1
0x2ab PUSH1 0x0
0x2ad CALLER
0x2ae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c3 AND
0x2c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d9 AND
0x2da DUP2
0x2db MSTORE
0x2dc PUSH1 0x20
0x2de ADD
0x2df SWAP1
0x2e0 DUP2
0x2e1 MSTORE
0x2e2 PUSH1 0x20
0x2e4 ADD
0x2e5 PUSH1 0x0
0x2e7 SHA3
0x2e8 SLOAD
0x2e9 SWAP1
0x2ea POP
---
0x2a6: JUMPDEST 
0x2a7: V146 = 0x0
0x2a9: V147 = 0x1
0x2ab: V148 = 0x0
0x2ad: V149 = CALLER
0x2ae: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c3: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x2c4: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d9: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x2db: M[0x0] = V153
0x2dc: V154 = 0x20
0x2de: V155 = ADD 0x20 0x0
0x2e1: M[0x20] = 0x1
0x2e2: V156 = 0x20
0x2e4: V157 = ADD 0x20 0x20
0x2e5: V158 = 0x0
0x2e7: V159 = SHA3 0x0 0x40
0x2e8: V160 = S[V159]
---
Entry stack: [V7, 0x89]
Stack pops: 0
Stack additions: [V160]
Exit stack: [V7, 0x89, V160]

================================

Block 0x2eb
[0x2eb:0x2ed]
---
Predecessors: [0x2a6]
Successors: [0x89]
---
0x2eb JUMPDEST
0x2ec SWAP1
0x2ed JUMP
---
0x2eb: JUMPDEST 
0x2ed: JUMP 0x89
---
Entry stack: [V7, 0x89, V160]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V7, V160]

================================

Block 0x2ee
[0x2ee:0x323]
---
Predecessors: [0x9f]
Successors: [0x324, 0x329]
---
0x2ee JUMPDEST
0x2ef ADDRESS
0x2f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x305 AND
0x306 CALLER
0x307 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31c AND
0x31d EQ
0x31e ISZERO
0x31f ISZERO
0x320 PUSH2 0x329
0x323 JUMPI
---
0x2ee: JUMPDEST 
0x2ef: V161 = ADDRESS
0x2f0: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x305: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x306: V164 = CALLER
0x307: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x31c: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x31d: V167 = EQ V166 V163
0x31e: V168 = ISZERO V167
0x31f: V169 = ISZERO V168
0x320: V170 = 0x329
0x323: JUMPI 0x329 V169
---
Entry stack: [V7, 0x100, V42, V48, V53, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x100, V42, V48, V53, V58]

================================

Block 0x324
[0x324:0x328]
---
Predecessors: [0x2ee]
Successors: []
---
0x324 PUSH1 0x0
0x326 PUSH1 0x0
0x328 REVERT
---
0x324: V171 = 0x0
0x326: V172 = 0x0
0x328: REVERT 0x0 0x0
---
Entry stack: [V7, 0x100, V42, V48, V53, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x100, V42, V48, V53, V58]

================================

Block 0x329
[0x329:0x361]
---
Predecessors: [0x2ee]
Successors: [0x362, 0x411]
---
0x329 JUMPDEST
0x32a DUP2
0x32b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x340 AND
0x341 DUP5
0x342 PUSH1 0x40
0x344 MLOAD
0x345 DUP1
0x346 SWAP1
0x347 POP
0x348 PUSH1 0x0
0x34a PUSH1 0x40
0x34c MLOAD
0x34d DUP1
0x34e DUP4
0x34f SUB
0x350 DUP2
0x351 DUP6
0x352 DUP8
0x353 PUSH2 0x8796
0x356 GAS
0x357 SUB
0x358 CALL
0x359 SWAP3
0x35a POP
0x35b POP
0x35c POP
0x35d ISZERO
0x35e PUSH2 0x411
0x361 JUMPI
---
0x329: JUMPDEST 
0x32b: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x340: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x342: V175 = 0x40
0x344: V176 = M[0x40]
0x348: V177 = 0x0
0x34a: V178 = 0x40
0x34c: V179 = M[0x40]
0x34f: V180 = SUB V176 V179
0x353: V181 = 0x8796
0x356: V182 = GAS
0x357: V183 = SUB V182 0x8796
0x358: V184 = CALL V183 V174 V42 V179 V180 V179 0x0
0x35d: V185 = ISZERO V184
0x35e: V186 = 0x411
0x361: JUMPI 0x411 V185
---
Entry stack: [V7, 0x100, V42, V48, V53, V58]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, 0x100, V42, V48, V53, V58]

================================

Block 0x362
[0x362:0x410]
---
Predecessors: [0x329]
Successors: [0x411]
---
0x362 PUSH32 0x1f0c5f264d58c67f311160f9581374b8e04d7fd457e8f97c14ac5e667e123dee
0x383 DUP5
0x384 DUP5
0x385 DUP5
0x386 DUP5
0x387 PUSH1 0x40
0x389 MLOAD
0x38a DUP1
0x38b DUP6
0x38c DUP2
0x38d MSTORE
0x38e PUSH1 0x20
0x390 ADD
0x391 DUP5
0x392 PUSH1 0x0
0x394 NOT
0x395 AND
0x396 PUSH1 0x0
0x398 NOT
0x399 AND
0x39a DUP2
0x39b MSTORE
0x39c PUSH1 0x20
0x39e ADD
0x39f DUP4
0x3a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b5 AND
0x3b6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cb AND
0x3cc DUP2
0x3cd MSTORE
0x3ce PUSH1 0x20
0x3d0 ADD
0x3d1 DUP3
0x3d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e7 AND
0x3e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3fd AND
0x3fe DUP2
0x3ff MSTORE
0x400 PUSH1 0x20
0x402 ADD
0x403 SWAP5
0x404 POP
0x405 POP
0x406 POP
0x407 POP
0x408 POP
0x409 PUSH1 0x40
0x40b MLOAD
0x40c DUP1
0x40d SWAP2
0x40e SUB
0x40f SWAP1
0x410 LOG1
---
0x362: V187 = 0x1f0c5f264d58c67f311160f9581374b8e04d7fd457e8f97c14ac5e667e123dee
0x387: V188 = 0x40
0x389: V189 = M[0x40]
0x38d: M[V189] = V42
0x38e: V190 = 0x20
0x390: V191 = ADD 0x20 V189
0x392: V192 = 0x0
0x394: V193 = NOT 0x0
0x395: V194 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V48
0x396: V195 = 0x0
0x398: V196 = NOT 0x0
0x399: V197 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V194
0x39b: M[V191] = V197
0x39c: V198 = 0x20
0x39e: V199 = ADD 0x20 V191
0x3a0: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b5: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V53
0x3b6: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cb: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x3cd: M[V199] = V203
0x3ce: V204 = 0x20
0x3d0: V205 = ADD 0x20 V199
0x3d2: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e7: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0x3e8: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x3fd: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x3ff: M[V205] = V209
0x400: V210 = 0x20
0x402: V211 = ADD 0x20 V205
0x409: V212 = 0x40
0x40b: V213 = M[0x40]
0x40e: V214 = SUB V211 V213
0x410: LOG V213 V214 0x1f0c5f264d58c67f311160f9581374b8e04d7fd457e8f97c14ac5e667e123dee
---
Entry stack: [V7, 0x100, V42, V48, V53, V58]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V7, 0x100, V42, V48, V53, V58]

================================

Block 0x411
[0x411:0x411]
---
Predecessors: [0x329, 0x362]
Successors: [0x412]
---
0x411 JUMPDEST
---
0x411: JUMPDEST 
---
Entry stack: [V7, 0x100, V42, V48, V53, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x100, V42, V48, V53, V58]

================================

Block 0x412
[0x412:0x417]
---
Predecessors: [0x411]
Successors: [0x100]
---
0x412 JUMPDEST
0x413 POP
0x414 POP
0x415 POP
0x416 POP
0x417 JUMP
---
0x412: JUMPDEST 
0x417: JUMP 0x100
---
Entry stack: [V7, 0x100, V42, V48, V53, V58]
Stack pops: 5
Stack additions: []
Exit stack: [V7]

================================

Block 0x418
[0x418:0x461]
---
Predecessors: [0x10a]
Successors: [0x462, 0x467]
---
0x418 JUMPDEST
0x419 PUSH1 0x0
0x41b PUSH1 0x1
0x41d PUSH1 0x0
0x41f CALLER
0x420 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x435 AND
0x436 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44b AND
0x44c DUP2
0x44d MSTORE
0x44e PUSH1 0x20
0x450 ADD
0x451 SWAP1
0x452 DUP2
0x453 MSTORE
0x454 PUSH1 0x20
0x456 ADD
0x457 PUSH1 0x0
0x459 SHA3
0x45a SLOAD
0x45b GT
0x45c DUP1
0x45d ISZERO
0x45e PUSH2 0x467
0x461 JUMPI
---
0x418: JUMPDEST 
0x419: V215 = 0x0
0x41b: V216 = 0x1
0x41d: V217 = 0x0
0x41f: V218 = CALLER
0x420: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x435: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x436: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x44b: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x44d: M[0x0] = V222
0x44e: V223 = 0x20
0x450: V224 = ADD 0x20 0x0
0x453: M[0x20] = 0x1
0x454: V225 = 0x20
0x456: V226 = ADD 0x20 0x20
0x457: V227 = 0x0
0x459: V228 = SHA3 0x0 0x40
0x45a: V229 = S[V228]
0x45b: V230 = GT V229 0x0
0x45d: V231 = ISZERO V230
0x45e: V232 = 0x467
0x461: JUMPI 0x467 V231
---
Entry stack: [V7, 0x120, V67]
Stack pops: 0
Stack additions: [V230]
Exit stack: [V7, 0x120, V67, V230]

================================

Block 0x462
[0x462:0x466]
---
Predecessors: [0x418]
Successors: [0x467]
---
0x462 POP
0x463 PUSH1 0x0
0x465 DUP2
0x466 GT
---
0x463: V233 = 0x0
0x466: V234 = GT V67 0x0
---
Entry stack: [V7, 0x120, V67, V230]
Stack pops: 2
Stack additions: [S1, V234]
Exit stack: [V7, 0x120, V67, V234]

================================

Block 0x467
[0x467:0x46c]
---
Predecessors: [0x418, 0x462]
Successors: [0x46d, 0x5c3]
---
0x467 JUMPDEST
0x468 ISZERO
0x469 PUSH2 0x5c3
0x46c JUMPI
---
0x467: JUMPDEST 
0x468: V235 = ISZERO S0
0x469: V236 = 0x5c3
0x46c: JUMPI 0x5c3 V235
---
Entry stack: [V7, 0x120, V67, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V7, 0x120, V67]

================================

Block 0x46d
[0x46d:0x562]
---
Predecessors: [0x467]
Successors: [0x563, 0x564]
---
0x46d ADDRESS
0x46e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x483 AND
0x484 PUSH4 0x6046d718
0x489 DUP3
0x48a CALLER
0x48b PUSH1 0x0
0x48d PUSH1 0x0
0x48f SWAP1
0x490 SLOAD
0x491 SWAP1
0x492 PUSH2 0x100
0x495 EXP
0x496 SWAP1
0x497 DIV
0x498 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ad AND
0x4ae PUSH1 0x40
0x4b0 MLOAD
0x4b1 DUP5
0x4b2 PUSH4 0xffffffff
0x4b7 AND
0x4b8 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x4d6 MUL
0x4d7 DUP2
0x4d8 MSTORE
0x4d9 PUSH1 0x4
0x4db ADD
0x4dc DUP1
0x4dd DUP5
0x4de DUP2
0x4df MSTORE
0x4e0 PUSH1 0x20
0x4e2 ADD
0x4e3 PUSH1 0x0
0x4e5 ADD
0x4e6 DUP4
0x4e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4fc AND
0x4fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x512 AND
0x513 DUP2
0x514 MSTORE
0x515 PUSH1 0x20
0x517 ADD
0x518 DUP3
0x519 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52e AND
0x52f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x544 AND
0x545 DUP2
0x546 MSTORE
0x547 PUSH1 0x20
0x549 ADD
0x54a SWAP4
0x54b POP
0x54c POP
0x54d POP
0x54e POP
0x54f PUSH1 0x0
0x551 PUSH1 0x40
0x553 MLOAD
0x554 DUP1
0x555 DUP4
0x556 SUB
0x557 DUP2
0x558 PUSH1 0x0
0x55a DUP8
0x55b DUP1
0x55c EXTCODESIZE
0x55d ISZERO
0x55e ISZERO
0x55f PUSH2 0x564
0x562 JUMPI
---
0x46d: V237 = ADDRESS
0x46e: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x483: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x484: V240 = 0x6046d718
0x48a: V241 = CALLER
0x48b: V242 = 0x0
0x48d: V243 = 0x0
0x490: V244 = S[0x0]
0x492: V245 = 0x100
0x495: V246 = EXP 0x100 0x0
0x497: V247 = DIV V244 0x1
0x498: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ad: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x4ae: V250 = 0x40
0x4b0: V251 = M[0x40]
0x4b2: V252 = 0xffffffff
0x4b7: V253 = AND 0xffffffff 0x6046d718
0x4b8: V254 = 0x100000000000000000000000000000000000000000000000000000000
0x4d6: V255 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x6046d718
0x4d8: M[V251] = 0x6046d71800000000000000000000000000000000000000000000000000000000
0x4d9: V256 = 0x4
0x4db: V257 = ADD 0x4 V251
0x4df: M[V257] = V67
0x4e0: V258 = 0x20
0x4e2: V259 = ADD 0x20 V257
0x4e3: V260 = 0x0
0x4e5: V261 = ADD 0x0 V259
0x4e7: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x4fc: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x4fd: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x512: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x514: M[V261] = V265
0x515: V266 = 0x20
0x517: V267 = ADD 0x20 V261
0x519: V268 = 0xffffffffffffffffffffffffffffffffffffffff
0x52e: V269 = AND 0xffffffffffffffffffffffffffffffffffffffff V249
0x52f: V270 = 0xffffffffffffffffffffffffffffffffffffffff
0x544: V271 = AND 0xffffffffffffffffffffffffffffffffffffffff V269
0x546: M[V267] = V271
0x547: V272 = 0x20
0x549: V273 = ADD 0x20 V267
0x54f: V274 = 0x0
0x551: V275 = 0x40
0x553: V276 = M[0x40]
0x556: V277 = SUB V273 V276
0x558: V278 = 0x0
0x55c: V279 = EXTCODESIZE V239
0x55d: V280 = ISZERO V279
0x55e: V281 = ISZERO V280
0x55f: V282 = 0x564
0x562: JUMPI 0x564 V281
---
Entry stack: [V7, 0x120, V67]
Stack pops: 1
Stack additions: [S0, V239, 0x6046d718, V273, 0x0, V276, V277, V276, 0x0, V239]
Exit stack: [V7, 0x120, V67, V239, 0x6046d718, V273, 0x0, V276, V277, V276, 0x0, V239]

================================

Block 0x563
[0x563:0x563]
---
Predecessors: [0x46d]
Successors: []
---
0x563 INVALID
---
0x563: INVALID 
---
Entry stack: [V7, 0x120, V67, V239, 0x6046d718, V273, 0x0, V276, V277, V276, 0x0, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x120, V67, V239, 0x6046d718, V273, 0x0, V276, V277, V276, 0x0, V239]

================================

Block 0x564
[0x564:0x570]
---
Predecessors: [0x46d]
Successors: [0x571, 0x572]
---
0x564 JUMPDEST
0x565 PUSH2 0x2c6
0x568 GAS
0x569 SUB
0x56a CALL
0x56b ISZERO
0x56c ISZERO
0x56d PUSH2 0x572
0x570 JUMPI
---
0x564: JUMPDEST 
0x565: V283 = 0x2c6
0x568: V284 = GAS
0x569: V285 = SUB V284 0x2c6
0x56a: V286 = CALL V285 V239 0x0 V276 V277 V276 0x0
0x56b: V287 = ISZERO V286
0x56c: V288 = ISZERO V287
0x56d: V289 = 0x572
0x570: JUMPI 0x572 V288
---
Entry stack: [V7, 0x120, V67, V239, 0x6046d718, V273, 0x0, V276, V277, V276, 0x0, V239]
Stack pops: 6
Stack additions: []
Exit stack: [V7, 0x120, V67, V239, 0x6046d718, V273]

================================

Block 0x571
[0x571:0x571]
---
Predecessors: [0x564]
Successors: []
---
0x571 INVALID
---
0x571: INVALID 
---
Entry stack: [V7, 0x120, V67, V239, 0x6046d718, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x120, V67, V239, 0x6046d718, V273]

================================

Block 0x572
[0x572:0x5c2]
---
Predecessors: [0x564]
Successors: [0x5c3]
---
0x572 JUMPDEST
0x573 POP
0x574 POP
0x575 POP
0x576 DUP1
0x577 PUSH1 0x1
0x579 PUSH1 0x0
0x57b CALLER
0x57c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x591 AND
0x592 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5a7 AND
0x5a8 DUP2
0x5a9 MSTORE
0x5aa PUSH1 0x20
0x5ac ADD
0x5ad SWAP1
0x5ae DUP2
0x5af MSTORE
0x5b0 PUSH1 0x20
0x5b2 ADD
0x5b3 PUSH1 0x0
0x5b5 SHA3
0x5b6 PUSH1 0x0
0x5b8 DUP3
0x5b9 DUP3
0x5ba SLOAD
0x5bb SUB
0x5bc SWAP3
0x5bd POP
0x5be POP
0x5bf DUP2
0x5c0 SWAP1
0x5c1 SSTORE
0x5c2 POP
---
0x572: JUMPDEST 
0x577: V290 = 0x1
0x579: V291 = 0x0
0x57b: V292 = CALLER
0x57c: V293 = 0xffffffffffffffffffffffffffffffffffffffff
0x591: V294 = AND 0xffffffffffffffffffffffffffffffffffffffff V292
0x592: V295 = 0xffffffffffffffffffffffffffffffffffffffff
0x5a7: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V294
0x5a9: M[0x0] = V296
0x5aa: V297 = 0x20
0x5ac: V298 = ADD 0x20 0x0
0x5af: M[0x20] = 0x1
0x5b0: V299 = 0x20
0x5b2: V300 = ADD 0x20 0x20
0x5b3: V301 = 0x0
0x5b5: V302 = SHA3 0x0 0x40
0x5b6: V303 = 0x0
0x5ba: V304 = S[V302]
0x5bb: V305 = SUB V304 V67
0x5c1: S[V302] = V305
---
Entry stack: [V7, 0x120, V67, V239, 0x6046d718, V273]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V7, 0x120, V67]

================================

Block 0x5c3
[0x5c3:0x5c3]
---
Predecessors: [0x467, 0x572]
Successors: [0x5c4]
---
0x5c3 JUMPDEST
---
0x5c3: JUMPDEST 
---
Entry stack: [V7, 0x120, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x120, V67]

================================

Block 0x5c4
[0x5c4:0x5c6]
---
Predecessors: [0x5c3]
Successors: [0x120]
---
0x5c4 JUMPDEST
0x5c5 POP
0x5c6 JUMP
---
0x5c4: JUMPDEST 
0x5c6: JUMP 0x120
---
Entry stack: [V7, 0x120, V67]
Stack pops: 2
Stack additions: []
Exit stack: [V7]

================================

Block 0x5c7
[0x5c7:0x5d7]
---
Predecessors: [0x122]
Successors: [0x5d8, 0x625]
---
0x5c7 JUMPDEST
0x5c8 PUSH8 0xde0b6b3a7640000
0x5d1 CALLVALUE
0x5d2 GT
0x5d3 ISZERO
0x5d4 PUSH2 0x625
0x5d7 JUMPI
---
0x5c7: JUMPDEST 
0x5c8: V306 = 0xde0b6b3a7640000
0x5d1: V307 = CALLVALUE
0x5d2: V308 = GT V307 0xde0b6b3a7640000
0x5d3: V309 = ISZERO V308
0x5d4: V310 = 0x625
0x5d7: JUMPI 0x625 V309
---
Entry stack: [V7, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x12a]

================================

Block 0x5d8
[0x5d8:0x624]
---
Predecessors: [0x5c7]
Successors: [0x625]
---
0x5d8 CALLVALUE
0x5d9 PUSH1 0x1
0x5db PUSH1 0x0
0x5dd CALLER
0x5de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5f3 AND
0x5f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x609 AND
0x60a DUP2
0x60b MSTORE
0x60c PUSH1 0x20
0x60e ADD
0x60f SWAP1
0x610 DUP2
0x611 MSTORE
0x612 PUSH1 0x20
0x614 ADD
0x615 PUSH1 0x0
0x617 SHA3
0x618 PUSH1 0x0
0x61a DUP3
0x61b DUP3
0x61c SLOAD
0x61d ADD
0x61e SWAP3
0x61f POP
0x620 POP
0x621 DUP2
0x622 SWAP1
0x623 SSTORE
0x624 POP
---
0x5d8: V311 = CALLVALUE
0x5d9: V312 = 0x1
0x5db: V313 = 0x0
0x5dd: V314 = CALLER
0x5de: V315 = 0xffffffffffffffffffffffffffffffffffffffff
0x5f3: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x5f4: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x609: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x60b: M[0x0] = V318
0x60c: V319 = 0x20
0x60e: V320 = ADD 0x20 0x0
0x611: M[0x20] = 0x1
0x612: V321 = 0x20
0x614: V322 = ADD 0x20 0x20
0x615: V323 = 0x0
0x617: V324 = SHA3 0x0 0x40
0x618: V325 = 0x0
0x61c: V326 = S[V324]
0x61d: V327 = ADD V326 V311
0x623: S[V324] = V327
---
Entry stack: [V7, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x12a]

================================

Block 0x625
[0x625:0x625]
---
Predecessors: [0x5c7, 0x5d8]
Successors: [0x626]
---
0x625 JUMPDEST
---
0x625: JUMPDEST 
---
Entry stack: [V7, 0x12a]
Stack pops: 0
Stack additions: []
Exit stack: [V7, 0x12a]

================================

Block 0x626
[0x626:0x627]
---
Predecessors: [0x625]
Successors: [0x12a]
---
0x626 JUMPDEST
0x627 JUMP
---
0x626: JUMPDEST 
0x627: JUMP 0x12a
---
Entry stack: [V7, 0x12a]
Stack pops: 1
Stack additions: []
Exit stack: [V7]

================================

Block 0x628
[0x628:0x653]
---
Predecessors: []
Successors: []
---
0x628 STOP
0x629 LOG1
0x62a PUSH6 0x627a7a723058
0x631 SHA3
0x632 SWAP14
0x633 MISSING 0xde
0x634 SWAP7
0x635 DUP9
0x636 MISSING 0xb5
0x637 DUP11
0x638 SWAP2
0x639 SLOAD
0x63a MISSING 0xd4
0x63b MISSING 0x2d
0x63c MISSING 0xaf
0x63d MISSING 0xcb
0x63e MISSING 0xe4
0x63f CALLER
0x640 RETURNDATASIZE
0x641 MISSING 0xc7
0x642 MISSING 0xce
0x643 MISSING 0xc3
0x644 EXTCODEHASH
0x645 MISSING 0x22
0x646 MISSING 0xb3
0x647 MISSING 0x1e
0x648 MSIZE
0x649 MISSING 0x1f
0x64a SGT
0x64b MSIZE
0x64c MISSING 0xa9
0x64d MISSING 0xc
0x64e SHL
0x64f STATICCALL
0x650 LOG4
0x651 MISSING 0xab
0x652 STOP
0x653 MISSING 0x29
---
0x628: STOP 
0x629: LOG S0 S1 S2
0x62a: V328 = 0x627a7a723058
0x631: V329 = SHA3 0x627a7a723058 S3
0x633: MISSING 0xde
0x636: MISSING 0xb5
0x639: V330 = S[S1]
0x63a: MISSING 0xd4
0x63b: MISSING 0x2d
0x63c: MISSING 0xaf
0x63d: MISSING 0xcb
0x63e: MISSING 0xe4
0x63f: V331 = CALLER
0x640: V332 = RETURNDATASIZE
0x641: MISSING 0xc7
0x642: MISSING 0xce
0x643: MISSING 0xc3
0x644: V333 = EXTCODEHASH S0
0x645: MISSING 0x22
0x646: MISSING 0xb3
0x647: MISSING 0x1e
0x648: V334 = MSIZE
0x649: MISSING 0x1f
0x64a: V335 = SGT S0 S1
0x64b: V336 = MSIZE
0x64c: MISSING 0xa9
0x64d: MISSING 0xc
0x64e: V337 = SHL S0 S1
0x64f: V338 = STATICCALL V337 S2 S3 S4 S5 S6
0x650: LOG V338 S7 S8 S9 S10 S11
0x651: MISSING 0xab
0x652: STOP 
0x653: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S17, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, V329, S8, S7, S1, S2, S3, S4, S5, S6, S0, S8, V330, S0, S10, S2, S3, S4, S5, S6, S7, S8, S9, S10, V332, V331, V333, V334, V336, V335]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x67
Exit block: 0x29e
Body: 0x67, 0x6e, 0x6f, 0x77, 0x12c, 0x183, 0x290, 0x291, 0x29e, 0x29f, 0x2a3, 0x2a4

Function 1:
Public function signature: 0x5a70fe72
Entry block: 0x79
Exit block: 0x89
Body: 0x79, 0x80, 0x81, 0x89, 0x2a6, 0x2eb

Function 2:
Public function signature: 0x6046d718
Entry block: 0x9f
Exit block: 0x100
Body: 0x9f, 0x100, 0x2ee, 0x324, 0x329, 0x362, 0x411, 0x412

Function 3:
Public function signature: 0xb0a94ef7
Entry block: 0x102
Exit block: 0x571
Body: 0x102, 0x109, 0x10a, 0x120, 0x418, 0x462, 0x467, 0x46d, 0x563, 0x564, 0x571, 0x572, 0x5c3, 0x5c4

Function 4:
Public function signature: 0xc0819961
Entry block: 0x122
Exit block: 0x12a
Body: 0x122, 0x12a, 0x5c7, 0x5d8, 0x625, 0x626

Function 5:
Public fallback function
Entry block: 0x65
Exit block: 0x65
Body: 0x65

