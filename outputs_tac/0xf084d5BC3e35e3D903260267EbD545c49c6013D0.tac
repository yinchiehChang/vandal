Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa9
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa9
0xa: JUMPI 0xa9 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xae]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x6fdde03
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xae
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x6fdde03
0x20: V14 = EQ V12 0x6fdde03
0x21: V15 = 0xae
0x24: JUMPI 0xae V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x139]
---
0x25 DUP1
0x26 PUSH4 0x95ea7b3
0x2b EQ
0x2c PUSH2 0x139
0x2f JUMPI
---
0x26: V16 = 0x95ea7b3
0x2b: V17 = EQ 0x95ea7b3 V12
0x2c: V18 = 0x139
0x2f: JUMPI 0x139 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x16f]
---
0x30 DUP1
0x31 PUSH4 0x18160ddd
0x36 EQ
0x37 PUSH2 0x16f
0x3a JUMPI
---
0x31: V19 = 0x18160ddd
0x36: V20 = EQ 0x18160ddd V12
0x37: V21 = 0x16f
0x3a: JUMPI 0x16f V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x194]
---
0x3b DUP1
0x3c PUSH4 0x23b872dd
0x41 EQ
0x42 PUSH2 0x194
0x45 JUMPI
---
0x3c: V22 = 0x23b872dd
0x41: V23 = EQ 0x23b872dd V12
0x42: V24 = 0x194
0x45: JUMPI 0x194 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x1d0]
---
0x46 DUP1
0x47 PUSH4 0x313ce567
0x4c EQ
0x4d PUSH2 0x1d0
0x50 JUMPI
---
0x47: V25 = 0x313ce567
0x4c: V26 = EQ 0x313ce567 V12
0x4d: V27 = 0x1d0
0x50: JUMPI 0x1d0 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x1f9]
---
0x51 DUP1
0x52 PUSH4 0x4d2301cc
0x57 EQ
0x58 PUSH2 0x1f9
0x5b JUMPI
---
0x52: V28 = 0x4d2301cc
0x57: V29 = EQ 0x4d2301cc V12
0x58: V30 = 0x1f9
0x5b: JUMPI 0x1f9 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x22a]
---
0x5c DUP1
0x5d PUSH4 0x6379ed9d
0x62 EQ
0x63 PUSH2 0x22a
0x66 JUMPI
---
0x5d: V31 = 0x6379ed9d
0x62: V32 = EQ 0x6379ed9d V12
0x63: V33 = 0x22a
0x66: JUMPI 0x22a V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x282]
---
0x67 DUP1
0x68 PUSH4 0x70a08231
0x6d EQ
0x6e PUSH2 0x282
0x71 JUMPI
---
0x68: V34 = 0x70a08231
0x6d: V35 = EQ 0x70a08231 V12
0x6e: V36 = 0x282
0x71: JUMPI 0x282 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x2b3]
---
0x72 DUP1
0x73 PUSH4 0x95d89b41
0x78 EQ
0x79 PUSH2 0x2b3
0x7c JUMPI
---
0x73: V37 = 0x95d89b41
0x78: V38 = EQ 0x95d89b41 V12
0x79: V39 = 0x2b3
0x7c: JUMPI 0x2b3 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x33e]
---
0x7d DUP1
0x7e PUSH4 0xa9059cbb
0x83 EQ
0x84 PUSH2 0x33e
0x87 JUMPI
---
0x7e: V40 = 0xa9059cbb
0x83: V41 = EQ 0xa9059cbb V12
0x84: V42 = 0x33e
0x87: JUMPI 0x33e V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x374]
---
0x88 DUP1
0x89 PUSH4 0xdd62ed3e
0x8e EQ
0x8f PUSH2 0x374
0x92 JUMPI
---
0x89: V43 = 0xdd62ed3e
0x8e: V44 = EQ 0xdd62ed3e V12
0x8f: V45 = 0x374
0x92: JUMPI 0x374 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x3ab]
---
0x93 DUP1
0x94 PUSH4 0xe58fc54c
0x99 EQ
0x9a PUSH2 0x3ab
0x9d JUMPI
---
0x94: V46 = 0xe58fc54c
0x99: V47 = EQ 0xe58fc54c V12
0x9a: V48 = 0x3ab
0x9d: JUMPI 0x3ab V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x3de]
---
0x9e DUP1
0x9f PUSH4 0xf2fde38b
0xa4 EQ
0xa5 PUSH2 0x3de
0xa8 JUMPI
---
0x9f: V49 = 0xf2fde38b
0xa4: V50 = EQ 0xf2fde38b V12
0xa5: V51 = 0x3de
0xa8: JUMPI 0x3de V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xad]
---
Predecessors: [0x0, 0x9e]
Successors: []
---
0xa9 JUMPDEST
0xaa PUSH1 0x0
0xac DUP1
0xad REVERT
---
0xa9: JUMPDEST 
0xaa: V52 = 0x0
0xad: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xae
[0xae:0xb4]
---
Predecessors: [0xb]
Successors: [0xb5, 0xb9]
---
0xae JUMPDEST
0xaf CALLVALUE
0xb0 ISZERO
0xb1 PUSH2 0xb9
0xb4 JUMPI
---
0xae: JUMPDEST 
0xaf: V53 = CALLVALUE
0xb0: V54 = ISZERO V53
0xb1: V55 = 0xb9
0xb4: JUMPI 0xb9 V54
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb5
[0xb5:0xb8]
---
Predecessors: [0xae]
Successors: []
---
0xb5 PUSH1 0x0
0xb7 DUP1
0xb8 REVERT
---
0xb5: V56 = 0x0
0xb8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb9
[0xb9:0xc0]
---
Predecessors: [0xae]
Successors: [0x3ff]
---
0xb9 JUMPDEST
0xba PUSH2 0xc1
0xbd PUSH2 0x3ff
0xc0 JUMP
---
0xb9: JUMPDEST 
0xba: V57 = 0xc1
0xbd: V58 = 0x3ff
0xc0: JUMP 0x3ff
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V12, 0xc1]

================================

Block 0xc1
[0xc1:0xe4]
---
Predecessors: [0x43e, 0x7b3]
Successors: [0xe5]
---
0xc1 JUMPDEST
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 PUSH1 0x20
0xc7 DUP1
0xc8 DUP3
0xc9 MSTORE
0xca DUP2
0xcb SWAP1
0xcc DUP2
0xcd ADD
0xce DUP4
0xcf DUP2
0xd0 DUP2
0xd1 MLOAD
0xd2 DUP2
0xd3 MSTORE
0xd4 PUSH1 0x20
0xd6 ADD
0xd7 SWAP2
0xd8 POP
0xd9 DUP1
0xda MLOAD
0xdb SWAP1
0xdc PUSH1 0x20
0xde ADD
0xdf SWAP1
0xe0 DUP1
0xe1 DUP4
0xe2 DUP4
0xe3 PUSH1 0x0
---
0xc1: JUMPDEST 
0xc2: V59 = 0x40
0xc4: V60 = M[0x40]
0xc5: V61 = 0x20
0xc9: M[V60] = 0x20
0xcd: V62 = ADD V60 0x20
0xd1: V63 = M[S0]
0xd3: M[V62] = V63
0xd4: V64 = 0x20
0xd6: V65 = ADD 0x20 V62
0xda: V66 = M[S0]
0xdc: V67 = 0x20
0xde: V68 = ADD 0x20 S0
0xe3: V69 = 0x0
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: [S0, V60, V60, V65, V68, V66, V66, V65, V68, 0x0]
Exit stack: [V12, S0, V60, V60, V65, V68, V66, V66, V65, V68, 0x0]

================================

Block 0xe5
[0xe5:0xed]
---
Predecessors: [0xc1, 0xf6, 0x2fb]
Successors: [0xee, 0xfe]
---
0xe5 JUMPDEST
0xe6 DUP4
0xe7 DUP2
0xe8 LT
0xe9 ISZERO
0xea PUSH2 0xfe
0xed JUMPI
---
0xe5: JUMPDEST 
0xe8: V70 = LT S0 S3
0xe9: V71 = ISZERO V70
0xea: V72 = 0xfe
0xed: JUMPI 0xfe V71
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xee
[0xee:0xf5]
---
Predecessors: [0xe5]
Successors: [0xf6]
---
0xee DUP1
0xef DUP3
0xf0 ADD
0xf1 MLOAD
0xf2 DUP2
0xf3 DUP5
0xf4 ADD
0xf5 MSTORE
---
0xf0: V73 = ADD S1 S0
0xf1: V74 = M[V73]
0xf4: V75 = ADD S2 S0
0xf5: M[V75] = V74
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xf6
[0xf6:0xfd]
---
Predecessors: [0xee]
Successors: [0xe5]
---
0xf6 JUMPDEST
0xf7 PUSH1 0x20
0xf9 ADD
0xfa PUSH2 0xe5
0xfd JUMP
---
0xf6: JUMPDEST 
0xf7: V76 = 0x20
0xf9: V77 = ADD 0x20 S0
0xfa: V78 = 0xe5
0xfd: JUMP 0xe5
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V77]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, V77]

================================

Block 0xfe
[0xfe:0x111]
---
Predecessors: [0xe5, 0x2ea]
Successors: [0x112, 0x12b]
---
0xfe JUMPDEST
0xff POP
0x100 POP
0x101 POP
0x102 POP
0x103 SWAP1
0x104 POP
0x105 SWAP1
0x106 DUP2
0x107 ADD
0x108 SWAP1
0x109 PUSH1 0x1f
0x10b AND
0x10c DUP1
0x10d ISZERO
0x10e PUSH2 0x12b
0x111 JUMPI
---
0xfe: JUMPDEST 
0x107: V79 = ADD S4 S6
0x109: V80 = 0x1f
0x10b: V81 = AND 0x1f S4
0x10d: V82 = ISZERO V81
0x10e: V83 = 0x12b
0x111: JUMPI 0x12b V82
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V79, V81]
Exit stack: [V12, S9, S8, S7, V79, V81]

================================

Block 0x112
[0x112:0x12a]
---
Predecessors: [0xfe]
Successors: [0x12b]
---
0x112 DUP1
0x113 DUP3
0x114 SUB
0x115 DUP1
0x116 MLOAD
0x117 PUSH1 0x1
0x119 DUP4
0x11a PUSH1 0x20
0x11c SUB
0x11d PUSH2 0x100
0x120 EXP
0x121 SUB
0x122 NOT
0x123 AND
0x124 DUP2
0x125 MSTORE
0x126 PUSH1 0x20
0x128 ADD
0x129 SWAP2
0x12a POP
---
0x114: V84 = SUB V79 V81
0x116: V85 = M[V84]
0x117: V86 = 0x1
0x11a: V87 = 0x20
0x11c: V88 = SUB 0x20 V81
0x11d: V89 = 0x100
0x120: V90 = EXP 0x100 V88
0x121: V91 = SUB V90 0x1
0x122: V92 = NOT V91
0x123: V93 = AND V92 V85
0x125: M[V84] = V93
0x126: V94 = 0x20
0x128: V95 = ADD 0x20 V84
---
Entry stack: [V12, S4, S3, S2, V79, V81]
Stack pops: 2
Stack additions: [V95, S0]
Exit stack: [V12, S4, S3, S2, V95, V81]

================================

Block 0x12b
[0x12b:0x138]
---
Predecessors: [0xfe, 0x112, 0x303]
Successors: []
---
0x12b JUMPDEST
0x12c POP
0x12d SWAP3
0x12e POP
0x12f POP
0x130 POP
0x131 PUSH1 0x40
0x133 MLOAD
0x134 DUP1
0x135 SWAP2
0x136 SUB
0x137 SWAP1
0x138 RETURN
---
0x12b: JUMPDEST 
0x131: V96 = 0x40
0x133: V97 = M[0x40]
0x136: V98 = SUB S1 V97
0x138: RETURN V97 V98
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x139
[0x139:0x13f]
---
Predecessors: [0x25]
Successors: [0x140, 0x144]
---
0x139 JUMPDEST
0x13a CALLVALUE
0x13b ISZERO
0x13c PUSH2 0x144
0x13f JUMPI
---
0x139: JUMPDEST 
0x13a: V99 = CALLVALUE
0x13b: V100 = ISZERO V99
0x13c: V101 = 0x144
0x13f: JUMPI 0x144 V100
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x140
[0x140:0x143]
---
Predecessors: [0x139]
Successors: []
---
0x140 PUSH1 0x0
0x142 DUP1
0x143 REVERT
---
0x140: V102 = 0x0
0x143: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x144
[0x144:0x15a]
---
Predecessors: [0x139]
Successors: [0x441]
---
0x144 JUMPDEST
0x145 PUSH2 0x15b
0x148 PUSH1 0x1
0x14a PUSH1 0xa0
0x14c PUSH1 0x2
0x14e EXP
0x14f SUB
0x150 PUSH1 0x4
0x152 CALLDATALOAD
0x153 AND
0x154 PUSH1 0x24
0x156 CALLDATALOAD
0x157 PUSH2 0x441
0x15a JUMP
---
0x144: JUMPDEST 
0x145: V103 = 0x15b
0x148: V104 = 0x1
0x14a: V105 = 0xa0
0x14c: V106 = 0x2
0x14e: V107 = EXP 0x2 0xa0
0x14f: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x150: V109 = 0x4
0x152: V110 = CALLDATALOAD 0x4
0x153: V111 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x154: V112 = 0x24
0x156: V113 = CALLDATALOAD 0x24
0x157: V114 = 0x441
0x15a: JUMP 0x441
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15b, V111, V113]
Exit stack: [V12, 0x15b, V111, V113]

================================

Block 0x15b
[0x15b:0x16e]
---
Predecessors: [0x4e7, 0x61b, 0x892, 0x9e1]
Successors: []
---
0x15b JUMPDEST
0x15c PUSH1 0x40
0x15e MLOAD
0x15f SWAP1
0x160 ISZERO
0x161 ISZERO
0x162 DUP2
0x163 MSTORE
0x164 PUSH1 0x20
0x166 ADD
0x167 PUSH1 0x40
0x169 MLOAD
0x16a DUP1
0x16b SWAP2
0x16c SUB
0x16d SWAP1
0x16e RETURN
---
0x15b: JUMPDEST 
0x15c: V115 = 0x40
0x15e: V116 = M[0x40]
0x160: V117 = ISZERO S0
0x161: V118 = ISZERO V117
0x163: M[V116] = V118
0x164: V119 = 0x20
0x166: V120 = ADD 0x20 V116
0x167: V121 = 0x40
0x169: V122 = M[0x40]
0x16c: V123 = SUB V120 V122
0x16e: RETURN V122 V123
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x16f
[0x16f:0x175]
---
Predecessors: [0x30]
Successors: [0x176, 0x17a]
---
0x16f JUMPDEST
0x170 CALLVALUE
0x171 ISZERO
0x172 PUSH2 0x17a
0x175 JUMPI
---
0x16f: JUMPDEST 
0x170: V124 = CALLVALUE
0x171: V125 = ISZERO V124
0x172: V126 = 0x17a
0x175: JUMPI 0x17a V125
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x176
[0x176:0x179]
---
Predecessors: [0x16f]
Successors: []
---
0x176 PUSH1 0x0
0x178 DUP1
0x179 REVERT
---
0x176: V127 = 0x0
0x179: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17a
[0x17a:0x181]
---
Predecessors: [0x16f]
Successors: [0x4ed]
---
0x17a JUMPDEST
0x17b PUSH2 0x182
0x17e PUSH2 0x4ed
0x181 JUMP
---
0x17a: JUMPDEST 
0x17b: V128 = 0x182
0x17e: V129 = 0x4ed
0x181: JUMP 0x4ed
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x182]
Exit stack: [V12, 0x182]

================================

Block 0x182
[0x182:0x193]
---
Predecessors: [0x4ed, 0x63a, 0x76f, 0x8c3]
Successors: []
---
0x182 JUMPDEST
0x183 PUSH1 0x40
0x185 MLOAD
0x186 SWAP1
0x187 DUP2
0x188 MSTORE
0x189 PUSH1 0x20
0x18b ADD
0x18c PUSH1 0x40
0x18e MLOAD
0x18f DUP1
0x190 SWAP2
0x191 SUB
0x192 SWAP1
0x193 RETURN
---
0x182: JUMPDEST 
0x183: V130 = 0x40
0x185: V131 = M[0x40]
0x188: M[V131] = S0
0x189: V132 = 0x20
0x18b: V133 = ADD 0x20 V131
0x18c: V134 = 0x40
0x18e: V135 = M[0x40]
0x191: V136 = SUB V133 V135
0x193: RETURN V135 V136
---
Entry stack: [V12, 0x280, V216, V223, V226, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x280, V216, V223, V226, S2, S1]

================================

Block 0x194
[0x194:0x19a]
---
Predecessors: [0x3b]
Successors: [0x19b, 0x19f]
---
0x194 JUMPDEST
0x195 CALLVALUE
0x196 ISZERO
0x197 PUSH2 0x19f
0x19a JUMPI
---
0x194: JUMPDEST 
0x195: V137 = CALLVALUE
0x196: V138 = ISZERO V137
0x197: V139 = 0x19f
0x19a: JUMPI 0x19f V138
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19b
[0x19b:0x19e]
---
Predecessors: [0x194]
Successors: []
---
0x19b PUSH1 0x0
0x19d DUP1
0x19e REVERT
---
0x19b: V140 = 0x0
0x19e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x19f
[0x19f:0x1bb]
---
Predecessors: [0x194]
Successors: [0x4f3]
---
0x19f JUMPDEST
0x1a0 PUSH2 0x15b
0x1a3 PUSH1 0x1
0x1a5 PUSH1 0xa0
0x1a7 PUSH1 0x2
0x1a9 EXP
0x1aa SUB
0x1ab PUSH1 0x4
0x1ad CALLDATALOAD
0x1ae DUP2
0x1af AND
0x1b0 SWAP1
0x1b1 PUSH1 0x24
0x1b3 CALLDATALOAD
0x1b4 AND
0x1b5 PUSH1 0x44
0x1b7 CALLDATALOAD
0x1b8 PUSH2 0x4f3
0x1bb JUMP
---
0x19f: JUMPDEST 
0x1a0: V141 = 0x15b
0x1a3: V142 = 0x1
0x1a5: V143 = 0xa0
0x1a7: V144 = 0x2
0x1a9: V145 = EXP 0x2 0xa0
0x1aa: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ab: V147 = 0x4
0x1ad: V148 = CALLDATALOAD 0x4
0x1af: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x1b1: V150 = 0x24
0x1b3: V151 = CALLDATALOAD 0x24
0x1b4: V152 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x1b5: V153 = 0x44
0x1b7: V154 = CALLDATALOAD 0x44
0x1b8: V155 = 0x4f3
0x1bb: JUMP 0x4f3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15b, V149, V152, V154]
Exit stack: [V12, 0x15b, V149, V152, V154]

================================

Block 0x1bc
[0x1bc:0x1cf]
---
Predecessors: []
Successors: []
---
0x1bc JUMPDEST
0x1bd PUSH1 0x40
0x1bf MLOAD
0x1c0 SWAP1
0x1c1 ISZERO
0x1c2 ISZERO
0x1c3 DUP2
0x1c4 MSTORE
0x1c5 PUSH1 0x20
0x1c7 ADD
0x1c8 PUSH1 0x40
0x1ca MLOAD
0x1cb DUP1
0x1cc SWAP2
0x1cd SUB
0x1ce SWAP1
0x1cf RETURN
---
0x1bc: JUMPDEST 
0x1bd: V156 = 0x40
0x1bf: V157 = M[0x40]
0x1c1: V158 = ISZERO S0
0x1c2: V159 = ISZERO V158
0x1c4: M[V157] = V159
0x1c5: V160 = 0x20
0x1c7: V161 = ADD 0x20 V157
0x1c8: V162 = 0x40
0x1ca: V163 = M[0x40]
0x1cd: V164 = SUB V161 V163
0x1cf: RETURN V163 V164
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1d0
[0x1d0:0x1d6]
---
Predecessors: [0x46]
Successors: [0x1d7, 0x1db]
---
0x1d0 JUMPDEST
0x1d1 CALLVALUE
0x1d2 ISZERO
0x1d3 PUSH2 0x1db
0x1d6 JUMPI
---
0x1d0: JUMPDEST 
0x1d1: V165 = CALLVALUE
0x1d2: V166 = ISZERO V165
0x1d3: V167 = 0x1db
0x1d6: JUMPI 0x1db V166
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1d7
[0x1d7:0x1da]
---
Predecessors: [0x1d0]
Successors: []
---
0x1d7 PUSH1 0x0
0x1d9 DUP1
0x1da REVERT
---
0x1d7: V168 = 0x0
0x1da: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1db
[0x1db:0x1e2]
---
Predecessors: [0x1d0]
Successors: [0x628]
---
0x1db JUMPDEST
0x1dc PUSH2 0x1e3
0x1df PUSH2 0x628
0x1e2 JUMP
---
0x1db: JUMPDEST 
0x1dc: V169 = 0x1e3
0x1df: V170 = 0x628
0x1e2: JUMP 0x628
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1e3]
Exit stack: [V12, 0x1e3]

================================

Block 0x1e3
[0x1e3:0x1f8]
---
Predecessors: [0x62b]
Successors: []
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x40
0x1e6 MLOAD
0x1e7 PUSH1 0xff
0x1e9 SWAP1
0x1ea SWAP2
0x1eb AND
0x1ec DUP2
0x1ed MSTORE
0x1ee PUSH1 0x20
0x1f0 ADD
0x1f1 PUSH1 0x40
0x1f3 MLOAD
0x1f4 DUP1
0x1f5 SWAP2
0x1f6 SUB
0x1f7 SWAP1
0x1f8 RETURN
---
0x1e3: JUMPDEST 
0x1e4: V171 = 0x40
0x1e6: V172 = M[0x40]
0x1e7: V173 = 0xff
0x1eb: V174 = AND 0x8 0xff
0x1ed: M[V172] = 0x8
0x1ee: V175 = 0x20
0x1f0: V176 = ADD 0x20 V172
0x1f1: V177 = 0x40
0x1f3: V178 = M[0x40]
0x1f6: V179 = SUB V176 V178
0x1f8: RETURN V178 V179
---
Entry stack: [V12, 0x8]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f9
[0x1f9:0x1ff]
---
Predecessors: [0x51]
Successors: [0x200, 0x204]
---
0x1f9 JUMPDEST
0x1fa CALLVALUE
0x1fb ISZERO
0x1fc PUSH2 0x204
0x1ff JUMPI
---
0x1f9: JUMPDEST 
0x1fa: V180 = CALLVALUE
0x1fb: V181 = ISZERO V180
0x1fc: V182 = 0x204
0x1ff: JUMPI 0x204 V181
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x200
[0x200:0x203]
---
Predecessors: [0x1f9]
Successors: []
---
0x200 PUSH1 0x0
0x202 DUP1
0x203 REVERT
---
0x200: V183 = 0x0
0x203: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x204
[0x204:0x217]
---
Predecessors: [0x1f9]
Successors: [0x62e]
---
0x204 JUMPDEST
0x205 PUSH2 0x182
0x208 PUSH1 0x1
0x20a PUSH1 0xa0
0x20c PUSH1 0x2
0x20e EXP
0x20f SUB
0x210 PUSH1 0x4
0x212 CALLDATALOAD
0x213 AND
0x214 PUSH2 0x62e
0x217 JUMP
---
0x204: JUMPDEST 
0x205: V184 = 0x182
0x208: V185 = 0x1
0x20a: V186 = 0xa0
0x20c: V187 = 0x2
0x20e: V188 = EXP 0x2 0xa0
0x20f: V189 = SUB 0x10000000000000000000000000000000000000000 0x1
0x210: V190 = 0x4
0x212: V191 = CALLDATALOAD 0x4
0x213: V192 = AND V191 0xffffffffffffffffffffffffffffffffffffffff
0x214: V193 = 0x62e
0x217: JUMP 0x62e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x182, V192]
Exit stack: [V12, 0x182, V192]

================================

Block 0x218
[0x218:0x229]
---
Predecessors: []
Successors: []
---
0x218 JUMPDEST
0x219 PUSH1 0x40
0x21b MLOAD
0x21c SWAP1
0x21d DUP2
0x21e MSTORE
0x21f PUSH1 0x20
0x221 ADD
0x222 PUSH1 0x40
0x224 MLOAD
0x225 DUP1
0x226 SWAP2
0x227 SUB
0x228 SWAP1
0x229 RETURN
---
0x218: JUMPDEST 
0x219: V194 = 0x40
0x21b: V195 = M[0x40]
0x21e: M[V195] = S0
0x21f: V196 = 0x20
0x221: V197 = ADD 0x20 V195
0x222: V198 = 0x40
0x224: V199 = M[0x40]
0x227: V200 = SUB V197 V199
0x229: RETURN V199 V200
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x22a
[0x22a:0x230]
---
Predecessors: [0x5c]
Successors: [0x231, 0x235]
---
0x22a JUMPDEST
0x22b CALLVALUE
0x22c ISZERO
0x22d PUSH2 0x235
0x230 JUMPI
---
0x22a: JUMPDEST 
0x22b: V201 = CALLVALUE
0x22c: V202 = ISZERO V201
0x22d: V203 = 0x235
0x230: JUMPI 0x235 V202
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x231
[0x231:0x234]
---
Predecessors: [0x22a]
Successors: []
---
0x231 PUSH1 0x0
0x233 DUP1
0x234 REVERT
---
0x231: V204 = 0x0
0x234: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x235
[0x235:0x27f]
---
Predecessors: [0x22a]
Successors: [0x63f]
---
0x235 JUMPDEST
0x236 PUSH2 0x280
0x239 PUSH1 0x4
0x23b PUSH1 0x24
0x23d DUP2
0x23e CALLDATALOAD
0x23f DUP2
0x240 DUP2
0x241 ADD
0x242 SWAP1
0x243 DUP4
0x244 ADD
0x245 CALLDATALOAD
0x246 DUP1
0x247 PUSH1 0x20
0x249 DUP2
0x24a DUP2
0x24b MUL
0x24c ADD
0x24d PUSH1 0x40
0x24f MLOAD
0x250 SWAP1
0x251 DUP2
0x252 ADD
0x253 PUSH1 0x40
0x255 MSTORE
0x256 DUP1
0x257 SWAP4
0x258 SWAP3
0x259 SWAP2
0x25a SWAP1
0x25b DUP2
0x25c DUP2
0x25d MSTORE
0x25e PUSH1 0x20
0x260 ADD
0x261 DUP4
0x262 DUP4
0x263 PUSH1 0x20
0x265 MUL
0x266 DUP1
0x267 DUP3
0x268 DUP5
0x269 CALLDATACOPY
0x26a POP
0x26b SWAP5
0x26c SWAP7
0x26d POP
0x26e POP
0x26f DUP5
0x270 CALLDATALOAD
0x271 SWAP5
0x272 PUSH1 0x20
0x274 ADD
0x275 CALLDATALOAD
0x276 SWAP4
0x277 POP
0x278 PUSH2 0x63f
0x27b SWAP3
0x27c POP
0x27d POP
0x27e POP
0x27f JUMP
---
0x235: JUMPDEST 
0x236: V205 = 0x280
0x239: V206 = 0x4
0x23b: V207 = 0x24
0x23e: V208 = CALLDATALOAD 0x4
0x241: V209 = ADD V208 0x24
0x244: V210 = ADD 0x4 V208
0x245: V211 = CALLDATALOAD V210
0x247: V212 = 0x20
0x24b: V213 = MUL 0x20 V211
0x24c: V214 = ADD V213 0x20
0x24d: V215 = 0x40
0x24f: V216 = M[0x40]
0x252: V217 = ADD V216 V214
0x253: V218 = 0x40
0x255: M[0x40] = V217
0x25d: M[V216] = V211
0x25e: V219 = 0x20
0x260: V220 = ADD 0x20 V216
0x263: V221 = 0x20
0x265: V222 = MUL 0x20 V211
0x269: CALLDATACOPY V220 V209 V222
0x270: V223 = CALLDATALOAD 0x24
0x272: V224 = 0x20
0x274: V225 = ADD 0x20 0x24
0x275: V226 = CALLDATALOAD 0x44
0x278: V227 = 0x63f
0x27f: JUMP 0x63f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x280, V216, V223, V226]
Exit stack: [V12, 0x280, V216, V223, V226]

================================

Block 0x280
[0x280:0x281]
---
Predecessors: [0x74f, 0xa2d]
Successors: []
---
0x280 JUMPDEST
0x281 STOP
---
0x280: JUMPDEST 
0x281: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x282
[0x282:0x288]
---
Predecessors: [0x67]
Successors: [0x289, 0x28d]
---
0x282 JUMPDEST
0x283 CALLVALUE
0x284 ISZERO
0x285 PUSH2 0x28d
0x288 JUMPI
---
0x282: JUMPDEST 
0x283: V228 = CALLVALUE
0x284: V229 = ISZERO V228
0x285: V230 = 0x28d
0x288: JUMPI 0x28d V229
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x289
[0x289:0x28c]
---
Predecessors: [0x282]
Successors: []
---
0x289 PUSH1 0x0
0x28b DUP1
0x28c REVERT
---
0x289: V231 = 0x0
0x28c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28d
[0x28d:0x2a0]
---
Predecessors: [0x282]
Successors: [0x755]
---
0x28d JUMPDEST
0x28e PUSH2 0x182
0x291 PUSH1 0x1
0x293 PUSH1 0xa0
0x295 PUSH1 0x2
0x297 EXP
0x298 SUB
0x299 PUSH1 0x4
0x29b CALLDATALOAD
0x29c AND
0x29d PUSH2 0x755
0x2a0 JUMP
---
0x28d: JUMPDEST 
0x28e: V232 = 0x182
0x291: V233 = 0x1
0x293: V234 = 0xa0
0x295: V235 = 0x2
0x297: V236 = EXP 0x2 0xa0
0x298: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x299: V238 = 0x4
0x29b: V239 = CALLDATALOAD 0x4
0x29c: V240 = AND V239 0xffffffffffffffffffffffffffffffffffffffff
0x29d: V241 = 0x755
0x2a0: JUMP 0x755
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x182, V240]
Exit stack: [V12, 0x182, V240]

================================

Block 0x2a1
[0x2a1:0x2b2]
---
Predecessors: []
Successors: []
---
0x2a1 JUMPDEST
0x2a2 PUSH1 0x40
0x2a4 MLOAD
0x2a5 SWAP1
0x2a6 DUP2
0x2a7 MSTORE
0x2a8 PUSH1 0x20
0x2aa ADD
0x2ab PUSH1 0x40
0x2ad MLOAD
0x2ae DUP1
0x2af SWAP2
0x2b0 SUB
0x2b1 SWAP1
0x2b2 RETURN
---
0x2a1: JUMPDEST 
0x2a2: V242 = 0x40
0x2a4: V243 = M[0x40]
0x2a7: M[V243] = S0
0x2a8: V244 = 0x20
0x2aa: V245 = ADD 0x20 V243
0x2ab: V246 = 0x40
0x2ad: V247 = M[0x40]
0x2b0: V248 = SUB V245 V247
0x2b2: RETURN V247 V248
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b3
[0x2b3:0x2b9]
---
Predecessors: [0x72]
Successors: [0x2ba, 0x2be]
---
0x2b3 JUMPDEST
0x2b4 CALLVALUE
0x2b5 ISZERO
0x2b6 PUSH2 0x2be
0x2b9 JUMPI
---
0x2b3: JUMPDEST 
0x2b4: V249 = CALLVALUE
0x2b5: V250 = ISZERO V249
0x2b6: V251 = 0x2be
0x2b9: JUMPI 0x2be V250
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ba
[0x2ba:0x2bd]
---
Predecessors: [0x2b3]
Successors: []
---
0x2ba PUSH1 0x0
0x2bc DUP1
0x2bd REVERT
---
0x2ba: V252 = 0x0
0x2bd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2be
[0x2be:0x2c5]
---
Predecessors: [0x2b3]
Successors: [0x774]
---
0x2be JUMPDEST
0x2bf PUSH2 0xc1
0x2c2 PUSH2 0x774
0x2c5 JUMP
---
0x2be: JUMPDEST 
0x2bf: V253 = 0xc1
0x2c2: V254 = 0x774
0x2c5: JUMP 0x774
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xc1]
Exit stack: [V12, 0xc1]

================================

Block 0x2c6
[0x2c6:0x2e9]
---
Predecessors: []
Successors: [0x2ea]
---
0x2c6 JUMPDEST
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca PUSH1 0x20
0x2cc DUP1
0x2cd DUP3
0x2ce MSTORE
0x2cf DUP2
0x2d0 SWAP1
0x2d1 DUP2
0x2d2 ADD
0x2d3 DUP4
0x2d4 DUP2
0x2d5 DUP2
0x2d6 MLOAD
0x2d7 DUP2
0x2d8 MSTORE
0x2d9 PUSH1 0x20
0x2db ADD
0x2dc SWAP2
0x2dd POP
0x2de DUP1
0x2df MLOAD
0x2e0 SWAP1
0x2e1 PUSH1 0x20
0x2e3 ADD
0x2e4 SWAP1
0x2e5 DUP1
0x2e6 DUP4
0x2e7 DUP4
0x2e8 PUSH1 0x0
---
0x2c6: JUMPDEST 
0x2c7: V255 = 0x40
0x2c9: V256 = M[0x40]
0x2ca: V257 = 0x20
0x2ce: M[V256] = 0x20
0x2d2: V258 = ADD V256 0x20
0x2d6: V259 = M[S0]
0x2d8: M[V258] = V259
0x2d9: V260 = 0x20
0x2db: V261 = ADD 0x20 V258
0x2df: V262 = M[S0]
0x2e1: V263 = 0x20
0x2e3: V264 = ADD 0x20 S0
0x2e8: V265 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V256, V256, V261, V264, V262, V262, V261, V264, 0x0]
Exit stack: [S0, V256, V256, V261, V264, V262, V262, V261, V264, 0x0]

================================

Block 0x2ea
[0x2ea:0x2f2]
---
Predecessors: [0x2c6]
Successors: [0xfe, 0x2f3]
---
0x2ea JUMPDEST
0x2eb DUP4
0x2ec DUP2
0x2ed LT
0x2ee ISZERO
0x2ef PUSH2 0xfe
0x2f2 JUMPI
---
0x2ea: JUMPDEST 
0x2ed: V266 = LT 0x0 V262
0x2ee: V267 = ISZERO V266
0x2ef: V268 = 0xfe
0x2f2: JUMPI 0xfe V267
---
Entry stack: [S9, V256, V256, V261, V264, V262, V262, V261, V264, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V256, V256, V261, V264, V262, V262, V261, V264, 0x0]

================================

Block 0x2f3
[0x2f3:0x2fa]
---
Predecessors: [0x2ea]
Successors: [0x2fb]
---
0x2f3 DUP1
0x2f4 DUP3
0x2f5 ADD
0x2f6 MLOAD
0x2f7 DUP2
0x2f8 DUP5
0x2f9 ADD
0x2fa MSTORE
---
0x2f5: V269 = ADD V264 0x0
0x2f6: V270 = M[V269]
0x2f9: V271 = ADD V261 0x0
0x2fa: M[V271] = V270
---
Entry stack: [S9, V256, V256, V261, V264, V262, V262, V261, V264, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V256, V256, V261, V264, V262, V262, V261, V264, 0x0]

================================

Block 0x2fb
[0x2fb:0x302]
---
Predecessors: [0x2f3]
Successors: [0xe5]
---
0x2fb JUMPDEST
0x2fc PUSH1 0x20
0x2fe ADD
0x2ff PUSH2 0xe5
0x302 JUMP
---
0x2fb: JUMPDEST 
0x2fc: V272 = 0x20
0x2fe: V273 = ADD 0x20 0x0
0x2ff: V274 = 0xe5
0x302: JUMP 0xe5
---
Entry stack: [S9, V256, V256, V261, V264, V262, V262, V261, V264, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V256, V256, V261, V264, V262, V262, V261, V264, 0x20]

================================

Block 0x303
[0x303:0x316]
---
Predecessors: []
Successors: [0x12b, 0x317]
---
0x303 JUMPDEST
0x304 POP
0x305 POP
0x306 POP
0x307 POP
0x308 SWAP1
0x309 POP
0x30a SWAP1
0x30b DUP2
0x30c ADD
0x30d SWAP1
0x30e PUSH1 0x1f
0x310 AND
0x311 DUP1
0x312 ISZERO
0x313 PUSH2 0x12b
0x316 JUMPI
---
0x303: JUMPDEST 
0x30c: V275 = ADD S4 S6
0x30e: V276 = 0x1f
0x310: V277 = AND 0x1f S4
0x312: V278 = ISZERO V277
0x313: V279 = 0x12b
0x316: JUMPI 0x12b V278
---
Entry stack: []
Stack pops: 7
Stack additions: [V275, V277]
Exit stack: [V275, V277]

================================

Block 0x317
[0x317:0x32f]
---
Predecessors: [0x303]
Successors: [0x330]
---
0x317 DUP1
0x318 DUP3
0x319 SUB
0x31a DUP1
0x31b MLOAD
0x31c PUSH1 0x1
0x31e DUP4
0x31f PUSH1 0x20
0x321 SUB
0x322 PUSH2 0x100
0x325 EXP
0x326 SUB
0x327 NOT
0x328 AND
0x329 DUP2
0x32a MSTORE
0x32b PUSH1 0x20
0x32d ADD
0x32e SWAP2
0x32f POP
---
0x319: V280 = SUB V275 V277
0x31b: V281 = M[V280]
0x31c: V282 = 0x1
0x31f: V283 = 0x20
0x321: V284 = SUB 0x20 V277
0x322: V285 = 0x100
0x325: V286 = EXP 0x100 V284
0x326: V287 = SUB V286 0x1
0x327: V288 = NOT V287
0x328: V289 = AND V288 V281
0x32a: M[V280] = V289
0x32b: V290 = 0x20
0x32d: V291 = ADD 0x20 V280
---
Entry stack: [V275, V277]
Stack pops: 2
Stack additions: [V291, S0]
Exit stack: [V291, V277]

================================

Block 0x330
[0x330:0x33d]
---
Predecessors: [0x317]
Successors: []
---
0x330 JUMPDEST
0x331 POP
0x332 SWAP3
0x333 POP
0x334 POP
0x335 POP
0x336 PUSH1 0x40
0x338 MLOAD
0x339 DUP1
0x33a SWAP2
0x33b SUB
0x33c SWAP1
0x33d RETURN
---
0x330: JUMPDEST 
0x336: V292 = 0x40
0x338: V293 = M[0x40]
0x33b: V294 = SUB V291 V293
0x33d: RETURN V293 V294
---
Entry stack: [V291, V277]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x33e
[0x33e:0x344]
---
Predecessors: [0x7d]
Successors: [0x345, 0x349]
---
0x33e JUMPDEST
0x33f CALLVALUE
0x340 ISZERO
0x341 PUSH2 0x349
0x344 JUMPI
---
0x33e: JUMPDEST 
0x33f: V295 = CALLVALUE
0x340: V296 = ISZERO V295
0x341: V297 = 0x349
0x344: JUMPI 0x349 V296
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x345
[0x345:0x348]
---
Predecessors: [0x33e]
Successors: []
---
0x345 PUSH1 0x0
0x347 DUP1
0x348 REVERT
---
0x345: V298 = 0x0
0x348: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x349
[0x349:0x35f]
---
Predecessors: [0x33e]
Successors: [0x7b6]
---
0x349 JUMPDEST
0x34a PUSH2 0x15b
0x34d PUSH1 0x1
0x34f PUSH1 0xa0
0x351 PUSH1 0x2
0x353 EXP
0x354 SUB
0x355 PUSH1 0x4
0x357 CALLDATALOAD
0x358 AND
0x359 PUSH1 0x24
0x35b CALLDATALOAD
0x35c PUSH2 0x7b6
0x35f JUMP
---
0x349: JUMPDEST 
0x34a: V299 = 0x15b
0x34d: V300 = 0x1
0x34f: V301 = 0xa0
0x351: V302 = 0x2
0x353: V303 = EXP 0x2 0xa0
0x354: V304 = SUB 0x10000000000000000000000000000000000000000 0x1
0x355: V305 = 0x4
0x357: V306 = CALLDATALOAD 0x4
0x358: V307 = AND V306 0xffffffffffffffffffffffffffffffffffffffff
0x359: V308 = 0x24
0x35b: V309 = CALLDATALOAD 0x24
0x35c: V310 = 0x7b6
0x35f: JUMP 0x7b6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15b, V307, V309]
Exit stack: [V12, 0x15b, V307, V309]

================================

Block 0x360
[0x360:0x373]
---
Predecessors: []
Successors: []
---
0x360 JUMPDEST
0x361 PUSH1 0x40
0x363 MLOAD
0x364 SWAP1
0x365 ISZERO
0x366 ISZERO
0x367 DUP2
0x368 MSTORE
0x369 PUSH1 0x20
0x36b ADD
0x36c PUSH1 0x40
0x36e MLOAD
0x36f DUP1
0x370 SWAP2
0x371 SUB
0x372 SWAP1
0x373 RETURN
---
0x360: JUMPDEST 
0x361: V311 = 0x40
0x363: V312 = M[0x40]
0x365: V313 = ISZERO S0
0x366: V314 = ISZERO V313
0x368: M[V312] = V314
0x369: V315 = 0x20
0x36b: V316 = ADD 0x20 V312
0x36c: V317 = 0x40
0x36e: V318 = M[0x40]
0x371: V319 = SUB V316 V318
0x373: RETURN V318 V319
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x374
[0x374:0x37a]
---
Predecessors: [0x88]
Successors: [0x37b, 0x37f]
---
0x374 JUMPDEST
0x375 CALLVALUE
0x376 ISZERO
0x377 PUSH2 0x37f
0x37a JUMPI
---
0x374: JUMPDEST 
0x375: V320 = CALLVALUE
0x376: V321 = ISZERO V320
0x377: V322 = 0x37f
0x37a: JUMPI 0x37f V321
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37b
[0x37b:0x37e]
---
Predecessors: [0x374]
Successors: []
---
0x37b PUSH1 0x0
0x37d DUP1
0x37e REVERT
---
0x37b: V323 = 0x0
0x37e: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37f
[0x37f:0x398]
---
Predecessors: [0x374]
Successors: [0x89c]
---
0x37f JUMPDEST
0x380 PUSH2 0x182
0x383 PUSH1 0x1
0x385 PUSH1 0xa0
0x387 PUSH1 0x2
0x389 EXP
0x38a SUB
0x38b PUSH1 0x4
0x38d CALLDATALOAD
0x38e DUP2
0x38f AND
0x390 SWAP1
0x391 PUSH1 0x24
0x393 CALLDATALOAD
0x394 AND
0x395 PUSH2 0x89c
0x398 JUMP
---
0x37f: JUMPDEST 
0x380: V324 = 0x182
0x383: V325 = 0x1
0x385: V326 = 0xa0
0x387: V327 = 0x2
0x389: V328 = EXP 0x2 0xa0
0x38a: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38b: V330 = 0x4
0x38d: V331 = CALLDATALOAD 0x4
0x38f: V332 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x391: V333 = 0x24
0x393: V334 = CALLDATALOAD 0x24
0x394: V335 = AND V334 0xffffffffffffffffffffffffffffffffffffffff
0x395: V336 = 0x89c
0x398: JUMP 0x89c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x182, V332, V335]
Exit stack: [V12, 0x182, V332, V335]

================================

Block 0x399
[0x399:0x3aa]
---
Predecessors: []
Successors: []
---
0x399 JUMPDEST
0x39a PUSH1 0x40
0x39c MLOAD
0x39d SWAP1
0x39e DUP2
0x39f MSTORE
0x3a0 PUSH1 0x20
0x3a2 ADD
0x3a3 PUSH1 0x40
0x3a5 MLOAD
0x3a6 DUP1
0x3a7 SWAP2
0x3a8 SUB
0x3a9 SWAP1
0x3aa RETURN
---
0x399: JUMPDEST 
0x39a: V337 = 0x40
0x39c: V338 = M[0x40]
0x39f: M[V338] = S0
0x3a0: V339 = 0x20
0x3a2: V340 = ADD 0x20 V338
0x3a3: V341 = 0x40
0x3a5: V342 = M[0x40]
0x3a8: V343 = SUB V340 V342
0x3aa: RETURN V342 V343
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3ab
[0x3ab:0x3b1]
---
Predecessors: [0x93]
Successors: [0x3b2, 0x3b6]
---
0x3ab JUMPDEST
0x3ac CALLVALUE
0x3ad ISZERO
0x3ae PUSH2 0x3b6
0x3b1 JUMPI
---
0x3ab: JUMPDEST 
0x3ac: V344 = CALLVALUE
0x3ad: V345 = ISZERO V344
0x3ae: V346 = 0x3b6
0x3b1: JUMPI 0x3b6 V345
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b2
[0x3b2:0x3b5]
---
Predecessors: [0x3ab]
Successors: []
---
0x3b2 PUSH1 0x0
0x3b4 DUP1
0x3b5 REVERT
---
0x3b2: V347 = 0x0
0x3b5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b6
[0x3b6:0x3c9]
---
Predecessors: [0x3ab]
Successors: [0x8c9]
---
0x3b6 JUMPDEST
0x3b7 PUSH2 0x15b
0x3ba PUSH1 0x1
0x3bc PUSH1 0xa0
0x3be PUSH1 0x2
0x3c0 EXP
0x3c1 SUB
0x3c2 PUSH1 0x4
0x3c4 CALLDATALOAD
0x3c5 AND
0x3c6 PUSH2 0x8c9
0x3c9 JUMP
---
0x3b6: JUMPDEST 
0x3b7: V348 = 0x15b
0x3ba: V349 = 0x1
0x3bc: V350 = 0xa0
0x3be: V351 = 0x2
0x3c0: V352 = EXP 0x2 0xa0
0x3c1: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3c2: V354 = 0x4
0x3c4: V355 = CALLDATALOAD 0x4
0x3c5: V356 = AND V355 0xffffffffffffffffffffffffffffffffffffffff
0x3c6: V357 = 0x8c9
0x3c9: JUMP 0x8c9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15b, V356]
Exit stack: [V12, 0x15b, V356]

================================

Block 0x3ca
[0x3ca:0x3dd]
---
Predecessors: []
Successors: []
---
0x3ca JUMPDEST
0x3cb PUSH1 0x40
0x3cd MLOAD
0x3ce SWAP1
0x3cf ISZERO
0x3d0 ISZERO
0x3d1 DUP2
0x3d2 MSTORE
0x3d3 PUSH1 0x20
0x3d5 ADD
0x3d6 PUSH1 0x40
0x3d8 MLOAD
0x3d9 DUP1
0x3da SWAP2
0x3db SUB
0x3dc SWAP1
0x3dd RETURN
---
0x3ca: JUMPDEST 
0x3cb: V358 = 0x40
0x3cd: V359 = M[0x40]
0x3cf: V360 = ISZERO S0
0x3d0: V361 = ISZERO V360
0x3d2: M[V359] = V361
0x3d3: V362 = 0x20
0x3d5: V363 = ADD 0x20 V359
0x3d6: V364 = 0x40
0x3d8: V365 = M[0x40]
0x3db: V366 = SUB V363 V365
0x3dd: RETURN V365 V366
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3de
[0x3de:0x3e4]
---
Predecessors: [0x9e]
Successors: [0x3e5, 0x3e9]
---
0x3de JUMPDEST
0x3df CALLVALUE
0x3e0 ISZERO
0x3e1 PUSH2 0x3e9
0x3e4 JUMPI
---
0x3de: JUMPDEST 
0x3df: V367 = CALLVALUE
0x3e0: V368 = ISZERO V367
0x3e1: V369 = 0x3e9
0x3e4: JUMPI 0x3e9 V368
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e5
[0x3e5:0x3e8]
---
Predecessors: [0x3de]
Successors: []
---
0x3e5 PUSH1 0x0
0x3e7 DUP1
0x3e8 REVERT
---
0x3e5: V370 = 0x0
0x3e8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e9
[0x3e9:0x3fc]
---
Predecessors: [0x3de]
Successors: [0x9e8]
---
0x3e9 JUMPDEST
0x3ea PUSH2 0x280
0x3ed PUSH1 0x1
0x3ef PUSH1 0xa0
0x3f1 PUSH1 0x2
0x3f3 EXP
0x3f4 SUB
0x3f5 PUSH1 0x4
0x3f7 CALLDATALOAD
0x3f8 AND
0x3f9 PUSH2 0x9e8
0x3fc JUMP
---
0x3e9: JUMPDEST 
0x3ea: V371 = 0x280
0x3ed: V372 = 0x1
0x3ef: V373 = 0xa0
0x3f1: V374 = 0x2
0x3f3: V375 = EXP 0x2 0xa0
0x3f4: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f5: V377 = 0x4
0x3f7: V378 = CALLDATALOAD 0x4
0x3f8: V379 = AND V378 0xffffffffffffffffffffffffffffffffffffffff
0x3f9: V380 = 0x9e8
0x3fc: JUMP 0x9e8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x280, V379]
Exit stack: [V12, 0x280, V379]

================================

Block 0x3fd
[0x3fd:0x3fe]
---
Predecessors: []
Successors: []
---
0x3fd JUMPDEST
0x3fe STOP
---
0x3fd: JUMPDEST 
0x3fe: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3ff
[0x3ff:0x406]
---
Predecessors: [0xb9]
Successors: [0xa30]
---
0x3ff JUMPDEST
0x400 PUSH2 0x407
0x403 PUSH2 0xa30
0x406 JUMP
---
0x3ff: JUMPDEST 
0x400: V381 = 0x407
0x403: V382 = 0xa30
0x406: JUMP 0xa30
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: [0x407]
Exit stack: [V12, 0xc1, 0x407]

================================

Block 0x407
[0x407:0x43d]
---
Predecessors: [0xa30]
Successors: [0x43e]
---
0x407 JUMPDEST
0x408 PUSH1 0x40
0x40a DUP1
0x40b MLOAD
0x40c SWAP1
0x40d DUP2
0x40e ADD
0x40f PUSH1 0x40
0x411 MSTORE
0x412 PUSH1 0x9
0x414 DUP2
0x415 MSTORE
0x416 PUSH32 0x44696d6f6e436f696e0000000000000000000000000000000000000000000000
0x437 PUSH1 0x20
0x439 DUP3
0x43a ADD
0x43b MSTORE
0x43c SWAP1
0x43d POP
---
0x407: JUMPDEST 
0x408: V383 = 0x40
0x40b: V384 = M[0x40]
0x40e: V385 = ADD V384 0x40
0x40f: V386 = 0x40
0x411: M[0x40] = V385
0x412: V387 = 0x9
0x415: M[V384] = 0x9
0x416: V388 = 0x44696d6f6e436f696e0000000000000000000000000000000000000000000000
0x437: V389 = 0x20
0x43a: V390 = ADD V384 0x20
0x43b: M[V390] = 0x44696d6f6e436f696e0000000000000000000000000000000000000000000000
---
Entry stack: [V12, 0xc1, V873]
Stack pops: 1
Stack additions: [V384]
Exit stack: [V12, 0xc1, V384]

================================

Block 0x43e
[0x43e:0x440]
---
Predecessors: [0x407]
Successors: [0xc1]
---
0x43e JUMPDEST
0x43f SWAP1
0x440 JUMP
---
0x43e: JUMPDEST 
0x440: JUMP 0xc1
---
Entry stack: [V12, 0xc1, V384]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V384]

================================

Block 0x441
[0x441:0x44c]
---
Predecessors: [0x144]
Successors: [0x44d, 0x476]
---
0x441 JUMPDEST
0x442 PUSH1 0x0
0x444 DUP2
0x445 ISZERO
0x446 DUP1
0x447 ISZERO
0x448 SWAP1
0x449 PUSH2 0x476
0x44c JUMPI
---
0x441: JUMPDEST 
0x442: V391 = 0x0
0x445: V392 = ISZERO V113
0x447: V393 = ISZERO V392
0x449: V394 = 0x476
0x44c: JUMPI 0x476 V392
---
Entry stack: [V12, 0x15b, V111, V113]
Stack pops: 1
Stack additions: [S0, 0x0, V393]
Exit stack: [V12, 0x15b, V111, V113, 0x0, V393]

================================

Block 0x44d
[0x44d:0x475]
---
Predecessors: [0x441]
Successors: [0x476]
---
0x44d POP
0x44e PUSH1 0x1
0x450 PUSH1 0xa0
0x452 PUSH1 0x2
0x454 EXP
0x455 SUB
0x456 CALLER
0x457 DUP2
0x458 AND
0x459 PUSH1 0x0
0x45b SWAP1
0x45c DUP2
0x45d MSTORE
0x45e PUSH1 0x2
0x460 PUSH1 0x20
0x462 SWAP1
0x463 DUP2
0x464 MSTORE
0x465 PUSH1 0x40
0x467 DUP1
0x468 DUP4
0x469 SHA3
0x46a SWAP4
0x46b DUP8
0x46c AND
0x46d DUP4
0x46e MSTORE
0x46f SWAP3
0x470 SWAP1
0x471 MSTORE
0x472 SHA3
0x473 SLOAD
0x474 ISZERO
0x475 ISZERO
---
0x44e: V395 = 0x1
0x450: V396 = 0xa0
0x452: V397 = 0x2
0x454: V398 = EXP 0x2 0xa0
0x455: V399 = SUB 0x10000000000000000000000000000000000000000 0x1
0x456: V400 = CALLER
0x458: V401 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x459: V402 = 0x0
0x45d: M[0x0] = V401
0x45e: V403 = 0x2
0x460: V404 = 0x20
0x464: M[0x20] = 0x2
0x465: V405 = 0x40
0x469: V406 = SHA3 0x0 0x40
0x46c: V407 = AND V111 0xffffffffffffffffffffffffffffffffffffffff
0x46e: M[0x0] = V407
0x471: M[0x20] = V406
0x472: V408 = SHA3 0x0 0x40
0x473: V409 = S[V408]
0x474: V410 = ISZERO V409
0x475: V411 = ISZERO V410
---
Entry stack: [V12, 0x15b, V111, V113, 0x0, V393]
Stack pops: 4
Stack additions: [S3, S2, S1, V411]
Exit stack: [V12, 0x15b, V111, V113, 0x0, V411]

================================

Block 0x476
[0x476:0x47b]
---
Predecessors: [0x441, 0x44d]
Successors: [0x47c, 0x483]
---
0x476 JUMPDEST
0x477 ISZERO
0x478 PUSH2 0x483
0x47b JUMPI
---
0x476: JUMPDEST 
0x477: V412 = ISZERO S0
0x478: V413 = 0x483
0x47b: JUMPI 0x483 V412
---
Entry stack: [V12, 0x15b, V111, V113, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15b, V111, V113, 0x0]

================================

Block 0x47c
[0x47c:0x482]
---
Predecessors: [0x476]
Successors: [0x4e7]
---
0x47c POP
0x47d PUSH1 0x0
0x47f PUSH2 0x4e7
0x482 JUMP
---
0x47d: V414 = 0x0
0x47f: V415 = 0x4e7
0x482: JUMP 0x4e7
---
Entry stack: [V12, 0x15b, V111, V113, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x15b, V111, V113, 0x0]

================================

Block 0x483
[0x483:0x4e6]
---
Predecessors: [0x476]
Successors: [0x4e7]
---
0x483 JUMPDEST
0x484 PUSH1 0x1
0x486 PUSH1 0xa0
0x488 PUSH1 0x2
0x48a EXP
0x48b SUB
0x48c CALLER
0x48d DUP2
0x48e AND
0x48f PUSH1 0x0
0x491 DUP2
0x492 DUP2
0x493 MSTORE
0x494 PUSH1 0x2
0x496 PUSH1 0x20
0x498 SWAP1
0x499 DUP2
0x49a MSTORE
0x49b PUSH1 0x40
0x49d DUP1
0x49e DUP4
0x49f SHA3
0x4a0 SWAP5
0x4a1 DUP9
0x4a2 AND
0x4a3 DUP1
0x4a4 DUP5
0x4a5 MSTORE
0x4a6 SWAP5
0x4a7 SWAP1
0x4a8 SWAP2
0x4a9 MSTORE
0x4aa SWAP1
0x4ab DUP2
0x4ac SWAP1
0x4ad SHA3
0x4ae DUP6
0x4af SWAP1
0x4b0 SSTORE
0x4b1 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x4d2 SWAP1
0x4d3 DUP6
0x4d4 SWAP1
0x4d5 MLOAD
0x4d6 SWAP1
0x4d7 DUP2
0x4d8 MSTORE
0x4d9 PUSH1 0x20
0x4db ADD
0x4dc PUSH1 0x40
0x4de MLOAD
0x4df DUP1
0x4e0 SWAP2
0x4e1 SUB
0x4e2 SWAP1
0x4e3 LOG3
0x4e4 POP
0x4e5 PUSH1 0x1
---
0x483: JUMPDEST 
0x484: V416 = 0x1
0x486: V417 = 0xa0
0x488: V418 = 0x2
0x48a: V419 = EXP 0x2 0xa0
0x48b: V420 = SUB 0x10000000000000000000000000000000000000000 0x1
0x48c: V421 = CALLER
0x48e: V422 = AND 0xffffffffffffffffffffffffffffffffffffffff V421
0x48f: V423 = 0x0
0x493: M[0x0] = V422
0x494: V424 = 0x2
0x496: V425 = 0x20
0x49a: M[0x20] = 0x2
0x49b: V426 = 0x40
0x49f: V427 = SHA3 0x0 0x40
0x4a2: V428 = AND V111 0xffffffffffffffffffffffffffffffffffffffff
0x4a5: M[0x0] = V428
0x4a9: M[0x20] = V427
0x4ad: V429 = SHA3 0x0 0x40
0x4b0: S[V429] = V113
0x4b1: V430 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x4d5: V431 = M[0x40]
0x4d8: M[V431] = V113
0x4d9: V432 = 0x20
0x4db: V433 = ADD 0x20 V431
0x4dc: V434 = 0x40
0x4de: V435 = M[0x40]
0x4e1: V436 = SUB V433 V435
0x4e3: LOG V435 V436 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V422 V428
0x4e5: V437 = 0x1
---
Entry stack: [V12, 0x15b, V111, V113, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V12, 0x15b, V111, V113, 0x1]

================================

Block 0x4e7
[0x4e7:0x4ec]
---
Predecessors: [0x47c, 0x483]
Successors: [0x15b]
---
0x4e7 JUMPDEST
0x4e8 SWAP3
0x4e9 SWAP2
0x4ea POP
0x4eb POP
0x4ec JUMP
---
0x4e7: JUMPDEST 
0x4ec: JUMP 0x15b
---
Entry stack: [V12, 0x15b, V111, V113, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x4ed
[0x4ed:0x4f2]
---
Predecessors: [0x17a]
Successors: [0x182]
---
0x4ed JUMPDEST
0x4ee PUSH1 0x3
0x4f0 SLOAD
0x4f1 DUP2
0x4f2 JUMP
---
0x4ed: JUMPDEST 
0x4ee: V438 = 0x3
0x4f0: V439 = S[0x3]
0x4f2: JUMP 0x182
---
Entry stack: [V12, 0x182]
Stack pops: 1
Stack additions: [S0, V439]
Exit stack: [V12, 0x182, V439]

================================

Block 0x4f3
[0x4f3:0x505]
---
Predecessors: [0x19f]
Successors: [0x506, 0x507]
---
0x4f3 JUMPDEST
0x4f4 PUSH1 0x0
0x4f6 DUP1
0x4f7 DUP1
0x4f8 DUP1
0x4f9 DUP1
0x4fa DUP1
0x4fb PUSH1 0x40
0x4fd PUSH1 0x44
0x4ff CALLDATASIZE
0x500 LT
0x501 ISZERO
0x502 PUSH2 0x507
0x505 JUMPI
---
0x4f3: JUMPDEST 
0x4f4: V440 = 0x0
0x4fb: V441 = 0x40
0x4fd: V442 = 0x44
0x4ff: V443 = CALLDATASIZE
0x500: V444 = LT V443 0x44
0x501: V445 = ISZERO V444
0x502: V446 = 0x507
0x505: JUMPI 0x507 V445
---
Entry stack: [V12, 0x15b, V149, V152, V154]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]
Exit stack: [V12, 0x15b, V149, V152, V154, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]

================================

Block 0x506
[0x506:0x506]
---
Predecessors: [0x4f3]
Successors: []
---
0x506 INVALID
---
0x506: INVALID 
---
Entry stack: [V12, 0x15b, V149, V152, V154, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15b, V149, V152, V154, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]

================================

Block 0x507
[0x507:0x50e]
---
Predecessors: [0x4f3]
Successors: [0x50f, 0x517]
---
0x507 JUMPDEST
0x508 DUP8
0x509 ISZERO
0x50a ISZERO
0x50b PUSH2 0x517
0x50e JUMPI
---
0x507: JUMPDEST 
0x509: V447 = ISZERO V154
0x50a: V448 = ISZERO V447
0x50b: V449 = 0x517
0x50e: JUMPI 0x517 V448
---
Entry stack: [V12, 0x15b, V149, V152, V154, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x15b, V149, V152, V154, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]

================================

Block 0x50f
[0x50f:0x516]
---
Predecessors: [0x507]
Successors: [0x619]
---
0x50f PUSH1 0x0
0x511 SWAP7
0x512 POP
0x513 PUSH2 0x619
0x516 JUMP
---
0x50f: V450 = 0x0
0x513: V451 = 0x619
0x516: JUMP 0x619
---
Entry stack: [V12, 0x15b, V149, V152, V154, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]
Stack pops: 7
Stack additions: [0x0, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x15b, V149, V152, V154, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]

================================

Block 0x517
[0x517:0x575]
---
Predecessors: [0x507]
Successors: [0x576, 0x578]
---
0x517 JUMPDEST
0x518 PUSH1 0x1
0x51a PUSH1 0xa0
0x51c PUSH1 0x2
0x51e EXP
0x51f SUB
0x520 DUP1
0x521 DUP12
0x522 AND
0x523 PUSH1 0x0
0x525 SWAP1
0x526 DUP2
0x527 MSTORE
0x528 PUSH1 0x1
0x52a PUSH1 0x20
0x52c DUP2
0x52d DUP2
0x52e MSTORE
0x52f PUSH1 0x40
0x531 DUP1
0x532 DUP5
0x533 SHA3
0x534 SLOAD
0x535 PUSH1 0x2
0x537 DUP4
0x538 MSTORE
0x539 DUP2
0x53a DUP6
0x53b SHA3
0x53c CALLER
0x53d DUP8
0x53e AND
0x53f DUP7
0x540 MSTORE
0x541 DUP4
0x542 MSTORE
0x543 DUP2
0x544 DUP6
0x545 SHA3
0x546 SLOAD
0x547 SWAP6
0x548 DUP16
0x549 AND
0x54a DUP6
0x54b MSTORE
0x54c SWAP3
0x54d SWAP1
0x54e SWAP2
0x54f MSTORE
0x550 SWAP1
0x551 SWAP2
0x552 SHA3
0x553 SLOAD
0x554 SWAP1
0x555 SWAP8
0x556 POP
0x557 SWAP1
0x558 SWAP6
0x559 POP
0x55a DUP9
0x55b DUP8
0x55c GT
0x55d DUP1
0x55e ISZERO
0x55f SWAP6
0x560 POP
0x561 DUP10
0x562 DUP8
0x563 GT
0x564 ISZERO
0x565 SWAP5
0x566 POP
0x567 DUP2
0x568 DUP11
0x569 ADD
0x56a SWAP2
0x56b SWAP1
0x56c SWAP2
0x56d GT
0x56e SWAP3
0x56f POP
0x570 DUP5
0x571 SWAP1
0x572 PUSH2 0x578
0x575 JUMPI
---
0x517: JUMPDEST 
0x518: V452 = 0x1
0x51a: V453 = 0xa0
0x51c: V454 = 0x2
0x51e: V455 = EXP 0x2 0xa0
0x51f: V456 = SUB 0x10000000000000000000000000000000000000000 0x1
0x522: V457 = AND V149 0xffffffffffffffffffffffffffffffffffffffff
0x523: V458 = 0x0
0x527: M[0x0] = V457
0x528: V459 = 0x1
0x52a: V460 = 0x20
0x52e: M[0x20] = 0x1
0x52f: V461 = 0x40
0x533: V462 = SHA3 0x0 0x40
0x534: V463 = S[V462]
0x535: V464 = 0x2
0x538: M[0x20] = 0x2
0x53b: V465 = SHA3 0x0 0x40
0x53c: V466 = CALLER
0x53e: V467 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x540: M[0x0] = V467
0x542: M[0x20] = V465
0x545: V468 = SHA3 0x0 0x40
0x546: V469 = S[V468]
0x549: V470 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x54b: M[0x0] = V470
0x54f: M[0x20] = 0x1
0x552: V471 = SHA3 0x0 0x40
0x553: V472 = S[V471]
0x55c: V473 = GT V463 V154
0x55e: V474 = ISZERO V473
0x563: V475 = GT V469 V154
0x564: V476 = ISZERO V475
0x569: V477 = ADD V154 V472
0x56d: V478 = GT V477 V472
0x572: V479 = 0x578
0x575: JUMPI 0x578 V473
---
Entry stack: [V12, 0x15b, V149, V152, V154, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x40]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, V463, V469, V474, V476, V478, S0, V474]
Exit stack: [V12, 0x15b, V149, V152, V154, 0x0, V463, V469, V474, V476, V478, 0x40, V474]

================================

Block 0x576
[0x576:0x577]
---
Predecessors: [0x517]
Successors: [0x578]
---
0x576 POP
0x577 DUP3
---
0x576: NOP 
---
Entry stack: [V12, 0x15b, V149, V152, V154, 0x0, V463, V469, V474, V476, V478, 0x40, V474]
Stack pops: 4
Stack additions: [S3, S2, S1, S3]
Exit stack: [V12, 0x15b, V149, V152, V154, 0x0, V463, V469, V474, V476, V478, 0x40, V476]

================================

Block 0x578
[0x578:0x57e]
---
Predecessors: [0x517, 0x576]
Successors: [0x57f, 0x582]
---
0x578 JUMPDEST
0x579 DUP1
0x57a ISZERO
0x57b PUSH2 0x582
0x57e JUMPI
---
0x578: JUMPDEST 
0x57a: V480 = ISZERO S0
0x57b: V481 = 0x582
0x57e: JUMPI 0x582 V480
---
Entry stack: [V12, 0x15b, V149, V152, V154, 0x0, V463, V469, V474, V476, V478, 0x40, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x15b, V149, V152, V154, 0x0, V463, V469, V474, V476, V478, 0x40, S0]

================================

Block 0x57f
[0x57f:0x581]
---
Predecessors: [0x578]
Successors: [0x582]
---
0x57f POP
0x580 DUP2
0x581 ISZERO
---
0x581: V482 = ISZERO V478
---
Entry stack: [V12, 0x15b, V149, V152, V154, 0x0, V463, V469, V474, V476, V478, 0x40, S0]
Stack pops: 3
Stack additions: [S2, S1, V482]
Exit stack: [V12, 0x15b, V149, V152, V154, 0x0, V463, V469, V474, V476, V478, 0x40, V482]

================================

Block 0x582
[0x582:0x587]
---
Predecessors: [0x578, 0x57f]
Successors: [0x588, 0x614]
---
0x582 JUMPDEST
0x583 ISZERO
0x584 PUSH2 0x614
0x587 JUMPI
---
0x582: JUMPDEST 
0x583: V483 = ISZERO S0
0x584: V484 = 0x614
0x587: JUMPI 0x614 V483
---
Entry stack: [V12, 0x15b, V149, V152, V154, 0x0, V463, V469, V474, V476, V478, 0x40, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15b, V149, V152, V154, 0x0, V463, V469, V474, V476, V478, 0x40]

================================

Block 0x588
[0x588:0x613]
---
Predecessors: [0x582]
Successors: [0x619]
---
0x588 PUSH1 0x1
0x58a PUSH1 0xa0
0x58c PUSH1 0x2
0x58e EXP
0x58f SUB
0x590 DUP1
0x591 DUP11
0x592 AND
0x593 PUSH1 0x0
0x595 DUP2
0x596 DUP2
0x597 MSTORE
0x598 PUSH1 0x1
0x59a PUSH1 0x20
0x59c SWAP1
0x59d DUP2
0x59e MSTORE
0x59f PUSH1 0x40
0x5a1 DUP1
0x5a2 DUP4
0x5a3 SHA3
0x5a4 DUP1
0x5a5 SLOAD
0x5a6 DUP15
0x5a7 ADD
0x5a8 SWAP1
0x5a9 SSTORE
0x5aa DUP15
0x5ab DUP6
0x5ac AND
0x5ad DUP1
0x5ae DUP5
0x5af MSTORE
0x5b0 DUP2
0x5b1 DUP5
0x5b2 SHA3
0x5b3 DUP1
0x5b4 SLOAD
0x5b5 DUP16
0x5b6 SWAP1
0x5b7 SUB
0x5b8 SWAP1
0x5b9 SSTORE
0x5ba PUSH1 0x2
0x5bc DUP4
0x5bd MSTORE
0x5be DUP2
0x5bf DUP5
0x5c0 SHA3
0x5c1 CALLER
0x5c2 SWAP1
0x5c3 SWAP7
0x5c4 AND
0x5c5 DUP5
0x5c6 MSTORE
0x5c7 SWAP5
0x5c8 SWAP1
0x5c9 SWAP2
0x5ca MSTORE
0x5cb SWAP1
0x5cc DUP2
0x5cd SWAP1
0x5ce SHA3
0x5cf DUP1
0x5d0 SLOAD
0x5d1 DUP13
0x5d2 SWAP1
0x5d3 SUB
0x5d4 SWAP1
0x5d5 SSTORE
0x5d6 SWAP1
0x5d7 SWAP2
0x5d8 SWAP1
0x5d9 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x5fa SWAP1
0x5fb DUP12
0x5fc SWAP1
0x5fd MLOAD
0x5fe SWAP1
0x5ff DUP2
0x600 MSTORE
0x601 PUSH1 0x20
0x603 ADD
0x604 PUSH1 0x40
0x606 MLOAD
0x607 DUP1
0x608 SWAP2
0x609 SUB
0x60a SWAP1
0x60b LOG3
0x60c PUSH1 0x1
0x60e SWAP7
0x60f POP
0x610 PUSH2 0x619
0x613 JUMP
---
0x588: V485 = 0x1
0x58a: V486 = 0xa0
0x58c: V487 = 0x2
0x58e: V488 = EXP 0x2 0xa0
0x58f: V489 = SUB 0x10000000000000000000000000000000000000000 0x1
0x592: V490 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x593: V491 = 0x0
0x597: M[0x0] = V490
0x598: V492 = 0x1
0x59a: V493 = 0x20
0x59e: M[0x20] = 0x1
0x59f: V494 = 0x40
0x5a3: V495 = SHA3 0x0 0x40
0x5a5: V496 = S[V495]
0x5a7: V497 = ADD V154 V496
0x5a9: S[V495] = V497
0x5ac: V498 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x5af: M[0x0] = V498
0x5b2: V499 = SHA3 0x0 0x40
0x5b4: V500 = S[V499]
0x5b7: V501 = SUB V500 V154
0x5b9: S[V499] = V501
0x5ba: V502 = 0x2
0x5bd: M[0x20] = 0x2
0x5c0: V503 = SHA3 0x0 0x40
0x5c1: V504 = CALLER
0x5c4: V505 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x5c6: M[0x0] = V505
0x5ca: M[0x20] = V503
0x5ce: V506 = SHA3 0x0 0x40
0x5d0: V507 = S[V506]
0x5d3: V508 = SUB V507 V154
0x5d5: S[V506] = V508
0x5d9: V509 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x5fd: V510 = M[0x40]
0x600: M[V510] = V154
0x601: V511 = 0x20
0x603: V512 = ADD 0x20 V510
0x604: V513 = 0x40
0x606: V514 = M[0x40]
0x609: V515 = SUB V512 V514
0x60b: LOG V514 V515 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V498 V490
0x60c: V516 = 0x1
0x610: V517 = 0x619
0x613: JUMP 0x619
---
Entry stack: [V12, 0x15b, V149, V152, V154, 0x0, V463, V469, V474, V476, V478, 0x40]
Stack pops: 10
Stack additions: [S9, S8, S7, 0x1, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x15b, V149, V152, V154, 0x1, V463, V469, V474, V476, V478, 0x40]

================================

Block 0x614
[0x614:0x618]
---
Predecessors: [0x582]
Successors: [0x619]
---
0x614 JUMPDEST
0x615 PUSH1 0x0
0x617 SWAP7
0x618 POP
---
0x614: JUMPDEST 
0x615: V518 = 0x0
---
Entry stack: [V12, 0x15b, V149, V152, V154, 0x0, V463, V469, V474, V476, V478, 0x40]
Stack pops: 7
Stack additions: [0x0, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x15b, V149, V152, V154, 0x0, V463, V469, V474, V476, V478, 0x40]

================================

Block 0x619
[0x619:0x619]
---
Predecessors: [0x50f, 0x588, 0x614]
Successors: [0x61a]
---
0x619 JUMPDEST
---
0x619: JUMPDEST 
---
Entry stack: [V12, 0x15b, V149, V152, V154, {0x0, 0x1}, S5, S4, S3, S2, S1, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15b, V149, V152, V154, {0x0, 0x1}, S5, S4, S3, S2, S1, 0x40]

================================

Block 0x61a
[0x61a:0x61a]
---
Predecessors: [0x619]
Successors: [0x61b]
---
0x61a JUMPDEST
---
0x61a: JUMPDEST 
---
Entry stack: [V12, 0x15b, V149, V152, V154, {0x0, 0x1}, S5, S4, S3, S2, S1, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15b, V149, V152, V154, {0x0, 0x1}, S5, S4, S3, S2, S1, 0x40]

================================

Block 0x61b
[0x61b:0x627]
---
Predecessors: [0x61a]
Successors: [0x15b]
---
0x61b JUMPDEST
0x61c POP
0x61d POP
0x61e POP
0x61f POP
0x620 POP
0x621 POP
0x622 SWAP4
0x623 SWAP3
0x624 POP
0x625 POP
0x626 POP
0x627 JUMP
---
0x61b: JUMPDEST 
0x627: JUMP 0x15b
---
Entry stack: [V12, 0x15b, V149, V152, V154, {0x0, 0x1}, S5, S4, S3, S2, S1, 0x40]
Stack pops: 11
Stack additions: [S6]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x628
[0x628:0x62a]
---
Predecessors: [0x1db]
Successors: [0x62b]
---
0x628 JUMPDEST
0x629 PUSH1 0x8
---
0x628: JUMPDEST 
0x629: V519 = 0x8
---
Entry stack: [V12, 0x1e3]
Stack pops: 0
Stack additions: [0x8]
Exit stack: [V12, 0x1e3, 0x8]

================================

Block 0x62b
[0x62b:0x62d]
---
Predecessors: [0x628]
Successors: [0x1e3]
---
0x62b JUMPDEST
0x62c SWAP1
0x62d JUMP
---
0x62b: JUMPDEST 
0x62d: JUMP 0x1e3
---
Entry stack: [V12, 0x1e3, 0x8]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x8]

================================

Block 0x62e
[0x62e:0x639]
---
Predecessors: [0x204, 0x678]
Successors: [0x63a]
---
0x62e JUMPDEST
0x62f PUSH1 0x1
0x631 PUSH1 0xa0
0x633 PUSH1 0x2
0x635 EXP
0x636 SUB
0x637 DUP2
0x638 AND
0x639 BALANCE
---
0x62e: JUMPDEST 
0x62f: V520 = 0x1
0x631: V521 = 0xa0
0x633: V522 = 0x2
0x635: V523 = EXP 0x2 0xa0
0x636: V524 = SUB 0x10000000000000000000000000000000000000000 0x1
0x638: V525 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x639: V526 = BALANCE V525
---
Entry stack: [V12, 0x280, V216, V223, V226, S3, S2, {0x182, 0x687}, S0]
Stack pops: 1
Stack additions: [S0, V526]
Exit stack: [V12, 0x280, V216, V223, V226, S3, S2, {0x182, 0x687}, S0, V526]

================================

Block 0x63a
[0x63a:0x63e]
---
Predecessors: [0x62e]
Successors: [0x182, 0x687]
---
0x63a JUMPDEST
0x63b SWAP2
0x63c SWAP1
0x63d POP
0x63e JUMP
---
0x63a: JUMPDEST 
0x63e: JUMP {0x182, 0x687}
---
Entry stack: [V12, 0x280, V216, V223, V226, S4, S3, {0x182, 0x687}, S1, V526]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, 0x280, V216, V223, V226, S4, S3, V526]

================================

Block 0x63f
[0x63f:0x656]
---
Predecessors: [0x235]
Successors: [0x657, 0x65b]
---
0x63f JUMPDEST
0x640 PUSH1 0x0
0x642 DUP1
0x643 SLOAD
0x644 CALLER
0x645 PUSH1 0x1
0x647 PUSH1 0xa0
0x649 PUSH1 0x2
0x64b EXP
0x64c SUB
0x64d SWAP1
0x64e DUP2
0x64f AND
0x650 SWAP2
0x651 AND
0x652 EQ
0x653 PUSH2 0x65b
0x656 JUMPI
---
0x63f: JUMPDEST 
0x640: V527 = 0x0
0x643: V528 = S[0x0]
0x644: V529 = CALLER
0x645: V530 = 0x1
0x647: V531 = 0xa0
0x649: V532 = 0x2
0x64b: V533 = EXP 0x2 0xa0
0x64c: V534 = SUB 0x10000000000000000000000000000000000000000 0x1
0x64f: V535 = AND 0xffffffffffffffffffffffffffffffffffffffff V529
0x651: V536 = AND V528 0xffffffffffffffffffffffffffffffffffffffff
0x652: V537 = EQ V536 V535
0x653: V538 = 0x65b
0x656: JUMPI 0x65b V537
---
Entry stack: [V12, 0x280, V216, V223, V226]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x280, V216, V223, V226, 0x0]

================================

Block 0x657
[0x657:0x65a]
---
Predecessors: [0x63f]
Successors: []
---
0x657 PUSH1 0x0
0x659 DUP1
0x65a REVERT
---
0x657: V539 = 0x0
0x65a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x280, V216, V223, V226, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x280, V216, V223, V226, 0x0]

================================

Block 0x65b
[0x65b:0x65e]
---
Predecessors: [0x63f]
Successors: [0x65f]
---
0x65b JUMPDEST
0x65c POP
0x65d PUSH1 0x0
---
0x65b: JUMPDEST 
0x65d: V540 = 0x0
---
Entry stack: [V12, 0x280, V216, V223, V226, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x280, V216, V223, V226, 0x0]

================================

Block 0x65f
[0x65f:0x668]
---
Predecessors: [0x65b, 0x745]
Successors: [0x669, 0x74d]
---
0x65f JUMPDEST
0x660 DUP4
0x661 MLOAD
0x662 DUP2
0x663 LT
0x664 ISZERO
0x665 PUSH2 0x74d
0x668 JUMPI
---
0x65f: JUMPDEST 
0x661: V541 = M[V216]
0x663: V542 = LT S0 V541
0x664: V543 = ISZERO V542
0x665: V544 = 0x74d
0x668: JUMPI 0x74d V543
---
Entry stack: [V12, 0x280, V216, V223, V226, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x280, V216, V223, V226, S0]

================================

Block 0x669
[0x669:0x676]
---
Predecessors: [0x65f]
Successors: [0x677, 0x678]
---
0x669 DUP2
0x66a PUSH2 0x687
0x66d DUP6
0x66e DUP4
0x66f DUP2
0x670 MLOAD
0x671 DUP2
0x672 LT
0x673 PUSH2 0x678
0x676 JUMPI
---
0x66a: V545 = 0x687
0x670: V546 = M[V216]
0x672: V547 = LT S0 V546
0x673: V548 = 0x678
0x676: JUMPI 0x678 V547
---
Entry stack: [V12, 0x280, V216, V223, V226, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S1, 0x687, S3, S0]
Exit stack: [V12, 0x280, V216, V223, V226, S0, V226, 0x687, V216, S0]

================================

Block 0x677
[0x677:0x677]
---
Predecessors: [0x669]
Successors: []
---
0x677 INVALID
---
0x677: INVALID 
---
Entry stack: [V12, 0x280, V216, V223, V226, S4, V226, 0x687, V216, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x280, V216, V223, V226, S4, V226, 0x687, V216, S0]

================================

Block 0x678
[0x678:0x686]
---
Predecessors: [0x669]
Successors: [0x62e]
---
0x678 JUMPDEST
0x679 SWAP1
0x67a PUSH1 0x20
0x67c ADD
0x67d SWAP1
0x67e PUSH1 0x20
0x680 MUL
0x681 ADD
0x682 MLOAD
0x683 PUSH2 0x62e
0x686 JUMP
---
0x678: JUMPDEST 
0x67a: V549 = 0x20
0x67c: V550 = ADD 0x20 V216
0x67e: V551 = 0x20
0x680: V552 = MUL 0x20 S0
0x681: V553 = ADD V552 V550
0x682: V554 = M[V553]
0x683: V555 = 0x62e
0x686: JUMP 0x62e
---
Entry stack: [V12, 0x280, V216, V223, V226, S4, V226, 0x687, V216, S0]
Stack pops: 2
Stack additions: [V554]
Exit stack: [V12, 0x280, V216, V223, V226, S4, V226, 0x687, V554]

================================

Block 0x687
[0x687:0x68d]
---
Predecessors: [0x63a]
Successors: [0x68e, 0x692]
---
0x687 JUMPDEST
0x688 LT
0x689 ISZERO
0x68a PUSH2 0x692
0x68d JUMPI
---
0x687: JUMPDEST 
0x688: V556 = LT S0 S1
0x689: V557 = ISZERO V556
0x68a: V558 = 0x692
0x68d: JUMPI 0x692 V557
---
Entry stack: [V12, 0x280, V216, V223, V226, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x280, V216, V223, V226, S2]

================================

Block 0x68e
[0x68e:0x691]
---
Predecessors: [0x687]
Successors: [0x745]
---
0x68e PUSH2 0x745
0x691 JUMP
---
0x68e: V559 = 0x745
0x691: JUMP 0x745
---
Entry stack: [V12, 0x280, V216, V223, V226, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x280, V216, V223, V226, S0]

================================

Block 0x692
[0x692:0x6bf]
---
Predecessors: [0x687]
Successors: [0x6c0, 0x6c1]
---
0x692 JUMPDEST
0x693 PUSH1 0x0
0x695 DUP1
0x696 SLOAD
0x697 PUSH1 0x1
0x699 PUSH1 0xa0
0x69b PUSH1 0x2
0x69d EXP
0x69e SUB
0x69f AND
0x6a0 DUP2
0x6a1 MSTORE
0x6a2 PUSH1 0x1
0x6a4 PUSH1 0x20
0x6a6 DUP2
0x6a7 SWAP1
0x6a8 MSTORE
0x6a9 PUSH1 0x40
0x6ab DUP3
0x6ac SHA3
0x6ad DUP1
0x6ae SLOAD
0x6af DUP7
0x6b0 SWAP1
0x6b1 SUB
0x6b2 SWAP1
0x6b3 SSTORE
0x6b4 DUP5
0x6b5 SWAP2
0x6b6 DUP7
0x6b7 DUP5
0x6b8 DUP2
0x6b9 MLOAD
0x6ba DUP2
0x6bb LT
0x6bc PUSH2 0x6c1
0x6bf JUMPI
---
0x692: JUMPDEST 
0x693: V560 = 0x0
0x696: V561 = S[0x0]
0x697: V562 = 0x1
0x699: V563 = 0xa0
0x69b: V564 = 0x2
0x69d: V565 = EXP 0x2 0xa0
0x69e: V566 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69f: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff V561
0x6a1: M[0x0] = V567
0x6a2: V568 = 0x1
0x6a4: V569 = 0x20
0x6a8: M[0x20] = 0x1
0x6a9: V570 = 0x40
0x6ac: V571 = SHA3 0x0 0x40
0x6ae: V572 = S[V571]
0x6b1: V573 = SUB V572 V223
0x6b3: S[V571] = V573
0x6b9: V574 = M[V216]
0x6bb: V575 = LT S0 V574
0x6bc: V576 = 0x6c1
0x6bf: JUMPI 0x6c1 V575
---
Entry stack: [V12, 0x280, V216, V223, V226, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S2, 0x1, 0x0, S3, S0]
Exit stack: [V12, 0x280, V216, V223, V226, S0, V223, 0x1, 0x0, V216, S0]

================================

Block 0x6c0
[0x6c0:0x6c0]
---
Predecessors: [0x692]
Successors: []
---
0x6c0 INVALID
---
0x6c0: INVALID 
---
Entry stack: [V12, 0x280, V216, V223, V226, S5, V223, 0x1, 0x0, V216, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x280, V216, V223, V226, S5, V223, 0x1, 0x0, V216, S0]

================================

Block 0x6c1
[0x6c1:0x6f5]
---
Predecessors: [0x692]
Successors: [0x6f6, 0x6f7]
---
0x6c1 JUMPDEST
0x6c2 SWAP1
0x6c3 PUSH1 0x20
0x6c5 ADD
0x6c6 SWAP1
0x6c7 PUSH1 0x20
0x6c9 MUL
0x6ca ADD
0x6cb MLOAD
0x6cc PUSH1 0x1
0x6ce PUSH1 0xa0
0x6d0 PUSH1 0x2
0x6d2 EXP
0x6d3 SUB
0x6d4 AND
0x6d5 DUP2
0x6d6 MSTORE
0x6d7 PUSH1 0x20
0x6d9 DUP2
0x6da ADD
0x6db SWAP2
0x6dc SWAP1
0x6dd SWAP2
0x6de MSTORE
0x6df PUSH1 0x40
0x6e1 ADD
0x6e2 PUSH1 0x0
0x6e4 SHA3
0x6e5 DUP1
0x6e6 SLOAD
0x6e7 SWAP1
0x6e8 SWAP2
0x6e9 ADD
0x6ea SWAP1
0x6eb SSTORE
0x6ec DUP4
0x6ed DUP2
0x6ee DUP2
0x6ef MLOAD
0x6f0 DUP2
0x6f1 LT
0x6f2 PUSH2 0x6f7
0x6f5 JUMPI
---
0x6c1: JUMPDEST 
0x6c3: V577 = 0x20
0x6c5: V578 = ADD 0x20 V216
0x6c7: V579 = 0x20
0x6c9: V580 = MUL 0x20 S0
0x6ca: V581 = ADD V580 V578
0x6cb: V582 = M[V581]
0x6cc: V583 = 0x1
0x6ce: V584 = 0xa0
0x6d0: V585 = 0x2
0x6d2: V586 = EXP 0x2 0xa0
0x6d3: V587 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6d4: V588 = AND 0xffffffffffffffffffffffffffffffffffffffff V582
0x6d6: M[0x0] = V588
0x6d7: V589 = 0x20
0x6da: V590 = ADD 0x0 0x20
0x6de: M[0x20] = 0x1
0x6df: V591 = 0x40
0x6e1: V592 = ADD 0x40 0x0
0x6e2: V593 = 0x0
0x6e4: V594 = SHA3 0x0 0x40
0x6e6: V595 = S[V594]
0x6e9: V596 = ADD V223 V595
0x6eb: S[V594] = V596
0x6ef: V597 = M[V216]
0x6f1: V598 = LT S5 V597
0x6f2: V599 = 0x6f7
0x6f5: JUMPI 0x6f7 V598
---
Entry stack: [V12, 0x280, V216, V223, V226, S5, V223, 0x1, 0x0, V216, S0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S8, S5]
Exit stack: [V12, 0x280, V216, V223, V226, S5, V216, S5]

================================

Block 0x6f6
[0x6f6:0x6f6]
---
Predecessors: [0x6c1]
Successors: []
---
0x6f6 INVALID
---
0x6f6: INVALID 
---
Entry stack: [V12, 0x280, V216, V223, V226, S2, V216, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x280, V216, V223, V226, S2, V216, S0]

================================

Block 0x6f7
[0x6f7:0x744]
---
Predecessors: [0x6c1]
Successors: [0x745]
---
0x6f7 JUMPDEST
0x6f8 SWAP1
0x6f9 PUSH1 0x20
0x6fb ADD
0x6fc SWAP1
0x6fd PUSH1 0x20
0x6ff MUL
0x700 ADD
0x701 MLOAD
0x702 PUSH1 0x0
0x704 SLOAD
0x705 PUSH1 0x1
0x707 PUSH1 0xa0
0x709 PUSH1 0x2
0x70b EXP
0x70c SUB
0x70d SWAP2
0x70e DUP3
0x70f AND
0x710 SWAP2
0x711 AND
0x712 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x733 DUP6
0x734 PUSH1 0x40
0x736 MLOAD
0x737 SWAP1
0x738 DUP2
0x739 MSTORE
0x73a PUSH1 0x20
0x73c ADD
0x73d PUSH1 0x40
0x73f MLOAD
0x740 DUP1
0x741 SWAP2
0x742 SUB
0x743 SWAP1
0x744 LOG3
---
0x6f7: JUMPDEST 
0x6f9: V600 = 0x20
0x6fb: V601 = ADD 0x20 V216
0x6fd: V602 = 0x20
0x6ff: V603 = MUL 0x20 S0
0x700: V604 = ADD V603 V601
0x701: V605 = M[V604]
0x702: V606 = 0x0
0x704: V607 = S[0x0]
0x705: V608 = 0x1
0x707: V609 = 0xa0
0x709: V610 = 0x2
0x70b: V611 = EXP 0x2 0xa0
0x70c: V612 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70f: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V605
0x711: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0x712: V615 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x734: V616 = 0x40
0x736: V617 = M[0x40]
0x739: M[V617] = V223
0x73a: V618 = 0x20
0x73c: V619 = ADD 0x20 V617
0x73d: V620 = 0x40
0x73f: V621 = M[0x40]
0x742: V622 = SUB V619 V621
0x744: LOG V621 V622 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V614 V613
---
Entry stack: [V12, 0x280, V216, V223, V226, S2, V216, S0]
Stack pops: 5
Stack additions: [S4, S3, S2]
Exit stack: [V12, 0x280, V216, V223, V226, S2]

================================

Block 0x745
[0x745:0x74c]
---
Predecessors: [0x68e, 0x6f7]
Successors: [0x65f]
---
0x745 JUMPDEST
0x746 PUSH1 0x1
0x748 ADD
0x749 PUSH2 0x65f
0x74c JUMP
---
0x745: JUMPDEST 
0x746: V623 = 0x1
0x748: V624 = ADD 0x1 S0
0x749: V625 = 0x65f
0x74c: JUMP 0x65f
---
Entry stack: [V12, 0x280, V216, V223, V226, S0]
Stack pops: 1
Stack additions: [V624]
Exit stack: [V12, 0x280, V216, V223, V226, V624]

================================

Block 0x74d
[0x74d:0x74d]
---
Predecessors: [0x65f]
Successors: [0x74e]
---
0x74d JUMPDEST
---
0x74d: JUMPDEST 
---
Entry stack: [V12, 0x280, V216, V223, V226, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x280, V216, V223, V226, S0]

================================

Block 0x74e
[0x74e:0x74e]
---
Predecessors: [0x74d]
Successors: [0x74f]
---
0x74e JUMPDEST
---
0x74e: JUMPDEST 
---
Entry stack: [V12, 0x280, V216, V223, V226, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x280, V216, V223, V226, S0]

================================

Block 0x74f
[0x74f:0x754]
---
Predecessors: [0x74e]
Successors: [0x280]
---
0x74f JUMPDEST
0x750 POP
0x751 POP
0x752 POP
0x753 POP
0x754 JUMP
---
0x74f: JUMPDEST 
0x754: JUMP 0x280
---
Entry stack: [V12, 0x280, V216, V223, V226, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x755
[0x755:0x76e]
---
Predecessors: [0x28d]
Successors: [0x76f]
---
0x755 JUMPDEST
0x756 PUSH1 0x1
0x758 PUSH1 0xa0
0x75a PUSH1 0x2
0x75c EXP
0x75d SUB
0x75e DUP2
0x75f AND
0x760 PUSH1 0x0
0x762 SWAP1
0x763 DUP2
0x764 MSTORE
0x765 PUSH1 0x1
0x767 PUSH1 0x20
0x769 MSTORE
0x76a PUSH1 0x40
0x76c SWAP1
0x76d SHA3
0x76e SLOAD
---
0x755: JUMPDEST 
0x756: V626 = 0x1
0x758: V627 = 0xa0
0x75a: V628 = 0x2
0x75c: V629 = EXP 0x2 0xa0
0x75d: V630 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75f: V631 = AND V240 0xffffffffffffffffffffffffffffffffffffffff
0x760: V632 = 0x0
0x764: M[0x0] = V631
0x765: V633 = 0x1
0x767: V634 = 0x20
0x769: M[0x20] = 0x1
0x76a: V635 = 0x40
0x76d: V636 = SHA3 0x0 0x40
0x76e: V637 = S[V636]
---
Entry stack: [V12, 0x182, V240]
Stack pops: 1
Stack additions: [S0, V637]
Exit stack: [V12, 0x182, V240, V637]

================================

Block 0x76f
[0x76f:0x773]
---
Predecessors: [0x755]
Successors: [0x182]
---
0x76f JUMPDEST
0x770 SWAP2
0x771 SWAP1
0x772 POP
0x773 JUMP
---
0x76f: JUMPDEST 
0x773: JUMP 0x182
---
Entry stack: [V12, 0x182, V240, V637]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V637]

================================

Block 0x774
[0x774:0x77b]
---
Predecessors: [0x2be]
Successors: [0xa30]
---
0x774 JUMPDEST
0x775 PUSH2 0x77c
0x778 PUSH2 0xa30
0x77b JUMP
---
0x774: JUMPDEST 
0x775: V638 = 0x77c
0x778: V639 = 0xa30
0x77b: JUMP 0xa30
---
Entry stack: [V12, 0xc1]
Stack pops: 0
Stack additions: [0x77c]
Exit stack: [V12, 0xc1, 0x77c]

================================

Block 0x77c
[0x77c:0x7b2]
---
Predecessors: [0xa30]
Successors: [0x7b3]
---
0x77c JUMPDEST
0x77d PUSH1 0x40
0x77f DUP1
0x780 MLOAD
0x781 SWAP1
0x782 DUP2
0x783 ADD
0x784 PUSH1 0x40
0x786 MSTORE
0x787 PUSH1 0x3
0x789 DUP2
0x78a MSTORE
0x78b PUSH32 0x4655440000000000000000000000000000000000000000000000000000000000
0x7ac PUSH1 0x20
0x7ae DUP3
0x7af ADD
0x7b0 MSTORE
0x7b1 SWAP1
0x7b2 POP
---
0x77c: JUMPDEST 
0x77d: V640 = 0x40
0x780: V641 = M[0x40]
0x783: V642 = ADD V641 0x40
0x784: V643 = 0x40
0x786: M[0x40] = V642
0x787: V644 = 0x3
0x78a: M[V641] = 0x3
0x78b: V645 = 0x4655440000000000000000000000000000000000000000000000000000000000
0x7ac: V646 = 0x20
0x7af: V647 = ADD V641 0x20
0x7b0: M[V647] = 0x4655440000000000000000000000000000000000000000000000000000000000
---
Entry stack: [V12, 0xc1, V873]
Stack pops: 1
Stack additions: [V641]
Exit stack: [V12, 0xc1, V641]

================================

Block 0x7b3
[0x7b3:0x7b5]
---
Predecessors: [0x77c]
Successors: [0xc1]
---
0x7b3 JUMPDEST
0x7b4 SWAP1
0x7b5 JUMP
---
0x7b3: JUMPDEST 
0x7b5: JUMP 0xc1
---
Entry stack: [V12, 0xc1, V641]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V641]

================================

Block 0x7b6
[0x7b6:0x7c6]
---
Predecessors: [0x349]
Successors: [0x7c7, 0x7c8]
---
0x7b6 JUMPDEST
0x7b7 PUSH1 0x0
0x7b9 DUP1
0x7ba DUP1
0x7bb DUP1
0x7bc PUSH1 0x40
0x7be PUSH1 0x44
0x7c0 CALLDATASIZE
0x7c1 LT
0x7c2 ISZERO
0x7c3 PUSH2 0x7c8
0x7c6 JUMPI
---
0x7b6: JUMPDEST 
0x7b7: V648 = 0x0
0x7bc: V649 = 0x40
0x7be: V650 = 0x44
0x7c0: V651 = CALLDATASIZE
0x7c1: V652 = LT V651 0x44
0x7c2: V653 = ISZERO V652
0x7c3: V654 = 0x7c8
0x7c6: JUMPI 0x7c8 V653
---
Entry stack: [V12, 0x15b, V307, V309]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x40]
Exit stack: [V12, 0x15b, V307, V309, 0x0, 0x0, 0x0, 0x0, 0x40]

================================

Block 0x7c7
[0x7c7:0x7c7]
---
Predecessors: [0x7b6]
Successors: []
---
0x7c7 INVALID
---
0x7c7: INVALID 
---
Entry stack: [V12, 0x15b, V307, V309, 0x0, 0x0, 0x0, 0x0, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15b, V307, V309, 0x0, 0x0, 0x0, 0x0, 0x40]

================================

Block 0x7c8
[0x7c8:0x7cf]
---
Predecessors: [0x7b6]
Successors: [0x7d0, 0x7d8]
---
0x7c8 JUMPDEST
0x7c9 DUP6
0x7ca ISZERO
0x7cb ISZERO
0x7cc PUSH2 0x7d8
0x7cf JUMPI
---
0x7c8: JUMPDEST 
0x7ca: V655 = ISZERO V309
0x7cb: V656 = ISZERO V655
0x7cc: V657 = 0x7d8
0x7cf: JUMPI 0x7d8 V656
---
Entry stack: [V12, 0x15b, V307, V309, 0x0, 0x0, 0x0, 0x0, 0x40]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x15b, V307, V309, 0x0, 0x0, 0x0, 0x0, 0x40]

================================

Block 0x7d0
[0x7d0:0x7d7]
---
Predecessors: [0x7c8]
Successors: [0x890]
---
0x7d0 PUSH1 0x0
0x7d2 SWAP5
0x7d3 POP
0x7d4 PUSH2 0x890
0x7d7 JUMP
---
0x7d0: V658 = 0x0
0x7d4: V659 = 0x890
0x7d7: JUMP 0x890
---
Entry stack: [V12, 0x15b, V307, V309, 0x0, 0x0, 0x0, 0x0, 0x40]
Stack pops: 5
Stack additions: [0x0, S3, S2, S1, S0]
Exit stack: [V12, 0x15b, V307, V309, 0x0, 0x0, 0x0, 0x0, 0x40]

================================

Block 0x7d8
[0x7d8:0x814]
---
Predecessors: [0x7c8]
Successors: [0x815, 0x818]
---
0x7d8 JUMPDEST
0x7d9 PUSH1 0x1
0x7db PUSH1 0xa0
0x7dd PUSH1 0x2
0x7df EXP
0x7e0 SUB
0x7e1 CALLER
0x7e2 DUP2
0x7e3 AND
0x7e4 PUSH1 0x0
0x7e6 SWAP1
0x7e7 DUP2
0x7e8 MSTORE
0x7e9 PUSH1 0x1
0x7eb PUSH1 0x20
0x7ed MSTORE
0x7ee PUSH1 0x40
0x7f0 DUP1
0x7f1 DUP3
0x7f2 SHA3
0x7f3 SLOAD
0x7f4 SWAP3
0x7f5 DUP11
0x7f6 AND
0x7f7 DUP3
0x7f8 MSTORE
0x7f9 SWAP1
0x7fa SHA3
0x7fb SLOAD
0x7fc SWAP1
0x7fd SWAP5
0x7fe POP
0x7ff DUP7
0x800 DUP6
0x801 LT
0x802 DUP1
0x803 ISZERO
0x804 SWAP5
0x805 POP
0x806 DUP2
0x807 DUP9
0x808 ADD
0x809 SWAP2
0x80a SWAP1
0x80b SWAP2
0x80c LT
0x80d SWAP3
0x80e POP
0x80f DUP4
0x810 SWAP1
0x811 PUSH2 0x818
0x814 JUMPI
---
0x7d8: JUMPDEST 
0x7d9: V660 = 0x1
0x7db: V661 = 0xa0
0x7dd: V662 = 0x2
0x7df: V663 = EXP 0x2 0xa0
0x7e0: V664 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e1: V665 = CALLER
0x7e3: V666 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0x7e4: V667 = 0x0
0x7e8: M[0x0] = V666
0x7e9: V668 = 0x1
0x7eb: V669 = 0x20
0x7ed: M[0x20] = 0x1
0x7ee: V670 = 0x40
0x7f2: V671 = SHA3 0x0 0x40
0x7f3: V672 = S[V671]
0x7f6: V673 = AND V307 0xffffffffffffffffffffffffffffffffffffffff
0x7f8: M[0x0] = V673
0x7fa: V674 = SHA3 0x0 0x40
0x7fb: V675 = S[V674]
0x801: V676 = LT V672 V309
0x803: V677 = ISZERO V676
0x808: V678 = ADD V309 V675
0x80c: V679 = LT V678 V675
0x811: V680 = 0x818
0x814: JUMPI 0x818 V676
---
Entry stack: [V12, 0x15b, V307, V309, 0x0, 0x0, 0x0, 0x0, 0x40]
Stack pops: 7
Stack additions: [S6, S5, S4, V672, V677, V679, S0, V677]
Exit stack: [V12, 0x15b, V307, V309, 0x0, V672, V677, V679, 0x40, V677]

================================

Block 0x815
[0x815:0x817]
---
Predecessors: [0x7d8]
Successors: [0x818]
---
0x815 POP
0x816 DUP2
0x817 ISZERO
---
0x817: V681 = ISZERO V679
---
Entry stack: [V12, 0x15b, V307, V309, 0x0, V672, V677, V679, 0x40, V677]
Stack pops: 3
Stack additions: [S2, S1, V681]
Exit stack: [V12, 0x15b, V307, V309, 0x0, V672, V677, V679, 0x40, V681]

================================

Block 0x818
[0x818:0x81d]
---
Predecessors: [0x7d8, 0x815]
Successors: [0x81e, 0x88b]
---
0x818 JUMPDEST
0x819 ISZERO
0x81a PUSH2 0x88b
0x81d JUMPI
---
0x818: JUMPDEST 
0x819: V682 = ISZERO S0
0x81a: V683 = 0x88b
0x81d: JUMPI 0x88b V682
---
Entry stack: [V12, 0x15b, V307, V309, 0x0, V672, V677, V679, 0x40, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15b, V307, V309, 0x0, V672, V677, V679, 0x40]

================================

Block 0x81e
[0x81e:0x88a]
---
Predecessors: [0x818]
Successors: [0x890]
---
0x81e PUSH1 0x1
0x820 PUSH1 0xa0
0x822 PUSH1 0x2
0x824 EXP
0x825 SUB
0x826 CALLER
0x827 DUP2
0x828 AND
0x829 PUSH1 0x0
0x82b DUP2
0x82c DUP2
0x82d MSTORE
0x82e PUSH1 0x1
0x830 PUSH1 0x20
0x832 MSTORE
0x833 PUSH1 0x40
0x835 DUP1
0x836 DUP3
0x837 SHA3
0x838 DUP1
0x839 SLOAD
0x83a DUP12
0x83b SWAP1
0x83c SUB
0x83d SWAP1
0x83e SSTORE
0x83f SWAP3
0x840 DUP11
0x841 AND
0x842 DUP1
0x843 DUP3
0x844 MSTORE
0x845 SWAP1
0x846 DUP4
0x847 SWAP1
0x848 SHA3
0x849 DUP1
0x84a SLOAD
0x84b DUP11
0x84c ADD
0x84d SWAP1
0x84e SSTORE
0x84f SWAP2
0x850 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x871 SWAP1
0x872 DUP10
0x873 SWAP1
0x874 MLOAD
0x875 SWAP1
0x876 DUP2
0x877 MSTORE
0x878 PUSH1 0x20
0x87a ADD
0x87b PUSH1 0x40
0x87d MLOAD
0x87e DUP1
0x87f SWAP2
0x880 SUB
0x881 SWAP1
0x882 LOG3
0x883 PUSH1 0x1
0x885 SWAP5
0x886 POP
0x887 PUSH2 0x890
0x88a JUMP
---
0x81e: V684 = 0x1
0x820: V685 = 0xa0
0x822: V686 = 0x2
0x824: V687 = EXP 0x2 0xa0
0x825: V688 = SUB 0x10000000000000000000000000000000000000000 0x1
0x826: V689 = CALLER
0x828: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff V689
0x829: V691 = 0x0
0x82d: M[0x0] = V690
0x82e: V692 = 0x1
0x830: V693 = 0x20
0x832: M[0x20] = 0x1
0x833: V694 = 0x40
0x837: V695 = SHA3 0x0 0x40
0x839: V696 = S[V695]
0x83c: V697 = SUB V696 V309
0x83e: S[V695] = V697
0x841: V698 = AND V307 0xffffffffffffffffffffffffffffffffffffffff
0x844: M[0x0] = V698
0x848: V699 = SHA3 0x0 0x40
0x84a: V700 = S[V699]
0x84c: V701 = ADD V309 V700
0x84e: S[V699] = V701
0x850: V702 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x874: V703 = M[0x40]
0x877: M[V703] = V309
0x878: V704 = 0x20
0x87a: V705 = ADD 0x20 V703
0x87b: V706 = 0x40
0x87d: V707 = M[0x40]
0x880: V708 = SUB V705 V707
0x882: LOG V707 V708 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V690 V698
0x883: V709 = 0x1
0x887: V710 = 0x890
0x88a: JUMP 0x890
---
Entry stack: [V12, 0x15b, V307, V309, 0x0, V672, V677, V679, 0x40]
Stack pops: 7
Stack additions: [S6, S5, 0x1, S3, S2, S1, S0]
Exit stack: [V12, 0x15b, V307, V309, 0x1, V672, V677, V679, 0x40]

================================

Block 0x88b
[0x88b:0x88f]
---
Predecessors: [0x818]
Successors: [0x890]
---
0x88b JUMPDEST
0x88c PUSH1 0x0
0x88e SWAP5
0x88f POP
---
0x88b: JUMPDEST 
0x88c: V711 = 0x0
---
Entry stack: [V12, 0x15b, V307, V309, 0x0, V672, V677, V679, 0x40]
Stack pops: 5
Stack additions: [0x0, S3, S2, S1, S0]
Exit stack: [V12, 0x15b, V307, V309, 0x0, V672, V677, V679, 0x40]

================================

Block 0x890
[0x890:0x890]
---
Predecessors: [0x7d0, 0x81e, 0x88b]
Successors: [0x891]
---
0x890 JUMPDEST
---
0x890: JUMPDEST 
---
Entry stack: [V12, 0x15b, V307, V309, {0x0, 0x1}, S3, S2, S1, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15b, V307, V309, {0x0, 0x1}, S3, S2, S1, 0x40]

================================

Block 0x891
[0x891:0x891]
---
Predecessors: [0x890]
Successors: [0x892]
---
0x891 JUMPDEST
---
0x891: JUMPDEST 
---
Entry stack: [V12, 0x15b, V307, V309, {0x0, 0x1}, S3, S2, S1, 0x40]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15b, V307, V309, {0x0, 0x1}, S3, S2, S1, 0x40]

================================

Block 0x892
[0x892:0x89b]
---
Predecessors: [0x891]
Successors: [0x15b]
---
0x892 JUMPDEST
0x893 POP
0x894 POP
0x895 POP
0x896 POP
0x897 SWAP3
0x898 SWAP2
0x899 POP
0x89a POP
0x89b JUMP
---
0x892: JUMPDEST 
0x89b: JUMP 0x15b
---
Entry stack: [V12, 0x15b, V307, V309, {0x0, 0x1}, S3, S2, S1, 0x40]
Stack pops: 8
Stack additions: [S4]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x89c
[0x89c:0x8c2]
---
Predecessors: [0x37f]
Successors: [0x8c3]
---
0x89c JUMPDEST
0x89d PUSH1 0x1
0x89f PUSH1 0xa0
0x8a1 PUSH1 0x2
0x8a3 EXP
0x8a4 SUB
0x8a5 DUP1
0x8a6 DUP4
0x8a7 AND
0x8a8 PUSH1 0x0
0x8aa SWAP1
0x8ab DUP2
0x8ac MSTORE
0x8ad PUSH1 0x2
0x8af PUSH1 0x20
0x8b1 SWAP1
0x8b2 DUP2
0x8b3 MSTORE
0x8b4 PUSH1 0x40
0x8b6 DUP1
0x8b7 DUP4
0x8b8 SHA3
0x8b9 SWAP4
0x8ba DUP6
0x8bb AND
0x8bc DUP4
0x8bd MSTORE
0x8be SWAP3
0x8bf SWAP1
0x8c0 MSTORE
0x8c1 SHA3
0x8c2 SLOAD
---
0x89c: JUMPDEST 
0x89d: V712 = 0x1
0x89f: V713 = 0xa0
0x8a1: V714 = 0x2
0x8a3: V715 = EXP 0x2 0xa0
0x8a4: V716 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a7: V717 = AND V332 0xffffffffffffffffffffffffffffffffffffffff
0x8a8: V718 = 0x0
0x8ac: M[0x0] = V717
0x8ad: V719 = 0x2
0x8af: V720 = 0x20
0x8b3: M[0x20] = 0x2
0x8b4: V721 = 0x40
0x8b8: V722 = SHA3 0x0 0x40
0x8bb: V723 = AND V335 0xffffffffffffffffffffffffffffffffffffffff
0x8bd: M[0x0] = V723
0x8c0: M[0x20] = V722
0x8c1: V724 = SHA3 0x0 0x40
0x8c2: V725 = S[V724]
---
Entry stack: [V12, 0x182, V332, V335]
Stack pops: 2
Stack additions: [S1, S0, V725]
Exit stack: [V12, 0x182, V332, V335, V725]

================================

Block 0x8c3
[0x8c3:0x8c8]
---
Predecessors: [0x89c]
Successors: [0x182]
---
0x8c3 JUMPDEST
0x8c4 SWAP3
0x8c5 SWAP2
0x8c6 POP
0x8c7 POP
0x8c8 JUMP
---
0x8c3: JUMPDEST 
0x8c8: JUMP 0x182
---
Entry stack: [V12, 0x182, V332, V335, V725]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, V725]

================================

Block 0x8c9
[0x8c9:0x8e4]
---
Predecessors: [0x3b6]
Successors: [0x8e5, 0x8e9]
---
0x8c9 JUMPDEST
0x8ca PUSH1 0x0
0x8cc DUP1
0x8cd SLOAD
0x8ce DUP2
0x8cf SWAP1
0x8d0 DUP2
0x8d1 SWAP1
0x8d2 CALLER
0x8d3 PUSH1 0x1
0x8d5 PUSH1 0xa0
0x8d7 PUSH1 0x2
0x8d9 EXP
0x8da SUB
0x8db SWAP1
0x8dc DUP2
0x8dd AND
0x8de SWAP2
0x8df AND
0x8e0 EQ
0x8e1 PUSH2 0x8e9
0x8e4 JUMPI
---
0x8c9: JUMPDEST 
0x8ca: V726 = 0x0
0x8cd: V727 = S[0x0]
0x8d2: V728 = CALLER
0x8d3: V729 = 0x1
0x8d5: V730 = 0xa0
0x8d7: V731 = 0x2
0x8d9: V732 = EXP 0x2 0xa0
0x8da: V733 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8dd: V734 = AND 0xffffffffffffffffffffffffffffffffffffffff V728
0x8df: V735 = AND V727 0xffffffffffffffffffffffffffffffffffffffff
0x8e0: V736 = EQ V735 V734
0x8e1: V737 = 0x8e9
0x8e4: JUMPI 0x8e9 V736
---
Entry stack: [V12, 0x15b, V356]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x15b, V356, 0x0, 0x0, 0x0]

================================

Block 0x8e5
[0x8e5:0x8e8]
---
Predecessors: [0x8c9]
Successors: []
---
0x8e5 PUSH1 0x0
0x8e7 DUP1
0x8e8 REVERT
---
0x8e5: V738 = 0x0
0x8e8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15b, V356, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15b, V356, 0x0, 0x0, 0x0]

================================

Block 0x8e9
[0x8e9:0x93e]
---
Predecessors: [0x8c9]
Successors: [0x93f, 0x943]
---
0x8e9 JUMPDEST
0x8ea DUP4
0x8eb SWAP2
0x8ec POP
0x8ed DUP2
0x8ee PUSH1 0x1
0x8f0 PUSH1 0xa0
0x8f2 PUSH1 0x2
0x8f4 EXP
0x8f5 SUB
0x8f6 AND
0x8f7 PUSH4 0x70a08231
0x8fc ADDRESS
0x8fd PUSH1 0x0
0x8ff PUSH1 0x40
0x901 MLOAD
0x902 PUSH1 0x20
0x904 ADD
0x905 MSTORE
0x906 PUSH1 0x40
0x908 MLOAD
0x909 PUSH1 0xe0
0x90b PUSH1 0x2
0x90d EXP
0x90e PUSH4 0xffffffff
0x913 DUP5
0x914 AND
0x915 MUL
0x916 DUP2
0x917 MSTORE
0x918 PUSH1 0x1
0x91a PUSH1 0xa0
0x91c PUSH1 0x2
0x91e EXP
0x91f SUB
0x920 SWAP1
0x921 SWAP2
0x922 AND
0x923 PUSH1 0x4
0x925 DUP3
0x926 ADD
0x927 MSTORE
0x928 PUSH1 0x24
0x92a ADD
0x92b PUSH1 0x20
0x92d PUSH1 0x40
0x92f MLOAD
0x930 DUP1
0x931 DUP4
0x932 SUB
0x933 DUP2
0x934 PUSH1 0x0
0x936 DUP8
0x937 DUP1
0x938 EXTCODESIZE
0x939 ISZERO
0x93a ISZERO
0x93b PUSH2 0x943
0x93e JUMPI
---
0x8e9: JUMPDEST 
0x8ee: V739 = 0x1
0x8f0: V740 = 0xa0
0x8f2: V741 = 0x2
0x8f4: V742 = EXP 0x2 0xa0
0x8f5: V743 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8f6: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff V356
0x8f7: V745 = 0x70a08231
0x8fc: V746 = ADDRESS
0x8fd: V747 = 0x0
0x8ff: V748 = 0x40
0x901: V749 = M[0x40]
0x902: V750 = 0x20
0x904: V751 = ADD 0x20 V749
0x905: M[V751] = 0x0
0x906: V752 = 0x40
0x908: V753 = M[0x40]
0x909: V754 = 0xe0
0x90b: V755 = 0x2
0x90d: V756 = EXP 0x2 0xe0
0x90e: V757 = 0xffffffff
0x914: V758 = AND 0x70a08231 0xffffffff
0x915: V759 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x917: M[V753] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x918: V760 = 0x1
0x91a: V761 = 0xa0
0x91c: V762 = 0x2
0x91e: V763 = EXP 0x2 0xa0
0x91f: V764 = SUB 0x10000000000000000000000000000000000000000 0x1
0x922: V765 = AND V746 0xffffffffffffffffffffffffffffffffffffffff
0x923: V766 = 0x4
0x926: V767 = ADD V753 0x4
0x927: M[V767] = V765
0x928: V768 = 0x24
0x92a: V769 = ADD 0x24 V753
0x92b: V770 = 0x20
0x92d: V771 = 0x40
0x92f: V772 = M[0x40]
0x932: V773 = SUB V769 V772
0x934: V774 = 0x0
0x938: V775 = EXTCODESIZE V744
0x939: V776 = ISZERO V775
0x93a: V777 = ISZERO V776
0x93b: V778 = 0x943
0x93e: JUMPI 0x943 V777
---
Entry stack: [V12, 0x15b, V356, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V744, 0x70a08231, V769, 0x20, V772, V773, V772, 0x0, V744]
Exit stack: [V12, 0x15b, V356, 0x0, V356, 0x0, V744, 0x70a08231, V769, 0x20, V772, V773, V772, 0x0, V744]

================================

Block 0x93f
[0x93f:0x942]
---
Predecessors: [0x8e9]
Successors: []
---
0x93f PUSH1 0x0
0x941 DUP1
0x942 REVERT
---
0x93f: V779 = 0x0
0x942: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15b, V356, 0x0, V356, 0x0, V744, 0x70a08231, V769, 0x20, V772, V773, V772, 0x0, V744]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15b, V356, 0x0, V356, 0x0, V744, 0x70a08231, V769, 0x20, V772, V773, V772, 0x0, V744]

================================

Block 0x943
[0x943:0x94f]
---
Predecessors: [0x8e9]
Successors: [0x950, 0x954]
---
0x943 JUMPDEST
0x944 PUSH2 0x2c6
0x947 GAS
0x948 SUB
0x949 CALL
0x94a ISZERO
0x94b ISZERO
0x94c PUSH2 0x954
0x94f JUMPI
---
0x943: JUMPDEST 
0x944: V780 = 0x2c6
0x947: V781 = GAS
0x948: V782 = SUB V781 0x2c6
0x949: V783 = CALL V782 V744 0x0 V772 V773 V772 0x20
0x94a: V784 = ISZERO V783
0x94b: V785 = ISZERO V784
0x94c: V786 = 0x954
0x94f: JUMPI 0x954 V785
---
Entry stack: [V12, 0x15b, V356, 0x0, V356, 0x0, V744, 0x70a08231, V769, 0x20, V772, V773, V772, 0x0, V744]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15b, V356, 0x0, V356, 0x0, V744, 0x70a08231, V769]

================================

Block 0x950
[0x950:0x953]
---
Predecessors: [0x943]
Successors: []
---
0x950 PUSH1 0x0
0x952 DUP1
0x953 REVERT
---
0x950: V787 = 0x0
0x953: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15b, V356, 0x0, V356, 0x0, V744, 0x70a08231, V769]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15b, V356, 0x0, V356, 0x0, V744, 0x70a08231, V769]

================================

Block 0x954
[0x954:0x9bf]
---
Predecessors: [0x943]
Successors: [0x9c0, 0x9c4]
---
0x954 JUMPDEST
0x955 POP
0x956 POP
0x957 POP
0x958 PUSH1 0x40
0x95a MLOAD
0x95b DUP1
0x95c MLOAD
0x95d PUSH1 0x0
0x95f DUP1
0x960 SLOAD
0x961 SWAP2
0x962 SWAP4
0x963 POP
0x964 PUSH1 0x1
0x966 PUSH1 0xa0
0x968 PUSH1 0x2
0x96a EXP
0x96b SUB
0x96c DUP1
0x96d DUP7
0x96e AND
0x96f SWAP4
0x970 POP
0x971 PUSH4 0xa9059cbb
0x976 SWAP3
0x977 AND
0x978 SWAP1
0x979 DUP5
0x97a SWAP1
0x97b PUSH1 0x40
0x97d MLOAD
0x97e PUSH1 0x20
0x980 ADD
0x981 MSTORE
0x982 PUSH1 0x40
0x984 MLOAD
0x985 PUSH1 0xe0
0x987 PUSH1 0x2
0x989 EXP
0x98a PUSH4 0xffffffff
0x98f DUP6
0x990 AND
0x991 MUL
0x992 DUP2
0x993 MSTORE
0x994 PUSH1 0x1
0x996 PUSH1 0xa0
0x998 PUSH1 0x2
0x99a EXP
0x99b SUB
0x99c SWAP1
0x99d SWAP3
0x99e AND
0x99f PUSH1 0x4
0x9a1 DUP4
0x9a2 ADD
0x9a3 MSTORE
0x9a4 PUSH1 0x24
0x9a6 DUP3
0x9a7 ADD
0x9a8 MSTORE
0x9a9 PUSH1 0x44
0x9ab ADD
0x9ac PUSH1 0x20
0x9ae PUSH1 0x40
0x9b0 MLOAD
0x9b1 DUP1
0x9b2 DUP4
0x9b3 SUB
0x9b4 DUP2
0x9b5 PUSH1 0x0
0x9b7 DUP8
0x9b8 DUP1
0x9b9 EXTCODESIZE
0x9ba ISZERO
0x9bb ISZERO
0x9bc PUSH2 0x9c4
0x9bf JUMPI
---
0x954: JUMPDEST 
0x958: V788 = 0x40
0x95a: V789 = M[0x40]
0x95c: V790 = M[V789]
0x95d: V791 = 0x0
0x960: V792 = S[0x0]
0x964: V793 = 0x1
0x966: V794 = 0xa0
0x968: V795 = 0x2
0x96a: V796 = EXP 0x2 0xa0
0x96b: V797 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96e: V798 = AND V356 0xffffffffffffffffffffffffffffffffffffffff
0x971: V799 = 0xa9059cbb
0x977: V800 = AND V792 0xffffffffffffffffffffffffffffffffffffffff
0x97b: V801 = 0x40
0x97d: V802 = M[0x40]
0x97e: V803 = 0x20
0x980: V804 = ADD 0x20 V802
0x981: M[V804] = 0x0
0x982: V805 = 0x40
0x984: V806 = M[0x40]
0x985: V807 = 0xe0
0x987: V808 = 0x2
0x989: V809 = EXP 0x2 0xe0
0x98a: V810 = 0xffffffff
0x990: V811 = AND 0xa9059cbb 0xffffffff
0x991: V812 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x993: M[V806] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x994: V813 = 0x1
0x996: V814 = 0xa0
0x998: V815 = 0x2
0x99a: V816 = EXP 0x2 0xa0
0x99b: V817 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99e: V818 = AND V800 0xffffffffffffffffffffffffffffffffffffffff
0x99f: V819 = 0x4
0x9a2: V820 = ADD V806 0x4
0x9a3: M[V820] = V818
0x9a4: V821 = 0x24
0x9a7: V822 = ADD V806 0x24
0x9a8: M[V822] = V790
0x9a9: V823 = 0x44
0x9ab: V824 = ADD 0x44 V806
0x9ac: V825 = 0x20
0x9ae: V826 = 0x40
0x9b0: V827 = M[0x40]
0x9b3: V828 = SUB V824 V827
0x9b5: V829 = 0x0
0x9b9: V830 = EXTCODESIZE V798
0x9ba: V831 = ISZERO V830
0x9bb: V832 = ISZERO V831
0x9bc: V833 = 0x9c4
0x9bf: JUMPI 0x9c4 V832
---
Entry stack: [V12, 0x15b, V356, 0x0, V356, 0x0, V744, 0x70a08231, V769]
Stack pops: 5
Stack additions: [S4, V790, V798, 0xa9059cbb, V824, 0x20, V827, V828, V827, 0x0, V798]
Exit stack: [V12, 0x15b, V356, 0x0, V356, V790, V798, 0xa9059cbb, V824, 0x20, V827, V828, V827, 0x0, V798]

================================

Block 0x9c0
[0x9c0:0x9c3]
---
Predecessors: [0x954]
Successors: []
---
0x9c0 PUSH1 0x0
0x9c2 DUP1
0x9c3 REVERT
---
0x9c0: V834 = 0x0
0x9c3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15b, V356, 0x0, V356, V790, V798, 0xa9059cbb, V824, 0x20, V827, V828, V827, 0x0, V798]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15b, V356, 0x0, V356, V790, V798, 0xa9059cbb, V824, 0x20, V827, V828, V827, 0x0, V798]

================================

Block 0x9c4
[0x9c4:0x9d0]
---
Predecessors: [0x954]
Successors: [0x9d1, 0x9d5]
---
0x9c4 JUMPDEST
0x9c5 PUSH2 0x2c6
0x9c8 GAS
0x9c9 SUB
0x9ca CALL
0x9cb ISZERO
0x9cc ISZERO
0x9cd PUSH2 0x9d5
0x9d0 JUMPI
---
0x9c4: JUMPDEST 
0x9c5: V835 = 0x2c6
0x9c8: V836 = GAS
0x9c9: V837 = SUB V836 0x2c6
0x9ca: V838 = CALL V837 V798 0x0 V827 V828 V827 0x20
0x9cb: V839 = ISZERO V838
0x9cc: V840 = ISZERO V839
0x9cd: V841 = 0x9d5
0x9d0: JUMPI 0x9d5 V840
---
Entry stack: [V12, 0x15b, V356, 0x0, V356, V790, V798, 0xa9059cbb, V824, 0x20, V827, V828, V827, 0x0, V798]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15b, V356, 0x0, V356, V790, V798, 0xa9059cbb, V824]

================================

Block 0x9d1
[0x9d1:0x9d4]
---
Predecessors: [0x9c4]
Successors: []
---
0x9d1 PUSH1 0x0
0x9d3 DUP1
0x9d4 REVERT
---
0x9d1: V842 = 0x0
0x9d4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x15b, V356, 0x0, V356, V790, V798, 0xa9059cbb, V824]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15b, V356, 0x0, V356, V790, V798, 0xa9059cbb, V824]

================================

Block 0x9d5
[0x9d5:0x9e0]
---
Predecessors: [0x9c4]
Successors: [0x9e1]
---
0x9d5 JUMPDEST
0x9d6 POP
0x9d7 POP
0x9d8 POP
0x9d9 PUSH1 0x40
0x9db MLOAD
0x9dc DUP1
0x9dd MLOAD
0x9de SWAP4
0x9df POP
0x9e0 POP
---
0x9d5: JUMPDEST 
0x9d9: V843 = 0x40
0x9db: V844 = M[0x40]
0x9dd: V845 = M[V844]
---
Entry stack: [V12, 0x15b, V356, 0x0, V356, V790, V798, 0xa9059cbb, V824]
Stack pops: 6
Stack additions: [V845, S4, S3]
Exit stack: [V12, 0x15b, V356, V845, V356, V790]

================================

Block 0x9e1
[0x9e1:0x9e7]
---
Predecessors: [0x9d5]
Successors: [0x15b]
---
0x9e1 JUMPDEST
0x9e2 POP
0x9e3 POP
0x9e4 SWAP2
0x9e5 SWAP1
0x9e6 POP
0x9e7 JUMP
---
0x9e1: JUMPDEST 
0x9e7: JUMP 0x15b
---
Entry stack: [V12, 0x15b, V356, V845, V356, V790]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V12, V845]

================================

Block 0x9e8
[0x9e8:0x9fe]
---
Predecessors: [0x3e9]
Successors: [0x9ff, 0xa03]
---
0x9e8 JUMPDEST
0x9e9 PUSH1 0x0
0x9eb SLOAD
0x9ec CALLER
0x9ed PUSH1 0x1
0x9ef PUSH1 0xa0
0x9f1 PUSH1 0x2
0x9f3 EXP
0x9f4 SUB
0x9f5 SWAP1
0x9f6 DUP2
0x9f7 AND
0x9f8 SWAP2
0x9f9 AND
0x9fa EQ
0x9fb PUSH2 0xa03
0x9fe JUMPI
---
0x9e8: JUMPDEST 
0x9e9: V846 = 0x0
0x9eb: V847 = S[0x0]
0x9ec: V848 = CALLER
0x9ed: V849 = 0x1
0x9ef: V850 = 0xa0
0x9f1: V851 = 0x2
0x9f3: V852 = EXP 0x2 0xa0
0x9f4: V853 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f7: V854 = AND 0xffffffffffffffffffffffffffffffffffffffff V848
0x9f9: V855 = AND V847 0xffffffffffffffffffffffffffffffffffffffff
0x9fa: V856 = EQ V855 V854
0x9fb: V857 = 0xa03
0x9fe: JUMPI 0xa03 V856
---
Entry stack: [V12, 0x280, V379]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x280, V379]

================================

Block 0x9ff
[0x9ff:0xa02]
---
Predecessors: [0x9e8]
Successors: []
---
0x9ff PUSH1 0x0
0xa01 DUP1
0xa02 REVERT
---
0x9ff: V858 = 0x0
0xa02: REVERT 0x0 0x0
---
Entry stack: [V12, 0x280, V379]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x280, V379]

================================

Block 0xa03
[0xa03:0xa2b]
---
Predecessors: [0x9e8]
Successors: [0xa2c]
---
0xa03 JUMPDEST
0xa04 PUSH1 0x0
0xa06 DUP1
0xa07 SLOAD
0xa08 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1d NOT
0xa1e AND
0xa1f PUSH1 0x1
0xa21 PUSH1 0xa0
0xa23 PUSH1 0x2
0xa25 EXP
0xa26 SUB
0xa27 DUP4
0xa28 AND
0xa29 OR
0xa2a SWAP1
0xa2b SSTORE
---
0xa03: JUMPDEST 
0xa04: V859 = 0x0
0xa07: V860 = S[0x0]
0xa08: V861 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1d: V862 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa1e: V863 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V860
0xa1f: V864 = 0x1
0xa21: V865 = 0xa0
0xa23: V866 = 0x2
0xa25: V867 = EXP 0x2 0xa0
0xa26: V868 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa28: V869 = AND V379 0xffffffffffffffffffffffffffffffffffffffff
0xa29: V870 = OR V869 V863
0xa2b: S[0x0] = V870
---
Entry stack: [V12, 0x280, V379]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x280, V379]

================================

Block 0xa2c
[0xa2c:0xa2c]
---
Predecessors: [0xa03]
Successors: [0xa2d]
---
0xa2c JUMPDEST
---
0xa2c: JUMPDEST 
---
Entry stack: [V12, 0x280, V379]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x280, V379]

================================

Block 0xa2d
[0xa2d:0xa2f]
---
Predecessors: [0xa2c]
Successors: [0x280]
---
0xa2d JUMPDEST
0xa2e POP
0xa2f JUMP
---
0xa2d: JUMPDEST 
0xa2f: JUMP 0x280
---
Entry stack: [V12, 0x280, V379]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0xa30
[0xa30:0xa41]
---
Predecessors: [0x3ff, 0x774]
Successors: [0x407, 0x77c]
---
0xa30 JUMPDEST
0xa31 PUSH1 0x20
0xa33 PUSH1 0x40
0xa35 MLOAD
0xa36 SWAP1
0xa37 DUP2
0xa38 ADD
0xa39 PUSH1 0x40
0xa3b MSTORE
0xa3c PUSH1 0x0
0xa3e DUP2
0xa3f MSTORE
0xa40 SWAP1
0xa41 JUMP
---
0xa30: JUMPDEST 
0xa31: V871 = 0x20
0xa33: V872 = 0x40
0xa35: V873 = M[0x40]
0xa38: V874 = ADD V873 0x20
0xa39: V875 = 0x40
0xa3b: M[0x40] = V874
0xa3c: V876 = 0x0
0xa3f: M[V873] = 0x0
0xa41: JUMP {0x407, 0x77c}
---
Entry stack: [V12, 0xc1, {0x407, 0x77c}]
Stack pops: 1
Stack additions: [V873]
Exit stack: [V12, 0xc1, V873]

================================

Block 0xa42
[0xa42:0xa78]
---
Predecessors: []
Successors: []
---
0xa42 STOP
0xa43 LOG1
0xa44 PUSH6 0x627a7a723058
0xa4b SHA3
0xa4c SWAP1
0xa4d PUSH9 0x5583a7ba0fe8d10820
0xa57 LOG4
0xa58 MISSING 0xa6
0xa59 AND
0xa5a MISSING 0xd9
0xa5b MISSING 0xe0
0xa5c MISSING 0xba
0xa5d PUSH27 0xc2327f5d089fa62d9f4d10fd5f670029
---
0xa42: STOP 
0xa43: LOG S0 S1 S2
0xa44: V877 = 0x627a7a723058
0xa4b: V878 = SHA3 0x627a7a723058 S3
0xa4d: V879 = 0x5583a7ba0fe8d10820
0xa57: LOG 0x5583a7ba0fe8d10820 S4 V878 S5 S6 S7
0xa58: MISSING 0xa6
0xa59: V880 = AND S0 S1
0xa5a: MISSING 0xd9
0xa5b: MISSING 0xe0
0xa5c: MISSING 0xba
0xa5d: V881 = 0xc2327f5d089fa62d9f4d10fd5f670029
---
Entry stack: []
Stack pops: 0
Stack additions: [V880, 0xc2327f5d089fa62d9f4d10fd5f670029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xae
Exit block: 0x12b
Body: 0xae, 0xb5, 0xb9, 0xc1, 0xe5, 0xee, 0xf6, 0xfe, 0x112, 0x12b, 0x3ff, 0x407, 0x43e

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x139
Exit block: 0x15b
Body: 0x139, 0x140, 0x144, 0x15b, 0x441, 0x44d, 0x476, 0x47c, 0x483, 0x4e7

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x16f
Exit block: 0x182
Body: 0x16f, 0x176, 0x17a, 0x182, 0x4ed

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x194
Exit block: 0x15b
Body: 0x15b, 0x194, 0x19b, 0x19f, 0x4f3, 0x506, 0x507, 0x50f, 0x517, 0x576, 0x578, 0x57f, 0x582, 0x588, 0x614, 0x619, 0x61a, 0x61b

Function 4:
Public function signature: 0x313ce567
Entry block: 0x1d0
Exit block: 0x1e3
Body: 0x1d0, 0x1d7, 0x1db, 0x1e3, 0x628, 0x62b

Function 5:
Public function signature: 0x4d2301cc
Entry block: 0x1f9
Exit block: 0x280
Body: 0x182, 0x1f9, 0x200, 0x204, 0x280, 0x62e, 0x63a, 0x65f, 0x669, 0x677, 0x678, 0x687, 0x68e, 0x692, 0x6c0, 0x6c1, 0x6f6, 0x6f7, 0x745, 0x74d, 0x74e, 0x74f

Function 6:
Public function signature: 0x6379ed9d
Entry block: 0x22a
Exit block: 0x6f6
Body: 0x182, 0x22a, 0x231, 0x235, 0x280, 0x62e, 0x63a, 0x63f, 0x657, 0x65b, 0x65f, 0x669, 0x677, 0x678, 0x687, 0x68e, 0x692, 0x6c0, 0x6c1, 0x6f6, 0x6f7, 0x745, 0x74d, 0x74e, 0x74f

Function 7:
Public function signature: 0x70a08231
Entry block: 0x282
Exit block: 0x182
Body: 0x182, 0x282, 0x289, 0x28d, 0x755, 0x76f

Function 8:
Public function signature: 0x95d89b41
Entry block: 0x2b3
Exit block: 0x12b
Body: 0xc1, 0xe5, 0xee, 0xf6, 0xfe, 0x112, 0x12b, 0x2b3, 0x2ba, 0x2be, 0x774, 0x77c, 0x7b3

Function 9:
Public function signature: 0xa9059cbb
Entry block: 0x33e
Exit block: 0x15b
Body: 0x15b, 0x33e, 0x345, 0x349, 0x7b6, 0x7c7, 0x7c8, 0x7d0, 0x7d8, 0x815, 0x818, 0x81e, 0x88b, 0x890, 0x891, 0x892

Function 10:
Public function signature: 0xdd62ed3e
Entry block: 0x374
Exit block: 0x182
Body: 0x182, 0x374, 0x37b, 0x37f, 0x89c, 0x8c3

Function 11:
Public function signature: 0xe58fc54c
Entry block: 0x3ab
Exit block: 0x15b
Body: 0x15b, 0x3ab, 0x3b2, 0x3b6, 0x8c9, 0x8e5, 0x8e9, 0x93f, 0x943, 0x950, 0x954, 0x9c0, 0x9c4, 0x9d1, 0x9d5, 0x9e1

Function 12:
Public function signature: 0xf2fde38b
Entry block: 0x3de
Exit block: 0x280
Body: 0x280, 0x3de, 0x3e5, 0x3e9, 0x9e8, 0x9ff, 0xa03, 0xa2c, 0xa2d

Function 13:
Public fallback function
Entry block: 0xa9
Exit block: 0xa9
Body: 0xa9

