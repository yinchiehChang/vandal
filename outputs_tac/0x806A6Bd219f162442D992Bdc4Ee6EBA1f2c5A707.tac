Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x6e]
---
0x41 DUP1
0x42 PUSH4 0xb4a99a4e
0x47 EQ
0x48 PUSH2 0x6e
0x4b JUMPI
---
0x42: V15 = 0xb4a99a4e
0x47: V16 = EQ 0xb4a99a4e V11
0x48: V17 = 0x6e
0x4b: JUMPI 0x6e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xc3]
---
0x4c DUP1
0x4d PUSH4 0xba21d62a
0x52 EQ
0x53 PUSH2 0xc3
0x56 JUMPI
---
0x4d: V18 = 0xba21d62a
0x52: V19 = EQ 0xba21d62a V11
0x53: V20 = 0xc3
0x56: JUMPI 0xc3 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x134]
---
0x57 DUP1
0x58 PUSH4 0xde12b839
0x5d EQ
0x5e PUSH2 0x134
0x61 JUMPI
---
0x58: V21 = 0xde12b839
0x5d: V22 = EQ 0xde12b839 V11
0x5e: V23 = 0x134
0x61: JUMPI 0x134 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0xd]
Successors: [0x13e]
---
0x64 JUMPDEST
0x65 PUSH2 0x6c
0x68 PUSH2 0x13e
0x6b JUMP
---
0x64: JUMPDEST 
0x65: V24 = 0x6c
0x68: V25 = 0x13e
0x6b: JUMP 0x13e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x2ae]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x74]
---
Predecessors: [0x41]
Successors: [0x75, 0x79]
---
0x6e JUMPDEST
0x6f CALLVALUE
0x70 ISZERO
0x71 PUSH2 0x79
0x74 JUMPI
---
0x6e: JUMPDEST 
0x6f: V26 = CALLVALUE
0x70: V27 = ISZERO V26
0x71: V28 = 0x79
0x74: JUMPI 0x79 V27
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x75
[0x75:0x78]
---
Predecessors: [0x6e]
Successors: []
---
0x75 PUSH1 0x0
0x77 DUP1
0x78 REVERT
---
0x75: V29 = 0x0
0x78: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x80]
---
Predecessors: [0x6e]
Successors: [0x2b0]
---
0x79 JUMPDEST
0x7a PUSH2 0x81
0x7d PUSH2 0x2b0
0x80 JUMP
---
0x79: JUMPDEST 
0x7a: V30 = 0x81
0x7d: V31 = 0x2b0
0x80: JUMP 0x2b0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x81]
Exit stack: [V11, 0x81]

================================

Block 0x81
[0x81:0xc2]
---
Predecessors: [0x2b0]
Successors: []
---
0x81 JUMPDEST
0x82 PUSH1 0x40
0x84 MLOAD
0x85 DUP1
0x86 DUP3
0x87 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c AND
0x9d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb2 AND
0xb3 DUP2
0xb4 MSTORE
0xb5 PUSH1 0x20
0xb7 ADD
0xb8 SWAP2
0xb9 POP
0xba POP
0xbb PUSH1 0x40
0xbd MLOAD
0xbe DUP1
0xbf SWAP2
0xc0 SUB
0xc1 SWAP1
0xc2 RETURN
---
0x81: JUMPDEST 
0x82: V32 = 0x40
0x84: V33 = M[0x40]
0x87: V34 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c: V35 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x9d: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xb2: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V35
0xb4: M[V33] = V37
0xb5: V38 = 0x20
0xb7: V39 = ADD 0x20 V33
0xbb: V40 = 0x40
0xbd: V41 = M[0x40]
0xc0: V42 = SUB V39 V41
0xc2: RETURN V41 V42
---
Entry stack: [V11, 0x81, V146]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x81]

================================

Block 0xc3
[0xc3:0x131]
---
Predecessors: [0x4c]
Successors: [0x2d5]
---
0xc3 JUMPDEST
0xc4 PUSH2 0x132
0xc7 PUSH1 0x4
0xc9 DUP1
0xca DUP1
0xcb CALLDATALOAD
0xcc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1 AND
0xe2 SWAP1
0xe3 PUSH1 0x20
0xe5 ADD
0xe6 SWAP1
0xe7 SWAP2
0xe8 SWAP1
0xe9 DUP1
0xea CALLDATALOAD
0xeb SWAP1
0xec PUSH1 0x20
0xee ADD
0xef SWAP1
0xf0 DUP3
0xf1 ADD
0xf2 DUP1
0xf3 CALLDATALOAD
0xf4 SWAP1
0xf5 PUSH1 0x20
0xf7 ADD
0xf8 SWAP1
0xf9 DUP1
0xfa DUP1
0xfb PUSH1 0x1f
0xfd ADD
0xfe PUSH1 0x20
0x100 DUP1
0x101 SWAP2
0x102 DIV
0x103 MUL
0x104 PUSH1 0x20
0x106 ADD
0x107 PUSH1 0x40
0x109 MLOAD
0x10a SWAP1
0x10b DUP2
0x10c ADD
0x10d PUSH1 0x40
0x10f MSTORE
0x110 DUP1
0x111 SWAP4
0x112 SWAP3
0x113 SWAP2
0x114 SWAP1
0x115 DUP2
0x116 DUP2
0x117 MSTORE
0x118 PUSH1 0x20
0x11a ADD
0x11b DUP4
0x11c DUP4
0x11d DUP1
0x11e DUP3
0x11f DUP5
0x120 CALLDATACOPY
0x121 DUP3
0x122 ADD
0x123 SWAP2
0x124 POP
0x125 POP
0x126 POP
0x127 POP
0x128 POP
0x129 POP
0x12a SWAP2
0x12b SWAP1
0x12c POP
0x12d POP
0x12e PUSH2 0x2d5
0x131 JUMP
---
0xc3: JUMPDEST 
0xc4: V43 = 0x132
0xc7: V44 = 0x4
0xcb: V45 = CALLDATALOAD 0x4
0xcc: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xe3: V48 = 0x20
0xe5: V49 = ADD 0x20 0x4
0xea: V50 = CALLDATALOAD 0x24
0xec: V51 = 0x20
0xee: V52 = ADD 0x20 0x24
0xf1: V53 = ADD 0x4 V50
0xf3: V54 = CALLDATALOAD V53
0xf5: V55 = 0x20
0xf7: V56 = ADD 0x20 V53
0xfb: V57 = 0x1f
0xfd: V58 = ADD 0x1f V54
0xfe: V59 = 0x20
0x102: V60 = DIV V58 0x20
0x103: V61 = MUL V60 0x20
0x104: V62 = 0x20
0x106: V63 = ADD 0x20 V61
0x107: V64 = 0x40
0x109: V65 = M[0x40]
0x10c: V66 = ADD V65 V63
0x10d: V67 = 0x40
0x10f: M[0x40] = V66
0x117: M[V65] = V54
0x118: V68 = 0x20
0x11a: V69 = ADD 0x20 V65
0x120: CALLDATACOPY V69 V56 V54
0x122: V70 = ADD V69 V54
0x12e: V71 = 0x2d5
0x131: JUMP 0x2d5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x132, V47, V65]
Exit stack: [V11, 0x132, V47, V65]

================================

Block 0x132
[0x132:0x133]
---
Predecessors: [0x3a3]
Successors: []
---
0x132 JUMPDEST
0x133 STOP
---
0x132: JUMPDEST 
0x133: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x134
[0x134:0x13b]
---
Predecessors: [0x57]
Successors: [0x3c1]
---
0x134 JUMPDEST
0x135 PUSH2 0x13c
0x138 PUSH2 0x3c1
0x13b JUMP
---
0x134: JUMPDEST 
0x135: V72 = 0x13c
0x138: V73 = 0x3c1
0x13b: JUMP 0x3c1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x13c]
Exit stack: [V11, 0x13c]

================================

Block 0x13c
[0x13c:0x13d]
---
Predecessors: [0x4a1]
Successors: []
---
0x13c JUMPDEST
0x13d STOP
---
0x13c: JUMPDEST 
0x13d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13e
[0x13e:0x186]
---
Predecessors: [0x64]
Successors: [0x187, 0x1db]
---
0x13e JUMPDEST
0x13f PUSH20 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6
0x154 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x169 AND
0x16a CALLER
0x16b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x180 AND
0x181 EQ
0x182 ISZERO
0x183 PUSH2 0x1db
0x186 JUMPI
---
0x13e: JUMPDEST 
0x13f: V74 = 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6
0x154: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x169: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6
0x16a: V77 = CALLER
0x16b: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x180: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x181: V80 = EQ V79 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6
0x182: V81 = ISZERO V80
0x183: V82 = 0x1db
0x186: JUMPI 0x1db V81
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x187
[0x187:0x1da]
---
Predecessors: [0x13e]
Successors: [0x1db]
---
0x187 PUSH20 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6
0x19c PUSH1 0x0
0x19e DUP1
0x19f PUSH2 0x100
0x1a2 EXP
0x1a3 DUP2
0x1a4 SLOAD
0x1a5 DUP2
0x1a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bb MUL
0x1bc NOT
0x1bd AND
0x1be SWAP1
0x1bf DUP4
0x1c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d5 AND
0x1d6 MUL
0x1d7 OR
0x1d8 SWAP1
0x1d9 SSTORE
0x1da POP
---
0x187: V83 = 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6
0x19c: V84 = 0x0
0x19f: V85 = 0x100
0x1a2: V86 = EXP 0x100 0x0
0x1a4: V87 = S[0x0]
0x1a6: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V89 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1bc: V90 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V91 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V87
0x1c0: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d5: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6
0x1d6: V94 = MUL 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6 0x1
0x1d7: V95 = OR 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6 V91
0x1d9: S[0x0] = V95
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x1db
[0x1db:0x231]
---
Predecessors: [0x13e, 0x187]
Successors: [0x232, 0x236]
---
0x1db JUMPDEST
0x1dc PUSH1 0x0
0x1de DUP1
0x1df SWAP1
0x1e0 SLOAD
0x1e1 SWAP1
0x1e2 PUSH2 0x100
0x1e5 EXP
0x1e6 SWAP1
0x1e7 DIV
0x1e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fd AND
0x1fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x213 AND
0x214 CALLER
0x215 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22a AND
0x22b EQ
0x22c ISZERO
0x22d ISZERO
0x22e PUSH2 0x236
0x231 JUMPI
---
0x1db: JUMPDEST 
0x1dc: V96 = 0x0
0x1e0: V97 = S[0x0]
0x1e2: V98 = 0x100
0x1e5: V99 = EXP 0x100 0x0
0x1e7: V100 = DIV V97 0x1
0x1e8: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fd: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1fe: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x213: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x214: V105 = CALLER
0x215: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x22b: V108 = EQ V107 V104
0x22c: V109 = ISZERO V108
0x22d: V110 = ISZERO V109
0x22e: V111 = 0x236
0x231: JUMPI 0x236 V110
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x232
[0x232:0x235]
---
Predecessors: [0x1db]
Successors: []
---
0x232 PUSH1 0x0
0x234 DUP1
0x235 REVERT
---
0x232: V112 = 0x0
0x235: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x236
[0x236:0x2a9]
---
Predecessors: [0x1db]
Successors: [0x2aa, 0x2ae]
---
0x236 JUMPDEST
0x237 PUSH1 0x0
0x239 DUP1
0x23a SWAP1
0x23b SLOAD
0x23c SWAP1
0x23d PUSH2 0x100
0x240 EXP
0x241 SWAP1
0x242 DIV
0x243 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x258 AND
0x259 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26e AND
0x26f PUSH2 0x8fc
0x272 ADDRESS
0x273 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x288 AND
0x289 BALANCE
0x28a SWAP1
0x28b DUP2
0x28c ISZERO
0x28d MUL
0x28e SWAP1
0x28f PUSH1 0x40
0x291 MLOAD
0x292 PUSH1 0x0
0x294 PUSH1 0x40
0x296 MLOAD
0x297 DUP1
0x298 DUP4
0x299 SUB
0x29a DUP2
0x29b DUP6
0x29c DUP9
0x29d DUP9
0x29e CALL
0x29f SWAP4
0x2a0 POP
0x2a1 POP
0x2a2 POP
0x2a3 POP
0x2a4 ISZERO
0x2a5 ISZERO
0x2a6 PUSH2 0x2ae
0x2a9 JUMPI
---
0x236: JUMPDEST 
0x237: V113 = 0x0
0x23b: V114 = S[0x0]
0x23d: V115 = 0x100
0x240: V116 = EXP 0x100 0x0
0x242: V117 = DIV V114 0x1
0x243: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x258: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x259: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x26f: V122 = 0x8fc
0x272: V123 = ADDRESS
0x273: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x288: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x289: V126 = BALANCE V125
0x28c: V127 = ISZERO V126
0x28d: V128 = MUL V127 0x8fc
0x28f: V129 = 0x40
0x291: V130 = M[0x40]
0x292: V131 = 0x0
0x294: V132 = 0x40
0x296: V133 = M[0x40]
0x299: V134 = SUB V130 V133
0x29e: V135 = CALL V128 V121 V126 V133 V134 V133 0x0
0x2a4: V136 = ISZERO V135
0x2a5: V137 = ISZERO V136
0x2a6: V138 = 0x2ae
0x2a9: JUMPI 0x2ae V137
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x2aa
[0x2aa:0x2ad]
---
Predecessors: [0x236]
Successors: []
---
0x2aa PUSH1 0x0
0x2ac DUP1
0x2ad REVERT
---
0x2aa: V139 = 0x0
0x2ad: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x2ae
[0x2ae:0x2af]
---
Predecessors: [0x236]
Successors: [0x6c]
---
0x2ae JUMPDEST
0x2af JUMP
---
0x2ae: JUMPDEST 
0x2af: JUMP 0x6c
---
Entry stack: [V11, 0x6c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b0
[0x2b0:0x2d4]
---
Predecessors: [0x79]
Successors: [0x81]
---
0x2b0 JUMPDEST
0x2b1 PUSH1 0x0
0x2b3 DUP1
0x2b4 SWAP1
0x2b5 SLOAD
0x2b6 SWAP1
0x2b7 PUSH2 0x100
0x2ba EXP
0x2bb SWAP1
0x2bc DIV
0x2bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d2 AND
0x2d3 DUP2
0x2d4 JUMP
---
0x2b0: JUMPDEST 
0x2b1: V140 = 0x0
0x2b5: V141 = S[0x0]
0x2b7: V142 = 0x100
0x2ba: V143 = EXP 0x100 0x0
0x2bc: V144 = DIV V141 0x1
0x2bd: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d2: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x2d4: JUMP 0x81
---
Entry stack: [V11, 0x81]
Stack pops: 1
Stack additions: [S0, V146]
Exit stack: [V11, 0x81, V146]

================================

Block 0x2d5
[0x2d5:0x32b]
---
Predecessors: [0xc3]
Successors: [0x32c, 0x330]
---
0x2d5 JUMPDEST
0x2d6 PUSH1 0x0
0x2d8 DUP1
0x2d9 SWAP1
0x2da SLOAD
0x2db SWAP1
0x2dc PUSH2 0x100
0x2df EXP
0x2e0 SWAP1
0x2e1 DIV
0x2e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f7 AND
0x2f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30d AND
0x30e CALLER
0x30f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x324 AND
0x325 EQ
0x326 ISZERO
0x327 ISZERO
0x328 PUSH2 0x330
0x32b JUMPI
---
0x2d5: JUMPDEST 
0x2d6: V147 = 0x0
0x2da: V148 = S[0x0]
0x2dc: V149 = 0x100
0x2df: V150 = EXP 0x100 0x0
0x2e1: V151 = DIV V148 0x1
0x2e2: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f7: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x2f8: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x30d: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x30e: V156 = CALLER
0x30f: V157 = 0xffffffffffffffffffffffffffffffffffffffff
0x324: V158 = AND 0xffffffffffffffffffffffffffffffffffffffff V156
0x325: V159 = EQ V158 V155
0x326: V160 = ISZERO V159
0x327: V161 = ISZERO V160
0x328: V162 = 0x330
0x32b: JUMPI 0x330 V161
---
Entry stack: [V11, 0x132, V47, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V47, V65]

================================

Block 0x32c
[0x32c:0x32f]
---
Predecessors: [0x2d5]
Successors: []
---
0x32c PUSH1 0x0
0x32e DUP1
0x32f REVERT
---
0x32c: V163 = 0x0
0x32f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x132, V47, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x132, V47, V65]

================================

Block 0x330
[0x330:0x35a]
---
Predecessors: [0x2d5]
Successors: [0x35b]
---
0x330 JUMPDEST
0x331 DUP2
0x332 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x347 AND
0x348 CALLVALUE
0x349 DUP3
0x34a PUSH1 0x40
0x34c MLOAD
0x34d DUP1
0x34e DUP3
0x34f DUP1
0x350 MLOAD
0x351 SWAP1
0x352 PUSH1 0x20
0x354 ADD
0x355 SWAP1
0x356 DUP1
0x357 DUP4
0x358 DUP4
0x359 PUSH1 0x0
---
0x330: JUMPDEST 
0x332: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x347: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0x348: V166 = CALLVALUE
0x34a: V167 = 0x40
0x34c: V168 = M[0x40]
0x350: V169 = M[V65]
0x352: V170 = 0x20
0x354: V171 = ADD 0x20 V65
0x359: V172 = 0x0
---
Entry stack: [V11, 0x132, V47, V65]
Stack pops: 2
Stack additions: [S1, S0, V165, V166, S0, V168, V168, V171, V169, V169, V168, V171, 0x0]
Exit stack: [V11, 0x132, V47, V65, V165, V166, V65, V168, V168, V171, V169, V169, V168, V171, 0x0]

================================

Block 0x35b
[0x35b:0x363]
---
Predecessors: [0x330, 0x364]
Successors: [0x364, 0x376]
---
0x35b JUMPDEST
0x35c DUP4
0x35d DUP2
0x35e LT
0x35f ISZERO
0x360 PUSH2 0x376
0x363 JUMPI
---
0x35b: JUMPDEST 
0x35e: V173 = LT S0 V169
0x35f: V174 = ISZERO V173
0x360: V175 = 0x376
0x363: JUMPI 0x376 V174
---
Entry stack: [V11, 0x132, V47, V65, V165, V166, V65, V168, V168, V171, V169, V169, V168, V171, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x132, V47, V65, V165, V166, V65, V168, V168, V171, V169, V169, V168, V171, S0]

================================

Block 0x364
[0x364:0x375]
---
Predecessors: [0x35b]
Successors: [0x35b]
---
0x364 DUP1
0x365 DUP3
0x366 ADD
0x367 MLOAD
0x368 DUP2
0x369 DUP5
0x36a ADD
0x36b MSTORE
0x36c PUSH1 0x20
0x36e DUP2
0x36f ADD
0x370 SWAP1
0x371 POP
0x372 PUSH2 0x35b
0x375 JUMP
---
0x366: V176 = ADD V171 S0
0x367: V177 = M[V176]
0x36a: V178 = ADD V168 S0
0x36b: M[V178] = V177
0x36c: V179 = 0x20
0x36f: V180 = ADD S0 0x20
0x372: V181 = 0x35b
0x375: JUMP 0x35b
---
Entry stack: [V11, 0x132, V47, V65, V165, V166, V65, V168, V168, V171, V169, V169, V168, V171, S0]
Stack pops: 3
Stack additions: [S2, S1, V180]
Exit stack: [V11, 0x132, V47, V65, V165, V166, V65, V168, V168, V171, V169, V169, V168, V171, V180]

================================

Block 0x376
[0x376:0x389]
---
Predecessors: [0x35b]
Successors: [0x38a, 0x3a3]
---
0x376 JUMPDEST
0x377 POP
0x378 POP
0x379 POP
0x37a POP
0x37b SWAP1
0x37c POP
0x37d SWAP1
0x37e DUP2
0x37f ADD
0x380 SWAP1
0x381 PUSH1 0x1f
0x383 AND
0x384 DUP1
0x385 ISZERO
0x386 PUSH2 0x3a3
0x389 JUMPI
---
0x376: JUMPDEST 
0x37f: V182 = ADD V169 V168
0x381: V183 = 0x1f
0x383: V184 = AND 0x1f V169
0x385: V185 = ISZERO V184
0x386: V186 = 0x3a3
0x389: JUMPI 0x3a3 V185
---
Entry stack: [V11, 0x132, V47, V65, V165, V166, V65, V168, V168, V171, V169, V169, V168, V171, S0]
Stack pops: 7
Stack additions: [V182, V184]
Exit stack: [V11, 0x132, V47, V65, V165, V166, V65, V168, V182, V184]

================================

Block 0x38a
[0x38a:0x3a2]
---
Predecessors: [0x376]
Successors: [0x3a3]
---
0x38a DUP1
0x38b DUP3
0x38c SUB
0x38d DUP1
0x38e MLOAD
0x38f PUSH1 0x1
0x391 DUP4
0x392 PUSH1 0x20
0x394 SUB
0x395 PUSH2 0x100
0x398 EXP
0x399 SUB
0x39a NOT
0x39b AND
0x39c DUP2
0x39d MSTORE
0x39e PUSH1 0x20
0x3a0 ADD
0x3a1 SWAP2
0x3a2 POP
---
0x38c: V187 = SUB V182 V184
0x38e: V188 = M[V187]
0x38f: V189 = 0x1
0x392: V190 = 0x20
0x394: V191 = SUB 0x20 V184
0x395: V192 = 0x100
0x398: V193 = EXP 0x100 V191
0x399: V194 = SUB V193 0x1
0x39a: V195 = NOT V194
0x39b: V196 = AND V195 V188
0x39d: M[V187] = V196
0x39e: V197 = 0x20
0x3a0: V198 = ADD 0x20 V187
---
Entry stack: [V11, 0x132, V47, V65, V165, V166, V65, V168, V182, V184]
Stack pops: 2
Stack additions: [V198, S0]
Exit stack: [V11, 0x132, V47, V65, V165, V166, V65, V168, V198, V184]

================================

Block 0x3a3
[0x3a3:0x3c0]
---
Predecessors: [0x376, 0x38a]
Successors: [0x132]
---
0x3a3 JUMPDEST
0x3a4 POP
0x3a5 SWAP2
0x3a6 POP
0x3a7 POP
0x3a8 PUSH1 0x0
0x3aa PUSH1 0x40
0x3ac MLOAD
0x3ad DUP1
0x3ae DUP4
0x3af SUB
0x3b0 DUP2
0x3b1 DUP6
0x3b2 DUP8
0x3b3 PUSH2 0x8796
0x3b6 GAS
0x3b7 SUB
0x3b8 CALL
0x3b9 SWAP3
0x3ba POP
0x3bb POP
0x3bc POP
0x3bd POP
0x3be POP
0x3bf POP
0x3c0 JUMP
---
0x3a3: JUMPDEST 
0x3a8: V199 = 0x0
0x3aa: V200 = 0x40
0x3ac: V201 = M[0x40]
0x3af: V202 = SUB S1 V201
0x3b3: V203 = 0x8796
0x3b6: V204 = GAS
0x3b7: V205 = SUB V204 0x8796
0x3b8: V206 = CALL V205 V165 V166 V201 V202 V201 0x0
0x3c0: JUMP 0x132
---
Entry stack: [V11, 0x132, V47, V65, V165, V166, V65, V168, S1, V184]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c1
[0x3c1:0x3d1]
---
Predecessors: [0x134]
Successors: [0x3d2, 0x4a1]
---
0x3c1 JUMPDEST
0x3c2 PUSH8 0xde0b6b3a7640000
0x3cb CALLVALUE
0x3cc GT
0x3cd ISZERO
0x3ce PUSH2 0x4a1
0x3d1 JUMPI
---
0x3c1: JUMPDEST 
0x3c2: V207 = 0xde0b6b3a7640000
0x3cb: V208 = CALLVALUE
0x3cc: V209 = GT V208 0xde0b6b3a7640000
0x3cd: V210 = ISZERO V209
0x3ce: V211 = 0x4a1
0x3d1: JUMPI 0x4a1 V210
---
Entry stack: [V11, 0x13c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c]

================================

Block 0x3d2
[0x3d2:0x444]
---
Predecessors: [0x3c1]
Successors: [0x445, 0x449]
---
0x3d2 PUSH1 0x0
0x3d4 DUP1
0x3d5 SWAP1
0x3d6 SLOAD
0x3d7 SWAP1
0x3d8 PUSH2 0x100
0x3db EXP
0x3dc SWAP1
0x3dd DIV
0x3de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f3 AND
0x3f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x409 AND
0x40a PUSH2 0x8fc
0x40d ADDRESS
0x40e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x423 AND
0x424 BALANCE
0x425 SWAP1
0x426 DUP2
0x427 ISZERO
0x428 MUL
0x429 SWAP1
0x42a PUSH1 0x40
0x42c MLOAD
0x42d PUSH1 0x0
0x42f PUSH1 0x40
0x431 MLOAD
0x432 DUP1
0x433 DUP4
0x434 SUB
0x435 DUP2
0x436 DUP6
0x437 DUP9
0x438 DUP9
0x439 CALL
0x43a SWAP4
0x43b POP
0x43c POP
0x43d POP
0x43e POP
0x43f ISZERO
0x440 ISZERO
0x441 PUSH2 0x449
0x444 JUMPI
---
0x3d2: V212 = 0x0
0x3d6: V213 = S[0x0]
0x3d8: V214 = 0x100
0x3db: V215 = EXP 0x100 0x0
0x3dd: V216 = DIV V213 0x1
0x3de: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f3: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x3f4: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x409: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x40a: V221 = 0x8fc
0x40d: V222 = ADDRESS
0x40e: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x423: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x424: V225 = BALANCE V224
0x427: V226 = ISZERO V225
0x428: V227 = MUL V226 0x8fc
0x42a: V228 = 0x40
0x42c: V229 = M[0x40]
0x42d: V230 = 0x0
0x42f: V231 = 0x40
0x431: V232 = M[0x40]
0x434: V233 = SUB V229 V232
0x439: V234 = CALL V227 V220 V225 V232 V233 V232 0x0
0x43f: V235 = ISZERO V234
0x440: V236 = ISZERO V235
0x441: V237 = 0x449
0x444: JUMPI 0x449 V236
---
Entry stack: [V11, 0x13c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c]

================================

Block 0x445
[0x445:0x448]
---
Predecessors: [0x3d2]
Successors: []
---
0x445 PUSH1 0x0
0x447 DUP1
0x448 REVERT
---
0x445: V238 = 0x0
0x448: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c]

================================

Block 0x449
[0x449:0x49b]
---
Predecessors: [0x3d2]
Successors: [0x49c, 0x4a0]
---
0x449 JUMPDEST
0x44a CALLER
0x44b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x460 AND
0x461 PUSH2 0x8fc
0x464 ADDRESS
0x465 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47a AND
0x47b BALANCE
0x47c SWAP1
0x47d DUP2
0x47e ISZERO
0x47f MUL
0x480 SWAP1
0x481 PUSH1 0x40
0x483 MLOAD
0x484 PUSH1 0x0
0x486 PUSH1 0x40
0x488 MLOAD
0x489 DUP1
0x48a DUP4
0x48b SUB
0x48c DUP2
0x48d DUP6
0x48e DUP9
0x48f DUP9
0x490 CALL
0x491 SWAP4
0x492 POP
0x493 POP
0x494 POP
0x495 POP
0x496 ISZERO
0x497 ISZERO
0x498 PUSH2 0x4a0
0x49b JUMPI
---
0x449: JUMPDEST 
0x44a: V239 = CALLER
0x44b: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x460: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x461: V242 = 0x8fc
0x464: V243 = ADDRESS
0x465: V244 = 0xffffffffffffffffffffffffffffffffffffffff
0x47a: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x47b: V246 = BALANCE V245
0x47e: V247 = ISZERO V246
0x47f: V248 = MUL V247 0x8fc
0x481: V249 = 0x40
0x483: V250 = M[0x40]
0x484: V251 = 0x0
0x486: V252 = 0x40
0x488: V253 = M[0x40]
0x48b: V254 = SUB V250 V253
0x490: V255 = CALL V248 V241 V246 V253 V254 V253 0x0
0x496: V256 = ISZERO V255
0x497: V257 = ISZERO V256
0x498: V258 = 0x4a0
0x49b: JUMPI 0x4a0 V257
---
Entry stack: [V11, 0x13c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c]

================================

Block 0x49c
[0x49c:0x49f]
---
Predecessors: [0x449]
Successors: []
---
0x49c PUSH1 0x0
0x49e DUP1
0x49f REVERT
---
0x49c: V259 = 0x0
0x49f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c]

================================

Block 0x4a0
[0x4a0:0x4a0]
---
Predecessors: [0x449]
Successors: [0x4a1]
---
0x4a0 JUMPDEST
---
0x4a0: JUMPDEST 
---
Entry stack: [V11, 0x13c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c]

================================

Block 0x4a1
[0x4a1:0x4a2]
---
Predecessors: [0x3c1, 0x4a0]
Successors: [0x13c]
---
0x4a1 JUMPDEST
0x4a2 JUMP
---
0x4a1: JUMPDEST 
0x4a2: JUMP 0x13c
---
Entry stack: [V11, 0x13c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4a3
[0x4a3:0x4ce]
---
Predecessors: []
Successors: []
---
0x4a3 STOP
0x4a4 LOG1
0x4a5 PUSH6 0x627a7a723058
0x4ac SHA3
0x4ad MISSING 0x5e
0x4ae MISSING 0x46
0x4af MISSING 0x47
0x4b0 MISSING 0xea
0x4b1 MULMOD
0x4b2 DUP4
0x4b3 ADDMOD
0x4b4 MISSING 0xb9
0x4b5 PUSH15 0x2f203114ae33e2287e771620d3a781
0x4c5 CALLER
0x4c6 MISSING 0xea
0x4c7 MISSING 0xe5
0x4c8 XOR
0x4c9 DUP16
0x4ca MISSING 0x48
0x4cb SMOD
0x4cc DUP13
0x4cd STOP
0x4ce MISSING 0x29
---
0x4a3: STOP 
0x4a4: LOG S0 S1 S2
0x4a5: V260 = 0x627a7a723058
0x4ac: V261 = SHA3 0x627a7a723058 S3
0x4ad: MISSING 0x5e
0x4ae: MISSING 0x46
0x4af: MISSING 0x47
0x4b0: MISSING 0xea
0x4b1: V262 = MULMOD S0 S1 S2
0x4b3: V263 = ADDMOD S5 V262 S3
0x4b4: MISSING 0xb9
0x4b5: V264 = 0x2f203114ae33e2287e771620d3a781
0x4c5: V265 = CALLER
0x4c6: MISSING 0xea
0x4c7: MISSING 0xe5
0x4c8: V266 = XOR S0 S1
0x4ca: MISSING 0x48
0x4cb: V267 = SMOD S0 S1
0x4cd: STOP 
0x4ce: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V261, V263, S4, S5, V265, 0x2f203114ae33e2287e771620d3a781, S16, V266, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S13, V267, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x64
Exit block: 0x6c
Body: 0x64, 0x6c, 0x13e, 0x187, 0x1db, 0x232, 0x236, 0x2aa, 0x2ae

Function 1:
Public function signature: 0xb4a99a4e
Entry block: 0x6e
Exit block: 0x81
Body: 0x6e, 0x75, 0x79, 0x81, 0x2b0

Function 2:
Public function signature: 0xba21d62a
Entry block: 0xc3
Exit block: 0x132
Body: 0xc3, 0x132, 0x2d5, 0x32c, 0x330, 0x35b, 0x364, 0x376, 0x38a, 0x3a3

Function 3:
Public function signature: 0xde12b839
Entry block: 0x134
Exit block: 0x49c
Body: 0x134, 0x13c, 0x3c1, 0x3d2, 0x445, 0x449, 0x49c, 0x4a0, 0x4a1

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

