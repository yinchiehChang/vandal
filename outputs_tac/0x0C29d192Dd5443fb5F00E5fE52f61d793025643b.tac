Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xda]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xda
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xda
0xc: JUMPI 0xda V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0xdf]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1502460
0x3a DUP2
0x3b EQ
0x3c PUSH2 0xdf
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1502460
0x3b: V13 = EQ V11 0x1502460
0x3c: V14 = 0xdf
0x3f: JUMPI 0xdf V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xf6]
---
0x40 DUP1
0x41 PUSH4 0x6fdde03
0x46 EQ
0x47 PUSH2 0xf6
0x4a JUMPI
---
0x41: V15 = 0x6fdde03
0x46: V16 = EQ 0x6fdde03 V11
0x47: V17 = 0xf6
0x4a: JUMPI 0xf6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x180]
---
0x4b DUP1
0x4c PUSH4 0x95ea7b3
0x51 EQ
0x52 PUSH2 0x180
0x55 JUMPI
---
0x4c: V18 = 0x95ea7b3
0x51: V19 = EQ 0x95ea7b3 V11
0x52: V20 = 0x180
0x55: JUMPI 0x180 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x1b8]
---
0x56 DUP1
0x57 PUSH4 0x13af4035
0x5c EQ
0x5d PUSH2 0x1b8
0x60 JUMPI
---
0x57: V21 = 0x13af4035
0x5c: V22 = EQ 0x13af4035 V11
0x5d: V23 = 0x1b8
0x60: JUMPI 0x1b8 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1d9]
---
0x61 DUP1
0x62 PUSH4 0x18160ddd
0x67 EQ
0x68 PUSH2 0x1d9
0x6b JUMPI
---
0x62: V24 = 0x18160ddd
0x67: V25 = EQ 0x18160ddd V11
0x68: V26 = 0x1d9
0x6b: JUMPI 0x1d9 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x200]
---
0x6c DUP1
0x6d PUSH4 0x23b872dd
0x72 EQ
0x73 PUSH2 0x200
0x76 JUMPI
---
0x6d: V27 = 0x23b872dd
0x72: V28 = EQ 0x23b872dd V11
0x73: V29 = 0x200
0x76: JUMPI 0x200 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x22a]
---
0x77 DUP1
0x78 PUSH4 0x313ce567
0x7d EQ
0x7e PUSH2 0x22a
0x81 JUMPI
---
0x78: V30 = 0x313ce567
0x7d: V31 = EQ 0x313ce567 V11
0x7e: V32 = 0x22a
0x81: JUMPI 0x22a V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x8c]
---
Predecessors: [0x77]
Successors: [0x8d, 0x255]
---
0x82 DUP1
0x83 PUSH4 0x31c420d4
0x88 EQ
0x89 PUSH2 0x255
0x8c JUMPI
---
0x83: V33 = 0x31c420d4
0x88: V34 = EQ 0x31c420d4 V11
0x89: V35 = 0x255
0x8c: JUMPI 0x255 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x82]
Successors: [0x98, 0x26a]
---
0x8d DUP1
0x8e PUSH4 0x70a08231
0x93 EQ
0x94 PUSH2 0x26a
0x97 JUMPI
---
0x8e: V36 = 0x70a08231
0x93: V37 = EQ 0x70a08231 V11
0x94: V38 = 0x26a
0x97: JUMPI 0x26a V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8d]
Successors: [0xa3, 0x28b]
---
0x98 DUP1
0x99 PUSH4 0x7e1f2bb8
0x9e EQ
0x9f PUSH2 0x28b
0xa2 JUMPI
---
0x99: V39 = 0x7e1f2bb8
0x9e: V40 = EQ 0x7e1f2bb8 V11
0x9f: V41 = 0x28b
0xa2: JUMPI 0x28b V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x2a3]
---
0xa3 DUP1
0xa4 PUSH4 0x89519c50
0xa9 EQ
0xaa PUSH2 0x2a3
0xad JUMPI
---
0xa4: V42 = 0x89519c50
0xa9: V43 = EQ 0x89519c50 V11
0xaa: V44 = 0x2a3
0xad: JUMPI 0x2a3 V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x2cd]
---
0xae DUP1
0xaf PUSH4 0x95d89b41
0xb4 EQ
0xb5 PUSH2 0x2cd
0xb8 JUMPI
---
0xaf: V45 = 0x95d89b41
0xb4: V46 = EQ 0x95d89b41 V11
0xb5: V47 = 0x2cd
0xb8: JUMPI 0x2cd V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x2e2]
---
0xb9 DUP1
0xba PUSH4 0xa9059cbb
0xbf EQ
0xc0 PUSH2 0x2e2
0xc3 JUMPI
---
0xba: V48 = 0xa9059cbb
0xbf: V49 = EQ 0xa9059cbb V11
0xc0: V50 = 0x2e2
0xc3: JUMPI 0x2e2 V49
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x306]
---
0xc4 DUP1
0xc5 PUSH4 0xdd62ed3e
0xca EQ
0xcb PUSH2 0x306
0xce JUMPI
---
0xc5: V51 = 0xdd62ed3e
0xca: V52 = EQ 0xdd62ed3e V11
0xcb: V53 = 0x306
0xce: JUMPI 0x306 V52
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xcf
[0xcf:0xd9]
---
Predecessors: [0xc4]
Successors: [0xda, 0x32d]
---
0xcf DUP1
0xd0 PUSH4 0xe724529c
0xd5 EQ
0xd6 PUSH2 0x32d
0xd9 JUMPI
---
0xd0: V54 = 0xe724529c
0xd5: V55 = EQ 0xe724529c V11
0xd6: V56 = 0x32d
0xd9: JUMPI 0x32d V55
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xda
[0xda:0xde]
---
Predecessors: [0x0, 0xcf]
Successors: []
---
0xda JUMPDEST
0xdb PUSH1 0x0
0xdd DUP1
0xde REVERT
---
0xda: JUMPDEST 
0xdb: V57 = 0x0
0xde: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdf
[0xdf:0xe6]
---
Predecessors: [0xd]
Successors: [0xe7, 0xeb]
---
0xdf JUMPDEST
0xe0 CALLVALUE
0xe1 DUP1
0xe2 ISZERO
0xe3 PUSH2 0xeb
0xe6 JUMPI
---
0xdf: JUMPDEST 
0xe0: V58 = CALLVALUE
0xe2: V59 = ISZERO V58
0xe3: V60 = 0xeb
0xe6: JUMPI 0xeb V59
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V58]
Exit stack: [V11, V58]

================================

Block 0xe7
[0xe7:0xea]
---
Predecessors: [0xdf]
Successors: []
---
0xe7 PUSH1 0x0
0xe9 DUP1
0xea REVERT
---
0xe7: V61 = 0x0
0xea: REVERT 0x0 0x0
---
Entry stack: [V11, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V58]

================================

Block 0xeb
[0xeb:0xf3]
---
Predecessors: [0xdf]
Successors: [0x353]
---
0xeb JUMPDEST
0xec POP
0xed PUSH2 0xf4
0xf0 PUSH2 0x353
0xf3 JUMP
---
0xeb: JUMPDEST 
0xed: V62 = 0xf4
0xf0: V63 = 0x353
0xf3: JUMP 0x353
---
Entry stack: [V11, V58]
Stack pops: 1
Stack additions: [0xf4]
Exit stack: [V11, 0xf4]

================================

Block 0xf4
[0xf4:0xf5]
---
Predecessors: [0x3ad, 0x431, 0x4dc, 0x6ba, 0x7dc]
Successors: []
---
0xf4 JUMPDEST
0xf5 STOP
---
0xf4: JUMPDEST 
0xf5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf6
[0xf6:0xfd]
---
Predecessors: [0x40]
Successors: [0xfe, 0x102]
---
0xf6 JUMPDEST
0xf7 CALLVALUE
0xf8 DUP1
0xf9 ISZERO
0xfa PUSH2 0x102
0xfd JUMPI
---
0xf6: JUMPDEST 
0xf7: V64 = CALLVALUE
0xf9: V65 = ISZERO V64
0xfa: V66 = 0x102
0xfd: JUMPI 0x102 V65
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V64]
Exit stack: [V11, V64]

================================

Block 0xfe
[0xfe:0x101]
---
Predecessors: [0xf6]
Successors: []
---
0xfe PUSH1 0x0
0x100 DUP1
0x101 REVERT
---
0xfe: V67 = 0x0
0x101: REVERT 0x0 0x0
---
Entry stack: [V11, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V64]

================================

Block 0x102
[0x102:0x10a]
---
Predecessors: [0xf6]
Successors: [0x3af]
---
0x102 JUMPDEST
0x103 POP
0x104 PUSH2 0x10b
0x107 PUSH2 0x3af
0x10a JUMP
---
0x102: JUMPDEST 
0x104: V68 = 0x10b
0x107: V69 = 0x3af
0x10a: JUMP 0x3af
---
Entry stack: [V11, V64]
Stack pops: 1
Stack additions: [0x10b]
Exit stack: [V11, 0x10b]

================================

Block 0x10b
[0x10b:0x12c]
---
Predecessors: [0x3af, 0x70c]
Successors: [0x12d]
---
0x10b JUMPDEST
0x10c PUSH1 0x40
0x10e DUP1
0x10f MLOAD
0x110 PUSH1 0x20
0x112 DUP1
0x113 DUP3
0x114 MSTORE
0x115 DUP4
0x116 MLOAD
0x117 DUP2
0x118 DUP4
0x119 ADD
0x11a MSTORE
0x11b DUP4
0x11c MLOAD
0x11d SWAP2
0x11e SWAP3
0x11f DUP4
0x120 SWAP3
0x121 SWAP1
0x122 DUP4
0x123 ADD
0x124 SWAP2
0x125 DUP6
0x126 ADD
0x127 SWAP1
0x128 DUP1
0x129 DUP4
0x12a DUP4
0x12b PUSH1 0x0
---
0x10b: JUMPDEST 
0x10c: V70 = 0x40
0x10f: V71 = M[0x40]
0x110: V72 = 0x20
0x114: M[V71] = 0x20
0x116: V73 = M[S0]
0x119: V74 = ADD V71 0x20
0x11a: M[V74] = V73
0x11c: V75 = M[S0]
0x123: V76 = ADD V71 0x40
0x126: V77 = ADD S0 0x20
0x12b: V78 = 0x0
---
Entry stack: [V11, 0x10b, S0]
Stack pops: 1
Stack additions: [S0, V71, V71, V76, V77, V75, V75, V76, V77, 0x0]
Exit stack: [V11, 0x10b, S0, V71, V71, V76, V77, V75, V75, V76, V77, 0x0]

================================

Block 0x12d
[0x12d:0x135]
---
Predecessors: [0x10b, 0x136]
Successors: [0x136, 0x145]
---
0x12d JUMPDEST
0x12e DUP4
0x12f DUP2
0x130 LT
0x131 ISZERO
0x132 PUSH2 0x145
0x135 JUMPI
---
0x12d: JUMPDEST 
0x130: V79 = LT S0 V75
0x131: V80 = ISZERO V79
0x132: V81 = 0x145
0x135: JUMPI 0x145 V80
---
Entry stack: [V11, 0x10b, S9, V71, V71, V76, V77, V75, V75, V76, V77, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x10b, S9, V71, V71, V76, V77, V75, V75, V76, V77, S0]

================================

Block 0x136
[0x136:0x144]
---
Predecessors: [0x12d]
Successors: [0x12d]
---
0x136 DUP2
0x137 DUP2
0x138 ADD
0x139 MLOAD
0x13a DUP4
0x13b DUP3
0x13c ADD
0x13d MSTORE
0x13e PUSH1 0x20
0x140 ADD
0x141 PUSH2 0x12d
0x144 JUMP
---
0x138: V82 = ADD S0 V77
0x139: V83 = M[V82]
0x13c: V84 = ADD S0 V76
0x13d: M[V84] = V83
0x13e: V85 = 0x20
0x140: V86 = ADD 0x20 S0
0x141: V87 = 0x12d
0x144: JUMP 0x12d
---
Entry stack: [V11, 0x10b, S9, V71, V71, V76, V77, V75, V75, V76, V77, S0]
Stack pops: 3
Stack additions: [S2, S1, V86]
Exit stack: [V11, 0x10b, S9, V71, V71, V76, V77, V75, V75, V76, V77, V86]

================================

Block 0x145
[0x145:0x158]
---
Predecessors: [0x12d]
Successors: [0x159, 0x172]
---
0x145 JUMPDEST
0x146 POP
0x147 POP
0x148 POP
0x149 POP
0x14a SWAP1
0x14b POP
0x14c SWAP1
0x14d DUP2
0x14e ADD
0x14f SWAP1
0x150 PUSH1 0x1f
0x152 AND
0x153 DUP1
0x154 ISZERO
0x155 PUSH2 0x172
0x158 JUMPI
---
0x145: JUMPDEST 
0x14e: V88 = ADD V75 V76
0x150: V89 = 0x1f
0x152: V90 = AND 0x1f V75
0x154: V91 = ISZERO V90
0x155: V92 = 0x172
0x158: JUMPI 0x172 V91
---
Entry stack: [V11, 0x10b, S9, V71, V71, V76, V77, V75, V75, V76, V77, S0]
Stack pops: 7
Stack additions: [V88, V90]
Exit stack: [V11, 0x10b, S9, V71, V71, V88, V90]

================================

Block 0x159
[0x159:0x171]
---
Predecessors: [0x145]
Successors: [0x172]
---
0x159 DUP1
0x15a DUP3
0x15b SUB
0x15c DUP1
0x15d MLOAD
0x15e PUSH1 0x1
0x160 DUP4
0x161 PUSH1 0x20
0x163 SUB
0x164 PUSH2 0x100
0x167 EXP
0x168 SUB
0x169 NOT
0x16a AND
0x16b DUP2
0x16c MSTORE
0x16d PUSH1 0x20
0x16f ADD
0x170 SWAP2
0x171 POP
---
0x15b: V93 = SUB V88 V90
0x15d: V94 = M[V93]
0x15e: V95 = 0x1
0x161: V96 = 0x20
0x163: V97 = SUB 0x20 V90
0x164: V98 = 0x100
0x167: V99 = EXP 0x100 V97
0x168: V100 = SUB V99 0x1
0x169: V101 = NOT V100
0x16a: V102 = AND V101 V94
0x16c: M[V93] = V102
0x16d: V103 = 0x20
0x16f: V104 = ADD 0x20 V93
---
Entry stack: [V11, 0x10b, S4, V71, V71, V88, V90]
Stack pops: 2
Stack additions: [V104, S0]
Exit stack: [V11, 0x10b, S4, V71, V71, V104, V90]

================================

Block 0x172
[0x172:0x17f]
---
Predecessors: [0x145, 0x159]
Successors: []
---
0x172 JUMPDEST
0x173 POP
0x174 SWAP3
0x175 POP
0x176 POP
0x177 POP
0x178 PUSH1 0x40
0x17a MLOAD
0x17b DUP1
0x17c SWAP2
0x17d SUB
0x17e SWAP1
0x17f RETURN
---
0x172: JUMPDEST 
0x178: V105 = 0x40
0x17a: V106 = M[0x40]
0x17d: V107 = SUB S1 V106
0x17f: RETURN V106 V107
---
Entry stack: [V11, 0x10b, S4, V71, V71, S1, V90]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x10b]

================================

Block 0x180
[0x180:0x187]
---
Predecessors: [0x4b]
Successors: [0x188, 0x18c]
---
0x180 JUMPDEST
0x181 CALLVALUE
0x182 DUP1
0x183 ISZERO
0x184 PUSH2 0x18c
0x187 JUMPI
---
0x180: JUMPDEST 
0x181: V108 = CALLVALUE
0x183: V109 = ISZERO V108
0x184: V110 = 0x18c
0x187: JUMPI 0x18c V109
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V108]
Exit stack: [V11, V108]

================================

Block 0x188
[0x188:0x18b]
---
Predecessors: [0x180]
Successors: []
---
0x188 PUSH1 0x0
0x18a DUP1
0x18b REVERT
---
0x188: V111 = 0x0
0x18b: REVERT 0x0 0x0
---
Entry stack: [V11, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V108]

================================

Block 0x18c
[0x18c:0x1a3]
---
Predecessors: [0x180]
Successors: [0x3e6]
---
0x18c JUMPDEST
0x18d POP
0x18e PUSH2 0x1a4
0x191 PUSH1 0x1
0x193 PUSH1 0xa0
0x195 PUSH1 0x2
0x197 EXP
0x198 SUB
0x199 PUSH1 0x4
0x19b CALLDATALOAD
0x19c AND
0x19d PUSH1 0x24
0x19f CALLDATALOAD
0x1a0 PUSH2 0x3e6
0x1a3 JUMP
---
0x18c: JUMPDEST 
0x18e: V112 = 0x1a4
0x191: V113 = 0x1
0x193: V114 = 0xa0
0x195: V115 = 0x2
0x197: V116 = EXP 0x2 0xa0
0x198: V117 = SUB 0x10000000000000000000000000000000000000000 0x1
0x199: V118 = 0x4
0x19b: V119 = CALLDATALOAD 0x4
0x19c: V120 = AND V119 0xffffffffffffffffffffffffffffffffffffffff
0x19d: V121 = 0x24
0x19f: V122 = CALLDATALOAD 0x24
0x1a0: V123 = 0x3e6
0x1a3: JUMP 0x3e6
---
Entry stack: [V11, V108]
Stack pops: 1
Stack additions: [0x1a4, V120, V122]
Exit stack: [V11, 0x1a4, V120, V122]

================================

Block 0x1a4
[0x1a4:0x1b7]
---
Predecessors: [0x414, 0x4ad, 0x52a, 0x5eb, 0x9f0]
Successors: []
---
0x1a4 JUMPDEST
0x1a5 PUSH1 0x40
0x1a7 DUP1
0x1a8 MLOAD
0x1a9 SWAP2
0x1aa ISZERO
0x1ab ISZERO
0x1ac DUP3
0x1ad MSTORE
0x1ae MLOAD
0x1af SWAP1
0x1b0 DUP2
0x1b1 SWAP1
0x1b2 SUB
0x1b3 PUSH1 0x20
0x1b5 ADD
0x1b6 SWAP1
0x1b7 RETURN
---
0x1a4: JUMPDEST 
0x1a5: V124 = 0x40
0x1a8: V125 = M[0x40]
0x1aa: V126 = ISZERO S0
0x1ab: V127 = ISZERO V126
0x1ad: M[V125] = V127
0x1ae: V128 = M[0x40]
0x1b2: V129 = SUB V125 V128
0x1b3: V130 = 0x20
0x1b5: V131 = ADD 0x20 V129
0x1b7: RETURN V128 V131
---
Entry stack: [V11, 0x1a4, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1a4, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x1b8
[0x1b8:0x1bf]
---
Predecessors: [0x56]
Successors: [0x1c0, 0x1c4]
---
0x1b8 JUMPDEST
0x1b9 CALLVALUE
0x1ba DUP1
0x1bb ISZERO
0x1bc PUSH2 0x1c4
0x1bf JUMPI
---
0x1b8: JUMPDEST 
0x1b9: V132 = CALLVALUE
0x1bb: V133 = ISZERO V132
0x1bc: V134 = 0x1c4
0x1bf: JUMPI 0x1c4 V133
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V132]
Exit stack: [V11, V132]

================================

Block 0x1c0
[0x1c0:0x1c3]
---
Predecessors: [0x1b8]
Successors: []
---
0x1c0 PUSH1 0x0
0x1c2 DUP1
0x1c3 REVERT
---
0x1c0: V135 = 0x0
0x1c3: REVERT 0x0 0x0
---
Entry stack: [V11, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V132]

================================

Block 0x1c4
[0x1c4:0x1d8]
---
Predecessors: [0x1b8]
Successors: [0x41a]
---
0x1c4 JUMPDEST
0x1c5 POP
0x1c6 PUSH2 0xf4
0x1c9 PUSH1 0x1
0x1cb PUSH1 0xa0
0x1cd PUSH1 0x2
0x1cf EXP
0x1d0 SUB
0x1d1 PUSH1 0x4
0x1d3 CALLDATALOAD
0x1d4 AND
0x1d5 PUSH2 0x41a
0x1d8 JUMP
---
0x1c4: JUMPDEST 
0x1c6: V136 = 0xf4
0x1c9: V137 = 0x1
0x1cb: V138 = 0xa0
0x1cd: V139 = 0x2
0x1cf: V140 = EXP 0x2 0xa0
0x1d0: V141 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d1: V142 = 0x4
0x1d3: V143 = CALLDATALOAD 0x4
0x1d4: V144 = AND V143 0xffffffffffffffffffffffffffffffffffffffff
0x1d5: V145 = 0x41a
0x1d8: JUMP 0x41a
---
Entry stack: [V11, V132]
Stack pops: 1
Stack additions: [0xf4, V144]
Exit stack: [V11, 0xf4, V144]

================================

Block 0x1d9
[0x1d9:0x1e0]
---
Predecessors: [0x61]
Successors: [0x1e1, 0x1e5]
---
0x1d9 JUMPDEST
0x1da CALLVALUE
0x1db DUP1
0x1dc ISZERO
0x1dd PUSH2 0x1e5
0x1e0 JUMPI
---
0x1d9: JUMPDEST 
0x1da: V146 = CALLVALUE
0x1dc: V147 = ISZERO V146
0x1dd: V148 = 0x1e5
0x1e0: JUMPI 0x1e5 V147
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V146]
Exit stack: [V11, V146]

================================

Block 0x1e1
[0x1e1:0x1e4]
---
Predecessors: [0x1d9]
Successors: []
---
0x1e1 PUSH1 0x0
0x1e3 DUP1
0x1e4 REVERT
---
0x1e1: V149 = 0x0
0x1e4: REVERT 0x0 0x0
---
Entry stack: [V11, V146]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V146]

================================

Block 0x1e5
[0x1e5:0x1ed]
---
Predecessors: [0x1d9]
Successors: [0x460]
---
0x1e5 JUMPDEST
0x1e6 POP
0x1e7 PUSH2 0x1ee
0x1ea PUSH2 0x460
0x1ed JUMP
---
0x1e5: JUMPDEST 
0x1e7: V150 = 0x1ee
0x1ea: V151 = 0x460
0x1ed: JUMP 0x460
---
Entry stack: [V11, V146]
Stack pops: 1
Stack additions: [0x1ee]
Exit stack: [V11, 0x1ee]

================================

Block 0x1ee
[0x1ee:0x1ff]
---
Predecessors: [0x460, 0x52a, 0x784]
Successors: []
---
0x1ee JUMPDEST
0x1ef PUSH1 0x40
0x1f1 DUP1
0x1f2 MLOAD
0x1f3 SWAP2
0x1f4 DUP3
0x1f5 MSTORE
0x1f6 MLOAD
0x1f7 SWAP1
0x1f8 DUP2
0x1f9 SWAP1
0x1fa SUB
0x1fb PUSH1 0x20
0x1fd ADD
0x1fe SWAP1
0x1ff RETURN
---
0x1ee: JUMPDEST 
0x1ef: V152 = 0x40
0x1f2: V153 = M[0x40]
0x1f5: M[V153] = S0
0x1f6: V154 = M[0x40]
0x1fa: V155 = SUB V153 V154
0x1fb: V156 = 0x20
0x1fd: V157 = ADD 0x20 V155
0x1ff: RETURN V154 V157
---
Entry stack: [V11, 0x1a4, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1a4, S6, S5, S4, S3, S2, S1]

================================

Block 0x200
[0x200:0x207]
---
Predecessors: [0x6c]
Successors: [0x208, 0x20c]
---
0x200 JUMPDEST
0x201 CALLVALUE
0x202 DUP1
0x203 ISZERO
0x204 PUSH2 0x20c
0x207 JUMPI
---
0x200: JUMPDEST 
0x201: V158 = CALLVALUE
0x203: V159 = ISZERO V158
0x204: V160 = 0x20c
0x207: JUMPI 0x20c V159
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V158]
Exit stack: [V11, V158]

================================

Block 0x208
[0x208:0x20b]
---
Predecessors: [0x200]
Successors: []
---
0x208 PUSH1 0x0
0x20a DUP1
0x20b REVERT
---
0x208: V161 = 0x0
0x20b: REVERT 0x0 0x0
---
Entry stack: [V11, V158]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V158]

================================

Block 0x20c
[0x20c:0x229]
---
Predecessors: [0x200]
Successors: [0x466]
---
0x20c JUMPDEST
0x20d POP
0x20e PUSH2 0x1a4
0x211 PUSH1 0x1
0x213 PUSH1 0xa0
0x215 PUSH1 0x2
0x217 EXP
0x218 SUB
0x219 PUSH1 0x4
0x21b CALLDATALOAD
0x21c DUP2
0x21d AND
0x21e SWAP1
0x21f PUSH1 0x24
0x221 CALLDATALOAD
0x222 AND
0x223 PUSH1 0x44
0x225 CALLDATALOAD
0x226 PUSH2 0x466
0x229 JUMP
---
0x20c: JUMPDEST 
0x20e: V162 = 0x1a4
0x211: V163 = 0x1
0x213: V164 = 0xa0
0x215: V165 = 0x2
0x217: V166 = EXP 0x2 0xa0
0x218: V167 = SUB 0x10000000000000000000000000000000000000000 0x1
0x219: V168 = 0x4
0x21b: V169 = CALLDATALOAD 0x4
0x21d: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x21f: V171 = 0x24
0x221: V172 = CALLDATALOAD 0x24
0x222: V173 = AND V172 0xffffffffffffffffffffffffffffffffffffffff
0x223: V174 = 0x44
0x225: V175 = CALLDATALOAD 0x44
0x226: V176 = 0x466
0x229: JUMP 0x466
---
Entry stack: [V11, V158]
Stack pops: 1
Stack additions: [0x1a4, V170, V173, V175]
Exit stack: [V11, 0x1a4, V170, V173, V175]

================================

Block 0x22a
[0x22a:0x231]
---
Predecessors: [0x77]
Successors: [0x232, 0x236]
---
0x22a JUMPDEST
0x22b CALLVALUE
0x22c DUP1
0x22d ISZERO
0x22e PUSH2 0x236
0x231 JUMPI
---
0x22a: JUMPDEST 
0x22b: V177 = CALLVALUE
0x22d: V178 = ISZERO V177
0x22e: V179 = 0x236
0x231: JUMPI 0x236 V178
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V177]
Exit stack: [V11, V177]

================================

Block 0x232
[0x232:0x235]
---
Predecessors: [0x22a]
Successors: []
---
0x232 PUSH1 0x0
0x234 DUP1
0x235 REVERT
---
0x232: V180 = 0x0
0x235: REVERT 0x0 0x0
---
Entry stack: [V11, V177]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V177]

================================

Block 0x236
[0x236:0x23e]
---
Predecessors: [0x22a]
Successors: [0x4b4]
---
0x236 JUMPDEST
0x237 POP
0x238 PUSH2 0x23f
0x23b PUSH2 0x4b4
0x23e JUMP
---
0x236: JUMPDEST 
0x238: V181 = 0x23f
0x23b: V182 = 0x4b4
0x23e: JUMP 0x4b4
---
Entry stack: [V11, V177]
Stack pops: 1
Stack additions: [0x23f]
Exit stack: [V11, 0x23f]

================================

Block 0x23f
[0x23f:0x254]
---
Predecessors: [0x4b4]
Successors: []
---
0x23f JUMPDEST
0x240 PUSH1 0x40
0x242 DUP1
0x243 MLOAD
0x244 PUSH1 0xff
0x246 SWAP1
0x247 SWAP3
0x248 AND
0x249 DUP3
0x24a MSTORE
0x24b MLOAD
0x24c SWAP1
0x24d DUP2
0x24e SWAP1
0x24f SUB
0x250 PUSH1 0x20
0x252 ADD
0x253 SWAP1
0x254 RETURN
---
0x23f: JUMPDEST 
0x240: V183 = 0x40
0x243: V184 = M[0x40]
0x244: V185 = 0xff
0x248: V186 = AND 0x2 0xff
0x24a: M[V184] = 0x2
0x24b: V187 = M[0x40]
0x24f: V188 = SUB V184 V187
0x250: V189 = 0x20
0x252: V190 = ADD 0x20 V188
0x254: RETURN V187 V190
---
Entry stack: [V11, 0x23f, 0x2]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x23f]

================================

Block 0x255
[0x255:0x25c]
---
Predecessors: [0x82]
Successors: [0x25d, 0x261]
---
0x255 JUMPDEST
0x256 CALLVALUE
0x257 DUP1
0x258 ISZERO
0x259 PUSH2 0x261
0x25c JUMPI
---
0x255: JUMPDEST 
0x256: V191 = CALLVALUE
0x258: V192 = ISZERO V191
0x259: V193 = 0x261
0x25c: JUMPI 0x261 V192
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V191]
Exit stack: [V11, V191]

================================

Block 0x25d
[0x25d:0x260]
---
Predecessors: [0x255]
Successors: []
---
0x25d PUSH1 0x0
0x25f DUP1
0x260 REVERT
---
0x25d: V194 = 0x0
0x260: REVERT 0x0 0x0
---
Entry stack: [V11, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V191]

================================

Block 0x261
[0x261:0x269]
---
Predecessors: [0x255]
Successors: [0x4b9]
---
0x261 JUMPDEST
0x262 POP
0x263 PUSH2 0xf4
0x266 PUSH2 0x4b9
0x269 JUMP
---
0x261: JUMPDEST 
0x263: V195 = 0xf4
0x266: V196 = 0x4b9
0x269: JUMP 0x4b9
---
Entry stack: [V11, V191]
Stack pops: 1
Stack additions: [0xf4]
Exit stack: [V11, 0xf4]

================================

Block 0x26a
[0x26a:0x271]
---
Predecessors: [0x8d]
Successors: [0x272, 0x276]
---
0x26a JUMPDEST
0x26b CALLVALUE
0x26c DUP1
0x26d ISZERO
0x26e PUSH2 0x276
0x271 JUMPI
---
0x26a: JUMPDEST 
0x26b: V197 = CALLVALUE
0x26d: V198 = ISZERO V197
0x26e: V199 = 0x276
0x271: JUMPI 0x276 V198
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V197]
Exit stack: [V11, V197]

================================

Block 0x272
[0x272:0x275]
---
Predecessors: [0x26a]
Successors: []
---
0x272 PUSH1 0x0
0x274 DUP1
0x275 REVERT
---
0x272: V200 = 0x0
0x275: REVERT 0x0 0x0
---
Entry stack: [V11, V197]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V197]

================================

Block 0x276
[0x276:0x28a]
---
Predecessors: [0x26a]
Successors: [0x510]
---
0x276 JUMPDEST
0x277 POP
0x278 PUSH2 0x1ee
0x27b PUSH1 0x1
0x27d PUSH1 0xa0
0x27f PUSH1 0x2
0x281 EXP
0x282 SUB
0x283 PUSH1 0x4
0x285 CALLDATALOAD
0x286 AND
0x287 PUSH2 0x510
0x28a JUMP
---
0x276: JUMPDEST 
0x278: V201 = 0x1ee
0x27b: V202 = 0x1
0x27d: V203 = 0xa0
0x27f: V204 = 0x2
0x281: V205 = EXP 0x2 0xa0
0x282: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x283: V207 = 0x4
0x285: V208 = CALLDATALOAD 0x4
0x286: V209 = AND V208 0xffffffffffffffffffffffffffffffffffffffff
0x287: V210 = 0x510
0x28a: JUMP 0x510
---
Entry stack: [V11, V197]
Stack pops: 1
Stack additions: [0x1ee, V209]
Exit stack: [V11, 0x1ee, V209]

================================

Block 0x28b
[0x28b:0x292]
---
Predecessors: [0x98]
Successors: [0x293, 0x297]
---
0x28b JUMPDEST
0x28c CALLVALUE
0x28d DUP1
0x28e ISZERO
0x28f PUSH2 0x297
0x292 JUMPI
---
0x28b: JUMPDEST 
0x28c: V211 = CALLVALUE
0x28e: V212 = ISZERO V211
0x28f: V213 = 0x297
0x292: JUMPI 0x297 V212
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V211]
Exit stack: [V11, V211]

================================

Block 0x293
[0x293:0x296]
---
Predecessors: [0x28b]
Successors: []
---
0x293 PUSH1 0x0
0x295 DUP1
0x296 REVERT
---
0x293: V214 = 0x0
0x296: REVERT 0x0 0x0
---
Entry stack: [V11, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V211]

================================

Block 0x297
[0x297:0x2a2]
---
Predecessors: [0x28b]
Successors: [0x52f]
---
0x297 JUMPDEST
0x298 POP
0x299 PUSH2 0x1a4
0x29c PUSH1 0x4
0x29e CALLDATALOAD
0x29f PUSH2 0x52f
0x2a2 JUMP
---
0x297: JUMPDEST 
0x299: V215 = 0x1a4
0x29c: V216 = 0x4
0x29e: V217 = CALLDATALOAD 0x4
0x29f: V218 = 0x52f
0x2a2: JUMP 0x52f
---
Entry stack: [V11, V211]
Stack pops: 1
Stack additions: [0x1a4, V217]
Exit stack: [V11, 0x1a4, V217]

================================

Block 0x2a3
[0x2a3:0x2aa]
---
Predecessors: [0xa3]
Successors: [0x2ab, 0x2af]
---
0x2a3 JUMPDEST
0x2a4 CALLVALUE
0x2a5 DUP1
0x2a6 ISZERO
0x2a7 PUSH2 0x2af
0x2aa JUMPI
---
0x2a3: JUMPDEST 
0x2a4: V219 = CALLVALUE
0x2a6: V220 = ISZERO V219
0x2a7: V221 = 0x2af
0x2aa: JUMPI 0x2af V220
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V219]
Exit stack: [V11, V219]

================================

Block 0x2ab
[0x2ab:0x2ae]
---
Predecessors: [0x2a3]
Successors: []
---
0x2ab PUSH1 0x0
0x2ad DUP1
0x2ae REVERT
---
0x2ab: V222 = 0x0
0x2ae: REVERT 0x0 0x0
---
Entry stack: [V11, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V219]

================================

Block 0x2af
[0x2af:0x2cc]
---
Predecessors: [0x2a3]
Successors: [0x5f3]
---
0x2af JUMPDEST
0x2b0 POP
0x2b1 PUSH2 0xf4
0x2b4 PUSH1 0x1
0x2b6 PUSH1 0xa0
0x2b8 PUSH1 0x2
0x2ba EXP
0x2bb SUB
0x2bc PUSH1 0x4
0x2be CALLDATALOAD
0x2bf DUP2
0x2c0 AND
0x2c1 SWAP1
0x2c2 PUSH1 0x24
0x2c4 CALLDATALOAD
0x2c5 AND
0x2c6 PUSH1 0x44
0x2c8 CALLDATALOAD
0x2c9 PUSH2 0x5f3
0x2cc JUMP
---
0x2af: JUMPDEST 
0x2b1: V223 = 0xf4
0x2b4: V224 = 0x1
0x2b6: V225 = 0xa0
0x2b8: V226 = 0x2
0x2ba: V227 = EXP 0x2 0xa0
0x2bb: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bc: V229 = 0x4
0x2be: V230 = CALLDATALOAD 0x4
0x2c0: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x2c2: V232 = 0x24
0x2c4: V233 = CALLDATALOAD 0x24
0x2c5: V234 = AND V233 0xffffffffffffffffffffffffffffffffffffffff
0x2c6: V235 = 0x44
0x2c8: V236 = CALLDATALOAD 0x44
0x2c9: V237 = 0x5f3
0x2cc: JUMP 0x5f3
---
Entry stack: [V11, V219]
Stack pops: 1
Stack additions: [0xf4, V231, V234, V236]
Exit stack: [V11, 0xf4, V231, V234, V236]

================================

Block 0x2cd
[0x2cd:0x2d4]
---
Predecessors: [0xae]
Successors: [0x2d5, 0x2d9]
---
0x2cd JUMPDEST
0x2ce CALLVALUE
0x2cf DUP1
0x2d0 ISZERO
0x2d1 PUSH2 0x2d9
0x2d4 JUMPI
---
0x2cd: JUMPDEST 
0x2ce: V238 = CALLVALUE
0x2d0: V239 = ISZERO V238
0x2d1: V240 = 0x2d9
0x2d4: JUMPI 0x2d9 V239
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V238]
Exit stack: [V11, V238]

================================

Block 0x2d5
[0x2d5:0x2d8]
---
Predecessors: [0x2cd]
Successors: []
---
0x2d5 PUSH1 0x0
0x2d7 DUP1
0x2d8 REVERT
---
0x2d5: V241 = 0x0
0x2d8: REVERT 0x0 0x0
---
Entry stack: [V11, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V238]

================================

Block 0x2d9
[0x2d9:0x2e1]
---
Predecessors: [0x2cd]
Successors: [0x70c]
---
0x2d9 JUMPDEST
0x2da POP
0x2db PUSH2 0x10b
0x2de PUSH2 0x70c
0x2e1 JUMP
---
0x2d9: JUMPDEST 
0x2db: V242 = 0x10b
0x2de: V243 = 0x70c
0x2e1: JUMP 0x70c
---
Entry stack: [V11, V238]
Stack pops: 1
Stack additions: [0x10b]
Exit stack: [V11, 0x10b]

================================

Block 0x2e2
[0x2e2:0x2e9]
---
Predecessors: [0xb9]
Successors: [0x2ea, 0x2ee]
---
0x2e2 JUMPDEST
0x2e3 CALLVALUE
0x2e4 DUP1
0x2e5 ISZERO
0x2e6 PUSH2 0x2ee
0x2e9 JUMPI
---
0x2e2: JUMPDEST 
0x2e3: V244 = CALLVALUE
0x2e5: V245 = ISZERO V244
0x2e6: V246 = 0x2ee
0x2e9: JUMPI 0x2ee V245
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V244]
Exit stack: [V11, V244]

================================

Block 0x2ea
[0x2ea:0x2ed]
---
Predecessors: [0x2e2]
Successors: []
---
0x2ea PUSH1 0x0
0x2ec DUP1
0x2ed REVERT
---
0x2ea: V247 = 0x0
0x2ed: REVERT 0x0 0x0
---
Entry stack: [V11, V244]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V244]

================================

Block 0x2ee
[0x2ee:0x305]
---
Predecessors: [0x2e2]
Successors: [0x743]
---
0x2ee JUMPDEST
0x2ef POP
0x2f0 PUSH2 0x1a4
0x2f3 PUSH1 0x1
0x2f5 PUSH1 0xa0
0x2f7 PUSH1 0x2
0x2f9 EXP
0x2fa SUB
0x2fb PUSH1 0x4
0x2fd CALLDATALOAD
0x2fe AND
0x2ff PUSH1 0x24
0x301 CALLDATALOAD
0x302 PUSH2 0x743
0x305 JUMP
---
0x2ee: JUMPDEST 
0x2f0: V248 = 0x1a4
0x2f3: V249 = 0x1
0x2f5: V250 = 0xa0
0x2f7: V251 = 0x2
0x2f9: V252 = EXP 0x2 0xa0
0x2fa: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fb: V254 = 0x4
0x2fd: V255 = CALLDATALOAD 0x4
0x2fe: V256 = AND V255 0xffffffffffffffffffffffffffffffffffffffff
0x2ff: V257 = 0x24
0x301: V258 = CALLDATALOAD 0x24
0x302: V259 = 0x743
0x305: JUMP 0x743
---
Entry stack: [V11, V244]
Stack pops: 1
Stack additions: [0x1a4, V256, V258]
Exit stack: [V11, 0x1a4, V256, V258]

================================

Block 0x306
[0x306:0x30d]
---
Predecessors: [0xc4]
Successors: [0x30e, 0x312]
---
0x306 JUMPDEST
0x307 CALLVALUE
0x308 DUP1
0x309 ISZERO
0x30a PUSH2 0x312
0x30d JUMPI
---
0x306: JUMPDEST 
0x307: V260 = CALLVALUE
0x309: V261 = ISZERO V260
0x30a: V262 = 0x312
0x30d: JUMPI 0x312 V261
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V260]
Exit stack: [V11, V260]

================================

Block 0x30e
[0x30e:0x311]
---
Predecessors: [0x306]
Successors: []
---
0x30e PUSH1 0x0
0x310 DUP1
0x311 REVERT
---
0x30e: V263 = 0x0
0x311: REVERT 0x0 0x0
---
Entry stack: [V11, V260]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V260]

================================

Block 0x312
[0x312:0x32c]
---
Predecessors: [0x306]
Successors: [0x784]
---
0x312 JUMPDEST
0x313 POP
0x314 PUSH2 0x1ee
0x317 PUSH1 0x1
0x319 PUSH1 0xa0
0x31b PUSH1 0x2
0x31d EXP
0x31e SUB
0x31f PUSH1 0x4
0x321 CALLDATALOAD
0x322 DUP2
0x323 AND
0x324 SWAP1
0x325 PUSH1 0x24
0x327 CALLDATALOAD
0x328 AND
0x329 PUSH2 0x784
0x32c JUMP
---
0x312: JUMPDEST 
0x314: V264 = 0x1ee
0x317: V265 = 0x1
0x319: V266 = 0xa0
0x31b: V267 = 0x2
0x31d: V268 = EXP 0x2 0xa0
0x31e: V269 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31f: V270 = 0x4
0x321: V271 = CALLDATALOAD 0x4
0x323: V272 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x325: V273 = 0x24
0x327: V274 = CALLDATALOAD 0x24
0x328: V275 = AND V274 0xffffffffffffffffffffffffffffffffffffffff
0x329: V276 = 0x784
0x32c: JUMP 0x784
---
Entry stack: [V11, V260]
Stack pops: 1
Stack additions: [0x1ee, V272, V275]
Exit stack: [V11, 0x1ee, V272, V275]

================================

Block 0x32d
[0x32d:0x334]
---
Predecessors: [0xcf]
Successors: [0x335, 0x339]
---
0x32d JUMPDEST
0x32e CALLVALUE
0x32f DUP1
0x330 ISZERO
0x331 PUSH2 0x339
0x334 JUMPI
---
0x32d: JUMPDEST 
0x32e: V277 = CALLVALUE
0x330: V278 = ISZERO V277
0x331: V279 = 0x339
0x334: JUMPI 0x339 V278
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V277]
Exit stack: [V11, V277]

================================

Block 0x335
[0x335:0x338]
---
Predecessors: [0x32d]
Successors: []
---
0x335 PUSH1 0x0
0x337 DUP1
0x338 REVERT
---
0x335: V280 = 0x0
0x338: REVERT 0x0 0x0
---
Entry stack: [V11, V277]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V277]

================================

Block 0x339
[0x339:0x352]
---
Predecessors: [0x32d]
Successors: [0x7af]
---
0x339 JUMPDEST
0x33a POP
0x33b PUSH2 0xf4
0x33e PUSH1 0x1
0x340 PUSH1 0xa0
0x342 PUSH1 0x2
0x344 EXP
0x345 SUB
0x346 PUSH1 0x4
0x348 CALLDATALOAD
0x349 AND
0x34a PUSH1 0x24
0x34c CALLDATALOAD
0x34d ISZERO
0x34e ISZERO
0x34f PUSH2 0x7af
0x352 JUMP
---
0x339: JUMPDEST 
0x33b: V281 = 0xf4
0x33e: V282 = 0x1
0x340: V283 = 0xa0
0x342: V284 = 0x2
0x344: V285 = EXP 0x2 0xa0
0x345: V286 = SUB 0x10000000000000000000000000000000000000000 0x1
0x346: V287 = 0x4
0x348: V288 = CALLDATALOAD 0x4
0x349: V289 = AND V288 0xffffffffffffffffffffffffffffffffffffffff
0x34a: V290 = 0x24
0x34c: V291 = CALLDATALOAD 0x24
0x34d: V292 = ISZERO V291
0x34e: V293 = ISZERO V292
0x34f: V294 = 0x7af
0x352: JUMP 0x7af
---
Entry stack: [V11, V277]
Stack pops: 1
Stack additions: [0xf4, V289, V293]
Exit stack: [V11, 0xf4, V289, V293]

================================

Block 0x353
[0x353:0x365]
---
Predecessors: [0xeb]
Successors: [0x366, 0x36a]
---
0x353 JUMPDEST
0x354 PUSH1 0x2
0x356 SLOAD
0x357 PUSH1 0x1
0x359 PUSH1 0xa0
0x35b PUSH1 0x2
0x35d EXP
0x35e SUB
0x35f AND
0x360 CALLER
0x361 EQ
0x362 PUSH2 0x36a
0x365 JUMPI
---
0x353: JUMPDEST 
0x354: V295 = 0x2
0x356: V296 = S[0x2]
0x357: V297 = 0x1
0x359: V298 = 0xa0
0x35b: V299 = 0x2
0x35d: V300 = EXP 0x2 0xa0
0x35e: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35f: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V296
0x360: V303 = CALLER
0x361: V304 = EQ V303 V302
0x362: V305 = 0x36a
0x365: JUMPI 0x36a V304
---
Entry stack: [V11, 0xf4]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4]

================================

Block 0x366
[0x366:0x369]
---
Predecessors: [0x353]
Successors: []
---
0x366 PUSH1 0x0
0x368 DUP1
0x369 REVERT
---
0x366: V306 = 0x0
0x369: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf4]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4]

================================

Block 0x36a
[0x36a:0x376]
---
Predecessors: [0x353]
Successors: [0x377, 0x3ad]
---
0x36a JUMPDEST
0x36b PUSH1 0x5
0x36d SLOAD
0x36e PUSH1 0xff
0x370 AND
0x371 ISZERO
0x372 ISZERO
0x373 PUSH2 0x3ad
0x376 JUMPI
---
0x36a: JUMPDEST 
0x36b: V307 = 0x5
0x36d: V308 = S[0x5]
0x36e: V309 = 0xff
0x370: V310 = AND 0xff V308
0x371: V311 = ISZERO V310
0x372: V312 = ISZERO V311
0x373: V313 = 0x3ad
0x376: JUMPI 0x3ad V312
---
Entry stack: [V11, 0xf4]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4]

================================

Block 0x377
[0x377:0x3ac]
---
Predecessors: [0x36a]
Successors: [0x3ad]
---
0x377 PUSH1 0x5
0x379 DUP1
0x37a SLOAD
0x37b PUSH1 0xff
0x37d NOT
0x37e AND
0x37f PUSH1 0x1
0x381 OR
0x382 SWAP1
0x383 SSTORE
0x384 PUSH1 0x40
0x386 MLOAD
0x387 PUSH32 0x615acbaede366d76a8b8cb2a9ada6a71495f0786513d71aa97aaf0c3910b78de
0x3a8 SWAP1
0x3a9 PUSH1 0x0
0x3ab SWAP1
0x3ac LOG1
---
0x377: V314 = 0x5
0x37a: V315 = S[0x5]
0x37b: V316 = 0xff
0x37d: V317 = NOT 0xff
0x37e: V318 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V315
0x37f: V319 = 0x1
0x381: V320 = OR 0x1 V318
0x383: S[0x5] = V320
0x384: V321 = 0x40
0x386: V322 = M[0x40]
0x387: V323 = 0x615acbaede366d76a8b8cb2a9ada6a71495f0786513d71aa97aaf0c3910b78de
0x3a9: V324 = 0x0
0x3ac: LOG V322 0x0 0x615acbaede366d76a8b8cb2a9ada6a71495f0786513d71aa97aaf0c3910b78de
---
Entry stack: [V11, 0xf4]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4]

================================

Block 0x3ad
[0x3ad:0x3ae]
---
Predecessors: [0x36a, 0x377, 0x4d0]
Successors: [0xf4]
---
0x3ad JUMPDEST
0x3ae JUMP
---
0x3ad: JUMPDEST 
0x3ae: JUMP 0xf4
---
Entry stack: [V11, 0xf4]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3af
[0x3af:0x3e5]
---
Predecessors: [0x102]
Successors: [0x10b]
---
0x3af JUMPDEST
0x3b0 PUSH1 0x40
0x3b2 DUP1
0x3b3 MLOAD
0x3b4 DUP1
0x3b5 DUP3
0x3b6 ADD
0x3b7 SWAP1
0x3b8 SWAP2
0x3b9 MSTORE
0x3ba PUSH1 0x6
0x3bc DUP2
0x3bd MSTORE
0x3be PUSH32 0x474f504f53480000000000000000000000000000000000000000000000000000
0x3df PUSH1 0x20
0x3e1 DUP3
0x3e2 ADD
0x3e3 MSTORE
0x3e4 DUP2
0x3e5 JUMP
---
0x3af: JUMPDEST 
0x3b0: V325 = 0x40
0x3b3: V326 = M[0x40]
0x3b6: V327 = ADD 0x40 V326
0x3b9: M[0x40] = V327
0x3ba: V328 = 0x6
0x3bd: M[V326] = 0x6
0x3be: V329 = 0x474f504f53480000000000000000000000000000000000000000000000000000
0x3df: V330 = 0x20
0x3e2: V331 = ADD V326 0x20
0x3e3: M[V331] = 0x474f504f53480000000000000000000000000000000000000000000000000000
0x3e5: JUMP 0x10b
---
Entry stack: [V11, 0x10b]
Stack pops: 1
Stack additions: [S0, V326]
Exit stack: [V11, 0x10b, V326]

================================

Block 0x3e6
[0x3e6:0x3f1]
---
Predecessors: [0x18c]
Successors: [0x784]
---
0x3e6 JUMPDEST
0x3e7 PUSH1 0x0
0x3e9 PUSH2 0x3f2
0x3ec CALLER
0x3ed DUP5
0x3ee PUSH2 0x784
0x3f1 JUMP
---
0x3e6: JUMPDEST 
0x3e7: V332 = 0x0
0x3e9: V333 = 0x3f2
0x3ec: V334 = CALLER
0x3ee: V335 = 0x784
0x3f1: JUMP 0x784
---
Entry stack: [V11, 0x1a4, V120, V122]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x3f2, V334, S1]
Exit stack: [V11, 0x1a4, V120, V122, 0x0, 0x3f2, V334, V120]

================================

Block 0x3f2
[0x3f2:0x3f8]
---
Predecessors: [0x784]
Successors: [0x3f9, 0x3fc]
---
0x3f2 JUMPDEST
0x3f3 ISZERO
0x3f4 DUP1
0x3f5 PUSH2 0x3fc
0x3f8 JUMPI
---
0x3f2: JUMPDEST 
0x3f3: V336 = ISZERO V622
0x3f5: V337 = 0x3fc
0x3f8: JUMPI 0x3fc V336
---
Entry stack: [V11, 0x1a4, V120, V122, S1, V622]
Stack pops: 1
Stack additions: [V336]
Exit stack: [V11, 0x1a4, V120, V122, S1, V336]

================================

Block 0x3f9
[0x3f9:0x3fb]
---
Predecessors: [0x3f2]
Successors: [0x3fc]
---
0x3f9 POP
0x3fa DUP2
0x3fb ISZERO
---
0x3fb: V338 = ISZERO V122
---
Entry stack: [V11, 0x1a4, V120, V122, S1, V336]
Stack pops: 3
Stack additions: [S2, S1, V338]
Exit stack: [V11, 0x1a4, V120, V122, S1, V338]

================================

Block 0x3fc
[0x3fc:0x402]
---
Predecessors: [0x3f2, 0x3f9]
Successors: [0x403, 0x407]
---
0x3fc JUMPDEST
0x3fd ISZERO
0x3fe ISZERO
0x3ff PUSH2 0x407
0x402 JUMPI
---
0x3fc: JUMPDEST 
0x3fd: V339 = ISZERO S0
0x3fe: V340 = ISZERO V339
0x3ff: V341 = 0x407
0x402: JUMPI 0x407 V340
---
Entry stack: [V11, 0x1a4, V120, V122, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1a4, V120, V122, S1]

================================

Block 0x403
[0x403:0x406]
---
Predecessors: [0x3fc]
Successors: []
---
0x403 PUSH1 0x0
0x405 DUP1
0x406 REVERT
---
0x403: V342 = 0x0
0x406: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a4, V120, V122, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a4, V120, V122, S0]

================================

Block 0x407
[0x407:0x410]
---
Predecessors: [0x3fc]
Successors: [0x840]
---
0x407 JUMPDEST
0x408 PUSH2 0x411
0x40b DUP4
0x40c DUP4
0x40d PUSH2 0x840
0x410 JUMP
---
0x407: JUMPDEST 
0x408: V343 = 0x411
0x40d: V344 = 0x840
0x410: JUMP 0x840
---
Entry stack: [V11, 0x1a4, V120, V122, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x411, S2, S1]
Exit stack: [V11, 0x1a4, V120, V122, S0, 0x411, V120, V122]

================================

Block 0x411
[0x411:0x413]
---
Predecessors: [0x840]
Successors: [0x414]
---
0x411 JUMPDEST
0x412 SWAP1
0x413 POP
---
0x411: JUMPDEST 
---
Entry stack: [V11, 0x1a4, V120, V122, S1, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x1a4, V120, V122, 0x1]

================================

Block 0x414
[0x414:0x419]
---
Predecessors: [0x411, 0x76c, 0x77d, 0xa95]
Successors: [0x1a4, 0x77d]
---
0x414 JUMPDEST
0x415 SWAP3
0x416 SWAP2
0x417 POP
0x418 POP
0x419 JUMP
---
0x414: JUMPDEST 
0x419: JUMP S3
---
Entry stack: [V11, 0x1a4, S6, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, 0x1a4, S6, S5, S4, {0x0, 0x1}]

================================

Block 0x41a
[0x41a:0x42c]
---
Predecessors: [0x1c4]
Successors: [0x42d, 0x431]
---
0x41a JUMPDEST
0x41b PUSH1 0x2
0x41d SLOAD
0x41e PUSH1 0x1
0x420 PUSH1 0xa0
0x422 PUSH1 0x2
0x424 EXP
0x425 SUB
0x426 AND
0x427 CALLER
0x428 EQ
0x429 PUSH2 0x431
0x42c JUMPI
---
0x41a: JUMPDEST 
0x41b: V345 = 0x2
0x41d: V346 = S[0x2]
0x41e: V347 = 0x1
0x420: V348 = 0xa0
0x422: V349 = 0x2
0x424: V350 = EXP 0x2 0xa0
0x425: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x426: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x427: V353 = CALLER
0x428: V354 = EQ V353 V352
0x429: V355 = 0x431
0x42c: JUMPI 0x431 V354
---
Entry stack: [V11, 0xf4, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V144]

================================

Block 0x42d
[0x42d:0x430]
---
Predecessors: [0x41a]
Successors: []
---
0x42d PUSH1 0x0
0x42f DUP1
0x430 REVERT
---
0x42d: V356 = 0x0
0x430: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf4, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V144]

================================

Block 0x431
[0x431:0x45f]
---
Predecessors: [0x41a]
Successors: [0xf4]
---
0x431 JUMPDEST
0x432 PUSH1 0x2
0x434 DUP1
0x435 SLOAD
0x436 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44b NOT
0x44c AND
0x44d PUSH1 0x1
0x44f PUSH1 0xa0
0x451 PUSH1 0x2
0x453 EXP
0x454 SUB
0x455 SWAP3
0x456 SWAP1
0x457 SWAP3
0x458 AND
0x459 SWAP2
0x45a SWAP1
0x45b SWAP2
0x45c OR
0x45d SWAP1
0x45e SSTORE
0x45f JUMP
---
0x431: JUMPDEST 
0x432: V357 = 0x2
0x435: V358 = S[0x2]
0x436: V359 = 0xffffffffffffffffffffffffffffffffffffffff
0x44b: V360 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x44c: V361 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V358
0x44d: V362 = 0x1
0x44f: V363 = 0xa0
0x451: V364 = 0x2
0x453: V365 = EXP 0x2 0xa0
0x454: V366 = SUB 0x10000000000000000000000000000000000000000 0x1
0x458: V367 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x45c: V368 = OR V367 V361
0x45e: S[0x2] = V368
0x45f: JUMP 0xf4
---
Entry stack: [V11, 0xf4, V144]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x460
[0x460:0x465]
---
Predecessors: [0x1e5]
Successors: [0x1ee]
---
0x460 JUMPDEST
0x461 PUSH1 0x4
0x463 SLOAD
0x464 SWAP1
0x465 JUMP
---
0x460: JUMPDEST 
0x461: V369 = 0x4
0x463: V370 = S[0x4]
0x465: JUMP 0x1ee
---
Entry stack: [V11, 0x1ee]
Stack pops: 1
Stack additions: [V370]
Exit stack: [V11, V370]

================================

Block 0x466
[0x466:0x487]
---
Predecessors: [0x20c]
Successors: [0x488, 0x48c]
---
0x466 JUMPDEST
0x467 PUSH1 0x1
0x469 PUSH1 0xa0
0x46b PUSH1 0x2
0x46d EXP
0x46e SUB
0x46f DUP4
0x470 AND
0x471 PUSH1 0x0
0x473 SWAP1
0x474 DUP2
0x475 MSTORE
0x476 PUSH1 0x3
0x478 PUSH1 0x20
0x47a MSTORE
0x47b PUSH1 0x40
0x47d DUP2
0x47e SHA3
0x47f SLOAD
0x480 PUSH1 0xff
0x482 AND
0x483 ISZERO
0x484 PUSH2 0x48c
0x487 JUMPI
---
0x466: JUMPDEST 
0x467: V371 = 0x1
0x469: V372 = 0xa0
0x46b: V373 = 0x2
0x46d: V374 = EXP 0x2 0xa0
0x46e: V375 = SUB 0x10000000000000000000000000000000000000000 0x1
0x470: V376 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x471: V377 = 0x0
0x475: M[0x0] = V376
0x476: V378 = 0x3
0x478: V379 = 0x20
0x47a: M[0x20] = 0x3
0x47b: V380 = 0x40
0x47e: V381 = SHA3 0x0 0x40
0x47f: V382 = S[V381]
0x480: V383 = 0xff
0x482: V384 = AND 0xff V382
0x483: V385 = ISZERO V384
0x484: V386 = 0x48c
0x487: JUMPI 0x48c V385
---
Entry stack: [V11, 0x1a4, V170, V173, V175]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0]
Exit stack: [V11, 0x1a4, V170, V173, V175, 0x0]

================================

Block 0x488
[0x488:0x48b]
---
Predecessors: [0x466]
Successors: []
---
0x488 PUSH1 0x0
0x48a DUP1
0x48b REVERT
---
0x488: V387 = 0x0
0x48b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a4, V170, V173, V175, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a4, V170, V173, V175, 0x0]

================================

Block 0x48c
[0x48c:0x497]
---
Predecessors: [0x466]
Successors: [0x498, 0x49f]
---
0x48c JUMPDEST
0x48d PUSH1 0x5
0x48f SLOAD
0x490 PUSH1 0xff
0x492 AND
0x493 ISZERO
0x494 PUSH2 0x49f
0x497 JUMPI
---
0x48c: JUMPDEST 
0x48d: V388 = 0x5
0x48f: V389 = S[0x5]
0x490: V390 = 0xff
0x492: V391 = AND 0xff V389
0x493: V392 = ISZERO V391
0x494: V393 = 0x49f
0x497: JUMPI 0x49f V392
---
Entry stack: [V11, 0x1a4, V170, V173, V175, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a4, V170, V173, V175, 0x0]

================================

Block 0x498
[0x498:0x49e]
---
Predecessors: [0x48c]
Successors: [0x4ad]
---
0x498 POP
0x499 PUSH1 0x0
0x49b PUSH2 0x4ad
0x49e JUMP
---
0x499: V394 = 0x0
0x49b: V395 = 0x4ad
0x49e: JUMP 0x4ad
---
Entry stack: [V11, 0x1a4, V170, V173, V175, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1a4, V170, V173, V175, 0x0]

================================

Block 0x49f
[0x49f:0x4a9]
---
Predecessors: [0x48c]
Successors: [0x8a6]
---
0x49f JUMPDEST
0x4a0 PUSH2 0x4aa
0x4a3 DUP5
0x4a4 DUP5
0x4a5 DUP5
0x4a6 PUSH2 0x8a6
0x4a9 JUMP
---
0x49f: JUMPDEST 
0x4a0: V396 = 0x4aa
0x4a6: V397 = 0x8a6
0x4a9: JUMP 0x8a6
---
Entry stack: [V11, 0x1a4, V170, V173, V175, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x4aa, S3, S2, S1]
Exit stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175]

================================

Block 0x4aa
[0x4aa:0x4ac]
---
Predecessors: [0x4ad, 0x9f0]
Successors: [0x4ad]
---
0x4aa JUMPDEST
0x4ab SWAP1
0x4ac POP
---
0x4aa: JUMPDEST 
---
Entry stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x1a4, 0x4aa}, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x1a4, 0x4aa}, S4, S3, S2, S0]

================================

Block 0x4ad
[0x4ad:0x4b3]
---
Predecessors: [0x498, 0x4aa, 0x8e9, 0x911, 0xa57]
Successors: [0x1a4, 0x4aa, 0x58b, 0x5a8, 0x9d6, 0xb00]
---
0x4ad JUMPDEST
0x4ae SWAP4
0x4af SWAP3
0x4b0 POP
0x4b1 POP
0x4b2 POP
0x4b3 JUMP
---
0x4ad: JUMPDEST 
0x4b3: JUMP {0x0, 0x1a4, 0x4aa, 0x58b, 0x5a8, 0x9d6, 0xb00}
---
Entry stack: [V11, 0x1a4, S13, S12, S11, S10, {0x0, 0x1a4, 0x4aa}, S8, S7, S6, S5, {0x0, 0x1a4, 0x4aa, 0x58b, 0x5a8, 0x9d6, 0xb00}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, 0x1a4, S13, S12, S11, S10, {0x0, 0x1a4, 0x4aa}, S8, S7, S6, S5, S0]

================================

Block 0x4b4
[0x4b4:0x4b8]
---
Predecessors: [0x236]
Successors: [0x23f]
---
0x4b4 JUMPDEST
0x4b5 PUSH1 0x2
0x4b7 DUP2
0x4b8 JUMP
---
0x4b4: JUMPDEST 
0x4b5: V398 = 0x2
0x4b8: JUMP 0x23f
---
Entry stack: [V11, 0x23f]
Stack pops: 1
Stack additions: [S0, 0x2]
Exit stack: [V11, 0x23f, 0x2]

================================

Block 0x4b9
[0x4b9:0x4cb]
---
Predecessors: [0x261]
Successors: [0x4cc, 0x4d0]
---
0x4b9 JUMPDEST
0x4ba PUSH1 0x2
0x4bc SLOAD
0x4bd PUSH1 0x1
0x4bf PUSH1 0xa0
0x4c1 PUSH1 0x2
0x4c3 EXP
0x4c4 SUB
0x4c5 AND
0x4c6 CALLER
0x4c7 EQ
0x4c8 PUSH2 0x4d0
0x4cb JUMPI
---
0x4b9: JUMPDEST 
0x4ba: V399 = 0x2
0x4bc: V400 = S[0x2]
0x4bd: V401 = 0x1
0x4bf: V402 = 0xa0
0x4c1: V403 = 0x2
0x4c3: V404 = EXP 0x2 0xa0
0x4c4: V405 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c5: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0x4c6: V407 = CALLER
0x4c7: V408 = EQ V407 V406
0x4c8: V409 = 0x4d0
0x4cb: JUMPI 0x4d0 V408
---
Entry stack: [V11, 0xf4]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4]

================================

Block 0x4cc
[0x4cc:0x4cf]
---
Predecessors: [0x4b9]
Successors: []
---
0x4cc PUSH1 0x0
0x4ce DUP1
0x4cf REVERT
---
0x4cc: V410 = 0x0
0x4cf: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf4]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4]

================================

Block 0x4d0
[0x4d0:0x4db]
---
Predecessors: [0x4b9]
Successors: [0x3ad, 0x4dc]
---
0x4d0 JUMPDEST
0x4d1 PUSH1 0x5
0x4d3 SLOAD
0x4d4 PUSH1 0xff
0x4d6 AND
0x4d7 ISZERO
0x4d8 PUSH2 0x3ad
0x4db JUMPI
---
0x4d0: JUMPDEST 
0x4d1: V411 = 0x5
0x4d3: V412 = S[0x5]
0x4d4: V413 = 0xff
0x4d6: V414 = AND 0xff V412
0x4d7: V415 = ISZERO V414
0x4d8: V416 = 0x3ad
0x4db: JUMPI 0x3ad V415
---
Entry stack: [V11, 0xf4]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4]

================================

Block 0x4dc
[0x4dc:0x50f]
---
Predecessors: [0x4d0]
Successors: [0xf4]
---
0x4dc PUSH1 0x5
0x4de DUP1
0x4df SLOAD
0x4e0 PUSH1 0xff
0x4e2 NOT
0x4e3 AND
0x4e4 SWAP1
0x4e5 SSTORE
0x4e6 PUSH1 0x40
0x4e8 MLOAD
0x4e9 PUSH32 0x2f05ba71d0df11bf5fa562a6569d70c4f80da84284badbe015ce1456063d0ded
0x50a SWAP1
0x50b PUSH1 0x0
0x50d SWAP1
0x50e LOG1
0x50f JUMP
---
0x4dc: V417 = 0x5
0x4df: V418 = S[0x5]
0x4e0: V419 = 0xff
0x4e2: V420 = NOT 0xff
0x4e3: V421 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V418
0x4e5: S[0x5] = V421
0x4e6: V422 = 0x40
0x4e8: V423 = M[0x40]
0x4e9: V424 = 0x2f05ba71d0df11bf5fa562a6569d70c4f80da84284badbe015ce1456063d0ded
0x50b: V425 = 0x0
0x50e: LOG V423 0x0 0x2f05ba71d0df11bf5fa562a6569d70c4f80da84284badbe015ce1456063d0ded
0x50f: JUMP 0xf4
---
Entry stack: [V11, 0xf4]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x510
[0x510:0x529]
---
Predecessors: [0x276]
Successors: [0x52a]
---
0x510 JUMPDEST
0x511 PUSH1 0x1
0x513 PUSH1 0xa0
0x515 PUSH1 0x2
0x517 EXP
0x518 SUB
0x519 DUP2
0x51a AND
0x51b PUSH1 0x0
0x51d SWAP1
0x51e DUP2
0x51f MSTORE
0x520 PUSH1 0x20
0x522 DUP2
0x523 SWAP1
0x524 MSTORE
0x525 PUSH1 0x40
0x527 SWAP1
0x528 SHA3
0x529 SLOAD
---
0x510: JUMPDEST 
0x511: V426 = 0x1
0x513: V427 = 0xa0
0x515: V428 = 0x2
0x517: V429 = EXP 0x2 0xa0
0x518: V430 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51a: V431 = AND V209 0xffffffffffffffffffffffffffffffffffffffff
0x51b: V432 = 0x0
0x51f: M[0x0] = V431
0x520: V433 = 0x20
0x524: M[0x20] = 0x0
0x525: V434 = 0x40
0x528: V435 = SHA3 0x0 0x40
0x529: V436 = S[V435]
---
Entry stack: [V11, 0x1ee, V209]
Stack pops: 1
Stack additions: [S0, V436]
Exit stack: [V11, 0x1ee, V209, V436]

================================

Block 0x52a
[0x52a:0x52e]
---
Predecessors: [0x510, 0x56a, 0x5a8]
Successors: [0x1a4, 0x1ee]
---
0x52a JUMPDEST
0x52b SWAP2
0x52c SWAP1
0x52d POP
0x52e JUMP
---
0x52a: JUMPDEST 
0x52e: JUMP S2
---
Entry stack: [V11, 0x1a4, S8, S7, S6, S5, {0x0, 0x1a4, 0x4aa}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V11, 0x1a4, S8, S7, S6, S5, {0x0, 0x1a4, 0x4aa}, S3, S0]

================================

Block 0x52f
[0x52f:0x544]
---
Predecessors: [0x297]
Successors: [0x545, 0x549]
---
0x52f JUMPDEST
0x530 PUSH1 0x2
0x532 SLOAD
0x533 PUSH1 0x0
0x535 SWAP1
0x536 PUSH1 0x1
0x538 PUSH1 0xa0
0x53a PUSH1 0x2
0x53c EXP
0x53d SUB
0x53e AND
0x53f CALLER
0x540 EQ
0x541 PUSH2 0x549
0x544 JUMPI
---
0x52f: JUMPDEST 
0x530: V437 = 0x2
0x532: V438 = S[0x2]
0x533: V439 = 0x0
0x536: V440 = 0x1
0x538: V441 = 0xa0
0x53a: V442 = 0x2
0x53c: V443 = EXP 0x2 0xa0
0x53d: V444 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53e: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V438
0x53f: V446 = CALLER
0x540: V447 = EQ V446 V445
0x541: V448 = 0x549
0x544: JUMPI 0x549 V447
---
Entry stack: [V11, 0x1a4, V217]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1a4, V217, 0x0]

================================

Block 0x545
[0x545:0x548]
---
Predecessors: [0x52f]
Successors: []
---
0x545 PUSH1 0x0
0x547 DUP1
0x548 REVERT
---
0x545: V449 = 0x0
0x548: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a4, V217, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a4, V217, 0x0]

================================

Block 0x549
[0x549:0x552]
---
Predecessors: [0x52f]
Successors: [0x553, 0x5eb]
---
0x549 JUMPDEST
0x54a PUSH1 0x0
0x54c DUP3
0x54d GT
0x54e ISZERO
0x54f PUSH2 0x5eb
0x552 JUMPI
---
0x549: JUMPDEST 
0x54a: V450 = 0x0
0x54d: V451 = GT V217 0x0
0x54e: V452 = ISZERO V451
0x54f: V453 = 0x5eb
0x552: JUMPI 0x5eb V452
---
Entry stack: [V11, 0x1a4, V217, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x1a4, V217, 0x0]

================================

Block 0x553
[0x553:0x561]
---
Predecessors: [0x549]
Successors: [0xa45]
---
0x553 PUSH2 0x562
0x556 PUSH4 0x2faf0800
0x55b PUSH1 0x4
0x55d SLOAD
0x55e PUSH2 0xa45
0x561 JUMP
---
0x553: V454 = 0x562
0x556: V455 = 0x2faf0800
0x55b: V456 = 0x4
0x55d: V457 = S[0x4]
0x55e: V458 = 0xa45
0x561: JUMP 0xa45
---
Entry stack: [V11, 0x1a4, V217, 0x0]
Stack pops: 0
Stack additions: [0x562, 0x2faf0800, V457]
Exit stack: [V11, 0x1a4, V217, 0x0, 0x562, 0x2faf0800, V457]

================================

Block 0x562
[0x562:0x569]
---
Predecessors: [0xa51]
Successors: [0x56a, 0x571]
---
0x562 JUMPDEST
0x563 DUP3
0x564 GT
0x565 ISZERO
0x566 PUSH2 0x571
0x569 JUMPI
---
0x562: JUMPDEST 
0x564: V459 = GT S2 V838
0x565: V460 = ISZERO V459
0x566: V461 = 0x571
0x569: JUMPI 0x571 V460
---
Entry stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x4aa}, S4, S3, S2, 0x0, V838]
Stack pops: 3
Stack additions: [S2, S1]
Exit stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x4aa}, S4, S3, S2, 0x0]

================================

Block 0x56a
[0x56a:0x570]
---
Predecessors: [0x562]
Successors: [0x52a]
---
0x56a POP
0x56b PUSH1 0x0
0x56d PUSH2 0x52a
0x570 JUMP
---
0x56b: V462 = 0x0
0x56d: V463 = 0x52a
0x570: JUMP 0x52a
---
Entry stack: [V11, 0x1a4, S8, S7, S6, S5, {0x0, 0x4aa}, S3, S2, S1, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1a4, S8, S7, S6, S5, {0x0, 0x4aa}, S3, S2, S1, 0x0]

================================

Block 0x571
[0x571:0x58a]
---
Predecessors: [0x562]
Successors: [0xa57]
---
0x571 JUMPDEST
0x572 CALLER
0x573 PUSH1 0x0
0x575 SWAP1
0x576 DUP2
0x577 MSTORE
0x578 PUSH1 0x20
0x57a DUP2
0x57b SWAP1
0x57c MSTORE
0x57d PUSH1 0x40
0x57f SWAP1
0x580 SHA3
0x581 SLOAD
0x582 PUSH2 0x58b
0x585 SWAP1
0x586 DUP4
0x587 PUSH2 0xa57
0x58a JUMP
---
0x571: JUMPDEST 
0x572: V464 = CALLER
0x573: V465 = 0x0
0x577: M[0x0] = V464
0x578: V466 = 0x20
0x57c: M[0x20] = 0x0
0x57d: V467 = 0x40
0x580: V468 = SHA3 0x0 0x40
0x581: V469 = S[V468]
0x582: V470 = 0x58b
0x587: V471 = 0xa57
0x58a: JUMP 0xa57
---
Entry stack: [V11, 0x1a4, S8, S7, S6, S5, {0x0, 0x4aa}, S3, S2, S1, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x58b, V469, S1]
Exit stack: [V11, 0x1a4, S8, S7, S6, S5, {0x0, 0x4aa}, S3, S2, S1, 0x0, 0x58b, V469, S1]

================================

Block 0x58b
[0x58b:0x5a7]
---
Predecessors: [0x4ad]
Successors: [0xa57]
---
0x58b JUMPDEST
0x58c CALLER
0x58d PUSH1 0x0
0x58f SWAP1
0x590 DUP2
0x591 MSTORE
0x592 PUSH1 0x20
0x594 DUP2
0x595 SWAP1
0x596 MSTORE
0x597 PUSH1 0x40
0x599 SWAP1
0x59a SHA3
0x59b SSTORE
0x59c PUSH1 0x4
0x59e SLOAD
0x59f PUSH2 0x5a8
0x5a2 SWAP1
0x5a3 DUP4
0x5a4 PUSH2 0xa57
0x5a7 JUMP
---
0x58b: JUMPDEST 
0x58c: V472 = CALLER
0x58d: V473 = 0x0
0x591: M[0x0] = V472
0x592: V474 = 0x20
0x596: M[0x20] = 0x0
0x597: V475 = 0x40
0x59a: V476 = SHA3 0x0 0x40
0x59b: S[V476] = S0
0x59c: V477 = 0x4
0x59e: V478 = S[0x4]
0x59f: V479 = 0x5a8
0x5a4: V480 = 0xa57
0x5a7: JUMP 0xa57
---
Entry stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x1a4, 0x4aa}, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0x5a8, V478, S2]
Exit stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x1a4, 0x4aa}, S4, S3, S2, S1, 0x5a8, V478, S2]

================================

Block 0x5a8
[0x5a8:0x5ea]
---
Predecessors: [0x4ad]
Successors: [0x52a]
---
0x5a8 JUMPDEST
0x5a9 PUSH1 0x4
0x5ab SSTORE
0x5ac PUSH1 0x40
0x5ae DUP1
0x5af MLOAD
0x5b0 DUP4
0x5b1 DUP2
0x5b2 MSTORE
0x5b3 SWAP1
0x5b4 MLOAD
0x5b5 CALLER
0x5b6 SWAP2
0x5b7 PUSH1 0x0
0x5b9 SWAP2
0x5ba PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x5db SWAP2
0x5dc DUP2
0x5dd SWAP1
0x5de SUB
0x5df PUSH1 0x20
0x5e1 ADD
0x5e2 SWAP1
0x5e3 LOG3
0x5e4 POP
0x5e5 PUSH1 0x1
0x5e7 PUSH2 0x52a
0x5ea JUMP
---
0x5a8: JUMPDEST 
0x5a9: V481 = 0x4
0x5ab: S[0x4] = S0
0x5ac: V482 = 0x40
0x5af: V483 = M[0x40]
0x5b2: M[V483] = S2
0x5b4: V484 = M[0x40]
0x5b5: V485 = CALLER
0x5b7: V486 = 0x0
0x5ba: V487 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x5de: V488 = SUB V483 V484
0x5df: V489 = 0x20
0x5e1: V490 = ADD 0x20 V488
0x5e3: LOG V484 V490 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef 0x0 V485
0x5e5: V491 = 0x1
0x5e7: V492 = 0x52a
0x5ea: JUMP 0x52a
---
Entry stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x1a4, 0x4aa}, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, 0x1]
Exit stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x1a4, 0x4aa}, S4, S3, S2, 0x1]

================================

Block 0x5eb
[0x5eb:0x5f2]
---
Predecessors: [0x549]
Successors: [0x1a4]
---
0x5eb JUMPDEST
0x5ec POP
0x5ed PUSH1 0x0
0x5ef SWAP2
0x5f0 SWAP1
0x5f1 POP
0x5f2 JUMP
---
0x5eb: JUMPDEST 
0x5ed: V493 = 0x0
0x5f2: JUMP 0x1a4
---
Entry stack: [V11, 0x1a4, V217, 0x0]
Stack pops: 3
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0x5f3
[0x5f3:0x608]
---
Predecessors: [0x2af]
Successors: [0x609, 0x60d]
---
0x5f3 JUMPDEST
0x5f4 PUSH1 0x2
0x5f6 SLOAD
0x5f7 PUSH1 0x0
0x5f9 SWAP1
0x5fa PUSH1 0x1
0x5fc PUSH1 0xa0
0x5fe PUSH1 0x2
0x600 EXP
0x601 SUB
0x602 AND
0x603 CALLER
0x604 EQ
0x605 PUSH2 0x60d
0x608 JUMPI
---
0x5f3: JUMPDEST 
0x5f4: V494 = 0x2
0x5f6: V495 = S[0x2]
0x5f7: V496 = 0x0
0x5fa: V497 = 0x1
0x5fc: V498 = 0xa0
0x5fe: V499 = 0x2
0x600: V500 = EXP 0x2 0xa0
0x601: V501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x602: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V495
0x603: V503 = CALLER
0x604: V504 = EQ V503 V502
0x605: V505 = 0x60d
0x608: JUMPI 0x60d V504
---
Entry stack: [V11, 0xf4, V231, V234, V236]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0xf4, V231, V234, V236, 0x0]

================================

Block 0x609
[0x609:0x60c]
---
Predecessors: [0x5f3]
Successors: []
---
0x609 PUSH1 0x0
0x60b DUP1
0x60c REVERT
---
0x609: V506 = 0x0
0x60c: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf4, V231, V234, V236, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V231, V234, V236, 0x0]

================================

Block 0x60d
[0x60d:0x61e]
---
Predecessors: [0x5f3]
Successors: [0x61f, 0x623]
---
0x60d JUMPDEST
0x60e PUSH1 0x1
0x610 PUSH1 0xa0
0x612 PUSH1 0x2
0x614 EXP
0x615 SUB
0x616 DUP5
0x617 AND
0x618 ADDRESS
0x619 EQ
0x61a ISZERO
0x61b PUSH2 0x623
0x61e JUMPI
---
0x60d: JUMPDEST 
0x60e: V507 = 0x1
0x610: V508 = 0xa0
0x612: V509 = 0x2
0x614: V510 = EXP 0x2 0xa0
0x615: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x617: V512 = AND V231 0xffffffffffffffffffffffffffffffffffffffff
0x618: V513 = ADDRESS
0x619: V514 = EQ V513 V512
0x61a: V515 = ISZERO V514
0x61b: V516 = 0x623
0x61e: JUMPI 0x623 V515
---
Entry stack: [V11, 0xf4, V231, V234, V236, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xf4, V231, V234, V236, 0x0]

================================

Block 0x61f
[0x61f:0x622]
---
Predecessors: [0x60d]
Successors: []
---
0x61f PUSH1 0x0
0x621 DUP1
0x622 REVERT
---
0x61f: V517 = 0x0
0x622: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf4, V231, V234, V236, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V231, V234, V236, 0x0]

================================

Block 0x623
[0x623:0x68b]
---
Predecessors: [0x60d]
Successors: [0x68c, 0x690]
---
0x623 JUMPDEST
0x624 POP
0x625 PUSH1 0x40
0x627 DUP1
0x628 MLOAD
0x629 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x64a DUP2
0x64b MSTORE
0x64c PUSH1 0x1
0x64e PUSH1 0xa0
0x650 PUSH1 0x2
0x652 EXP
0x653 SUB
0x654 DUP5
0x655 DUP2
0x656 AND
0x657 PUSH1 0x4
0x659 DUP4
0x65a ADD
0x65b MSTORE
0x65c PUSH1 0x24
0x65e DUP3
0x65f ADD
0x660 DUP5
0x661 SWAP1
0x662 MSTORE
0x663 SWAP2
0x664 MLOAD
0x665 DUP6
0x666 SWAP3
0x667 DUP4
0x668 AND
0x669 SWAP2
0x66a PUSH4 0xa9059cbb
0x66f SWAP2
0x670 PUSH1 0x44
0x672 DUP1
0x673 DUP4
0x674 ADD
0x675 SWAP3
0x676 PUSH1 0x20
0x678 SWAP3
0x679 SWAP2
0x67a SWAP1
0x67b DUP3
0x67c SWAP1
0x67d SUB
0x67e ADD
0x67f DUP2
0x680 PUSH1 0x0
0x682 DUP8
0x683 DUP1
0x684 EXTCODESIZE
0x685 ISZERO
0x686 DUP1
0x687 ISZERO
0x688 PUSH2 0x690
0x68b JUMPI
---
0x623: JUMPDEST 
0x625: V518 = 0x40
0x628: V519 = M[0x40]
0x629: V520 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x64b: M[V519] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x64c: V521 = 0x1
0x64e: V522 = 0xa0
0x650: V523 = 0x2
0x652: V524 = EXP 0x2 0xa0
0x653: V525 = SUB 0x10000000000000000000000000000000000000000 0x1
0x656: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x657: V527 = 0x4
0x65a: V528 = ADD V519 0x4
0x65b: M[V528] = V526
0x65c: V529 = 0x24
0x65f: V530 = ADD V519 0x24
0x662: M[V530] = V236
0x664: V531 = M[0x40]
0x668: V532 = AND V231 0xffffffffffffffffffffffffffffffffffffffff
0x66a: V533 = 0xa9059cbb
0x670: V534 = 0x44
0x674: V535 = ADD V519 0x44
0x676: V536 = 0x20
0x67d: V537 = SUB V519 V531
0x67e: V538 = ADD V537 0x44
0x680: V539 = 0x0
0x684: V540 = EXTCODESIZE V532
0x685: V541 = ISZERO V540
0x687: V542 = ISZERO V541
0x688: V543 = 0x690
0x68b: JUMPI 0x690 V542
---
Entry stack: [V11, 0xf4, V231, V234, V236, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S3, V532, 0xa9059cbb, V535, 0x20, V531, V538, V531, 0x0, V532, V541]
Exit stack: [V11, 0xf4, V231, V234, V236, V231, V532, 0xa9059cbb, V535, 0x20, V531, V538, V531, 0x0, V532, V541]

================================

Block 0x68c
[0x68c:0x68f]
---
Predecessors: [0x623]
Successors: []
---
0x68c PUSH1 0x0
0x68e DUP1
0x68f REVERT
---
0x68c: V544 = 0x0
0x68f: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf4, V231, V234, V236, V231, V532, 0xa9059cbb, V535, 0x20, V531, V538, V531, 0x0, V532, V541]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V231, V234, V236, V231, V532, 0xa9059cbb, V535, 0x20, V531, V538, V531, 0x0, V532, V541]

================================

Block 0x690
[0x690:0x69a]
---
Predecessors: [0x623]
Successors: [0x69b, 0x6a4]
---
0x690 JUMPDEST
0x691 POP
0x692 GAS
0x693 CALL
0x694 ISZERO
0x695 DUP1
0x696 ISZERO
0x697 PUSH2 0x6a4
0x69a JUMPI
---
0x690: JUMPDEST 
0x692: V545 = GAS
0x693: V546 = CALL V545 V532 0x0 V531 V538 V531 0x20
0x694: V547 = ISZERO V546
0x696: V548 = ISZERO V547
0x697: V549 = 0x6a4
0x69a: JUMPI 0x6a4 V548
---
Entry stack: [V11, 0xf4, V231, V234, V236, V231, V532, 0xa9059cbb, V535, 0x20, V531, V538, V531, 0x0, V532, V541]
Stack pops: 7
Stack additions: [V547]
Exit stack: [V11, 0xf4, V231, V234, V236, V231, V532, 0xa9059cbb, V535, V547]

================================

Block 0x69b
[0x69b:0x6a3]
---
Predecessors: [0x690]
Successors: []
---
0x69b RETURNDATASIZE
0x69c PUSH1 0x0
0x69e DUP1
0x69f RETURNDATACOPY
0x6a0 RETURNDATASIZE
0x6a1 PUSH1 0x0
0x6a3 REVERT
---
0x69b: V550 = RETURNDATASIZE
0x69c: V551 = 0x0
0x69f: RETURNDATACOPY 0x0 0x0 V550
0x6a0: V552 = RETURNDATASIZE
0x6a1: V553 = 0x0
0x6a3: REVERT 0x0 V552
---
Entry stack: [V11, 0xf4, V231, V234, V236, V231, V532, 0xa9059cbb, V535, V547]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V231, V234, V236, V231, V532, 0xa9059cbb, V535, V547]

================================

Block 0x6a4
[0x6a4:0x6b5]
---
Predecessors: [0x690]
Successors: [0x6b6, 0x6ba]
---
0x6a4 JUMPDEST
0x6a5 POP
0x6a6 POP
0x6a7 POP
0x6a8 POP
0x6a9 PUSH1 0x40
0x6ab MLOAD
0x6ac RETURNDATASIZE
0x6ad PUSH1 0x20
0x6af DUP2
0x6b0 LT
0x6b1 ISZERO
0x6b2 PUSH2 0x6ba
0x6b5 JUMPI
---
0x6a4: JUMPDEST 
0x6a9: V554 = 0x40
0x6ab: V555 = M[0x40]
0x6ac: V556 = RETURNDATASIZE
0x6ad: V557 = 0x20
0x6b0: V558 = LT V556 0x20
0x6b1: V559 = ISZERO V558
0x6b2: V560 = 0x6ba
0x6b5: JUMPI 0x6ba V559
---
Entry stack: [V11, 0xf4, V231, V234, V236, V231, V532, 0xa9059cbb, V535, V547]
Stack pops: 4
Stack additions: [V555, V556]
Exit stack: [V11, 0xf4, V231, V234, V236, V231, V555, V556]

================================

Block 0x6b6
[0x6b6:0x6b9]
---
Predecessors: [0x6a4]
Successors: []
---
0x6b6 PUSH1 0x0
0x6b8 DUP1
0x6b9 REVERT
---
0x6b6: V561 = 0x0
0x6b9: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf4, V231, V234, V236, V231, V555, V556]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V231, V234, V236, V231, V555, V556]

================================

Block 0x6ba
[0x6ba:0x70b]
---
Predecessors: [0x6a4]
Successors: [0xf4]
---
0x6ba JUMPDEST
0x6bb POP
0x6bc POP
0x6bd PUSH1 0x40
0x6bf DUP1
0x6c0 MLOAD
0x6c1 PUSH1 0x1
0x6c3 PUSH1 0xa0
0x6c5 PUSH1 0x2
0x6c7 EXP
0x6c8 SUB
0x6c9 DUP1
0x6ca DUP8
0x6cb AND
0x6cc DUP3
0x6cd MSTORE
0x6ce DUP6
0x6cf AND
0x6d0 PUSH1 0x20
0x6d2 DUP3
0x6d3 ADD
0x6d4 MSTORE
0x6d5 DUP1
0x6d6 DUP3
0x6d7 ADD
0x6d8 DUP5
0x6d9 SWAP1
0x6da MSTORE
0x6db SWAP1
0x6dc MLOAD
0x6dd PUSH32 0xfab5e7a27e02736e52f60776d307340051d8bc15aee0ef211c7a4aa2a8cdc154
0x6fe SWAP2
0x6ff DUP2
0x700 SWAP1
0x701 SUB
0x702 PUSH1 0x60
0x704 ADD
0x705 SWAP1
0x706 LOG1
0x707 POP
0x708 POP
0x709 POP
0x70a POP
0x70b JUMP
---
0x6ba: JUMPDEST 
0x6bd: V562 = 0x40
0x6c0: V563 = M[0x40]
0x6c1: V564 = 0x1
0x6c3: V565 = 0xa0
0x6c5: V566 = 0x2
0x6c7: V567 = EXP 0x2 0xa0
0x6c8: V568 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cb: V569 = AND V231 0xffffffffffffffffffffffffffffffffffffffff
0x6cd: M[V563] = V569
0x6cf: V570 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x6d0: V571 = 0x20
0x6d3: V572 = ADD V563 0x20
0x6d4: M[V572] = V570
0x6d7: V573 = ADD 0x40 V563
0x6da: M[V573] = V236
0x6dc: V574 = M[0x40]
0x6dd: V575 = 0xfab5e7a27e02736e52f60776d307340051d8bc15aee0ef211c7a4aa2a8cdc154
0x701: V576 = SUB V563 V574
0x702: V577 = 0x60
0x704: V578 = ADD 0x60 V576
0x706: LOG V574 V578 0xfab5e7a27e02736e52f60776d307340051d8bc15aee0ef211c7a4aa2a8cdc154
0x70b: JUMP 0xf4
---
Entry stack: [V11, 0xf4, V231, V234, V236, V231, V555, V556]
Stack pops: 7
Stack additions: []
Exit stack: [V11]

================================

Block 0x70c
[0x70c:0x742]
---
Predecessors: [0x2d9]
Successors: [0x10b]
---
0x70c JUMPDEST
0x70d PUSH1 0x40
0x70f DUP1
0x710 MLOAD
0x711 DUP1
0x712 DUP3
0x713 ADD
0x714 SWAP1
0x715 SWAP2
0x716 MSTORE
0x717 PUSH1 0x4
0x719 DUP2
0x71a MSTORE
0x71b PUSH32 0x504f534800000000000000000000000000000000000000000000000000000000
0x73c PUSH1 0x20
0x73e DUP3
0x73f ADD
0x740 MSTORE
0x741 DUP2
0x742 JUMP
---
0x70c: JUMPDEST 
0x70d: V579 = 0x40
0x710: V580 = M[0x40]
0x713: V581 = ADD 0x40 V580
0x716: M[0x40] = V581
0x717: V582 = 0x4
0x71a: M[V580] = 0x4
0x71b: V583 = 0x504f534800000000000000000000000000000000000000000000000000000000
0x73c: V584 = 0x20
0x73f: V585 = ADD V580 0x20
0x740: M[V585] = 0x504f534800000000000000000000000000000000000000000000000000000000
0x742: JUMP 0x10b
---
Entry stack: [V11, 0x10b]
Stack pops: 1
Stack additions: [S0, V580]
Exit stack: [V11, 0x10b, V580]

================================

Block 0x743
[0x743:0x75b]
---
Predecessors: [0x2ee]
Successors: [0x75c, 0x760]
---
0x743 JUMPDEST
0x744 CALLER
0x745 PUSH1 0x0
0x747 SWAP1
0x748 DUP2
0x749 MSTORE
0x74a PUSH1 0x3
0x74c PUSH1 0x20
0x74e MSTORE
0x74f PUSH1 0x40
0x751 DUP2
0x752 SHA3
0x753 SLOAD
0x754 PUSH1 0xff
0x756 AND
0x757 ISZERO
0x758 PUSH2 0x760
0x75b JUMPI
---
0x743: JUMPDEST 
0x744: V586 = CALLER
0x745: V587 = 0x0
0x749: M[0x0] = V586
0x74a: V588 = 0x3
0x74c: V589 = 0x20
0x74e: M[0x20] = 0x3
0x74f: V590 = 0x40
0x752: V591 = SHA3 0x0 0x40
0x753: V592 = S[V591]
0x754: V593 = 0xff
0x756: V594 = AND 0xff V592
0x757: V595 = ISZERO V594
0x758: V596 = 0x760
0x75b: JUMPI 0x760 V595
---
Entry stack: [V11, 0x1a4, V256, V258]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x1a4, V256, V258, 0x0]

================================

Block 0x75c
[0x75c:0x75f]
---
Predecessors: [0x743]
Successors: []
---
0x75c PUSH1 0x0
0x75e DUP1
0x75f REVERT
---
0x75c: V597 = 0x0
0x75f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a4, V256, V258, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a4, V256, V258, 0x0]

================================

Block 0x760
[0x760:0x76b]
---
Predecessors: [0x743]
Successors: [0x76c, 0x773]
---
0x760 JUMPDEST
0x761 PUSH1 0x5
0x763 SLOAD
0x764 PUSH1 0xff
0x766 AND
0x767 ISZERO
0x768 PUSH2 0x773
0x76b JUMPI
---
0x760: JUMPDEST 
0x761: V598 = 0x5
0x763: V599 = S[0x5]
0x764: V600 = 0xff
0x766: V601 = AND 0xff V599
0x767: V602 = ISZERO V601
0x768: V603 = 0x773
0x76b: JUMPI 0x773 V602
---
Entry stack: [V11, 0x1a4, V256, V258, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a4, V256, V258, 0x0]

================================

Block 0x76c
[0x76c:0x772]
---
Predecessors: [0x760]
Successors: [0x414]
---
0x76c POP
0x76d PUSH1 0x0
0x76f PUSH2 0x414
0x772 JUMP
---
0x76d: V604 = 0x0
0x76f: V605 = 0x414
0x772: JUMP 0x414
---
Entry stack: [V11, 0x1a4, V256, V258, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1a4, V256, V258, 0x0]

================================

Block 0x773
[0x773:0x77c]
---
Predecessors: [0x760]
Successors: [0xa66]
---
0x773 JUMPDEST
0x774 PUSH2 0x77d
0x777 DUP4
0x778 DUP4
0x779 PUSH2 0xa66
0x77c JUMP
---
0x773: JUMPDEST 
0x774: V606 = 0x77d
0x779: V607 = 0xa66
0x77c: JUMP 0xa66
---
Entry stack: [V11, 0x1a4, V256, V258, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x77d, S2, S1]
Exit stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258]

================================

Block 0x77d
[0x77d:0x783]
---
Predecessors: [0x414, 0xb1a]
Successors: [0x414]
---
0x77d JUMPDEST
0x77e SWAP1
0x77f POP
0x780 PUSH2 0x414
0x783 JUMP
---
0x77d: JUMPDEST 
0x780: V608 = 0x414
0x783: JUMP 0x414
---
Entry stack: [V11, 0x1a4, S5, S4, S3, S2, S1, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x1a4, S5, S4, S3, S2, {0x0, 0x1}]

================================

Block 0x784
[0x784:0x7ae]
---
Predecessors: [0x312, 0x3e6]
Successors: [0x1ee, 0x3f2]
---
0x784 JUMPDEST
0x785 PUSH1 0x1
0x787 PUSH1 0xa0
0x789 PUSH1 0x2
0x78b EXP
0x78c SUB
0x78d SWAP2
0x78e DUP3
0x78f AND
0x790 PUSH1 0x0
0x792 SWAP1
0x793 DUP2
0x794 MSTORE
0x795 PUSH1 0x1
0x797 PUSH1 0x20
0x799 SWAP1
0x79a DUP2
0x79b MSTORE
0x79c PUSH1 0x40
0x79e DUP1
0x79f DUP4
0x7a0 SHA3
0x7a1 SWAP4
0x7a2 SWAP1
0x7a3 SWAP5
0x7a4 AND
0x7a5 DUP3
0x7a6 MSTORE
0x7a7 SWAP2
0x7a8 SWAP1
0x7a9 SWAP2
0x7aa MSTORE
0x7ab SHA3
0x7ac SLOAD
0x7ad SWAP1
0x7ae JUMP
---
0x784: JUMPDEST 
0x785: V609 = 0x1
0x787: V610 = 0xa0
0x789: V611 = 0x2
0x78b: V612 = EXP 0x2 0xa0
0x78c: V613 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78f: V614 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x790: V615 = 0x0
0x794: M[0x0] = V614
0x795: V616 = 0x1
0x797: V617 = 0x20
0x79b: M[0x20] = 0x1
0x79c: V618 = 0x40
0x7a0: V619 = SHA3 0x0 0x40
0x7a4: V620 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x7a6: M[0x0] = V620
0x7aa: M[0x20] = V619
0x7ab: V621 = SHA3 0x0 0x40
0x7ac: V622 = S[V621]
0x7ae: JUMP {0x1ee, 0x3f2}
---
Entry stack: [V11, 0x1a4, V120, V122, S3, {0x1ee, 0x3f2}, S1, S0]
Stack pops: 3
Stack additions: [V622]
Exit stack: [V11, 0x1a4, V120, V122, S3, V622]

================================

Block 0x7af
[0x7af:0x7c1]
---
Predecessors: [0x339]
Successors: [0x7c2, 0x7c6]
---
0x7af JUMPDEST
0x7b0 PUSH1 0x2
0x7b2 SLOAD
0x7b3 PUSH1 0x1
0x7b5 PUSH1 0xa0
0x7b7 PUSH1 0x2
0x7b9 EXP
0x7ba SUB
0x7bb AND
0x7bc CALLER
0x7bd EQ
0x7be PUSH2 0x7c6
0x7c1 JUMPI
---
0x7af: JUMPDEST 
0x7b0: V623 = 0x2
0x7b2: V624 = S[0x2]
0x7b3: V625 = 0x1
0x7b5: V626 = 0xa0
0x7b7: V627 = 0x2
0x7b9: V628 = EXP 0x2 0xa0
0x7ba: V629 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7bb: V630 = AND 0xffffffffffffffffffffffffffffffffffffffff V624
0x7bc: V631 = CALLER
0x7bd: V632 = EQ V631 V630
0x7be: V633 = 0x7c6
0x7c1: JUMPI 0x7c6 V632
---
Entry stack: [V11, 0xf4, V289, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V289, V293]

================================

Block 0x7c2
[0x7c2:0x7c5]
---
Predecessors: [0x7af]
Successors: []
---
0x7c2 PUSH1 0x0
0x7c4 DUP1
0x7c5 REVERT
---
0x7c2: V634 = 0x0
0x7c5: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf4, V289, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V289, V293]

================================

Block 0x7c6
[0x7c6:0x7d7]
---
Predecessors: [0x7af]
Successors: [0x7d8, 0x7dc]
---
0x7c6 JUMPDEST
0x7c7 CALLER
0x7c8 PUSH1 0x1
0x7ca PUSH1 0xa0
0x7cc PUSH1 0x2
0x7ce EXP
0x7cf SUB
0x7d0 DUP4
0x7d1 AND
0x7d2 EQ
0x7d3 ISZERO
0x7d4 PUSH2 0x7dc
0x7d7 JUMPI
---
0x7c6: JUMPDEST 
0x7c7: V635 = CALLER
0x7c8: V636 = 0x1
0x7ca: V637 = 0xa0
0x7cc: V638 = 0x2
0x7ce: V639 = EXP 0x2 0xa0
0x7cf: V640 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d1: V641 = AND V289 0xffffffffffffffffffffffffffffffffffffffff
0x7d2: V642 = EQ V641 V635
0x7d3: V643 = ISZERO V642
0x7d4: V644 = 0x7dc
0x7d7: JUMPI 0x7dc V643
---
Entry stack: [V11, 0xf4, V289, V293]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xf4, V289, V293]

================================

Block 0x7d8
[0x7d8:0x7db]
---
Predecessors: [0x7c6]
Successors: []
---
0x7d8 PUSH1 0x0
0x7da DUP1
0x7db REVERT
---
0x7d8: V645 = 0x0
0x7db: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf4, V289, V293]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V289, V293]

================================

Block 0x7dc
[0x7dc:0x83f]
---
Predecessors: [0x7c6]
Successors: [0xf4]
---
0x7dc JUMPDEST
0x7dd PUSH1 0x1
0x7df PUSH1 0xa0
0x7e1 PUSH1 0x2
0x7e3 EXP
0x7e4 SUB
0x7e5 DUP3
0x7e6 AND
0x7e7 PUSH1 0x0
0x7e9 DUP2
0x7ea DUP2
0x7eb MSTORE
0x7ec PUSH1 0x3
0x7ee PUSH1 0x20
0x7f0 SWAP1
0x7f1 DUP2
0x7f2 MSTORE
0x7f3 PUSH1 0x40
0x7f5 SWAP2
0x7f6 DUP3
0x7f7 SWAP1
0x7f8 SHA3
0x7f9 DUP1
0x7fa SLOAD
0x7fb PUSH1 0xff
0x7fd NOT
0x7fe AND
0x7ff DUP6
0x800 ISZERO
0x801 ISZERO
0x802 SWAP1
0x803 DUP2
0x804 OR
0x805 SWAP1
0x806 SWAP2
0x807 SSTORE
0x808 DUP3
0x809 MLOAD
0x80a SWAP4
0x80b DUP5
0x80c MSTORE
0x80d SWAP1
0x80e DUP4
0x80f ADD
0x810 MSTORE
0x811 DUP1
0x812 MLOAD
0x813 PUSH32 0x48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a5
0x834 SWAP3
0x835 DUP2
0x836 SWAP1
0x837 SUB
0x838 SWAP1
0x839 SWAP2
0x83a ADD
0x83b SWAP1
0x83c LOG1
0x83d POP
0x83e POP
0x83f JUMP
---
0x7dc: JUMPDEST 
0x7dd: V646 = 0x1
0x7df: V647 = 0xa0
0x7e1: V648 = 0x2
0x7e3: V649 = EXP 0x2 0xa0
0x7e4: V650 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e6: V651 = AND V289 0xffffffffffffffffffffffffffffffffffffffff
0x7e7: V652 = 0x0
0x7eb: M[0x0] = V651
0x7ec: V653 = 0x3
0x7ee: V654 = 0x20
0x7f2: M[0x20] = 0x3
0x7f3: V655 = 0x40
0x7f8: V656 = SHA3 0x0 0x40
0x7fa: V657 = S[V656]
0x7fb: V658 = 0xff
0x7fd: V659 = NOT 0xff
0x7fe: V660 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V657
0x800: V661 = ISZERO V293
0x801: V662 = ISZERO V661
0x804: V663 = OR V662 V660
0x807: S[V656] = V663
0x809: V664 = M[0x40]
0x80c: M[V664] = V651
0x80f: V665 = ADD V664 0x20
0x810: M[V665] = V662
0x812: V666 = M[0x40]
0x813: V667 = 0x48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a5
0x837: V668 = SUB V664 V666
0x83a: V669 = ADD 0x40 V668
0x83c: LOG V666 V669 0x48335238b4855f35377ed80f164e8c6f3c366e54ac00b96a6402d4a9814a03a5
0x83f: JUMP 0xf4
---
Entry stack: [V11, 0xf4, V289, V293]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x840
[0x840:0x8a5]
---
Predecessors: [0x407]
Successors: [0x411]
---
0x840 JUMPDEST
0x841 CALLER
0x842 PUSH1 0x0
0x844 DUP2
0x845 DUP2
0x846 MSTORE
0x847 PUSH1 0x1
0x849 PUSH1 0x20
0x84b SWAP1
0x84c DUP2
0x84d MSTORE
0x84e PUSH1 0x40
0x850 DUP1
0x851 DUP4
0x852 SHA3
0x853 PUSH1 0x1
0x855 PUSH1 0xa0
0x857 PUSH1 0x2
0x859 EXP
0x85a SUB
0x85b DUP8
0x85c AND
0x85d DUP1
0x85e DUP6
0x85f MSTORE
0x860 SWAP1
0x861 DUP4
0x862 MSTORE
0x863 DUP2
0x864 DUP5
0x865 SHA3
0x866 DUP7
0x867 SWAP1
0x868 SSTORE
0x869 DUP2
0x86a MLOAD
0x86b DUP7
0x86c DUP2
0x86d MSTORE
0x86e SWAP2
0x86f MLOAD
0x870 SWAP4
0x871 SWAP5
0x872 SWAP1
0x873 SWAP4
0x874 SWAP1
0x875 SWAP3
0x876 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x897 SWAP3
0x898 DUP3
0x899 SWAP1
0x89a SUB
0x89b ADD
0x89c SWAP1
0x89d LOG3
0x89e POP
0x89f PUSH1 0x1
0x8a1 SWAP3
0x8a2 SWAP2
0x8a3 POP
0x8a4 POP
0x8a5 JUMP
---
0x840: JUMPDEST 
0x841: V670 = CALLER
0x842: V671 = 0x0
0x846: M[0x0] = V670
0x847: V672 = 0x1
0x849: V673 = 0x20
0x84d: M[0x20] = 0x1
0x84e: V674 = 0x40
0x852: V675 = SHA3 0x0 0x40
0x853: V676 = 0x1
0x855: V677 = 0xa0
0x857: V678 = 0x2
0x859: V679 = EXP 0x2 0xa0
0x85a: V680 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85c: V681 = AND V120 0xffffffffffffffffffffffffffffffffffffffff
0x85f: M[0x0] = V681
0x862: M[0x20] = V675
0x865: V682 = SHA3 0x0 0x40
0x868: S[V682] = V122
0x86a: V683 = M[0x40]
0x86d: M[V683] = V122
0x86f: V684 = M[0x40]
0x876: V685 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x89a: V686 = SUB V683 V684
0x89b: V687 = ADD V686 0x20
0x89d: LOG V684 V687 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V670 V681
0x89f: V688 = 0x1
0x8a5: JUMP 0x411
---
Entry stack: [V11, 0x1a4, V120, V122, S3, 0x411, V120, V122]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V11, 0x1a4, V120, V122, S3, 0x1]

================================

Block 0x8a6
[0x8a6:0x8b8]
---
Predecessors: [0x49f]
Successors: [0x8b9, 0x8bd]
---
0x8a6 JUMPDEST
0x8a7 PUSH1 0x0
0x8a9 PUSH1 0x1
0x8ab PUSH1 0xa0
0x8ad PUSH1 0x2
0x8af EXP
0x8b0 SUB
0x8b1 DUP4
0x8b2 AND
0x8b3 ISZERO
0x8b4 ISZERO
0x8b5 PUSH2 0x8bd
0x8b8 JUMPI
---
0x8a6: JUMPDEST 
0x8a7: V689 = 0x0
0x8a9: V690 = 0x1
0x8ab: V691 = 0xa0
0x8ad: V692 = 0x2
0x8af: V693 = EXP 0x2 0xa0
0x8b0: V694 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b2: V695 = AND V173 0xffffffffffffffffffffffffffffffffffffffff
0x8b3: V696 = ISZERO V695
0x8b4: V697 = ISZERO V696
0x8b5: V698 = 0x8bd
0x8b8: JUMPI 0x8bd V697
---
Entry stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0]

================================

Block 0x8b9
[0x8b9:0x8bc]
---
Predecessors: [0x8a6]
Successors: []
---
0x8b9 PUSH1 0x0
0x8bb DUP1
0x8bc REVERT
---
0x8b9: V699 = 0x0
0x8bc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0]

================================

Block 0x8bd
[0x8bd:0x8e8]
---
Predecessors: [0x8a6]
Successors: [0x8e9, 0x8f0]
---
0x8bd JUMPDEST
0x8be PUSH1 0x1
0x8c0 PUSH1 0xa0
0x8c2 PUSH1 0x2
0x8c4 EXP
0x8c5 SUB
0x8c6 DUP5
0x8c7 AND
0x8c8 PUSH1 0x0
0x8ca SWAP1
0x8cb DUP2
0x8cc MSTORE
0x8cd PUSH1 0x1
0x8cf PUSH1 0x20
0x8d1 SWAP1
0x8d2 DUP2
0x8d3 MSTORE
0x8d4 PUSH1 0x40
0x8d6 DUP1
0x8d7 DUP4
0x8d8 SHA3
0x8d9 CALLER
0x8da DUP5
0x8db MSTORE
0x8dc SWAP1
0x8dd SWAP2
0x8de MSTORE
0x8df SWAP1
0x8e0 SHA3
0x8e1 SLOAD
0x8e2 DUP3
0x8e3 GT
0x8e4 ISZERO
0x8e5 PUSH2 0x8f0
0x8e8 JUMPI
---
0x8bd: JUMPDEST 
0x8be: V700 = 0x1
0x8c0: V701 = 0xa0
0x8c2: V702 = 0x2
0x8c4: V703 = EXP 0x2 0xa0
0x8c5: V704 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c7: V705 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x8c8: V706 = 0x0
0x8cc: M[0x0] = V705
0x8cd: V707 = 0x1
0x8cf: V708 = 0x20
0x8d3: M[0x20] = 0x1
0x8d4: V709 = 0x40
0x8d8: V710 = SHA3 0x0 0x40
0x8d9: V711 = CALLER
0x8db: M[0x0] = V711
0x8de: M[0x20] = V710
0x8e0: V712 = SHA3 0x0 0x40
0x8e1: V713 = S[V712]
0x8e3: V714 = GT V175 V713
0x8e4: V715 = ISZERO V714
0x8e5: V716 = 0x8f0
0x8e8: JUMPI 0x8f0 V715
---
Entry stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0]

================================

Block 0x8e9
[0x8e9:0x8ef]
---
Predecessors: [0x8bd]
Successors: [0x4ad]
---
0x8e9 POP
0x8ea PUSH1 0x0
0x8ec PUSH2 0x4ad
0x8ef JUMP
---
0x8ea: V717 = 0x0
0x8ec: V718 = 0x4ad
0x8ef: JUMP 0x4ad
---
Entry stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0]

================================

Block 0x8f0
[0x8f0:0x910]
---
Predecessors: [0x8bd]
Successors: [0x911, 0x918]
---
0x8f0 JUMPDEST
0x8f1 PUSH1 0x1
0x8f3 PUSH1 0xa0
0x8f5 PUSH1 0x2
0x8f7 EXP
0x8f8 SUB
0x8f9 DUP5
0x8fa AND
0x8fb PUSH1 0x0
0x8fd SWAP1
0x8fe DUP2
0x8ff MSTORE
0x900 PUSH1 0x20
0x902 DUP2
0x903 SWAP1
0x904 MSTORE
0x905 PUSH1 0x40
0x907 SWAP1
0x908 SHA3
0x909 SLOAD
0x90a DUP3
0x90b GT
0x90c ISZERO
0x90d PUSH2 0x918
0x910 JUMPI
---
0x8f0: JUMPDEST 
0x8f1: V719 = 0x1
0x8f3: V720 = 0xa0
0x8f5: V721 = 0x2
0x8f7: V722 = EXP 0x2 0xa0
0x8f8: V723 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8fa: V724 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x8fb: V725 = 0x0
0x8ff: M[0x0] = V724
0x900: V726 = 0x20
0x904: M[0x20] = 0x0
0x905: V727 = 0x40
0x908: V728 = SHA3 0x0 0x40
0x909: V729 = S[V728]
0x90b: V730 = GT V175 V729
0x90c: V731 = ISZERO V730
0x90d: V732 = 0x918
0x910: JUMPI 0x918 V731
---
Entry stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0]

================================

Block 0x911
[0x911:0x917]
---
Predecessors: [0x8f0]
Successors: [0x4ad]
---
0x911 POP
0x912 PUSH1 0x0
0x914 PUSH2 0x4ad
0x917 JUMP
---
0x912: V733 = 0x0
0x914: V734 = 0x4ad
0x917: JUMP 0x4ad
---
Entry stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0]

================================

Block 0x918
[0x918:0x922]
---
Predecessors: [0x8f0]
Successors: [0x923, 0x93a]
---
0x918 JUMPDEST
0x919 PUSH1 0x0
0x91b DUP3
0x91c GT
0x91d DUP1
0x91e ISZERO
0x91f PUSH2 0x93a
0x922 JUMPI
---
0x918: JUMPDEST 
0x919: V735 = 0x0
0x91c: V736 = GT V175 0x0
0x91e: V737 = ISZERO V736
0x91f: V738 = 0x93a
0x922: JUMPI 0x93a V737
---
Entry stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V736]
Exit stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0, V736]

================================

Block 0x923
[0x923:0x939]
---
Predecessors: [0x918]
Successors: [0x93a]
---
0x923 POP
0x924 DUP3
0x925 PUSH1 0x1
0x927 PUSH1 0xa0
0x929 PUSH1 0x2
0x92b EXP
0x92c SUB
0x92d AND
0x92e DUP5
0x92f PUSH1 0x1
0x931 PUSH1 0xa0
0x933 PUSH1 0x2
0x935 EXP
0x936 SUB
0x937 AND
0x938 EQ
0x939 ISZERO
---
0x925: V739 = 0x1
0x927: V740 = 0xa0
0x929: V741 = 0x2
0x92b: V742 = EXP 0x2 0xa0
0x92c: V743 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92d: V744 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x92f: V745 = 0x1
0x931: V746 = 0xa0
0x933: V747 = 0x2
0x935: V748 = EXP 0x2 0xa0
0x936: V749 = SUB 0x10000000000000000000000000000000000000000 0x1
0x937: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0x938: V751 = EQ V750 V744
0x939: V752 = ISZERO V751
---
Entry stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0, V736]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V752]
Exit stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0, V752]

================================

Block 0x93a
[0x93a:0x93f]
---
Predecessors: [0x918, 0x923]
Successors: [0x940, 0x9f0]
---
0x93a JUMPDEST
0x93b ISZERO
0x93c PUSH2 0x9f0
0x93f JUMPI
---
0x93a: JUMPDEST 
0x93b: V753 = ISZERO S0
0x93c: V754 = 0x9f0
0x93f: JUMPI 0x9f0 V753
---
Entry stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0]

================================

Block 0x940
[0x940:0x96c]
---
Predecessors: [0x93a]
Successors: [0xa45]
---
0x940 PUSH1 0x1
0x942 PUSH1 0xa0
0x944 PUSH1 0x2
0x946 EXP
0x947 SUB
0x948 DUP5
0x949 AND
0x94a PUSH1 0x0
0x94c SWAP1
0x94d DUP2
0x94e MSTORE
0x94f PUSH1 0x1
0x951 PUSH1 0x20
0x953 SWAP1
0x954 DUP2
0x955 MSTORE
0x956 PUSH1 0x40
0x958 DUP1
0x959 DUP4
0x95a SHA3
0x95b CALLER
0x95c DUP5
0x95d MSTORE
0x95e SWAP1
0x95f SWAP2
0x960 MSTORE
0x961 SWAP1
0x962 SHA3
0x963 SLOAD
0x964 PUSH2 0x96d
0x967 SWAP1
0x968 DUP4
0x969 PUSH2 0xa45
0x96c JUMP
---
0x940: V755 = 0x1
0x942: V756 = 0xa0
0x944: V757 = 0x2
0x946: V758 = EXP 0x2 0xa0
0x947: V759 = SUB 0x10000000000000000000000000000000000000000 0x1
0x949: V760 = AND V170 0xffffffffffffffffffffffffffffffffffffffff
0x94a: V761 = 0x0
0x94e: M[0x0] = V760
0x94f: V762 = 0x1
0x951: V763 = 0x20
0x955: M[0x20] = 0x1
0x956: V764 = 0x40
0x95a: V765 = SHA3 0x0 0x40
0x95b: V766 = CALLER
0x95d: M[0x0] = V766
0x960: M[0x20] = V765
0x962: V767 = SHA3 0x0 0x40
0x963: V768 = S[V767]
0x964: V769 = 0x96d
0x969: V770 = 0xa45
0x96c: JUMP 0xa45
---
Entry stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x96d, V768, S1]
Exit stack: [V11, 0x1a4, V170, V173, V175, 0x0, 0x4aa, V170, V173, V175, 0x0, 0x96d, V768, V175]

================================

Block 0x96d
[0x96d:0x9a6]
---
Predecessors: [0xa51]
Successors: [0xa45]
---
0x96d JUMPDEST
0x96e PUSH1 0x1
0x970 PUSH1 0xa0
0x972 PUSH1 0x2
0x974 EXP
0x975 SUB
0x976 DUP6
0x977 AND
0x978 PUSH1 0x0
0x97a DUP2
0x97b DUP2
0x97c MSTORE
0x97d PUSH1 0x1
0x97f PUSH1 0x20
0x981 SWAP1
0x982 DUP2
0x983 MSTORE
0x984 PUSH1 0x40
0x986 DUP1
0x987 DUP4
0x988 SHA3
0x989 CALLER
0x98a DUP5
0x98b MSTORE
0x98c DUP3
0x98d MSTORE
0x98e DUP1
0x98f DUP4
0x990 SHA3
0x991 SWAP5
0x992 SWAP1
0x993 SWAP5
0x994 SSTORE
0x995 SWAP2
0x996 DUP2
0x997 MSTORE
0x998 SWAP1
0x999 DUP2
0x99a SWAP1
0x99b MSTORE
0x99c SHA3
0x99d SLOAD
0x99e PUSH2 0x9a7
0x9a1 SWAP1
0x9a2 DUP4
0x9a3 PUSH2 0xa45
0x9a6 JUMP
---
0x96d: JUMPDEST 
0x96e: V771 = 0x1
0x970: V772 = 0xa0
0x972: V773 = 0x2
0x974: V774 = EXP 0x2 0xa0
0x975: V775 = SUB 0x10000000000000000000000000000000000000000 0x1
0x977: V776 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x978: V777 = 0x0
0x97c: M[0x0] = V776
0x97d: V778 = 0x1
0x97f: V779 = 0x20
0x983: M[0x20] = 0x1
0x984: V780 = 0x40
0x988: V781 = SHA3 0x0 0x40
0x989: V782 = CALLER
0x98b: M[0x0] = V782
0x98d: M[0x20] = V781
0x990: V783 = SHA3 0x0 0x40
0x994: S[V783] = V838
0x997: M[0x0] = V776
0x99b: M[0x20] = 0x0
0x99c: V784 = SHA3 0x0 0x40
0x99d: V785 = S[V784]
0x99e: V786 = 0x9a7
0x9a3: V787 = 0xa45
0x9a6: JUMP 0xa45
---
Entry stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x4aa}, S4, S3, S2, 0x0, V838]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x9a7, V785, S2]
Exit stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x4aa}, S4, S3, S2, 0x0, 0x9a7, V785, S2]

================================

Block 0x9a7
[0x9a7:0x9d5]
---
Predecessors: [0xa51]
Successors: [0xa57]
---
0x9a7 JUMPDEST
0x9a8 PUSH1 0x1
0x9aa PUSH1 0xa0
0x9ac PUSH1 0x2
0x9ae EXP
0x9af SUB
0x9b0 DUP1
0x9b1 DUP7
0x9b2 AND
0x9b3 PUSH1 0x0
0x9b5 SWAP1
0x9b6 DUP2
0x9b7 MSTORE
0x9b8 PUSH1 0x20
0x9ba DUP2
0x9bb SWAP1
0x9bc MSTORE
0x9bd PUSH1 0x40
0x9bf DUP1
0x9c0 DUP3
0x9c1 SHA3
0x9c2 SWAP4
0x9c3 SWAP1
0x9c4 SWAP4
0x9c5 SSTORE
0x9c6 SWAP1
0x9c7 DUP6
0x9c8 AND
0x9c9 DUP2
0x9ca MSTORE
0x9cb SHA3
0x9cc SLOAD
0x9cd PUSH2 0x9d6
0x9d0 SWAP1
0x9d1 DUP4
0x9d2 PUSH2 0xa57
0x9d5 JUMP
---
0x9a7: JUMPDEST 
0x9a8: V788 = 0x1
0x9aa: V789 = 0xa0
0x9ac: V790 = 0x2
0x9ae: V791 = EXP 0x2 0xa0
0x9af: V792 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b2: V793 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x9b3: V794 = 0x0
0x9b7: M[0x0] = V793
0x9b8: V795 = 0x20
0x9bc: M[0x20] = 0x0
0x9bd: V796 = 0x40
0x9c1: V797 = SHA3 0x0 0x40
0x9c5: S[V797] = V838
0x9c8: V798 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x9ca: M[0x0] = V798
0x9cb: V799 = SHA3 0x0 0x40
0x9cc: V800 = S[V799]
0x9cd: V801 = 0x9d6
0x9d2: V802 = 0xa57
0x9d5: JUMP 0xa57
---
Entry stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x4aa}, S4, S3, S2, 0x0, V838]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x9d6, V800, S2]
Exit stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x4aa}, S4, S3, S2, 0x0, 0x9d6, V800, S2]

================================

Block 0x9d6
[0x9d6:0x9ef]
---
Predecessors: [0x4ad]
Successors: [0x9f0]
---
0x9d6 JUMPDEST
0x9d7 PUSH1 0x1
0x9d9 PUSH1 0xa0
0x9db PUSH1 0x2
0x9dd EXP
0x9de SUB
0x9df DUP5
0x9e0 AND
0x9e1 PUSH1 0x0
0x9e3 SWAP1
0x9e4 DUP2
0x9e5 MSTORE
0x9e6 PUSH1 0x20
0x9e8 DUP2
0x9e9 SWAP1
0x9ea MSTORE
0x9eb PUSH1 0x40
0x9ed SWAP1
0x9ee SHA3
0x9ef SSTORE
---
0x9d6: JUMPDEST 
0x9d7: V803 = 0x1
0x9d9: V804 = 0xa0
0x9db: V805 = 0x2
0x9dd: V806 = EXP 0x2 0xa0
0x9de: V807 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e0: V808 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x9e1: V809 = 0x0
0x9e5: M[0x0] = V808
0x9e6: V810 = 0x20
0x9ea: M[0x20] = 0x0
0x9eb: V811 = 0x40
0x9ee: V812 = SHA3 0x0 0x40
0x9ef: S[V812] = S0
---
Entry stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x1a4, 0x4aa}, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1]
Exit stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x1a4, 0x4aa}, S4, S3, S2, S1]

================================

Block 0x9f0
[0x9f0:0xa44]
---
Predecessors: [0x93a, 0x9d6]
Successors: [0x1a4, 0x4aa]
---
0x9f0 JUMPDEST
0x9f1 DUP3
0x9f2 PUSH1 0x1
0x9f4 PUSH1 0xa0
0x9f6 PUSH1 0x2
0x9f8 EXP
0x9f9 SUB
0x9fa AND
0x9fb DUP5
0x9fc PUSH1 0x1
0x9fe PUSH1 0xa0
0xa00 PUSH1 0x2
0xa02 EXP
0xa03 SUB
0xa04 AND
0xa05 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa26 DUP5
0xa27 PUSH1 0x40
0xa29 MLOAD
0xa2a DUP1
0xa2b DUP3
0xa2c DUP2
0xa2d MSTORE
0xa2e PUSH1 0x20
0xa30 ADD
0xa31 SWAP2
0xa32 POP
0xa33 POP
0xa34 PUSH1 0x40
0xa36 MLOAD
0xa37 DUP1
0xa38 SWAP2
0xa39 SUB
0xa3a SWAP1
0xa3b LOG3
0xa3c POP
0xa3d PUSH1 0x1
0xa3f SWAP4
0xa40 SWAP3
0xa41 POP
0xa42 POP
0xa43 POP
0xa44 JUMP
---
0x9f0: JUMPDEST 
0x9f2: V813 = 0x1
0x9f4: V814 = 0xa0
0x9f6: V815 = 0x2
0x9f8: V816 = EXP 0x2 0xa0
0x9f9: V817 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9fa: V818 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x9fc: V819 = 0x1
0x9fe: V820 = 0xa0
0xa00: V821 = 0x2
0xa02: V822 = EXP 0x2 0xa0
0xa03: V823 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa04: V824 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xa05: V825 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa27: V826 = 0x40
0xa29: V827 = M[0x40]
0xa2d: M[V827] = S1
0xa2e: V828 = 0x20
0xa30: V829 = ADD 0x20 V827
0xa34: V830 = 0x40
0xa36: V831 = M[0x40]
0xa39: V832 = SUB V829 V831
0xa3b: LOG V831 V832 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V824 V818
0xa3d: V833 = 0x1
0xa44: JUMP {0x0, 0x1a4, 0x4aa}
---
Entry stack: [V11, 0x1a4, S8, S7, S6, S5, {0x0, 0x1a4, 0x4aa}, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V11, 0x1a4, S8, S7, S6, S5, 0x1]

================================

Block 0xa45
[0xa45:0xa4f]
---
Predecessors: [0x553, 0x940, 0x96d, 0xabb]
Successors: [0xa50, 0xa51]
---
0xa45 JUMPDEST
0xa46 PUSH1 0x0
0xa48 DUP3
0xa49 DUP3
0xa4a GT
0xa4b ISZERO
0xa4c PUSH2 0xa51
0xa4f JUMPI
---
0xa45: JUMPDEST 
0xa46: V834 = 0x0
0xa4a: V835 = GT S0 S1
0xa4b: V836 = ISZERO V835
0xa4c: V837 = 0xa51
0xa4f: JUMPI 0xa51 V836
---
Entry stack: [V11, 0x1a4, S11, S10, S9, S8, {0x0, 0x4aa}, S6, S5, S4, 0x0, {0x562, 0x96d, 0x9a7, 0xad4}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x1a4, S11, S10, S9, S8, {0x0, 0x4aa}, S6, S5, S4, 0x0, {0x562, 0x96d, 0x9a7, 0xad4}, S1, S0, 0x0]

================================

Block 0xa50
[0xa50:0xa50]
---
Predecessors: [0xa45]
Successors: []
---
0xa50 INVALID
---
0xa50: INVALID 
---
Entry stack: [V11, 0x1a4, S12, S11, S10, S9, {0x0, 0x4aa}, S7, S6, S5, 0x0, {0x562, 0x96d, 0x9a7, 0xad4}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a4, S12, S11, S10, S9, {0x0, 0x4aa}, S7, S6, S5, 0x0, {0x562, 0x96d, 0x9a7, 0xad4}, S2, S1, 0x0]

================================

Block 0xa51
[0xa51:0xa56]
---
Predecessors: [0xa45]
Successors: [0x562, 0x96d, 0x9a7, 0xad4]
---
0xa51 JUMPDEST
0xa52 POP
0xa53 SWAP1
0xa54 SUB
0xa55 SWAP1
0xa56 JUMP
---
0xa51: JUMPDEST 
0xa54: V838 = SUB S2 S1
0xa56: JUMP {0x562, 0x96d, 0x9a7, 0xad4}
---
Entry stack: [V11, 0x1a4, S12, S11, S10, S9, {0x0, 0x4aa}, S7, S6, S5, 0x0, {0x562, 0x96d, 0x9a7, 0xad4}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V838]
Exit stack: [V11, 0x1a4, S12, S11, S10, S9, {0x0, 0x4aa}, S7, S6, S5, 0x0, V838]

================================

Block 0xa57
[0xa57:0xa64]
---
Predecessors: [0x571, 0x58b, 0x9a7, 0xad4]
Successors: [0x4ad, 0xa65]
---
0xa57 JUMPDEST
0xa58 PUSH1 0x0
0xa5a DUP3
0xa5b DUP3
0xa5c ADD
0xa5d DUP4
0xa5e DUP2
0xa5f LT
0xa60 ISZERO
0xa61 PUSH2 0x4ad
0xa64 JUMPI
---
0xa57: JUMPDEST 
0xa58: V839 = 0x0
0xa5c: V840 = ADD S0 S1
0xa5f: V841 = LT V840 S1
0xa60: V842 = ISZERO V841
0xa61: V843 = 0x4ad
0xa64: JUMPI 0x4ad V842
---
Entry stack: [V11, 0x1a4, S11, S10, S9, S8, {0x0, 0x1a4, 0x4aa}, S6, S5, S4, S3, {0x58b, 0x5a8, 0x9d6, 0xb00}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V840]
Exit stack: [V11, 0x1a4, S11, S10, S9, S8, {0x0, 0x1a4, 0x4aa}, S6, S5, S4, S3, {0x58b, 0x5a8, 0x9d6, 0xb00}, S1, S0, 0x0, V840]

================================

Block 0xa65
[0xa65:0xa65]
---
Predecessors: [0xa57]
Successors: []
---
0xa65 INVALID
---
0xa65: INVALID 
---
Entry stack: [V11, 0x1a4, S13, S12, S11, S10, {0x0, 0x1a4, 0x4aa}, S8, S7, S6, S5, {0x58b, 0x5a8, 0x9d6, 0xb00}, S3, S2, 0x0, V840]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a4, S13, S12, S11, S10, {0x0, 0x1a4, 0x4aa}, S8, S7, S6, S5, {0x58b, 0x5a8, 0x9d6, 0xb00}, S3, S2, 0x0, V840]

================================

Block 0xa66
[0xa66:0xa78]
---
Predecessors: [0x773]
Successors: [0xa79, 0xa7d]
---
0xa66 JUMPDEST
0xa67 PUSH1 0x0
0xa69 PUSH1 0x1
0xa6b PUSH1 0xa0
0xa6d PUSH1 0x2
0xa6f EXP
0xa70 SUB
0xa71 DUP4
0xa72 AND
0xa73 ISZERO
0xa74 ISZERO
0xa75 PUSH2 0xa7d
0xa78 JUMPI
---
0xa66: JUMPDEST 
0xa67: V844 = 0x0
0xa69: V845 = 0x1
0xa6b: V846 = 0xa0
0xa6d: V847 = 0x2
0xa6f: V848 = EXP 0x2 0xa0
0xa70: V849 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa72: V850 = AND V256 0xffffffffffffffffffffffffffffffffffffffff
0xa73: V851 = ISZERO V850
0xa74: V852 = ISZERO V851
0xa75: V853 = 0xa7d
0xa78: JUMPI 0xa7d V852
---
Entry stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258, 0x0]

================================

Block 0xa79
[0xa79:0xa7c]
---
Predecessors: [0xa66]
Successors: []
---
0xa79 PUSH1 0x0
0xa7b DUP1
0xa7c REVERT
---
0xa79: V854 = 0x0
0xa7c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258, 0x0]

================================

Block 0xa7d
[0xa7d:0xa94]
---
Predecessors: [0xa66]
Successors: [0xa95, 0xa9c]
---
0xa7d JUMPDEST
0xa7e CALLER
0xa7f PUSH1 0x0
0xa81 SWAP1
0xa82 DUP2
0xa83 MSTORE
0xa84 PUSH1 0x20
0xa86 DUP2
0xa87 SWAP1
0xa88 MSTORE
0xa89 PUSH1 0x40
0xa8b SWAP1
0xa8c SHA3
0xa8d SLOAD
0xa8e DUP3
0xa8f GT
0xa90 ISZERO
0xa91 PUSH2 0xa9c
0xa94 JUMPI
---
0xa7d: JUMPDEST 
0xa7e: V855 = CALLER
0xa7f: V856 = 0x0
0xa83: M[0x0] = V855
0xa84: V857 = 0x20
0xa88: M[0x20] = 0x0
0xa89: V858 = 0x40
0xa8c: V859 = SHA3 0x0 0x40
0xa8d: V860 = S[V859]
0xa8f: V861 = GT V258 V860
0xa90: V862 = ISZERO V861
0xa91: V863 = 0xa9c
0xa94: JUMPI 0xa9c V862
---
Entry stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258, 0x0]

================================

Block 0xa95
[0xa95:0xa9b]
---
Predecessors: [0xa7d]
Successors: [0x414]
---
0xa95 POP
0xa96 PUSH1 0x0
0xa98 PUSH2 0x414
0xa9b JUMP
---
0xa96: V864 = 0x0
0xa98: V865 = 0x414
0xa9b: JUMP 0x414
---
Entry stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258, 0x0]

================================

Block 0xa9c
[0xa9c:0xaa6]
---
Predecessors: [0xa7d]
Successors: [0xaa7, 0xab5]
---
0xa9c JUMPDEST
0xa9d PUSH1 0x0
0xa9f DUP3
0xaa0 GT
0xaa1 DUP1
0xaa2 ISZERO
0xaa3 PUSH2 0xab5
0xaa6 JUMPI
---
0xa9c: JUMPDEST 
0xa9d: V866 = 0x0
0xaa0: V867 = GT V258 0x0
0xaa2: V868 = ISZERO V867
0xaa3: V869 = 0xab5
0xaa6: JUMPI 0xab5 V868
---
Entry stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V867]
Exit stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258, 0x0, V867]

================================

Block 0xaa7
[0xaa7:0xab4]
---
Predecessors: [0xa9c]
Successors: [0xab5]
---
0xaa7 POP
0xaa8 CALLER
0xaa9 PUSH1 0x1
0xaab PUSH1 0xa0
0xaad PUSH1 0x2
0xaaf EXP
0xab0 SUB
0xab1 DUP5
0xab2 AND
0xab3 EQ
0xab4 ISZERO
---
0xaa8: V870 = CALLER
0xaa9: V871 = 0x1
0xaab: V872 = 0xa0
0xaad: V873 = 0x2
0xaaf: V874 = EXP 0x2 0xa0
0xab0: V875 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab2: V876 = AND V256 0xffffffffffffffffffffffffffffffffffffffff
0xab3: V877 = EQ V876 V870
0xab4: V878 = ISZERO V877
---
Entry stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258, 0x0, V867]
Stack pops: 4
Stack additions: [S3, S2, S1, V878]
Exit stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258, 0x0, V878]

================================

Block 0xab5
[0xab5:0xaba]
---
Predecessors: [0xa9c, 0xaa7]
Successors: [0xabb, 0xb1a]
---
0xab5 JUMPDEST
0xab6 ISZERO
0xab7 PUSH2 0xb1a
0xaba JUMPI
---
0xab5: JUMPDEST 
0xab6: V879 = ISZERO S0
0xab7: V880 = 0xb1a
0xaba: JUMPI 0xb1a V879
---
Entry stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258, 0x0]

================================

Block 0xabb
[0xabb:0xad3]
---
Predecessors: [0xab5]
Successors: [0xa45]
---
0xabb CALLER
0xabc PUSH1 0x0
0xabe SWAP1
0xabf DUP2
0xac0 MSTORE
0xac1 PUSH1 0x20
0xac3 DUP2
0xac4 SWAP1
0xac5 MSTORE
0xac6 PUSH1 0x40
0xac8 SWAP1
0xac9 SHA3
0xaca SLOAD
0xacb PUSH2 0xad4
0xace SWAP1
0xacf DUP4
0xad0 PUSH2 0xa45
0xad3 JUMP
---
0xabb: V881 = CALLER
0xabc: V882 = 0x0
0xac0: M[0x0] = V881
0xac1: V883 = 0x20
0xac5: M[0x20] = 0x0
0xac6: V884 = 0x40
0xac9: V885 = SHA3 0x0 0x40
0xaca: V886 = S[V885]
0xacb: V887 = 0xad4
0xad0: V888 = 0xa45
0xad3: JUMP 0xa45
---
Entry stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0xad4, V886, S1]
Exit stack: [V11, 0x1a4, V256, V258, 0x0, 0x77d, V256, V258, 0x0, 0xad4, V886, V258]

================================

Block 0xad4
[0xad4:0xaff]
---
Predecessors: [0xa51]
Successors: [0xa57]
---
0xad4 JUMPDEST
0xad5 CALLER
0xad6 PUSH1 0x0
0xad8 SWAP1
0xad9 DUP2
0xada MSTORE
0xadb PUSH1 0x20
0xadd DUP2
0xade SWAP1
0xadf MSTORE
0xae0 PUSH1 0x40
0xae2 DUP1
0xae3 DUP3
0xae4 SHA3
0xae5 SWAP3
0xae6 SWAP1
0xae7 SWAP3
0xae8 SSTORE
0xae9 PUSH1 0x1
0xaeb PUSH1 0xa0
0xaed PUSH1 0x2
0xaef EXP
0xaf0 SUB
0xaf1 DUP6
0xaf2 AND
0xaf3 DUP2
0xaf4 MSTORE
0xaf5 SHA3
0xaf6 SLOAD
0xaf7 PUSH2 0xb00
0xafa SWAP1
0xafb DUP4
0xafc PUSH2 0xa57
0xaff JUMP
---
0xad4: JUMPDEST 
0xad5: V889 = CALLER
0xad6: V890 = 0x0
0xada: M[0x0] = V889
0xadb: V891 = 0x20
0xadf: M[0x20] = 0x0
0xae0: V892 = 0x40
0xae4: V893 = SHA3 0x0 0x40
0xae8: S[V893] = V838
0xae9: V894 = 0x1
0xaeb: V895 = 0xa0
0xaed: V896 = 0x2
0xaef: V897 = EXP 0x2 0xa0
0xaf0: V898 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaf2: V899 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xaf4: M[0x0] = V899
0xaf5: V900 = SHA3 0x0 0x40
0xaf6: V901 = S[V900]
0xaf7: V902 = 0xb00
0xafc: V903 = 0xa57
0xaff: JUMP 0xa57
---
Entry stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x4aa}, S4, S3, S2, 0x0, V838]
Stack pops: 4
Stack additions: [S3, S2, S1, 0xb00, V901, S2]
Exit stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x4aa}, S4, S3, S2, 0x0, 0xb00, V901, S2]

================================

Block 0xb00
[0xb00:0xb19]
---
Predecessors: [0x4ad]
Successors: [0xb1a]
---
0xb00 JUMPDEST
0xb01 PUSH1 0x1
0xb03 PUSH1 0xa0
0xb05 PUSH1 0x2
0xb07 EXP
0xb08 SUB
0xb09 DUP5
0xb0a AND
0xb0b PUSH1 0x0
0xb0d SWAP1
0xb0e DUP2
0xb0f MSTORE
0xb10 PUSH1 0x20
0xb12 DUP2
0xb13 SWAP1
0xb14 MSTORE
0xb15 PUSH1 0x40
0xb17 SWAP1
0xb18 SHA3
0xb19 SSTORE
---
0xb00: JUMPDEST 
0xb01: V904 = 0x1
0xb03: V905 = 0xa0
0xb05: V906 = 0x2
0xb07: V907 = EXP 0x2 0xa0
0xb08: V908 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0a: V909 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xb0b: V910 = 0x0
0xb0f: M[0x0] = V909
0xb10: V911 = 0x20
0xb14: M[0x20] = 0x0
0xb15: V912 = 0x40
0xb18: V913 = SHA3 0x0 0x40
0xb19: S[V913] = S0
---
Entry stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x1a4, 0x4aa}, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1]
Exit stack: [V11, 0x1a4, S9, S8, S7, S6, {0x0, 0x1a4, 0x4aa}, S4, S3, S2, S1]

================================

Block 0xb1a
[0xb1a:0xb62]
---
Predecessors: [0xab5, 0xb00]
Successors: [0x77d]
---
0xb1a JUMPDEST
0xb1b PUSH1 0x40
0xb1d DUP1
0xb1e MLOAD
0xb1f DUP4
0xb20 DUP2
0xb21 MSTORE
0xb22 SWAP1
0xb23 MLOAD
0xb24 PUSH1 0x1
0xb26 PUSH1 0xa0
0xb28 PUSH1 0x2
0xb2a EXP
0xb2b SUB
0xb2c DUP6
0xb2d AND
0xb2e SWAP2
0xb2f CALLER
0xb30 SWAP2
0xb31 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb52 SWAP2
0xb53 DUP2
0xb54 SWAP1
0xb55 SUB
0xb56 PUSH1 0x20
0xb58 ADD
0xb59 SWAP1
0xb5a LOG3
0xb5b POP
0xb5c PUSH1 0x1
0xb5e SWAP3
0xb5f SWAP2
0xb60 POP
0xb61 POP
0xb62 JUMP
---
0xb1a: JUMPDEST 
0xb1b: V914 = 0x40
0xb1e: V915 = M[0x40]
0xb21: M[V915] = S1
0xb23: V916 = M[0x40]
0xb24: V917 = 0x1
0xb26: V918 = 0xa0
0xb28: V919 = 0x2
0xb2a: V920 = EXP 0x2 0xa0
0xb2b: V921 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb2d: V922 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xb2f: V923 = CALLER
0xb31: V924 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xb55: V925 = SUB V915 V916
0xb56: V926 = 0x20
0xb58: V927 = ADD 0x20 V925
0xb5a: LOG V916 V927 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V923 V922
0xb5c: V928 = 0x1
0xb62: JUMP S3
---
Entry stack: [V11, 0x1a4, S8, S7, S6, S5, {0x0, 0x1a4, 0x4aa}, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V11, 0x1a4, S8, S7, S6, S5, {0x0, 0x1a4, 0x4aa}, 0x1]

================================

Block 0xb63
[0xb63:0xb8e]
---
Predecessors: []
Successors: []
---
0xb63 STOP
0xb64 LOG1
0xb65 PUSH6 0x627a7a723058
0xb6c SHA3
0xb6d ADD
0xb6e SWAP13
0xb6f MISSING 0xe7
0xb70 SWAP10
0xb71 MISSING 0xb9
0xb72 MISSING 0x2b
0xb73 DUP5
0xb74 MISSING 0xd2
0xb75 ADDMOD
0xb76 MISSING 0x26
0xb77 MISSING 0xeb
0xb78 MISSING 0xae
0xb79 PUSH21 0x2577a49f5d41b8a758c92613a5ad1d78bdd7410029
---
0xb63: STOP 
0xb64: LOG S0 S1 S2
0xb65: V929 = 0x627a7a723058
0xb6c: V930 = SHA3 0x627a7a723058 S3
0xb6d: V931 = ADD V930 S4
0xb6f: MISSING 0xe7
0xb71: MISSING 0xb9
0xb72: MISSING 0x2b
0xb74: MISSING 0xd2
0xb75: V932 = ADDMOD S0 S1 S2
0xb76: MISSING 0x26
0xb77: MISSING 0xeb
0xb78: MISSING 0xae
0xb79: V933 = 0x2577a49f5d41b8a758c92613a5ad1d78bdd7410029
---
Entry stack: []
Stack pops: 0
Stack additions: [S17, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, V931, S10, S1, S2, S3, S4, S5, S6, S7, S8, S9, S0, S4, S0, S1, S2, S3, S4, V932, 0x2577a49f5d41b8a758c92613a5ad1d78bdd7410029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1502460
Entry block: 0xdf
Exit block: 0xf4
Body: 0xdf, 0xe7, 0xeb, 0xf4, 0x353, 0x366, 0x36a, 0x377, 0x3ad

Function 1:
Public function signature: 0x6fdde03
Entry block: 0xf6
Exit block: 0x172
Body: 0xf6, 0xfe, 0x102, 0x10b, 0x12d, 0x136, 0x145, 0x159, 0x172, 0x3af

Function 2:
Public function signature: 0x95ea7b3
Entry block: 0x180
Exit block: 0x1a4
Body: 0x180, 0x188, 0x18c, 0x1a4, 0x3e6, 0x3f2, 0x3f9, 0x3fc, 0x403, 0x407, 0x411, 0x414, 0x77d, 0x840

Function 3:
Public function signature: 0x13af4035
Entry block: 0x1b8
Exit block: 0xf4
Body: 0xf4, 0x1b8, 0x1c0, 0x1c4, 0x41a, 0x42d, 0x431

Function 4:
Public function signature: 0x18160ddd
Entry block: 0x1d9
Exit block: 0x1ee
Body: 0x1d9, 0x1e1, 0x1e5, 0x1ee, 0x460

Function 5:
Public function signature: 0x23b872dd
Entry block: 0x200
Exit block: 0x1a4
Body: 0x1a4, 0x200, 0x208, 0x20c, 0x466, 0x488, 0x48c, 0x498, 0x49f, 0x8a6, 0x8b9, 0x8bd, 0x8e9, 0x8f0, 0x911, 0x918, 0x923, 0x93a, 0x940, 0x96d, 0x9f0, 0xa65

Function 6:
Public function signature: 0x313ce567
Entry block: 0x22a
Exit block: 0x23f
Body: 0x22a, 0x232, 0x236, 0x23f, 0x4b4

Function 7:
Public function signature: 0x31c420d4
Entry block: 0x255
Exit block: 0xf4
Body: 0xf4, 0x255, 0x25d, 0x261, 0x3ad, 0x4b9, 0x4cc, 0x4d0, 0x4dc

Function 8:
Public function signature: 0x70a08231
Entry block: 0x26a
Exit block: 0x1ee
Body: 0x1a4, 0x1ee, 0x26a, 0x272, 0x276, 0x510, 0x52a

Function 9:
Public function signature: 0x7e1f2bb8
Entry block: 0x28b
Exit block: 0x1ee
Body: 0x1a4, 0x1ee, 0x28b, 0x293, 0x297, 0x52a, 0x52f, 0x545, 0x549, 0x553, 0x562, 0x56a, 0x571, 0x58b, 0x5eb, 0xa65

Function 10:
Public function signature: 0x89519c50
Entry block: 0x2a3
Exit block: 0xf4
Body: 0xf4, 0x2a3, 0x2ab, 0x2af, 0x5f3, 0x609, 0x60d, 0x61f, 0x623, 0x68c, 0x690, 0x69b, 0x6a4, 0x6b6, 0x6ba

Function 11:
Public function signature: 0x95d89b41
Entry block: 0x2cd
Exit block: 0x172
Body: 0x10b, 0x12d, 0x136, 0x145, 0x159, 0x172, 0x2cd, 0x2d5, 0x2d9, 0x70c

Function 12:
Public function signature: 0xa9059cbb
Entry block: 0x2e2
Exit block: 0xa65
Body: 0x1a4, 0x2e2, 0x2ea, 0x2ee, 0x414, 0x743, 0x75c, 0x760, 0x76c, 0x773, 0x77d, 0xa65, 0xa66, 0xa79, 0xa7d, 0xa95, 0xa9c, 0xaa7, 0xab5, 0xabb, 0xad4, 0xb1a

Function 13:
Public function signature: 0xdd62ed3e
Entry block: 0x306
Exit block: 0x1ee
Body: 0x1ee, 0x306, 0x30e, 0x312

Function 14:
Public function signature: 0xe724529c
Entry block: 0x32d
Exit block: 0xf4
Body: 0xf4, 0x32d, 0x335, 0x339, 0x7af, 0x7c2, 0x7c6, 0x7d8, 0x7dc

Function 15:
Public fallback function
Entry block: 0xda
Exit block: 0xda
Body: 0xda

Function 16:
Private function
Entry block: 0xa57
Exit block: 0x4ad
Body: 0x4aa, 0x4ad, 0xa57

Function 17:
Private function
Entry block: 0xa45
Exit block: 0xa51
Body: 0xa45, 0xa51

