Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x6e]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1f1c827f
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x6e
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1f1c827f
0x3b: V13 = EQ V11 0x1f1c827f
0x3c: V14 = 0x6e
0x3f: JUMPI 0x6e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xf6]
---
0x40 DUP1
0x41 PUSH4 0x3853682c
0x46 EQ
0x47 PUSH2 0xf6
0x4a JUMPI
---
0x41: V15 = 0x3853682c
0x46: V16 = EQ 0x3853682c V11
0x47: V17 = 0xf6
0x4a: JUMPI 0xf6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x109]
---
0x4b DUP1
0x4c PUSH4 0x3e3ee859
0x51 EQ
0x52 PUSH2 0x109
0x55 JUMPI
---
0x4c: V18 = 0x3e3ee859
0x51: V19 = EQ 0x3e3ee859 V11
0x52: V20 = 0x109
0x55: JUMPI 0x109 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x151]
---
0x56 DUP1
0x57 PUSH4 0x3fad9ae0
0x5c EQ
0x5d PUSH2 0x151
0x60 JUMPI
---
0x57: V21 = 0x3fad9ae0
0x5c: V22 = EQ 0x3fad9ae0 V11
0x5d: V23 = 0x151
0x60: JUMPI 0x151 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1db]
---
0x61 DUP1
0x62 PUSH4 0xf50ab247
0x67 EQ
0x68 PUSH2 0x1db
0x6b JUMPI
---
0x62: V24 = 0xf50ab247
0x67: V25 = EQ 0xf50ab247 V11
0x68: V26 = 0x1db
0x6b: JUMPI 0x1db V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x0, 0x61, 0x289, 0x352, 0x44f, 0x4cb]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]

================================

Block 0x6e
[0x6e:0xf5]
---
Predecessors: [0xd]
Successors: [0x1e3]
---
0x6e JUMPDEST
0x6f PUSH2 0x6c
0x72 PUSH1 0x4
0x74 PUSH1 0x24
0x76 DUP2
0x77 CALLDATALOAD
0x78 DUP2
0x79 DUP2
0x7a ADD
0x7b SWAP1
0x7c DUP4
0x7d ADD
0x7e CALLDATALOAD
0x7f DUP1
0x80 PUSH1 0x20
0x82 PUSH1 0x1f
0x84 DUP3
0x85 ADD
0x86 DUP2
0x87 SWAP1
0x88 DIV
0x89 DUP2
0x8a MUL
0x8b ADD
0x8c PUSH1 0x40
0x8e MLOAD
0x8f SWAP1
0x90 DUP2
0x91 ADD
0x92 PUSH1 0x40
0x94 MSTORE
0x95 DUP2
0x96 DUP2
0x97 MSTORE
0x98 SWAP3
0x99 SWAP2
0x9a SWAP1
0x9b PUSH1 0x20
0x9d DUP5
0x9e ADD
0x9f DUP4
0xa0 DUP4
0xa1 DUP1
0xa2 DUP3
0xa3 DUP5
0xa4 CALLDATACOPY
0xa5 DUP3
0xa6 ADD
0xa7 SWAP2
0xa8 POP
0xa9 POP
0xaa POP
0xab POP
0xac POP
0xad POP
0xae SWAP2
0xaf SWAP1
0xb0 DUP1
0xb1 CALLDATALOAD
0xb2 SWAP1
0xb3 PUSH1 0x20
0xb5 ADD
0xb6 SWAP1
0xb7 DUP3
0xb8 ADD
0xb9 DUP1
0xba CALLDATALOAD
0xbb SWAP1
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP1
0xc0 DUP1
0xc1 DUP1
0xc2 PUSH1 0x1f
0xc4 ADD
0xc5 PUSH1 0x20
0xc7 DUP1
0xc8 SWAP2
0xc9 DIV
0xca MUL
0xcb PUSH1 0x20
0xcd ADD
0xce PUSH1 0x40
0xd0 MLOAD
0xd1 SWAP1
0xd2 DUP2
0xd3 ADD
0xd4 PUSH1 0x40
0xd6 MSTORE
0xd7 DUP2
0xd8 DUP2
0xd9 MSTORE
0xda SWAP3
0xdb SWAP2
0xdc SWAP1
0xdd PUSH1 0x20
0xdf DUP5
0xe0 ADD
0xe1 DUP4
0xe2 DUP4
0xe3 DUP1
0xe4 DUP3
0xe5 DUP5
0xe6 CALLDATACOPY
0xe7 POP
0xe8 SWAP5
0xe9 SWAP7
0xea POP
0xeb PUSH2 0x1e3
0xee SWAP6
0xef POP
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 POP
0xf5 JUMP
---
0x6e: JUMPDEST 
0x6f: V27 = 0x6c
0x72: V28 = 0x4
0x74: V29 = 0x24
0x77: V30 = CALLDATALOAD 0x4
0x7a: V31 = ADD V30 0x24
0x7d: V32 = ADD 0x4 V30
0x7e: V33 = CALLDATALOAD V32
0x80: V34 = 0x20
0x82: V35 = 0x1f
0x85: V36 = ADD V33 0x1f
0x88: V37 = DIV V36 0x20
0x8a: V38 = MUL 0x20 V37
0x8b: V39 = ADD V38 0x20
0x8c: V40 = 0x40
0x8e: V41 = M[0x40]
0x91: V42 = ADD V41 V39
0x92: V43 = 0x40
0x94: M[0x40] = V42
0x97: M[V41] = V33
0x9b: V44 = 0x20
0x9e: V45 = ADD V41 0x20
0xa4: CALLDATACOPY V45 V31 V33
0xa6: V46 = ADD V45 V33
0xb1: V47 = CALLDATALOAD 0x24
0xb3: V48 = 0x20
0xb5: V49 = ADD 0x20 0x24
0xb8: V50 = ADD 0x4 V47
0xba: V51 = CALLDATALOAD V50
0xbc: V52 = 0x20
0xbe: V53 = ADD 0x20 V50
0xc2: V54 = 0x1f
0xc4: V55 = ADD 0x1f V51
0xc5: V56 = 0x20
0xc9: V57 = DIV V55 0x20
0xca: V58 = MUL V57 0x20
0xcb: V59 = 0x20
0xcd: V60 = ADD 0x20 V58
0xce: V61 = 0x40
0xd0: V62 = M[0x40]
0xd3: V63 = ADD V62 V60
0xd4: V64 = 0x40
0xd6: M[0x40] = V63
0xd9: M[V62] = V51
0xdd: V65 = 0x20
0xe0: V66 = ADD V62 0x20
0xe6: CALLDATACOPY V66 V53 V51
0xeb: V67 = 0x1e3
0xf5: JUMP 0x1e3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V41, V62]
Exit stack: [V11, 0x6c, V41, V62]

================================

Block 0xf6
[0xf6:0x108]
---
Predecessors: [0x40]
Successors: [0x28d]
---
0xf6 JUMPDEST
0xf7 PUSH2 0x6c
0xfa PUSH1 0x4
0xfc DUP1
0xfd CALLDATALOAD
0xfe PUSH1 0x24
0x100 DUP2
0x101 ADD
0x102 SWAP2
0x103 ADD
0x104 CALLDATALOAD
0x105 PUSH2 0x28d
0x108 JUMP
---
0xf6: JUMPDEST 
0xf7: V68 = 0x6c
0xfa: V69 = 0x4
0xfd: V70 = CALLDATALOAD 0x4
0xfe: V71 = 0x24
0x101: V72 = ADD V70 0x24
0x103: V73 = ADD 0x4 V70
0x104: V74 = CALLDATALOAD V73
0x105: V75 = 0x28d
0x108: JUMP 0x28d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V72, V74]
Exit stack: [V11, 0x6c, V72, V74]

================================

Block 0x109
[0x109:0x150]
---
Predecessors: [0x4b]
Successors: [0x324]
---
0x109 JUMPDEST
0x10a PUSH2 0x6c
0x10d PUSH1 0x4
0x10f PUSH1 0x24
0x111 DUP2
0x112 CALLDATALOAD
0x113 DUP2
0x114 DUP2
0x115 ADD
0x116 SWAP1
0x117 DUP4
0x118 ADD
0x119 CALLDATALOAD
0x11a DUP1
0x11b PUSH1 0x20
0x11d PUSH1 0x1f
0x11f DUP3
0x120 ADD
0x121 DUP2
0x122 SWAP1
0x123 DIV
0x124 DUP2
0x125 MUL
0x126 ADD
0x127 PUSH1 0x40
0x129 MLOAD
0x12a SWAP1
0x12b DUP2
0x12c ADD
0x12d PUSH1 0x40
0x12f MSTORE
0x130 DUP2
0x131 DUP2
0x132 MSTORE
0x133 SWAP3
0x134 SWAP2
0x135 SWAP1
0x136 PUSH1 0x20
0x138 DUP5
0x139 ADD
0x13a DUP4
0x13b DUP4
0x13c DUP1
0x13d DUP3
0x13e DUP5
0x13f CALLDATACOPY
0x140 POP
0x141 SWAP5
0x142 SWAP7
0x143 POP
0x144 POP
0x145 SWAP4
0x146 CALLDATALOAD
0x147 SWAP4
0x148 POP
0x149 PUSH2 0x324
0x14c SWAP3
0x14d POP
0x14e POP
0x14f POP
0x150 JUMP
---
0x109: JUMPDEST 
0x10a: V76 = 0x6c
0x10d: V77 = 0x4
0x10f: V78 = 0x24
0x112: V79 = CALLDATALOAD 0x4
0x115: V80 = ADD V79 0x24
0x118: V81 = ADD 0x4 V79
0x119: V82 = CALLDATALOAD V81
0x11b: V83 = 0x20
0x11d: V84 = 0x1f
0x120: V85 = ADD V82 0x1f
0x123: V86 = DIV V85 0x20
0x125: V87 = MUL 0x20 V86
0x126: V88 = ADD V87 0x20
0x127: V89 = 0x40
0x129: V90 = M[0x40]
0x12c: V91 = ADD V90 V88
0x12d: V92 = 0x40
0x12f: M[0x40] = V91
0x132: M[V90] = V82
0x136: V93 = 0x20
0x139: V94 = ADD V90 0x20
0x13f: CALLDATACOPY V94 V80 V82
0x146: V95 = CALLDATALOAD 0x24
0x149: V96 = 0x324
0x150: JUMP 0x324
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V90, V95]
Exit stack: [V11, 0x6c, V90, V95]

================================

Block 0x151
[0x151:0x157]
---
Predecessors: [0x56]
Successors: [0x158, 0x15c]
---
0x151 JUMPDEST
0x152 CALLVALUE
0x153 ISZERO
0x154 PUSH2 0x15c
0x157 JUMPI
---
0x151: JUMPDEST 
0x152: V97 = CALLVALUE
0x153: V98 = ISZERO V97
0x154: V99 = 0x15c
0x157: JUMPI 0x15c V98
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x158
[0x158:0x15b]
---
Predecessors: [0x151]
Successors: []
---
0x158 PUSH1 0x0
0x15a DUP1
0x15b REVERT
---
0x158: V100 = 0x0
0x15b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15c
[0x15c:0x163]
---
Predecessors: [0x151]
Successors: [0x359]
---
0x15c JUMPDEST
0x15d PUSH2 0x164
0x160 PUSH2 0x359
0x163 JUMP
---
0x15c: JUMPDEST 
0x15d: V101 = 0x164
0x160: V102 = 0x359
0x163: JUMP 0x359
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x164]
Exit stack: [V11, 0x164]

================================

Block 0x164
[0x164:0x187]
---
Predecessors: [0x3ef]
Successors: [0x188]
---
0x164 JUMPDEST
0x165 PUSH1 0x40
0x167 MLOAD
0x168 PUSH1 0x20
0x16a DUP1
0x16b DUP3
0x16c MSTORE
0x16d DUP2
0x16e SWAP1
0x16f DUP2
0x170 ADD
0x171 DUP4
0x172 DUP2
0x173 DUP2
0x174 MLOAD
0x175 DUP2
0x176 MSTORE
0x177 PUSH1 0x20
0x179 ADD
0x17a SWAP2
0x17b POP
0x17c DUP1
0x17d MLOAD
0x17e SWAP1
0x17f PUSH1 0x20
0x181 ADD
0x182 SWAP1
0x183 DUP1
0x184 DUP4
0x185 DUP4
0x186 PUSH1 0x0
---
0x164: JUMPDEST 
0x165: V103 = 0x40
0x167: V104 = M[0x40]
0x168: V105 = 0x20
0x16c: M[V104] = 0x20
0x170: V106 = ADD V104 0x20
0x174: V107 = M[V308]
0x176: M[V106] = V107
0x177: V108 = 0x20
0x179: V109 = ADD 0x20 V106
0x17d: V110 = M[V308]
0x17f: V111 = 0x20
0x181: V112 = ADD 0x20 V308
0x186: V113 = 0x0
---
Entry stack: [V11, 0x164, V308]
Stack pops: 1
Stack additions: [S0, V104, V104, V109, V112, V110, V110, V109, V112, 0x0]
Exit stack: [V11, 0x164, V308, V104, V104, V109, V112, V110, V110, V109, V112, 0x0]

================================

Block 0x188
[0x188:0x190]
---
Predecessors: [0x164, 0x191]
Successors: [0x191, 0x1a0]
---
0x188 JUMPDEST
0x189 DUP4
0x18a DUP2
0x18b LT
0x18c ISZERO
0x18d PUSH2 0x1a0
0x190 JUMPI
---
0x188: JUMPDEST 
0x18b: V114 = LT S0 V110
0x18c: V115 = ISZERO V114
0x18d: V116 = 0x1a0
0x190: JUMPI 0x1a0 V115
---
Entry stack: [V11, 0x164, V308, V104, V104, V109, V112, V110, V110, V109, V112, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x164, V308, V104, V104, V109, V112, V110, V110, V109, V112, S0]

================================

Block 0x191
[0x191:0x19f]
---
Predecessors: [0x188]
Successors: [0x188]
---
0x191 DUP1
0x192 DUP3
0x193 ADD
0x194 MLOAD
0x195 DUP4
0x196 DUP3
0x197 ADD
0x198 MSTORE
0x199 PUSH1 0x20
0x19b ADD
0x19c PUSH2 0x188
0x19f JUMP
---
0x193: V117 = ADD V112 S0
0x194: V118 = M[V117]
0x197: V119 = ADD S0 V109
0x198: M[V119] = V118
0x199: V120 = 0x20
0x19b: V121 = ADD 0x20 S0
0x19c: V122 = 0x188
0x19f: JUMP 0x188
---
Entry stack: [V11, 0x164, V308, V104, V104, V109, V112, V110, V110, V109, V112, S0]
Stack pops: 3
Stack additions: [S2, S1, V121]
Exit stack: [V11, 0x164, V308, V104, V104, V109, V112, V110, V110, V109, V112, V121]

================================

Block 0x1a0
[0x1a0:0x1b3]
---
Predecessors: [0x188]
Successors: [0x1b4, 0x1cd]
---
0x1a0 JUMPDEST
0x1a1 POP
0x1a2 POP
0x1a3 POP
0x1a4 POP
0x1a5 SWAP1
0x1a6 POP
0x1a7 SWAP1
0x1a8 DUP2
0x1a9 ADD
0x1aa SWAP1
0x1ab PUSH1 0x1f
0x1ad AND
0x1ae DUP1
0x1af ISZERO
0x1b0 PUSH2 0x1cd
0x1b3 JUMPI
---
0x1a0: JUMPDEST 
0x1a9: V123 = ADD V110 V109
0x1ab: V124 = 0x1f
0x1ad: V125 = AND 0x1f V110
0x1af: V126 = ISZERO V125
0x1b0: V127 = 0x1cd
0x1b3: JUMPI 0x1cd V126
---
Entry stack: [V11, 0x164, V308, V104, V104, V109, V112, V110, V110, V109, V112, S0]
Stack pops: 7
Stack additions: [V123, V125]
Exit stack: [V11, 0x164, V308, V104, V104, V123, V125]

================================

Block 0x1b4
[0x1b4:0x1cc]
---
Predecessors: [0x1a0]
Successors: [0x1cd]
---
0x1b4 DUP1
0x1b5 DUP3
0x1b6 SUB
0x1b7 DUP1
0x1b8 MLOAD
0x1b9 PUSH1 0x1
0x1bb DUP4
0x1bc PUSH1 0x20
0x1be SUB
0x1bf PUSH2 0x100
0x1c2 EXP
0x1c3 SUB
0x1c4 NOT
0x1c5 AND
0x1c6 DUP2
0x1c7 MSTORE
0x1c8 PUSH1 0x20
0x1ca ADD
0x1cb SWAP2
0x1cc POP
---
0x1b6: V128 = SUB V123 V125
0x1b8: V129 = M[V128]
0x1b9: V130 = 0x1
0x1bc: V131 = 0x20
0x1be: V132 = SUB 0x20 V125
0x1bf: V133 = 0x100
0x1c2: V134 = EXP 0x100 V132
0x1c3: V135 = SUB V134 0x1
0x1c4: V136 = NOT V135
0x1c5: V137 = AND V136 V129
0x1c7: M[V128] = V137
0x1c8: V138 = 0x20
0x1ca: V139 = ADD 0x20 V128
---
Entry stack: [V11, 0x164, V308, V104, V104, V123, V125]
Stack pops: 2
Stack additions: [V139, S0]
Exit stack: [V11, 0x164, V308, V104, V104, V139, V125]

================================

Block 0x1cd
[0x1cd:0x1da]
---
Predecessors: [0x1a0, 0x1b4]
Successors: []
---
0x1cd JUMPDEST
0x1ce POP
0x1cf SWAP3
0x1d0 POP
0x1d1 POP
0x1d2 POP
0x1d3 PUSH1 0x40
0x1d5 MLOAD
0x1d6 DUP1
0x1d7 SWAP2
0x1d8 SUB
0x1d9 SWAP1
0x1da RETURN
---
0x1cd: JUMPDEST 
0x1d3: V140 = 0x40
0x1d5: V141 = M[0x40]
0x1d8: V142 = SUB S1 V141
0x1da: RETURN V141 V142
---
Entry stack: [V11, 0x164, V308, V104, V104, S1, V125]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x164]

================================

Block 0x1db
[0x1db:0x1e2]
---
Predecessors: [0x61]
Successors: [0x3f7]
---
0x1db JUMPDEST
0x1dc PUSH2 0x6c
0x1df PUSH2 0x3f7
0x1e2 JUMP
---
0x1db: JUMPDEST 
0x1dc: V143 = 0x6c
0x1df: V144 = 0x3f7
0x1e2: JUMP 0x3f7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0x1e3
[0x1e3:0x1ec]
---
Predecessors: [0x6e]
Successors: [0x1ed, 0x289]
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x2
0x1e6 SLOAD
0x1e7 ISZERO
0x1e8 ISZERO
0x1e9 PUSH2 0x289
0x1ec JUMPI
---
0x1e3: JUMPDEST 
0x1e4: V145 = 0x2
0x1e6: V146 = S[0x2]
0x1e7: V147 = ISZERO V146
0x1e8: V148 = ISZERO V147
0x1e9: V149 = 0x289
0x1ec: JUMPI 0x289 V148
---
Entry stack: [V11, 0x6c, V41, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V41, V62]

================================

Block 0x1ed
[0x1ed:0x1fc]
---
Predecessors: [0x1e3]
Successors: [0x1fd]
---
0x1ed DUP1
0x1ee PUSH1 0x40
0x1f0 MLOAD
0x1f1 DUP1
0x1f2 DUP3
0x1f3 DUP1
0x1f4 MLOAD
0x1f5 SWAP1
0x1f6 PUSH1 0x20
0x1f8 ADD
0x1f9 SWAP1
0x1fa DUP1
0x1fb DUP4
0x1fc DUP4
---
0x1ee: V150 = 0x40
0x1f0: V151 = M[0x40]
0x1f4: V152 = M[V62]
0x1f6: V153 = 0x20
0x1f8: V154 = ADD 0x20 V62
---
Entry stack: [V11, 0x6c, V41, V62]
Stack pops: 1
Stack additions: [S0, S0, V151, V151, V154, V152, V152, V151, V154]
Exit stack: [V11, 0x6c, V41, V62, V62, V151, V151, V154, V152, V152, V151, V154]

================================

Block 0x1fd
[0x1fd:0x205]
---
Predecessors: [0x1ed, 0x206]
Successors: [0x206, 0x21c]
---
0x1fd JUMPDEST
0x1fe PUSH1 0x20
0x200 DUP4
0x201 LT
0x202 PUSH2 0x21c
0x205 JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V155 = 0x20
0x201: V156 = LT S2 0x20
0x202: V157 = 0x21c
0x205: JUMPI 0x21c V156
---
Entry stack: [V11, 0x6c, V41, V62, V62, V151, V151, V154, V152, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, V41, V62, V62, V151, V151, V154, V152, S2, S1, S0]

================================

Block 0x206
[0x206:0x21b]
---
Predecessors: [0x1fd]
Successors: [0x1fd]
---
0x206 DUP1
0x207 MLOAD
0x208 DUP3
0x209 MSTORE
0x20a PUSH1 0x1f
0x20c NOT
0x20d SWAP1
0x20e SWAP3
0x20f ADD
0x210 SWAP2
0x211 PUSH1 0x20
0x213 SWAP2
0x214 DUP3
0x215 ADD
0x216 SWAP2
0x217 ADD
0x218 PUSH2 0x1fd
0x21b JUMP
---
0x207: V158 = M[S0]
0x209: M[S1] = V158
0x20a: V159 = 0x1f
0x20c: V160 = NOT 0x1f
0x20f: V161 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x211: V162 = 0x20
0x215: V163 = ADD 0x20 S1
0x217: V164 = ADD 0x20 S0
0x218: V165 = 0x1fd
0x21b: JUMP 0x1fd
---
Entry stack: [V11, 0x6c, V41, V62, V62, V151, V151, V154, V152, S2, S1, S0]
Stack pops: 3
Stack additions: [V161, V163, V164]
Exit stack: [V11, 0x6c, V41, V62, V62, V151, V151, V154, V152, V161, V163, V164]

================================

Block 0x21c
[0x21c:0x25e]
---
Predecessors: [0x1fd]
Successors: [0x451]
---
0x21c JUMPDEST
0x21d PUSH1 0x1
0x21f DUP4
0x220 PUSH1 0x20
0x222 SUB
0x223 PUSH2 0x100
0x226 EXP
0x227 SUB
0x228 DUP1
0x229 NOT
0x22a DUP3
0x22b MLOAD
0x22c AND
0x22d DUP2
0x22e DUP5
0x22f MLOAD
0x230 AND
0x231 OR
0x232 SWAP1
0x233 SWAP3
0x234 MSTORE
0x235 POP
0x236 POP
0x237 POP
0x238 SWAP2
0x239 SWAP1
0x23a SWAP2
0x23b ADD
0x23c SWAP3
0x23d POP
0x23e PUSH1 0x40
0x240 SWAP2
0x241 POP
0x242 POP
0x243 MLOAD
0x244 SWAP1
0x245 DUP2
0x246 SWAP1
0x247 SUB
0x248 SWAP1
0x249 SHA3
0x24a PUSH1 0x2
0x24c SSTORE
0x24d PUSH1 0x0
0x24f DUP3
0x250 DUP1
0x251 MLOAD
0x252 PUSH2 0x25f
0x255 SWAP3
0x256 SWAP2
0x257 PUSH1 0x20
0x259 ADD
0x25a SWAP1
0x25b PUSH2 0x451
0x25e JUMP
---
0x21c: JUMPDEST 
0x21d: V166 = 0x1
0x220: V167 = 0x20
0x222: V168 = SUB 0x20 S2
0x223: V169 = 0x100
0x226: V170 = EXP 0x100 V168
0x227: V171 = SUB V170 0x1
0x229: V172 = NOT V171
0x22b: V173 = M[S0]
0x22c: V174 = AND V173 V172
0x22f: V175 = M[S1]
0x230: V176 = AND V175 V171
0x231: V177 = OR V176 V174
0x234: M[S1] = V177
0x23b: V178 = ADD V152 V151
0x23e: V179 = 0x40
0x243: V180 = M[0x40]
0x247: V181 = SUB V178 V180
0x249: V182 = SHA3 V180 V181
0x24a: V183 = 0x2
0x24c: S[0x2] = V182
0x24d: V184 = 0x0
0x251: V185 = M[V41]
0x252: V186 = 0x25f
0x257: V187 = 0x20
0x259: V188 = ADD 0x20 V41
0x25b: V189 = 0x451
0x25e: JUMP 0x451
---
Entry stack: [V11, 0x6c, V41, V62, V62, V151, V151, V154, V152, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, 0x25f, 0x0, V188, V185]
Exit stack: [V11, 0x6c, V41, V62, 0x25f, 0x0, V188, V185]

================================

Block 0x25f
[0x25f:0x288]
---
Predecessors: [0x289, 0x352, 0x4cb]
Successors: [0x289]
---
0x25f JUMPDEST
0x260 POP
0x261 PUSH1 0x1
0x263 DUP1
0x264 SLOAD
0x265 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27a NOT
0x27b AND
0x27c CALLER
0x27d PUSH1 0x1
0x27f PUSH1 0xa0
0x281 PUSH1 0x2
0x283 EXP
0x284 SUB
0x285 AND
0x286 OR
0x287 SWAP1
0x288 SSTORE
---
0x25f: JUMPDEST 
0x261: V190 = 0x1
0x264: V191 = S[0x1]
0x265: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x27a: V193 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V194 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V191
0x27c: V195 = CALLER
0x27d: V196 = 0x1
0x27f: V197 = 0xa0
0x281: V198 = 0x2
0x283: V199 = EXP 0x2 0xa0
0x284: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x285: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x286: V202 = OR V201 V194
0x288: S[0x1] = V202
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4, S3, S2, S1]

================================

Block 0x289
[0x289:0x28c]
---
Predecessors: [0x1e3, 0x25f, 0x2e2, 0x2e8]
Successors: [0x6c, 0x25f, 0x352]
---
0x289 JUMPDEST
0x28a POP
0x28b POP
0x28c JUMP
---
0x289: JUMPDEST 
0x28c: JUMP S2
---
Entry stack: [V11, 0x6c, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x6c, S4, S3]

================================

Block 0x28d
[0x28d:0x2a8]
---
Predecessors: [0xf6]
Successors: [0x2a9, 0x2ad]
---
0x28d JUMPDEST
0x28e ORIGIN
0x28f PUSH1 0x1
0x291 PUSH1 0xa0
0x293 PUSH1 0x2
0x295 EXP
0x296 SUB
0x297 AND
0x298 CALLER
0x299 PUSH1 0x1
0x29b PUSH1 0xa0
0x29d PUSH1 0x2
0x29f EXP
0x2a0 SUB
0x2a1 AND
0x2a2 EQ
0x2a3 ISZERO
0x2a4 ISZERO
0x2a5 PUSH2 0x2ad
0x2a8 JUMPI
---
0x28d: JUMPDEST 
0x28e: V203 = ORIGIN
0x28f: V204 = 0x1
0x291: V205 = 0xa0
0x293: V206 = 0x2
0x295: V207 = EXP 0x2 0xa0
0x296: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x297: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x298: V210 = CALLER
0x299: V211 = 0x1
0x29b: V212 = 0xa0
0x29d: V213 = 0x2
0x29f: V214 = EXP 0x2 0xa0
0x2a0: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a1: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x2a2: V217 = EQ V216 V209
0x2a3: V218 = ISZERO V217
0x2a4: V219 = ISZERO V218
0x2a5: V220 = 0x2ad
0x2a8: JUMPI 0x2ad V219
---
Entry stack: [V11, 0x6c, V72, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V72, V74]

================================

Block 0x2a9
[0x2a9:0x2ac]
---
Predecessors: [0x28d]
Successors: []
---
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac REVERT
---
0x2a9: V221 = 0x0
0x2ac: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V72, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V72, V74]

================================

Block 0x2ad
[0x2ad:0x2d5]
---
Predecessors: [0x28d]
Successors: [0x2d6, 0x2e2]
---
0x2ad JUMPDEST
0x2ae DUP2
0x2af DUP2
0x2b0 PUSH1 0x40
0x2b2 MLOAD
0x2b3 DUP1
0x2b4 DUP4
0x2b5 DUP4
0x2b6 DUP1
0x2b7 DUP3
0x2b8 DUP5
0x2b9 CALLDATACOPY
0x2ba DUP3
0x2bb ADD
0x2bc SWAP2
0x2bd POP
0x2be POP
0x2bf SWAP3
0x2c0 POP
0x2c1 POP
0x2c2 POP
0x2c3 PUSH1 0x40
0x2c5 MLOAD
0x2c6 SWAP1
0x2c7 DUP2
0x2c8 SWAP1
0x2c9 SUB
0x2ca SWAP1
0x2cb SHA3
0x2cc PUSH1 0x2
0x2ce SLOAD
0x2cf EQ
0x2d0 DUP1
0x2d1 ISZERO
0x2d2 PUSH2 0x2e2
0x2d5 JUMPI
---
0x2ad: JUMPDEST 
0x2b0: V222 = 0x40
0x2b2: V223 = M[0x40]
0x2b9: CALLDATACOPY V223 V72 V74
0x2bb: V224 = ADD V223 V74
0x2c3: V225 = 0x40
0x2c5: V226 = M[0x40]
0x2c9: V227 = SUB V224 V226
0x2cb: V228 = SHA3 V226 V227
0x2cc: V229 = 0x2
0x2ce: V230 = S[0x2]
0x2cf: V231 = EQ V230 V228
0x2d1: V232 = ISZERO V231
0x2d2: V233 = 0x2e2
0x2d5: JUMPI 0x2e2 V232
---
Entry stack: [V11, 0x6c, V72, V74]
Stack pops: 2
Stack additions: [S1, S0, V231]
Exit stack: [V11, 0x6c, V72, V74, V231]

================================

Block 0x2d6
[0x2d6:0x2e1]
---
Predecessors: [0x2ad]
Successors: [0x2e2]
---
0x2d6 POP
0x2d7 PUSH8 0xde0b6b3a7640000
0x2e0 CALLVALUE
0x2e1 GT
---
0x2d7: V234 = 0xde0b6b3a7640000
0x2e0: V235 = CALLVALUE
0x2e1: V236 = GT V235 0xde0b6b3a7640000
---
Entry stack: [V11, 0x6c, V72, V74, V231]
Stack pops: 1
Stack additions: [V236]
Exit stack: [V11, 0x6c, V72, V74, V236]

================================

Block 0x2e2
[0x2e2:0x2e7]
---
Predecessors: [0x2ad, 0x2d6]
Successors: [0x289, 0x2e8]
---
0x2e2 JUMPDEST
0x2e3 ISZERO
0x2e4 PUSH2 0x289
0x2e7 JUMPI
---
0x2e2: JUMPDEST 
0x2e3: V237 = ISZERO S0
0x2e4: V238 = 0x289
0x2e7: JUMPI 0x289 V237
---
Entry stack: [V11, 0x6c, V72, V74, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6c, V72, V74]

================================

Block 0x2e8
[0x2e8:0x31f]
---
Predecessors: [0x2e2]
Successors: [0x289, 0x320]
---
0x2e8 CALLER
0x2e9 PUSH1 0x1
0x2eb PUSH1 0xa0
0x2ed PUSH1 0x2
0x2ef EXP
0x2f0 SUB
0x2f1 AND
0x2f2 PUSH2 0x8fc
0x2f5 ADDRESS
0x2f6 PUSH1 0x1
0x2f8 PUSH1 0xa0
0x2fa PUSH1 0x2
0x2fc EXP
0x2fd SUB
0x2fe AND
0x2ff BALANCE
0x300 SWAP1
0x301 DUP2
0x302 ISZERO
0x303 MUL
0x304 SWAP1
0x305 PUSH1 0x40
0x307 MLOAD
0x308 PUSH1 0x0
0x30a PUSH1 0x40
0x30c MLOAD
0x30d DUP1
0x30e DUP4
0x30f SUB
0x310 DUP2
0x311 DUP6
0x312 DUP9
0x313 DUP9
0x314 CALL
0x315 SWAP4
0x316 POP
0x317 POP
0x318 POP
0x319 POP
0x31a ISZERO
0x31b ISZERO
0x31c PUSH2 0x289
0x31f JUMPI
---
0x2e8: V239 = CALLER
0x2e9: V240 = 0x1
0x2eb: V241 = 0xa0
0x2ed: V242 = 0x2
0x2ef: V243 = EXP 0x2 0xa0
0x2f0: V244 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f1: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x2f2: V246 = 0x8fc
0x2f5: V247 = ADDRESS
0x2f6: V248 = 0x1
0x2f8: V249 = 0xa0
0x2fa: V250 = 0x2
0x2fc: V251 = EXP 0x2 0xa0
0x2fd: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fe: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x2ff: V254 = BALANCE V253
0x302: V255 = ISZERO V254
0x303: V256 = MUL V255 0x8fc
0x305: V257 = 0x40
0x307: V258 = M[0x40]
0x308: V259 = 0x0
0x30a: V260 = 0x40
0x30c: V261 = M[0x40]
0x30f: V262 = SUB V258 V261
0x314: V263 = CALL V256 V245 V254 V261 V262 V261 0x0
0x31a: V264 = ISZERO V263
0x31b: V265 = ISZERO V264
0x31c: V266 = 0x289
0x31f: JUMPI 0x289 V265
---
Entry stack: [V11, 0x6c, V72, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V72, V74]

================================

Block 0x320
[0x320:0x323]
---
Predecessors: [0x2e8]
Successors: []
---
0x320 PUSH1 0x0
0x322 DUP1
0x323 REVERT
---
0x320: V267 = 0x0
0x323: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V72, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V72, V74]

================================

Block 0x324
[0x324:0x33a]
---
Predecessors: [0x109]
Successors: [0x33b, 0x33f]
---
0x324 JUMPDEST
0x325 PUSH1 0x1
0x327 SLOAD
0x328 CALLER
0x329 PUSH1 0x1
0x32b PUSH1 0xa0
0x32d PUSH1 0x2
0x32f EXP
0x330 SUB
0x331 SWAP1
0x332 DUP2
0x333 AND
0x334 SWAP2
0x335 AND
0x336 EQ
0x337 PUSH2 0x33f
0x33a JUMPI
---
0x324: JUMPDEST 
0x325: V268 = 0x1
0x327: V269 = S[0x1]
0x328: V270 = CALLER
0x329: V271 = 0x1
0x32b: V272 = 0xa0
0x32d: V273 = 0x2
0x32f: V274 = EXP 0x2 0xa0
0x330: V275 = SUB 0x10000000000000000000000000000000000000000 0x1
0x333: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x335: V277 = AND V269 0xffffffffffffffffffffffffffffffffffffffff
0x336: V278 = EQ V277 V276
0x337: V279 = 0x33f
0x33a: JUMPI 0x33f V278
---
Entry stack: [V11, 0x6c, V90, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V90, V95]

================================

Block 0x33b
[0x33b:0x33e]
---
Predecessors: [0x324]
Successors: []
---
0x33b PUSH1 0x0
0x33d DUP1
0x33e REVERT
---
0x33b: V280 = 0x0
0x33e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V90, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V90, V95]

================================

Block 0x33f
[0x33f:0x351]
---
Predecessors: [0x324]
Successors: [0x451]
---
0x33f JUMPDEST
0x340 PUSH1 0x0
0x342 DUP3
0x343 DUP1
0x344 MLOAD
0x345 PUSH2 0x352
0x348 SWAP3
0x349 SWAP2
0x34a PUSH1 0x20
0x34c ADD
0x34d SWAP1
0x34e PUSH2 0x451
0x351 JUMP
---
0x33f: JUMPDEST 
0x340: V281 = 0x0
0x344: V282 = M[V90]
0x345: V283 = 0x352
0x34a: V284 = 0x20
0x34c: V285 = ADD 0x20 V90
0x34e: V286 = 0x451
0x351: JUMP 0x451
---
Entry stack: [V11, 0x6c, V90, V95]
Stack pops: 2
Stack additions: [S1, S0, 0x352, 0x0, V285, V282]
Exit stack: [V11, 0x6c, V90, V95, 0x352, 0x0, V285, V282]

================================

Block 0x352
[0x352:0x358]
---
Predecessors: [0x289, 0x352, 0x4cb]
Successors: [0x6c, 0x25f, 0x352]
---
0x352 JUMPDEST
0x353 POP
0x354 PUSH1 0x2
0x356 SSTORE
0x357 POP
0x358 JUMP
---
0x352: JUMPDEST 
0x354: V287 = 0x2
0x356: S[0x2] = S1
0x358: JUMP S3
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4]

================================

Block 0x359
[0x359:0x3a8]
---
Predecessors: [0x15c]
Successors: [0x3a9, 0x3ef]
---
0x359 JUMPDEST
0x35a PUSH1 0x0
0x35c DUP1
0x35d SLOAD
0x35e PUSH1 0x1
0x360 DUP2
0x361 PUSH1 0x1
0x363 AND
0x364 ISZERO
0x365 PUSH2 0x100
0x368 MUL
0x369 SUB
0x36a AND
0x36b PUSH1 0x2
0x36d SWAP1
0x36e DIV
0x36f DUP1
0x370 PUSH1 0x1f
0x372 ADD
0x373 PUSH1 0x20
0x375 DUP1
0x376 SWAP2
0x377 DIV
0x378 MUL
0x379 PUSH1 0x20
0x37b ADD
0x37c PUSH1 0x40
0x37e MLOAD
0x37f SWAP1
0x380 DUP2
0x381 ADD
0x382 PUSH1 0x40
0x384 MSTORE
0x385 DUP1
0x386 SWAP3
0x387 SWAP2
0x388 SWAP1
0x389 DUP2
0x38a DUP2
0x38b MSTORE
0x38c PUSH1 0x20
0x38e ADD
0x38f DUP3
0x390 DUP1
0x391 SLOAD
0x392 PUSH1 0x1
0x394 DUP2
0x395 PUSH1 0x1
0x397 AND
0x398 ISZERO
0x399 PUSH2 0x100
0x39c MUL
0x39d SUB
0x39e AND
0x39f PUSH1 0x2
0x3a1 SWAP1
0x3a2 DIV
0x3a3 DUP1
0x3a4 ISZERO
0x3a5 PUSH2 0x3ef
0x3a8 JUMPI
---
0x359: JUMPDEST 
0x35a: V288 = 0x0
0x35d: V289 = S[0x0]
0x35e: V290 = 0x1
0x361: V291 = 0x1
0x363: V292 = AND 0x1 V289
0x364: V293 = ISZERO V292
0x365: V294 = 0x100
0x368: V295 = MUL 0x100 V293
0x369: V296 = SUB V295 0x1
0x36a: V297 = AND V296 V289
0x36b: V298 = 0x2
0x36e: V299 = DIV V297 0x2
0x370: V300 = 0x1f
0x372: V301 = ADD 0x1f V299
0x373: V302 = 0x20
0x377: V303 = DIV V301 0x20
0x378: V304 = MUL V303 0x20
0x379: V305 = 0x20
0x37b: V306 = ADD 0x20 V304
0x37c: V307 = 0x40
0x37e: V308 = M[0x40]
0x381: V309 = ADD V308 V306
0x382: V310 = 0x40
0x384: M[0x40] = V309
0x38b: M[V308] = V299
0x38c: V311 = 0x20
0x38e: V312 = ADD 0x20 V308
0x391: V313 = S[0x0]
0x392: V314 = 0x1
0x395: V315 = 0x1
0x397: V316 = AND 0x1 V313
0x398: V317 = ISZERO V316
0x399: V318 = 0x100
0x39c: V319 = MUL 0x100 V317
0x39d: V320 = SUB V319 0x1
0x39e: V321 = AND V320 V313
0x39f: V322 = 0x2
0x3a2: V323 = DIV V321 0x2
0x3a4: V324 = ISZERO V323
0x3a5: V325 = 0x3ef
0x3a8: JUMPI 0x3ef V324
---
Entry stack: [V11, 0x164]
Stack pops: 0
Stack additions: [V308, 0x0, V299, V312, 0x0, V323]
Exit stack: [V11, 0x164, V308, 0x0, V299, V312, 0x0, V323]

================================

Block 0x3a9
[0x3a9:0x3b0]
---
Predecessors: [0x359]
Successors: [0x3b1, 0x3c4]
---
0x3a9 DUP1
0x3aa PUSH1 0x1f
0x3ac LT
0x3ad PUSH2 0x3c4
0x3b0 JUMPI
---
0x3aa: V326 = 0x1f
0x3ac: V327 = LT 0x1f V323
0x3ad: V328 = 0x3c4
0x3b0: JUMPI 0x3c4 V327
---
Entry stack: [V11, 0x164, V308, 0x0, V299, V312, 0x0, V323]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x164, V308, 0x0, V299, V312, 0x0, V323]

================================

Block 0x3b1
[0x3b1:0x3c3]
---
Predecessors: [0x3a9]
Successors: [0x3ef]
---
0x3b1 PUSH2 0x100
0x3b4 DUP1
0x3b5 DUP4
0x3b6 SLOAD
0x3b7 DIV
0x3b8 MUL
0x3b9 DUP4
0x3ba MSTORE
0x3bb SWAP2
0x3bc PUSH1 0x20
0x3be ADD
0x3bf SWAP2
0x3c0 PUSH2 0x3ef
0x3c3 JUMP
---
0x3b1: V329 = 0x100
0x3b6: V330 = S[0x0]
0x3b7: V331 = DIV V330 0x100
0x3b8: V332 = MUL V331 0x100
0x3ba: M[V312] = V332
0x3bc: V333 = 0x20
0x3be: V334 = ADD 0x20 V312
0x3c0: V335 = 0x3ef
0x3c3: JUMP 0x3ef
---
Entry stack: [V11, 0x164, V308, 0x0, V299, V312, 0x0, V323]
Stack pops: 3
Stack additions: [V334, S1, S0]
Exit stack: [V11, 0x164, V308, 0x0, V299, V334, 0x0, V323]

================================

Block 0x3c4
[0x3c4:0x3d1]
---
Predecessors: [0x3a9]
Successors: [0x3d2]
---
0x3c4 JUMPDEST
0x3c5 DUP3
0x3c6 ADD
0x3c7 SWAP2
0x3c8 SWAP1
0x3c9 PUSH1 0x0
0x3cb MSTORE
0x3cc PUSH1 0x20
0x3ce PUSH1 0x0
0x3d0 SHA3
0x3d1 SWAP1
---
0x3c4: JUMPDEST 
0x3c6: V336 = ADD V312 V323
0x3c9: V337 = 0x0
0x3cb: M[0x0] = 0x0
0x3cc: V338 = 0x20
0x3ce: V339 = 0x0
0x3d0: V340 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x164, V308, 0x0, V299, V312, 0x0, V323]
Stack pops: 3
Stack additions: [V336, V340, S2]
Exit stack: [V11, 0x164, V308, 0x0, V299, V336, V340, V312]

================================

Block 0x3d2
[0x3d2:0x3e5]
---
Predecessors: [0x3c4, 0x3d2]
Successors: [0x3d2, 0x3e6]
---
0x3d2 JUMPDEST
0x3d3 DUP2
0x3d4 SLOAD
0x3d5 DUP2
0x3d6 MSTORE
0x3d7 SWAP1
0x3d8 PUSH1 0x1
0x3da ADD
0x3db SWAP1
0x3dc PUSH1 0x20
0x3de ADD
0x3df DUP1
0x3e0 DUP4
0x3e1 GT
0x3e2 PUSH2 0x3d2
0x3e5 JUMPI
---
0x3d2: JUMPDEST 
0x3d4: V341 = S[S1]
0x3d6: M[S0] = V341
0x3d8: V342 = 0x1
0x3da: V343 = ADD 0x1 S1
0x3dc: V344 = 0x20
0x3de: V345 = ADD 0x20 S0
0x3e1: V346 = GT V336 V345
0x3e2: V347 = 0x3d2
0x3e5: JUMPI 0x3d2 V346
---
Entry stack: [V11, 0x164, V308, 0x0, V299, V336, S1, S0]
Stack pops: 3
Stack additions: [S2, V343, V345]
Exit stack: [V11, 0x164, V308, 0x0, V299, V336, V343, V345]

================================

Block 0x3e6
[0x3e6:0x3ee]
---
Predecessors: [0x3d2]
Successors: [0x3ef]
---
0x3e6 DUP3
0x3e7 SWAP1
0x3e8 SUB
0x3e9 PUSH1 0x1f
0x3eb AND
0x3ec DUP3
0x3ed ADD
0x3ee SWAP2
---
0x3e8: V348 = SUB V345 V336
0x3e9: V349 = 0x1f
0x3eb: V350 = AND 0x1f V348
0x3ed: V351 = ADD V336 V350
---
Entry stack: [V11, 0x164, V308, 0x0, V299, V336, V343, V345]
Stack pops: 3
Stack additions: [V351, S1, S2]
Exit stack: [V11, 0x164, V308, 0x0, V299, V351, V343, V336]

================================

Block 0x3ef
[0x3ef:0x3f6]
---
Predecessors: [0x359, 0x3b1, 0x3e6]
Successors: [0x164]
---
0x3ef JUMPDEST
0x3f0 POP
0x3f1 POP
0x3f2 POP
0x3f3 POP
0x3f4 POP
0x3f5 DUP2
0x3f6 JUMP
---
0x3ef: JUMPDEST 
0x3f6: JUMP 0x164
---
Entry stack: [V11, 0x164, V308, 0x0, V299, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x164, V308]

================================

Block 0x3f7
[0x3f7:0x40d]
---
Predecessors: [0x1db]
Successors: [0x40e, 0x412]
---
0x3f7 JUMPDEST
0x3f8 PUSH1 0x1
0x3fa SLOAD
0x3fb CALLER
0x3fc PUSH1 0x1
0x3fe PUSH1 0xa0
0x400 PUSH1 0x2
0x402 EXP
0x403 SUB
0x404 SWAP1
0x405 DUP2
0x406 AND
0x407 SWAP2
0x408 AND
0x409 EQ
0x40a PUSH2 0x412
0x40d JUMPI
---
0x3f7: JUMPDEST 
0x3f8: V352 = 0x1
0x3fa: V353 = S[0x1]
0x3fb: V354 = CALLER
0x3fc: V355 = 0x1
0x3fe: V356 = 0xa0
0x400: V357 = 0x2
0x402: V358 = EXP 0x2 0xa0
0x403: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x406: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0x408: V361 = AND V353 0xffffffffffffffffffffffffffffffffffffffff
0x409: V362 = EQ V361 V360
0x40a: V363 = 0x412
0x40d: JUMPI 0x412 V362
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x40e
[0x40e:0x411]
---
Predecessors: [0x3f7]
Successors: []
---
0x40e PUSH1 0x0
0x410 DUP1
0x411 REVERT
---
0x40e: V364 = 0x0
0x411: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x412
[0x412:0x44a]
---
Predecessors: [0x3f7]
Successors: [0x44b, 0x44f]
---
0x412 JUMPDEST
0x413 CALLER
0x414 PUSH1 0x1
0x416 PUSH1 0xa0
0x418 PUSH1 0x2
0x41a EXP
0x41b SUB
0x41c AND
0x41d PUSH2 0x8fc
0x420 ADDRESS
0x421 PUSH1 0x1
0x423 PUSH1 0xa0
0x425 PUSH1 0x2
0x427 EXP
0x428 SUB
0x429 AND
0x42a BALANCE
0x42b SWAP1
0x42c DUP2
0x42d ISZERO
0x42e MUL
0x42f SWAP1
0x430 PUSH1 0x40
0x432 MLOAD
0x433 PUSH1 0x0
0x435 PUSH1 0x40
0x437 MLOAD
0x438 DUP1
0x439 DUP4
0x43a SUB
0x43b DUP2
0x43c DUP6
0x43d DUP9
0x43e DUP9
0x43f CALL
0x440 SWAP4
0x441 POP
0x442 POP
0x443 POP
0x444 POP
0x445 ISZERO
0x446 ISZERO
0x447 PUSH2 0x44f
0x44a JUMPI
---
0x412: JUMPDEST 
0x413: V365 = CALLER
0x414: V366 = 0x1
0x416: V367 = 0xa0
0x418: V368 = 0x2
0x41a: V369 = EXP 0x2 0xa0
0x41b: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41c: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x41d: V372 = 0x8fc
0x420: V373 = ADDRESS
0x421: V374 = 0x1
0x423: V375 = 0xa0
0x425: V376 = 0x2
0x427: V377 = EXP 0x2 0xa0
0x428: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x429: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x42a: V380 = BALANCE V379
0x42d: V381 = ISZERO V380
0x42e: V382 = MUL V381 0x8fc
0x430: V383 = 0x40
0x432: V384 = M[0x40]
0x433: V385 = 0x0
0x435: V386 = 0x40
0x437: V387 = M[0x40]
0x43a: V388 = SUB V384 V387
0x43f: V389 = CALL V382 V371 V380 V387 V388 V387 0x0
0x445: V390 = ISZERO V389
0x446: V391 = ISZERO V390
0x447: V392 = 0x44f
0x44a: JUMPI 0x44f V391
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x44b
[0x44b:0x44e]
---
Predecessors: [0x412]
Successors: []
---
0x44b PUSH1 0x0
0x44d DUP1
0x44e REVERT
---
0x44b: V393 = 0x0
0x44e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x44f
[0x44f:0x450]
---
Predecessors: [0x412]
Successors: [0x6c]
---
0x44f JUMPDEST
0x450 JUMP
---
0x44f: JUMPDEST 
0x450: JUMP 0x6c
---
Entry stack: [V11, 0x6c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x451
[0x451:0x481]
---
Predecessors: [0x21c, 0x33f]
Successors: [0x482, 0x492]
---
0x451 JUMPDEST
0x452 DUP3
0x453 DUP1
0x454 SLOAD
0x455 PUSH1 0x1
0x457 DUP2
0x458 PUSH1 0x1
0x45a AND
0x45b ISZERO
0x45c PUSH2 0x100
0x45f MUL
0x460 SUB
0x461 AND
0x462 PUSH1 0x2
0x464 SWAP1
0x465 DIV
0x466 SWAP1
0x467 PUSH1 0x0
0x469 MSTORE
0x46a PUSH1 0x20
0x46c PUSH1 0x0
0x46e SHA3
0x46f SWAP1
0x470 PUSH1 0x1f
0x472 ADD
0x473 PUSH1 0x20
0x475 SWAP1
0x476 DIV
0x477 DUP2
0x478 ADD
0x479 SWAP3
0x47a DUP3
0x47b PUSH1 0x1f
0x47d LT
0x47e PUSH2 0x492
0x481 JUMPI
---
0x451: JUMPDEST 
0x454: V394 = S[0x0]
0x455: V395 = 0x1
0x458: V396 = 0x1
0x45a: V397 = AND 0x1 V394
0x45b: V398 = ISZERO V397
0x45c: V399 = 0x100
0x45f: V400 = MUL 0x100 V398
0x460: V401 = SUB V400 0x1
0x461: V402 = AND V401 V394
0x462: V403 = 0x2
0x465: V404 = DIV V402 0x2
0x467: V405 = 0x0
0x469: M[0x0] = 0x0
0x46a: V406 = 0x20
0x46c: V407 = 0x0
0x46e: V408 = SHA3 0x0 0x20
0x470: V409 = 0x1f
0x472: V410 = ADD 0x1f V404
0x473: V411 = 0x20
0x476: V412 = DIV V410 0x20
0x478: V413 = ADD V408 V412
0x47b: V414 = 0x1f
0x47d: V415 = LT 0x1f S0
0x47e: V416 = 0x492
0x481: JUMPI 0x492 V415
---
Entry stack: [V11, 0x6c, S5, S4, {0x25f, 0x352}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S2, V413, S0, V408, S1]
Exit stack: [V11, 0x6c, S5, S4, {0x25f, 0x352}, 0x0, V413, S0, V408, S1]

================================

Block 0x482
[0x482:0x491]
---
Predecessors: [0x451]
Successors: [0x4bf]
---
0x482 DUP1
0x483 MLOAD
0x484 PUSH1 0xff
0x486 NOT
0x487 AND
0x488 DUP4
0x489 DUP1
0x48a ADD
0x48b OR
0x48c DUP6
0x48d SSTORE
0x48e PUSH2 0x4bf
0x491 JUMP
---
0x483: V417 = M[S0]
0x484: V418 = 0xff
0x486: V419 = NOT 0xff
0x487: V420 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V417
0x48a: V421 = ADD S2 S2
0x48b: V422 = OR V421 V420
0x48d: S[0x0] = V422
0x48e: V423 = 0x4bf
0x491: JUMP 0x4bf
---
Entry stack: [V11, 0x6c, S7, S6, {0x25f, 0x352}, 0x0, V413, S2, V408, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x25f, 0x352}, 0x0, V413, S2, V408, S0]

================================

Block 0x492
[0x492:0x4a0]
---
Predecessors: [0x451]
Successors: [0x4a1, 0x4bf]
---
0x492 JUMPDEST
0x493 DUP3
0x494 DUP1
0x495 ADD
0x496 PUSH1 0x1
0x498 ADD
0x499 DUP6
0x49a SSTORE
0x49b DUP3
0x49c ISZERO
0x49d PUSH2 0x4bf
0x4a0 JUMPI
---
0x492: JUMPDEST 
0x495: V424 = ADD S2 S2
0x496: V425 = 0x1
0x498: V426 = ADD 0x1 V424
0x49a: S[0x0] = V426
0x49c: V427 = ISZERO S2
0x49d: V428 = 0x4bf
0x4a0: JUMPI 0x4bf V427
---
Entry stack: [V11, 0x6c, S7, S6, {0x25f, 0x352}, 0x0, V413, S2, V408, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x25f, 0x352}, 0x0, V413, S2, V408, S0]

================================

Block 0x4a1
[0x4a1:0x4a3]
---
Predecessors: [0x492]
Successors: [0x4a4]
---
0x4a1 SWAP2
0x4a2 DUP3
0x4a3 ADD
---
0x4a3: V429 = ADD S0 S2
---
Entry stack: [V11, 0x6c, S7, S6, {0x25f, 0x352}, 0x0, V413, S2, V408, S0]
Stack pops: 3
Stack additions: [S0, S1, V429]
Exit stack: [V11, 0x6c, S7, S6, {0x25f, 0x352}, 0x0, V413, S0, V408, V429]

================================

Block 0x4a4
[0x4a4:0x4ac]
---
Predecessors: [0x4a1, 0x4ad]
Successors: [0x4ad, 0x4bf]
---
0x4a4 JUMPDEST
0x4a5 DUP3
0x4a6 DUP2
0x4a7 GT
0x4a8 ISZERO
0x4a9 PUSH2 0x4bf
0x4ac JUMPI
---
0x4a4: JUMPDEST 
0x4a7: V430 = GT V429 S2
0x4a8: V431 = ISZERO V430
0x4a9: V432 = 0x4bf
0x4ac: JUMPI 0x4bf V431
---
Entry stack: [V11, 0x6c, S7, S6, {0x25f, 0x352}, 0x0, V413, S2, S1, V429]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x25f, 0x352}, 0x0, V413, S2, S1, V429]

================================

Block 0x4ad
[0x4ad:0x4be]
---
Predecessors: [0x4a4]
Successors: [0x4a4]
---
0x4ad DUP3
0x4ae MLOAD
0x4af DUP3
0x4b0 SSTORE
0x4b1 SWAP2
0x4b2 PUSH1 0x20
0x4b4 ADD
0x4b5 SWAP2
0x4b6 SWAP1
0x4b7 PUSH1 0x1
0x4b9 ADD
0x4ba SWAP1
0x4bb PUSH2 0x4a4
0x4be JUMP
---
0x4ae: V433 = M[S2]
0x4b0: S[S1] = V433
0x4b2: V434 = 0x20
0x4b4: V435 = ADD 0x20 S2
0x4b7: V436 = 0x1
0x4b9: V437 = ADD 0x1 S1
0x4bb: V438 = 0x4a4
0x4be: JUMP 0x4a4
---
Entry stack: [V11, 0x6c, S7, S6, {0x25f, 0x352}, 0x0, V413, S2, S1, V429]
Stack pops: 3
Stack additions: [V435, V437, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x25f, 0x352}, 0x0, V413, V435, V437, V429]

================================

Block 0x4bf
[0x4bf:0x4ca]
---
Predecessors: [0x482, 0x492, 0x4a4]
Successors: [0x4cf]
---
0x4bf JUMPDEST
0x4c0 POP
0x4c1 PUSH2 0x4cb
0x4c4 SWAP3
0x4c5 SWAP2
0x4c6 POP
0x4c7 PUSH2 0x4cf
0x4ca JUMP
---
0x4bf: JUMPDEST 
0x4c1: V439 = 0x4cb
0x4c7: V440 = 0x4cf
0x4ca: JUMP 0x4cf
---
Entry stack: [V11, 0x6c, S7, S6, {0x25f, 0x352}, 0x0, V413, S2, S1, S0]
Stack pops: 4
Stack additions: [0x4cb, S3, S1]
Exit stack: [V11, 0x6c, S7, S6, {0x25f, 0x352}, 0x0, 0x4cb, V413, S1]

================================

Block 0x4cb
[0x4cb:0x4ce]
---
Predecessors: [0x4d5, 0x4e9]
Successors: [0x6c, 0x25f, 0x352, 0x4e9]
---
0x4cb JUMPDEST
0x4cc POP
0x4cd SWAP1
0x4ce JUMP
---
0x4cb: JUMPDEST 
0x4ce: JUMP {0x6c, 0x25f, 0x352, 0x4e9}
---
Entry stack: [V11, 0x6c, S7, S6, {0x6c, 0x25f, 0x352}, S4, S3, {0x6c, 0x25f, 0x352, 0x4e9}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x6c, S7, S6, {0x6c, 0x25f, 0x352}, S4, S3, S1]

================================

Block 0x4cf
[0x4cf:0x4d4]
---
Predecessors: [0x4bf]
Successors: [0x4d5]
---
0x4cf JUMPDEST
0x4d0 PUSH2 0x4e9
0x4d3 SWAP2
0x4d4 SWAP1
---
0x4cf: JUMPDEST 
0x4d0: V441 = 0x4e9
---
Entry stack: [V11, 0x6c, S6, S5, {0x25f, 0x352}, 0x0, 0x4cb, V413, S0]
Stack pops: 2
Stack additions: [0x4e9, S1, S0]
Exit stack: [V11, 0x6c, S6, S5, {0x25f, 0x352}, 0x0, 0x4cb, 0x4e9, V413, S0]

================================

Block 0x4d5
[0x4d5:0x4dd]
---
Predecessors: [0x4cf, 0x4de]
Successors: [0x4cb, 0x4de]
---
0x4d5 JUMPDEST
0x4d6 DUP1
0x4d7 DUP3
0x4d8 GT
0x4d9 ISZERO
0x4da PUSH2 0x4cb
0x4dd JUMPI
---
0x4d5: JUMPDEST 
0x4d8: V442 = GT V413 S0
0x4d9: V443 = ISZERO V442
0x4da: V444 = 0x4cb
0x4dd: JUMPI 0x4cb V443
---
Entry stack: [V11, 0x6c, S7, S6, {0x25f, 0x352}, 0x0, 0x4cb, 0x4e9, V413, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x25f, 0x352}, 0x0, 0x4cb, 0x4e9, V413, S0]

================================

Block 0x4de
[0x4de:0x4e8]
---
Predecessors: [0x4d5]
Successors: [0x4d5]
---
0x4de PUSH1 0x0
0x4e0 DUP2
0x4e1 SSTORE
0x4e2 PUSH1 0x1
0x4e4 ADD
0x4e5 PUSH2 0x4d5
0x4e8 JUMP
---
0x4de: V445 = 0x0
0x4e1: S[S0] = 0x0
0x4e2: V446 = 0x1
0x4e4: V447 = ADD 0x1 S0
0x4e5: V448 = 0x4d5
0x4e8: JUMP 0x4d5
---
Entry stack: [V11, 0x6c, S7, S6, {0x25f, 0x352}, 0x0, 0x4cb, 0x4e9, V413, S0]
Stack pops: 1
Stack additions: [V447]
Exit stack: [V11, 0x6c, S7, S6, {0x25f, 0x352}, 0x0, 0x4cb, 0x4e9, V413, V447]

================================

Block 0x4e9
[0x4e9:0x4eb]
---
Predecessors: [0x4cb]
Successors: [0x4cb]
---
0x4e9 JUMPDEST
0x4ea SWAP1
0x4eb JUMP
---
0x4e9: JUMPDEST 
0x4eb: JUMP S1
---
Entry stack: [V11, 0x6c, S5, S4, {0x6c, 0x25f, 0x352}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x6c, S5, S4, {0x6c, 0x25f, 0x352}, S2, S0]

================================

Block 0x4ec
[0x4ec:0x524]
---
Predecessors: []
Successors: []
---
0x4ec STOP
0x4ed LOG1
0x4ee PUSH6 0x627a7a723058
0x4f5 SHA3
0x4f6 MISSING 0xa6
0x4f7 MISSING 0xe
0x4f8 MISSING 0xb8
0x4f9 MISSING 0x46
0x4fa MISSING 0xb3
0x4fb MISSING 0xcc
0x4fc MISSING 0xc2
0x4fd MISSING 0xc5
0x4fe CALLDATASIZE
0x4ff MISSING 0x29
0x500 EQ
0x501 LOG2
0x502 MISSING 0xbf
0x503 SWAP8
0x504 MISSING 0xd2
0x505 MISSING 0xcc
0x506 COINBASE
0x507 MISSING 0x4c
0x508 PUSH28 0x5909d724d57e817e3730ddc6ea0029
---
0x4ec: STOP 
0x4ed: LOG S0 S1 S2
0x4ee: V449 = 0x627a7a723058
0x4f5: V450 = SHA3 0x627a7a723058 S3
0x4f6: MISSING 0xa6
0x4f7: MISSING 0xe
0x4f8: MISSING 0xb8
0x4f9: MISSING 0x46
0x4fa: MISSING 0xb3
0x4fb: MISSING 0xcc
0x4fc: MISSING 0xc2
0x4fd: MISSING 0xc5
0x4fe: V451 = CALLDATASIZE
0x4ff: MISSING 0x29
0x500: V452 = EQ S0 S1
0x501: LOG V452 S2 S3 S4
0x502: MISSING 0xbf
0x504: MISSING 0xd2
0x505: MISSING 0xcc
0x506: V453 = COINBASE
0x507: MISSING 0x4c
0x508: V454 = 0x5909d724d57e817e3730ddc6ea0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V450, V451, S8, S1, S2, S3, S4, S5, S6, S7, S0, V453, 0x5909d724d57e817e3730ddc6ea0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1f1c827f
Entry block: 0x6e
Exit block: 0x6c
Body: 0x6c, 0x6e, 0x1e3, 0x1ed, 0x1fd, 0x206, 0x21c, 0x25f, 0x289, 0x352

Function 1:
Public function signature: 0x3853682c
Entry block: 0xf6
Exit block: 0x6c
Body: 0x6c, 0xf6, 0x25f, 0x289, 0x28d, 0x2a9, 0x2ad, 0x2d6, 0x2e2, 0x2e8, 0x320, 0x352

Function 2:
Public function signature: 0x3e3ee859
Entry block: 0x109
Exit block: 0x6c
Body: 0x6c, 0x109, 0x25f, 0x289, 0x324, 0x33b, 0x33f, 0x352

Function 3:
Public function signature: 0x3fad9ae0
Entry block: 0x151
Exit block: 0x1cd
Body: 0x151, 0x158, 0x15c, 0x164, 0x188, 0x191, 0x1a0, 0x1b4, 0x1cd, 0x359, 0x3a9, 0x3b1, 0x3c4, 0x3d2, 0x3e6, 0x3ef

Function 4:
Public function signature: 0xf50ab247
Entry block: 0x1db
Exit block: 0x6c
Body: 0x6c, 0x1db, 0x3f7, 0x40e, 0x412, 0x44b, 0x44f

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0x6c
Body: 0x6c

Function 6:
Private function
Entry block: 0x451
Exit block: 0x4cb
Body: 0x451, 0x482, 0x492, 0x4a1, 0x4a4, 0x4ad, 0x4bf, 0x4cb, 0x4cf, 0x4d5, 0x4de, 0x4e9

