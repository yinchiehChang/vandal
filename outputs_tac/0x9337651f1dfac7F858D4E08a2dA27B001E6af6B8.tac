Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xa9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xa9
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xa9
0xa: JUMPI 0xa9 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x22c]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0xa4740ff
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x22c
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0xa4740ff
0x20: V14 = EQ V12 0xa4740ff
0x21: V15 = 0x22c
0x24: JUMPI 0x22c V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x241]
---
0x25 DUP1
0x26 PUSH4 0x2c4e722e
0x2b EQ
0x2c PUSH2 0x241
0x2f JUMPI
---
0x26: V16 = 0x2c4e722e
0x2b: V17 = EQ 0x2c4e722e V12
0x2c: V18 = 0x241
0x2f: JUMPI 0x241 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x266]
---
0x30 DUP1
0x31 PUSH4 0x34fcf437
0x36 EQ
0x37 PUSH2 0x266
0x3a JUMPI
---
0x31: V19 = 0x34fcf437
0x36: V20 = EQ 0x34fcf437 V12
0x37: V21 = 0x266
0x3a: JUMPI 0x266 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x27e]
---
0x3b DUP1
0x3c PUSH4 0x4042b66f
0x41 EQ
0x42 PUSH2 0x27e
0x45 JUMPI
---
0x3c: V22 = 0x4042b66f
0x41: V23 = EQ 0x4042b66f V12
0x42: V24 = 0x27e
0x45: JUMPI 0x27e V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x2a3]
---
0x46 DUP1
0x47 PUSH4 0x43d726d6
0x4c EQ
0x4d PUSH2 0x2a3
0x50 JUMPI
---
0x47: V25 = 0x43d726d6
0x4c: V26 = EQ 0x43d726d6 V12
0x4d: V27 = 0x2a3
0x50: JUMPI 0x2a3 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x2b8]
---
0x51 DUP1
0x52 PUSH4 0x521eb273
0x57 EQ
0x58 PUSH2 0x2b8
0x5b JUMPI
---
0x52: V28 = 0x521eb273
0x57: V29 = EQ 0x521eb273 V12
0x58: V30 = 0x2b8
0x5b: JUMPI 0x2b8 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x2e7]
---
0x5c DUP1
0x5d PUSH4 0x8da5cb5b
0x62 EQ
0x63 PUSH2 0x2e7
0x66 JUMPI
---
0x5d: V31 = 0x8da5cb5b
0x62: V32 = EQ 0x8da5cb5b V12
0x63: V33 = 0x2e7
0x66: JUMPI 0x2e7 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x316]
---
0x67 DUP1
0x68 PUSH4 0xacef6037
0x6d EQ
0x6e PUSH2 0x316
0x71 JUMPI
---
0x68: V34 = 0xacef6037
0x6d: V35 = EQ 0xacef6037 V12
0x6e: V36 = 0x316
0x71: JUMPI 0x316 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x33a]
---
0x72 DUP1
0x73 PUSH4 0xc634d032
0x78 EQ
0x79 PUSH2 0x33a
0x7c JUMPI
---
0x73: V37 = 0xc634d032
0x78: V38 = EQ 0xc634d032 V12
0x79: V39 = 0x33a
0x7c: JUMPI 0x33a V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x352]
---
0x7d DUP1
0x7e PUSH4 0xc683d8e4
0x83 EQ
0x84 PUSH2 0x352
0x87 JUMPI
---
0x7e: V40 = 0xc683d8e4
0x83: V41 = EQ 0xc683d8e4 V12
0x84: V42 = 0x352
0x87: JUMPI 0x352 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x367]
---
0x88 DUP1
0x89 PUSH4 0xeb8d2444
0x8e EQ
0x8f PUSH2 0x367
0x92 JUMPI
---
0x89: V43 = 0xeb8d2444
0x8e: V44 = EQ 0xeb8d2444 V12
0x8f: V45 = 0x367
0x92: JUMPI 0x367 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x38e]
---
0x93 DUP1
0x94 PUSH4 0xf2fde38b
0x99 EQ
0x9a PUSH2 0x38e
0x9d JUMPI
---
0x94: V46 = 0xf2fde38b
0x99: V47 = EQ 0xf2fde38b V12
0x9a: V48 = 0x38e
0x9d: JUMPI 0x38e V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x3af]
---
0x9e DUP1
0x9f PUSH4 0xfc0c546a
0xa4 EQ
0xa5 PUSH2 0x3af
0xa8 JUMPI
---
0x9f: V49 = 0xfc0c546a
0xa4: V50 = EQ 0xfc0c546a V12
0xa5: V51 = 0x3af
0xa8: JUMPI 0x3af V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xac]
---
Predecessors: [0x0, 0x9e]
Successors: [0xad]
---
0xa9 JUMPDEST
0xaa PUSH2 0x22a
---
0xa9: JUMPDEST 
0xaa: V52 = 0x22a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x22a]
Exit stack: [V12, 0x22a]

================================

Block 0xad
[0xad:0xc0]
---
Predecessors: [0xa9]
Successors: [0xc1, 0xc5]
---
0xad JUMPDEST
0xae PUSH1 0x0
0xb0 DUP1
0xb1 PUSH1 0x1
0xb3 PUSH1 0xa0
0xb5 PUSH1 0x2
0xb7 EXP
0xb8 SUB
0xb9 CALLER
0xba AND
0xbb ISZERO
0xbc ISZERO
0xbd PUSH2 0xc5
0xc0 JUMPI
---
0xad: JUMPDEST 
0xae: V53 = 0x0
0xb1: V54 = 0x1
0xb3: V55 = 0xa0
0xb5: V56 = 0x2
0xb7: V57 = EXP 0x2 0xa0
0xb8: V58 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9: V59 = CALLER
0xba: V60 = AND V59 0xffffffffffffffffffffffffffffffffffffffff
0xbb: V61 = ISZERO V60
0xbc: V62 = ISZERO V61
0xbd: V63 = 0xc5
0xc0: JUMPI 0xc5 V62
---
Entry stack: [V12, 0x22a]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x22a, 0x0, 0x0]

================================

Block 0xc1
[0xc1:0xc4]
---
Predecessors: [0xad]
Successors: []
---
0xc1 PUSH1 0x0
0xc3 DUP1
0xc4 REVERT
---
0xc1: V64 = 0x0
0xc4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, 0x0, 0x0]

================================

Block 0xc5
[0xc5:0xe9]
---
Predecessors: [0xad]
Successors: [0xea, 0xee]
---
0xc5 JUMPDEST
0xc6 PUSH1 0x1
0xc8 SLOAD
0xc9 PUSH21 0x10000000000000000000000000000000000000000
0xdf SWAP1
0xe0 DIV
0xe1 PUSH1 0xff
0xe3 AND
0xe4 ISZERO
0xe5 ISZERO
0xe6 PUSH2 0xee
0xe9 JUMPI
---
0xc5: JUMPDEST 
0xc6: V65 = 0x1
0xc8: V66 = S[0x1]
0xc9: V67 = 0x10000000000000000000000000000000000000000
0xe0: V68 = DIV V66 0x10000000000000000000000000000000000000000
0xe1: V69 = 0xff
0xe3: V70 = AND 0xff V68
0xe4: V71 = ISZERO V70
0xe5: V72 = ISZERO V71
0xe6: V73 = 0xee
0xe9: JUMPI 0xee V72
---
Entry stack: [V12, 0x22a, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, 0x0, 0x0]

================================

Block 0xea
[0xea:0xed]
---
Predecessors: [0xc5]
Successors: []
---
0xea PUSH1 0x0
0xec DUP1
0xed REVERT
---
0xea: V74 = 0x0
0xed: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, 0x0, 0x0]

================================

Block 0xee
[0xee:0xf7]
---
Predecessors: [0xc5]
Successors: [0xf8, 0xfc]
---
0xee JUMPDEST
0xef PUSH1 0x3
0xf1 SLOAD
0xf2 CALLVALUE
0xf3 GT
0xf4 PUSH2 0xfc
0xf7 JUMPI
---
0xee: JUMPDEST 
0xef: V75 = 0x3
0xf1: V76 = S[0x3]
0xf2: V77 = CALLVALUE
0xf3: V78 = GT V77 V76
0xf4: V79 = 0xfc
0xf7: JUMPI 0xfc V78
---
Entry stack: [V12, 0x22a, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, 0x0, 0x0]

================================

Block 0xf8
[0xf8:0xfb]
---
Predecessors: [0xee]
Successors: []
---
0xf8 PUSH1 0x0
0xfa DUP1
0xfb REVERT
---
0xf8: V80 = 0x0
0xfb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, 0x0, 0x0]

================================

Block 0xfc
[0xfc:0x111]
---
Predecessors: [0xee]
Successors: [0x3de]
---
0xfc JUMPDEST
0xfd PUSH1 0x4
0xff SLOAD
0x100 CALLVALUE
0x101 SWAP3
0x102 POP
0x103 PUSH2 0x112
0x106 SWAP1
0x107 DUP4
0x108 PUSH4 0xffffffff
0x10d PUSH2 0x3de
0x110 AND
0x111 JUMP
---
0xfc: JUMPDEST 
0xfd: V81 = 0x4
0xff: V82 = S[0x4]
0x100: V83 = CALLVALUE
0x103: V84 = 0x112
0x108: V85 = 0xffffffff
0x10d: V86 = 0x3de
0x110: V87 = AND 0x3de 0xffffffff
0x111: JUMP 0x3de
---
Entry stack: [V12, 0x22a, 0x0, 0x0]
Stack pops: 2
Stack additions: [V83, S0, 0x112, V82, V83]
Exit stack: [V12, 0x22a, V83, 0x0, 0x112, V82, V83]

================================

Block 0x112
[0x112:0x128]
---
Predecessors: [0x3f1]
Successors: [0x3f8]
---
0x112 JUMPDEST
0x113 PUSH1 0x4
0x115 SSTORE
0x116 PUSH1 0x3
0x118 SLOAD
0x119 PUSH2 0x129
0x11c SWAP1
0x11d DUP4
0x11e SWAP1
0x11f PUSH4 0xffffffff
0x124 PUSH2 0x3f8
0x127 AND
0x128 JUMP
---
0x112: JUMPDEST 
0x113: V88 = 0x4
0x115: S[0x4] = V356
0x116: V89 = 0x3
0x118: V90 = S[0x3]
0x119: V91 = 0x129
0x11f: V92 = 0xffffffff
0x124: V93 = 0x3f8
0x127: V94 = AND 0x3f8 0xffffffff
0x128: JUMP 0x3f8
---
Entry stack: [V12, 0x22a, V83, 0x0, V356]
Stack pops: 3
Stack additions: [S2, S1, 0x129, S2, V90]
Exit stack: [V12, 0x22a, V83, 0x0, 0x129, V83, V90]

================================

Block 0x129
[0x129:0x15b]
---
Predecessors: [0x40d]
Successors: [0x15c, 0x160]
---
0x129 JUMPDEST
0x12a PUSH1 0x2
0x12c SLOAD
0x12d SWAP1
0x12e SWAP2
0x12f POP
0x130 PUSH1 0x1
0x132 PUSH1 0xa0
0x134 PUSH1 0x2
0x136 EXP
0x137 SUB
0x138 AND
0x139 CALLVALUE
0x13a DUP1
0x13b ISZERO
0x13c PUSH2 0x8fc
0x13f MUL
0x140 SWAP1
0x141 PUSH1 0x40
0x143 MLOAD
0x144 PUSH1 0x0
0x146 PUSH1 0x40
0x148 MLOAD
0x149 DUP1
0x14a DUP4
0x14b SUB
0x14c DUP2
0x14d DUP6
0x14e DUP9
0x14f DUP9
0x150 CALL
0x151 SWAP4
0x152 POP
0x153 POP
0x154 POP
0x155 POP
0x156 ISZERO
0x157 ISZERO
0x158 PUSH2 0x160
0x15b JUMPI
---
0x129: JUMPDEST 
0x12a: V95 = 0x2
0x12c: V96 = S[0x2]
0x130: V97 = 0x1
0x132: V98 = 0xa0
0x134: V99 = 0x2
0x136: V100 = EXP 0x2 0xa0
0x137: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x138: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x139: V103 = CALLVALUE
0x13b: V104 = ISZERO V103
0x13c: V105 = 0x8fc
0x13f: V106 = MUL 0x8fc V104
0x141: V107 = 0x40
0x143: V108 = M[0x40]
0x144: V109 = 0x0
0x146: V110 = 0x40
0x148: V111 = M[0x40]
0x14b: V112 = SUB V108 V111
0x150: V113 = CALL V106 V102 V103 V111 V112 V111 0x0
0x156: V114 = ISZERO V113
0x157: V115 = ISZERO V114
0x158: V116 = 0x160
0x15b: JUMPI 0x160 V115
---
Entry stack: [V12, 0x22a, V83, 0x0, V364]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x22a, V83, V364]

================================

Block 0x15c
[0x15c:0x15f]
---
Predecessors: [0x129]
Successors: []
---
0x15c PUSH1 0x0
0x15e DUP1
0x15f REVERT
---
0x15c: V117 = 0x0
0x15f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a, V83, V364]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V83, V364]

================================

Block 0x160
[0x160:0x1ba]
---
Predecessors: [0x129]
Successors: [0x1bb, 0x1bf]
---
0x160 JUMPDEST
0x161 PUSH1 0x1
0x163 SLOAD
0x164 PUSH1 0x1
0x166 PUSH1 0xa0
0x168 PUSH1 0x2
0x16a EXP
0x16b SUB
0x16c AND
0x16d PUSH4 0xa9059cbb
0x172 CALLER
0x173 DUP4
0x174 PUSH1 0x0
0x176 PUSH1 0x40
0x178 MLOAD
0x179 PUSH1 0x20
0x17b ADD
0x17c MSTORE
0x17d PUSH1 0x40
0x17f MLOAD
0x180 PUSH1 0xe0
0x182 PUSH1 0x2
0x184 EXP
0x185 PUSH4 0xffffffff
0x18a DUP6
0x18b AND
0x18c MUL
0x18d DUP2
0x18e MSTORE
0x18f PUSH1 0x1
0x191 PUSH1 0xa0
0x193 PUSH1 0x2
0x195 EXP
0x196 SUB
0x197 SWAP1
0x198 SWAP3
0x199 AND
0x19a PUSH1 0x4
0x19c DUP4
0x19d ADD
0x19e MSTORE
0x19f PUSH1 0x24
0x1a1 DUP3
0x1a2 ADD
0x1a3 MSTORE
0x1a4 PUSH1 0x44
0x1a6 ADD
0x1a7 PUSH1 0x20
0x1a9 PUSH1 0x40
0x1ab MLOAD
0x1ac DUP1
0x1ad DUP4
0x1ae SUB
0x1af DUP2
0x1b0 PUSH1 0x0
0x1b2 DUP8
0x1b3 DUP1
0x1b4 EXTCODESIZE
0x1b5 ISZERO
0x1b6 ISZERO
0x1b7 PUSH2 0x1bf
0x1ba JUMPI
---
0x160: JUMPDEST 
0x161: V118 = 0x1
0x163: V119 = S[0x1]
0x164: V120 = 0x1
0x166: V121 = 0xa0
0x168: V122 = 0x2
0x16a: V123 = EXP 0x2 0xa0
0x16b: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16c: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x16d: V126 = 0xa9059cbb
0x172: V127 = CALLER
0x174: V128 = 0x0
0x176: V129 = 0x40
0x178: V130 = M[0x40]
0x179: V131 = 0x20
0x17b: V132 = ADD 0x20 V130
0x17c: M[V132] = 0x0
0x17d: V133 = 0x40
0x17f: V134 = M[0x40]
0x180: V135 = 0xe0
0x182: V136 = 0x2
0x184: V137 = EXP 0x2 0xe0
0x185: V138 = 0xffffffff
0x18b: V139 = AND 0xa9059cbb 0xffffffff
0x18c: V140 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x18e: M[V134] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x18f: V141 = 0x1
0x191: V142 = 0xa0
0x193: V143 = 0x2
0x195: V144 = EXP 0x2 0xa0
0x196: V145 = SUB 0x10000000000000000000000000000000000000000 0x1
0x199: V146 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x19a: V147 = 0x4
0x19d: V148 = ADD V134 0x4
0x19e: M[V148] = V146
0x19f: V149 = 0x24
0x1a2: V150 = ADD V134 0x24
0x1a3: M[V150] = V364
0x1a4: V151 = 0x44
0x1a6: V152 = ADD 0x44 V134
0x1a7: V153 = 0x20
0x1a9: V154 = 0x40
0x1ab: V155 = M[0x40]
0x1ae: V156 = SUB V152 V155
0x1b0: V157 = 0x0
0x1b4: V158 = EXTCODESIZE V125
0x1b5: V159 = ISZERO V158
0x1b6: V160 = ISZERO V159
0x1b7: V161 = 0x1bf
0x1ba: JUMPI 0x1bf V160
---
Entry stack: [V12, 0x22a, V83, V364]
Stack pops: 1
Stack additions: [S0, V125, 0xa9059cbb, V152, 0x20, V155, V156, V155, 0x0, V125]
Exit stack: [V12, 0x22a, V83, V364, V125, 0xa9059cbb, V152, 0x20, V155, V156, V155, 0x0, V125]

================================

Block 0x1bb
[0x1bb:0x1be]
---
Predecessors: [0x160]
Successors: []
---
0x1bb PUSH1 0x0
0x1bd DUP1
0x1be REVERT
---
0x1bb: V162 = 0x0
0x1be: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a, V83, V364, V125, 0xa9059cbb, V152, 0x20, V155, V156, V155, 0x0, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V83, V364, V125, 0xa9059cbb, V152, 0x20, V155, V156, V155, 0x0, V125]

================================

Block 0x1bf
[0x1bf:0x1cb]
---
Predecessors: [0x160]
Successors: [0x1cc, 0x1d0]
---
0x1bf JUMPDEST
0x1c0 PUSH2 0x2c6
0x1c3 GAS
0x1c4 SUB
0x1c5 CALL
0x1c6 ISZERO
0x1c7 ISZERO
0x1c8 PUSH2 0x1d0
0x1cb JUMPI
---
0x1bf: JUMPDEST 
0x1c0: V163 = 0x2c6
0x1c3: V164 = GAS
0x1c4: V165 = SUB V164 0x2c6
0x1c5: V166 = CALL V165 V125 0x0 V155 V156 V155 0x20
0x1c6: V167 = ISZERO V166
0x1c7: V168 = ISZERO V167
0x1c8: V169 = 0x1d0
0x1cb: JUMPI 0x1d0 V168
---
Entry stack: [V12, 0x22a, V83, V364, V125, 0xa9059cbb, V152, 0x20, V155, V156, V155, 0x0, V125]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x22a, V83, V364, V125, 0xa9059cbb, V152]

================================

Block 0x1cc
[0x1cc:0x1cf]
---
Predecessors: [0x1bf]
Successors: []
---
0x1cc PUSH1 0x0
0x1ce DUP1
0x1cf REVERT
---
0x1cc: V170 = 0x0
0x1cf: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a, V83, V364, V125, 0xa9059cbb, V152]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V83, V364, V125, 0xa9059cbb, V152]

================================

Block 0x1d0
[0x1d0:0x225]
---
Predecessors: [0x1bf]
Successors: [0x226]
---
0x1d0 JUMPDEST
0x1d1 POP
0x1d2 POP
0x1d3 POP
0x1d4 PUSH1 0x40
0x1d6 MLOAD
0x1d7 DUP1
0x1d8 MLOAD
0x1d9 POP
0x1da POP
0x1db PUSH1 0x2
0x1dd SLOAD
0x1de PUSH1 0x1
0x1e0 PUSH1 0xa0
0x1e2 PUSH1 0x2
0x1e4 EXP
0x1e5 SUB
0x1e6 SWAP1
0x1e7 DUP2
0x1e8 AND
0x1e9 SWAP1
0x1ea CALLER
0x1eb AND
0x1ec PUSH32 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x20d DUP5
0x20e DUP5
0x20f PUSH1 0x40
0x211 MLOAD
0x212 SWAP2
0x213 DUP3
0x214 MSTORE
0x215 PUSH1 0x20
0x217 DUP3
0x218 ADD
0x219 MSTORE
0x21a PUSH1 0x40
0x21c SWAP1
0x21d DUP2
0x21e ADD
0x21f SWAP1
0x220 MLOAD
0x221 DUP1
0x222 SWAP2
0x223 SUB
0x224 SWAP1
0x225 LOG3
---
0x1d0: JUMPDEST 
0x1d4: V171 = 0x40
0x1d6: V172 = M[0x40]
0x1d8: V173 = M[V172]
0x1db: V174 = 0x2
0x1dd: V175 = S[0x2]
0x1de: V176 = 0x1
0x1e0: V177 = 0xa0
0x1e2: V178 = 0x2
0x1e4: V179 = EXP 0x2 0xa0
0x1e5: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e8: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x1ea: V182 = CALLER
0x1eb: V183 = AND V182 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V184 = 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18
0x20f: V185 = 0x40
0x211: V186 = M[0x40]
0x214: M[V186] = V83
0x215: V187 = 0x20
0x218: V188 = ADD V186 0x20
0x219: M[V188] = V364
0x21a: V189 = 0x40
0x21e: V190 = ADD 0x40 V186
0x220: V191 = M[0x40]
0x223: V192 = SUB V190 V191
0x225: LOG V191 V192 0x623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad18 V183 V181
---
Entry stack: [V12, 0x22a, V83, V364, V125, 0xa9059cbb, V152]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V12, 0x22a, V83, V364]

================================

Block 0x226
[0x226:0x229]
---
Predecessors: [0x1d0]
Successors: [0x22a]
---
0x226 JUMPDEST
0x227 POP
0x228 POP
0x229 JUMP
---
0x226: JUMPDEST 
0x229: JUMP 0x22a
---
Entry stack: [V12, 0x22a, V83, V364]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x22a
[0x22a:0x22b]
---
Predecessors: [0x226, 0x44f, 0x479, 0x563, 0x5e0, 0x635, 0x69d]
Successors: []
---
0x22a JUMPDEST
0x22b STOP
---
0x22a: JUMPDEST 
0x22b: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x22c
[0x22c:0x232]
---
Predecessors: [0xb]
Successors: [0x233, 0x237]
---
0x22c JUMPDEST
0x22d CALLVALUE
0x22e ISZERO
0x22f PUSH2 0x237
0x232 JUMPI
---
0x22c: JUMPDEST 
0x22d: V193 = CALLVALUE
0x22e: V194 = ISZERO V193
0x22f: V195 = 0x237
0x232: JUMPI 0x237 V194
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x233
[0x233:0x236]
---
Predecessors: [0x22c]
Successors: []
---
0x233 PUSH1 0x0
0x235 DUP1
0x236 REVERT
---
0x233: V196 = 0x0
0x236: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x237
[0x237:0x23e]
---
Predecessors: [0x22c]
Successors: [0x414]
---
0x237 JUMPDEST
0x238 PUSH2 0x22a
0x23b PUSH2 0x414
0x23e JUMP
---
0x237: JUMPDEST 
0x238: V197 = 0x22a
0x23b: V198 = 0x414
0x23e: JUMP 0x414
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x22a]
Exit stack: [V12, 0x22a]

================================

Block 0x23f
[0x23f:0x240]
---
Predecessors: []
Successors: []
---
0x23f JUMPDEST
0x240 STOP
---
0x23f: JUMPDEST 
0x240: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x241
[0x241:0x247]
---
Predecessors: [0x25]
Successors: [0x248, 0x24c]
---
0x241 JUMPDEST
0x242 CALLVALUE
0x243 ISZERO
0x244 PUSH2 0x24c
0x247 JUMPI
---
0x241: JUMPDEST 
0x242: V199 = CALLVALUE
0x243: V200 = ISZERO V199
0x244: V201 = 0x24c
0x247: JUMPI 0x24c V200
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x248
[0x248:0x24b]
---
Predecessors: [0x241]
Successors: []
---
0x248 PUSH1 0x0
0x24a DUP1
0x24b REVERT
---
0x248: V202 = 0x0
0x24b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24c
[0x24c:0x253]
---
Predecessors: [0x241]
Successors: [0x451]
---
0x24c JUMPDEST
0x24d PUSH2 0x254
0x250 PUSH2 0x451
0x253 JUMP
---
0x24c: JUMPDEST 
0x24d: V203 = 0x254
0x250: V204 = 0x451
0x253: JUMP 0x451
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x254]
Exit stack: [V12, 0x254]

================================

Block 0x254
[0x254:0x265]
---
Predecessors: [0x451, 0x47c]
Successors: []
---
0x254 JUMPDEST
0x255 PUSH1 0x40
0x257 MLOAD
0x258 SWAP1
0x259 DUP2
0x25a MSTORE
0x25b PUSH1 0x20
0x25d ADD
0x25e PUSH1 0x40
0x260 MLOAD
0x261 DUP1
0x262 SWAP2
0x263 SUB
0x264 SWAP1
0x265 RETURN
---
0x254: JUMPDEST 
0x255: V205 = 0x40
0x257: V206 = M[0x40]
0x25a: M[V206] = S0
0x25b: V207 = 0x20
0x25d: V208 = ADD 0x20 V206
0x25e: V209 = 0x40
0x260: V210 = M[0x40]
0x263: V211 = SUB V208 V210
0x265: RETURN V210 V211
---
Entry stack: [V12, 0x254, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x254]

================================

Block 0x266
[0x266:0x26c]
---
Predecessors: [0x30]
Successors: [0x26d, 0x271]
---
0x266 JUMPDEST
0x267 CALLVALUE
0x268 ISZERO
0x269 PUSH2 0x271
0x26c JUMPI
---
0x266: JUMPDEST 
0x267: V212 = CALLVALUE
0x268: V213 = ISZERO V212
0x269: V214 = 0x271
0x26c: JUMPI 0x271 V213
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26d
[0x26d:0x270]
---
Predecessors: [0x266]
Successors: []
---
0x26d PUSH1 0x0
0x26f DUP1
0x270 REVERT
---
0x26d: V215 = 0x0
0x270: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x271
[0x271:0x27b]
---
Predecessors: [0x266]
Successors: [0x457]
---
0x271 JUMPDEST
0x272 PUSH2 0x22a
0x275 PUSH1 0x4
0x277 CALLDATALOAD
0x278 PUSH2 0x457
0x27b JUMP
---
0x271: JUMPDEST 
0x272: V216 = 0x22a
0x275: V217 = 0x4
0x277: V218 = CALLDATALOAD 0x4
0x278: V219 = 0x457
0x27b: JUMP 0x457
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x22a, V218]
Exit stack: [V12, 0x22a, V218]

================================

Block 0x27c
[0x27c:0x27d]
---
Predecessors: []
Successors: []
---
0x27c JUMPDEST
0x27d STOP
---
0x27c: JUMPDEST 
0x27d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x27e
[0x27e:0x284]
---
Predecessors: [0x3b]
Successors: [0x285, 0x289]
---
0x27e JUMPDEST
0x27f CALLVALUE
0x280 ISZERO
0x281 PUSH2 0x289
0x284 JUMPI
---
0x27e: JUMPDEST 
0x27f: V220 = CALLVALUE
0x280: V221 = ISZERO V220
0x281: V222 = 0x289
0x284: JUMPI 0x289 V221
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x285
[0x285:0x288]
---
Predecessors: [0x27e]
Successors: []
---
0x285 PUSH1 0x0
0x287 DUP1
0x288 REVERT
---
0x285: V223 = 0x0
0x288: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x289
[0x289:0x290]
---
Predecessors: [0x27e]
Successors: [0x47c]
---
0x289 JUMPDEST
0x28a PUSH2 0x254
0x28d PUSH2 0x47c
0x290 JUMP
---
0x289: JUMPDEST 
0x28a: V224 = 0x254
0x28d: V225 = 0x47c
0x290: JUMP 0x47c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x254]
Exit stack: [V12, 0x254]

================================

Block 0x291
[0x291:0x2a2]
---
Predecessors: []
Successors: []
---
0x291 JUMPDEST
0x292 PUSH1 0x40
0x294 MLOAD
0x295 SWAP1
0x296 DUP2
0x297 MSTORE
0x298 PUSH1 0x20
0x29a ADD
0x29b PUSH1 0x40
0x29d MLOAD
0x29e DUP1
0x29f SWAP2
0x2a0 SUB
0x2a1 SWAP1
0x2a2 RETURN
---
0x291: JUMPDEST 
0x292: V226 = 0x40
0x294: V227 = M[0x40]
0x297: M[V227] = S0
0x298: V228 = 0x20
0x29a: V229 = ADD 0x20 V227
0x29b: V230 = 0x40
0x29d: V231 = M[0x40]
0x2a0: V232 = SUB V229 V231
0x2a2: RETURN V231 V232
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2a3
[0x2a3:0x2a9]
---
Predecessors: [0x46]
Successors: [0x2aa, 0x2ae]
---
0x2a3 JUMPDEST
0x2a4 CALLVALUE
0x2a5 ISZERO
0x2a6 PUSH2 0x2ae
0x2a9 JUMPI
---
0x2a3: JUMPDEST 
0x2a4: V233 = CALLVALUE
0x2a5: V234 = ISZERO V233
0x2a6: V235 = 0x2ae
0x2a9: JUMPI 0x2ae V234
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2aa
[0x2aa:0x2ad]
---
Predecessors: [0x2a3]
Successors: []
---
0x2aa PUSH1 0x0
0x2ac DUP1
0x2ad REVERT
---
0x2aa: V236 = 0x0
0x2ad: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ae
[0x2ae:0x2b5]
---
Predecessors: [0x2a3]
Successors: [0x482]
---
0x2ae JUMPDEST
0x2af PUSH2 0x22a
0x2b2 PUSH2 0x482
0x2b5 JUMP
---
0x2ae: JUMPDEST 
0x2af: V237 = 0x22a
0x2b2: V238 = 0x482
0x2b5: JUMP 0x482
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x22a]
Exit stack: [V12, 0x22a]

================================

Block 0x2b6
[0x2b6:0x2b7]
---
Predecessors: []
Successors: []
---
0x2b6 JUMPDEST
0x2b7 STOP
---
0x2b6: JUMPDEST 
0x2b7: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2b8
[0x2b8:0x2be]
---
Predecessors: [0x51]
Successors: [0x2bf, 0x2c3]
---
0x2b8 JUMPDEST
0x2b9 CALLVALUE
0x2ba ISZERO
0x2bb PUSH2 0x2c3
0x2be JUMPI
---
0x2b8: JUMPDEST 
0x2b9: V239 = CALLVALUE
0x2ba: V240 = ISZERO V239
0x2bb: V241 = 0x2c3
0x2be: JUMPI 0x2c3 V240
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bf
[0x2bf:0x2c2]
---
Predecessors: [0x2b8]
Successors: []
---
0x2bf PUSH1 0x0
0x2c1 DUP1
0x2c2 REVERT
---
0x2bf: V242 = 0x0
0x2c2: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c3
[0x2c3:0x2ca]
---
Predecessors: [0x2b8]
Successors: [0x4ae]
---
0x2c3 JUMPDEST
0x2c4 PUSH2 0x2cb
0x2c7 PUSH2 0x4ae
0x2ca JUMP
---
0x2c3: JUMPDEST 
0x2c4: V243 = 0x2cb
0x2c7: V244 = 0x4ae
0x2ca: JUMP 0x4ae
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2cb]
Exit stack: [V12, 0x2cb]

================================

Block 0x2cb
[0x2cb:0x2e6]
---
Predecessors: [0x4ae, 0x4bd, 0x6a0]
Successors: []
---
0x2cb JUMPDEST
0x2cc PUSH1 0x40
0x2ce MLOAD
0x2cf PUSH1 0x1
0x2d1 PUSH1 0xa0
0x2d3 PUSH1 0x2
0x2d5 EXP
0x2d6 SUB
0x2d7 SWAP1
0x2d8 SWAP2
0x2d9 AND
0x2da DUP2
0x2db MSTORE
0x2dc PUSH1 0x20
0x2de ADD
0x2df PUSH1 0x40
0x2e1 MLOAD
0x2e2 DUP1
0x2e3 SWAP2
0x2e4 SUB
0x2e5 SWAP1
0x2e6 RETURN
---
0x2cb: JUMPDEST 
0x2cc: V245 = 0x40
0x2ce: V246 = M[0x40]
0x2cf: V247 = 0x1
0x2d1: V248 = 0xa0
0x2d3: V249 = 0x2
0x2d5: V250 = EXP 0x2 0xa0
0x2d6: V251 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d9: V252 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2db: M[V246] = V252
0x2dc: V253 = 0x20
0x2de: V254 = ADD 0x20 V246
0x2df: V255 = 0x40
0x2e1: V256 = M[0x40]
0x2e4: V257 = SUB V254 V256
0x2e6: RETURN V256 V257
---
Entry stack: [V12, 0x2cb, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2cb]

================================

Block 0x2e7
[0x2e7:0x2ed]
---
Predecessors: [0x5c]
Successors: [0x2ee, 0x2f2]
---
0x2e7 JUMPDEST
0x2e8 CALLVALUE
0x2e9 ISZERO
0x2ea PUSH2 0x2f2
0x2ed JUMPI
---
0x2e7: JUMPDEST 
0x2e8: V258 = CALLVALUE
0x2e9: V259 = ISZERO V258
0x2ea: V260 = 0x2f2
0x2ed: JUMPI 0x2f2 V259
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ee
[0x2ee:0x2f1]
---
Predecessors: [0x2e7]
Successors: []
---
0x2ee PUSH1 0x0
0x2f0 DUP1
0x2f1 REVERT
---
0x2ee: V261 = 0x0
0x2f1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f2
[0x2f2:0x2f9]
---
Predecessors: [0x2e7]
Successors: [0x4bd]
---
0x2f2 JUMPDEST
0x2f3 PUSH2 0x2cb
0x2f6 PUSH2 0x4bd
0x2f9 JUMP
---
0x2f2: JUMPDEST 
0x2f3: V262 = 0x2cb
0x2f6: V263 = 0x4bd
0x2f9: JUMP 0x4bd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2cb]
Exit stack: [V12, 0x2cb]

================================

Block 0x2fa
[0x2fa:0x315]
---
Predecessors: []
Successors: []
---
0x2fa JUMPDEST
0x2fb PUSH1 0x40
0x2fd MLOAD
0x2fe PUSH1 0x1
0x300 PUSH1 0xa0
0x302 PUSH1 0x2
0x304 EXP
0x305 SUB
0x306 SWAP1
0x307 SWAP2
0x308 AND
0x309 DUP2
0x30a MSTORE
0x30b PUSH1 0x20
0x30d ADD
0x30e PUSH1 0x40
0x310 MLOAD
0x311 DUP1
0x312 SWAP2
0x313 SUB
0x314 SWAP1
0x315 RETURN
---
0x2fa: JUMPDEST 
0x2fb: V264 = 0x40
0x2fd: V265 = M[0x40]
0x2fe: V266 = 0x1
0x300: V267 = 0xa0
0x302: V268 = 0x2
0x304: V269 = EXP 0x2 0xa0
0x305: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x308: V271 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x30a: M[V265] = V271
0x30b: V272 = 0x20
0x30d: V273 = ADD 0x20 V265
0x30e: V274 = 0x40
0x310: V275 = M[0x40]
0x313: V276 = SUB V273 V275
0x315: RETURN V275 V276
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x316
[0x316:0x31c]
---
Predecessors: [0x67]
Successors: [0x31d, 0x321]
---
0x316 JUMPDEST
0x317 CALLVALUE
0x318 ISZERO
0x319 PUSH2 0x321
0x31c JUMPI
---
0x316: JUMPDEST 
0x317: V277 = CALLVALUE
0x318: V278 = ISZERO V277
0x319: V279 = 0x321
0x31c: JUMPI 0x321 V278
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31d
[0x31d:0x320]
---
Predecessors: [0x316]
Successors: []
---
0x31d PUSH1 0x0
0x31f DUP1
0x320 REVERT
---
0x31d: V280 = 0x0
0x320: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x321
[0x321:0x337]
---
Predecessors: [0x316]
Successors: [0x4cc]
---
0x321 JUMPDEST
0x322 PUSH2 0x22a
0x325 PUSH1 0x1
0x327 PUSH1 0xa0
0x329 PUSH1 0x2
0x32b EXP
0x32c SUB
0x32d PUSH1 0x4
0x32f CALLDATALOAD
0x330 AND
0x331 PUSH1 0x24
0x333 CALLDATALOAD
0x334 PUSH2 0x4cc
0x337 JUMP
---
0x321: JUMPDEST 
0x322: V281 = 0x22a
0x325: V282 = 0x1
0x327: V283 = 0xa0
0x329: V284 = 0x2
0x32b: V285 = EXP 0x2 0xa0
0x32c: V286 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32d: V287 = 0x4
0x32f: V288 = CALLDATALOAD 0x4
0x330: V289 = AND V288 0xffffffffffffffffffffffffffffffffffffffff
0x331: V290 = 0x24
0x333: V291 = CALLDATALOAD 0x24
0x334: V292 = 0x4cc
0x337: JUMP 0x4cc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x22a, V289, V291]
Exit stack: [V12, 0x22a, V289, V291]

================================

Block 0x338
[0x338:0x339]
---
Predecessors: []
Successors: []
---
0x338 JUMPDEST
0x339 STOP
---
0x338: JUMPDEST 
0x339: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x33a
[0x33a:0x340]
---
Predecessors: [0x72]
Successors: [0x341, 0x345]
---
0x33a JUMPDEST
0x33b CALLVALUE
0x33c ISZERO
0x33d PUSH2 0x345
0x340 JUMPI
---
0x33a: JUMPDEST 
0x33b: V293 = CALLVALUE
0x33c: V294 = ISZERO V293
0x33d: V295 = 0x345
0x340: JUMPI 0x345 V294
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x341
[0x341:0x344]
---
Predecessors: [0x33a]
Successors: []
---
0x341 PUSH1 0x0
0x343 DUP1
0x344 REVERT
---
0x341: V296 = 0x0
0x344: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x345
[0x345:0x34f]
---
Predecessors: [0x33a]
Successors: [0x567]
---
0x345 JUMPDEST
0x346 PUSH2 0x22a
0x349 PUSH1 0x4
0x34b CALLDATALOAD
0x34c PUSH2 0x567
0x34f JUMP
---
0x345: JUMPDEST 
0x346: V297 = 0x22a
0x349: V298 = 0x4
0x34b: V299 = CALLDATALOAD 0x4
0x34c: V300 = 0x567
0x34f: JUMP 0x567
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x22a, V299]
Exit stack: [V12, 0x22a, V299]

================================

Block 0x350
[0x350:0x351]
---
Predecessors: []
Successors: []
---
0x350 JUMPDEST
0x351 STOP
---
0x350: JUMPDEST 
0x351: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x352
[0x352:0x358]
---
Predecessors: [0x7d]
Successors: [0x359, 0x35d]
---
0x352 JUMPDEST
0x353 CALLVALUE
0x354 ISZERO
0x355 PUSH2 0x35d
0x358 JUMPI
---
0x352: JUMPDEST 
0x353: V301 = CALLVALUE
0x354: V302 = ISZERO V301
0x355: V303 = 0x35d
0x358: JUMPI 0x35d V302
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x359
[0x359:0x35c]
---
Predecessors: [0x352]
Successors: []
---
0x359 PUSH1 0x0
0x35b DUP1
0x35c REVERT
---
0x359: V304 = 0x0
0x35c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35d
[0x35d:0x364]
---
Predecessors: [0x352]
Successors: [0x5e3]
---
0x35d JUMPDEST
0x35e PUSH2 0x22a
0x361 PUSH2 0x5e3
0x364 JUMP
---
0x35d: JUMPDEST 
0x35e: V305 = 0x22a
0x361: V306 = 0x5e3
0x364: JUMP 0x5e3
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x22a]
Exit stack: [V12, 0x22a]

================================

Block 0x365
[0x365:0x366]
---
Predecessors: []
Successors: []
---
0x365 JUMPDEST
0x366 STOP
---
0x365: JUMPDEST 
0x366: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x367
[0x367:0x36d]
---
Predecessors: [0x88]
Successors: [0x36e, 0x372]
---
0x367 JUMPDEST
0x368 CALLVALUE
0x369 ISZERO
0x36a PUSH2 0x372
0x36d JUMPI
---
0x367: JUMPDEST 
0x368: V307 = CALLVALUE
0x369: V308 = ISZERO V307
0x36a: V309 = 0x372
0x36d: JUMPI 0x372 V308
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x36e
[0x36e:0x371]
---
Predecessors: [0x367]
Successors: []
---
0x36e PUSH1 0x0
0x370 DUP1
0x371 REVERT
---
0x36e: V310 = 0x0
0x371: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x372
[0x372:0x379]
---
Predecessors: [0x367]
Successors: [0x637]
---
0x372 JUMPDEST
0x373 PUSH2 0x37a
0x376 PUSH2 0x637
0x379 JUMP
---
0x372: JUMPDEST 
0x373: V311 = 0x37a
0x376: V312 = 0x637
0x379: JUMP 0x637
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x37a]
Exit stack: [V12, 0x37a]

================================

Block 0x37a
[0x37a:0x38d]
---
Predecessors: [0x637]
Successors: []
---
0x37a JUMPDEST
0x37b PUSH1 0x40
0x37d MLOAD
0x37e SWAP1
0x37f ISZERO
0x380 ISZERO
0x381 DUP2
0x382 MSTORE
0x383 PUSH1 0x20
0x385 ADD
0x386 PUSH1 0x40
0x388 MLOAD
0x389 DUP1
0x38a SWAP2
0x38b SUB
0x38c SWAP1
0x38d RETURN
---
0x37a: JUMPDEST 
0x37b: V313 = 0x40
0x37d: V314 = M[0x40]
0x37f: V315 = ISZERO V583
0x380: V316 = ISZERO V315
0x382: M[V314] = V316
0x383: V317 = 0x20
0x385: V318 = ADD 0x20 V314
0x386: V319 = 0x40
0x388: V320 = M[0x40]
0x38b: V321 = SUB V318 V320
0x38d: RETURN V320 V321
---
Entry stack: [V12, 0x37a, V583]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x37a]

================================

Block 0x38e
[0x38e:0x394]
---
Predecessors: [0x93]
Successors: [0x395, 0x399]
---
0x38e JUMPDEST
0x38f CALLVALUE
0x390 ISZERO
0x391 PUSH2 0x399
0x394 JUMPI
---
0x38e: JUMPDEST 
0x38f: V322 = CALLVALUE
0x390: V323 = ISZERO V322
0x391: V324 = 0x399
0x394: JUMPI 0x399 V323
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x395
[0x395:0x398]
---
Predecessors: [0x38e]
Successors: []
---
0x395 PUSH1 0x0
0x397 DUP1
0x398 REVERT
---
0x395: V325 = 0x0
0x398: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x399
[0x399:0x3ac]
---
Predecessors: [0x38e]
Successors: [0x658]
---
0x399 JUMPDEST
0x39a PUSH2 0x22a
0x39d PUSH1 0x1
0x39f PUSH1 0xa0
0x3a1 PUSH1 0x2
0x3a3 EXP
0x3a4 SUB
0x3a5 PUSH1 0x4
0x3a7 CALLDATALOAD
0x3a8 AND
0x3a9 PUSH2 0x658
0x3ac JUMP
---
0x399: JUMPDEST 
0x39a: V326 = 0x22a
0x39d: V327 = 0x1
0x39f: V328 = 0xa0
0x3a1: V329 = 0x2
0x3a3: V330 = EXP 0x2 0xa0
0x3a4: V331 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a5: V332 = 0x4
0x3a7: V333 = CALLDATALOAD 0x4
0x3a8: V334 = AND V333 0xffffffffffffffffffffffffffffffffffffffff
0x3a9: V335 = 0x658
0x3ac: JUMP 0x658
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x22a, V334]
Exit stack: [V12, 0x22a, V334]

================================

Block 0x3ad
[0x3ad:0x3ae]
---
Predecessors: []
Successors: []
---
0x3ad JUMPDEST
0x3ae STOP
---
0x3ad: JUMPDEST 
0x3ae: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3af
[0x3af:0x3b5]
---
Predecessors: [0x9e]
Successors: [0x3b6, 0x3ba]
---
0x3af JUMPDEST
0x3b0 CALLVALUE
0x3b1 ISZERO
0x3b2 PUSH2 0x3ba
0x3b5 JUMPI
---
0x3af: JUMPDEST 
0x3b0: V336 = CALLVALUE
0x3b1: V337 = ISZERO V336
0x3b2: V338 = 0x3ba
0x3b5: JUMPI 0x3ba V337
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b6
[0x3b6:0x3b9]
---
Predecessors: [0x3af]
Successors: []
---
0x3b6 PUSH1 0x0
0x3b8 DUP1
0x3b9 REVERT
---
0x3b6: V339 = 0x0
0x3b9: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3ba
[0x3ba:0x3c1]
---
Predecessors: [0x3af]
Successors: [0x6a0]
---
0x3ba JUMPDEST
0x3bb PUSH2 0x2cb
0x3be PUSH2 0x6a0
0x3c1 JUMP
---
0x3ba: JUMPDEST 
0x3bb: V340 = 0x2cb
0x3be: V341 = 0x6a0
0x3c1: JUMP 0x6a0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2cb]
Exit stack: [V12, 0x2cb]

================================

Block 0x3c2
[0x3c2:0x3dd]
---
Predecessors: []
Successors: []
---
0x3c2 JUMPDEST
0x3c3 PUSH1 0x40
0x3c5 MLOAD
0x3c6 PUSH1 0x1
0x3c8 PUSH1 0xa0
0x3ca PUSH1 0x2
0x3cc EXP
0x3cd SUB
0x3ce SWAP1
0x3cf SWAP2
0x3d0 AND
0x3d1 DUP2
0x3d2 MSTORE
0x3d3 PUSH1 0x20
0x3d5 ADD
0x3d6 PUSH1 0x40
0x3d8 MLOAD
0x3d9 DUP1
0x3da SWAP2
0x3db SUB
0x3dc SWAP1
0x3dd RETURN
---
0x3c2: JUMPDEST 
0x3c3: V342 = 0x40
0x3c5: V343 = M[0x40]
0x3c6: V344 = 0x1
0x3c8: V345 = 0xa0
0x3ca: V346 = 0x2
0x3cc: V347 = EXP 0x2 0xa0
0x3cd: V348 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d0: V349 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x3d2: M[V343] = V349
0x3d3: V350 = 0x20
0x3d5: V351 = ADD 0x20 V343
0x3d6: V352 = 0x40
0x3d8: V353 = M[0x40]
0x3db: V354 = SUB V351 V353
0x3dd: RETURN V353 V354
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3de
[0x3de:0x3eb]
---
Predecessors: [0xfc]
Successors: [0x3ec, 0x3ed]
---
0x3de JUMPDEST
0x3df PUSH1 0x0
0x3e1 DUP3
0x3e2 DUP3
0x3e3 ADD
0x3e4 DUP4
0x3e5 DUP2
0x3e6 LT
0x3e7 ISZERO
0x3e8 PUSH2 0x3ed
0x3eb JUMPI
---
0x3de: JUMPDEST 
0x3df: V355 = 0x0
0x3e3: V356 = ADD V83 V82
0x3e6: V357 = LT V356 V82
0x3e7: V358 = ISZERO V357
0x3e8: V359 = 0x3ed
0x3eb: JUMPI 0x3ed V358
---
Entry stack: [V12, 0x22a, V83, 0x0, 0x112, V82, V83]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V356]
Exit stack: [V12, 0x22a, V83, 0x0, 0x112, V82, V83, 0x0, V356]

================================

Block 0x3ec
[0x3ec:0x3ec]
---
Predecessors: [0x3de]
Successors: []
---
0x3ec INVALID
---
0x3ec: INVALID 
---
Entry stack: [V12, 0x22a, V83, 0x0, 0x112, V82, V83, 0x0, V356]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V83, 0x0, 0x112, V82, V83, 0x0, V356]

================================

Block 0x3ed
[0x3ed:0x3f0]
---
Predecessors: [0x3de]
Successors: [0x3f1]
---
0x3ed JUMPDEST
0x3ee DUP1
0x3ef SWAP2
0x3f0 POP
---
0x3ed: JUMPDEST 
---
Entry stack: [V12, 0x22a, V83, 0x0, 0x112, V82, V83, 0x0, V356]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0x22a, V83, 0x0, 0x112, V82, V83, V356, V356]

================================

Block 0x3f1
[0x3f1:0x3f7]
---
Predecessors: [0x3ed]
Successors: [0x112]
---
0x3f1 JUMPDEST
0x3f2 POP
0x3f3 SWAP3
0x3f4 SWAP2
0x3f5 POP
0x3f6 POP
0x3f7 JUMP
---
0x3f1: JUMPDEST 
0x3f7: JUMP 0x112
---
Entry stack: [V12, 0x22a, V83, 0x0, 0x112, V82, V83, V356, V356]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x22a, V83, 0x0, V356]

================================

Block 0x3f8
[0x3f8:0x404]
---
Predecessors: [0x112]
Successors: [0x405, 0x406]
---
0x3f8 JUMPDEST
0x3f9 PUSH1 0x0
0x3fb DUP1
0x3fc DUP3
0x3fd DUP5
0x3fe DUP2
0x3ff ISZERO
0x400 ISZERO
0x401 PUSH2 0x406
0x404 JUMPI
---
0x3f8: JUMPDEST 
0x3f9: V360 = 0x0
0x3ff: V361 = ISZERO V90
0x400: V362 = ISZERO V361
0x401: V363 = 0x406
0x404: JUMPI 0x406 V362
---
Entry stack: [V12, 0x22a, V83, 0x0, 0x129, V83, V90]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S0, S1]
Exit stack: [V12, 0x22a, V83, 0x0, 0x129, V83, V90, 0x0, 0x0, V90, V83]

================================

Block 0x405
[0x405:0x405]
---
Predecessors: [0x3f8]
Successors: []
---
0x405 INVALID
---
0x405: INVALID 
---
Entry stack: [V12, 0x22a, V83, 0x0, 0x129, V83, V90, 0x0, 0x0, V90, V83]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V83, 0x0, 0x129, V83, V90, 0x0, 0x0, V90, V83]

================================

Block 0x406
[0x406:0x40c]
---
Predecessors: [0x3f8]
Successors: [0x40d]
---
0x406 JUMPDEST
0x407 DIV
0x408 SWAP1
0x409 POP
0x40a DUP1
0x40b SWAP2
0x40c POP
---
0x406: JUMPDEST 
0x407: V364 = DIV V83 V90
---
Entry stack: [V12, 0x22a, V83, 0x0, 0x129, V83, V90, 0x0, 0x0, V90, V83]
Stack pops: 4
Stack additions: [V364, V364]
Exit stack: [V12, 0x22a, V83, 0x0, 0x129, V83, V90, V364, V364]

================================

Block 0x40d
[0x40d:0x413]
---
Predecessors: [0x406]
Successors: [0x129]
---
0x40d JUMPDEST
0x40e POP
0x40f SWAP3
0x410 SWAP2
0x411 POP
0x412 POP
0x413 JUMP
---
0x40d: JUMPDEST 
0x413: JUMP 0x129
---
Entry stack: [V12, 0x22a, V83, 0x0, 0x129, V83, V90, V364, V364]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x22a, V83, 0x0, V364]

================================

Block 0x414
[0x414:0x42a]
---
Predecessors: [0x237]
Successors: [0x42b, 0x42f]
---
0x414 JUMPDEST
0x415 PUSH1 0x0
0x417 SLOAD
0x418 CALLER
0x419 PUSH1 0x1
0x41b PUSH1 0xa0
0x41d PUSH1 0x2
0x41f EXP
0x420 SUB
0x421 SWAP1
0x422 DUP2
0x423 AND
0x424 SWAP2
0x425 AND
0x426 EQ
0x427 PUSH2 0x42f
0x42a JUMPI
---
0x414: JUMPDEST 
0x415: V365 = 0x0
0x417: V366 = S[0x0]
0x418: V367 = CALLER
0x419: V368 = 0x1
0x41b: V369 = 0xa0
0x41d: V370 = 0x2
0x41f: V371 = EXP 0x2 0xa0
0x420: V372 = SUB 0x10000000000000000000000000000000000000000 0x1
0x423: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V367
0x425: V374 = AND V366 0xffffffffffffffffffffffffffffffffffffffff
0x426: V375 = EQ V374 V373
0x427: V376 = 0x42f
0x42a: JUMPI 0x42f V375
---
Entry stack: [V12, 0x22a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a]

================================

Block 0x42b
[0x42b:0x42e]
---
Predecessors: [0x414]
Successors: []
---
0x42b PUSH1 0x0
0x42d DUP1
0x42e REVERT
---
0x42b: V377 = 0x0
0x42e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a]

================================

Block 0x42f
[0x42f:0x44d]
---
Predecessors: [0x414]
Successors: [0x44e]
---
0x42f JUMPDEST
0x430 PUSH1 0x1
0x432 DUP1
0x433 SLOAD
0x434 PUSH21 0xff0000000000000000000000000000000000000000
0x44a NOT
0x44b AND
0x44c SWAP1
0x44d SSTORE
---
0x42f: JUMPDEST 
0x430: V378 = 0x1
0x433: V379 = S[0x1]
0x434: V380 = 0xff0000000000000000000000000000000000000000
0x44a: V381 = NOT 0xff0000000000000000000000000000000000000000
0x44b: V382 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V379
0x44d: S[0x1] = V382
---
Entry stack: [V12, 0x22a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a]

================================

Block 0x44e
[0x44e:0x44e]
---
Predecessors: [0x42f]
Successors: [0x44f]
---
0x44e JUMPDEST
---
0x44e: JUMPDEST 
---
Entry stack: [V12, 0x22a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a]

================================

Block 0x44f
[0x44f:0x450]
---
Predecessors: [0x44e]
Successors: [0x22a]
---
0x44f JUMPDEST
0x450 JUMP
---
0x44f: JUMPDEST 
0x450: JUMP 0x22a
---
Entry stack: [V12, 0x22a]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x451
[0x451:0x456]
---
Predecessors: [0x24c]
Successors: [0x254]
---
0x451 JUMPDEST
0x452 PUSH1 0x3
0x454 SLOAD
0x455 DUP2
0x456 JUMP
---
0x451: JUMPDEST 
0x452: V383 = 0x3
0x454: V384 = S[0x3]
0x456: JUMP 0x254
---
Entry stack: [V12, 0x254]
Stack pops: 1
Stack additions: [S0, V384]
Exit stack: [V12, 0x254, V384]

================================

Block 0x457
[0x457:0x46d]
---
Predecessors: [0x271]
Successors: [0x46e, 0x472]
---
0x457 JUMPDEST
0x458 PUSH1 0x0
0x45a SLOAD
0x45b CALLER
0x45c PUSH1 0x1
0x45e PUSH1 0xa0
0x460 PUSH1 0x2
0x462 EXP
0x463 SUB
0x464 SWAP1
0x465 DUP2
0x466 AND
0x467 SWAP2
0x468 AND
0x469 EQ
0x46a PUSH2 0x472
0x46d JUMPI
---
0x457: JUMPDEST 
0x458: V385 = 0x0
0x45a: V386 = S[0x0]
0x45b: V387 = CALLER
0x45c: V388 = 0x1
0x45e: V389 = 0xa0
0x460: V390 = 0x2
0x462: V391 = EXP 0x2 0xa0
0x463: V392 = SUB 0x10000000000000000000000000000000000000000 0x1
0x466: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0x468: V394 = AND V386 0xffffffffffffffffffffffffffffffffffffffff
0x469: V395 = EQ V394 V393
0x46a: V396 = 0x472
0x46d: JUMPI 0x472 V395
---
Entry stack: [V12, 0x22a, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V218]

================================

Block 0x46e
[0x46e:0x471]
---
Predecessors: [0x457]
Successors: []
---
0x46e PUSH1 0x0
0x470 DUP1
0x471 REVERT
---
0x46e: V397 = 0x0
0x471: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V218]

================================

Block 0x472
[0x472:0x477]
---
Predecessors: [0x457]
Successors: [0x478]
---
0x472 JUMPDEST
0x473 PUSH1 0x3
0x475 DUP2
0x476 SWAP1
0x477 SSTORE
---
0x472: JUMPDEST 
0x473: V398 = 0x3
0x477: S[0x3] = V218
---
Entry stack: [V12, 0x22a, V218]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x22a, V218]

================================

Block 0x478
[0x478:0x478]
---
Predecessors: [0x472]
Successors: [0x479]
---
0x478 JUMPDEST
---
0x478: JUMPDEST 
---
Entry stack: [V12, 0x22a, V218]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V218]

================================

Block 0x479
[0x479:0x47b]
---
Predecessors: [0x478]
Successors: [0x22a]
---
0x479 JUMPDEST
0x47a POP
0x47b JUMP
---
0x479: JUMPDEST 
0x47b: JUMP 0x22a
---
Entry stack: [V12, 0x22a, V218]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x47c
[0x47c:0x481]
---
Predecessors: [0x289]
Successors: [0x254]
---
0x47c JUMPDEST
0x47d PUSH1 0x4
0x47f SLOAD
0x480 DUP2
0x481 JUMP
---
0x47c: JUMPDEST 
0x47d: V399 = 0x4
0x47f: V400 = S[0x4]
0x481: JUMP 0x254
---
Entry stack: [V12, 0x254]
Stack pops: 1
Stack additions: [S0, V400]
Exit stack: [V12, 0x254, V400]

================================

Block 0x482
[0x482:0x498]
---
Predecessors: [0x2ae]
Successors: [0x499, 0x49d]
---
0x482 JUMPDEST
0x483 PUSH1 0x0
0x485 SLOAD
0x486 CALLER
0x487 PUSH1 0x1
0x489 PUSH1 0xa0
0x48b PUSH1 0x2
0x48d EXP
0x48e SUB
0x48f SWAP1
0x490 DUP2
0x491 AND
0x492 SWAP2
0x493 AND
0x494 EQ
0x495 PUSH2 0x49d
0x498 JUMPI
---
0x482: JUMPDEST 
0x483: V401 = 0x0
0x485: V402 = S[0x0]
0x486: V403 = CALLER
0x487: V404 = 0x1
0x489: V405 = 0xa0
0x48b: V406 = 0x2
0x48d: V407 = EXP 0x2 0xa0
0x48e: V408 = SUB 0x10000000000000000000000000000000000000000 0x1
0x491: V409 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x493: V410 = AND V402 0xffffffffffffffffffffffffffffffffffffffff
0x494: V411 = EQ V410 V409
0x495: V412 = 0x49d
0x498: JUMPI 0x49d V411
---
Entry stack: [V12, 0x22a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a]

================================

Block 0x499
[0x499:0x49c]
---
Predecessors: [0x482]
Successors: []
---
0x499 PUSH1 0x0
0x49b DUP1
0x49c REVERT
---
0x499: V413 = 0x0
0x49c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a]

================================

Block 0x49d
[0x49d:0x4aa]
---
Predecessors: [0x482]
Successors: []
---
0x49d JUMPDEST
0x49e PUSH1 0x0
0x4a0 SLOAD
0x4a1 PUSH1 0x1
0x4a3 PUSH1 0xa0
0x4a5 PUSH1 0x2
0x4a7 EXP
0x4a8 SUB
0x4a9 AND
0x4aa SELFDESTRUCT
---
0x49d: JUMPDEST 
0x49e: V414 = 0x0
0x4a0: V415 = S[0x0]
0x4a1: V416 = 0x1
0x4a3: V417 = 0xa0
0x4a5: V418 = 0x2
0x4a7: V419 = EXP 0x2 0xa0
0x4a8: V420 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a9: V421 = AND 0xffffffffffffffffffffffffffffffffffffffff V415
0x4aa: SELFDESTRUCT V421
---
Entry stack: [V12, 0x22a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a]

================================

Block 0x4ab
[0x4ab:0x4ab]
---
Predecessors: []
Successors: [0x4ac]
---
0x4ab JUMPDEST
---
0x4ab: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4ac
[0x4ac:0x4ad]
---
Predecessors: [0x4ab]
Successors: []
Has unresolved jump.
---
0x4ac JUMPDEST
0x4ad JUMP
---
0x4ac: JUMPDEST 
0x4ad: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4ae
[0x4ae:0x4bc]
---
Predecessors: [0x2c3]
Successors: [0x2cb]
---
0x4ae JUMPDEST
0x4af PUSH1 0x2
0x4b1 SLOAD
0x4b2 PUSH1 0x1
0x4b4 PUSH1 0xa0
0x4b6 PUSH1 0x2
0x4b8 EXP
0x4b9 SUB
0x4ba AND
0x4bb DUP2
0x4bc JUMP
---
0x4ae: JUMPDEST 
0x4af: V422 = 0x2
0x4b1: V423 = S[0x2]
0x4b2: V424 = 0x1
0x4b4: V425 = 0xa0
0x4b6: V426 = 0x2
0x4b8: V427 = EXP 0x2 0xa0
0x4b9: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ba: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V423
0x4bc: JUMP 0x2cb
---
Entry stack: [V12, 0x2cb]
Stack pops: 1
Stack additions: [S0, V429]
Exit stack: [V12, 0x2cb, V429]

================================

Block 0x4bd
[0x4bd:0x4cb]
---
Predecessors: [0x2f2]
Successors: [0x2cb]
---
0x4bd JUMPDEST
0x4be PUSH1 0x0
0x4c0 SLOAD
0x4c1 PUSH1 0x1
0x4c3 PUSH1 0xa0
0x4c5 PUSH1 0x2
0x4c7 EXP
0x4c8 SUB
0x4c9 AND
0x4ca DUP2
0x4cb JUMP
---
0x4bd: JUMPDEST 
0x4be: V430 = 0x0
0x4c0: V431 = S[0x0]
0x4c1: V432 = 0x1
0x4c3: V433 = 0xa0
0x4c5: V434 = 0x2
0x4c7: V435 = EXP 0x2 0xa0
0x4c8: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4c9: V437 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0x4cb: JUMP 0x2cb
---
Entry stack: [V12, 0x2cb]
Stack pops: 1
Stack additions: [S0, V437]
Exit stack: [V12, 0x2cb, V437]

================================

Block 0x4cc
[0x4cc:0x4e2]
---
Predecessors: [0x321]
Successors: [0x4e3, 0x4e7]
---
0x4cc JUMPDEST
0x4cd PUSH1 0x0
0x4cf SLOAD
0x4d0 CALLER
0x4d1 PUSH1 0x1
0x4d3 PUSH1 0xa0
0x4d5 PUSH1 0x2
0x4d7 EXP
0x4d8 SUB
0x4d9 SWAP1
0x4da DUP2
0x4db AND
0x4dc SWAP2
0x4dd AND
0x4de EQ
0x4df PUSH2 0x4e7
0x4e2 JUMPI
---
0x4cc: JUMPDEST 
0x4cd: V438 = 0x0
0x4cf: V439 = S[0x0]
0x4d0: V440 = CALLER
0x4d1: V441 = 0x1
0x4d3: V442 = 0xa0
0x4d5: V443 = 0x2
0x4d7: V444 = EXP 0x2 0xa0
0x4d8: V445 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4db: V446 = AND 0xffffffffffffffffffffffffffffffffffffffff V440
0x4dd: V447 = AND V439 0xffffffffffffffffffffffffffffffffffffffff
0x4de: V448 = EQ V447 V446
0x4df: V449 = 0x4e7
0x4e2: JUMPI 0x4e7 V448
---
Entry stack: [V12, 0x22a, V289, V291]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V289, V291]

================================

Block 0x4e3
[0x4e3:0x4e6]
---
Predecessors: [0x4cc]
Successors: []
---
0x4e3 PUSH1 0x0
0x4e5 DUP1
0x4e6 REVERT
---
0x4e3: V450 = 0x0
0x4e6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a, V289, V291]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V289, V291]

================================

Block 0x4e7
[0x4e7:0x541]
---
Predecessors: [0x4cc]
Successors: [0x542, 0x546]
---
0x4e7 JUMPDEST
0x4e8 PUSH1 0x1
0x4ea SLOAD
0x4eb PUSH1 0x1
0x4ed PUSH1 0xa0
0x4ef PUSH1 0x2
0x4f1 EXP
0x4f2 SUB
0x4f3 AND
0x4f4 PUSH4 0xa9059cbb
0x4f9 DUP4
0x4fa DUP4
0x4fb PUSH1 0x0
0x4fd PUSH1 0x40
0x4ff MLOAD
0x500 PUSH1 0x20
0x502 ADD
0x503 MSTORE
0x504 PUSH1 0x40
0x506 MLOAD
0x507 PUSH1 0xe0
0x509 PUSH1 0x2
0x50b EXP
0x50c PUSH4 0xffffffff
0x511 DUP6
0x512 AND
0x513 MUL
0x514 DUP2
0x515 MSTORE
0x516 PUSH1 0x1
0x518 PUSH1 0xa0
0x51a PUSH1 0x2
0x51c EXP
0x51d SUB
0x51e SWAP1
0x51f SWAP3
0x520 AND
0x521 PUSH1 0x4
0x523 DUP4
0x524 ADD
0x525 MSTORE
0x526 PUSH1 0x24
0x528 DUP3
0x529 ADD
0x52a MSTORE
0x52b PUSH1 0x44
0x52d ADD
0x52e PUSH1 0x20
0x530 PUSH1 0x40
0x532 MLOAD
0x533 DUP1
0x534 DUP4
0x535 SUB
0x536 DUP2
0x537 PUSH1 0x0
0x539 DUP8
0x53a DUP1
0x53b EXTCODESIZE
0x53c ISZERO
0x53d ISZERO
0x53e PUSH2 0x546
0x541 JUMPI
---
0x4e7: JUMPDEST 
0x4e8: V451 = 0x1
0x4ea: V452 = S[0x1]
0x4eb: V453 = 0x1
0x4ed: V454 = 0xa0
0x4ef: V455 = 0x2
0x4f1: V456 = EXP 0x2 0xa0
0x4f2: V457 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f3: V458 = AND 0xffffffffffffffffffffffffffffffffffffffff V452
0x4f4: V459 = 0xa9059cbb
0x4fb: V460 = 0x0
0x4fd: V461 = 0x40
0x4ff: V462 = M[0x40]
0x500: V463 = 0x20
0x502: V464 = ADD 0x20 V462
0x503: M[V464] = 0x0
0x504: V465 = 0x40
0x506: V466 = M[0x40]
0x507: V467 = 0xe0
0x509: V468 = 0x2
0x50b: V469 = EXP 0x2 0xe0
0x50c: V470 = 0xffffffff
0x512: V471 = AND 0xa9059cbb 0xffffffff
0x513: V472 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x515: M[V466] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x516: V473 = 0x1
0x518: V474 = 0xa0
0x51a: V475 = 0x2
0x51c: V476 = EXP 0x2 0xa0
0x51d: V477 = SUB 0x10000000000000000000000000000000000000000 0x1
0x520: V478 = AND V289 0xffffffffffffffffffffffffffffffffffffffff
0x521: V479 = 0x4
0x524: V480 = ADD V466 0x4
0x525: M[V480] = V478
0x526: V481 = 0x24
0x529: V482 = ADD V466 0x24
0x52a: M[V482] = V291
0x52b: V483 = 0x44
0x52d: V484 = ADD 0x44 V466
0x52e: V485 = 0x20
0x530: V486 = 0x40
0x532: V487 = M[0x40]
0x535: V488 = SUB V484 V487
0x537: V489 = 0x0
0x53b: V490 = EXTCODESIZE V458
0x53c: V491 = ISZERO V490
0x53d: V492 = ISZERO V491
0x53e: V493 = 0x546
0x541: JUMPI 0x546 V492
---
Entry stack: [V12, 0x22a, V289, V291]
Stack pops: 2
Stack additions: [S1, S0, V458, 0xa9059cbb, V484, 0x20, V487, V488, V487, 0x0, V458]
Exit stack: [V12, 0x22a, V289, V291, V458, 0xa9059cbb, V484, 0x20, V487, V488, V487, 0x0, V458]

================================

Block 0x542
[0x542:0x545]
---
Predecessors: [0x4e7]
Successors: []
---
0x542 PUSH1 0x0
0x544 DUP1
0x545 REVERT
---
0x542: V494 = 0x0
0x545: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a, V289, V291, V458, 0xa9059cbb, V484, 0x20, V487, V488, V487, 0x0, V458]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V289, V291, V458, 0xa9059cbb, V484, 0x20, V487, V488, V487, 0x0, V458]

================================

Block 0x546
[0x546:0x552]
---
Predecessors: [0x4e7]
Successors: [0x553, 0x557]
---
0x546 JUMPDEST
0x547 PUSH2 0x2c6
0x54a GAS
0x54b SUB
0x54c CALL
0x54d ISZERO
0x54e ISZERO
0x54f PUSH2 0x557
0x552 JUMPI
---
0x546: JUMPDEST 
0x547: V495 = 0x2c6
0x54a: V496 = GAS
0x54b: V497 = SUB V496 0x2c6
0x54c: V498 = CALL V497 V458 0x0 V487 V488 V487 0x20
0x54d: V499 = ISZERO V498
0x54e: V500 = ISZERO V499
0x54f: V501 = 0x557
0x552: JUMPI 0x557 V500
---
Entry stack: [V12, 0x22a, V289, V291, V458, 0xa9059cbb, V484, 0x20, V487, V488, V487, 0x0, V458]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x22a, V289, V291, V458, 0xa9059cbb, V484]

================================

Block 0x553
[0x553:0x556]
---
Predecessors: [0x546]
Successors: []
---
0x553 PUSH1 0x0
0x555 DUP1
0x556 REVERT
---
0x553: V502 = 0x0
0x556: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a, V289, V291, V458, 0xa9059cbb, V484]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V289, V291, V458, 0xa9059cbb, V484]

================================

Block 0x557
[0x557:0x561]
---
Predecessors: [0x546]
Successors: [0x562]
---
0x557 JUMPDEST
0x558 POP
0x559 POP
0x55a POP
0x55b PUSH1 0x40
0x55d MLOAD
0x55e DUP1
0x55f MLOAD
0x560 POP
0x561 POP
---
0x557: JUMPDEST 
0x55b: V503 = 0x40
0x55d: V504 = M[0x40]
0x55f: V505 = M[V504]
---
Entry stack: [V12, 0x22a, V289, V291, V458, 0xa9059cbb, V484]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x22a, V289, V291]

================================

Block 0x562
[0x562:0x562]
---
Predecessors: [0x557]
Successors: [0x563]
---
0x562 JUMPDEST
---
0x562: JUMPDEST 
---
Entry stack: [V12, 0x22a, V289, V291]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V289, V291]

================================

Block 0x563
[0x563:0x566]
---
Predecessors: [0x562]
Successors: [0x22a]
---
0x563 JUMPDEST
0x564 POP
0x565 POP
0x566 JUMP
---
0x563: JUMPDEST 
0x566: JUMP 0x22a
---
Entry stack: [V12, 0x22a, V289, V291]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x567
[0x567:0x57d]
---
Predecessors: [0x345]
Successors: [0x57e, 0x582]
---
0x567 JUMPDEST
0x568 PUSH1 0x0
0x56a SLOAD
0x56b CALLER
0x56c PUSH1 0x1
0x56e PUSH1 0xa0
0x570 PUSH1 0x2
0x572 EXP
0x573 SUB
0x574 SWAP1
0x575 DUP2
0x576 AND
0x577 SWAP2
0x578 AND
0x579 EQ
0x57a PUSH2 0x582
0x57d JUMPI
---
0x567: JUMPDEST 
0x568: V506 = 0x0
0x56a: V507 = S[0x0]
0x56b: V508 = CALLER
0x56c: V509 = 0x1
0x56e: V510 = 0xa0
0x570: V511 = 0x2
0x572: V512 = EXP 0x2 0xa0
0x573: V513 = SUB 0x10000000000000000000000000000000000000000 0x1
0x576: V514 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x578: V515 = AND V507 0xffffffffffffffffffffffffffffffffffffffff
0x579: V516 = EQ V515 V514
0x57a: V517 = 0x582
0x57d: JUMPI 0x582 V516
---
Entry stack: [V12, 0x22a, V299]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V299]

================================

Block 0x57e
[0x57e:0x581]
---
Predecessors: [0x567]
Successors: []
---
0x57e PUSH1 0x0
0x580 DUP1
0x581 REVERT
---
0x57e: V518 = 0x0
0x581: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a, V299]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V299]

================================

Block 0x582
[0x582:0x5c5]
---
Predecessors: [0x567]
Successors: [0x5c6, 0x5ca]
---
0x582 JUMPDEST
0x583 PUSH1 0x1
0x585 SLOAD
0x586 PUSH1 0x1
0x588 PUSH1 0xa0
0x58a PUSH1 0x2
0x58c EXP
0x58d SUB
0x58e AND
0x58f PUSH4 0xc634d032
0x594 DUP3
0x595 PUSH1 0x40
0x597 MLOAD
0x598 PUSH1 0xe0
0x59a PUSH1 0x2
0x59c EXP
0x59d PUSH4 0xffffffff
0x5a2 DUP5
0x5a3 AND
0x5a4 MUL
0x5a5 DUP2
0x5a6 MSTORE
0x5a7 PUSH1 0x4
0x5a9 DUP2
0x5aa ADD
0x5ab SWAP2
0x5ac SWAP1
0x5ad SWAP2
0x5ae MSTORE
0x5af PUSH1 0x24
0x5b1 ADD
0x5b2 PUSH1 0x0
0x5b4 PUSH1 0x40
0x5b6 MLOAD
0x5b7 DUP1
0x5b8 DUP4
0x5b9 SUB
0x5ba DUP2
0x5bb PUSH1 0x0
0x5bd DUP8
0x5be DUP1
0x5bf EXTCODESIZE
0x5c0 ISZERO
0x5c1 ISZERO
0x5c2 PUSH2 0x5ca
0x5c5 JUMPI
---
0x582: JUMPDEST 
0x583: V519 = 0x1
0x585: V520 = S[0x1]
0x586: V521 = 0x1
0x588: V522 = 0xa0
0x58a: V523 = 0x2
0x58c: V524 = EXP 0x2 0xa0
0x58d: V525 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58e: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0x58f: V527 = 0xc634d032
0x595: V528 = 0x40
0x597: V529 = M[0x40]
0x598: V530 = 0xe0
0x59a: V531 = 0x2
0x59c: V532 = EXP 0x2 0xe0
0x59d: V533 = 0xffffffff
0x5a3: V534 = AND 0xc634d032 0xffffffff
0x5a4: V535 = MUL 0xc634d032 0x100000000000000000000000000000000000000000000000000000000
0x5a6: M[V529] = 0xc634d03200000000000000000000000000000000000000000000000000000000
0x5a7: V536 = 0x4
0x5aa: V537 = ADD V529 0x4
0x5ae: M[V537] = V299
0x5af: V538 = 0x24
0x5b1: V539 = ADD 0x24 V529
0x5b2: V540 = 0x0
0x5b4: V541 = 0x40
0x5b6: V542 = M[0x40]
0x5b9: V543 = SUB V539 V542
0x5bb: V544 = 0x0
0x5bf: V545 = EXTCODESIZE V526
0x5c0: V546 = ISZERO V545
0x5c1: V547 = ISZERO V546
0x5c2: V548 = 0x5ca
0x5c5: JUMPI 0x5ca V547
---
Entry stack: [V12, 0x22a, V299]
Stack pops: 1
Stack additions: [S0, V526, 0xc634d032, V539, 0x0, V542, V543, V542, 0x0, V526]
Exit stack: [V12, 0x22a, V299, V526, 0xc634d032, V539, 0x0, V542, V543, V542, 0x0, V526]

================================

Block 0x5c6
[0x5c6:0x5c9]
---
Predecessors: [0x582]
Successors: []
---
0x5c6 PUSH1 0x0
0x5c8 DUP1
0x5c9 REVERT
---
0x5c6: V549 = 0x0
0x5c9: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a, V299, V526, 0xc634d032, V539, 0x0, V542, V543, V542, 0x0, V526]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V299, V526, 0xc634d032, V539, 0x0, V542, V543, V542, 0x0, V526]

================================

Block 0x5ca
[0x5ca:0x5d6]
---
Predecessors: [0x582]
Successors: [0x5d7, 0x5db]
---
0x5ca JUMPDEST
0x5cb PUSH2 0x2c6
0x5ce GAS
0x5cf SUB
0x5d0 CALL
0x5d1 ISZERO
0x5d2 ISZERO
0x5d3 PUSH2 0x5db
0x5d6 JUMPI
---
0x5ca: JUMPDEST 
0x5cb: V550 = 0x2c6
0x5ce: V551 = GAS
0x5cf: V552 = SUB V551 0x2c6
0x5d0: V553 = CALL V552 V526 0x0 V542 V543 V542 0x0
0x5d1: V554 = ISZERO V553
0x5d2: V555 = ISZERO V554
0x5d3: V556 = 0x5db
0x5d6: JUMPI 0x5db V555
---
Entry stack: [V12, 0x22a, V299, V526, 0xc634d032, V539, 0x0, V542, V543, V542, 0x0, V526]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x22a, V299, V526, 0xc634d032, V539]

================================

Block 0x5d7
[0x5d7:0x5da]
---
Predecessors: [0x5ca]
Successors: []
---
0x5d7 PUSH1 0x0
0x5d9 DUP1
0x5da REVERT
---
0x5d7: V557 = 0x0
0x5da: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a, V299, V526, 0xc634d032, V539]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V299, V526, 0xc634d032, V539]

================================

Block 0x5db
[0x5db:0x5de]
---
Predecessors: [0x5ca]
Successors: [0x5df]
---
0x5db JUMPDEST
0x5dc POP
0x5dd POP
0x5de POP
---
0x5db: JUMPDEST 
---
Entry stack: [V12, 0x22a, V299, V526, 0xc634d032, V539]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x22a, V299]

================================

Block 0x5df
[0x5df:0x5df]
---
Predecessors: [0x5db]
Successors: [0x5e0]
---
0x5df JUMPDEST
---
0x5df: JUMPDEST 
---
Entry stack: [V12, 0x22a, V299]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V299]

================================

Block 0x5e0
[0x5e0:0x5e2]
---
Predecessors: [0x5df]
Successors: [0x22a]
---
0x5e0 JUMPDEST
0x5e1 POP
0x5e2 JUMP
---
0x5e0: JUMPDEST 
0x5e2: JUMP 0x22a
---
Entry stack: [V12, 0x22a, V299]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x5e3
[0x5e3:0x5f9]
---
Predecessors: [0x35d]
Successors: [0x5fa, 0x5fe]
---
0x5e3 JUMPDEST
0x5e4 PUSH1 0x0
0x5e6 SLOAD
0x5e7 CALLER
0x5e8 PUSH1 0x1
0x5ea PUSH1 0xa0
0x5ec PUSH1 0x2
0x5ee EXP
0x5ef SUB
0x5f0 SWAP1
0x5f1 DUP2
0x5f2 AND
0x5f3 SWAP2
0x5f4 AND
0x5f5 EQ
0x5f6 PUSH2 0x5fe
0x5f9 JUMPI
---
0x5e3: JUMPDEST 
0x5e4: V558 = 0x0
0x5e6: V559 = S[0x0]
0x5e7: V560 = CALLER
0x5e8: V561 = 0x1
0x5ea: V562 = 0xa0
0x5ec: V563 = 0x2
0x5ee: V564 = EXP 0x2 0xa0
0x5ef: V565 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f2: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V560
0x5f4: V567 = AND V559 0xffffffffffffffffffffffffffffffffffffffff
0x5f5: V568 = EQ V567 V566
0x5f6: V569 = 0x5fe
0x5f9: JUMPI 0x5fe V568
---
Entry stack: [V12, 0x22a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a]

================================

Block 0x5fa
[0x5fa:0x5fd]
---
Predecessors: [0x5e3]
Successors: []
---
0x5fa PUSH1 0x0
0x5fc DUP1
0x5fd REVERT
---
0x5fa: V570 = 0x0
0x5fd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a]

================================

Block 0x5fe
[0x5fe:0x633]
---
Predecessors: [0x5e3]
Successors: [0x634]
---
0x5fe JUMPDEST
0x5ff PUSH1 0x1
0x601 DUP1
0x602 SLOAD
0x603 PUSH21 0xff0000000000000000000000000000000000000000
0x619 NOT
0x61a AND
0x61b PUSH21 0x10000000000000000000000000000000000000000
0x631 OR
0x632 SWAP1
0x633 SSTORE
---
0x5fe: JUMPDEST 
0x5ff: V571 = 0x1
0x602: V572 = S[0x1]
0x603: V573 = 0xff0000000000000000000000000000000000000000
0x619: V574 = NOT 0xff0000000000000000000000000000000000000000
0x61a: V575 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V572
0x61b: V576 = 0x10000000000000000000000000000000000000000
0x631: V577 = OR 0x10000000000000000000000000000000000000000 V575
0x633: S[0x1] = V577
---
Entry stack: [V12, 0x22a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a]

================================

Block 0x634
[0x634:0x634]
---
Predecessors: [0x5fe]
Successors: [0x635]
---
0x634 JUMPDEST
---
0x634: JUMPDEST 
---
Entry stack: [V12, 0x22a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a]

================================

Block 0x635
[0x635:0x636]
---
Predecessors: [0x634]
Successors: [0x22a]
---
0x635 JUMPDEST
0x636 JUMP
---
0x635: JUMPDEST 
0x636: JUMP 0x22a
---
Entry stack: [V12, 0x22a]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x637
[0x637:0x657]
---
Predecessors: [0x372]
Successors: [0x37a]
---
0x637 JUMPDEST
0x638 PUSH1 0x1
0x63a SLOAD
0x63b PUSH21 0x10000000000000000000000000000000000000000
0x651 SWAP1
0x652 DIV
0x653 PUSH1 0xff
0x655 AND
0x656 DUP2
0x657 JUMP
---
0x637: JUMPDEST 
0x638: V578 = 0x1
0x63a: V579 = S[0x1]
0x63b: V580 = 0x10000000000000000000000000000000000000000
0x652: V581 = DIV V579 0x10000000000000000000000000000000000000000
0x653: V582 = 0xff
0x655: V583 = AND 0xff V581
0x657: JUMP 0x37a
---
Entry stack: [V12, 0x37a]
Stack pops: 1
Stack additions: [S0, V583]
Exit stack: [V12, 0x37a, V583]

================================

Block 0x658
[0x658:0x66e]
---
Predecessors: [0x399]
Successors: [0x66f, 0x673]
---
0x658 JUMPDEST
0x659 PUSH1 0x0
0x65b SLOAD
0x65c CALLER
0x65d PUSH1 0x1
0x65f PUSH1 0xa0
0x661 PUSH1 0x2
0x663 EXP
0x664 SUB
0x665 SWAP1
0x666 DUP2
0x667 AND
0x668 SWAP2
0x669 AND
0x66a EQ
0x66b PUSH2 0x673
0x66e JUMPI
---
0x658: JUMPDEST 
0x659: V584 = 0x0
0x65b: V585 = S[0x0]
0x65c: V586 = CALLER
0x65d: V587 = 0x1
0x65f: V588 = 0xa0
0x661: V589 = 0x2
0x663: V590 = EXP 0x2 0xa0
0x664: V591 = SUB 0x10000000000000000000000000000000000000000 0x1
0x667: V592 = AND 0xffffffffffffffffffffffffffffffffffffffff V586
0x669: V593 = AND V585 0xffffffffffffffffffffffffffffffffffffffff
0x66a: V594 = EQ V593 V592
0x66b: V595 = 0x673
0x66e: JUMPI 0x673 V594
---
Entry stack: [V12, 0x22a, V334]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V334]

================================

Block 0x66f
[0x66f:0x672]
---
Predecessors: [0x658]
Successors: []
---
0x66f PUSH1 0x0
0x671 DUP1
0x672 REVERT
---
0x66f: V596 = 0x0
0x672: REVERT 0x0 0x0
---
Entry stack: [V12, 0x22a, V334]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V334]

================================

Block 0x673
[0x673:0x69b]
---
Predecessors: [0x658]
Successors: [0x69c]
---
0x673 JUMPDEST
0x674 PUSH1 0x0
0x676 DUP1
0x677 SLOAD
0x678 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68d NOT
0x68e AND
0x68f PUSH1 0x1
0x691 PUSH1 0xa0
0x693 PUSH1 0x2
0x695 EXP
0x696 SUB
0x697 DUP4
0x698 AND
0x699 OR
0x69a SWAP1
0x69b SSTORE
---
0x673: JUMPDEST 
0x674: V597 = 0x0
0x677: V598 = S[0x0]
0x678: V599 = 0xffffffffffffffffffffffffffffffffffffffff
0x68d: V600 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x68e: V601 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V598
0x68f: V602 = 0x1
0x691: V603 = 0xa0
0x693: V604 = 0x2
0x695: V605 = EXP 0x2 0xa0
0x696: V606 = SUB 0x10000000000000000000000000000000000000000 0x1
0x698: V607 = AND V334 0xffffffffffffffffffffffffffffffffffffffff
0x699: V608 = OR V607 V601
0x69b: S[0x0] = V608
---
Entry stack: [V12, 0x22a, V334]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x22a, V334]

================================

Block 0x69c
[0x69c:0x69c]
---
Predecessors: [0x673]
Successors: [0x69d]
---
0x69c JUMPDEST
---
0x69c: JUMPDEST 
---
Entry stack: [V12, 0x22a, V334]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x22a, V334]

================================

Block 0x69d
[0x69d:0x69f]
---
Predecessors: [0x69c]
Successors: [0x22a]
---
0x69d JUMPDEST
0x69e POP
0x69f JUMP
---
0x69d: JUMPDEST 
0x69f: JUMP 0x22a
---
Entry stack: [V12, 0x22a, V334]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x6a0
[0x6a0:0x6ae]
---
Predecessors: [0x3ba]
Successors: [0x2cb]
---
0x6a0 JUMPDEST
0x6a1 PUSH1 0x1
0x6a3 SLOAD
0x6a4 PUSH1 0x1
0x6a6 PUSH1 0xa0
0x6a8 PUSH1 0x2
0x6aa EXP
0x6ab SUB
0x6ac AND
0x6ad DUP2
0x6ae JUMP
---
0x6a0: JUMPDEST 
0x6a1: V609 = 0x1
0x6a3: V610 = S[0x1]
0x6a4: V611 = 0x1
0x6a6: V612 = 0xa0
0x6a8: V613 = 0x2
0x6aa: V614 = EXP 0x2 0xa0
0x6ab: V615 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ac: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff V610
0x6ae: JUMP 0x2cb
---
Entry stack: [V12, 0x2cb]
Stack pops: 1
Stack additions: [S0, V616]
Exit stack: [V12, 0x2cb, V616]

================================

Block 0x6af
[0x6af:0x6dd]
---
Predecessors: []
Successors: []
---
0x6af STOP
0x6b0 LOG1
0x6b1 PUSH6 0x627a7a723058
0x6b8 SHA3
0x6b9 PUSH3 0x2fe115
0x6bd PUSH23 0x7398ea10c9a1cdd8a96a010c032a61a21ee53c584d7887
0x6d5 OR
0x6d6 PUSH7 0xd4270029
---
0x6af: STOP 
0x6b0: LOG S0 S1 S2
0x6b1: V617 = 0x627a7a723058
0x6b8: V618 = SHA3 0x627a7a723058 S3
0x6b9: V619 = 0x2fe115
0x6bd: V620 = 0x7398ea10c9a1cdd8a96a010c032a61a21ee53c584d7887
0x6d5: V621 = OR 0x7398ea10c9a1cdd8a96a010c032a61a21ee53c584d7887 0x2fe115
0x6d6: V622 = 0xd4270029
---
Entry stack: []
Stack pops: 0
Stack additions: [0xd4270029, 0x7398ea10c9a1cdd8a96a010c032a61a21ee53c586ff997, V618]
Exit stack: []

================================

Function 0:
Public function signature: 0xa4740ff
Entry block: 0x22c
Exit block: 0x22a
Body: 0x22a, 0x22c, 0x233, 0x237, 0x414, 0x42b, 0x42f, 0x44e, 0x44f

Function 1:
Public function signature: 0x2c4e722e
Entry block: 0x241
Exit block: 0x254
Body: 0x241, 0x248, 0x24c, 0x254, 0x451

Function 2:
Public function signature: 0x34fcf437
Entry block: 0x266
Exit block: 0x22a
Body: 0x22a, 0x266, 0x26d, 0x271, 0x457, 0x46e, 0x472, 0x478, 0x479

Function 3:
Public function signature: 0x4042b66f
Entry block: 0x27e
Exit block: 0x254
Body: 0x254, 0x27e, 0x285, 0x289, 0x47c

Function 4:
Public function signature: 0x43d726d6
Entry block: 0x2a3
Exit block: 0x49d
Body: 0x2a3, 0x2aa, 0x2ae, 0x482, 0x499, 0x49d

Function 5:
Public function signature: 0x521eb273
Entry block: 0x2b8
Exit block: 0x2cb
Body: 0x2b8, 0x2bf, 0x2c3, 0x2cb, 0x4ae

Function 6:
Public function signature: 0x8da5cb5b
Entry block: 0x2e7
Exit block: 0x2cb
Body: 0x2cb, 0x2e7, 0x2ee, 0x2f2, 0x4bd

Function 7:
Public function signature: 0xacef6037
Entry block: 0x316
Exit block: 0x22a
Body: 0x22a, 0x316, 0x31d, 0x321, 0x4cc, 0x4e3, 0x4e7, 0x542, 0x546, 0x553, 0x557, 0x562, 0x563

Function 8:
Public function signature: 0xc634d032
Entry block: 0x33a
Exit block: 0x22a
Body: 0x22a, 0x33a, 0x341, 0x345, 0x567, 0x57e, 0x582, 0x5c6, 0x5ca, 0x5d7, 0x5db, 0x5df, 0x5e0

Function 9:
Public function signature: 0xc683d8e4
Entry block: 0x352
Exit block: 0x22a
Body: 0x22a, 0x352, 0x359, 0x35d, 0x5e3, 0x5fa, 0x5fe, 0x634, 0x635

Function 10:
Public function signature: 0xeb8d2444
Entry block: 0x367
Exit block: 0x37a
Body: 0x367, 0x36e, 0x372, 0x37a, 0x637

Function 11:
Public function signature: 0xf2fde38b
Entry block: 0x38e
Exit block: 0x22a
Body: 0x22a, 0x38e, 0x395, 0x399, 0x658, 0x66f, 0x673, 0x69c, 0x69d

Function 12:
Public function signature: 0xfc0c546a
Entry block: 0x3af
Exit block: 0x2cb
Body: 0x2cb, 0x3af, 0x3b6, 0x3ba, 0x6a0

Function 13:
Public fallback function
Entry block: 0xa9
Exit block: 0x22a
Body: 0xa9, 0xad, 0xc1, 0xc5, 0xea, 0xee, 0xf8, 0xfc, 0x112, 0x129, 0x15c, 0x160, 0x1bb, 0x1bf, 0x1cc, 0x1d0, 0x226, 0x22a, 0x3de, 0x3ec, 0x3ed, 0x3f1, 0x3f8, 0x405, 0x406, 0x40d

