Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x95]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x95
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x95
0xa: JUMPI 0x95 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x38]
---
Predecessors: [0x0]
Successors: [0x39, 0xa6]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e DUP1
0x2f PUSH4 0x56e4d88
0x34 EQ
0x35 PUSH2 0xa6
0x38 JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = 0x56e4d88
0x34: V10 = EQ 0x56e4d88 V8
0x35: V11 = 0xa6
0x38: JUMPI 0xa6 V10
---
Entry stack: []
Stack pops: 0
Stack additions: [V8]
Exit stack: [V8]

================================

Block 0x39
[0x39:0x43]
---
Predecessors: [0xb]
Successors: [0x44, 0xc9]
---
0x39 DUP1
0x3a PUSH4 0x33c4a1d6
0x3f EQ
0x40 PUSH2 0xc9
0x43 JUMPI
---
0x3a: V12 = 0x33c4a1d6
0x3f: V13 = EQ 0x33c4a1d6 V8
0x40: V14 = 0xc9
0x43: JUMPI 0xc9 V13
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x44
[0x44:0x4e]
---
Predecessors: [0x39]
Successors: [0x4f, 0xe1]
---
0x44 DUP1
0x45 PUSH4 0x589e5edd
0x4a EQ
0x4b PUSH2 0xe1
0x4e JUMPI
---
0x45: V15 = 0x589e5edd
0x4a: V16 = EQ 0x589e5edd V8
0x4b: V17 = 0xe1
0x4e: JUMPI 0xe1 V16
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x4f
[0x4f:0x59]
---
Predecessors: [0x44]
Successors: [0x5a, 0x104]
---
0x4f DUP1
0x50 PUSH4 0x72325c5b
0x55 EQ
0x56 PUSH2 0x104
0x59 JUMPI
---
0x50: V18 = 0x72325c5b
0x55: V19 = EQ 0x72325c5b V8
0x56: V20 = 0x104
0x59: JUMPI 0x104 V19
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x5a
[0x5a:0x64]
---
Predecessors: [0x4f]
Successors: [0x65, 0x113]
---
0x5a DUP1
0x5b PUSH4 0x9ec7888f
0x60 EQ
0x61 PUSH2 0x113
0x64 JUMPI
---
0x5b: V21 = 0x9ec7888f
0x60: V22 = EQ 0x9ec7888f V8
0x61: V23 = 0x113
0x64: JUMPI 0x113 V22
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x65
[0x65:0x6f]
---
Predecessors: [0x5a]
Successors: [0x70, 0x136]
---
0x65 DUP1
0x66 PUSH4 0xab225edc
0x6b EQ
0x6c PUSH2 0x136
0x6f JUMPI
---
0x66: V24 = 0xab225edc
0x6b: V25 = EQ 0xab225edc V8
0x6c: V26 = 0x136
0x6f: JUMPI 0x136 V25
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x70
[0x70:0x7a]
---
Predecessors: [0x65]
Successors: [0x7b, 0x145]
---
0x70 DUP1
0x71 PUSH4 0xd25d19e2
0x76 EQ
0x77 PUSH2 0x145
0x7a JUMPI
---
0x71: V27 = 0xd25d19e2
0x76: V28 = EQ 0xd25d19e2 V8
0x77: V29 = 0x145
0x7a: JUMPI 0x145 V28
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x7b
[0x7b:0x85]
---
Predecessors: [0x70]
Successors: [0x86, 0x15d]
---
0x7b DUP1
0x7c PUSH4 0xe8930efd
0x81 EQ
0x82 PUSH2 0x15d
0x85 JUMPI
---
0x7c: V30 = 0xe8930efd
0x81: V31 = EQ 0xe8930efd V8
0x82: V32 = 0x15d
0x85: JUMPI 0x15d V31
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x86
[0x86:0x90]
---
Predecessors: [0x7b]
Successors: [0x91, 0x189]
---
0x86 DUP1
0x87 PUSH4 0xf3fef3a3
0x8c EQ
0x8d PUSH2 0x189
0x90 JUMPI
---
0x87: V33 = 0xf3fef3a3
0x8c: V34 = EQ 0xf3fef3a3 V8
0x8d: V35 = 0x189
0x90: JUMPI 0x189 V34
---
Entry stack: [V8]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8]

================================

Block 0x91
[0x91:0x94]
---
Predecessors: [0x86]
Successors: [0x95]
---
0x91 PUSH2 0x95
0x94 JUMP
---
0x91: V36 = 0x95
0x94: JUMP 0x95
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x95
[0x95:0x98]
---
Predecessors: [0x0, 0x91]
Successors: [0x99]
---
0x95 JUMPDEST
0x96 PUSH2 0xa4
---
0x95: JUMPDEST 
0x96: V37 = 0xa4
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xa4]
Exit stack: [V8, 0xa4]

================================

Block 0x99
[0x99:0xa0]
---
Predecessors: [0x95]
Successors: [0x48c]
---
0x99 JUMPDEST
0x9a PUSH2 0xa1
0x9d PUSH2 0x48c
0xa0 JUMP
---
0x99: JUMPDEST 
0x9a: V38 = 0xa1
0x9d: V39 = 0x48c
0xa0: JUMP 0x48c
---
Entry stack: [V8, 0xa4]
Stack pops: 0
Stack additions: [0xa1]
Exit stack: [V8, 0xa4, 0xa1]

================================

Block 0xa1
[0xa1:0xa1]
---
Predecessors: [0x59a]
Successors: [0xa2]
---
0xa1 JUMPDEST
---
0xa1: JUMPDEST 
---
Entry stack: [V8, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, S0]

================================

Block 0xa2
[0xa2:0xa3]
---
Predecessors: [0xa1]
Successors: [0xa4]
---
0xa2 JUMPDEST
0xa3 JUMP
---
0xa2: JUMPDEST 
0xa3: JUMP S0
---
Entry stack: [V8, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0xa4
[0xa4:0xa5]
---
Predecessors: [0xa2]
Successors: []
---
0xa4 JUMPDEST
0xa5 STOP
---
0xa4: JUMPDEST 
0xa5: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xa6
[0xa6:0xb2]
---
Predecessors: [0xb]
Successors: [0x1aa]
---
0xa6 JUMPDEST
0xa7 PUSH2 0xb3
0xaa PUSH1 0x4
0xac DUP1
0xad POP
0xae POP
0xaf PUSH2 0x1aa
0xb2 JUMP
---
0xa6: JUMPDEST 
0xa7: V40 = 0xb3
0xaa: V41 = 0x4
0xaf: V42 = 0x1aa
0xb2: JUMP 0x1aa
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xb3]
Exit stack: [V8, 0xb3]

================================

Block 0xb3
[0xb3:0xc8]
---
Predecessors: [0x1aa]
Successors: []
---
0xb3 JUMPDEST
0xb4 PUSH1 0x40
0xb6 MLOAD
0xb7 DUP1
0xb8 DUP3
0xb9 DUP2
0xba MSTORE
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP2
0xbf POP
0xc0 POP
0xc1 PUSH1 0x40
0xc3 MLOAD
0xc4 DUP1
0xc5 SWAP2
0xc6 SUB
0xc7 SWAP1
0xc8 RETURN
---
0xb3: JUMPDEST 
0xb4: V43 = 0x40
0xb6: V44 = M[0x40]
0xba: M[V44] = V112
0xbb: V45 = 0x20
0xbd: V46 = ADD 0x20 V44
0xc1: V47 = 0x40
0xc3: V48 = M[0x40]
0xc6: V49 = SUB V46 V48
0xc8: RETURN V48 V49
---
Entry stack: [V8, 0xb3, V112]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0xb3]

================================

Block 0xc9
[0xc9:0xde]
---
Predecessors: [0x39]
Successors: [0x20e]
---
0xc9 JUMPDEST
0xca PUSH2 0xdf
0xcd PUSH1 0x4
0xcf DUP1
0xd0 DUP1
0xd1 CALLDATALOAD
0xd2 SWAP1
0xd3 PUSH1 0x20
0xd5 ADD
0xd6 SWAP1
0xd7 SWAP2
0xd8 SWAP1
0xd9 POP
0xda POP
0xdb PUSH2 0x20e
0xde JUMP
---
0xc9: JUMPDEST 
0xca: V50 = 0xdf
0xcd: V51 = 0x4
0xd1: V52 = CALLDATALOAD 0x4
0xd3: V53 = 0x20
0xd5: V54 = ADD 0x20 0x4
0xdb: V55 = 0x20e
0xde: JUMP 0x20e
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xdf, V52]
Exit stack: [V8, 0xdf, V52]

================================

Block 0xdf
[0xdf:0xe0]
---
Predecessors: [0x34a]
Successors: []
---
0xdf JUMPDEST
0xe0 STOP
---
0xdf: JUMPDEST 
0xe0: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0xe1
[0xe1:0xed]
---
Predecessors: [0x44]
Successors: [0x1bc]
---
0xe1 JUMPDEST
0xe2 PUSH2 0xee
0xe5 PUSH1 0x4
0xe7 DUP1
0xe8 POP
0xe9 POP
0xea PUSH2 0x1bc
0xed JUMP
---
0xe1: JUMPDEST 
0xe2: V56 = 0xee
0xe5: V57 = 0x4
0xea: V58 = 0x1bc
0xed: JUMP 0x1bc
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0xee]
Exit stack: [V8, 0xee]

================================

Block 0xee
[0xee:0x103]
---
Predecessors: [0x1bc]
Successors: []
---
0xee JUMPDEST
0xef PUSH1 0x40
0xf1 MLOAD
0xf2 DUP1
0xf3 DUP3
0xf4 DUP2
0xf5 MSTORE
0xf6 PUSH1 0x20
0xf8 ADD
0xf9 SWAP2
0xfa POP
0xfb POP
0xfc PUSH1 0x40
0xfe MLOAD
0xff DUP1
0x100 SWAP2
0x101 SUB
0x102 SWAP1
0x103 RETURN
---
0xee: JUMPDEST 
0xef: V59 = 0x40
0xf1: V60 = M[0x40]
0xf5: M[V60] = V118
0xf6: V61 = 0x20
0xf8: V62 = ADD 0x20 V60
0xfc: V63 = 0x40
0xfe: V64 = M[0x40]
0x101: V65 = SUB V62 V64
0x103: RETURN V64 V65
---
Entry stack: [V8, 0xee, V118]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0xee]

================================

Block 0x104
[0x104:0x110]
---
Predecessors: [0x4f]
Successors: [0x1e0]
---
0x104 JUMPDEST
0x105 PUSH2 0x111
0x108 PUSH1 0x4
0x10a DUP1
0x10b POP
0x10c POP
0x10d PUSH2 0x1e0
0x110 JUMP
---
0x104: JUMPDEST 
0x105: V66 = 0x111
0x108: V67 = 0x4
0x10d: V68 = 0x1e0
0x110: JUMP 0x1e0
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x111]
Exit stack: [V8, 0x111]

================================

Block 0x111
[0x111:0x112]
---
Predecessors: [0x20c]
Successors: []
---
0x111 JUMPDEST
0x112 STOP
---
0x111: JUMPDEST 
0x112: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x113
[0x113:0x11f]
---
Predecessors: [0x5a]
Successors: [0x1b3]
---
0x113 JUMPDEST
0x114 PUSH2 0x120
0x117 PUSH1 0x4
0x119 DUP1
0x11a POP
0x11b POP
0x11c PUSH2 0x1b3
0x11f JUMP
---
0x113: JUMPDEST 
0x114: V69 = 0x120
0x117: V70 = 0x4
0x11c: V71 = 0x1b3
0x11f: JUMP 0x1b3
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x120]
Exit stack: [V8, 0x120]

================================

Block 0x120
[0x120:0x135]
---
Predecessors: [0x1b3]
Successors: []
---
0x120 JUMPDEST
0x121 PUSH1 0x40
0x123 MLOAD
0x124 DUP1
0x125 DUP3
0x126 DUP2
0x127 MSTORE
0x128 PUSH1 0x20
0x12a ADD
0x12b SWAP2
0x12c POP
0x12d POP
0x12e PUSH1 0x40
0x130 MLOAD
0x131 DUP1
0x132 SWAP2
0x133 SUB
0x134 SWAP1
0x135 RETURN
---
0x120: JUMPDEST 
0x121: V72 = 0x40
0x123: V73 = M[0x40]
0x127: M[V73] = V115
0x128: V74 = 0x20
0x12a: V75 = ADD 0x20 V73
0x12e: V76 = 0x40
0x130: V77 = M[0x40]
0x133: V78 = SUB V75 V77
0x135: RETURN V77 V78
---
Entry stack: [V8, 0x120, V115]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x120]

================================

Block 0x136
[0x136:0x142]
---
Predecessors: [0x65]
Successors: [0x48c]
---
0x136 JUMPDEST
0x137 PUSH2 0x143
0x13a PUSH1 0x4
0x13c DUP1
0x13d POP
0x13e POP
0x13f PUSH2 0x48c
0x142 JUMP
---
0x136: JUMPDEST 
0x137: V79 = 0x143
0x13a: V80 = 0x4
0x13f: V81 = 0x48c
0x142: JUMP 0x48c
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x143]
Exit stack: [V8, 0x143]

================================

Block 0x143
[0x143:0x144]
---
Predecessors: [0x59a]
Successors: []
---
0x143 JUMPDEST
0x144 STOP
---
0x143: JUMPDEST 
0x144: STOP 
---
Entry stack: [V8, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V8, S0]

================================

Block 0x145
[0x145:0x15a]
---
Predecessors: [0x70]
Successors: [0x34d]
---
0x145 JUMPDEST
0x146 PUSH2 0x15b
0x149 PUSH1 0x4
0x14b DUP1
0x14c DUP1
0x14d CALLDATALOAD
0x14e SWAP1
0x14f PUSH1 0x20
0x151 ADD
0x152 SWAP1
0x153 SWAP2
0x154 SWAP1
0x155 POP
0x156 POP
0x157 PUSH2 0x34d
0x15a JUMP
---
0x145: JUMPDEST 
0x146: V82 = 0x15b
0x149: V83 = 0x4
0x14d: V84 = CALLDATALOAD 0x4
0x14f: V85 = 0x20
0x151: V86 = ADD 0x20 0x4
0x157: V87 = 0x34d
0x15a: JUMP 0x34d
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x15b, V84]
Exit stack: [V8, 0x15b, V84]

================================

Block 0x15b
[0x15b:0x15c]
---
Predecessors: [0x489]
Successors: []
---
0x15b JUMPDEST
0x15c STOP
---
0x15b: JUMPDEST 
0x15c: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x15d
[0x15d:0x172]
---
Predecessors: [0x7b]
Successors: [0x1c5]
---
0x15d JUMPDEST
0x15e PUSH2 0x173
0x161 PUSH1 0x4
0x163 DUP1
0x164 DUP1
0x165 CALLDATALOAD
0x166 SWAP1
0x167 PUSH1 0x20
0x169 ADD
0x16a SWAP1
0x16b SWAP2
0x16c SWAP1
0x16d POP
0x16e POP
0x16f PUSH2 0x1c5
0x172 JUMP
---
0x15d: JUMPDEST 
0x15e: V88 = 0x173
0x161: V89 = 0x4
0x165: V90 = CALLDATALOAD 0x4
0x167: V91 = 0x20
0x169: V92 = ADD 0x20 0x4
0x16f: V93 = 0x1c5
0x172: JUMP 0x1c5
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x173, V90]
Exit stack: [V8, 0x173, V90]

================================

Block 0x173
[0x173:0x188]
---
Predecessors: [0x1c5]
Successors: []
---
0x173 JUMPDEST
0x174 PUSH1 0x40
0x176 MLOAD
0x177 DUP1
0x178 DUP3
0x179 DUP2
0x17a MSTORE
0x17b PUSH1 0x20
0x17d ADD
0x17e SWAP2
0x17f POP
0x180 POP
0x181 PUSH1 0x40
0x183 MLOAD
0x184 DUP1
0x185 SWAP2
0x186 SUB
0x187 SWAP1
0x188 RETURN
---
0x173: JUMPDEST 
0x174: V94 = 0x40
0x176: V95 = M[0x40]
0x17a: M[V95] = V127
0x17b: V96 = 0x20
0x17d: V97 = ADD 0x20 V95
0x181: V98 = 0x40
0x183: V99 = M[0x40]
0x186: V100 = SUB V97 V99
0x188: RETURN V99 V100
---
Entry stack: [V8, 0x173, V127]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x173]

================================

Block 0x189
[0x189:0x1a7]
---
Predecessors: [0x86]
Successors: [0x59c]
---
0x189 JUMPDEST
0x18a PUSH2 0x1a8
0x18d PUSH1 0x4
0x18f DUP1
0x190 DUP1
0x191 CALLDATALOAD
0x192 SWAP1
0x193 PUSH1 0x20
0x195 ADD
0x196 SWAP1
0x197 SWAP2
0x198 SWAP1
0x199 DUP1
0x19a CALLDATALOAD
0x19b SWAP1
0x19c PUSH1 0x20
0x19e ADD
0x19f SWAP1
0x1a0 SWAP2
0x1a1 SWAP1
0x1a2 POP
0x1a3 POP
0x1a4 PUSH2 0x59c
0x1a7 JUMP
---
0x189: JUMPDEST 
0x18a: V101 = 0x1a8
0x18d: V102 = 0x4
0x191: V103 = CALLDATALOAD 0x4
0x193: V104 = 0x20
0x195: V105 = ADD 0x20 0x4
0x19a: V106 = CALLDATALOAD 0x24
0x19c: V107 = 0x20
0x19e: V108 = ADD 0x20 0x24
0x1a4: V109 = 0x59c
0x1a7: JUMP 0x59c
---
Entry stack: [V8]
Stack pops: 0
Stack additions: [0x1a8, V103, V106]
Exit stack: [V8, 0x1a8, V103, V106]

================================

Block 0x1a8
[0x1a8:0x1a9]
---
Predecessors: [0x782]
Successors: []
---
0x1a8 JUMPDEST
0x1a9 STOP
---
0x1a8: JUMPDEST 
0x1a9: STOP 
---
Entry stack: [V8]
Stack pops: 0
Stack additions: []
Exit stack: [V8]

================================

Block 0x1aa
[0x1aa:0x1b2]
---
Predecessors: [0xa6]
Successors: [0xb3]
---
0x1aa JUMPDEST
0x1ab PUSH1 0x3
0x1ad PUSH1 0x0
0x1af POP
0x1b0 SLOAD
0x1b1 DUP2
0x1b2 JUMP
---
0x1aa: JUMPDEST 
0x1ab: V110 = 0x3
0x1ad: V111 = 0x0
0x1b0: V112 = S[0x3]
0x1b2: JUMP 0xb3
---
Entry stack: [V8, 0xb3]
Stack pops: 1
Stack additions: [S0, V112]
Exit stack: [V8, 0xb3, V112]

================================

Block 0x1b3
[0x1b3:0x1bb]
---
Predecessors: [0x113]
Successors: [0x120]
---
0x1b3 JUMPDEST
0x1b4 PUSH1 0x4
0x1b6 PUSH1 0x0
0x1b8 POP
0x1b9 SLOAD
0x1ba DUP2
0x1bb JUMP
---
0x1b3: JUMPDEST 
0x1b4: V113 = 0x4
0x1b6: V114 = 0x0
0x1b9: V115 = S[0x4]
0x1bb: JUMP 0x120
---
Entry stack: [V8, 0x120]
Stack pops: 1
Stack additions: [S0, V115]
Exit stack: [V8, 0x120, V115]

================================

Block 0x1bc
[0x1bc:0x1c4]
---
Predecessors: [0xe1]
Successors: [0xee]
---
0x1bc JUMPDEST
0x1bd PUSH1 0x5
0x1bf PUSH1 0x0
0x1c1 POP
0x1c2 SLOAD
0x1c3 DUP2
0x1c4 JUMP
---
0x1bc: JUMPDEST 
0x1bd: V116 = 0x5
0x1bf: V117 = 0x0
0x1c2: V118 = S[0x5]
0x1c4: JUMP 0xee
---
Entry stack: [V8, 0xee]
Stack pops: 1
Stack additions: [S0, V118]
Exit stack: [V8, 0xee, V118]

================================

Block 0x1c5
[0x1c5:0x1df]
---
Predecessors: [0x15d]
Successors: [0x173]
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x6
0x1c8 PUSH1 0x0
0x1ca POP
0x1cb PUSH1 0x20
0x1cd MSTORE
0x1ce DUP1
0x1cf PUSH1 0x0
0x1d1 MSTORE
0x1d2 PUSH1 0x40
0x1d4 PUSH1 0x0
0x1d6 SHA3
0x1d7 PUSH1 0x0
0x1d9 SWAP2
0x1da POP
0x1db SWAP1
0x1dc POP
0x1dd SLOAD
0x1de DUP2
0x1df JUMP
---
0x1c5: JUMPDEST 
0x1c6: V119 = 0x6
0x1c8: V120 = 0x0
0x1cb: V121 = 0x20
0x1cd: M[0x20] = 0x6
0x1cf: V122 = 0x0
0x1d1: M[0x0] = V90
0x1d2: V123 = 0x40
0x1d4: V124 = 0x0
0x1d6: V125 = SHA3 0x0 0x40
0x1d7: V126 = 0x0
0x1dd: V127 = S[V125]
0x1df: JUMP 0x173
---
Entry stack: [V8, 0x173, V90]
Stack pops: 2
Stack additions: [S1, V127]
Exit stack: [V8, 0x173, V127]

================================

Block 0x1e0
[0x1e0:0x20b]
---
Predecessors: [0x104]
Successors: [0x20c]
---
0x1e0 JUMPDEST
0x1e1 CALLER
0x1e2 PUSH1 0x7
0x1e4 PUSH1 0x0
0x1e6 PUSH2 0x100
0x1e9 EXP
0x1ea DUP2
0x1eb SLOAD
0x1ec DUP2
0x1ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x202 MUL
0x203 NOT
0x204 AND
0x205 SWAP1
0x206 DUP4
0x207 MUL
0x208 OR
0x209 SWAP1
0x20a SSTORE
0x20b POP
---
0x1e0: JUMPDEST 
0x1e1: V128 = CALLER
0x1e2: V129 = 0x7
0x1e4: V130 = 0x0
0x1e6: V131 = 0x100
0x1e9: V132 = EXP 0x100 0x0
0x1eb: V133 = S[0x7]
0x1ed: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x202: V135 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x203: V136 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x204: V137 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V133
0x207: V138 = MUL V128 0x1
0x208: V139 = OR V138 V137
0x20a: S[0x7] = V139
---
Entry stack: [V8, 0x111]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x111]

================================

Block 0x20c
[0x20c:0x20d]
---
Predecessors: [0x1e0]
Successors: [0x111]
---
0x20c JUMPDEST
0x20d JUMP
---
0x20c: JUMPDEST 
0x20d: JUMP 0x111
---
Entry stack: [V8, 0x111]
Stack pops: 1
Stack additions: []
Exit stack: [V8]

================================

Block 0x20e
[0x20e:0x266]
---
Predecessors: [0xc9]
Successors: [0x267, 0x2ba]
---
0x20e JUMPDEST
0x20f PUSH1 0x0
0x211 PUSH1 0x0
0x213 SWAP1
0x214 SLOAD
0x215 SWAP1
0x216 PUSH2 0x100
0x219 EXP
0x21a SWAP1
0x21b DIV
0x21c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x231 AND
0x232 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x247 AND
0x248 CALLER
0x249 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x25e AND
0x25f EQ
0x260 ISZERO
0x261 DUP1
0x262 ISZERO
0x263 PUSH2 0x2ba
0x266 JUMPI
---
0x20e: JUMPDEST 
0x20f: V140 = 0x0
0x211: V141 = 0x0
0x214: V142 = S[0x0]
0x216: V143 = 0x100
0x219: V144 = EXP 0x100 0x0
0x21b: V145 = DIV V142 0x1
0x21c: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x231: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x232: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x247: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x248: V150 = CALLER
0x249: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x25e: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x25f: V153 = EQ V152 V149
0x260: V154 = ISZERO V153
0x262: V155 = ISZERO V154
0x263: V156 = 0x2ba
0x266: JUMPI 0x2ba V155
---
Entry stack: [V8, 0xdf, V52]
Stack pops: 0
Stack additions: [V154]
Exit stack: [V8, 0xdf, V52, V154]

================================

Block 0x267
[0x267:0x2b9]
---
Predecessors: [0x20e]
Successors: [0x2ba]
---
0x267 POP
0x268 PUSH1 0x8
0x26a PUSH1 0x0
0x26c SWAP1
0x26d SLOAD
0x26e SWAP1
0x26f PUSH2 0x100
0x272 EXP
0x273 SWAP1
0x274 DIV
0x275 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28a AND
0x28b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a0 AND
0x2a1 CALLER
0x2a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b7 AND
0x2b8 EQ
0x2b9 ISZERO
---
0x268: V157 = 0x8
0x26a: V158 = 0x0
0x26d: V159 = S[0x8]
0x26f: V160 = 0x100
0x272: V161 = EXP 0x100 0x0
0x274: V162 = DIV V159 0x1
0x275: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x28a: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x28b: V165 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x2a1: V167 = CALLER
0x2a2: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x2b8: V170 = EQ V169 V166
0x2b9: V171 = ISZERO V170
---
Entry stack: [V8, 0xdf, V52, V154]
Stack pops: 1
Stack additions: [V171]
Exit stack: [V8, 0xdf, V52, V171]

================================

Block 0x2ba
[0x2ba:0x2c0]
---
Predecessors: [0x20e, 0x267]
Successors: [0x2c1, 0x314]
---
0x2ba JUMPDEST
0x2bb DUP1
0x2bc ISZERO
0x2bd PUSH2 0x314
0x2c0 JUMPI
---
0x2ba: JUMPDEST 
0x2bc: V172 = ISZERO S0
0x2bd: V173 = 0x314
0x2c0: JUMPI 0x314 V172
---
Entry stack: [V8, 0xdf, V52, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0xdf, V52, S0]

================================

Block 0x2c1
[0x2c1:0x313]
---
Predecessors: [0x2ba]
Successors: [0x314]
---
0x2c1 POP
0x2c2 PUSH1 0x9
0x2c4 PUSH1 0x0
0x2c6 SWAP1
0x2c7 SLOAD
0x2c8 SWAP1
0x2c9 PUSH2 0x100
0x2cc EXP
0x2cd SWAP1
0x2ce DIV
0x2cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e4 AND
0x2e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2fa AND
0x2fb CALLER
0x2fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x311 AND
0x312 EQ
0x313 ISZERO
---
0x2c2: V174 = 0x9
0x2c4: V175 = 0x0
0x2c7: V176 = S[0x9]
0x2c9: V177 = 0x100
0x2cc: V178 = EXP 0x100 0x0
0x2ce: V179 = DIV V176 0x1
0x2cf: V180 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e4: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x2e5: V182 = 0xffffffffffffffffffffffffffffffffffffffff
0x2fa: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x2fb: V184 = CALLER
0x2fc: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x311: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x312: V187 = EQ V186 V183
0x313: V188 = ISZERO V187
---
Entry stack: [V8, 0xdf, V52, S0]
Stack pops: 1
Stack additions: [V188]
Exit stack: [V8, 0xdf, V52, V188]

================================

Block 0x314
[0x314:0x319]
---
Predecessors: [0x2ba, 0x2c1]
Successors: [0x31a, 0x31e]
---
0x314 JUMPDEST
0x315 ISZERO
0x316 PUSH2 0x31e
0x319 JUMPI
---
0x314: JUMPDEST 
0x315: V189 = ISZERO S0
0x316: V190 = 0x31e
0x319: JUMPI 0x31e V189
---
Entry stack: [V8, 0xdf, V52, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0xdf, V52]

================================

Block 0x31a
[0x31a:0x31d]
---
Predecessors: [0x314]
Successors: []
---
0x31a PUSH2 0x2
0x31d JUMP
---
0x31a: V191 = 0x2
0x31d: THROW 
---
Entry stack: [V8, 0xdf, V52]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0xdf, V52]

================================

Block 0x31e
[0x31e:0x349]
---
Predecessors: [0x314]
Successors: [0x34a]
---
0x31e JUMPDEST
0x31f DUP1
0x320 PUSH1 0x8
0x322 PUSH1 0x0
0x324 PUSH2 0x100
0x327 EXP
0x328 DUP2
0x329 SLOAD
0x32a DUP2
0x32b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x340 MUL
0x341 NOT
0x342 AND
0x343 SWAP1
0x344 DUP4
0x345 MUL
0x346 OR
0x347 SWAP1
0x348 SSTORE
0x349 POP
---
0x31e: JUMPDEST 
0x320: V192 = 0x8
0x322: V193 = 0x0
0x324: V194 = 0x100
0x327: V195 = EXP 0x100 0x0
0x329: V196 = S[0x8]
0x32b: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x340: V198 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x341: V199 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x342: V200 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V196
0x345: V201 = MUL V52 0x1
0x346: V202 = OR V201 V200
0x348: S[0x8] = V202
---
Entry stack: [V8, 0xdf, V52]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0xdf, V52]

================================

Block 0x34a
[0x34a:0x34c]
---
Predecessors: [0x31e]
Successors: [0xdf]
---
0x34a JUMPDEST
0x34b POP
0x34c JUMP
---
0x34a: JUMPDEST 
0x34c: JUMP 0xdf
---
Entry stack: [V8, 0xdf, V52]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x34d
[0x34d:0x3a5]
---
Predecessors: [0x145]
Successors: [0x3a6, 0x3f9]
---
0x34d JUMPDEST
0x34e PUSH1 0x0
0x350 PUSH1 0x0
0x352 SWAP1
0x353 SLOAD
0x354 SWAP1
0x355 PUSH2 0x100
0x358 EXP
0x359 SWAP1
0x35a DIV
0x35b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x370 AND
0x371 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x386 AND
0x387 CALLER
0x388 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39d AND
0x39e EQ
0x39f ISZERO
0x3a0 DUP1
0x3a1 ISZERO
0x3a2 PUSH2 0x3f9
0x3a5 JUMPI
---
0x34d: JUMPDEST 
0x34e: V203 = 0x0
0x350: V204 = 0x0
0x353: V205 = S[0x0]
0x355: V206 = 0x100
0x358: V207 = EXP 0x100 0x0
0x35a: V208 = DIV V205 0x1
0x35b: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x370: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x371: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x386: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x387: V213 = CALLER
0x388: V214 = 0xffffffffffffffffffffffffffffffffffffffff
0x39d: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x39e: V216 = EQ V215 V212
0x39f: V217 = ISZERO V216
0x3a1: V218 = ISZERO V217
0x3a2: V219 = 0x3f9
0x3a5: JUMPI 0x3f9 V218
---
Entry stack: [V8, 0x15b, V84]
Stack pops: 0
Stack additions: [V217]
Exit stack: [V8, 0x15b, V84, V217]

================================

Block 0x3a6
[0x3a6:0x3f8]
---
Predecessors: [0x34d]
Successors: [0x3f9]
---
0x3a6 POP
0x3a7 PUSH1 0x8
0x3a9 PUSH1 0x0
0x3ab SWAP1
0x3ac SLOAD
0x3ad SWAP1
0x3ae PUSH2 0x100
0x3b1 EXP
0x3b2 SWAP1
0x3b3 DIV
0x3b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c9 AND
0x3ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3df AND
0x3e0 CALLER
0x3e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f6 AND
0x3f7 EQ
0x3f8 ISZERO
---
0x3a7: V220 = 0x8
0x3a9: V221 = 0x0
0x3ac: V222 = S[0x8]
0x3ae: V223 = 0x100
0x3b1: V224 = EXP 0x100 0x0
0x3b3: V225 = DIV V222 0x1
0x3b4: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c9: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x3ca: V228 = 0xffffffffffffffffffffffffffffffffffffffff
0x3df: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x3e0: V230 = CALLER
0x3e1: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f6: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x3f7: V233 = EQ V232 V229
0x3f8: V234 = ISZERO V233
---
Entry stack: [V8, 0x15b, V84, V217]
Stack pops: 1
Stack additions: [V234]
Exit stack: [V8, 0x15b, V84, V234]

================================

Block 0x3f9
[0x3f9:0x3ff]
---
Predecessors: [0x34d, 0x3a6]
Successors: [0x400, 0x453]
---
0x3f9 JUMPDEST
0x3fa DUP1
0x3fb ISZERO
0x3fc PUSH2 0x453
0x3ff JUMPI
---
0x3f9: JUMPDEST 
0x3fb: V235 = ISZERO S0
0x3fc: V236 = 0x453
0x3ff: JUMPI 0x453 V235
---
Entry stack: [V8, 0x15b, V84, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x15b, V84, S0]

================================

Block 0x400
[0x400:0x452]
---
Predecessors: [0x3f9]
Successors: [0x453]
---
0x400 POP
0x401 PUSH1 0x9
0x403 PUSH1 0x0
0x405 SWAP1
0x406 SLOAD
0x407 SWAP1
0x408 PUSH2 0x100
0x40b EXP
0x40c SWAP1
0x40d DIV
0x40e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x423 AND
0x424 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x439 AND
0x43a CALLER
0x43b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x450 AND
0x451 EQ
0x452 ISZERO
---
0x401: V237 = 0x9
0x403: V238 = 0x0
0x406: V239 = S[0x9]
0x408: V240 = 0x100
0x40b: V241 = EXP 0x100 0x0
0x40d: V242 = DIV V239 0x1
0x40e: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x423: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x424: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x439: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x43a: V247 = CALLER
0x43b: V248 = 0xffffffffffffffffffffffffffffffffffffffff
0x450: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x451: V250 = EQ V249 V246
0x452: V251 = ISZERO V250
---
Entry stack: [V8, 0x15b, V84, S0]
Stack pops: 1
Stack additions: [V251]
Exit stack: [V8, 0x15b, V84, V251]

================================

Block 0x453
[0x453:0x458]
---
Predecessors: [0x3f9, 0x400]
Successors: [0x459, 0x45d]
---
0x453 JUMPDEST
0x454 ISZERO
0x455 PUSH2 0x45d
0x458 JUMPI
---
0x453: JUMPDEST 
0x454: V252 = ISZERO S0
0x455: V253 = 0x45d
0x458: JUMPI 0x45d V252
---
Entry stack: [V8, 0x15b, V84, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x15b, V84]

================================

Block 0x459
[0x459:0x45c]
---
Predecessors: [0x453]
Successors: []
---
0x459 PUSH2 0x2
0x45c JUMP
---
0x459: V254 = 0x2
0x45c: THROW 
---
Entry stack: [V8, 0x15b, V84]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x15b, V84]

================================

Block 0x45d
[0x45d:0x488]
---
Predecessors: [0x453]
Successors: [0x489]
---
0x45d JUMPDEST
0x45e DUP1
0x45f PUSH1 0x9
0x461 PUSH1 0x0
0x463 PUSH2 0x100
0x466 EXP
0x467 DUP2
0x468 SLOAD
0x469 DUP2
0x46a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47f MUL
0x480 NOT
0x481 AND
0x482 SWAP1
0x483 DUP4
0x484 MUL
0x485 OR
0x486 SWAP1
0x487 SSTORE
0x488 POP
---
0x45d: JUMPDEST 
0x45f: V255 = 0x9
0x461: V256 = 0x0
0x463: V257 = 0x100
0x466: V258 = EXP 0x100 0x0
0x468: V259 = S[0x9]
0x46a: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x47f: V261 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x480: V262 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x481: V263 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V259
0x484: V264 = MUL V84 0x1
0x485: V265 = OR V264 V263
0x487: S[0x9] = V265
---
Entry stack: [V8, 0x15b, V84]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x15b, V84]

================================

Block 0x489
[0x489:0x48b]
---
Predecessors: [0x45d]
Successors: [0x15b]
---
0x489 JUMPDEST
0x48a POP
0x48b JUMP
---
0x489: JUMPDEST 
0x48b: JUMP 0x15b
---
Entry stack: [V8, 0x15b, V84]
Stack pops: 2
Stack additions: []
Exit stack: [V8]

================================

Block 0x48c
[0x48c:0x49d]
---
Predecessors: [0x99, 0x136]
Successors: [0x49e, 0x599]
---
0x48c JUMPDEST
0x48d PUSH8 0xde0b6b3a7640000
0x496 CALLVALUE
0x497 LT
0x498 ISZERO
0x499 ISZERO
0x49a PUSH2 0x599
0x49d JUMPI
---
0x48c: JUMPDEST 
0x48d: V266 = 0xde0b6b3a7640000
0x496: V267 = CALLVALUE
0x497: V268 = LT V267 0xde0b6b3a7640000
0x498: V269 = ISZERO V268
0x499: V270 = ISZERO V269
0x49a: V271 = 0x599
0x49d: JUMPI 0x599 V270
---
Entry stack: [V8, S1, {0xa1, 0x143}]
Stack pops: 0
Stack additions: []
Exit stack: [V8, S1, {0xa1, 0x143}]

================================

Block 0x49e
[0x49e:0x4d5]
---
Predecessors: [0x48c]
Successors: [0x4d6, 0x4ea]
---
0x49e PUSH1 0x0
0x4a0 PUSH1 0x6
0x4a2 PUSH1 0x0
0x4a4 POP
0x4a5 PUSH1 0x0
0x4a7 CALLER
0x4a8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4bd AND
0x4be DUP2
0x4bf MSTORE
0x4c0 PUSH1 0x20
0x4c2 ADD
0x4c3 SWAP1
0x4c4 DUP2
0x4c5 MSTORE
0x4c6 PUSH1 0x20
0x4c8 ADD
0x4c9 PUSH1 0x0
0x4cb SHA3
0x4cc PUSH1 0x0
0x4ce POP
0x4cf SLOAD
0x4d0 EQ
0x4d1 ISZERO
0x4d2 PUSH2 0x4ea
0x4d5 JUMPI
---
0x49e: V272 = 0x0
0x4a0: V273 = 0x6
0x4a2: V274 = 0x0
0x4a5: V275 = 0x0
0x4a7: V276 = CALLER
0x4a8: V277 = 0xffffffffffffffffffffffffffffffffffffffff
0x4bd: V278 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x4bf: M[0x0] = V278
0x4c0: V279 = 0x20
0x4c2: V280 = ADD 0x20 0x0
0x4c5: M[0x20] = 0x6
0x4c6: V281 = 0x20
0x4c8: V282 = ADD 0x20 0x20
0x4c9: V283 = 0x0
0x4cb: V284 = SHA3 0x0 0x40
0x4cc: V285 = 0x0
0x4cf: V286 = S[V284]
0x4d0: V287 = EQ V286 0x0
0x4d1: V288 = ISZERO V287
0x4d2: V289 = 0x4ea
0x4d5: JUMPI 0x4ea V288
---
Entry stack: [V8, S1, {0xa1, 0x143}]
Stack pops: 0
Stack additions: []
Exit stack: [V8, S1, {0xa1, 0x143}]

================================

Block 0x4d6
[0x4d6:0x4e9]
---
Predecessors: [0x49e]
Successors: [0x4ea]
---
0x4d6 PUSH1 0x5
0x4d8 PUSH1 0x0
0x4da DUP2
0x4db DUP2
0x4dc POP
0x4dd SLOAD
0x4de DUP1
0x4df SWAP3
0x4e0 SWAP2
0x4e1 SWAP1
0x4e2 PUSH1 0x1
0x4e4 ADD
0x4e5 SWAP2
0x4e6 SWAP1
0x4e7 POP
0x4e8 SSTORE
0x4e9 POP
---
0x4d6: V290 = 0x5
0x4d8: V291 = 0x0
0x4dd: V292 = S[0x5]
0x4e2: V293 = 0x1
0x4e4: V294 = ADD 0x1 V292
0x4e8: S[0x5] = V294
---
Entry stack: [V8, S1, {0xa1, 0x143}]
Stack pops: 0
Stack additions: []
Exit stack: [V8, S1, {0xa1, 0x143}]

================================

Block 0x4ea
[0x4ea:0x598]
---
Predecessors: [0x49e, 0x4d6]
Successors: [0x599]
---
0x4ea JUMPDEST
0x4eb CALLVALUE
0x4ec PUSH1 0x6
0x4ee PUSH1 0x0
0x4f0 POP
0x4f1 PUSH1 0x0
0x4f3 CALLER
0x4f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x509 AND
0x50a DUP2
0x50b MSTORE
0x50c PUSH1 0x20
0x50e ADD
0x50f SWAP1
0x510 DUP2
0x511 MSTORE
0x512 PUSH1 0x20
0x514 ADD
0x515 PUSH1 0x0
0x517 SHA3
0x518 PUSH1 0x0
0x51a DUP3
0x51b DUP3
0x51c DUP3
0x51d POP
0x51e SLOAD
0x51f ADD
0x520 SWAP3
0x521 POP
0x522 POP
0x523 DUP2
0x524 SWAP1
0x525 SSTORE
0x526 POP
0x527 CALLVALUE
0x528 PUSH1 0x3
0x52a PUSH1 0x0
0x52c DUP3
0x52d DUP3
0x52e DUP3
0x52f POP
0x530 SLOAD
0x531 ADD
0x532 SWAP3
0x533 POP
0x534 POP
0x535 DUP2
0x536 SWAP1
0x537 SSTORE
0x538 POP
0x539 CALLVALUE
0x53a PUSH1 0x4
0x53c PUSH1 0x0
0x53e DUP3
0x53f DUP3
0x540 DUP3
0x541 POP
0x542 SLOAD
0x543 ADD
0x544 SWAP3
0x545 POP
0x546 POP
0x547 DUP2
0x548 SWAP1
0x549 SSTORE
0x54a POP
0x54b CALLER
0x54c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x561 AND
0x562 PUSH32 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x583 CALLVALUE
0x584 PUSH1 0x40
0x586 MLOAD
0x587 DUP1
0x588 DUP3
0x589 DUP2
0x58a MSTORE
0x58b PUSH1 0x20
0x58d ADD
0x58e SWAP2
0x58f POP
0x590 POP
0x591 PUSH1 0x40
0x593 MLOAD
0x594 DUP1
0x595 SWAP2
0x596 SUB
0x597 SWAP1
0x598 LOG2
---
0x4ea: JUMPDEST 
0x4eb: V295 = CALLVALUE
0x4ec: V296 = 0x6
0x4ee: V297 = 0x0
0x4f1: V298 = 0x0
0x4f3: V299 = CALLER
0x4f4: V300 = 0xffffffffffffffffffffffffffffffffffffffff
0x509: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x50b: M[0x0] = V301
0x50c: V302 = 0x20
0x50e: V303 = ADD 0x20 0x0
0x511: M[0x20] = 0x6
0x512: V304 = 0x20
0x514: V305 = ADD 0x20 0x20
0x515: V306 = 0x0
0x517: V307 = SHA3 0x0 0x40
0x518: V308 = 0x0
0x51e: V309 = S[V307]
0x51f: V310 = ADD V309 V295
0x525: S[V307] = V310
0x527: V311 = CALLVALUE
0x528: V312 = 0x3
0x52a: V313 = 0x0
0x530: V314 = S[0x3]
0x531: V315 = ADD V314 V311
0x537: S[0x3] = V315
0x539: V316 = CALLVALUE
0x53a: V317 = 0x4
0x53c: V318 = 0x0
0x542: V319 = S[0x4]
0x543: V320 = ADD V319 V316
0x549: S[0x4] = V320
0x54b: V321 = CALLER
0x54c: V322 = 0xffffffffffffffffffffffffffffffffffffffff
0x561: V323 = AND 0xffffffffffffffffffffffffffffffffffffffff V321
0x562: V324 = 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c
0x583: V325 = CALLVALUE
0x584: V326 = 0x40
0x586: V327 = M[0x40]
0x58a: M[V327] = V325
0x58b: V328 = 0x20
0x58d: V329 = ADD 0x20 V327
0x591: V330 = 0x40
0x593: V331 = M[0x40]
0x596: V332 = SUB V329 V331
0x598: LOG V331 V332 0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c V323
---
Entry stack: [V8, S1, {0xa1, 0x143}]
Stack pops: 0
Stack additions: []
Exit stack: [V8, S1, {0xa1, 0x143}]

================================

Block 0x599
[0x599:0x599]
---
Predecessors: [0x48c, 0x4ea]
Successors: [0x59a]
---
0x599 JUMPDEST
---
0x599: JUMPDEST 
---
Entry stack: [V8, S1, {0xa1, 0x143}]
Stack pops: 0
Stack additions: []
Exit stack: [V8, S1, {0xa1, 0x143}]

================================

Block 0x59a
[0x59a:0x59b]
---
Predecessors: [0x599]
Successors: [0xa1, 0x143]
---
0x59a JUMPDEST
0x59b JUMP
---
0x59a: JUMPDEST 
0x59b: JUMP {0xa1, 0x143}
---
Entry stack: [V8, S1, {0xa1, 0x143}]
Stack pops: 1
Stack additions: []
Exit stack: [V8, S1]

================================

Block 0x59c
[0x59c:0x5f4]
---
Predecessors: [0x189]
Successors: [0x5f5, 0x648]
---
0x59c JUMPDEST
0x59d PUSH1 0x0
0x59f PUSH1 0x0
0x5a1 SWAP1
0x5a2 SLOAD
0x5a3 SWAP1
0x5a4 PUSH2 0x100
0x5a7 EXP
0x5a8 SWAP1
0x5a9 DIV
0x5aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5bf AND
0x5c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d5 AND
0x5d6 CALLER
0x5d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5ec AND
0x5ed EQ
0x5ee ISZERO
0x5ef DUP1
0x5f0 ISZERO
0x5f1 PUSH2 0x648
0x5f4 JUMPI
---
0x59c: JUMPDEST 
0x59d: V333 = 0x0
0x59f: V334 = 0x0
0x5a2: V335 = S[0x0]
0x5a4: V336 = 0x100
0x5a7: V337 = EXP 0x100 0x0
0x5a9: V338 = DIV V335 0x1
0x5aa: V339 = 0xffffffffffffffffffffffffffffffffffffffff
0x5bf: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V338
0x5c0: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d5: V342 = AND 0xffffffffffffffffffffffffffffffffffffffff V340
0x5d6: V343 = CALLER
0x5d7: V344 = 0xffffffffffffffffffffffffffffffffffffffff
0x5ec: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V343
0x5ed: V346 = EQ V345 V342
0x5ee: V347 = ISZERO V346
0x5f0: V348 = ISZERO V347
0x5f1: V349 = 0x648
0x5f4: JUMPI 0x648 V348
---
Entry stack: [V8, 0x1a8, V103, V106]
Stack pops: 0
Stack additions: [V347]
Exit stack: [V8, 0x1a8, V103, V106, V347]

================================

Block 0x5f5
[0x5f5:0x647]
---
Predecessors: [0x59c]
Successors: [0x648]
---
0x5f5 POP
0x5f6 PUSH1 0x8
0x5f8 PUSH1 0x0
0x5fa SWAP1
0x5fb SLOAD
0x5fc SWAP1
0x5fd PUSH2 0x100
0x600 EXP
0x601 SWAP1
0x602 DIV
0x603 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x618 AND
0x619 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x62e AND
0x62f CALLER
0x630 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x645 AND
0x646 EQ
0x647 ISZERO
---
0x5f6: V350 = 0x8
0x5f8: V351 = 0x0
0x5fb: V352 = S[0x8]
0x5fd: V353 = 0x100
0x600: V354 = EXP 0x100 0x0
0x602: V355 = DIV V352 0x1
0x603: V356 = 0xffffffffffffffffffffffffffffffffffffffff
0x618: V357 = AND 0xffffffffffffffffffffffffffffffffffffffff V355
0x619: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x62e: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x62f: V360 = CALLER
0x630: V361 = 0xffffffffffffffffffffffffffffffffffffffff
0x645: V362 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x646: V363 = EQ V362 V359
0x647: V364 = ISZERO V363
---
Entry stack: [V8, 0x1a8, V103, V106, V347]
Stack pops: 1
Stack additions: [V364]
Exit stack: [V8, 0x1a8, V103, V106, V364]

================================

Block 0x648
[0x648:0x64e]
---
Predecessors: [0x59c, 0x5f5]
Successors: [0x64f, 0x6a2]
---
0x648 JUMPDEST
0x649 DUP1
0x64a ISZERO
0x64b PUSH2 0x6a2
0x64e JUMPI
---
0x648: JUMPDEST 
0x64a: V365 = ISZERO S0
0x64b: V366 = 0x6a2
0x64e: JUMPI 0x6a2 V365
---
Entry stack: [V8, 0x1a8, V103, V106, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V8, 0x1a8, V103, V106, S0]

================================

Block 0x64f
[0x64f:0x6a1]
---
Predecessors: [0x648]
Successors: [0x6a2]
---
0x64f POP
0x650 PUSH1 0x9
0x652 PUSH1 0x0
0x654 SWAP1
0x655 SLOAD
0x656 SWAP1
0x657 PUSH2 0x100
0x65a EXP
0x65b SWAP1
0x65c DIV
0x65d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x672 AND
0x673 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x688 AND
0x689 CALLER
0x68a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x69f AND
0x6a0 EQ
0x6a1 ISZERO
---
0x650: V367 = 0x9
0x652: V368 = 0x0
0x655: V369 = S[0x9]
0x657: V370 = 0x100
0x65a: V371 = EXP 0x100 0x0
0x65c: V372 = DIV V369 0x1
0x65d: V373 = 0xffffffffffffffffffffffffffffffffffffffff
0x672: V374 = AND 0xffffffffffffffffffffffffffffffffffffffff V372
0x673: V375 = 0xffffffffffffffffffffffffffffffffffffffff
0x688: V376 = AND 0xffffffffffffffffffffffffffffffffffffffff V374
0x689: V377 = CALLER
0x68a: V378 = 0xffffffffffffffffffffffffffffffffffffffff
0x69f: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x6a0: V380 = EQ V379 V376
0x6a1: V381 = ISZERO V380
---
Entry stack: [V8, 0x1a8, V103, V106, S0]
Stack pops: 1
Stack additions: [V381]
Exit stack: [V8, 0x1a8, V103, V106, V381]

================================

Block 0x6a2
[0x6a2:0x6a7]
---
Predecessors: [0x648, 0x64f]
Successors: [0x6a8, 0x6ac]
---
0x6a2 JUMPDEST
0x6a3 ISZERO
0x6a4 PUSH2 0x6ac
0x6a7 JUMPI
---
0x6a2: JUMPDEST 
0x6a3: V382 = ISZERO S0
0x6a4: V383 = 0x6ac
0x6a7: JUMPI 0x6ac V382
---
Entry stack: [V8, 0x1a8, V103, V106, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V8, 0x1a8, V103, V106]

================================

Block 0x6a8
[0x6a8:0x6ab]
---
Predecessors: [0x6a2]
Successors: []
---
0x6a8 PUSH2 0x2
0x6ab JUMP
---
0x6a8: V384 = 0x2
0x6ab: THROW 
---
Entry stack: [V8, 0x1a8, V103, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1a8, V103, V106]

================================

Block 0x6ac
[0x6ac:0x6e4]
---
Predecessors: [0x6a2]
Successors: [0x6e5, 0x6e9]
---
0x6ac JUMPDEST
0x6ad PUSH1 0x0
0x6af PUSH1 0x6
0x6b1 PUSH1 0x0
0x6b3 POP
0x6b4 PUSH1 0x0
0x6b6 DUP5
0x6b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6cc AND
0x6cd DUP2
0x6ce MSTORE
0x6cf PUSH1 0x20
0x6d1 ADD
0x6d2 SWAP1
0x6d3 DUP2
0x6d4 MSTORE
0x6d5 PUSH1 0x20
0x6d7 ADD
0x6d8 PUSH1 0x0
0x6da SHA3
0x6db PUSH1 0x0
0x6dd POP
0x6de SLOAD
0x6df EQ
0x6e0 ISZERO
0x6e1 PUSH2 0x6e9
0x6e4 JUMPI
---
0x6ac: JUMPDEST 
0x6ad: V385 = 0x0
0x6af: V386 = 0x6
0x6b1: V387 = 0x0
0x6b4: V388 = 0x0
0x6b7: V389 = 0xffffffffffffffffffffffffffffffffffffffff
0x6cc: V390 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x6ce: M[0x0] = V390
0x6cf: V391 = 0x20
0x6d1: V392 = ADD 0x20 0x0
0x6d4: M[0x20] = 0x6
0x6d5: V393 = 0x20
0x6d7: V394 = ADD 0x20 0x20
0x6d8: V395 = 0x0
0x6da: V396 = SHA3 0x0 0x40
0x6db: V397 = 0x0
0x6de: V398 = S[V396]
0x6df: V399 = EQ V398 0x0
0x6e0: V400 = ISZERO V399
0x6e1: V401 = 0x6e9
0x6e4: JUMPI 0x6e9 V400
---
Entry stack: [V8, 0x1a8, V103, V106]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0x1a8, V103, V106]

================================

Block 0x6e5
[0x6e5:0x6e8]
---
Predecessors: [0x6ac]
Successors: []
---
0x6e5 PUSH2 0x2
0x6e8 JUMP
---
0x6e5: V402 = 0x2
0x6e8: THROW 
---
Entry stack: [V8, 0x1a8, V103, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1a8, V103, V106]

================================

Block 0x6e9
[0x6e9:0x720]
---
Predecessors: [0x6ac]
Successors: [0x721, 0x781]
---
0x6e9 JUMPDEST
0x6ea DUP2
0x6eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x700 AND
0x701 PUSH1 0x0
0x703 DUP3
0x704 PUSH1 0x40
0x706 MLOAD
0x707 DUP1
0x708 SWAP1
0x709 POP
0x70a PUSH1 0x0
0x70c PUSH1 0x40
0x70e MLOAD
0x70f DUP1
0x710 DUP4
0x711 SUB
0x712 DUP2
0x713 DUP6
0x714 DUP9
0x715 DUP9
0x716 CALL
0x717 SWAP4
0x718 POP
0x719 POP
0x71a POP
0x71b POP
0x71c ISZERO
0x71d PUSH2 0x781
0x720 JUMPI
---
0x6e9: JUMPDEST 
0x6eb: V403 = 0xffffffffffffffffffffffffffffffffffffffff
0x700: V404 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x701: V405 = 0x0
0x704: V406 = 0x40
0x706: V407 = M[0x40]
0x70a: V408 = 0x0
0x70c: V409 = 0x40
0x70e: V410 = M[0x40]
0x711: V411 = SUB V407 V410
0x716: V412 = CALL 0x0 V404 V106 V410 V411 V410 0x0
0x71c: V413 = ISZERO V412
0x71d: V414 = 0x781
0x720: JUMPI 0x781 V413
---
Entry stack: [V8, 0x1a8, V103, V106]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0x1a8, V103, V106]

================================

Block 0x721
[0x721:0x780]
---
Predecessors: [0x6e9]
Successors: [0x781]
---
0x721 DUP1
0x722 PUSH1 0x4
0x724 PUSH1 0x0
0x726 DUP3
0x727 DUP3
0x728 DUP3
0x729 POP
0x72a SLOAD
0x72b SUB
0x72c SWAP3
0x72d POP
0x72e POP
0x72f DUP2
0x730 SWAP1
0x731 SSTORE
0x732 POP
0x733 DUP2
0x734 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x749 AND
0x74a PUSH32 0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364
0x76b DUP3
0x76c PUSH1 0x40
0x76e MLOAD
0x76f DUP1
0x770 DUP3
0x771 DUP2
0x772 MSTORE
0x773 PUSH1 0x20
0x775 ADD
0x776 SWAP2
0x777 POP
0x778 POP
0x779 PUSH1 0x40
0x77b MLOAD
0x77c DUP1
0x77d SWAP2
0x77e SUB
0x77f SWAP1
0x780 LOG2
---
0x722: V415 = 0x4
0x724: V416 = 0x0
0x72a: V417 = S[0x4]
0x72b: V418 = SUB V417 V106
0x731: S[0x4] = V418
0x734: V419 = 0xffffffffffffffffffffffffffffffffffffffff
0x749: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x74a: V421 = 0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364
0x76c: V422 = 0x40
0x76e: V423 = M[0x40]
0x772: M[V423] = V106
0x773: V424 = 0x20
0x775: V425 = ADD 0x20 V423
0x779: V426 = 0x40
0x77b: V427 = M[0x40]
0x77e: V428 = SUB V425 V427
0x780: LOG V427 V428 0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364 V420
---
Entry stack: [V8, 0x1a8, V103, V106]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V8, 0x1a8, V103, V106]

================================

Block 0x781
[0x781:0x781]
---
Predecessors: [0x6e9, 0x721]
Successors: [0x782]
---
0x781 JUMPDEST
---
0x781: JUMPDEST 
---
Entry stack: [V8, 0x1a8, V103, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V8, 0x1a8, V103, V106]

================================

Block 0x782
[0x782:0x785]
---
Predecessors: [0x781]
Successors: [0x1a8]
---
0x782 JUMPDEST
0x783 POP
0x784 POP
0x785 JUMP
---
0x782: JUMPDEST 
0x785: JUMP 0x1a8
---
Entry stack: [V8, 0x1a8, V103, V106]
Stack pops: 3
Stack additions: []
Exit stack: [V8]

================================

Function 0:
Public function signature: 0x56e4d88
Entry block: 0xa6
Exit block: 0xb3
Body: 0xa6, 0xb3, 0x1aa

Function 1:
Public function signature: 0x33c4a1d6
Entry block: 0xc9
Exit block: 0xdf
Body: 0xc9, 0xdf, 0x20e, 0x267, 0x2ba, 0x2c1, 0x314, 0x31a, 0x31e, 0x34a

Function 2:
Public function signature: 0x589e5edd
Entry block: 0xe1
Exit block: 0xee
Body: 0xe1, 0xee, 0x1bc

Function 3:
Public function signature: 0x72325c5b
Entry block: 0x104
Exit block: 0x111
Body: 0x104, 0x111, 0x1e0, 0x20c

Function 4:
Public function signature: 0x9ec7888f
Entry block: 0x113
Exit block: 0x120
Body: 0x113, 0x120, 0x1b3

Function 5:
Public function signature: 0xab225edc
Entry block: 0x136
Exit block: 0x143
Body: 0x136, 0x143

Function 6:
Public function signature: 0xd25d19e2
Entry block: 0x145
Exit block: 0x15b
Body: 0x145, 0x15b, 0x34d, 0x3a6, 0x3f9, 0x400, 0x453, 0x459, 0x45d, 0x489

Function 7:
Public function signature: 0xe8930efd
Entry block: 0x15d
Exit block: 0x173
Body: 0x15d, 0x173, 0x1c5

Function 8:
Public function signature: 0xf3fef3a3
Entry block: 0x189
Exit block: 0x1a8
Body: 0x189, 0x1a8, 0x59c, 0x5f5, 0x648, 0x64f, 0x6a2, 0x6a8, 0x6ac, 0x6e5, 0x6e9, 0x721, 0x781, 0x782

Function 9:
Public fallback function
Entry block: 0x91
Exit block: 0xa4
Body: 0x91, 0x95, 0x99, 0xa1, 0xa2, 0xa4

Function 10:
Private function
Entry block: 0x48c
Exit block: 0x59a
Body: 0x48c, 0x49e, 0x4d6, 0x4ea, 0x599, 0x59a

