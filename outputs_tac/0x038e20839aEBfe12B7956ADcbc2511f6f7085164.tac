Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x75]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x75
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x75
0xa: JUMPI 0x75 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x82]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x2d2c44f2
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x82
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x2d2c44f2
0x39: V12 = EQ V10 0x2d2c44f2
0x3a: V13 = 0x82
0x3d: JUMPI 0x82 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x8c]
---
0x3e DUP1
0x3f PUSH4 0x2e1a7d4d
0x44 EQ
0x45 PUSH2 0x8c
0x48 JUMPI
---
0x3f: V14 = 0x2e1a7d4d
0x44: V15 = EQ 0x2e1a7d4d V10
0x45: V16 = 0x8c
0x48: JUMPI 0x8c V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x99]
---
0x49 DUP1
0x4a PUSH4 0x3ee2d7c2
0x4f EQ
0x50 PUSH2 0x99
0x53 JUMPI
---
0x4a: V17 = 0x3ee2d7c2
0x4f: V18 = EQ 0x3ee2d7c2 V10
0x50: V19 = 0x99
0x53: JUMPI 0x99 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0xca]
---
0x54 DUP1
0x55 PUSH4 0x41c0e1b5
0x5a EQ
0x5b PUSH2 0xca
0x5e JUMPI
---
0x55: V20 = 0x41c0e1b5
0x5a: V21 = EQ 0x41c0e1b5 V10
0x5b: V22 = 0xca
0x5e: JUMPI 0xca V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0xd4]
---
0x5f DUP1
0x60 PUSH4 0xb4a99a4e
0x65 EQ
0x66 PUSH2 0xd4
0x69 JUMPI
---
0x60: V23 = 0xb4a99a4e
0x65: V24 = EQ 0xb4a99a4e V10
0x66: V25 = 0xd4
0x69: JUMPI 0xd4 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x103]
---
0x6a DUP1
0x6b PUSH4 0xd0e30db0
0x70 EQ
0x71 PUSH2 0x103
0x74 JUMPI
---
0x6b: V26 = 0xd0e30db0
0x70: V27 = EQ 0xd0e30db0 V10
0x71: V28 = 0x103
0x74: JUMPI 0x103 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x78]
---
Predecessors: [0x0, 0x6a]
Successors: [0x79]
---
0x75 JUMPDEST
0x76 PUSH2 0x80
---
0x75: JUMPDEST 
0x76: V29 = 0x80
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x80]
Exit stack: [V10, 0x80]

================================

Block 0x79
[0x79:0x7d]
---
Predecessors: [0x75]
Successors: []
---
0x79 JUMPDEST
0x7a PUSH1 0x0
0x7c DUP1
0x7d REVERT
---
0x79: JUMPDEST 
0x7a: V30 = 0x0
0x7d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x80]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x80]

================================

Block 0x7e
[0x7e:0x7f]
---
Predecessors: [0x7e, 0x217, 0x22f, 0x25f, 0x26f, 0x2e6]
Successors: [0x7e, 0x80]
---
0x7e JUMPDEST
0x7f JUMP
---
0x7e: JUMPDEST 
0x7f: JUMP S0
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x80
[0x80:0x81]
---
Predecessors: [0x7e, 0x202, 0x2e6]
Successors: []
---
0x80 JUMPDEST
0x81 STOP
---
0x80: JUMPDEST 
0x81: STOP 
---
Entry stack: [V10, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S0]

================================

Block 0x82
[0x82:0x89]
---
Predecessors: [0xb]
Successors: [0x10d]
---
0x82 JUMPDEST
0x83 PUSH2 0x80
0x86 PUSH2 0x10d
0x89 JUMP
---
0x82: JUMPDEST 
0x83: V31 = 0x80
0x86: V32 = 0x10d
0x89: JUMP 0x10d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x80]
Exit stack: [V10, 0x80]

================================

Block 0x8a
[0x8a:0x8b]
---
Predecessors: []
Successors: []
---
0x8a JUMPDEST
0x8b STOP
---
0x8a: JUMPDEST 
0x8b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x3e]
Successors: [0x140]
---
0x8c JUMPDEST
0x8d PUSH2 0x80
0x90 PUSH1 0x4
0x92 CALLDATALOAD
0x93 PUSH2 0x140
0x96 JUMP
---
0x8c: JUMPDEST 
0x8d: V33 = 0x80
0x90: V34 = 0x4
0x92: V35 = CALLDATALOAD 0x4
0x93: V36 = 0x140
0x96: JUMP 0x140
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x80, V35]
Exit stack: [V10, 0x80, V35]

================================

Block 0x97
[0x97:0x98]
---
Predecessors: []
Successors: []
---
0x97 JUMPDEST
0x98 STOP
---
0x97: JUMPDEST 
0x98: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x99
[0x99:0x9f]
---
Predecessors: [0x49]
Successors: [0xa0, 0xa4]
---
0x99 JUMPDEST
0x9a CALLVALUE
0x9b ISZERO
0x9c PUSH2 0xa4
0x9f JUMPI
---
0x99: JUMPDEST 
0x9a: V37 = CALLVALUE
0x9b: V38 = ISZERO V37
0x9c: V39 = 0xa4
0x9f: JUMPI 0xa4 V38
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa0
[0xa0:0xa3]
---
Predecessors: [0x99]
Successors: []
---
0xa0 PUSH1 0x0
0xa2 DUP1
0xa3 REVERT
---
0xa0: V40 = 0x0
0xa3: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa4
[0xa4:0xb7]
---
Predecessors: [0x99]
Successors: [0x205]
---
0xa4 JUMPDEST
0xa5 PUSH2 0xb8
0xa8 PUSH1 0x1
0xaa PUSH1 0xa0
0xac PUSH1 0x2
0xae EXP
0xaf SUB
0xb0 PUSH1 0x4
0xb2 CALLDATALOAD
0xb3 AND
0xb4 PUSH2 0x205
0xb7 JUMP
---
0xa4: JUMPDEST 
0xa5: V41 = 0xb8
0xa8: V42 = 0x1
0xaa: V43 = 0xa0
0xac: V44 = 0x2
0xae: V45 = EXP 0x2 0xa0
0xaf: V46 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb0: V47 = 0x4
0xb2: V48 = CALLDATALOAD 0x4
0xb3: V49 = AND V48 0xffffffffffffffffffffffffffffffffffffffff
0xb4: V50 = 0x205
0xb7: JUMP 0x205
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xb8, V49]
Exit stack: [V10, 0xb8, V49]

================================

Block 0xb8
[0xb8:0xc9]
---
Predecessors: [0x205]
Successors: []
---
0xb8 JUMPDEST
0xb9 PUSH1 0x40
0xbb MLOAD
0xbc SWAP1
0xbd DUP2
0xbe MSTORE
0xbf PUSH1 0x20
0xc1 ADD
0xc2 PUSH1 0x40
0xc4 MLOAD
0xc5 DUP1
0xc6 SWAP2
0xc7 SUB
0xc8 SWAP1
0xc9 RETURN
---
0xb8: JUMPDEST 
0xb9: V51 = 0x40
0xbb: V52 = M[0x40]
0xbe: M[V52] = V176
0xbf: V53 = 0x20
0xc1: V54 = ADD 0x20 V52
0xc2: V55 = 0x40
0xc4: V56 = M[0x40]
0xc7: V57 = SUB V54 V56
0xc9: RETURN V56 V57
---
Entry stack: [V10, 0xb8, V176]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xb8]

================================

Block 0xca
[0xca:0xd1]
---
Predecessors: [0x54]
Successors: [0x217]
---
0xca JUMPDEST
0xcb PUSH2 0x80
0xce PUSH2 0x217
0xd1 JUMP
---
0xca: JUMPDEST 
0xcb: V58 = 0x80
0xce: V59 = 0x217
0xd1: JUMP 0x217
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x80]
Exit stack: [V10, 0x80]

================================

Block 0xd2
[0xd2:0xd3]
---
Predecessors: []
Successors: []
---
0xd2 JUMPDEST
0xd3 STOP
---
0xd2: JUMPDEST 
0xd3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd4
[0xd4:0xda]
---
Predecessors: [0x5f]
Successors: [0xdb, 0xdf]
---
0xd4 JUMPDEST
0xd5 CALLVALUE
0xd6 ISZERO
0xd7 PUSH2 0xdf
0xda JUMPI
---
0xd4: JUMPDEST 
0xd5: V60 = CALLVALUE
0xd6: V61 = ISZERO V60
0xd7: V62 = 0xdf
0xda: JUMPI 0xdf V61
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdb
[0xdb:0xde]
---
Predecessors: [0xd4]
Successors: []
---
0xdb PUSH1 0x0
0xdd DUP1
0xde REVERT
---
0xdb: V63 = 0x0
0xde: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xdf
[0xdf:0xe6]
---
Predecessors: [0xd4]
Successors: [0x250]
---
0xdf JUMPDEST
0xe0 PUSH2 0xe7
0xe3 PUSH2 0x250
0xe6 JUMP
---
0xdf: JUMPDEST 
0xe0: V64 = 0xe7
0xe3: V65 = 0x250
0xe6: JUMP 0x250
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xe7]
Exit stack: [V10, 0xe7]

================================

Block 0xe7
[0xe7:0x102]
---
Predecessors: [0x250]
Successors: []
---
0xe7 JUMPDEST
0xe8 PUSH1 0x40
0xea MLOAD
0xeb PUSH1 0x1
0xed PUSH1 0xa0
0xef PUSH1 0x2
0xf1 EXP
0xf2 SUB
0xf3 SWAP1
0xf4 SWAP2
0xf5 AND
0xf6 DUP2
0xf7 MSTORE
0xf8 PUSH1 0x20
0xfa ADD
0xfb PUSH1 0x40
0xfd MLOAD
0xfe DUP1
0xff SWAP2
0x100 SUB
0x101 SWAP1
0x102 RETURN
---
0xe7: JUMPDEST 
0xe8: V66 = 0x40
0xea: V67 = M[0x40]
0xeb: V68 = 0x1
0xed: V69 = 0xa0
0xef: V70 = 0x2
0xf1: V71 = EXP 0x2 0xa0
0xf2: V72 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf5: V73 = AND V215 0xffffffffffffffffffffffffffffffffffffffff
0xf7: M[V67] = V73
0xf8: V74 = 0x20
0xfa: V75 = ADD 0x20 V67
0xfb: V76 = 0x40
0xfd: V77 = M[0x40]
0x100: V78 = SUB V75 V77
0x102: RETURN V77 V78
---
Entry stack: [V10, 0xe7, V215]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xe7]

================================

Block 0x103
[0x103:0x10a]
---
Predecessors: [0x6a]
Successors: [0x25f]
---
0x103 JUMPDEST
0x104 PUSH2 0x80
0x107 PUSH2 0x25f
0x10a JUMP
---
0x103: JUMPDEST 
0x104: V79 = 0x80
0x107: V80 = 0x25f
0x10a: JUMP 0x25f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x80]
Exit stack: [V10, 0x80]

================================

Block 0x10b
[0x10b:0x10c]
---
Predecessors: []
Successors: []
---
0x10b JUMPDEST
0x10c STOP
---
0x10b: JUMPDEST 
0x10c: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x10d
[0x10d:0x13c]
---
Predecessors: [0x82]
Successors: [0x25f]
---
0x10d JUMPDEST
0x10e PUSH1 0x1
0x110 DUP1
0x111 SLOAD
0x112 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x127 NOT
0x128 AND
0x129 CALLER
0x12a PUSH1 0x1
0x12c PUSH1 0xa0
0x12e PUSH1 0x2
0x130 EXP
0x131 SUB
0x132 AND
0x133 OR
0x134 SWAP1
0x135 SSTORE
0x136 PUSH2 0x7e
0x139 PUSH2 0x25f
0x13c JUMP
---
0x10d: JUMPDEST 
0x10e: V81 = 0x1
0x111: V82 = S[0x1]
0x112: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x127: V84 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x128: V85 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V82
0x129: V86 = CALLER
0x12a: V87 = 0x1
0x12c: V88 = 0xa0
0x12e: V89 = 0x2
0x130: V90 = EXP 0x2 0xa0
0x131: V91 = SUB 0x10000000000000000000000000000000000000000 0x1
0x132: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x133: V93 = OR V92 V85
0x135: S[0x1] = V93
0x136: V94 = 0x7e
0x139: V95 = 0x25f
0x13c: JUMP 0x25f
---
Entry stack: [V10, 0x80]
Stack pops: 0
Stack additions: [0x7e]
Exit stack: [V10, 0x80, 0x7e]

================================

Block 0x13d
[0x13d:0x13d]
---
Predecessors: []
Successors: [0x13e]
---
0x13d JUMPDEST
---
0x13d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x13e
[0x13e:0x13f]
---
Predecessors: [0x13d]
Successors: []
Has unresolved jump.
---
0x13e JUMPDEST
0x13f JUMP
---
0x13e: JUMPDEST 
0x13f: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x140
[0x140:0x157]
---
Predecessors: [0x8c]
Successors: [0x158, 0x1ff]
---
0x140 JUMPDEST
0x141 PUSH1 0x0
0x143 SLOAD
0x144 CALLER
0x145 PUSH1 0x1
0x147 PUSH1 0xa0
0x149 PUSH1 0x2
0x14b EXP
0x14c SUB
0x14d SWAP1
0x14e DUP2
0x14f AND
0x150 SWAP2
0x151 AND
0x152 EQ
0x153 ISZERO
0x154 PUSH2 0x1ff
0x157 JUMPI
---
0x140: JUMPDEST 
0x141: V96 = 0x0
0x143: V97 = S[0x0]
0x144: V98 = CALLER
0x145: V99 = 0x1
0x147: V100 = 0xa0
0x149: V101 = 0x2
0x14b: V102 = EXP 0x2 0xa0
0x14c: V103 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14f: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V98
0x151: V105 = AND V97 0xffffffffffffffffffffffffffffffffffffffff
0x152: V106 = EQ V105 V104
0x153: V107 = ISZERO V106
0x154: V108 = 0x1ff
0x157: JUMPI 0x1ff V107
---
Entry stack: [V10, 0x80, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x80, V35]

================================

Block 0x158
[0x158:0x177]
---
Predecessors: [0x140]
Successors: [0x178, 0x195]
---
0x158 PUSH1 0x1
0x15a PUSH1 0xa0
0x15c PUSH1 0x2
0x15e EXP
0x15f SUB
0x160 CALLER
0x161 AND
0x162 PUSH1 0x0
0x164 SWAP1
0x165 DUP2
0x166 MSTORE
0x167 PUSH1 0x2
0x169 PUSH1 0x20
0x16b MSTORE
0x16c PUSH1 0x40
0x16e DUP2
0x16f SHA3
0x170 SLOAD
0x171 GT
0x172 DUP1
0x173 ISZERO
0x174 PUSH2 0x195
0x177 JUMPI
---
0x158: V109 = 0x1
0x15a: V110 = 0xa0
0x15c: V111 = 0x2
0x15e: V112 = EXP 0x2 0xa0
0x15f: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x160: V114 = CALLER
0x161: V115 = AND V114 0xffffffffffffffffffffffffffffffffffffffff
0x162: V116 = 0x0
0x166: M[0x0] = V115
0x167: V117 = 0x2
0x169: V118 = 0x20
0x16b: M[0x20] = 0x2
0x16c: V119 = 0x40
0x16f: V120 = SHA3 0x0 0x40
0x170: V121 = S[V120]
0x171: V122 = GT V121 0x0
0x173: V123 = ISZERO V122
0x174: V124 = 0x195
0x177: JUMPI 0x195 V123
---
Entry stack: [V10, 0x80, V35]
Stack pops: 0
Stack additions: [V122]
Exit stack: [V10, 0x80, V35, V122]

================================

Block 0x178
[0x178:0x194]
---
Predecessors: [0x158]
Successors: [0x195]
---
0x178 POP
0x179 PUSH1 0x1
0x17b PUSH1 0xa0
0x17d PUSH1 0x2
0x17f EXP
0x180 SUB
0x181 CALLER
0x182 AND
0x183 PUSH1 0x0
0x185 SWAP1
0x186 DUP2
0x187 MSTORE
0x188 PUSH1 0x2
0x18a PUSH1 0x20
0x18c MSTORE
0x18d PUSH1 0x40
0x18f SWAP1
0x190 SHA3
0x191 SLOAD
0x192 DUP2
0x193 GT
0x194 ISZERO
---
0x179: V125 = 0x1
0x17b: V126 = 0xa0
0x17d: V127 = 0x2
0x17f: V128 = EXP 0x2 0xa0
0x180: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x181: V130 = CALLER
0x182: V131 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x183: V132 = 0x0
0x187: M[0x0] = V131
0x188: V133 = 0x2
0x18a: V134 = 0x20
0x18c: M[0x20] = 0x2
0x18d: V135 = 0x40
0x190: V136 = SHA3 0x0 0x40
0x191: V137 = S[V136]
0x193: V138 = GT V35 V137
0x194: V139 = ISZERO V138
---
Entry stack: [V10, 0x80, V35, V122]
Stack pops: 2
Stack additions: [S1, V139]
Exit stack: [V10, 0x80, V35, V139]

================================

Block 0x195
[0x195:0x19a]
---
Predecessors: [0x158, 0x178]
Successors: [0x19b, 0x1ff]
---
0x195 JUMPDEST
0x196 ISZERO
0x197 PUSH2 0x1ff
0x19a JUMPI
---
0x195: JUMPDEST 
0x196: V140 = ISZERO S0
0x197: V141 = 0x1ff
0x19a: JUMPI 0x1ff V140
---
Entry stack: [V10, 0x80, V35, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x80, V35]

================================

Block 0x19b
[0x19b:0x1c6]
---
Predecessors: [0x195]
Successors: [0x1c7, 0x1cb]
---
0x19b PUSH1 0x1
0x19d PUSH1 0xa0
0x19f PUSH1 0x2
0x1a1 EXP
0x1a2 SUB
0x1a3 CALLER
0x1a4 AND
0x1a5 DUP2
0x1a6 ISZERO
0x1a7 PUSH2 0x8fc
0x1aa MUL
0x1ab DUP3
0x1ac PUSH1 0x40
0x1ae MLOAD
0x1af PUSH1 0x0
0x1b1 PUSH1 0x40
0x1b3 MLOAD
0x1b4 DUP1
0x1b5 DUP4
0x1b6 SUB
0x1b7 DUP2
0x1b8 DUP6
0x1b9 DUP9
0x1ba DUP9
0x1bb CALL
0x1bc SWAP4
0x1bd POP
0x1be POP
0x1bf POP
0x1c0 POP
0x1c1 ISZERO
0x1c2 ISZERO
0x1c3 PUSH2 0x1cb
0x1c6 JUMPI
---
0x19b: V142 = 0x1
0x19d: V143 = 0xa0
0x19f: V144 = 0x2
0x1a1: V145 = EXP 0x2 0xa0
0x1a2: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a3: V147 = CALLER
0x1a4: V148 = AND V147 0xffffffffffffffffffffffffffffffffffffffff
0x1a6: V149 = ISZERO V35
0x1a7: V150 = 0x8fc
0x1aa: V151 = MUL 0x8fc V149
0x1ac: V152 = 0x40
0x1ae: V153 = M[0x40]
0x1af: V154 = 0x0
0x1b1: V155 = 0x40
0x1b3: V156 = M[0x40]
0x1b6: V157 = SUB V153 V156
0x1bb: V158 = CALL V151 V148 V35 V156 V157 V156 0x0
0x1c1: V159 = ISZERO V158
0x1c2: V160 = ISZERO V159
0x1c3: V161 = 0x1cb
0x1c6: JUMPI 0x1cb V160
---
Entry stack: [V10, 0x80, V35]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x80, V35]

================================

Block 0x1c7
[0x1c7:0x1ca]
---
Predecessors: [0x19b]
Successors: []
---
0x1c7 PUSH1 0x0
0x1c9 DUP1
0x1ca REVERT
---
0x1c7: V162 = 0x0
0x1ca: REVERT 0x0 0x0
---
Entry stack: [V10, 0x80, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x80, V35]

================================

Block 0x1cb
[0x1cb:0x1fe]
---
Predecessors: [0x19b]
Successors: [0x1ff]
---
0x1cb JUMPDEST
0x1cc PUSH32 0x5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d
0x1ed DUP2
0x1ee PUSH1 0x40
0x1f0 MLOAD
0x1f1 SWAP1
0x1f2 DUP2
0x1f3 MSTORE
0x1f4 PUSH1 0x20
0x1f6 ADD
0x1f7 PUSH1 0x40
0x1f9 MLOAD
0x1fa DUP1
0x1fb SWAP2
0x1fc SUB
0x1fd SWAP1
0x1fe LOG1
---
0x1cb: JUMPDEST 
0x1cc: V163 = 0x5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d
0x1ee: V164 = 0x40
0x1f0: V165 = M[0x40]
0x1f3: M[V165] = V35
0x1f4: V166 = 0x20
0x1f6: V167 = ADD 0x20 V165
0x1f7: V168 = 0x40
0x1f9: V169 = M[0x40]
0x1fc: V170 = SUB V167 V169
0x1fe: LOG V169 V170 0x5b6b431d4476a211bb7d41c20d1aab9ae2321deee0d20be3d9fc9b1093fa6e3d
---
Entry stack: [V10, 0x80, V35]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x80, V35]

================================

Block 0x1ff
[0x1ff:0x1ff]
---
Predecessors: [0x140, 0x195, 0x1cb]
Successors: [0x200]
---
0x1ff JUMPDEST
---
0x1ff: JUMPDEST 
---
Entry stack: [V10, 0x80, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x80, V35]

================================

Block 0x200
[0x200:0x200]
---
Predecessors: [0x1ff]
Successors: [0x201]
---
0x200 JUMPDEST
---
0x200: JUMPDEST 
---
Entry stack: [V10, 0x80, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x80, V35]

================================

Block 0x201
[0x201:0x201]
---
Predecessors: [0x200]
Successors: [0x202]
---
0x201 JUMPDEST
---
0x201: JUMPDEST 
---
Entry stack: [V10, 0x80, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x80, V35]

================================

Block 0x202
[0x202:0x204]
---
Predecessors: [0x201]
Successors: [0x80]
---
0x202 JUMPDEST
0x203 POP
0x204 JUMP
---
0x202: JUMPDEST 
0x204: JUMP 0x80
---
Entry stack: [V10, 0x80, V35]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x205
[0x205:0x216]
---
Predecessors: [0xa4]
Successors: [0xb8]
---
0x205 JUMPDEST
0x206 PUSH1 0x2
0x208 PUSH1 0x20
0x20a MSTORE
0x20b PUSH1 0x0
0x20d SWAP1
0x20e DUP2
0x20f MSTORE
0x210 PUSH1 0x40
0x212 SWAP1
0x213 SHA3
0x214 SLOAD
0x215 DUP2
0x216 JUMP
---
0x205: JUMPDEST 
0x206: V171 = 0x2
0x208: V172 = 0x20
0x20a: M[0x20] = 0x2
0x20b: V173 = 0x0
0x20f: M[0x0] = V49
0x210: V174 = 0x40
0x213: V175 = SHA3 0x0 0x40
0x214: V176 = S[V175]
0x216: JUMP 0xb8
---
Entry stack: [V10, 0xb8, V49]
Stack pops: 2
Stack additions: [S1, V176]
Exit stack: [V10, 0xb8, V176]

================================

Block 0x217
[0x217:0x22e]
---
Predecessors: [0xca]
Successors: [0x7e, 0x22f]
---
0x217 JUMPDEST
0x218 PUSH1 0x0
0x21a SLOAD
0x21b CALLER
0x21c PUSH1 0x1
0x21e PUSH1 0xa0
0x220 PUSH1 0x2
0x222 EXP
0x223 SUB
0x224 SWAP1
0x225 DUP2
0x226 AND
0x227 SWAP2
0x228 AND
0x229 EQ
0x22a ISZERO
0x22b PUSH2 0x7e
0x22e JUMPI
---
0x217: JUMPDEST 
0x218: V177 = 0x0
0x21a: V178 = S[0x0]
0x21b: V179 = CALLER
0x21c: V180 = 0x1
0x21e: V181 = 0xa0
0x220: V182 = 0x2
0x222: V183 = EXP 0x2 0xa0
0x223: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x226: V185 = AND 0xffffffffffffffffffffffffffffffffffffffff V179
0x228: V186 = AND V178 0xffffffffffffffffffffffffffffffffffffffff
0x229: V187 = EQ V186 V185
0x22a: V188 = ISZERO V187
0x22b: V189 = 0x7e
0x22e: JUMPI 0x7e V188
---
Entry stack: [V10, 0x80]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x80]

================================

Block 0x22f
[0x22f:0x23f]
---
Predecessors: [0x217]
Successors: [0x7e, 0x240]
---
0x22f PUSH1 0x1
0x231 PUSH1 0xa0
0x233 PUSH1 0x2
0x235 EXP
0x236 SUB
0x237 ADDRESS
0x238 AND
0x239 BALANCE
0x23a ISZERO
0x23b ISZERO
0x23c PUSH2 0x7e
0x23f JUMPI
---
0x22f: V190 = 0x1
0x231: V191 = 0xa0
0x233: V192 = 0x2
0x235: V193 = EXP 0x2 0xa0
0x236: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x237: V195 = ADDRESS
0x238: V196 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0x239: V197 = BALANCE V196
0x23a: V198 = ISZERO V197
0x23b: V199 = ISZERO V198
0x23c: V200 = 0x7e
0x23f: JUMPI 0x7e V199
---
Entry stack: [V10, 0x80]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x80]

================================

Block 0x240
[0x240:0x24a]
---
Predecessors: [0x22f]
Successors: []
---
0x240 CALLER
0x241 PUSH1 0x1
0x243 PUSH1 0xa0
0x245 PUSH1 0x2
0x247 EXP
0x248 SUB
0x249 AND
0x24a SELFDESTRUCT
---
0x240: V201 = CALLER
0x241: V202 = 0x1
0x243: V203 = 0xa0
0x245: V204 = 0x2
0x247: V205 = EXP 0x2 0xa0
0x248: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x249: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x24a: SELFDESTRUCT V207
---
Entry stack: [V10, 0x80]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x80]

================================

Block 0x24b
[0x24b:0x24b]
---
Predecessors: []
Successors: [0x24c]
---
0x24b JUMPDEST
---
0x24b: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x24c
[0x24c:0x24c]
---
Predecessors: [0x24b]
Successors: [0x24d]
---
0x24c JUMPDEST
---
0x24c: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x24d
[0x24d:0x24d]
---
Predecessors: [0x24c]
Successors: [0x24e]
---
0x24d JUMPDEST
---
0x24d: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x24e
[0x24e:0x24f]
---
Predecessors: [0x24d]
Successors: []
Has unresolved jump.
---
0x24e JUMPDEST
0x24f JUMP
---
0x24e: JUMPDEST 
0x24f: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x250
[0x250:0x25e]
---
Predecessors: [0xdf]
Successors: [0xe7]
---
0x250 JUMPDEST
0x251 PUSH1 0x1
0x253 SLOAD
0x254 PUSH1 0x1
0x256 PUSH1 0xa0
0x258 PUSH1 0x2
0x25a EXP
0x25b SUB
0x25c AND
0x25d DUP2
0x25e JUMP
---
0x250: JUMPDEST 
0x251: V208 = 0x1
0x253: V209 = S[0x1]
0x254: V210 = 0x1
0x256: V211 = 0xa0
0x258: V212 = 0x2
0x25a: V213 = EXP 0x2 0xa0
0x25b: V214 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25c: V215 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x25e: JUMP 0xe7
---
Entry stack: [V10, 0xe7]
Stack pops: 1
Stack additions: [S0, V215]
Exit stack: [V10, 0xe7, V215]

================================

Block 0x25f
[0x25f:0x26e]
---
Predecessors: [0x103, 0x10d]
Successors: [0x7e, 0x26f]
---
0x25f JUMPDEST
0x260 PUSH8 0xde0b6b3a7640000
0x269 CALLVALUE
0x26a LT
0x26b PUSH2 0x7e
0x26e JUMPI
---
0x25f: JUMPDEST 
0x260: V216 = 0xde0b6b3a7640000
0x269: V217 = CALLVALUE
0x26a: V218 = LT V217 0xde0b6b3a7640000
0x26b: V219 = 0x7e
0x26e: JUMPI 0x7e V218
---
Entry stack: [V10, S1, {0x7e, 0x80}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x7e, 0x80}]

================================

Block 0x26f
[0x26f:0x28f]
---
Predecessors: [0x25f]
Successors: [0x7e, 0x290]
---
0x26f PUSH1 0x1
0x271 PUSH1 0xa0
0x273 PUSH1 0x2
0x275 EXP
0x276 SUB
0x277 CALLER
0x278 AND
0x279 PUSH1 0x0
0x27b SWAP1
0x27c DUP2
0x27d MSTORE
0x27e PUSH1 0x2
0x280 PUSH1 0x20
0x282 MSTORE
0x283 PUSH1 0x40
0x285 SWAP1
0x286 SHA3
0x287 SLOAD
0x288 CALLVALUE
0x289 DUP2
0x28a ADD
0x28b LT
0x28c PUSH2 0x7e
0x28f JUMPI
---
0x26f: V220 = 0x1
0x271: V221 = 0xa0
0x273: V222 = 0x2
0x275: V223 = EXP 0x2 0xa0
0x276: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x277: V225 = CALLER
0x278: V226 = AND V225 0xffffffffffffffffffffffffffffffffffffffff
0x279: V227 = 0x0
0x27d: M[0x0] = V226
0x27e: V228 = 0x2
0x280: V229 = 0x20
0x282: M[0x20] = 0x2
0x283: V230 = 0x40
0x286: V231 = SHA3 0x0 0x40
0x287: V232 = S[V231]
0x288: V233 = CALLVALUE
0x28a: V234 = ADD V232 V233
0x28b: V235 = LT V234 V232
0x28c: V236 = 0x7e
0x28f: JUMPI 0x7e V235
---
Entry stack: [V10, S1, {0x7e, 0x80}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x7e, 0x80}]

================================

Block 0x290
[0x290:0x2e3]
---
Predecessors: [0x26f]
Successors: [0x2e4]
---
0x290 PUSH1 0x1
0x292 PUSH1 0xa0
0x294 PUSH1 0x2
0x296 EXP
0x297 SUB
0x298 CALLER
0x299 AND
0x29a PUSH1 0x0
0x29c SWAP1
0x29d DUP2
0x29e MSTORE
0x29f PUSH1 0x2
0x2a1 PUSH1 0x20
0x2a3 MSTORE
0x2a4 PUSH1 0x40
0x2a6 SWAP1
0x2a7 DUP2
0x2a8 SWAP1
0x2a9 SHA3
0x2aa DUP1
0x2ab SLOAD
0x2ac CALLVALUE
0x2ad SWAP1
0x2ae DUP2
0x2af ADD
0x2b0 SWAP1
0x2b1 SWAP2
0x2b2 SSTORE
0x2b3 PUSH32 0x4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e38426
0x2d4 SWAP2
0x2d5 MLOAD
0x2d6 SWAP1
0x2d7 DUP2
0x2d8 MSTORE
0x2d9 PUSH1 0x20
0x2db ADD
0x2dc PUSH1 0x40
0x2de MLOAD
0x2df DUP1
0x2e0 SWAP2
0x2e1 SUB
0x2e2 SWAP1
0x2e3 LOG1
---
0x290: V237 = 0x1
0x292: V238 = 0xa0
0x294: V239 = 0x2
0x296: V240 = EXP 0x2 0xa0
0x297: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x298: V242 = CALLER
0x299: V243 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x29a: V244 = 0x0
0x29e: M[0x0] = V243
0x29f: V245 = 0x2
0x2a1: V246 = 0x20
0x2a3: M[0x20] = 0x2
0x2a4: V247 = 0x40
0x2a9: V248 = SHA3 0x0 0x40
0x2ab: V249 = S[V248]
0x2ac: V250 = CALLVALUE
0x2af: V251 = ADD V250 V249
0x2b2: S[V248] = V251
0x2b3: V252 = 0x4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e38426
0x2d5: V253 = M[0x40]
0x2d8: M[V253] = V250
0x2d9: V254 = 0x20
0x2db: V255 = ADD 0x20 V253
0x2dc: V256 = 0x40
0x2de: V257 = M[0x40]
0x2e1: V258 = SUB V255 V257
0x2e3: LOG V257 V258 0x4d6ce1e535dbade1c23defba91e23b8f791ce5edc0cc320257a2b364e4e38426
---
Entry stack: [V10, S1, {0x7e, 0x80}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x7e, 0x80}]

================================

Block 0x2e4
[0x2e4:0x2e4]
---
Predecessors: [0x290]
Successors: [0x2e5]
---
0x2e4 JUMPDEST
---
0x2e4: JUMPDEST 
---
Entry stack: [V10, S1, {0x7e, 0x80}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x7e, 0x80}]

================================

Block 0x2e5
[0x2e5:0x2e5]
---
Predecessors: [0x2e4]
Successors: [0x2e6]
---
0x2e5 JUMPDEST
---
0x2e5: JUMPDEST 
---
Entry stack: [V10, S1, {0x7e, 0x80}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, S1, {0x7e, 0x80}]

================================

Block 0x2e6
[0x2e6:0x2e7]
---
Predecessors: [0x2e5]
Successors: [0x7e, 0x80]
---
0x2e6 JUMPDEST
0x2e7 JUMP
---
0x2e6: JUMPDEST 
0x2e7: JUMP {0x7e, 0x80}
---
Entry stack: [V10, S1, {0x7e, 0x80}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x2e8
[0x2e8:0x316]
---
Predecessors: []
Successors: []
---
0x2e8 STOP
0x2e9 LOG1
0x2ea PUSH6 0x627a7a723058
0x2f1 SHA3
0x2f2 DUP7
0x2f3 MISSING 0xc6
0x2f4 BLOCKHASH
0x2f5 MISSING 0x21
0x2f6 MISSING 0x1e
0x2f7 MISSING 0x26
0x2f8 MISSING 0xf7
0x2f9 BLOCKHASH
0x2fa PC
0x2fb MISSING 0x2e
0x2fc ADDMOD
0x2fd CALLER
0x2fe MISSING 0xcd
0x2ff MISSING 0x4c
0x300 MISSING 0xce
0x301 SHL
0x302 PUSH20 0x656354e6ad7075c1065c09a83e35c0029
---
0x2e8: STOP 
0x2e9: LOG S0 S1 S2
0x2ea: V259 = 0x627a7a723058
0x2f1: V260 = SHA3 0x627a7a723058 S3
0x2f3: MISSING 0xc6
0x2f4: V261 = BLOCKHASH S0
0x2f5: MISSING 0x21
0x2f6: MISSING 0x1e
0x2f7: MISSING 0x26
0x2f8: MISSING 0xf7
0x2f9: V262 = BLOCKHASH S0
0x2fa: V263 = PC
0x2fb: MISSING 0x2e
0x2fc: V264 = ADDMOD S0 S1 S2
0x2fd: V265 = CALLER
0x2fe: MISSING 0xcd
0x2ff: MISSING 0x4c
0x300: MISSING 0xce
0x301: V266 = SHL S0 S1
0x302: V267 = 0x656354e6ad7075c1065c09a83e35c0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S9, V260, S4, S5, S6, S7, S8, S9, V261, V263, V262, V265, V264, 0x656354e6ad7075c1065c09a83e35c0029, V266]
Exit stack: []

================================

Function 0:
Public function signature: 0x2d2c44f2
Entry block: 0x82
Exit block: 0x80
Body: 0x7e, 0x80, 0x82, 0x10d

Function 1:
Public function signature: 0x2e1a7d4d
Entry block: 0x8c
Exit block: 0x80
Body: 0x80, 0x8c, 0x140, 0x158, 0x178, 0x195, 0x19b, 0x1c7, 0x1cb, 0x1ff, 0x200, 0x201, 0x202

Function 2:
Public function signature: 0x3ee2d7c2
Entry block: 0x99
Exit block: 0xb8
Body: 0x99, 0xa0, 0xa4, 0xb8, 0x205

Function 3:
Public function signature: 0x41c0e1b5
Entry block: 0xca
Exit block: 0x80
Body: 0x7e, 0x80, 0xca, 0x217, 0x22f, 0x240

Function 4:
Public function signature: 0xb4a99a4e
Entry block: 0xd4
Exit block: 0xe7
Body: 0xd4, 0xdb, 0xdf, 0xe7, 0x250

Function 5:
Public function signature: 0xd0e30db0
Entry block: 0x103
Exit block: 0x80
Body: 0x80, 0x103

Function 6:
Public fallback function
Entry block: 0x75
Exit block: 0x79
Body: 0x75, 0x79

Function 7:
Private function
Entry block: 0x25f
Exit block: 0x2e6
Body: 0x25f, 0x26f, 0x290, 0x2e4, 0x2e5, 0x2e6

