Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6b
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6b
0xc: JUMPI 0x6b V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x6d]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH3 0x88fca8
0x39 DUP2
0x3a EQ
0x3b PUSH2 0x6d
0x3e JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x88fca8
0x3a: V13 = EQ V11 0x88fca8
0x3b: V14 = 0x6d
0x3e: JUMPI 0x6d V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xd]
Successors: [0x4a, 0xf5]
---
0x3f DUP1
0x40 PUSH4 0x3853682c
0x45 EQ
0x46 PUSH2 0xf5
0x49 JUMPI
---
0x40: V15 = 0x3853682c
0x45: V16 = EQ 0x3853682c V11
0x46: V17 = 0xf5
0x49: JUMPI 0xf5 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x108]
---
0x4a DUP1
0x4b PUSH4 0x3e3ee859
0x50 EQ
0x51 PUSH2 0x108
0x54 JUMPI
---
0x4b: V18 = 0x3e3ee859
0x50: V19 = EQ 0x3e3ee859 V11
0x51: V20 = 0x108
0x54: JUMPI 0x108 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x150]
---
0x55 DUP1
0x56 PUSH4 0x3fad9ae0
0x5b EQ
0x5c PUSH2 0x150
0x5f JUMPI
---
0x56: V21 = 0x3fad9ae0
0x5b: V22 = EQ 0x3fad9ae0 V11
0x5c: V23 = 0x150
0x5f: JUMPI 0x150 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x1da]
---
0x60 DUP1
0x61 PUSH4 0xf50ab247
0x66 EQ
0x67 PUSH2 0x1da
0x6a JUMPI
---
0x61: V24 = 0xf50ab247
0x66: V25 = EQ 0xf50ab247 V11
0x67: V26 = 0x1da
0x6a: JUMPI 0x1da V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6b
[0x6b:0x6c]
---
Predecessors: [0x0, 0x60, 0x288, 0x351, 0x44e, 0x4ca]
Successors: []
---
0x6b JUMPDEST
0x6c STOP
---
0x6b: JUMPDEST 
0x6c: STOP 
---
Entry stack: [V11, 0x6b, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6b, S5, S4, S3, S2, S1, S0]

================================

Block 0x6d
[0x6d:0xf4]
---
Predecessors: [0xd]
Successors: [0x1e2]
---
0x6d JUMPDEST
0x6e PUSH2 0x6b
0x71 PUSH1 0x4
0x73 PUSH1 0x24
0x75 DUP2
0x76 CALLDATALOAD
0x77 DUP2
0x78 DUP2
0x79 ADD
0x7a SWAP1
0x7b DUP4
0x7c ADD
0x7d CALLDATALOAD
0x7e DUP1
0x7f PUSH1 0x20
0x81 PUSH1 0x1f
0x83 DUP3
0x84 ADD
0x85 DUP2
0x86 SWAP1
0x87 DIV
0x88 DUP2
0x89 MUL
0x8a ADD
0x8b PUSH1 0x40
0x8d MLOAD
0x8e SWAP1
0x8f DUP2
0x90 ADD
0x91 PUSH1 0x40
0x93 MSTORE
0x94 DUP2
0x95 DUP2
0x96 MSTORE
0x97 SWAP3
0x98 SWAP2
0x99 SWAP1
0x9a PUSH1 0x20
0x9c DUP5
0x9d ADD
0x9e DUP4
0x9f DUP4
0xa0 DUP1
0xa1 DUP3
0xa2 DUP5
0xa3 CALLDATACOPY
0xa4 DUP3
0xa5 ADD
0xa6 SWAP2
0xa7 POP
0xa8 POP
0xa9 POP
0xaa POP
0xab POP
0xac POP
0xad SWAP2
0xae SWAP1
0xaf DUP1
0xb0 CALLDATALOAD
0xb1 SWAP1
0xb2 PUSH1 0x20
0xb4 ADD
0xb5 SWAP1
0xb6 DUP3
0xb7 ADD
0xb8 DUP1
0xb9 CALLDATALOAD
0xba SWAP1
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP1
0xbf DUP1
0xc0 DUP1
0xc1 PUSH1 0x1f
0xc3 ADD
0xc4 PUSH1 0x20
0xc6 DUP1
0xc7 SWAP2
0xc8 DIV
0xc9 MUL
0xca PUSH1 0x20
0xcc ADD
0xcd PUSH1 0x40
0xcf MLOAD
0xd0 SWAP1
0xd1 DUP2
0xd2 ADD
0xd3 PUSH1 0x40
0xd5 MSTORE
0xd6 DUP2
0xd7 DUP2
0xd8 MSTORE
0xd9 SWAP3
0xda SWAP2
0xdb SWAP1
0xdc PUSH1 0x20
0xde DUP5
0xdf ADD
0xe0 DUP4
0xe1 DUP4
0xe2 DUP1
0xe3 DUP3
0xe4 DUP5
0xe5 CALLDATACOPY
0xe6 POP
0xe7 SWAP5
0xe8 SWAP7
0xe9 POP
0xea PUSH2 0x1e2
0xed SWAP6
0xee POP
0xef POP
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 JUMP
---
0x6d: JUMPDEST 
0x6e: V27 = 0x6b
0x71: V28 = 0x4
0x73: V29 = 0x24
0x76: V30 = CALLDATALOAD 0x4
0x79: V31 = ADD V30 0x24
0x7c: V32 = ADD 0x4 V30
0x7d: V33 = CALLDATALOAD V32
0x7f: V34 = 0x20
0x81: V35 = 0x1f
0x84: V36 = ADD V33 0x1f
0x87: V37 = DIV V36 0x20
0x89: V38 = MUL 0x20 V37
0x8a: V39 = ADD V38 0x20
0x8b: V40 = 0x40
0x8d: V41 = M[0x40]
0x90: V42 = ADD V41 V39
0x91: V43 = 0x40
0x93: M[0x40] = V42
0x96: M[V41] = V33
0x9a: V44 = 0x20
0x9d: V45 = ADD V41 0x20
0xa3: CALLDATACOPY V45 V31 V33
0xa5: V46 = ADD V45 V33
0xb0: V47 = CALLDATALOAD 0x24
0xb2: V48 = 0x20
0xb4: V49 = ADD 0x20 0x24
0xb7: V50 = ADD 0x4 V47
0xb9: V51 = CALLDATALOAD V50
0xbb: V52 = 0x20
0xbd: V53 = ADD 0x20 V50
0xc1: V54 = 0x1f
0xc3: V55 = ADD 0x1f V51
0xc4: V56 = 0x20
0xc8: V57 = DIV V55 0x20
0xc9: V58 = MUL V57 0x20
0xca: V59 = 0x20
0xcc: V60 = ADD 0x20 V58
0xcd: V61 = 0x40
0xcf: V62 = M[0x40]
0xd2: V63 = ADD V62 V60
0xd3: V64 = 0x40
0xd5: M[0x40] = V63
0xd8: M[V62] = V51
0xdc: V65 = 0x20
0xdf: V66 = ADD V62 0x20
0xe5: CALLDATACOPY V66 V53 V51
0xea: V67 = 0x1e2
0xf4: JUMP 0x1e2
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6b, V41, V62]
Exit stack: [V11, 0x6b, V41, V62]

================================

Block 0xf5
[0xf5:0x107]
---
Predecessors: [0x3f]
Successors: [0x28c]
---
0xf5 JUMPDEST
0xf6 PUSH2 0x6b
0xf9 PUSH1 0x4
0xfb DUP1
0xfc CALLDATALOAD
0xfd PUSH1 0x24
0xff DUP2
0x100 ADD
0x101 SWAP2
0x102 ADD
0x103 CALLDATALOAD
0x104 PUSH2 0x28c
0x107 JUMP
---
0xf5: JUMPDEST 
0xf6: V68 = 0x6b
0xf9: V69 = 0x4
0xfc: V70 = CALLDATALOAD 0x4
0xfd: V71 = 0x24
0x100: V72 = ADD V70 0x24
0x102: V73 = ADD 0x4 V70
0x103: V74 = CALLDATALOAD V73
0x104: V75 = 0x28c
0x107: JUMP 0x28c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6b, V72, V74]
Exit stack: [V11, 0x6b, V72, V74]

================================

Block 0x108
[0x108:0x14f]
---
Predecessors: [0x4a]
Successors: [0x323]
---
0x108 JUMPDEST
0x109 PUSH2 0x6b
0x10c PUSH1 0x4
0x10e PUSH1 0x24
0x110 DUP2
0x111 CALLDATALOAD
0x112 DUP2
0x113 DUP2
0x114 ADD
0x115 SWAP1
0x116 DUP4
0x117 ADD
0x118 CALLDATALOAD
0x119 DUP1
0x11a PUSH1 0x20
0x11c PUSH1 0x1f
0x11e DUP3
0x11f ADD
0x120 DUP2
0x121 SWAP1
0x122 DIV
0x123 DUP2
0x124 MUL
0x125 ADD
0x126 PUSH1 0x40
0x128 MLOAD
0x129 SWAP1
0x12a DUP2
0x12b ADD
0x12c PUSH1 0x40
0x12e MSTORE
0x12f DUP2
0x130 DUP2
0x131 MSTORE
0x132 SWAP3
0x133 SWAP2
0x134 SWAP1
0x135 PUSH1 0x20
0x137 DUP5
0x138 ADD
0x139 DUP4
0x13a DUP4
0x13b DUP1
0x13c DUP3
0x13d DUP5
0x13e CALLDATACOPY
0x13f POP
0x140 SWAP5
0x141 SWAP7
0x142 POP
0x143 POP
0x144 SWAP4
0x145 CALLDATALOAD
0x146 SWAP4
0x147 POP
0x148 PUSH2 0x323
0x14b SWAP3
0x14c POP
0x14d POP
0x14e POP
0x14f JUMP
---
0x108: JUMPDEST 
0x109: V76 = 0x6b
0x10c: V77 = 0x4
0x10e: V78 = 0x24
0x111: V79 = CALLDATALOAD 0x4
0x114: V80 = ADD V79 0x24
0x117: V81 = ADD 0x4 V79
0x118: V82 = CALLDATALOAD V81
0x11a: V83 = 0x20
0x11c: V84 = 0x1f
0x11f: V85 = ADD V82 0x1f
0x122: V86 = DIV V85 0x20
0x124: V87 = MUL 0x20 V86
0x125: V88 = ADD V87 0x20
0x126: V89 = 0x40
0x128: V90 = M[0x40]
0x12b: V91 = ADD V90 V88
0x12c: V92 = 0x40
0x12e: M[0x40] = V91
0x131: M[V90] = V82
0x135: V93 = 0x20
0x138: V94 = ADD V90 0x20
0x13e: CALLDATACOPY V94 V80 V82
0x145: V95 = CALLDATALOAD 0x24
0x148: V96 = 0x323
0x14f: JUMP 0x323
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6b, V90, V95]
Exit stack: [V11, 0x6b, V90, V95]

================================

Block 0x150
[0x150:0x156]
---
Predecessors: [0x55]
Successors: [0x157, 0x15b]
---
0x150 JUMPDEST
0x151 CALLVALUE
0x152 ISZERO
0x153 PUSH2 0x15b
0x156 JUMPI
---
0x150: JUMPDEST 
0x151: V97 = CALLVALUE
0x152: V98 = ISZERO V97
0x153: V99 = 0x15b
0x156: JUMPI 0x15b V98
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x157
[0x157:0x15a]
---
Predecessors: [0x150]
Successors: []
---
0x157 PUSH1 0x0
0x159 DUP1
0x15a REVERT
---
0x157: V100 = 0x0
0x15a: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15b
[0x15b:0x162]
---
Predecessors: [0x150]
Successors: [0x358]
---
0x15b JUMPDEST
0x15c PUSH2 0x163
0x15f PUSH2 0x358
0x162 JUMP
---
0x15b: JUMPDEST 
0x15c: V101 = 0x163
0x15f: V102 = 0x358
0x162: JUMP 0x358
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x163]
Exit stack: [V11, 0x163]

================================

Block 0x163
[0x163:0x186]
---
Predecessors: [0x3ee]
Successors: [0x187]
---
0x163 JUMPDEST
0x164 PUSH1 0x40
0x166 MLOAD
0x167 PUSH1 0x20
0x169 DUP1
0x16a DUP3
0x16b MSTORE
0x16c DUP2
0x16d SWAP1
0x16e DUP2
0x16f ADD
0x170 DUP4
0x171 DUP2
0x172 DUP2
0x173 MLOAD
0x174 DUP2
0x175 MSTORE
0x176 PUSH1 0x20
0x178 ADD
0x179 SWAP2
0x17a POP
0x17b DUP1
0x17c MLOAD
0x17d SWAP1
0x17e PUSH1 0x20
0x180 ADD
0x181 SWAP1
0x182 DUP1
0x183 DUP4
0x184 DUP4
0x185 PUSH1 0x0
---
0x163: JUMPDEST 
0x164: V103 = 0x40
0x166: V104 = M[0x40]
0x167: V105 = 0x20
0x16b: M[V104] = 0x20
0x16f: V106 = ADD V104 0x20
0x173: V107 = M[V308]
0x175: M[V106] = V107
0x176: V108 = 0x20
0x178: V109 = ADD 0x20 V106
0x17c: V110 = M[V308]
0x17e: V111 = 0x20
0x180: V112 = ADD 0x20 V308
0x185: V113 = 0x0
---
Entry stack: [V11, 0x163, V308]
Stack pops: 1
Stack additions: [S0, V104, V104, V109, V112, V110, V110, V109, V112, 0x0]
Exit stack: [V11, 0x163, V308, V104, V104, V109, V112, V110, V110, V109, V112, 0x0]

================================

Block 0x187
[0x187:0x18f]
---
Predecessors: [0x163, 0x190]
Successors: [0x190, 0x19f]
---
0x187 JUMPDEST
0x188 DUP4
0x189 DUP2
0x18a LT
0x18b ISZERO
0x18c PUSH2 0x19f
0x18f JUMPI
---
0x187: JUMPDEST 
0x18a: V114 = LT S0 V110
0x18b: V115 = ISZERO V114
0x18c: V116 = 0x19f
0x18f: JUMPI 0x19f V115
---
Entry stack: [V11, 0x163, V308, V104, V104, V109, V112, V110, V110, V109, V112, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x163, V308, V104, V104, V109, V112, V110, V110, V109, V112, S0]

================================

Block 0x190
[0x190:0x19e]
---
Predecessors: [0x187]
Successors: [0x187]
---
0x190 DUP1
0x191 DUP3
0x192 ADD
0x193 MLOAD
0x194 DUP4
0x195 DUP3
0x196 ADD
0x197 MSTORE
0x198 PUSH1 0x20
0x19a ADD
0x19b PUSH2 0x187
0x19e JUMP
---
0x192: V117 = ADD V112 S0
0x193: V118 = M[V117]
0x196: V119 = ADD S0 V109
0x197: M[V119] = V118
0x198: V120 = 0x20
0x19a: V121 = ADD 0x20 S0
0x19b: V122 = 0x187
0x19e: JUMP 0x187
---
Entry stack: [V11, 0x163, V308, V104, V104, V109, V112, V110, V110, V109, V112, S0]
Stack pops: 3
Stack additions: [S2, S1, V121]
Exit stack: [V11, 0x163, V308, V104, V104, V109, V112, V110, V110, V109, V112, V121]

================================

Block 0x19f
[0x19f:0x1b2]
---
Predecessors: [0x187]
Successors: [0x1b3, 0x1cc]
---
0x19f JUMPDEST
0x1a0 POP
0x1a1 POP
0x1a2 POP
0x1a3 POP
0x1a4 SWAP1
0x1a5 POP
0x1a6 SWAP1
0x1a7 DUP2
0x1a8 ADD
0x1a9 SWAP1
0x1aa PUSH1 0x1f
0x1ac AND
0x1ad DUP1
0x1ae ISZERO
0x1af PUSH2 0x1cc
0x1b2 JUMPI
---
0x19f: JUMPDEST 
0x1a8: V123 = ADD V110 V109
0x1aa: V124 = 0x1f
0x1ac: V125 = AND 0x1f V110
0x1ae: V126 = ISZERO V125
0x1af: V127 = 0x1cc
0x1b2: JUMPI 0x1cc V126
---
Entry stack: [V11, 0x163, V308, V104, V104, V109, V112, V110, V110, V109, V112, S0]
Stack pops: 7
Stack additions: [V123, V125]
Exit stack: [V11, 0x163, V308, V104, V104, V123, V125]

================================

Block 0x1b3
[0x1b3:0x1cb]
---
Predecessors: [0x19f]
Successors: [0x1cc]
---
0x1b3 DUP1
0x1b4 DUP3
0x1b5 SUB
0x1b6 DUP1
0x1b7 MLOAD
0x1b8 PUSH1 0x1
0x1ba DUP4
0x1bb PUSH1 0x20
0x1bd SUB
0x1be PUSH2 0x100
0x1c1 EXP
0x1c2 SUB
0x1c3 NOT
0x1c4 AND
0x1c5 DUP2
0x1c6 MSTORE
0x1c7 PUSH1 0x20
0x1c9 ADD
0x1ca SWAP2
0x1cb POP
---
0x1b5: V128 = SUB V123 V125
0x1b7: V129 = M[V128]
0x1b8: V130 = 0x1
0x1bb: V131 = 0x20
0x1bd: V132 = SUB 0x20 V125
0x1be: V133 = 0x100
0x1c1: V134 = EXP 0x100 V132
0x1c2: V135 = SUB V134 0x1
0x1c3: V136 = NOT V135
0x1c4: V137 = AND V136 V129
0x1c6: M[V128] = V137
0x1c7: V138 = 0x20
0x1c9: V139 = ADD 0x20 V128
---
Entry stack: [V11, 0x163, V308, V104, V104, V123, V125]
Stack pops: 2
Stack additions: [V139, S0]
Exit stack: [V11, 0x163, V308, V104, V104, V139, V125]

================================

Block 0x1cc
[0x1cc:0x1d9]
---
Predecessors: [0x19f, 0x1b3]
Successors: []
---
0x1cc JUMPDEST
0x1cd POP
0x1ce SWAP3
0x1cf POP
0x1d0 POP
0x1d1 POP
0x1d2 PUSH1 0x40
0x1d4 MLOAD
0x1d5 DUP1
0x1d6 SWAP2
0x1d7 SUB
0x1d8 SWAP1
0x1d9 RETURN
---
0x1cc: JUMPDEST 
0x1d2: V140 = 0x40
0x1d4: V141 = M[0x40]
0x1d7: V142 = SUB S1 V141
0x1d9: RETURN V141 V142
---
Entry stack: [V11, 0x163, V308, V104, V104, S1, V125]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x163]

================================

Block 0x1da
[0x1da:0x1e1]
---
Predecessors: [0x60]
Successors: [0x3f6]
---
0x1da JUMPDEST
0x1db PUSH2 0x6b
0x1de PUSH2 0x3f6
0x1e1 JUMP
---
0x1da: JUMPDEST 
0x1db: V143 = 0x6b
0x1de: V144 = 0x3f6
0x1e1: JUMP 0x3f6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6b]
Exit stack: [V11, 0x6b]

================================

Block 0x1e2
[0x1e2:0x1eb]
---
Predecessors: [0x6d]
Successors: [0x1ec, 0x288]
---
0x1e2 JUMPDEST
0x1e3 PUSH1 0x2
0x1e5 SLOAD
0x1e6 ISZERO
0x1e7 ISZERO
0x1e8 PUSH2 0x288
0x1eb JUMPI
---
0x1e2: JUMPDEST 
0x1e3: V145 = 0x2
0x1e5: V146 = S[0x2]
0x1e6: V147 = ISZERO V146
0x1e7: V148 = ISZERO V147
0x1e8: V149 = 0x288
0x1eb: JUMPI 0x288 V148
---
Entry stack: [V11, 0x6b, V41, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6b, V41, V62]

================================

Block 0x1ec
[0x1ec:0x1fb]
---
Predecessors: [0x1e2]
Successors: [0x1fc]
---
0x1ec DUP1
0x1ed PUSH1 0x40
0x1ef MLOAD
0x1f0 DUP1
0x1f1 DUP3
0x1f2 DUP1
0x1f3 MLOAD
0x1f4 SWAP1
0x1f5 PUSH1 0x20
0x1f7 ADD
0x1f8 SWAP1
0x1f9 DUP1
0x1fa DUP4
0x1fb DUP4
---
0x1ed: V150 = 0x40
0x1ef: V151 = M[0x40]
0x1f3: V152 = M[V62]
0x1f5: V153 = 0x20
0x1f7: V154 = ADD 0x20 V62
---
Entry stack: [V11, 0x6b, V41, V62]
Stack pops: 1
Stack additions: [S0, S0, V151, V151, V154, V152, V152, V151, V154]
Exit stack: [V11, 0x6b, V41, V62, V62, V151, V151, V154, V152, V152, V151, V154]

================================

Block 0x1fc
[0x1fc:0x204]
---
Predecessors: [0x1ec, 0x205]
Successors: [0x205, 0x21b]
---
0x1fc JUMPDEST
0x1fd PUSH1 0x20
0x1ff DUP4
0x200 LT
0x201 PUSH2 0x21b
0x204 JUMPI
---
0x1fc: JUMPDEST 
0x1fd: V155 = 0x20
0x200: V156 = LT S2 0x20
0x201: V157 = 0x21b
0x204: JUMPI 0x21b V156
---
Entry stack: [V11, 0x6b, V41, V62, V62, V151, V151, V154, V152, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6b, V41, V62, V62, V151, V151, V154, V152, S2, S1, S0]

================================

Block 0x205
[0x205:0x21a]
---
Predecessors: [0x1fc]
Successors: [0x1fc]
---
0x205 DUP1
0x206 MLOAD
0x207 DUP3
0x208 MSTORE
0x209 PUSH1 0x1f
0x20b NOT
0x20c SWAP1
0x20d SWAP3
0x20e ADD
0x20f SWAP2
0x210 PUSH1 0x20
0x212 SWAP2
0x213 DUP3
0x214 ADD
0x215 SWAP2
0x216 ADD
0x217 PUSH2 0x1fc
0x21a JUMP
---
0x206: V158 = M[S0]
0x208: M[S1] = V158
0x209: V159 = 0x1f
0x20b: V160 = NOT 0x1f
0x20e: V161 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x210: V162 = 0x20
0x214: V163 = ADD 0x20 S1
0x216: V164 = ADD 0x20 S0
0x217: V165 = 0x1fc
0x21a: JUMP 0x1fc
---
Entry stack: [V11, 0x6b, V41, V62, V62, V151, V151, V154, V152, S2, S1, S0]
Stack pops: 3
Stack additions: [V161, V163, V164]
Exit stack: [V11, 0x6b, V41, V62, V62, V151, V151, V154, V152, V161, V163, V164]

================================

Block 0x21b
[0x21b:0x25d]
---
Predecessors: [0x1fc]
Successors: [0x450]
---
0x21b JUMPDEST
0x21c PUSH1 0x1
0x21e DUP4
0x21f PUSH1 0x20
0x221 SUB
0x222 PUSH2 0x100
0x225 EXP
0x226 SUB
0x227 DUP1
0x228 NOT
0x229 DUP3
0x22a MLOAD
0x22b AND
0x22c DUP2
0x22d DUP5
0x22e MLOAD
0x22f AND
0x230 OR
0x231 SWAP1
0x232 SWAP3
0x233 MSTORE
0x234 POP
0x235 POP
0x236 POP
0x237 SWAP2
0x238 SWAP1
0x239 SWAP2
0x23a ADD
0x23b SWAP3
0x23c POP
0x23d PUSH1 0x40
0x23f SWAP2
0x240 POP
0x241 POP
0x242 MLOAD
0x243 SWAP1
0x244 DUP2
0x245 SWAP1
0x246 SUB
0x247 SWAP1
0x248 SHA3
0x249 PUSH1 0x2
0x24b SSTORE
0x24c PUSH1 0x0
0x24e DUP3
0x24f DUP1
0x250 MLOAD
0x251 PUSH2 0x25e
0x254 SWAP3
0x255 SWAP2
0x256 PUSH1 0x20
0x258 ADD
0x259 SWAP1
0x25a PUSH2 0x450
0x25d JUMP
---
0x21b: JUMPDEST 
0x21c: V166 = 0x1
0x21f: V167 = 0x20
0x221: V168 = SUB 0x20 S2
0x222: V169 = 0x100
0x225: V170 = EXP 0x100 V168
0x226: V171 = SUB V170 0x1
0x228: V172 = NOT V171
0x22a: V173 = M[S0]
0x22b: V174 = AND V173 V172
0x22e: V175 = M[S1]
0x22f: V176 = AND V175 V171
0x230: V177 = OR V176 V174
0x233: M[S1] = V177
0x23a: V178 = ADD V152 V151
0x23d: V179 = 0x40
0x242: V180 = M[0x40]
0x246: V181 = SUB V178 V180
0x248: V182 = SHA3 V180 V181
0x249: V183 = 0x2
0x24b: S[0x2] = V182
0x24c: V184 = 0x0
0x250: V185 = M[V41]
0x251: V186 = 0x25e
0x256: V187 = 0x20
0x258: V188 = ADD 0x20 V41
0x25a: V189 = 0x450
0x25d: JUMP 0x450
---
Entry stack: [V11, 0x6b, V41, V62, V62, V151, V151, V154, V152, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, 0x25e, 0x0, V188, V185]
Exit stack: [V11, 0x6b, V41, V62, 0x25e, 0x0, V188, V185]

================================

Block 0x25e
[0x25e:0x287]
---
Predecessors: [0x288, 0x351, 0x4ca]
Successors: [0x288]
---
0x25e JUMPDEST
0x25f POP
0x260 PUSH1 0x1
0x262 DUP1
0x263 SLOAD
0x264 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x279 NOT
0x27a AND
0x27b CALLER
0x27c PUSH1 0x1
0x27e PUSH1 0xa0
0x280 PUSH1 0x2
0x282 EXP
0x283 SUB
0x284 AND
0x285 OR
0x286 SWAP1
0x287 SSTORE
---
0x25e: JUMPDEST 
0x260: V190 = 0x1
0x263: V191 = S[0x1]
0x264: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x279: V193 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x27a: V194 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V191
0x27b: V195 = CALLER
0x27c: V196 = 0x1
0x27e: V197 = 0xa0
0x280: V198 = 0x2
0x282: V199 = EXP 0x2 0xa0
0x283: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x284: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x285: V202 = OR V201 V194
0x287: S[0x1] = V202
---
Entry stack: [V11, 0x6b, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6b, S5, S4, S3, S2, S1]

================================

Block 0x288
[0x288:0x28b]
---
Predecessors: [0x1e2, 0x25e, 0x2e1, 0x2e7]
Successors: [0x6b, 0x25e, 0x351]
---
0x288 JUMPDEST
0x289 POP
0x28a POP
0x28b JUMP
---
0x288: JUMPDEST 
0x28b: JUMP S2
---
Entry stack: [V11, 0x6b, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x6b, S4, S3]

================================

Block 0x28c
[0x28c:0x2a7]
---
Predecessors: [0xf5]
Successors: [0x2a8, 0x2ac]
---
0x28c JUMPDEST
0x28d ORIGIN
0x28e PUSH1 0x1
0x290 PUSH1 0xa0
0x292 PUSH1 0x2
0x294 EXP
0x295 SUB
0x296 AND
0x297 CALLER
0x298 PUSH1 0x1
0x29a PUSH1 0xa0
0x29c PUSH1 0x2
0x29e EXP
0x29f SUB
0x2a0 AND
0x2a1 EQ
0x2a2 ISZERO
0x2a3 ISZERO
0x2a4 PUSH2 0x2ac
0x2a7 JUMPI
---
0x28c: JUMPDEST 
0x28d: V203 = ORIGIN
0x28e: V204 = 0x1
0x290: V205 = 0xa0
0x292: V206 = 0x2
0x294: V207 = EXP 0x2 0xa0
0x295: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x296: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x297: V210 = CALLER
0x298: V211 = 0x1
0x29a: V212 = 0xa0
0x29c: V213 = 0x2
0x29e: V214 = EXP 0x2 0xa0
0x29f: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a0: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x2a1: V217 = EQ V216 V209
0x2a2: V218 = ISZERO V217
0x2a3: V219 = ISZERO V218
0x2a4: V220 = 0x2ac
0x2a7: JUMPI 0x2ac V219
---
Entry stack: [V11, 0x6b, V72, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6b, V72, V74]

================================

Block 0x2a8
[0x2a8:0x2ab]
---
Predecessors: [0x28c]
Successors: []
---
0x2a8 PUSH1 0x0
0x2aa DUP1
0x2ab REVERT
---
0x2a8: V221 = 0x0
0x2ab: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6b, V72, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6b, V72, V74]

================================

Block 0x2ac
[0x2ac:0x2d4]
---
Predecessors: [0x28c]
Successors: [0x2d5, 0x2e1]
---
0x2ac JUMPDEST
0x2ad DUP2
0x2ae DUP2
0x2af PUSH1 0x40
0x2b1 MLOAD
0x2b2 DUP1
0x2b3 DUP4
0x2b4 DUP4
0x2b5 DUP1
0x2b6 DUP3
0x2b7 DUP5
0x2b8 CALLDATACOPY
0x2b9 DUP3
0x2ba ADD
0x2bb SWAP2
0x2bc POP
0x2bd POP
0x2be SWAP3
0x2bf POP
0x2c0 POP
0x2c1 POP
0x2c2 PUSH1 0x40
0x2c4 MLOAD
0x2c5 SWAP1
0x2c6 DUP2
0x2c7 SWAP1
0x2c8 SUB
0x2c9 SWAP1
0x2ca SHA3
0x2cb PUSH1 0x2
0x2cd SLOAD
0x2ce EQ
0x2cf DUP1
0x2d0 ISZERO
0x2d1 PUSH2 0x2e1
0x2d4 JUMPI
---
0x2ac: JUMPDEST 
0x2af: V222 = 0x40
0x2b1: V223 = M[0x40]
0x2b8: CALLDATACOPY V223 V72 V74
0x2ba: V224 = ADD V223 V74
0x2c2: V225 = 0x40
0x2c4: V226 = M[0x40]
0x2c8: V227 = SUB V224 V226
0x2ca: V228 = SHA3 V226 V227
0x2cb: V229 = 0x2
0x2cd: V230 = S[0x2]
0x2ce: V231 = EQ V230 V228
0x2d0: V232 = ISZERO V231
0x2d1: V233 = 0x2e1
0x2d4: JUMPI 0x2e1 V232
---
Entry stack: [V11, 0x6b, V72, V74]
Stack pops: 2
Stack additions: [S1, S0, V231]
Exit stack: [V11, 0x6b, V72, V74, V231]

================================

Block 0x2d5
[0x2d5:0x2e0]
---
Predecessors: [0x2ac]
Successors: [0x2e1]
---
0x2d5 POP
0x2d6 PUSH8 0xde0b6b3a7640000
0x2df CALLVALUE
0x2e0 GT
---
0x2d6: V234 = 0xde0b6b3a7640000
0x2df: V235 = CALLVALUE
0x2e0: V236 = GT V235 0xde0b6b3a7640000
---
Entry stack: [V11, 0x6b, V72, V74, V231]
Stack pops: 1
Stack additions: [V236]
Exit stack: [V11, 0x6b, V72, V74, V236]

================================

Block 0x2e1
[0x2e1:0x2e6]
---
Predecessors: [0x2ac, 0x2d5]
Successors: [0x288, 0x2e7]
---
0x2e1 JUMPDEST
0x2e2 ISZERO
0x2e3 PUSH2 0x288
0x2e6 JUMPI
---
0x2e1: JUMPDEST 
0x2e2: V237 = ISZERO S0
0x2e3: V238 = 0x288
0x2e6: JUMPI 0x288 V237
---
Entry stack: [V11, 0x6b, V72, V74, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6b, V72, V74]

================================

Block 0x2e7
[0x2e7:0x31e]
---
Predecessors: [0x2e1]
Successors: [0x288, 0x31f]
---
0x2e7 CALLER
0x2e8 PUSH1 0x1
0x2ea PUSH1 0xa0
0x2ec PUSH1 0x2
0x2ee EXP
0x2ef SUB
0x2f0 AND
0x2f1 PUSH2 0x8fc
0x2f4 ADDRESS
0x2f5 PUSH1 0x1
0x2f7 PUSH1 0xa0
0x2f9 PUSH1 0x2
0x2fb EXP
0x2fc SUB
0x2fd AND
0x2fe BALANCE
0x2ff SWAP1
0x300 DUP2
0x301 ISZERO
0x302 MUL
0x303 SWAP1
0x304 PUSH1 0x40
0x306 MLOAD
0x307 PUSH1 0x0
0x309 PUSH1 0x40
0x30b MLOAD
0x30c DUP1
0x30d DUP4
0x30e SUB
0x30f DUP2
0x310 DUP6
0x311 DUP9
0x312 DUP9
0x313 CALL
0x314 SWAP4
0x315 POP
0x316 POP
0x317 POP
0x318 POP
0x319 ISZERO
0x31a ISZERO
0x31b PUSH2 0x288
0x31e JUMPI
---
0x2e7: V239 = CALLER
0x2e8: V240 = 0x1
0x2ea: V241 = 0xa0
0x2ec: V242 = 0x2
0x2ee: V243 = EXP 0x2 0xa0
0x2ef: V244 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f0: V245 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x2f1: V246 = 0x8fc
0x2f4: V247 = ADDRESS
0x2f5: V248 = 0x1
0x2f7: V249 = 0xa0
0x2f9: V250 = 0x2
0x2fb: V251 = EXP 0x2 0xa0
0x2fc: V252 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fd: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V247
0x2fe: V254 = BALANCE V253
0x301: V255 = ISZERO V254
0x302: V256 = MUL V255 0x8fc
0x304: V257 = 0x40
0x306: V258 = M[0x40]
0x307: V259 = 0x0
0x309: V260 = 0x40
0x30b: V261 = M[0x40]
0x30e: V262 = SUB V258 V261
0x313: V263 = CALL V256 V245 V254 V261 V262 V261 0x0
0x319: V264 = ISZERO V263
0x31a: V265 = ISZERO V264
0x31b: V266 = 0x288
0x31e: JUMPI 0x288 V265
---
Entry stack: [V11, 0x6b, V72, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6b, V72, V74]

================================

Block 0x31f
[0x31f:0x322]
---
Predecessors: [0x2e7]
Successors: []
---
0x31f PUSH1 0x0
0x321 DUP1
0x322 REVERT
---
0x31f: V267 = 0x0
0x322: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6b, V72, V74]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6b, V72, V74]

================================

Block 0x323
[0x323:0x339]
---
Predecessors: [0x108]
Successors: [0x33a, 0x33e]
---
0x323 JUMPDEST
0x324 PUSH1 0x1
0x326 SLOAD
0x327 CALLER
0x328 PUSH1 0x1
0x32a PUSH1 0xa0
0x32c PUSH1 0x2
0x32e EXP
0x32f SUB
0x330 SWAP1
0x331 DUP2
0x332 AND
0x333 SWAP2
0x334 AND
0x335 EQ
0x336 PUSH2 0x33e
0x339 JUMPI
---
0x323: JUMPDEST 
0x324: V268 = 0x1
0x326: V269 = S[0x1]
0x327: V270 = CALLER
0x328: V271 = 0x1
0x32a: V272 = 0xa0
0x32c: V273 = 0x2
0x32e: V274 = EXP 0x2 0xa0
0x32f: V275 = SUB 0x10000000000000000000000000000000000000000 0x1
0x332: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x334: V277 = AND V269 0xffffffffffffffffffffffffffffffffffffffff
0x335: V278 = EQ V277 V276
0x336: V279 = 0x33e
0x339: JUMPI 0x33e V278
---
Entry stack: [V11, 0x6b, V90, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6b, V90, V95]

================================

Block 0x33a
[0x33a:0x33d]
---
Predecessors: [0x323]
Successors: []
---
0x33a PUSH1 0x0
0x33c DUP1
0x33d REVERT
---
0x33a: V280 = 0x0
0x33d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6b, V90, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6b, V90, V95]

================================

Block 0x33e
[0x33e:0x350]
---
Predecessors: [0x323]
Successors: [0x450]
---
0x33e JUMPDEST
0x33f PUSH1 0x0
0x341 DUP3
0x342 DUP1
0x343 MLOAD
0x344 PUSH2 0x351
0x347 SWAP3
0x348 SWAP2
0x349 PUSH1 0x20
0x34b ADD
0x34c SWAP1
0x34d PUSH2 0x450
0x350 JUMP
---
0x33e: JUMPDEST 
0x33f: V281 = 0x0
0x343: V282 = M[V90]
0x344: V283 = 0x351
0x349: V284 = 0x20
0x34b: V285 = ADD 0x20 V90
0x34d: V286 = 0x450
0x350: JUMP 0x450
---
Entry stack: [V11, 0x6b, V90, V95]
Stack pops: 2
Stack additions: [S1, S0, 0x351, 0x0, V285, V282]
Exit stack: [V11, 0x6b, V90, V95, 0x351, 0x0, V285, V282]

================================

Block 0x351
[0x351:0x357]
---
Predecessors: [0x288, 0x351, 0x4ca]
Successors: [0x6b, 0x25e, 0x351]
---
0x351 JUMPDEST
0x352 POP
0x353 PUSH1 0x2
0x355 SSTORE
0x356 POP
0x357 JUMP
---
0x351: JUMPDEST 
0x353: V287 = 0x2
0x355: S[0x2] = S1
0x357: JUMP S3
---
Entry stack: [V11, 0x6b, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x6b, S5, S4]

================================

Block 0x358
[0x358:0x3a7]
---
Predecessors: [0x15b]
Successors: [0x3a8, 0x3ee]
---
0x358 JUMPDEST
0x359 PUSH1 0x0
0x35b DUP1
0x35c SLOAD
0x35d PUSH1 0x1
0x35f DUP2
0x360 PUSH1 0x1
0x362 AND
0x363 ISZERO
0x364 PUSH2 0x100
0x367 MUL
0x368 SUB
0x369 AND
0x36a PUSH1 0x2
0x36c SWAP1
0x36d DIV
0x36e DUP1
0x36f PUSH1 0x1f
0x371 ADD
0x372 PUSH1 0x20
0x374 DUP1
0x375 SWAP2
0x376 DIV
0x377 MUL
0x378 PUSH1 0x20
0x37a ADD
0x37b PUSH1 0x40
0x37d MLOAD
0x37e SWAP1
0x37f DUP2
0x380 ADD
0x381 PUSH1 0x40
0x383 MSTORE
0x384 DUP1
0x385 SWAP3
0x386 SWAP2
0x387 SWAP1
0x388 DUP2
0x389 DUP2
0x38a MSTORE
0x38b PUSH1 0x20
0x38d ADD
0x38e DUP3
0x38f DUP1
0x390 SLOAD
0x391 PUSH1 0x1
0x393 DUP2
0x394 PUSH1 0x1
0x396 AND
0x397 ISZERO
0x398 PUSH2 0x100
0x39b MUL
0x39c SUB
0x39d AND
0x39e PUSH1 0x2
0x3a0 SWAP1
0x3a1 DIV
0x3a2 DUP1
0x3a3 ISZERO
0x3a4 PUSH2 0x3ee
0x3a7 JUMPI
---
0x358: JUMPDEST 
0x359: V288 = 0x0
0x35c: V289 = S[0x0]
0x35d: V290 = 0x1
0x360: V291 = 0x1
0x362: V292 = AND 0x1 V289
0x363: V293 = ISZERO V292
0x364: V294 = 0x100
0x367: V295 = MUL 0x100 V293
0x368: V296 = SUB V295 0x1
0x369: V297 = AND V296 V289
0x36a: V298 = 0x2
0x36d: V299 = DIV V297 0x2
0x36f: V300 = 0x1f
0x371: V301 = ADD 0x1f V299
0x372: V302 = 0x20
0x376: V303 = DIV V301 0x20
0x377: V304 = MUL V303 0x20
0x378: V305 = 0x20
0x37a: V306 = ADD 0x20 V304
0x37b: V307 = 0x40
0x37d: V308 = M[0x40]
0x380: V309 = ADD V308 V306
0x381: V310 = 0x40
0x383: M[0x40] = V309
0x38a: M[V308] = V299
0x38b: V311 = 0x20
0x38d: V312 = ADD 0x20 V308
0x390: V313 = S[0x0]
0x391: V314 = 0x1
0x394: V315 = 0x1
0x396: V316 = AND 0x1 V313
0x397: V317 = ISZERO V316
0x398: V318 = 0x100
0x39b: V319 = MUL 0x100 V317
0x39c: V320 = SUB V319 0x1
0x39d: V321 = AND V320 V313
0x39e: V322 = 0x2
0x3a1: V323 = DIV V321 0x2
0x3a3: V324 = ISZERO V323
0x3a4: V325 = 0x3ee
0x3a7: JUMPI 0x3ee V324
---
Entry stack: [V11, 0x163]
Stack pops: 0
Stack additions: [V308, 0x0, V299, V312, 0x0, V323]
Exit stack: [V11, 0x163, V308, 0x0, V299, V312, 0x0, V323]

================================

Block 0x3a8
[0x3a8:0x3af]
---
Predecessors: [0x358]
Successors: [0x3b0, 0x3c3]
---
0x3a8 DUP1
0x3a9 PUSH1 0x1f
0x3ab LT
0x3ac PUSH2 0x3c3
0x3af JUMPI
---
0x3a9: V326 = 0x1f
0x3ab: V327 = LT 0x1f V323
0x3ac: V328 = 0x3c3
0x3af: JUMPI 0x3c3 V327
---
Entry stack: [V11, 0x163, V308, 0x0, V299, V312, 0x0, V323]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x163, V308, 0x0, V299, V312, 0x0, V323]

================================

Block 0x3b0
[0x3b0:0x3c2]
---
Predecessors: [0x3a8]
Successors: [0x3ee]
---
0x3b0 PUSH2 0x100
0x3b3 DUP1
0x3b4 DUP4
0x3b5 SLOAD
0x3b6 DIV
0x3b7 MUL
0x3b8 DUP4
0x3b9 MSTORE
0x3ba SWAP2
0x3bb PUSH1 0x20
0x3bd ADD
0x3be SWAP2
0x3bf PUSH2 0x3ee
0x3c2 JUMP
---
0x3b0: V329 = 0x100
0x3b5: V330 = S[0x0]
0x3b6: V331 = DIV V330 0x100
0x3b7: V332 = MUL V331 0x100
0x3b9: M[V312] = V332
0x3bb: V333 = 0x20
0x3bd: V334 = ADD 0x20 V312
0x3bf: V335 = 0x3ee
0x3c2: JUMP 0x3ee
---
Entry stack: [V11, 0x163, V308, 0x0, V299, V312, 0x0, V323]
Stack pops: 3
Stack additions: [V334, S1, S0]
Exit stack: [V11, 0x163, V308, 0x0, V299, V334, 0x0, V323]

================================

Block 0x3c3
[0x3c3:0x3d0]
---
Predecessors: [0x3a8]
Successors: [0x3d1]
---
0x3c3 JUMPDEST
0x3c4 DUP3
0x3c5 ADD
0x3c6 SWAP2
0x3c7 SWAP1
0x3c8 PUSH1 0x0
0x3ca MSTORE
0x3cb PUSH1 0x20
0x3cd PUSH1 0x0
0x3cf SHA3
0x3d0 SWAP1
---
0x3c3: JUMPDEST 
0x3c5: V336 = ADD V312 V323
0x3c8: V337 = 0x0
0x3ca: M[0x0] = 0x0
0x3cb: V338 = 0x20
0x3cd: V339 = 0x0
0x3cf: V340 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x163, V308, 0x0, V299, V312, 0x0, V323]
Stack pops: 3
Stack additions: [V336, V340, S2]
Exit stack: [V11, 0x163, V308, 0x0, V299, V336, V340, V312]

================================

Block 0x3d1
[0x3d1:0x3e4]
---
Predecessors: [0x3c3, 0x3d1]
Successors: [0x3d1, 0x3e5]
---
0x3d1 JUMPDEST
0x3d2 DUP2
0x3d3 SLOAD
0x3d4 DUP2
0x3d5 MSTORE
0x3d6 SWAP1
0x3d7 PUSH1 0x1
0x3d9 ADD
0x3da SWAP1
0x3db PUSH1 0x20
0x3dd ADD
0x3de DUP1
0x3df DUP4
0x3e0 GT
0x3e1 PUSH2 0x3d1
0x3e4 JUMPI
---
0x3d1: JUMPDEST 
0x3d3: V341 = S[S1]
0x3d5: M[S0] = V341
0x3d7: V342 = 0x1
0x3d9: V343 = ADD 0x1 S1
0x3db: V344 = 0x20
0x3dd: V345 = ADD 0x20 S0
0x3e0: V346 = GT V336 V345
0x3e1: V347 = 0x3d1
0x3e4: JUMPI 0x3d1 V346
---
Entry stack: [V11, 0x163, V308, 0x0, V299, V336, S1, S0]
Stack pops: 3
Stack additions: [S2, V343, V345]
Exit stack: [V11, 0x163, V308, 0x0, V299, V336, V343, V345]

================================

Block 0x3e5
[0x3e5:0x3ed]
---
Predecessors: [0x3d1]
Successors: [0x3ee]
---
0x3e5 DUP3
0x3e6 SWAP1
0x3e7 SUB
0x3e8 PUSH1 0x1f
0x3ea AND
0x3eb DUP3
0x3ec ADD
0x3ed SWAP2
---
0x3e7: V348 = SUB V345 V336
0x3e8: V349 = 0x1f
0x3ea: V350 = AND 0x1f V348
0x3ec: V351 = ADD V336 V350
---
Entry stack: [V11, 0x163, V308, 0x0, V299, V336, V343, V345]
Stack pops: 3
Stack additions: [V351, S1, S2]
Exit stack: [V11, 0x163, V308, 0x0, V299, V351, V343, V336]

================================

Block 0x3ee
[0x3ee:0x3f5]
---
Predecessors: [0x358, 0x3b0, 0x3e5]
Successors: [0x163]
---
0x3ee JUMPDEST
0x3ef POP
0x3f0 POP
0x3f1 POP
0x3f2 POP
0x3f3 POP
0x3f4 DUP2
0x3f5 JUMP
---
0x3ee: JUMPDEST 
0x3f5: JUMP 0x163
---
Entry stack: [V11, 0x163, V308, 0x0, V299, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x163, V308]

================================

Block 0x3f6
[0x3f6:0x40c]
---
Predecessors: [0x1da]
Successors: [0x40d, 0x411]
---
0x3f6 JUMPDEST
0x3f7 PUSH1 0x1
0x3f9 SLOAD
0x3fa CALLER
0x3fb PUSH1 0x1
0x3fd PUSH1 0xa0
0x3ff PUSH1 0x2
0x401 EXP
0x402 SUB
0x403 SWAP1
0x404 DUP2
0x405 AND
0x406 SWAP2
0x407 AND
0x408 EQ
0x409 PUSH2 0x411
0x40c JUMPI
---
0x3f6: JUMPDEST 
0x3f7: V352 = 0x1
0x3f9: V353 = S[0x1]
0x3fa: V354 = CALLER
0x3fb: V355 = 0x1
0x3fd: V356 = 0xa0
0x3ff: V357 = 0x2
0x401: V358 = EXP 0x2 0xa0
0x402: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x405: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0x407: V361 = AND V353 0xffffffffffffffffffffffffffffffffffffffff
0x408: V362 = EQ V361 V360
0x409: V363 = 0x411
0x40c: JUMPI 0x411 V362
---
Entry stack: [V11, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6b]

================================

Block 0x40d
[0x40d:0x410]
---
Predecessors: [0x3f6]
Successors: []
---
0x40d PUSH1 0x0
0x40f DUP1
0x410 REVERT
---
0x40d: V364 = 0x0
0x410: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6b]

================================

Block 0x411
[0x411:0x449]
---
Predecessors: [0x3f6]
Successors: [0x44a, 0x44e]
---
0x411 JUMPDEST
0x412 CALLER
0x413 PUSH1 0x1
0x415 PUSH1 0xa0
0x417 PUSH1 0x2
0x419 EXP
0x41a SUB
0x41b AND
0x41c PUSH2 0x8fc
0x41f ADDRESS
0x420 PUSH1 0x1
0x422 PUSH1 0xa0
0x424 PUSH1 0x2
0x426 EXP
0x427 SUB
0x428 AND
0x429 BALANCE
0x42a SWAP1
0x42b DUP2
0x42c ISZERO
0x42d MUL
0x42e SWAP1
0x42f PUSH1 0x40
0x431 MLOAD
0x432 PUSH1 0x0
0x434 PUSH1 0x40
0x436 MLOAD
0x437 DUP1
0x438 DUP4
0x439 SUB
0x43a DUP2
0x43b DUP6
0x43c DUP9
0x43d DUP9
0x43e CALL
0x43f SWAP4
0x440 POP
0x441 POP
0x442 POP
0x443 POP
0x444 ISZERO
0x445 ISZERO
0x446 PUSH2 0x44e
0x449 JUMPI
---
0x411: JUMPDEST 
0x412: V365 = CALLER
0x413: V366 = 0x1
0x415: V367 = 0xa0
0x417: V368 = 0x2
0x419: V369 = EXP 0x2 0xa0
0x41a: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41b: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x41c: V372 = 0x8fc
0x41f: V373 = ADDRESS
0x420: V374 = 0x1
0x422: V375 = 0xa0
0x424: V376 = 0x2
0x426: V377 = EXP 0x2 0xa0
0x427: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x428: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x429: V380 = BALANCE V379
0x42c: V381 = ISZERO V380
0x42d: V382 = MUL V381 0x8fc
0x42f: V383 = 0x40
0x431: V384 = M[0x40]
0x432: V385 = 0x0
0x434: V386 = 0x40
0x436: V387 = M[0x40]
0x439: V388 = SUB V384 V387
0x43e: V389 = CALL V382 V371 V380 V387 V388 V387 0x0
0x444: V390 = ISZERO V389
0x445: V391 = ISZERO V390
0x446: V392 = 0x44e
0x449: JUMPI 0x44e V391
---
Entry stack: [V11, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6b]

================================

Block 0x44a
[0x44a:0x44d]
---
Predecessors: [0x411]
Successors: []
---
0x44a PUSH1 0x0
0x44c DUP1
0x44d REVERT
---
0x44a: V393 = 0x0
0x44d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6b]

================================

Block 0x44e
[0x44e:0x44f]
---
Predecessors: [0x411]
Successors: [0x6b]
---
0x44e JUMPDEST
0x44f JUMP
---
0x44e: JUMPDEST 
0x44f: JUMP 0x6b
---
Entry stack: [V11, 0x6b]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x450
[0x450:0x480]
---
Predecessors: [0x21b, 0x33e]
Successors: [0x481, 0x491]
---
0x450 JUMPDEST
0x451 DUP3
0x452 DUP1
0x453 SLOAD
0x454 PUSH1 0x1
0x456 DUP2
0x457 PUSH1 0x1
0x459 AND
0x45a ISZERO
0x45b PUSH2 0x100
0x45e MUL
0x45f SUB
0x460 AND
0x461 PUSH1 0x2
0x463 SWAP1
0x464 DIV
0x465 SWAP1
0x466 PUSH1 0x0
0x468 MSTORE
0x469 PUSH1 0x20
0x46b PUSH1 0x0
0x46d SHA3
0x46e SWAP1
0x46f PUSH1 0x1f
0x471 ADD
0x472 PUSH1 0x20
0x474 SWAP1
0x475 DIV
0x476 DUP2
0x477 ADD
0x478 SWAP3
0x479 DUP3
0x47a PUSH1 0x1f
0x47c LT
0x47d PUSH2 0x491
0x480 JUMPI
---
0x450: JUMPDEST 
0x453: V394 = S[0x0]
0x454: V395 = 0x1
0x457: V396 = 0x1
0x459: V397 = AND 0x1 V394
0x45a: V398 = ISZERO V397
0x45b: V399 = 0x100
0x45e: V400 = MUL 0x100 V398
0x45f: V401 = SUB V400 0x1
0x460: V402 = AND V401 V394
0x461: V403 = 0x2
0x464: V404 = DIV V402 0x2
0x466: V405 = 0x0
0x468: M[0x0] = 0x0
0x469: V406 = 0x20
0x46b: V407 = 0x0
0x46d: V408 = SHA3 0x0 0x20
0x46f: V409 = 0x1f
0x471: V410 = ADD 0x1f V404
0x472: V411 = 0x20
0x475: V412 = DIV V410 0x20
0x477: V413 = ADD V408 V412
0x47a: V414 = 0x1f
0x47c: V415 = LT 0x1f S0
0x47d: V416 = 0x491
0x480: JUMPI 0x491 V415
---
Entry stack: [V11, 0x6b, S5, S4, {0x25e, 0x351}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S2, V413, S0, V408, S1]
Exit stack: [V11, 0x6b, S5, S4, {0x25e, 0x351}, 0x0, V413, S0, V408, S1]

================================

Block 0x481
[0x481:0x490]
---
Predecessors: [0x450]
Successors: [0x4be]
---
0x481 DUP1
0x482 MLOAD
0x483 PUSH1 0xff
0x485 NOT
0x486 AND
0x487 DUP4
0x488 DUP1
0x489 ADD
0x48a OR
0x48b DUP6
0x48c SSTORE
0x48d PUSH2 0x4be
0x490 JUMP
---
0x482: V417 = M[S0]
0x483: V418 = 0xff
0x485: V419 = NOT 0xff
0x486: V420 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V417
0x489: V421 = ADD S2 S2
0x48a: V422 = OR V421 V420
0x48c: S[0x0] = V422
0x48d: V423 = 0x4be
0x490: JUMP 0x4be
---
Entry stack: [V11, 0x6b, S7, S6, {0x25e, 0x351}, 0x0, V413, S2, V408, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x6b, S7, S6, {0x25e, 0x351}, 0x0, V413, S2, V408, S0]

================================

Block 0x491
[0x491:0x49f]
---
Predecessors: [0x450]
Successors: [0x4a0, 0x4be]
---
0x491 JUMPDEST
0x492 DUP3
0x493 DUP1
0x494 ADD
0x495 PUSH1 0x1
0x497 ADD
0x498 DUP6
0x499 SSTORE
0x49a DUP3
0x49b ISZERO
0x49c PUSH2 0x4be
0x49f JUMPI
---
0x491: JUMPDEST 
0x494: V424 = ADD S2 S2
0x495: V425 = 0x1
0x497: V426 = ADD 0x1 V424
0x499: S[0x0] = V426
0x49b: V427 = ISZERO S2
0x49c: V428 = 0x4be
0x49f: JUMPI 0x4be V427
---
Entry stack: [V11, 0x6b, S7, S6, {0x25e, 0x351}, 0x0, V413, S2, V408, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x6b, S7, S6, {0x25e, 0x351}, 0x0, V413, S2, V408, S0]

================================

Block 0x4a0
[0x4a0:0x4a2]
---
Predecessors: [0x491]
Successors: [0x4a3]
---
0x4a0 SWAP2
0x4a1 DUP3
0x4a2 ADD
---
0x4a2: V429 = ADD S0 S2
---
Entry stack: [V11, 0x6b, S7, S6, {0x25e, 0x351}, 0x0, V413, S2, V408, S0]
Stack pops: 3
Stack additions: [S0, S1, V429]
Exit stack: [V11, 0x6b, S7, S6, {0x25e, 0x351}, 0x0, V413, S0, V408, V429]

================================

Block 0x4a3
[0x4a3:0x4ab]
---
Predecessors: [0x4a0, 0x4ac]
Successors: [0x4ac, 0x4be]
---
0x4a3 JUMPDEST
0x4a4 DUP3
0x4a5 DUP2
0x4a6 GT
0x4a7 ISZERO
0x4a8 PUSH2 0x4be
0x4ab JUMPI
---
0x4a3: JUMPDEST 
0x4a6: V430 = GT V429 S2
0x4a7: V431 = ISZERO V430
0x4a8: V432 = 0x4be
0x4ab: JUMPI 0x4be V431
---
Entry stack: [V11, 0x6b, S7, S6, {0x25e, 0x351}, 0x0, V413, S2, S1, V429]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6b, S7, S6, {0x25e, 0x351}, 0x0, V413, S2, S1, V429]

================================

Block 0x4ac
[0x4ac:0x4bd]
---
Predecessors: [0x4a3]
Successors: [0x4a3]
---
0x4ac DUP3
0x4ad MLOAD
0x4ae DUP3
0x4af SSTORE
0x4b0 SWAP2
0x4b1 PUSH1 0x20
0x4b3 ADD
0x4b4 SWAP2
0x4b5 SWAP1
0x4b6 PUSH1 0x1
0x4b8 ADD
0x4b9 SWAP1
0x4ba PUSH2 0x4a3
0x4bd JUMP
---
0x4ad: V433 = M[S2]
0x4af: S[S1] = V433
0x4b1: V434 = 0x20
0x4b3: V435 = ADD 0x20 S2
0x4b6: V436 = 0x1
0x4b8: V437 = ADD 0x1 S1
0x4ba: V438 = 0x4a3
0x4bd: JUMP 0x4a3
---
Entry stack: [V11, 0x6b, S7, S6, {0x25e, 0x351}, 0x0, V413, S2, S1, V429]
Stack pops: 3
Stack additions: [V435, V437, S0]
Exit stack: [V11, 0x6b, S7, S6, {0x25e, 0x351}, 0x0, V413, V435, V437, V429]

================================

Block 0x4be
[0x4be:0x4c9]
---
Predecessors: [0x481, 0x491, 0x4a3]
Successors: [0x4ce]
---
0x4be JUMPDEST
0x4bf POP
0x4c0 PUSH2 0x4ca
0x4c3 SWAP3
0x4c4 SWAP2
0x4c5 POP
0x4c6 PUSH2 0x4ce
0x4c9 JUMP
---
0x4be: JUMPDEST 
0x4c0: V439 = 0x4ca
0x4c6: V440 = 0x4ce
0x4c9: JUMP 0x4ce
---
Entry stack: [V11, 0x6b, S7, S6, {0x25e, 0x351}, 0x0, V413, S2, S1, S0]
Stack pops: 4
Stack additions: [0x4ca, S3, S1]
Exit stack: [V11, 0x6b, S7, S6, {0x25e, 0x351}, 0x0, 0x4ca, V413, S1]

================================

Block 0x4ca
[0x4ca:0x4cd]
---
Predecessors: [0x4d4, 0x4e8]
Successors: [0x6b, 0x25e, 0x351, 0x4e8]
---
0x4ca JUMPDEST
0x4cb POP
0x4cc SWAP1
0x4cd JUMP
---
0x4ca: JUMPDEST 
0x4cd: JUMP {0x6b, 0x25e, 0x351, 0x4e8}
---
Entry stack: [V11, 0x6b, S7, S6, {0x6b, 0x25e, 0x351}, S4, S3, {0x6b, 0x25e, 0x351, 0x4e8}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x6b, S7, S6, {0x6b, 0x25e, 0x351}, S4, S3, S1]

================================

Block 0x4ce
[0x4ce:0x4d3]
---
Predecessors: [0x4be]
Successors: [0x4d4]
---
0x4ce JUMPDEST
0x4cf PUSH2 0x4e8
0x4d2 SWAP2
0x4d3 SWAP1
---
0x4ce: JUMPDEST 
0x4cf: V441 = 0x4e8
---
Entry stack: [V11, 0x6b, S6, S5, {0x25e, 0x351}, 0x0, 0x4ca, V413, S0]
Stack pops: 2
Stack additions: [0x4e8, S1, S0]
Exit stack: [V11, 0x6b, S6, S5, {0x25e, 0x351}, 0x0, 0x4ca, 0x4e8, V413, S0]

================================

Block 0x4d4
[0x4d4:0x4dc]
---
Predecessors: [0x4ce, 0x4dd]
Successors: [0x4ca, 0x4dd]
---
0x4d4 JUMPDEST
0x4d5 DUP1
0x4d6 DUP3
0x4d7 GT
0x4d8 ISZERO
0x4d9 PUSH2 0x4ca
0x4dc JUMPI
---
0x4d4: JUMPDEST 
0x4d7: V442 = GT V413 S0
0x4d8: V443 = ISZERO V442
0x4d9: V444 = 0x4ca
0x4dc: JUMPI 0x4ca V443
---
Entry stack: [V11, 0x6b, S7, S6, {0x25e, 0x351}, 0x0, 0x4ca, 0x4e8, V413, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x6b, S7, S6, {0x25e, 0x351}, 0x0, 0x4ca, 0x4e8, V413, S0]

================================

Block 0x4dd
[0x4dd:0x4e7]
---
Predecessors: [0x4d4]
Successors: [0x4d4]
---
0x4dd PUSH1 0x0
0x4df DUP2
0x4e0 SSTORE
0x4e1 PUSH1 0x1
0x4e3 ADD
0x4e4 PUSH2 0x4d4
0x4e7 JUMP
---
0x4dd: V445 = 0x0
0x4e0: S[S0] = 0x0
0x4e1: V446 = 0x1
0x4e3: V447 = ADD 0x1 S0
0x4e4: V448 = 0x4d4
0x4e7: JUMP 0x4d4
---
Entry stack: [V11, 0x6b, S7, S6, {0x25e, 0x351}, 0x0, 0x4ca, 0x4e8, V413, S0]
Stack pops: 1
Stack additions: [V447]
Exit stack: [V11, 0x6b, S7, S6, {0x25e, 0x351}, 0x0, 0x4ca, 0x4e8, V413, V447]

================================

Block 0x4e8
[0x4e8:0x4ea]
---
Predecessors: [0x4ca]
Successors: [0x4ca]
---
0x4e8 JUMPDEST
0x4e9 SWAP1
0x4ea JUMP
---
0x4e8: JUMPDEST 
0x4ea: JUMP S1
---
Entry stack: [V11, 0x6b, S5, S4, {0x6b, 0x25e, 0x351}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x6b, S5, S4, {0x6b, 0x25e, 0x351}, S2, S0]

================================

Block 0x4eb
[0x4eb:0x51e]
---
Predecessors: []
Successors: []
---
0x4eb STOP
0x4ec LOG1
0x4ed PUSH6 0x627a7a723058
0x4f4 SHA3
0x4f5 PUSH27 0x7d9bdd9a307bb5372324ae1299886e6fa2cbeb139b15ab4b7e8c5a
0x511 PUSH13 0x25e4900029
---
0x4eb: STOP 
0x4ec: LOG S0 S1 S2
0x4ed: V449 = 0x627a7a723058
0x4f4: V450 = SHA3 0x627a7a723058 S3
0x4f5: V451 = 0x7d9bdd9a307bb5372324ae1299886e6fa2cbeb139b15ab4b7e8c5a
0x511: V452 = 0x25e4900029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x25e4900029, 0x7d9bdd9a307bb5372324ae1299886e6fa2cbeb139b15ab4b7e8c5a, V450]
Exit stack: []

================================

Function 0:
Public function signature: 0x88fca8
Entry block: 0x6d
Exit block: 0x6b
Body: 0x6b, 0x6d, 0x1e2, 0x1ec, 0x1fc, 0x205, 0x21b, 0x25e, 0x288, 0x351

Function 1:
Public function signature: 0x3853682c
Entry block: 0xf5
Exit block: 0x6b
Body: 0x6b, 0xf5, 0x25e, 0x288, 0x28c, 0x2a8, 0x2ac, 0x2d5, 0x2e1, 0x2e7, 0x31f, 0x351

Function 2:
Public function signature: 0x3e3ee859
Entry block: 0x108
Exit block: 0x6b
Body: 0x6b, 0x108, 0x25e, 0x288, 0x323, 0x33a, 0x33e, 0x351

Function 3:
Public function signature: 0x3fad9ae0
Entry block: 0x150
Exit block: 0x1cc
Body: 0x150, 0x157, 0x15b, 0x163, 0x187, 0x190, 0x19f, 0x1b3, 0x1cc, 0x358, 0x3a8, 0x3b0, 0x3c3, 0x3d1, 0x3e5, 0x3ee

Function 4:
Public function signature: 0xf50ab247
Entry block: 0x1da
Exit block: 0x6b
Body: 0x6b, 0x1da, 0x3f6, 0x40d, 0x411, 0x44a, 0x44e

Function 5:
Public fallback function
Entry block: 0x6b
Exit block: 0x6b
Body: 0x6b

Function 6:
Private function
Entry block: 0x450
Exit block: 0x4ca
Body: 0x450, 0x481, 0x491, 0x4a0, 0x4a3, 0x4ac, 0x4be, 0x4ca, 0x4ce, 0x4d4, 0x4dd, 0x4e8

