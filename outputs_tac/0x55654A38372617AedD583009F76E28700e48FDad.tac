Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3943380c
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3943380c
0x3c: V13 = EQ 0x3943380c V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa0]
---
0x41 DUP1
0x42 PUSH4 0x57ea89b6
0x47 EQ
0x48 PUSH2 0xa0
0x4b JUMPI
---
0x42: V15 = 0x57ea89b6
0x47: V16 = EQ 0x57ea89b6 V11
0x48: V17 = 0xa0
0x4b: JUMPI 0xa0 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xb5]
---
0x4c DUP1
0x4d PUSH4 0xa5db5463
0x52 EQ
0x53 PUSH2 0xb5
0x56 JUMPI
---
0x4d: V18 = 0xa5db5463
0x52: V19 = EQ 0xa5db5463 V11
0x53: V20 = 0xb5
0x56: JUMPI 0xb5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xf4]
---
0x57 DUP1
0x58 PUSH4 0xb4a99a4e
0x5d EQ
0x5e PUSH2 0xf4
0x61 JUMPI
---
0x58: V21 = 0xb4a99a4e
0x5d: V22 = EQ 0xb4a99a4e V11
0x5e: V23 = 0xf4
0x61: JUMPI 0xf4 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x149]
---
0x62 DUP1
0x63 PUSH4 0xb7387e66
0x68 EQ
0x69 PUSH2 0x149
0x6c JUMPI
---
0x63: V24 = 0xb7387e66
0x68: V25 = EQ 0xb7387e66 V11
0x69: V26 = 0x149
0x6c: JUMPI 0x149 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x75]
---
Predecessors: [0xd]
Successors: [0x76, 0x7a]
---
0x6f JUMPDEST
0x70 CALLVALUE
0x71 ISZERO
0x72 PUSH2 0x7a
0x75 JUMPI
---
0x6f: JUMPDEST 
0x70: V27 = CALLVALUE
0x71: V28 = ISZERO V27
0x72: V29 = 0x7a
0x75: JUMPI 0x7a V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x76
[0x76:0x79]
---
Predecessors: [0x6f]
Successors: []
---
0x76 PUSH1 0x0
0x78 DUP1
0x79 REVERT
---
0x76: V30 = 0x0
0x79: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x81]
---
Predecessors: [0x6f]
Successors: [0x161]
---
0x7a JUMPDEST
0x7b PUSH2 0x82
0x7e PUSH2 0x161
0x81 JUMP
---
0x7a: JUMPDEST 
0x7b: V31 = 0x82
0x7e: V32 = 0x161
0x81: JUMP 0x161
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V11, 0x82]

================================

Block 0x82
[0x82:0x9f]
---
Predecessors: [0x161]
Successors: []
---
0x82 JUMPDEST
0x83 PUSH1 0x40
0x85 MLOAD
0x86 DUP1
0x87 DUP3
0x88 PUSH1 0x0
0x8a NOT
0x8b AND
0x8c PUSH1 0x0
0x8e NOT
0x8f AND
0x90 DUP2
0x91 MSTORE
0x92 PUSH1 0x20
0x94 ADD
0x95 SWAP2
0x96 POP
0x97 POP
0x98 PUSH1 0x40
0x9a MLOAD
0x9b DUP1
0x9c SWAP2
0x9d SUB
0x9e SWAP1
0x9f RETURN
---
0x82: JUMPDEST 
0x83: V33 = 0x40
0x85: V34 = M[0x40]
0x88: V35 = 0x0
0x8a: V36 = NOT 0x0
0x8b: V37 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V99
0x8c: V38 = 0x0
0x8e: V39 = NOT 0x0
0x8f: V40 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V37
0x91: M[V34] = V40
0x92: V41 = 0x20
0x94: V42 = ADD 0x20 V34
0x98: V43 = 0x40
0x9a: V44 = M[0x40]
0x9d: V45 = SUB V42 V44
0x9f: RETURN V44 V45
---
Entry stack: [V11, 0x82, V99]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0xa0
[0xa0:0xa6]
---
Predecessors: [0x41]
Successors: [0xa7, 0xab]
---
0xa0 JUMPDEST
0xa1 CALLVALUE
0xa2 ISZERO
0xa3 PUSH2 0xab
0xa6 JUMPI
---
0xa0: JUMPDEST 
0xa1: V46 = CALLVALUE
0xa2: V47 = ISZERO V46
0xa3: V48 = 0xab
0xa6: JUMPI 0xab V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa7
[0xa7:0xaa]
---
Predecessors: [0xa0]
Successors: []
---
0xa7 PUSH1 0x0
0xa9 DUP1
0xaa REVERT
---
0xa7: V49 = 0x0
0xaa: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xab
[0xab:0xb2]
---
Predecessors: [0xa0]
Successors: [0x167]
---
0xab JUMPDEST
0xac PUSH2 0xb3
0xaf PUSH2 0x167
0xb2 JUMP
---
0xab: JUMPDEST 
0xac: V50 = 0xb3
0xaf: V51 = 0x167
0xb2: JUMP 0x167
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb3]
Exit stack: [V11, 0xb3]

================================

Block 0xb3
[0xb3:0xb4]
---
Predecessors: [0x23a]
Successors: []
---
0xb3 JUMPDEST
0xb4 STOP
---
0xb3: JUMPDEST 
0xb4: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb5
[0xb5:0xbb]
---
Predecessors: [0x4c]
Successors: [0xbc, 0xc0]
---
0xb5 JUMPDEST
0xb6 CALLVALUE
0xb7 ISZERO
0xb8 PUSH2 0xc0
0xbb JUMPI
---
0xb5: JUMPDEST 
0xb6: V52 = CALLVALUE
0xb7: V53 = ISZERO V52
0xb8: V54 = 0xc0
0xbb: JUMPI 0xc0 V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbc
[0xbc:0xbf]
---
Predecessors: [0xb5]
Successors: []
---
0xbc PUSH1 0x0
0xbe DUP1
0xbf REVERT
---
0xbc: V55 = 0x0
0xbf: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc0
[0xc0:0xd5]
---
Predecessors: [0xb5]
Successors: [0x23c]
---
0xc0 JUMPDEST
0xc1 PUSH2 0xd6
0xc4 PUSH1 0x4
0xc6 DUP1
0xc7 DUP1
0xc8 CALLDATALOAD
0xc9 SWAP1
0xca PUSH1 0x20
0xcc ADD
0xcd SWAP1
0xce SWAP2
0xcf SWAP1
0xd0 POP
0xd1 POP
0xd2 PUSH2 0x23c
0xd5 JUMP
---
0xc0: JUMPDEST 
0xc1: V56 = 0xd6
0xc4: V57 = 0x4
0xc8: V58 = CALLDATALOAD 0x4
0xca: V59 = 0x20
0xcc: V60 = ADD 0x20 0x4
0xd2: V61 = 0x23c
0xd5: JUMP 0x23c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd6, V58]
Exit stack: [V11, 0xd6, V58]

================================

Block 0xd6
[0xd6:0xf3]
---
Predecessors: [0x23c]
Successors: []
---
0xd6 JUMPDEST
0xd7 PUSH1 0x40
0xd9 MLOAD
0xda DUP1
0xdb DUP3
0xdc PUSH1 0x0
0xde NOT
0xdf AND
0xe0 PUSH1 0x0
0xe2 NOT
0xe3 AND
0xe4 DUP2
0xe5 MSTORE
0xe6 PUSH1 0x20
0xe8 ADD
0xe9 SWAP2
0xea POP
0xeb POP
0xec PUSH1 0x40
0xee MLOAD
0xef DUP1
0xf0 SWAP2
0xf1 SUB
0xf2 SWAP1
0xf3 RETURN
---
0xd6: JUMPDEST 
0xd7: V62 = 0x40
0xd9: V63 = M[0x40]
0xdc: V64 = 0x0
0xde: V65 = NOT 0x0
0xdf: V66 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V152
0xe0: V67 = 0x0
0xe2: V68 = NOT 0x0
0xe3: V69 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V66
0xe5: M[V63] = V69
0xe6: V70 = 0x20
0xe8: V71 = ADD 0x20 V63
0xec: V72 = 0x40
0xee: V73 = M[0x40]
0xf1: V74 = SUB V71 V73
0xf3: RETURN V73 V74
---
Entry stack: [V11, V152]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xf4
[0xf4:0xfa]
---
Predecessors: [0x57]
Successors: [0xfb, 0xff]
---
0xf4 JUMPDEST
0xf5 CALLVALUE
0xf6 ISZERO
0xf7 PUSH2 0xff
0xfa JUMPI
---
0xf4: JUMPDEST 
0xf5: V75 = CALLVALUE
0xf6: V76 = ISZERO V75
0xf7: V77 = 0xff
0xfa: JUMPI 0xff V76
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfb
[0xfb:0xfe]
---
Predecessors: [0xf4]
Successors: []
---
0xfb PUSH1 0x0
0xfd DUP1
0xfe REVERT
---
0xfb: V78 = 0x0
0xfe: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xff
[0xff:0x106]
---
Predecessors: [0xf4]
Successors: [0x25b]
---
0xff JUMPDEST
0x100 PUSH2 0x107
0x103 PUSH2 0x25b
0x106 JUMP
---
0xff: JUMPDEST 
0x100: V79 = 0x107
0x103: V80 = 0x25b
0x106: JUMP 0x25b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x107]
Exit stack: [V11, 0x107]

================================

Block 0x107
[0x107:0x148]
---
Predecessors: [0x25b]
Successors: []
---
0x107 JUMPDEST
0x108 PUSH1 0x40
0x10a MLOAD
0x10b DUP1
0x10c DUP3
0x10d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x122 AND
0x123 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138 AND
0x139 DUP2
0x13a MSTORE
0x13b PUSH1 0x20
0x13d ADD
0x13e SWAP2
0x13f POP
0x140 POP
0x141 PUSH1 0x40
0x143 MLOAD
0x144 DUP1
0x145 SWAP2
0x146 SUB
0x147 SWAP1
0x148 RETURN
---
0x107: JUMPDEST 
0x108: V81 = 0x40
0x10a: V82 = M[0x40]
0x10d: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x122: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x123: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x138: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x13a: M[V82] = V86
0x13b: V87 = 0x20
0x13d: V88 = ADD 0x20 V82
0x141: V89 = 0x40
0x143: V90 = M[0x40]
0x146: V91 = SUB V88 V90
0x148: RETURN V90 V91
---
Entry stack: [V11, 0x107, V159]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x107]

================================

Block 0x149
[0x149:0x15e]
---
Predecessors: [0x62]
Successors: [0x280]
---
0x149 JUMPDEST
0x14a PUSH2 0x15f
0x14d PUSH1 0x4
0x14f DUP1
0x150 DUP1
0x151 CALLDATALOAD
0x152 SWAP1
0x153 PUSH1 0x20
0x155 ADD
0x156 SWAP1
0x157 SWAP2
0x158 SWAP1
0x159 POP
0x15a POP
0x15b PUSH2 0x280
0x15e JUMP
---
0x149: JUMPDEST 
0x14a: V92 = 0x15f
0x14d: V93 = 0x4
0x151: V94 = CALLDATALOAD 0x4
0x153: V95 = 0x20
0x155: V96 = ADD 0x20 0x4
0x15b: V97 = 0x280
0x15e: JUMP 0x280
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x15f, V94]
Exit stack: [V11, 0x15f, V94]

================================

Block 0x15f
[0x15f:0x160]
---
Predecessors: [0x389]
Successors: []
---
0x15f JUMPDEST
0x160 STOP
---
0x15f: JUMPDEST 
0x160: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x161
[0x161:0x166]
---
Predecessors: [0x7a]
Successors: [0x82]
---
0x161 JUMPDEST
0x162 PUSH1 0x1
0x164 SLOAD
0x165 DUP2
0x166 JUMP
---
0x161: JUMPDEST 
0x162: V98 = 0x1
0x164: V99 = S[0x1]
0x166: JUMP 0x82
---
Entry stack: [V11, 0x82]
Stack pops: 1
Stack additions: [S0, V99]
Exit stack: [V11, 0x82, V99]

================================

Block 0x167
[0x167:0x1bd]
---
Predecessors: [0xab]
Successors: [0x1be, 0x1c2]
---
0x167 JUMPDEST
0x168 PUSH1 0x0
0x16a DUP1
0x16b SWAP1
0x16c SLOAD
0x16d SWAP1
0x16e PUSH2 0x100
0x171 EXP
0x172 SWAP1
0x173 DIV
0x174 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x189 AND
0x18a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19f AND
0x1a0 CALLER
0x1a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b6 AND
0x1b7 EQ
0x1b8 ISZERO
0x1b9 ISZERO
0x1ba PUSH2 0x1c2
0x1bd JUMPI
---
0x167: JUMPDEST 
0x168: V100 = 0x0
0x16c: V101 = S[0x0]
0x16e: V102 = 0x100
0x171: V103 = EXP 0x100 0x0
0x173: V104 = DIV V101 0x1
0x174: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x189: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x18a: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x19f: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1a0: V109 = CALLER
0x1a1: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1b7: V112 = EQ V111 V108
0x1b8: V113 = ISZERO V112
0x1b9: V114 = ISZERO V113
0x1ba: V115 = 0x1c2
0x1bd: JUMPI 0x1c2 V114
---
Entry stack: [V11, 0xb3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb3]

================================

Block 0x1be
[0x1be:0x1c1]
---
Predecessors: [0x167]
Successors: []
---
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 REVERT
---
0x1be: V116 = 0x0
0x1c1: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb3]

================================

Block 0x1c2
[0x1c2:0x235]
---
Predecessors: [0x167]
Successors: [0x236, 0x23a]
---
0x1c2 JUMPDEST
0x1c3 PUSH1 0x0
0x1c5 DUP1
0x1c6 SWAP1
0x1c7 SLOAD
0x1c8 SWAP1
0x1c9 PUSH2 0x100
0x1cc EXP
0x1cd SWAP1
0x1ce DIV
0x1cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e4 AND
0x1e5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fa AND
0x1fb PUSH2 0x8fc
0x1fe ADDRESS
0x1ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x214 AND
0x215 BALANCE
0x216 SWAP1
0x217 DUP2
0x218 ISZERO
0x219 MUL
0x21a SWAP1
0x21b PUSH1 0x40
0x21d MLOAD
0x21e PUSH1 0x0
0x220 PUSH1 0x40
0x222 MLOAD
0x223 DUP1
0x224 DUP4
0x225 SUB
0x226 DUP2
0x227 DUP6
0x228 DUP9
0x229 DUP9
0x22a CALL
0x22b SWAP4
0x22c POP
0x22d POP
0x22e POP
0x22f POP
0x230 ISZERO
0x231 ISZERO
0x232 PUSH2 0x23a
0x235 JUMPI
---
0x1c2: JUMPDEST 
0x1c3: V117 = 0x0
0x1c7: V118 = S[0x0]
0x1c9: V119 = 0x100
0x1cc: V120 = EXP 0x100 0x0
0x1ce: V121 = DIV V118 0x1
0x1cf: V122 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e4: V123 = AND 0xffffffffffffffffffffffffffffffffffffffff V121
0x1e5: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fa: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x1fb: V126 = 0x8fc
0x1fe: V127 = ADDRESS
0x1ff: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x214: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x215: V130 = BALANCE V129
0x218: V131 = ISZERO V130
0x219: V132 = MUL V131 0x8fc
0x21b: V133 = 0x40
0x21d: V134 = M[0x40]
0x21e: V135 = 0x0
0x220: V136 = 0x40
0x222: V137 = M[0x40]
0x225: V138 = SUB V134 V137
0x22a: V139 = CALL V132 V125 V130 V137 V138 V137 0x0
0x230: V140 = ISZERO V139
0x231: V141 = ISZERO V140
0x232: V142 = 0x23a
0x235: JUMPI 0x23a V141
---
Entry stack: [V11, 0xb3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb3]

================================

Block 0x236
[0x236:0x239]
---
Predecessors: [0x1c2]
Successors: []
---
0x236 PUSH1 0x0
0x238 DUP1
0x239 REVERT
---
0x236: V143 = 0x0
0x239: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb3]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb3]

================================

Block 0x23a
[0x23a:0x23b]
---
Predecessors: [0x1c2]
Successors: [0xb3]
---
0x23a JUMPDEST
0x23b JUMP
---
0x23a: JUMPDEST 
0x23b: JUMP 0xb3
---
Entry stack: [V11, 0xb3]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x23c
[0x23c:0x25a]
---
Predecessors: [0xc0]
Successors: [0xd6]
---
0x23c JUMPDEST
0x23d PUSH1 0x0
0x23f DUP2
0x240 PUSH1 0x40
0x242 MLOAD
0x243 DUP1
0x244 DUP3
0x245 DUP2
0x246 MSTORE
0x247 PUSH1 0x20
0x249 ADD
0x24a SWAP2
0x24b POP
0x24c POP
0x24d PUSH1 0x40
0x24f MLOAD
0x250 DUP1
0x251 SWAP2
0x252 SUB
0x253 SWAP1
0x254 SHA3
0x255 SWAP1
0x256 POP
0x257 SWAP2
0x258 SWAP1
0x259 POP
0x25a JUMP
---
0x23c: JUMPDEST 
0x23d: V144 = 0x0
0x240: V145 = 0x40
0x242: V146 = M[0x40]
0x246: M[V146] = V58
0x247: V147 = 0x20
0x249: V148 = ADD 0x20 V146
0x24d: V149 = 0x40
0x24f: V150 = M[0x40]
0x252: V151 = SUB V148 V150
0x254: V152 = SHA3 V150 V151
0x25a: JUMP 0xd6
---
Entry stack: [V11, 0xd6, V58]
Stack pops: 2
Stack additions: [V152]
Exit stack: [V11, V152]

================================

Block 0x25b
[0x25b:0x27f]
---
Predecessors: [0xff]
Successors: [0x107]
---
0x25b JUMPDEST
0x25c PUSH1 0x0
0x25e DUP1
0x25f SWAP1
0x260 SLOAD
0x261 SWAP1
0x262 PUSH2 0x100
0x265 EXP
0x266 SWAP1
0x267 DIV
0x268 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27d AND
0x27e DUP2
0x27f JUMP
---
0x25b: JUMPDEST 
0x25c: V153 = 0x0
0x260: V154 = S[0x0]
0x262: V155 = 0x100
0x265: V156 = EXP 0x100 0x0
0x267: V157 = DIV V154 0x1
0x268: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x27d: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x27f: JUMP 0x107
---
Entry stack: [V11, 0x107]
Stack pops: 1
Stack additions: [S0, V159]
Exit stack: [V11, 0x107, V159]

================================

Block 0x280
[0x280:0x291]
---
Predecessors: [0x149]
Successors: [0x292, 0x389]
---
0x280 JUMPDEST
0x281 PUSH8 0x16345785d8a0000
0x28a CALLVALUE
0x28b LT
0x28c ISZERO
0x28d ISZERO
0x28e PUSH2 0x389
0x291 JUMPI
---
0x280: JUMPDEST 
0x281: V160 = 0x16345785d8a0000
0x28a: V161 = CALLVALUE
0x28b: V162 = LT V161 0x16345785d8a0000
0x28c: V163 = ISZERO V162
0x28d: V164 = ISZERO V163
0x28e: V165 = 0x389
0x291: JUMPI 0x389 V164
---
Entry stack: [V11, 0x15f, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V94]

================================

Block 0x292
[0x292:0x2b8]
---
Predecessors: [0x280]
Successors: [0x2b9, 0x388]
---
0x292 PUSH1 0x1
0x294 SLOAD
0x295 PUSH1 0x0
0x297 NOT
0x298 AND
0x299 DUP2
0x29a PUSH1 0x40
0x29c MLOAD
0x29d DUP1
0x29e DUP3
0x29f DUP2
0x2a0 MSTORE
0x2a1 PUSH1 0x20
0x2a3 ADD
0x2a4 SWAP2
0x2a5 POP
0x2a6 POP
0x2a7 PUSH1 0x40
0x2a9 MLOAD
0x2aa DUP1
0x2ab SWAP2
0x2ac SUB
0x2ad SWAP1
0x2ae SHA3
0x2af PUSH1 0x0
0x2b1 NOT
0x2b2 AND
0x2b3 EQ
0x2b4 ISZERO
0x2b5 PUSH2 0x388
0x2b8 JUMPI
---
0x292: V166 = 0x1
0x294: V167 = S[0x1]
0x295: V168 = 0x0
0x297: V169 = NOT 0x0
0x298: V170 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V167
0x29a: V171 = 0x40
0x29c: V172 = M[0x40]
0x2a0: M[V172] = V94
0x2a1: V173 = 0x20
0x2a3: V174 = ADD 0x20 V172
0x2a7: V175 = 0x40
0x2a9: V176 = M[0x40]
0x2ac: V177 = SUB V174 V176
0x2ae: V178 = SHA3 V176 V177
0x2af: V179 = 0x0
0x2b1: V180 = NOT 0x0
0x2b2: V181 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V178
0x2b3: V182 = EQ V181 V170
0x2b4: V183 = ISZERO V182
0x2b5: V184 = 0x388
0x2b8: JUMPI 0x388 V183
---
Entry stack: [V11, 0x15f, V94]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x15f, V94]

================================

Block 0x2b9
[0x2b9:0x32b]
---
Predecessors: [0x292]
Successors: [0x32c, 0x330]
---
0x2b9 PUSH1 0x0
0x2bb DUP1
0x2bc SWAP1
0x2bd SLOAD
0x2be SWAP1
0x2bf PUSH2 0x100
0x2c2 EXP
0x2c3 SWAP1
0x2c4 DIV
0x2c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2da AND
0x2db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f0 AND
0x2f1 PUSH2 0x8fc
0x2f4 ADDRESS
0x2f5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30a AND
0x30b BALANCE
0x30c SWAP1
0x30d DUP2
0x30e ISZERO
0x30f MUL
0x310 SWAP1
0x311 PUSH1 0x40
0x313 MLOAD
0x314 PUSH1 0x0
0x316 PUSH1 0x40
0x318 MLOAD
0x319 DUP1
0x31a DUP4
0x31b SUB
0x31c DUP2
0x31d DUP6
0x31e DUP9
0x31f DUP9
0x320 CALL
0x321 SWAP4
0x322 POP
0x323 POP
0x324 POP
0x325 POP
0x326 ISZERO
0x327 ISZERO
0x328 PUSH2 0x330
0x32b JUMPI
---
0x2b9: V185 = 0x0
0x2bd: V186 = S[0x0]
0x2bf: V187 = 0x100
0x2c2: V188 = EXP 0x100 0x0
0x2c4: V189 = DIV V186 0x1
0x2c5: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x2da: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x2db: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f0: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x2f1: V194 = 0x8fc
0x2f4: V195 = ADDRESS
0x2f5: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x30a: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x30b: V198 = BALANCE V197
0x30e: V199 = ISZERO V198
0x30f: V200 = MUL V199 0x8fc
0x311: V201 = 0x40
0x313: V202 = M[0x40]
0x314: V203 = 0x0
0x316: V204 = 0x40
0x318: V205 = M[0x40]
0x31b: V206 = SUB V202 V205
0x320: V207 = CALL V200 V193 V198 V205 V206 V205 0x0
0x326: V208 = ISZERO V207
0x327: V209 = ISZERO V208
0x328: V210 = 0x330
0x32b: JUMPI 0x330 V209
---
Entry stack: [V11, 0x15f, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V94]

================================

Block 0x32c
[0x32c:0x32f]
---
Predecessors: [0x2b9]
Successors: []
---
0x32c PUSH1 0x0
0x32e DUP1
0x32f REVERT
---
0x32c: V211 = 0x0
0x32f: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15f, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V94]

================================

Block 0x330
[0x330:0x382]
---
Predecessors: [0x2b9]
Successors: [0x383, 0x387]
---
0x330 JUMPDEST
0x331 CALLER
0x332 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x347 AND
0x348 PUSH2 0x8fc
0x34b ADDRESS
0x34c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x361 AND
0x362 BALANCE
0x363 SWAP1
0x364 DUP2
0x365 ISZERO
0x366 MUL
0x367 SWAP1
0x368 PUSH1 0x40
0x36a MLOAD
0x36b PUSH1 0x0
0x36d PUSH1 0x40
0x36f MLOAD
0x370 DUP1
0x371 DUP4
0x372 SUB
0x373 DUP2
0x374 DUP6
0x375 DUP9
0x376 DUP9
0x377 CALL
0x378 SWAP4
0x379 POP
0x37a POP
0x37b POP
0x37c POP
0x37d ISZERO
0x37e ISZERO
0x37f PUSH2 0x387
0x382 JUMPI
---
0x330: JUMPDEST 
0x331: V212 = CALLER
0x332: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x347: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x348: V215 = 0x8fc
0x34b: V216 = ADDRESS
0x34c: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x361: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x362: V219 = BALANCE V218
0x365: V220 = ISZERO V219
0x366: V221 = MUL V220 0x8fc
0x368: V222 = 0x40
0x36a: V223 = M[0x40]
0x36b: V224 = 0x0
0x36d: V225 = 0x40
0x36f: V226 = M[0x40]
0x372: V227 = SUB V223 V226
0x377: V228 = CALL V221 V214 V219 V226 V227 V226 0x0
0x37d: V229 = ISZERO V228
0x37e: V230 = ISZERO V229
0x37f: V231 = 0x387
0x382: JUMPI 0x387 V230
---
Entry stack: [V11, 0x15f, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V94]

================================

Block 0x383
[0x383:0x386]
---
Predecessors: [0x330]
Successors: []
---
0x383 PUSH1 0x0
0x385 DUP1
0x386 REVERT
---
0x383: V232 = 0x0
0x386: REVERT 0x0 0x0
---
Entry stack: [V11, 0x15f, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V94]

================================

Block 0x387
[0x387:0x387]
---
Predecessors: [0x330]
Successors: [0x388]
---
0x387 JUMPDEST
---
0x387: JUMPDEST 
---
Entry stack: [V11, 0x15f, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V94]

================================

Block 0x388
[0x388:0x388]
---
Predecessors: [0x292, 0x387]
Successors: [0x389]
---
0x388 JUMPDEST
---
0x388: JUMPDEST 
---
Entry stack: [V11, 0x15f, V94]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x15f, V94]

================================

Block 0x389
[0x389:0x38b]
---
Predecessors: [0x280, 0x388]
Successors: [0x15f]
---
0x389 JUMPDEST
0x38a POP
0x38b JUMP
---
0x389: JUMPDEST 
0x38b: JUMP 0x15f
---
Entry stack: [V11, 0x15f, V94]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x38c
[0x38c:0x3b7]
---
Predecessors: []
Successors: []
---
0x38c STOP
0x38d LOG1
0x38e PUSH6 0x627a7a723058
0x395 SHA3
0x396 DUP2
0x397 EXP
0x398 SDIV
0x399 ADD
0x39a SIGNEXTEND
0x39b BLOCKHASH
0x39c MISSING 0x46
0x39d SWAP11
0x39e MISSING 0x49
0x39f POP
0x3a0 STOP
0x3a1 MISSING 0xe1
0x3a2 PUSH20 0x52ea1f82f75633698290466fd664c28e27aada00
0x3b7 MISSING 0x29
---
0x38c: STOP 
0x38d: LOG S0 S1 S2
0x38e: V233 = 0x627a7a723058
0x395: V234 = SHA3 0x627a7a723058 S3
0x397: V235 = EXP S4 V234
0x398: V236 = SDIV V235 S4
0x399: V237 = ADD V236 S5
0x39a: V238 = SIGNEXTEND V237 S6
0x39b: V239 = BLOCKHASH V238
0x39c: MISSING 0x46
0x39e: MISSING 0x49
0x3a0: STOP 
0x3a1: MISSING 0xe1
0x3a2: V240 = 0x52ea1f82f75633698290466fd664c28e27aada00
0x3b7: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V239, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, 0x52ea1f82f75633698290466fd664c28e27aada00]
Exit stack: []

================================

Function 0:
Public function signature: 0x3943380c
Entry block: 0x6f
Exit block: 0x82
Body: 0x6f, 0x76, 0x7a, 0x82, 0x161

Function 1:
Public function signature: 0x57ea89b6
Entry block: 0xa0
Exit block: 0xb3
Body: 0xa0, 0xa7, 0xab, 0xb3, 0x167, 0x1be, 0x1c2, 0x236, 0x23a

Function 2:
Public function signature: 0xa5db5463
Entry block: 0xb5
Exit block: 0xd6
Body: 0xb5, 0xbc, 0xc0, 0xd6, 0x23c

Function 3:
Public function signature: 0xb4a99a4e
Entry block: 0xf4
Exit block: 0x107
Body: 0xf4, 0xfb, 0xff, 0x107, 0x25b

Function 4:
Public function signature: 0xb7387e66
Entry block: 0x149
Exit block: 0x383
Body: 0x149, 0x15f, 0x280, 0x292, 0x2b9, 0x32c, 0x330, 0x383, 0x387, 0x388, 0x389

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

