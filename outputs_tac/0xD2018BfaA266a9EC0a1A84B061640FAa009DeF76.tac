Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x6e]
---
0x41 DUP1
0x42 PUSH4 0xb1976a02
0x47 EQ
0x48 PUSH2 0x6e
0x4b JUMPI
---
0x42: V15 = 0xb1976a02
0x47: V16 = EQ 0xb1976a02 V11
0x48: V17 = 0x6e
0x4b: JUMPI 0x6e V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x78]
---
0x4c DUP1
0x4d PUSH4 0xb4a99a4e
0x52 EQ
0x53 PUSH2 0x78
0x56 JUMPI
---
0x4d: V18 = 0xb4a99a4e
0x52: V19 = EQ 0xb4a99a4e V11
0x53: V20 = 0x78
0x56: JUMPI 0x78 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xcd]
---
0x57 DUP1
0x58 PUSH4 0xba21d62a
0x5d EQ
0x5e PUSH2 0xcd
0x61 JUMPI
---
0x58: V21 = 0xba21d62a
0x5d: V22 = EQ 0xba21d62a V11
0x5e: V23 = 0xcd
0x61: JUMPI 0xcd V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0xd]
Successors: [0x13e]
---
0x64 JUMPDEST
0x65 PUSH2 0x6c
0x68 PUSH2 0x13e
0x6b JUMP
---
0x64: JUMPDEST 
0x65: V24 = 0x6c
0x68: V25 = 0x13e
0x6b: JUMP 0x13e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x2ae]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x75]
---
Predecessors: [0x41]
Successors: [0x2b0]
---
0x6e JUMPDEST
0x6f PUSH2 0x76
0x72 PUSH2 0x2b0
0x75 JUMP
---
0x6e: JUMPDEST 
0x6f: V26 = 0x76
0x72: V27 = 0x2b0
0x75: JUMP 0x2b0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x76]
Exit stack: [V11, 0x76]

================================

Block 0x76
[0x76:0x77]
---
Predecessors: [0x390]
Successors: []
---
0x76 JUMPDEST
0x77 STOP
---
0x76: JUMPDEST 
0x77: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7e]
---
Predecessors: [0x4c]
Successors: [0x7f, 0x83]
---
0x78 JUMPDEST
0x79 CALLVALUE
0x7a ISZERO
0x7b PUSH2 0x83
0x7e JUMPI
---
0x78: JUMPDEST 
0x79: V28 = CALLVALUE
0x7a: V29 = ISZERO V28
0x7b: V30 = 0x83
0x7e: JUMPI 0x83 V29
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7f
[0x7f:0x82]
---
Predecessors: [0x78]
Successors: []
---
0x7f PUSH1 0x0
0x81 DUP1
0x82 REVERT
---
0x7f: V31 = 0x0
0x82: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8a]
---
Predecessors: [0x78]
Successors: [0x392]
---
0x83 JUMPDEST
0x84 PUSH2 0x8b
0x87 PUSH2 0x392
0x8a JUMP
---
0x83: JUMPDEST 
0x84: V32 = 0x8b
0x87: V33 = 0x392
0x8a: JUMP 0x392
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8b]
Exit stack: [V11, 0x8b]

================================

Block 0x8b
[0x8b:0xcc]
---
Predecessors: [0x392]
Successors: []
---
0x8b JUMPDEST
0x8c PUSH1 0x40
0x8e MLOAD
0x8f DUP1
0x90 DUP3
0x91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa6 AND
0xa7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbc AND
0xbd DUP2
0xbe MSTORE
0xbf PUSH1 0x20
0xc1 ADD
0xc2 SWAP2
0xc3 POP
0xc4 POP
0xc5 PUSH1 0x40
0xc7 MLOAD
0xc8 DUP1
0xc9 SWAP2
0xca SUB
0xcb SWAP1
0xcc RETURN
---
0x8b: JUMPDEST 
0x8c: V34 = 0x40
0x8e: V35 = M[0x40]
0x91: V36 = 0xffffffffffffffffffffffffffffffffffffffff
0xa6: V37 = AND 0xffffffffffffffffffffffffffffffffffffffff V199
0xa7: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xbc: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V37
0xbe: M[V35] = V39
0xbf: V40 = 0x20
0xc1: V41 = ADD 0x20 V35
0xc5: V42 = 0x40
0xc7: V43 = M[0x40]
0xca: V44 = SUB V41 V43
0xcc: RETURN V43 V44
---
Entry stack: [V11, 0x8b, V199]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8b]

================================

Block 0xcd
[0xcd:0x13b]
---
Predecessors: [0x57]
Successors: [0x3b7]
---
0xcd JUMPDEST
0xce PUSH2 0x13c
0xd1 PUSH1 0x4
0xd3 DUP1
0xd4 DUP1
0xd5 CALLDATALOAD
0xd6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb AND
0xec SWAP1
0xed PUSH1 0x20
0xef ADD
0xf0 SWAP1
0xf1 SWAP2
0xf2 SWAP1
0xf3 DUP1
0xf4 CALLDATALOAD
0xf5 SWAP1
0xf6 PUSH1 0x20
0xf8 ADD
0xf9 SWAP1
0xfa DUP3
0xfb ADD
0xfc DUP1
0xfd CALLDATALOAD
0xfe SWAP1
0xff PUSH1 0x20
0x101 ADD
0x102 SWAP1
0x103 DUP1
0x104 DUP1
0x105 PUSH1 0x1f
0x107 ADD
0x108 PUSH1 0x20
0x10a DUP1
0x10b SWAP2
0x10c DIV
0x10d MUL
0x10e PUSH1 0x20
0x110 ADD
0x111 PUSH1 0x40
0x113 MLOAD
0x114 SWAP1
0x115 DUP2
0x116 ADD
0x117 PUSH1 0x40
0x119 MSTORE
0x11a DUP1
0x11b SWAP4
0x11c SWAP3
0x11d SWAP2
0x11e SWAP1
0x11f DUP2
0x120 DUP2
0x121 MSTORE
0x122 PUSH1 0x20
0x124 ADD
0x125 DUP4
0x126 DUP4
0x127 DUP1
0x128 DUP3
0x129 DUP5
0x12a CALLDATACOPY
0x12b DUP3
0x12c ADD
0x12d SWAP2
0x12e POP
0x12f POP
0x130 POP
0x131 POP
0x132 POP
0x133 POP
0x134 SWAP2
0x135 SWAP1
0x136 POP
0x137 POP
0x138 PUSH2 0x3b7
0x13b JUMP
---
0xcd: JUMPDEST 
0xce: V45 = 0x13c
0xd1: V46 = 0x4
0xd5: V47 = CALLDATALOAD 0x4
0xd6: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb: V49 = AND 0xffffffffffffffffffffffffffffffffffffffff V47
0xed: V50 = 0x20
0xef: V51 = ADD 0x20 0x4
0xf4: V52 = CALLDATALOAD 0x24
0xf6: V53 = 0x20
0xf8: V54 = ADD 0x20 0x24
0xfb: V55 = ADD 0x4 V52
0xfd: V56 = CALLDATALOAD V55
0xff: V57 = 0x20
0x101: V58 = ADD 0x20 V55
0x105: V59 = 0x1f
0x107: V60 = ADD 0x1f V56
0x108: V61 = 0x20
0x10c: V62 = DIV V60 0x20
0x10d: V63 = MUL V62 0x20
0x10e: V64 = 0x20
0x110: V65 = ADD 0x20 V63
0x111: V66 = 0x40
0x113: V67 = M[0x40]
0x116: V68 = ADD V67 V65
0x117: V69 = 0x40
0x119: M[0x40] = V68
0x121: M[V67] = V56
0x122: V70 = 0x20
0x124: V71 = ADD 0x20 V67
0x12a: CALLDATACOPY V71 V58 V56
0x12c: V72 = ADD V71 V56
0x138: V73 = 0x3b7
0x13b: JUMP 0x3b7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x13c, V49, V67]
Exit stack: [V11, 0x13c, V49, V67]

================================

Block 0x13c
[0x13c:0x13d]
---
Predecessors: [0x485]
Successors: []
---
0x13c JUMPDEST
0x13d STOP
---
0x13c: JUMPDEST 
0x13d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13e
[0x13e:0x186]
---
Predecessors: [0x64]
Successors: [0x187, 0x1db]
---
0x13e JUMPDEST
0x13f PUSH20 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6
0x154 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x169 AND
0x16a CALLER
0x16b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x180 AND
0x181 EQ
0x182 ISZERO
0x183 PUSH2 0x1db
0x186 JUMPI
---
0x13e: JUMPDEST 
0x13f: V74 = 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6
0x154: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x169: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6
0x16a: V77 = CALLER
0x16b: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x180: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x181: V80 = EQ V79 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6
0x182: V81 = ISZERO V80
0x183: V82 = 0x1db
0x186: JUMPI 0x1db V81
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x187
[0x187:0x1da]
---
Predecessors: [0x13e]
Successors: [0x1db]
---
0x187 PUSH20 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6
0x19c PUSH1 0x0
0x19e DUP1
0x19f PUSH2 0x100
0x1a2 EXP
0x1a3 DUP2
0x1a4 SLOAD
0x1a5 DUP2
0x1a6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bb MUL
0x1bc NOT
0x1bd AND
0x1be SWAP1
0x1bf DUP4
0x1c0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d5 AND
0x1d6 MUL
0x1d7 OR
0x1d8 SWAP1
0x1d9 SSTORE
0x1da POP
---
0x187: V83 = 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6
0x19c: V84 = 0x0
0x19f: V85 = 0x100
0x1a2: V86 = EXP 0x100 0x0
0x1a4: V87 = S[0x0]
0x1a6: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V89 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1bc: V90 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1bd: V91 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V87
0x1c0: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d5: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6
0x1d6: V94 = MUL 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6 0x1
0x1d7: V95 = OR 0x1fb3acdba788ca50ce165e5a4151f05187c67cd6 V91
0x1d9: S[0x0] = V95
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x1db
[0x1db:0x231]
---
Predecessors: [0x13e, 0x187]
Successors: [0x232, 0x236]
---
0x1db JUMPDEST
0x1dc PUSH1 0x0
0x1de DUP1
0x1df SWAP1
0x1e0 SLOAD
0x1e1 SWAP1
0x1e2 PUSH2 0x100
0x1e5 EXP
0x1e6 SWAP1
0x1e7 DIV
0x1e8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fd AND
0x1fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x213 AND
0x214 CALLER
0x215 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22a AND
0x22b EQ
0x22c ISZERO
0x22d ISZERO
0x22e PUSH2 0x236
0x231 JUMPI
---
0x1db: JUMPDEST 
0x1dc: V96 = 0x0
0x1e0: V97 = S[0x0]
0x1e2: V98 = 0x100
0x1e5: V99 = EXP 0x100 0x0
0x1e7: V100 = DIV V97 0x1
0x1e8: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fd: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x1fe: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x213: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x214: V105 = CALLER
0x215: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x22a: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x22b: V108 = EQ V107 V104
0x22c: V109 = ISZERO V108
0x22d: V110 = ISZERO V109
0x22e: V111 = 0x236
0x231: JUMPI 0x236 V110
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x232
[0x232:0x235]
---
Predecessors: [0x1db]
Successors: []
---
0x232 PUSH1 0x0
0x234 DUP1
0x235 REVERT
---
0x232: V112 = 0x0
0x235: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x236
[0x236:0x2a9]
---
Predecessors: [0x1db]
Successors: [0x2aa, 0x2ae]
---
0x236 JUMPDEST
0x237 PUSH1 0x0
0x239 DUP1
0x23a SWAP1
0x23b SLOAD
0x23c SWAP1
0x23d PUSH2 0x100
0x240 EXP
0x241 SWAP1
0x242 DIV
0x243 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x258 AND
0x259 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26e AND
0x26f PUSH2 0x8fc
0x272 ADDRESS
0x273 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x288 AND
0x289 BALANCE
0x28a SWAP1
0x28b DUP2
0x28c ISZERO
0x28d MUL
0x28e SWAP1
0x28f PUSH1 0x40
0x291 MLOAD
0x292 PUSH1 0x0
0x294 PUSH1 0x40
0x296 MLOAD
0x297 DUP1
0x298 DUP4
0x299 SUB
0x29a DUP2
0x29b DUP6
0x29c DUP9
0x29d DUP9
0x29e CALL
0x29f SWAP4
0x2a0 POP
0x2a1 POP
0x2a2 POP
0x2a3 POP
0x2a4 ISZERO
0x2a5 ISZERO
0x2a6 PUSH2 0x2ae
0x2a9 JUMPI
---
0x236: JUMPDEST 
0x237: V113 = 0x0
0x23b: V114 = S[0x0]
0x23d: V115 = 0x100
0x240: V116 = EXP 0x100 0x0
0x242: V117 = DIV V114 0x1
0x243: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x258: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x259: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x26f: V122 = 0x8fc
0x272: V123 = ADDRESS
0x273: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x288: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x289: V126 = BALANCE V125
0x28c: V127 = ISZERO V126
0x28d: V128 = MUL V127 0x8fc
0x28f: V129 = 0x40
0x291: V130 = M[0x40]
0x292: V131 = 0x0
0x294: V132 = 0x40
0x296: V133 = M[0x40]
0x299: V134 = SUB V130 V133
0x29e: V135 = CALL V128 V121 V126 V133 V134 V133 0x0
0x2a4: V136 = ISZERO V135
0x2a5: V137 = ISZERO V136
0x2a6: V138 = 0x2ae
0x2a9: JUMPI 0x2ae V137
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x2aa
[0x2aa:0x2ad]
---
Predecessors: [0x236]
Successors: []
---
0x2aa PUSH1 0x0
0x2ac DUP1
0x2ad REVERT
---
0x2aa: V139 = 0x0
0x2ad: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x2ae
[0x2ae:0x2af]
---
Predecessors: [0x236]
Successors: [0x6c]
---
0x2ae JUMPDEST
0x2af JUMP
---
0x2ae: JUMPDEST 
0x2af: JUMP 0x6c
---
Entry stack: [V11, 0x6c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2b0
[0x2b0:0x2c0]
---
Predecessors: [0x6e]
Successors: [0x2c1, 0x390]
---
0x2b0 JUMPDEST
0x2b1 PUSH8 0xde0b6b3a7640000
0x2ba CALLVALUE
0x2bb GT
0x2bc ISZERO
0x2bd PUSH2 0x390
0x2c0 JUMPI
---
0x2b0: JUMPDEST 
0x2b1: V140 = 0xde0b6b3a7640000
0x2ba: V141 = CALLVALUE
0x2bb: V142 = GT V141 0xde0b6b3a7640000
0x2bc: V143 = ISZERO V142
0x2bd: V144 = 0x390
0x2c0: JUMPI 0x390 V143
---
Entry stack: [V11, 0x76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x76]

================================

Block 0x2c1
[0x2c1:0x333]
---
Predecessors: [0x2b0]
Successors: [0x334, 0x338]
---
0x2c1 PUSH1 0x0
0x2c3 DUP1
0x2c4 SWAP1
0x2c5 SLOAD
0x2c6 SWAP1
0x2c7 PUSH2 0x100
0x2ca EXP
0x2cb SWAP1
0x2cc DIV
0x2cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e2 AND
0x2e3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f8 AND
0x2f9 PUSH2 0x8fc
0x2fc ADDRESS
0x2fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x312 AND
0x313 BALANCE
0x314 SWAP1
0x315 DUP2
0x316 ISZERO
0x317 MUL
0x318 SWAP1
0x319 PUSH1 0x40
0x31b MLOAD
0x31c PUSH1 0x0
0x31e PUSH1 0x40
0x320 MLOAD
0x321 DUP1
0x322 DUP4
0x323 SUB
0x324 DUP2
0x325 DUP6
0x326 DUP9
0x327 DUP9
0x328 CALL
0x329 SWAP4
0x32a POP
0x32b POP
0x32c POP
0x32d POP
0x32e ISZERO
0x32f ISZERO
0x330 PUSH2 0x338
0x333 JUMPI
---
0x2c1: V145 = 0x0
0x2c5: V146 = S[0x0]
0x2c7: V147 = 0x100
0x2ca: V148 = EXP 0x100 0x0
0x2cc: V149 = DIV V146 0x1
0x2cd: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e2: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x2e3: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f8: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V151
0x2f9: V154 = 0x8fc
0x2fc: V155 = ADDRESS
0x2fd: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x312: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x313: V158 = BALANCE V157
0x316: V159 = ISZERO V158
0x317: V160 = MUL V159 0x8fc
0x319: V161 = 0x40
0x31b: V162 = M[0x40]
0x31c: V163 = 0x0
0x31e: V164 = 0x40
0x320: V165 = M[0x40]
0x323: V166 = SUB V162 V165
0x328: V167 = CALL V160 V153 V158 V165 V166 V165 0x0
0x32e: V168 = ISZERO V167
0x32f: V169 = ISZERO V168
0x330: V170 = 0x338
0x333: JUMPI 0x338 V169
---
Entry stack: [V11, 0x76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x76]

================================

Block 0x334
[0x334:0x337]
---
Predecessors: [0x2c1]
Successors: []
---
0x334 PUSH1 0x0
0x336 DUP1
0x337 REVERT
---
0x334: V171 = 0x0
0x337: REVERT 0x0 0x0
---
Entry stack: [V11, 0x76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x76]

================================

Block 0x338
[0x338:0x38a]
---
Predecessors: [0x2c1]
Successors: [0x38b, 0x38f]
---
0x338 JUMPDEST
0x339 CALLER
0x33a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34f AND
0x350 PUSH2 0x8fc
0x353 ADDRESS
0x354 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x369 AND
0x36a BALANCE
0x36b SWAP1
0x36c DUP2
0x36d ISZERO
0x36e MUL
0x36f SWAP1
0x370 PUSH1 0x40
0x372 MLOAD
0x373 PUSH1 0x0
0x375 PUSH1 0x40
0x377 MLOAD
0x378 DUP1
0x379 DUP4
0x37a SUB
0x37b DUP2
0x37c DUP6
0x37d DUP9
0x37e DUP9
0x37f CALL
0x380 SWAP4
0x381 POP
0x382 POP
0x383 POP
0x384 POP
0x385 ISZERO
0x386 ISZERO
0x387 PUSH2 0x38f
0x38a JUMPI
---
0x338: JUMPDEST 
0x339: V172 = CALLER
0x33a: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x34f: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x350: V175 = 0x8fc
0x353: V176 = ADDRESS
0x354: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x369: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x36a: V179 = BALANCE V178
0x36d: V180 = ISZERO V179
0x36e: V181 = MUL V180 0x8fc
0x370: V182 = 0x40
0x372: V183 = M[0x40]
0x373: V184 = 0x0
0x375: V185 = 0x40
0x377: V186 = M[0x40]
0x37a: V187 = SUB V183 V186
0x37f: V188 = CALL V181 V174 V179 V186 V187 V186 0x0
0x385: V189 = ISZERO V188
0x386: V190 = ISZERO V189
0x387: V191 = 0x38f
0x38a: JUMPI 0x38f V190
---
Entry stack: [V11, 0x76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x76]

================================

Block 0x38b
[0x38b:0x38e]
---
Predecessors: [0x338]
Successors: []
---
0x38b PUSH1 0x0
0x38d DUP1
0x38e REVERT
---
0x38b: V192 = 0x0
0x38e: REVERT 0x0 0x0
---
Entry stack: [V11, 0x76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x76]

================================

Block 0x38f
[0x38f:0x38f]
---
Predecessors: [0x338]
Successors: [0x390]
---
0x38f JUMPDEST
---
0x38f: JUMPDEST 
---
Entry stack: [V11, 0x76]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x76]

================================

Block 0x390
[0x390:0x391]
---
Predecessors: [0x2b0, 0x38f]
Successors: [0x76]
---
0x390 JUMPDEST
0x391 JUMP
---
0x390: JUMPDEST 
0x391: JUMP 0x76
---
Entry stack: [V11, 0x76]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x392
[0x392:0x3b6]
---
Predecessors: [0x83]
Successors: [0x8b]
---
0x392 JUMPDEST
0x393 PUSH1 0x0
0x395 DUP1
0x396 SWAP1
0x397 SLOAD
0x398 SWAP1
0x399 PUSH2 0x100
0x39c EXP
0x39d SWAP1
0x39e DIV
0x39f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3b4 AND
0x3b5 DUP2
0x3b6 JUMP
---
0x392: JUMPDEST 
0x393: V193 = 0x0
0x397: V194 = S[0x0]
0x399: V195 = 0x100
0x39c: V196 = EXP 0x100 0x0
0x39e: V197 = DIV V194 0x1
0x39f: V198 = 0xffffffffffffffffffffffffffffffffffffffff
0x3b4: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x3b6: JUMP 0x8b
---
Entry stack: [V11, 0x8b]
Stack pops: 1
Stack additions: [S0, V199]
Exit stack: [V11, 0x8b, V199]

================================

Block 0x3b7
[0x3b7:0x40d]
---
Predecessors: [0xcd]
Successors: [0x40e, 0x412]
---
0x3b7 JUMPDEST
0x3b8 PUSH1 0x0
0x3ba DUP1
0x3bb SWAP1
0x3bc SLOAD
0x3bd SWAP1
0x3be PUSH2 0x100
0x3c1 EXP
0x3c2 SWAP1
0x3c3 DIV
0x3c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d9 AND
0x3da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ef AND
0x3f0 CALLER
0x3f1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x406 AND
0x407 EQ
0x408 ISZERO
0x409 ISZERO
0x40a PUSH2 0x412
0x40d JUMPI
---
0x3b7: JUMPDEST 
0x3b8: V200 = 0x0
0x3bc: V201 = S[0x0]
0x3be: V202 = 0x100
0x3c1: V203 = EXP 0x100 0x0
0x3c3: V204 = DIV V201 0x1
0x3c4: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d9: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x3da: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ef: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x3f0: V209 = CALLER
0x3f1: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x406: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x407: V212 = EQ V211 V208
0x408: V213 = ISZERO V212
0x409: V214 = ISZERO V213
0x40a: V215 = 0x412
0x40d: JUMPI 0x412 V214
---
Entry stack: [V11, 0x13c, V49, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, V49, V67]

================================

Block 0x40e
[0x40e:0x411]
---
Predecessors: [0x3b7]
Successors: []
---
0x40e PUSH1 0x0
0x410 DUP1
0x411 REVERT
---
0x40e: V216 = 0x0
0x411: REVERT 0x0 0x0
---
Entry stack: [V11, 0x13c, V49, V67]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x13c, V49, V67]

================================

Block 0x412
[0x412:0x43c]
---
Predecessors: [0x3b7]
Successors: [0x43d]
---
0x412 JUMPDEST
0x413 DUP2
0x414 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x429 AND
0x42a CALLVALUE
0x42b DUP3
0x42c PUSH1 0x40
0x42e MLOAD
0x42f DUP1
0x430 DUP3
0x431 DUP1
0x432 MLOAD
0x433 SWAP1
0x434 PUSH1 0x20
0x436 ADD
0x437 SWAP1
0x438 DUP1
0x439 DUP4
0x43a DUP4
0x43b PUSH1 0x0
---
0x412: JUMPDEST 
0x414: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x429: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x42a: V219 = CALLVALUE
0x42c: V220 = 0x40
0x42e: V221 = M[0x40]
0x432: V222 = M[V67]
0x434: V223 = 0x20
0x436: V224 = ADD 0x20 V67
0x43b: V225 = 0x0
---
Entry stack: [V11, 0x13c, V49, V67]
Stack pops: 2
Stack additions: [S1, S0, V218, V219, S0, V221, V221, V224, V222, V222, V221, V224, 0x0]
Exit stack: [V11, 0x13c, V49, V67, V218, V219, V67, V221, V221, V224, V222, V222, V221, V224, 0x0]

================================

Block 0x43d
[0x43d:0x445]
---
Predecessors: [0x412, 0x446]
Successors: [0x446, 0x458]
---
0x43d JUMPDEST
0x43e DUP4
0x43f DUP2
0x440 LT
0x441 ISZERO
0x442 PUSH2 0x458
0x445 JUMPI
---
0x43d: JUMPDEST 
0x440: V226 = LT S0 V222
0x441: V227 = ISZERO V226
0x442: V228 = 0x458
0x445: JUMPI 0x458 V227
---
Entry stack: [V11, 0x13c, V49, V67, V218, V219, V67, V221, V221, V224, V222, V222, V221, V224, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x13c, V49, V67, V218, V219, V67, V221, V221, V224, V222, V222, V221, V224, S0]

================================

Block 0x446
[0x446:0x457]
---
Predecessors: [0x43d]
Successors: [0x43d]
---
0x446 DUP1
0x447 DUP3
0x448 ADD
0x449 MLOAD
0x44a DUP2
0x44b DUP5
0x44c ADD
0x44d MSTORE
0x44e PUSH1 0x20
0x450 DUP2
0x451 ADD
0x452 SWAP1
0x453 POP
0x454 PUSH2 0x43d
0x457 JUMP
---
0x448: V229 = ADD V224 S0
0x449: V230 = M[V229]
0x44c: V231 = ADD V221 S0
0x44d: M[V231] = V230
0x44e: V232 = 0x20
0x451: V233 = ADD S0 0x20
0x454: V234 = 0x43d
0x457: JUMP 0x43d
---
Entry stack: [V11, 0x13c, V49, V67, V218, V219, V67, V221, V221, V224, V222, V222, V221, V224, S0]
Stack pops: 3
Stack additions: [S2, S1, V233]
Exit stack: [V11, 0x13c, V49, V67, V218, V219, V67, V221, V221, V224, V222, V222, V221, V224, V233]

================================

Block 0x458
[0x458:0x46b]
---
Predecessors: [0x43d]
Successors: [0x46c, 0x485]
---
0x458 JUMPDEST
0x459 POP
0x45a POP
0x45b POP
0x45c POP
0x45d SWAP1
0x45e POP
0x45f SWAP1
0x460 DUP2
0x461 ADD
0x462 SWAP1
0x463 PUSH1 0x1f
0x465 AND
0x466 DUP1
0x467 ISZERO
0x468 PUSH2 0x485
0x46b JUMPI
---
0x458: JUMPDEST 
0x461: V235 = ADD V222 V221
0x463: V236 = 0x1f
0x465: V237 = AND 0x1f V222
0x467: V238 = ISZERO V237
0x468: V239 = 0x485
0x46b: JUMPI 0x485 V238
---
Entry stack: [V11, 0x13c, V49, V67, V218, V219, V67, V221, V221, V224, V222, V222, V221, V224, S0]
Stack pops: 7
Stack additions: [V235, V237]
Exit stack: [V11, 0x13c, V49, V67, V218, V219, V67, V221, V235, V237]

================================

Block 0x46c
[0x46c:0x484]
---
Predecessors: [0x458]
Successors: [0x485]
---
0x46c DUP1
0x46d DUP3
0x46e SUB
0x46f DUP1
0x470 MLOAD
0x471 PUSH1 0x1
0x473 DUP4
0x474 PUSH1 0x20
0x476 SUB
0x477 PUSH2 0x100
0x47a EXP
0x47b SUB
0x47c NOT
0x47d AND
0x47e DUP2
0x47f MSTORE
0x480 PUSH1 0x20
0x482 ADD
0x483 SWAP2
0x484 POP
---
0x46e: V240 = SUB V235 V237
0x470: V241 = M[V240]
0x471: V242 = 0x1
0x474: V243 = 0x20
0x476: V244 = SUB 0x20 V237
0x477: V245 = 0x100
0x47a: V246 = EXP 0x100 V244
0x47b: V247 = SUB V246 0x1
0x47c: V248 = NOT V247
0x47d: V249 = AND V248 V241
0x47f: M[V240] = V249
0x480: V250 = 0x20
0x482: V251 = ADD 0x20 V240
---
Entry stack: [V11, 0x13c, V49, V67, V218, V219, V67, V221, V235, V237]
Stack pops: 2
Stack additions: [V251, S0]
Exit stack: [V11, 0x13c, V49, V67, V218, V219, V67, V221, V251, V237]

================================

Block 0x485
[0x485:0x4a2]
---
Predecessors: [0x458, 0x46c]
Successors: [0x13c]
---
0x485 JUMPDEST
0x486 POP
0x487 SWAP2
0x488 POP
0x489 POP
0x48a PUSH1 0x0
0x48c PUSH1 0x40
0x48e MLOAD
0x48f DUP1
0x490 DUP4
0x491 SUB
0x492 DUP2
0x493 DUP6
0x494 DUP8
0x495 PUSH2 0x8796
0x498 GAS
0x499 SUB
0x49a CALL
0x49b SWAP3
0x49c POP
0x49d POP
0x49e POP
0x49f POP
0x4a0 POP
0x4a1 POP
0x4a2 JUMP
---
0x485: JUMPDEST 
0x48a: V252 = 0x0
0x48c: V253 = 0x40
0x48e: V254 = M[0x40]
0x491: V255 = SUB S1 V254
0x495: V256 = 0x8796
0x498: V257 = GAS
0x499: V258 = SUB V257 0x8796
0x49a: V259 = CALL V258 V218 V219 V254 V255 V254 0x0
0x4a2: JUMP 0x13c
---
Entry stack: [V11, 0x13c, V49, V67, V218, V219, V67, V221, S1, V237]
Stack pops: 9
Stack additions: []
Exit stack: [V11]

================================

Block 0x4a3
[0x4a3:0x4d8]
---
Predecessors: []
Successors: []
---
0x4a3 STOP
0x4a4 LOG1
0x4a5 PUSH6 0x627a7a723058
0x4ac SHA3
0x4ad MISSING 0x5d
0x4ae POP
0x4af MISSING 0xcf
0x4b0 MISSING 0x2c
0x4b1 MISSING 0xb7
0x4b2 MISSING 0xf9
0x4b3 RETURN
0x4b4 MISSING 0x5f
0x4b5 MISSING 0xc4
0x4b6 CALLDATACOPY
0x4b7 MISSING 0xa5
0x4b8 MISSING 0xbc
0x4b9 PUSH12 0xb1ec783c17325668a0859f53
0x4c6 MISSING 0x1f
0x4c7 PUSH17 0xca037df11d0029
---
0x4a3: STOP 
0x4a4: LOG S0 S1 S2
0x4a5: V260 = 0x627a7a723058
0x4ac: V261 = SHA3 0x627a7a723058 S3
0x4ad: MISSING 0x5d
0x4af: MISSING 0xcf
0x4b0: MISSING 0x2c
0x4b1: MISSING 0xb7
0x4b2: MISSING 0xf9
0x4b3: RETURN S0 S1
0x4b4: MISSING 0x5f
0x4b5: MISSING 0xc4
0x4b6: CALLDATACOPY S0 S1 S2
0x4b7: MISSING 0xa5
0x4b8: MISSING 0xbc
0x4b9: V262 = 0xb1ec783c17325668a0859f53
0x4c6: MISSING 0x1f
0x4c7: V263 = 0xca037df11d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V261, 0xb1ec783c17325668a0859f53, 0xca037df11d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x64
Exit block: 0x6c
Body: 0x64, 0x6c, 0x13e, 0x187, 0x1db, 0x232, 0x236, 0x2aa, 0x2ae

Function 1:
Public function signature: 0xb1976a02
Entry block: 0x6e
Exit block: 0x38b
Body: 0x6e, 0x76, 0x2b0, 0x2c1, 0x334, 0x338, 0x38b, 0x38f, 0x390

Function 2:
Public function signature: 0xb4a99a4e
Entry block: 0x78
Exit block: 0x8b
Body: 0x78, 0x7f, 0x83, 0x8b, 0x392

Function 3:
Public function signature: 0xba21d62a
Entry block: 0xcd
Exit block: 0x13c
Body: 0xcd, 0x13c, 0x3b7, 0x40e, 0x412, 0x43d, 0x446, 0x458, 0x46c, 0x485

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

