Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x53]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x53
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x53
0xc: JUMPI 0x53 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x58]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x4fb2e45d
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x58
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x4fb2e45d
0x22: V15 = EQ V13 0x4fb2e45d
0x23: V16 = 0x58
0x26: JUMPI 0x58 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x8b]
---
0x27 DUP1
0x28 PUSH4 0x8da5cb5b
0x2d EQ
0x2e PUSH2 0x8b
0x31 JUMPI
---
0x28: V17 = 0x8da5cb5b
0x2d: V18 = EQ 0x8da5cb5b V13
0x2e: V19 = 0x8b
0x31: JUMPI 0x8b V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xba]
---
0x32 DUP1
0x33 PUSH4 0xbeabacc8
0x38 EQ
0x39 PUSH2 0xba
0x3c JUMPI
---
0x33: V20 = 0xbeabacc8
0x38: V21 = EQ 0xbeabacc8 V13
0x39: V22 = 0xba
0x3c: JUMPI 0xba V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xe2]
---
0x3d DUP1
0x3e PUSH4 0xc2bc2efc
0x43 EQ
0x44 PUSH2 0xe2
0x47 JUMPI
---
0x3e: V23 = 0xc2bc2efc
0x43: V24 = EQ 0xc2bc2efc V13
0x44: V25 = 0xe2
0x47: JUMPI 0xe2 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x113]
---
0x48 DUP1
0x49 PUSH4 0xeee78595
0x4e EQ
0x4f PUSH2 0x113
0x52 JUMPI
---
0x49: V26 = 0xeee78595
0x4e: V27 = EQ 0xeee78595 V13
0x4f: V28 = 0x113
0x52: JUMPI 0x113 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x57]
---
Predecessors: [0x0, 0x48]
Successors: []
---
0x53 JUMPDEST
0x54 PUSH1 0x0
0x56 DUP1
0x57 REVERT
---
0x53: JUMPDEST 
0x54: V29 = 0x0
0x57: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x58
[0x58:0x5e]
---
Predecessors: [0xd]
Successors: [0x5f, 0x63]
---
0x58 JUMPDEST
0x59 CALLVALUE
0x5a ISZERO
0x5b PUSH2 0x63
0x5e JUMPI
---
0x58: JUMPDEST 
0x59: V30 = CALLVALUE
0x5a: V31 = ISZERO V30
0x5b: V32 = 0x63
0x5e: JUMPI 0x63 V31
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x5f
[0x5f:0x62]
---
Predecessors: [0x58]
Successors: []
---
0x5f PUSH1 0x0
0x61 DUP1
0x62 REVERT
---
0x5f: V33 = 0x0
0x62: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x63
[0x63:0x76]
---
Predecessors: [0x58]
Successors: [0x13b]
---
0x63 JUMPDEST
0x64 PUSH2 0x77
0x67 PUSH1 0x1
0x69 PUSH1 0xa0
0x6b PUSH1 0x2
0x6d EXP
0x6e SUB
0x6f PUSH1 0x4
0x71 CALLDATALOAD
0x72 AND
0x73 PUSH2 0x13b
0x76 JUMP
---
0x63: JUMPDEST 
0x64: V34 = 0x77
0x67: V35 = 0x1
0x69: V36 = 0xa0
0x6b: V37 = 0x2
0x6d: V38 = EXP 0x2 0xa0
0x6e: V39 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f: V40 = 0x4
0x71: V41 = CALLDATALOAD 0x4
0x72: V42 = AND V41 0xffffffffffffffffffffffffffffffffffffffff
0x73: V43 = 0x13b
0x76: JUMP 0x13b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x77, V42]
Exit stack: [V13, 0x77, V42]

================================

Block 0x77
[0x77:0x8a]
---
Predecessors: [0x157, 0x223, 0x302]
Successors: []
---
0x77 JUMPDEST
0x78 PUSH1 0x40
0x7a MLOAD
0x7b SWAP1
0x7c ISZERO
0x7d ISZERO
0x7e DUP2
0x7f MSTORE
0x80 PUSH1 0x20
0x82 ADD
0x83 PUSH1 0x40
0x85 MLOAD
0x86 DUP1
0x87 SWAP2
0x88 SUB
0x89 SWAP1
0x8a RETURN
---
0x77: JUMPDEST 
0x78: V44 = 0x40
0x7a: V45 = M[0x40]
0x7c: V46 = ISZERO S0
0x7d: V47 = ISZERO V46
0x7f: M[V45] = V47
0x80: V48 = 0x20
0x82: V49 = ADD 0x20 V45
0x83: V50 = 0x40
0x85: V51 = M[0x40]
0x88: V52 = SUB V49 V51
0x8a: RETURN V51 V52
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x8b
[0x8b:0x91]
---
Predecessors: [0x27]
Successors: [0x92, 0x96]
---
0x8b JUMPDEST
0x8c CALLVALUE
0x8d ISZERO
0x8e PUSH2 0x96
0x91 JUMPI
---
0x8b: JUMPDEST 
0x8c: V53 = CALLVALUE
0x8d: V54 = ISZERO V53
0x8e: V55 = 0x96
0x91: JUMPI 0x96 V54
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x92
[0x92:0x95]
---
Predecessors: [0x8b]
Successors: []
---
0x92 PUSH1 0x0
0x94 DUP1
0x95 REVERT
---
0x92: V56 = 0x0
0x95: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x96
[0x96:0x9d]
---
Predecessors: [0x8b]
Successors: [0x189]
---
0x96 JUMPDEST
0x97 PUSH2 0x9e
0x9a PUSH2 0x189
0x9d JUMP
---
0x96: JUMPDEST 
0x97: V57 = 0x9e
0x9a: V58 = 0x189
0x9d: JUMP 0x189
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x9e]
Exit stack: [V13, 0x9e]

================================

Block 0x9e
[0x9e:0xb9]
---
Predecessors: [0x189]
Successors: []
---
0x9e JUMPDEST
0x9f PUSH1 0x40
0xa1 MLOAD
0xa2 PUSH1 0x1
0xa4 PUSH1 0xa0
0xa6 PUSH1 0x2
0xa8 EXP
0xa9 SUB
0xaa SWAP1
0xab SWAP2
0xac AND
0xad DUP2
0xae MSTORE
0xaf PUSH1 0x20
0xb1 ADD
0xb2 PUSH1 0x40
0xb4 MLOAD
0xb5 DUP1
0xb6 SWAP2
0xb7 SUB
0xb8 SWAP1
0xb9 RETURN
---
0x9e: JUMPDEST 
0x9f: V59 = 0x40
0xa1: V60 = M[0x40]
0xa2: V61 = 0x1
0xa4: V62 = 0xa0
0xa6: V63 = 0x2
0xa8: V64 = EXP 0x2 0xa0
0xa9: V65 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac: V66 = AND V164 0xffffffffffffffffffffffffffffffffffffffff
0xae: M[V60] = V66
0xaf: V67 = 0x20
0xb1: V68 = ADD 0x20 V60
0xb2: V69 = 0x40
0xb4: V70 = M[0x40]
0xb7: V71 = SUB V68 V70
0xb9: RETURN V70 V71
---
Entry stack: [V13, 0x9e, V164]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x9e]

================================

Block 0xba
[0xba:0xc0]
---
Predecessors: [0x32]
Successors: [0xc1, 0xc5]
---
0xba JUMPDEST
0xbb CALLVALUE
0xbc ISZERO
0xbd PUSH2 0xc5
0xc0 JUMPI
---
0xba: JUMPDEST 
0xbb: V72 = CALLVALUE
0xbc: V73 = ISZERO V72
0xbd: V74 = 0xc5
0xc0: JUMPI 0xc5 V73
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xc4]
---
Predecessors: [0xba]
Successors: []
---
0xc1 PUSH1 0x0
0xc3 DUP1
0xc4 REVERT
---
0xc1: V75 = 0x0
0xc4: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc5
[0xc5:0xe1]
---
Predecessors: [0xba]
Successors: [0x198]
---
0xc5 JUMPDEST
0xc6 PUSH2 0x77
0xc9 PUSH1 0x1
0xcb PUSH1 0xa0
0xcd PUSH1 0x2
0xcf EXP
0xd0 SUB
0xd1 PUSH1 0x4
0xd3 CALLDATALOAD
0xd4 DUP2
0xd5 AND
0xd6 SWAP1
0xd7 PUSH1 0x24
0xd9 CALLDATALOAD
0xda AND
0xdb PUSH1 0x44
0xdd CALLDATALOAD
0xde PUSH2 0x198
0xe1 JUMP
---
0xc5: JUMPDEST 
0xc6: V76 = 0x77
0xc9: V77 = 0x1
0xcb: V78 = 0xa0
0xcd: V79 = 0x2
0xcf: V80 = EXP 0x2 0xa0
0xd0: V81 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd1: V82 = 0x4
0xd3: V83 = CALLDATALOAD 0x4
0xd5: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V83
0xd7: V85 = 0x24
0xd9: V86 = CALLDATALOAD 0x24
0xda: V87 = AND V86 0xffffffffffffffffffffffffffffffffffffffff
0xdb: V88 = 0x44
0xdd: V89 = CALLDATALOAD 0x44
0xde: V90 = 0x198
0xe1: JUMP 0x198
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x77, V84, V87, V89]
Exit stack: [V13, 0x77, V84, V87, V89]

================================

Block 0xe2
[0xe2:0xe8]
---
Predecessors: [0x3d]
Successors: [0xe9, 0xed]
---
0xe2 JUMPDEST
0xe3 CALLVALUE
0xe4 ISZERO
0xe5 PUSH2 0xed
0xe8 JUMPI
---
0xe2: JUMPDEST 
0xe3: V91 = CALLVALUE
0xe4: V92 = ISZERO V91
0xe5: V93 = 0xed
0xe8: JUMPI 0xed V92
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xe9
[0xe9:0xec]
---
Predecessors: [0xe2]
Successors: []
---
0xe9 PUSH1 0x0
0xeb DUP1
0xec REVERT
---
0xe9: V94 = 0x0
0xec: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xed
[0xed:0x100]
---
Predecessors: [0xe2]
Successors: [0x248]
---
0xed JUMPDEST
0xee PUSH2 0x101
0xf1 PUSH1 0x1
0xf3 PUSH1 0xa0
0xf5 PUSH1 0x2
0xf7 EXP
0xf8 SUB
0xf9 PUSH1 0x4
0xfb CALLDATALOAD
0xfc AND
0xfd PUSH2 0x248
0x100 JUMP
---
0xed: JUMPDEST 
0xee: V95 = 0x101
0xf1: V96 = 0x1
0xf3: V97 = 0xa0
0xf5: V98 = 0x2
0xf7: V99 = EXP 0x2 0xa0
0xf8: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf9: V101 = 0x4
0xfb: V102 = CALLDATALOAD 0x4
0xfc: V103 = AND V102 0xffffffffffffffffffffffffffffffffffffffff
0xfd: V104 = 0x248
0x100: JUMP 0x248
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x101, V103]
Exit stack: [V13, 0x101, V103]

================================

Block 0x101
[0x101:0x112]
---
Predecessors: [0x248]
Successors: []
---
0x101 JUMPDEST
0x102 PUSH1 0x40
0x104 MLOAD
0x105 SWAP1
0x106 DUP2
0x107 MSTORE
0x108 PUSH1 0x20
0x10a ADD
0x10b PUSH1 0x40
0x10d MLOAD
0x10e DUP1
0x10f SWAP2
0x110 SUB
0x111 SWAP1
0x112 RETURN
---
0x101: JUMPDEST 
0x102: V105 = 0x40
0x104: V106 = M[0x40]
0x107: M[V106] = V246
0x108: V107 = 0x20
0x10a: V108 = ADD 0x20 V106
0x10b: V109 = 0x40
0x10d: V110 = M[0x40]
0x110: V111 = SUB V108 V110
0x112: RETURN V110 V111
---
Entry stack: [V13, V246]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x113
[0x113:0x119]
---
Predecessors: [0x48]
Successors: [0x11a, 0x11e]
---
0x113 JUMPDEST
0x114 CALLVALUE
0x115 ISZERO
0x116 PUSH2 0x11e
0x119 JUMPI
---
0x113: JUMPDEST 
0x114: V112 = CALLVALUE
0x115: V113 = ISZERO V112
0x116: V114 = 0x11e
0x119: JUMPI 0x11e V113
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x11a
[0x11a:0x11d]
---
Predecessors: [0x113]
Successors: []
---
0x11a PUSH1 0x0
0x11c DUP1
0x11d REVERT
---
0x11a: V115 = 0x0
0x11d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x11e
[0x11e:0x13a]
---
Predecessors: [0x113]
Successors: [0x263]
---
0x11e JUMPDEST
0x11f PUSH2 0x77
0x122 PUSH1 0x1
0x124 PUSH1 0xa0
0x126 PUSH1 0x2
0x128 EXP
0x129 SUB
0x12a PUSH1 0x4
0x12c CALLDATALOAD
0x12d DUP2
0x12e AND
0x12f SWAP1
0x130 PUSH1 0x24
0x132 CALLDATALOAD
0x133 AND
0x134 PUSH1 0x44
0x136 CALLDATALOAD
0x137 PUSH2 0x263
0x13a JUMP
---
0x11e: JUMPDEST 
0x11f: V116 = 0x77
0x122: V117 = 0x1
0x124: V118 = 0xa0
0x126: V119 = 0x2
0x128: V120 = EXP 0x2 0xa0
0x129: V121 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12a: V122 = 0x4
0x12c: V123 = CALLDATALOAD 0x4
0x12e: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x130: V125 = 0x24
0x132: V126 = CALLDATALOAD 0x24
0x133: V127 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x134: V128 = 0x44
0x136: V129 = CALLDATALOAD 0x44
0x137: V130 = 0x263
0x13a: JUMP 0x263
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x77, V124, V127, V129]
Exit stack: [V13, 0x77, V124, V127, V129]

================================

Block 0x13b
[0x13b:0x152]
---
Predecessors: [0x63]
Successors: [0x153, 0x157]
---
0x13b JUMPDEST
0x13c PUSH1 0x0
0x13e DUP1
0x13f SLOAD
0x140 CALLER
0x141 PUSH1 0x1
0x143 PUSH1 0xa0
0x145 PUSH1 0x2
0x147 EXP
0x148 SUB
0x149 SWAP1
0x14a DUP2
0x14b AND
0x14c SWAP2
0x14d AND
0x14e EQ
0x14f PUSH2 0x157
0x152 JUMPI
---
0x13b: JUMPDEST 
0x13c: V131 = 0x0
0x13f: V132 = S[0x0]
0x140: V133 = CALLER
0x141: V134 = 0x1
0x143: V135 = 0xa0
0x145: V136 = 0x2
0x147: V137 = EXP 0x2 0xa0
0x148: V138 = SUB 0x10000000000000000000000000000000000000000 0x1
0x14b: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x14d: V140 = AND V132 0xffffffffffffffffffffffffffffffffffffffff
0x14e: V141 = EQ V140 V139
0x14f: V142 = 0x157
0x152: JUMPI 0x157 V141
---
Entry stack: [V13, 0x77, V42]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x77, V42, 0x0]

================================

Block 0x153
[0x153:0x156]
---
Predecessors: [0x13b]
Successors: []
---
0x153 PUSH1 0x0
0x155 DUP1
0x156 REVERT
---
0x153: V143 = 0x0
0x156: REVERT 0x0 0x0
---
Entry stack: [V13, 0x77, V42, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x77, V42, 0x0]

================================

Block 0x157
[0x157:0x188]
---
Predecessors: [0x13b]
Successors: [0x77]
---
0x157 JUMPDEST
0x158 POP
0x159 PUSH1 0x0
0x15b DUP1
0x15c SLOAD
0x15d PUSH1 0x1
0x15f PUSH1 0xa0
0x161 PUSH1 0x2
0x163 EXP
0x164 SUB
0x165 DUP4
0x166 AND
0x167 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17c NOT
0x17d SWAP1
0x17e SWAP2
0x17f AND
0x180 OR
0x181 SWAP1
0x182 SSTORE
0x183 PUSH1 0x1
0x185 SWAP2
0x186 SWAP1
0x187 POP
0x188 JUMP
---
0x157: JUMPDEST 
0x159: V144 = 0x0
0x15c: V145 = S[0x0]
0x15d: V146 = 0x1
0x15f: V147 = 0xa0
0x161: V148 = 0x2
0x163: V149 = EXP 0x2 0xa0
0x164: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x166: V151 = AND V42 0xffffffffffffffffffffffffffffffffffffffff
0x167: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x17c: V153 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x17f: V154 = AND V145 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x180: V155 = OR V154 V151
0x182: S[0x0] = V155
0x183: V156 = 0x1
0x188: JUMP 0x77
---
Entry stack: [V13, 0x77, V42, 0x0]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x189
[0x189:0x197]
---
Predecessors: [0x96]
Successors: [0x9e]
---
0x189 JUMPDEST
0x18a PUSH1 0x0
0x18c SLOAD
0x18d PUSH1 0x1
0x18f PUSH1 0xa0
0x191 PUSH1 0x2
0x193 EXP
0x194 SUB
0x195 AND
0x196 DUP2
0x197 JUMP
---
0x189: JUMPDEST 
0x18a: V157 = 0x0
0x18c: V158 = S[0x0]
0x18d: V159 = 0x1
0x18f: V160 = 0xa0
0x191: V161 = 0x2
0x193: V162 = EXP 0x2 0xa0
0x194: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x195: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V158
0x197: JUMP 0x9e
---
Entry stack: [V13, 0x9e]
Stack pops: 1
Stack additions: [S0, V164]
Exit stack: [V13, 0x9e, V164]

================================

Block 0x198
[0x198:0x1a5]
---
Predecessors: [0xc5]
Successors: [0x1a6, 0x1aa]
---
0x198 JUMPDEST
0x199 PUSH1 0x0
0x19b PUSH1 0x60
0x19d PUSH1 0x64
0x19f CALLDATASIZE
0x1a0 LT
0x1a1 ISZERO
0x1a2 PUSH2 0x1aa
0x1a5 JUMPI
---
0x198: JUMPDEST 
0x199: V165 = 0x0
0x19b: V166 = 0x60
0x19d: V167 = 0x64
0x19f: V168 = CALLDATASIZE
0x1a0: V169 = LT V168 0x64
0x1a1: V170 = ISZERO V169
0x1a2: V171 = 0x1aa
0x1a5: JUMPI 0x1aa V170
---
Entry stack: [V13, 0x77, V84, V87, V89]
Stack pops: 0
Stack additions: [0x0, 0x60]
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60]

================================

Block 0x1a6
[0x1a6:0x1a9]
---
Predecessors: [0x198]
Successors: []
---
0x1a6 PUSH1 0x0
0x1a8 DUP1
0x1a9 REVERT
---
0x1a6: V172 = 0x0
0x1a9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60]

================================

Block 0x1aa
[0x1aa:0x1b1]
---
Predecessors: [0x198]
Successors: [0x315]
---
0x1aa JUMPDEST
0x1ab PUSH2 0x1b2
0x1ae PUSH2 0x315
0x1b1 JUMP
---
0x1aa: JUMPDEST 
0x1ab: V173 = 0x1b2
0x1ae: V174 = 0x315
0x1b1: JUMP 0x315
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60]
Stack pops: 0
Stack additions: [0x1b2]
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x1b2]

================================

Block 0x1b2
[0x1b2:0x1cc]
---
Predecessors: [0x3a7]
Successors: [0x1cd, 0x1d1]
---
0x1b2 JUMPDEST
0x1b3 PUSH1 0x1
0x1b5 PUSH1 0xa0
0x1b7 PUSH1 0x2
0x1b9 EXP
0x1ba SUB
0x1bb AND
0x1bc CALLER
0x1bd PUSH1 0x1
0x1bf PUSH1 0xa0
0x1c1 PUSH1 0x2
0x1c3 EXP
0x1c4 SUB
0x1c5 AND
0x1c6 EQ
0x1c7 ISZERO
0x1c8 ISZERO
0x1c9 PUSH2 0x1d1
0x1cc JUMPI
---
0x1b2: JUMPDEST 
0x1b3: V175 = 0x1
0x1b5: V176 = 0xa0
0x1b7: V177 = 0x2
0x1b9: V178 = EXP 0x2 0xa0
0x1ba: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bb: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x1bc: V181 = CALLER
0x1bd: V182 = 0x1
0x1bf: V183 = 0xa0
0x1c1: V184 = 0x2
0x1c3: V185 = EXP 0x2 0xa0
0x1c4: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c5: V187 = AND 0xffffffffffffffffffffffffffffffffffffffff V181
0x1c6: V188 = EQ V187 V180
0x1c7: V189 = ISZERO V188
0x1c8: V190 = ISZERO V189
0x1c9: V191 = 0x1d1
0x1cc: JUMPI 0x1d1 V190
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, V373]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60]

================================

Block 0x1cd
[0x1cd:0x1d0]
---
Predecessors: [0x1b2]
Successors: []
---
0x1cd PUSH1 0x0
0x1cf DUP1
0x1d0 REVERT
---
0x1cd: V192 = 0x0
0x1d0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60]

================================

Block 0x1d1
[0x1d1:0x1f3]
---
Predecessors: [0x1b2]
Successors: [0x3b5]
---
0x1d1 JUMPDEST
0x1d2 PUSH1 0x1
0x1d4 PUSH1 0xa0
0x1d6 PUSH1 0x2
0x1d8 EXP
0x1d9 SUB
0x1da DUP6
0x1db AND
0x1dc PUSH1 0x0
0x1de SWAP1
0x1df DUP2
0x1e0 MSTORE
0x1e1 PUSH1 0x2
0x1e3 PUSH1 0x20
0x1e5 MSTORE
0x1e6 PUSH1 0x40
0x1e8 SWAP1
0x1e9 SHA3
0x1ea SLOAD
0x1eb PUSH2 0x1f4
0x1ee SWAP1
0x1ef DUP5
0x1f0 PUSH2 0x3b5
0x1f3 JUMP
---
0x1d1: JUMPDEST 
0x1d2: V193 = 0x1
0x1d4: V194 = 0xa0
0x1d6: V195 = 0x2
0x1d8: V196 = EXP 0x2 0xa0
0x1d9: V197 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1db: V198 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0x1dc: V199 = 0x0
0x1e0: M[0x0] = V198
0x1e1: V200 = 0x2
0x1e3: V201 = 0x20
0x1e5: M[0x20] = 0x2
0x1e6: V202 = 0x40
0x1e9: V203 = SHA3 0x0 0x40
0x1ea: V204 = S[V203]
0x1eb: V205 = 0x1f4
0x1f0: V206 = 0x3b5
0x1f3: JUMP 0x3b5
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x1f4, V204, S2]
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x1f4, V204, V89]

================================

Block 0x1f4
[0x1f4:0x222]
---
Predecessors: [0x3c4]
Successors: [0x3ca]
---
0x1f4 JUMPDEST
0x1f5 PUSH1 0x1
0x1f7 PUSH1 0xa0
0x1f9 PUSH1 0x2
0x1fb EXP
0x1fc SUB
0x1fd DUP1
0x1fe DUP8
0x1ff AND
0x200 PUSH1 0x0
0x202 SWAP1
0x203 DUP2
0x204 MSTORE
0x205 PUSH1 0x2
0x207 PUSH1 0x20
0x209 MSTORE
0x20a PUSH1 0x40
0x20c DUP1
0x20d DUP3
0x20e SHA3
0x20f SWAP4
0x210 SWAP1
0x211 SWAP4
0x212 SSTORE
0x213 SWAP1
0x214 DUP7
0x215 AND
0x216 DUP2
0x217 MSTORE
0x218 SHA3
0x219 SLOAD
0x21a PUSH2 0x223
0x21d SWAP1
0x21e DUP5
0x21f PUSH2 0x3ca
0x222 JUMP
---
0x1f4: JUMPDEST 
0x1f5: V207 = 0x1
0x1f7: V208 = 0xa0
0x1f9: V209 = 0x2
0x1fb: V210 = EXP 0x2 0xa0
0x1fc: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ff: V212 = AND V84 0xffffffffffffffffffffffffffffffffffffffff
0x200: V213 = 0x0
0x204: M[0x0] = V212
0x205: V214 = 0x2
0x207: V215 = 0x20
0x209: M[0x20] = 0x2
0x20a: V216 = 0x40
0x20e: V217 = SHA3 0x0 0x40
0x212: S[V217] = V379
0x215: V218 = AND V87 0xffffffffffffffffffffffffffffffffffffffff
0x217: M[0x0] = V218
0x218: V219 = SHA3 0x0 0x40
0x219: V220 = S[V219]
0x21a: V221 = 0x223
0x21f: V222 = 0x3ca
0x222: JUMP 0x3ca
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, V379]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x223, V220, S3]
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x223, V220, V89]

================================

Block 0x223
[0x223:0x247]
---
Predecessors: [0x3db]
Successors: [0x77]
---
0x223 JUMPDEST
0x224 PUSH1 0x1
0x226 PUSH1 0xa0
0x228 PUSH1 0x2
0x22a EXP
0x22b SUB
0x22c DUP6
0x22d AND
0x22e PUSH1 0x0
0x230 SWAP1
0x231 DUP2
0x232 MSTORE
0x233 PUSH1 0x2
0x235 PUSH1 0x20
0x237 MSTORE
0x238 PUSH1 0x40
0x23a SWAP1
0x23b SHA3
0x23c SSTORE
0x23d PUSH1 0x1
0x23f SWAP2
0x240 POP
0x241 POP
0x242 SWAP4
0x243 SWAP3
0x244 POP
0x245 POP
0x246 POP
0x247 JUMP
---
0x223: JUMPDEST 
0x224: V223 = 0x1
0x226: V224 = 0xa0
0x228: V225 = 0x2
0x22a: V226 = EXP 0x2 0xa0
0x22b: V227 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22d: V228 = AND V87 0xffffffffffffffffffffffffffffffffffffffff
0x22e: V229 = 0x0
0x232: M[0x0] = V228
0x233: V230 = 0x2
0x235: V231 = 0x20
0x237: M[0x20] = 0x2
0x238: V232 = 0x40
0x23b: V233 = SHA3 0x0 0x40
0x23c: S[V233] = V386
0x23d: V234 = 0x1
0x247: JUMP 0x77
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, V386]
Stack pops: 7
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x248
[0x248:0x262]
---
Predecessors: [0xed]
Successors: [0x101]
---
0x248 JUMPDEST
0x249 PUSH1 0x1
0x24b PUSH1 0xa0
0x24d PUSH1 0x2
0x24f EXP
0x250 SUB
0x251 AND
0x252 PUSH1 0x0
0x254 SWAP1
0x255 DUP2
0x256 MSTORE
0x257 PUSH1 0x2
0x259 PUSH1 0x20
0x25b MSTORE
0x25c PUSH1 0x40
0x25e SWAP1
0x25f SHA3
0x260 SLOAD
0x261 SWAP1
0x262 JUMP
---
0x248: JUMPDEST 
0x249: V235 = 0x1
0x24b: V236 = 0xa0
0x24d: V237 = 0x2
0x24f: V238 = EXP 0x2 0xa0
0x250: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x251: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x252: V241 = 0x0
0x256: M[0x0] = V240
0x257: V242 = 0x2
0x259: V243 = 0x20
0x25b: M[0x20] = 0x2
0x25c: V244 = 0x40
0x25f: V245 = SHA3 0x0 0x40
0x260: V246 = S[V245]
0x262: JUMP 0x101
---
Entry stack: [V13, 0x101, V103]
Stack pops: 2
Stack additions: [V246]
Exit stack: [V13, V246]

================================

Block 0x263
[0x263:0x271]
---
Predecessors: [0x11e]
Successors: [0x272, 0x276]
---
0x263 JUMPDEST
0x264 PUSH1 0x0
0x266 DUP1
0x267 PUSH1 0x60
0x269 PUSH1 0x64
0x26b CALLDATASIZE
0x26c LT
0x26d ISZERO
0x26e PUSH2 0x276
0x271 JUMPI
---
0x263: JUMPDEST 
0x264: V247 = 0x0
0x267: V248 = 0x60
0x269: V249 = 0x64
0x26b: V250 = CALLDATASIZE
0x26c: V251 = LT V250 0x64
0x26d: V252 = ISZERO V251
0x26e: V253 = 0x276
0x271: JUMPI 0x276 V252
---
Entry stack: [V13, 0x77, V124, V127, V129]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x60]
Exit stack: [V13, 0x77, V124, V127, V129, 0x0, 0x0, 0x60]

================================

Block 0x272
[0x272:0x275]
---
Predecessors: [0x263]
Successors: []
---
0x272 PUSH1 0x0
0x274 DUP1
0x275 REVERT
---
0x272: V254 = 0x0
0x275: REVERT 0x0 0x0
---
Entry stack: [V13, 0x77, V124, V127, V129, 0x0, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x77, V124, V127, V129, 0x0, 0x0, 0x60]

================================

Block 0x276
[0x276:0x28c]
---
Predecessors: [0x263]
Successors: [0x28d, 0x291]
---
0x276 JUMPDEST
0x277 PUSH1 0x0
0x279 SLOAD
0x27a CALLER
0x27b PUSH1 0x1
0x27d PUSH1 0xa0
0x27f PUSH1 0x2
0x281 EXP
0x282 SUB
0x283 SWAP1
0x284 DUP2
0x285 AND
0x286 SWAP2
0x287 AND
0x288 EQ
0x289 PUSH2 0x291
0x28c JUMPI
---
0x276: JUMPDEST 
0x277: V255 = 0x0
0x279: V256 = S[0x0]
0x27a: V257 = CALLER
0x27b: V258 = 0x1
0x27d: V259 = 0xa0
0x27f: V260 = 0x2
0x281: V261 = EXP 0x2 0xa0
0x282: V262 = SUB 0x10000000000000000000000000000000000000000 0x1
0x285: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x287: V264 = AND V256 0xffffffffffffffffffffffffffffffffffffffff
0x288: V265 = EQ V264 V263
0x289: V266 = 0x291
0x28c: JUMPI 0x291 V265
---
Entry stack: [V13, 0x77, V124, V127, V129, 0x0, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x77, V124, V127, V129, 0x0, 0x0, 0x60]

================================

Block 0x28d
[0x28d:0x290]
---
Predecessors: [0x276]
Successors: []
---
0x28d PUSH1 0x0
0x28f DUP1
0x290 REVERT
---
0x28d: V267 = 0x0
0x290: REVERT 0x0 0x0
---
Entry stack: [V13, 0x77, V124, V127, V129, 0x0, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x77, V124, V127, V129, 0x0, 0x0, 0x60]

================================

Block 0x291
[0x291:0x2ec]
---
Predecessors: [0x276]
Successors: [0x2ed, 0x2f1]
---
0x291 JUMPDEST
0x292 DUP6
0x293 SWAP2
0x294 POP
0x295 DUP2
0x296 PUSH1 0x1
0x298 PUSH1 0xa0
0x29a PUSH1 0x2
0x29c EXP
0x29d SUB
0x29e AND
0x29f PUSH4 0xa9059cbb
0x2a4 DUP7
0x2a5 DUP7
0x2a6 PUSH1 0x0
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab PUSH1 0x20
0x2ad ADD
0x2ae MSTORE
0x2af PUSH1 0x40
0x2b1 MLOAD
0x2b2 PUSH1 0xe0
0x2b4 PUSH1 0x2
0x2b6 EXP
0x2b7 PUSH4 0xffffffff
0x2bc DUP6
0x2bd AND
0x2be MUL
0x2bf DUP2
0x2c0 MSTORE
0x2c1 PUSH1 0x1
0x2c3 PUSH1 0xa0
0x2c5 PUSH1 0x2
0x2c7 EXP
0x2c8 SUB
0x2c9 SWAP1
0x2ca SWAP3
0x2cb AND
0x2cc PUSH1 0x4
0x2ce DUP4
0x2cf ADD
0x2d0 MSTORE
0x2d1 PUSH1 0x24
0x2d3 DUP3
0x2d4 ADD
0x2d5 MSTORE
0x2d6 PUSH1 0x44
0x2d8 ADD
0x2d9 PUSH1 0x20
0x2db PUSH1 0x40
0x2dd MLOAD
0x2de DUP1
0x2df DUP4
0x2e0 SUB
0x2e1 DUP2
0x2e2 PUSH1 0x0
0x2e4 DUP8
0x2e5 DUP1
0x2e6 EXTCODESIZE
0x2e7 ISZERO
0x2e8 ISZERO
0x2e9 PUSH2 0x2f1
0x2ec JUMPI
---
0x291: JUMPDEST 
0x296: V268 = 0x1
0x298: V269 = 0xa0
0x29a: V270 = 0x2
0x29c: V271 = EXP 0x2 0xa0
0x29d: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29e: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x29f: V274 = 0xa9059cbb
0x2a6: V275 = 0x0
0x2a8: V276 = 0x40
0x2aa: V277 = M[0x40]
0x2ab: V278 = 0x20
0x2ad: V279 = ADD 0x20 V277
0x2ae: M[V279] = 0x0
0x2af: V280 = 0x40
0x2b1: V281 = M[0x40]
0x2b2: V282 = 0xe0
0x2b4: V283 = 0x2
0x2b6: V284 = EXP 0x2 0xe0
0x2b7: V285 = 0xffffffff
0x2bd: V286 = AND 0xa9059cbb 0xffffffff
0x2be: V287 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x2c0: M[V281] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x2c1: V288 = 0x1
0x2c3: V289 = 0xa0
0x2c5: V290 = 0x2
0x2c7: V291 = EXP 0x2 0xa0
0x2c8: V292 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cb: V293 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x2cc: V294 = 0x4
0x2cf: V295 = ADD V281 0x4
0x2d0: M[V295] = V293
0x2d1: V296 = 0x24
0x2d4: V297 = ADD V281 0x24
0x2d5: M[V297] = V129
0x2d6: V298 = 0x44
0x2d8: V299 = ADD 0x44 V281
0x2d9: V300 = 0x20
0x2db: V301 = 0x40
0x2dd: V302 = M[0x40]
0x2e0: V303 = SUB V299 V302
0x2e2: V304 = 0x0
0x2e6: V305 = EXTCODESIZE V273
0x2e7: V306 = ISZERO V305
0x2e8: V307 = ISZERO V306
0x2e9: V308 = 0x2f1
0x2ec: JUMPI 0x2f1 V307
---
Entry stack: [V13, 0x77, V124, V127, V129, 0x0, 0x0, 0x60]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S5, S0, V273, 0xa9059cbb, V299, 0x20, V302, V303, V302, 0x0, V273]
Exit stack: [V13, 0x77, V124, V127, V129, 0x0, V124, 0x60, V273, 0xa9059cbb, V299, 0x20, V302, V303, V302, 0x0, V273]

================================

Block 0x2ed
[0x2ed:0x2f0]
---
Predecessors: [0x291]
Successors: []
---
0x2ed PUSH1 0x0
0x2ef DUP1
0x2f0 REVERT
---
0x2ed: V309 = 0x0
0x2f0: REVERT 0x0 0x0
---
Entry stack: [V13, 0x77, V124, V127, V129, 0x0, V124, 0x60, V273, 0xa9059cbb, V299, 0x20, V302, V303, V302, 0x0, V273]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x77, V124, V127, V129, 0x0, V124, 0x60, V273, 0xa9059cbb, V299, 0x20, V302, V303, V302, 0x0, V273]

================================

Block 0x2f1
[0x2f1:0x2fd]
---
Predecessors: [0x291]
Successors: [0x2fe, 0x302]
---
0x2f1 JUMPDEST
0x2f2 PUSH2 0x2c6
0x2f5 GAS
0x2f6 SUB
0x2f7 CALL
0x2f8 ISZERO
0x2f9 ISZERO
0x2fa PUSH2 0x302
0x2fd JUMPI
---
0x2f1: JUMPDEST 
0x2f2: V310 = 0x2c6
0x2f5: V311 = GAS
0x2f6: V312 = SUB V311 0x2c6
0x2f7: V313 = CALL V312 V273 0x0 V302 V303 V302 0x20
0x2f8: V314 = ISZERO V313
0x2f9: V315 = ISZERO V314
0x2fa: V316 = 0x302
0x2fd: JUMPI 0x302 V315
---
Entry stack: [V13, 0x77, V124, V127, V129, 0x0, V124, 0x60, V273, 0xa9059cbb, V299, 0x20, V302, V303, V302, 0x0, V273]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x77, V124, V127, V129, 0x0, V124, 0x60, V273, 0xa9059cbb, V299]

================================

Block 0x2fe
[0x2fe:0x301]
---
Predecessors: [0x2f1]
Successors: []
---
0x2fe PUSH1 0x0
0x300 DUP1
0x301 REVERT
---
0x2fe: V317 = 0x0
0x301: REVERT 0x0 0x0
---
Entry stack: [V13, 0x77, V124, V127, V129, 0x0, V124, 0x60, V273, 0xa9059cbb, V299]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x77, V124, V127, V129, 0x0, V124, 0x60, V273, 0xa9059cbb, V299]

================================

Block 0x302
[0x302:0x314]
---
Predecessors: [0x2f1]
Successors: [0x77]
---
0x302 JUMPDEST
0x303 POP
0x304 POP
0x305 POP
0x306 PUSH1 0x40
0x308 MLOAD
0x309 DUP1
0x30a MLOAD
0x30b SWAP8
0x30c SWAP7
0x30d POP
0x30e POP
0x30f POP
0x310 POP
0x311 POP
0x312 POP
0x313 POP
0x314 JUMP
---
0x302: JUMPDEST 
0x306: V318 = 0x40
0x308: V319 = M[0x40]
0x30a: V320 = M[V319]
0x314: JUMP 0x77
---
Entry stack: [V13, 0x77, V124, V127, V129, 0x0, V124, 0x60, V273, 0xa9059cbb, V299]
Stack pops: 10
Stack additions: [V320]
Exit stack: [V13, V320]

================================

Block 0x315
[0x315:0x391]
---
Predecessors: [0x1aa]
Successors: [0x392, 0x396]
---
0x315 JUMPDEST
0x316 PUSH1 0x1
0x318 SLOAD
0x319 PUSH1 0x0
0x31b SWAP1
0x31c PUSH1 0x1
0x31e PUSH1 0xa0
0x320 PUSH1 0x2
0x322 EXP
0x323 SUB
0x324 AND
0x325 PUSH4 0x4433bbc
0x32a DUP3
0x32b PUSH1 0x40
0x32d MLOAD
0x32e PUSH1 0x20
0x330 ADD
0x331 MSTORE
0x332 PUSH1 0x40
0x334 MLOAD
0x335 PUSH1 0xe0
0x337 PUSH1 0x2
0x339 EXP
0x33a PUSH4 0xffffffff
0x33f DUP4
0x340 AND
0x341 MUL
0x342 DUP2
0x343 MSTORE
0x344 PUSH1 0x20
0x346 PUSH1 0x4
0x348 DUP3
0x349 ADD
0x34a DUP2
0x34b SWAP1
0x34c MSTORE
0x34d PUSH1 0x5
0x34f PUSH1 0x24
0x351 DUP4
0x352 ADD
0x353 MSTORE
0x354 PUSH32 0x546f6b656e000000000000000000000000000000000000000000000000000000
0x375 PUSH1 0x44
0x377 DUP4
0x378 ADD
0x379 MSTORE
0x37a PUSH1 0x64
0x37c SWAP1
0x37d SWAP2
0x37e ADD
0x37f SWAP1
0x380 PUSH1 0x40
0x382 MLOAD
0x383 DUP1
0x384 DUP4
0x385 SUB
0x386 DUP2
0x387 PUSH1 0x0
0x389 DUP8
0x38a DUP1
0x38b EXTCODESIZE
0x38c ISZERO
0x38d ISZERO
0x38e PUSH2 0x396
0x391 JUMPI
---
0x315: JUMPDEST 
0x316: V321 = 0x1
0x318: V322 = S[0x1]
0x319: V323 = 0x0
0x31c: V324 = 0x1
0x31e: V325 = 0xa0
0x320: V326 = 0x2
0x322: V327 = EXP 0x2 0xa0
0x323: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x324: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V322
0x325: V330 = 0x4433bbc
0x32b: V331 = 0x40
0x32d: V332 = M[0x40]
0x32e: V333 = 0x20
0x330: V334 = ADD 0x20 V332
0x331: M[V334] = 0x0
0x332: V335 = 0x40
0x334: V336 = M[0x40]
0x335: V337 = 0xe0
0x337: V338 = 0x2
0x339: V339 = EXP 0x2 0xe0
0x33a: V340 = 0xffffffff
0x340: V341 = AND 0x4433bbc 0xffffffff
0x341: V342 = MUL 0x4433bbc 0x100000000000000000000000000000000000000000000000000000000
0x343: M[V336] = 0x4433bbc00000000000000000000000000000000000000000000000000000000
0x344: V343 = 0x20
0x346: V344 = 0x4
0x349: V345 = ADD V336 0x4
0x34c: M[V345] = 0x20
0x34d: V346 = 0x5
0x34f: V347 = 0x24
0x352: V348 = ADD V336 0x24
0x353: M[V348] = 0x5
0x354: V349 = 0x546f6b656e000000000000000000000000000000000000000000000000000000
0x375: V350 = 0x44
0x378: V351 = ADD V336 0x44
0x379: M[V351] = 0x546f6b656e000000000000000000000000000000000000000000000000000000
0x37a: V352 = 0x64
0x37e: V353 = ADD V336 0x64
0x380: V354 = 0x40
0x382: V355 = M[0x40]
0x385: V356 = SUB V353 V355
0x387: V357 = 0x0
0x38b: V358 = EXTCODESIZE V329
0x38c: V359 = ISZERO V358
0x38d: V360 = ISZERO V359
0x38e: V361 = 0x396
0x391: JUMPI 0x396 V360
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x1b2]
Stack pops: 0
Stack additions: [0x0, V329, 0x4433bbc, V353, 0x20, V355, V356, V355, 0x0, V329]
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x1b2, 0x0, V329, 0x4433bbc, V353, 0x20, V355, V356, V355, 0x0, V329]

================================

Block 0x392
[0x392:0x395]
---
Predecessors: [0x315]
Successors: []
---
0x392 PUSH1 0x0
0x394 DUP1
0x395 REVERT
---
0x392: V362 = 0x0
0x395: REVERT 0x0 0x0
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x1b2, 0x0, V329, 0x4433bbc, V353, 0x20, V355, V356, V355, 0x0, V329]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x1b2, 0x0, V329, 0x4433bbc, V353, 0x20, V355, V356, V355, 0x0, V329]

================================

Block 0x396
[0x396:0x3a2]
---
Predecessors: [0x315]
Successors: [0x3a3, 0x3a7]
---
0x396 JUMPDEST
0x397 PUSH2 0x2c6
0x39a GAS
0x39b SUB
0x39c CALL
0x39d ISZERO
0x39e ISZERO
0x39f PUSH2 0x3a7
0x3a2 JUMPI
---
0x396: JUMPDEST 
0x397: V363 = 0x2c6
0x39a: V364 = GAS
0x39b: V365 = SUB V364 0x2c6
0x39c: V366 = CALL V365 V329 0x0 V355 V356 V355 0x20
0x39d: V367 = ISZERO V366
0x39e: V368 = ISZERO V367
0x39f: V369 = 0x3a7
0x3a2: JUMPI 0x3a7 V368
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x1b2, 0x0, V329, 0x4433bbc, V353, 0x20, V355, V356, V355, 0x0, V329]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x1b2, 0x0, V329, 0x4433bbc, V353]

================================

Block 0x3a3
[0x3a3:0x3a6]
---
Predecessors: [0x396]
Successors: []
---
0x3a3 PUSH1 0x0
0x3a5 DUP1
0x3a6 REVERT
---
0x3a3: V370 = 0x0
0x3a6: REVERT 0x0 0x0
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x1b2, 0x0, V329, 0x4433bbc, V353]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x1b2, 0x0, V329, 0x4433bbc, V353]

================================

Block 0x3a7
[0x3a7:0x3b4]
---
Predecessors: [0x396]
Successors: [0x1b2]
---
0x3a7 JUMPDEST
0x3a8 POP
0x3a9 POP
0x3aa POP
0x3ab PUSH1 0x40
0x3ad MLOAD
0x3ae DUP1
0x3af MLOAD
0x3b0 SWAP2
0x3b1 POP
0x3b2 POP
0x3b3 SWAP1
0x3b4 JUMP
---
0x3a7: JUMPDEST 
0x3ab: V371 = 0x40
0x3ad: V372 = M[0x40]
0x3af: V373 = M[V372]
0x3b4: JUMP 0x1b2
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x1b2, 0x0, V329, 0x4433bbc, V353]
Stack pops: 5
Stack additions: [V373]
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, V373]

================================

Block 0x3b5
[0x3b5:0x3bf]
---
Predecessors: [0x1d1]
Successors: [0x3c0, 0x3c4]
---
0x3b5 JUMPDEST
0x3b6 PUSH1 0x0
0x3b8 DUP2
0x3b9 DUP4
0x3ba LT
0x3bb ISZERO
0x3bc PUSH2 0x3c4
0x3bf JUMPI
---
0x3b5: JUMPDEST 
0x3b6: V374 = 0x0
0x3ba: V375 = LT V204 V89
0x3bb: V376 = ISZERO V375
0x3bc: V377 = 0x3c4
0x3bf: JUMPI 0x3c4 V376
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x1f4, V204, V89]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x1f4, V204, V89, 0x0]

================================

Block 0x3c0
[0x3c0:0x3c3]
---
Predecessors: [0x3b5]
Successors: []
---
0x3c0 PUSH1 0x0
0x3c2 DUP1
0x3c3 REVERT
---
0x3c0: V378 = 0x0
0x3c3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x1f4, V204, V89, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x1f4, V204, V89, 0x0]

================================

Block 0x3c4
[0x3c4:0x3c9]
---
Predecessors: [0x3b5]
Successors: [0x1f4]
---
0x3c4 JUMPDEST
0x3c5 POP
0x3c6 SWAP1
0x3c7 SUB
0x3c8 SWAP1
0x3c9 JUMP
---
0x3c4: JUMPDEST 
0x3c7: V379 = SUB V204 V89
0x3c9: JUMP 0x1f4
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x1f4, V204, V89, 0x0]
Stack pops: 4
Stack additions: [V379]
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, V379]

================================

Block 0x3ca
[0x3ca:0x3d6]
---
Predecessors: [0x1f4]
Successors: [0x3d7, 0x3db]
---
0x3ca JUMPDEST
0x3cb PUSH1 0x0
0x3cd DUP3
0x3ce DUP3
0x3cf ADD
0x3d0 DUP4
0x3d1 GT
0x3d2 ISZERO
0x3d3 PUSH2 0x3db
0x3d6 JUMPI
---
0x3ca: JUMPDEST 
0x3cb: V380 = 0x0
0x3cf: V381 = ADD V89 V220
0x3d1: V382 = GT V220 V381
0x3d2: V383 = ISZERO V382
0x3d3: V384 = 0x3db
0x3d6: JUMPI 0x3db V383
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x223, V220, V89]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x223, V220, V89, 0x0]

================================

Block 0x3d7
[0x3d7:0x3da]
---
Predecessors: [0x3ca]
Successors: []
---
0x3d7 PUSH1 0x0
0x3d9 DUP1
0x3da REVERT
---
0x3d7: V385 = 0x0
0x3da: REVERT 0x0 0x0
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x223, V220, V89, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x223, V220, V89, 0x0]

================================

Block 0x3db
[0x3db:0x3df]
---
Predecessors: [0x3ca]
Successors: [0x223]
---
0x3db JUMPDEST
0x3dc POP
0x3dd ADD
0x3de SWAP1
0x3df JUMP
---
0x3db: JUMPDEST 
0x3dd: V386 = ADD V89 V220
0x3df: JUMP 0x223
---
Entry stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, 0x223, V220, V89, 0x0]
Stack pops: 4
Stack additions: [V386]
Exit stack: [V13, 0x77, V84, V87, V89, 0x0, 0x60, V386]

================================

Block 0x3e0
[0x3e0:0x414]
---
Predecessors: []
Successors: []
---
0x3e0 STOP
0x3e1 LOG1
0x3e2 PUSH6 0x627a7a723058
0x3e9 SHA3
0x3ea MISSING 0xde
0x3eb MISSING 0xae
0x3ec MISSING 0xdf
0x3ed DUP12
0x3ee PUSH9 0xea70924226fcbbc940
0x3f8 MISSING 0xb0
0x3f9 SWAP1
0x3fa MISSING 0x4c
0x3fb DUP10
0x3fc MISSING 0xcb
0x3fd MISSING 0xb1
0x3fe MISSING 0xab
0x3ff DUP5
0x400 DUP1
0x401 MISSING 0xca
0x402 MISSING 0xcf
0x403 MISSING 0xe1
0x404 DUP2
0x405 DUP12
0x406 PUSH14 0x3707d10029
---
0x3e0: STOP 
0x3e1: LOG S0 S1 S2
0x3e2: V387 = 0x627a7a723058
0x3e9: V388 = SHA3 0x627a7a723058 S3
0x3ea: MISSING 0xde
0x3eb: MISSING 0xae
0x3ec: MISSING 0xdf
0x3ee: V389 = 0xea70924226fcbbc940
0x3f8: MISSING 0xb0
0x3fa: MISSING 0x4c
0x3fc: MISSING 0xcb
0x3fd: MISSING 0xb1
0x3fe: MISSING 0xab
0x401: MISSING 0xca
0x402: MISSING 0xcf
0x403: MISSING 0xe1
0x406: V390 = 0x3707d10029
---
Entry stack: []
Stack pops: 0
Stack additions: [V388, 0xea70924226fcbbc940, S11, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S1, S0, S9, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S4, S4, S0, S1, S2, S3, S4, 0x3707d10029, S10, S1, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10]
Exit stack: []

================================

Function 0:
Public function signature: 0x4fb2e45d
Entry block: 0x58
Exit block: 0x77
Body: 0x58, 0x5f, 0x63, 0x77, 0x13b, 0x153, 0x157

Function 1:
Public function signature: 0x8da5cb5b
Entry block: 0x8b
Exit block: 0x9e
Body: 0x8b, 0x92, 0x96, 0x9e, 0x189

Function 2:
Public function signature: 0xbeabacc8
Entry block: 0xba
Exit block: 0x77
Body: 0x77, 0xba, 0xc1, 0xc5, 0x198, 0x1a6, 0x1aa, 0x1b2, 0x1cd, 0x1d1, 0x1f4, 0x223, 0x315, 0x392, 0x396, 0x3a3, 0x3a7, 0x3b5, 0x3c0, 0x3c4, 0x3ca, 0x3d7, 0x3db

Function 3:
Public function signature: 0xc2bc2efc
Entry block: 0xe2
Exit block: 0x101
Body: 0xe2, 0xe9, 0xed, 0x101, 0x248

Function 4:
Public function signature: 0xeee78595
Entry block: 0x113
Exit block: 0x77
Body: 0x77, 0x113, 0x11a, 0x11e, 0x263, 0x272, 0x276, 0x28d, 0x291, 0x2ed, 0x2f1, 0x2fe, 0x302

Function 5:
Public fallback function
Entry block: 0x53
Exit block: 0x53
Body: 0x53

