Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xca]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xca
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xca
0xa: JUMPI 0xca V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x28f]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x6fdde03
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x28f
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x6fdde03
0x20: V14 = EQ V12 0x6fdde03
0x21: V15 = 0x28f
0x24: JUMPI 0x28f V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x31f]
---
0x25 DUP1
0x26 PUSH4 0x95ea7b3
0x2b EQ
0x2c PUSH2 0x31f
0x2f JUMPI
---
0x26: V16 = 0x95ea7b3
0x2b: V17 = EQ 0x95ea7b3 V12
0x2c: V18 = 0x31f
0x2f: JUMPI 0x31f V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x352]
---
0x30 DUP1
0x31 PUSH4 0xdcf4b8f
0x36 EQ
0x37 PUSH2 0x352
0x3a JUMPI
---
0x31: V19 = 0xdcf4b8f
0x36: V20 = EQ 0xdcf4b8f V12
0x37: V21 = 0x352
0x3a: JUMPI 0x352 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x374]
---
0x3b DUP1
0x3c PUSH4 0x18160ddd
0x41 EQ
0x42 PUSH2 0x374
0x45 JUMPI
---
0x3c: V22 = 0x18160ddd
0x41: V23 = EQ 0x18160ddd V12
0x42: V24 = 0x374
0x45: JUMPI 0x374 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x396]
---
0x46 DUP1
0x47 PUSH4 0x23b872dd
0x4c EQ
0x4d PUSH2 0x396
0x50 JUMPI
---
0x47: V25 = 0x23b872dd
0x4c: V26 = EQ 0x23b872dd V12
0x4d: V27 = 0x396
0x50: JUMPI 0x396 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x3cf]
---
0x51 DUP1
0x52 PUSH4 0x313ce567
0x57 EQ
0x58 PUSH2 0x3cf
0x5b JUMPI
---
0x52: V28 = 0x313ce567
0x57: V29 = EQ 0x313ce567 V12
0x58: V30 = 0x3cf
0x5b: JUMPI 0x3cf V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x3f5]
---
0x5c DUP1
0x5d PUSH4 0x64acdb77
0x62 EQ
0x63 PUSH2 0x3f5
0x66 JUMPI
---
0x5d: V31 = 0x64acdb77
0x62: V32 = EQ 0x64acdb77 V12
0x63: V33 = 0x3f5
0x66: JUMPI 0x3f5 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x407]
---
0x67 DUP1
0x68 PUSH4 0x70a08231
0x6d EQ
0x6e PUSH2 0x407
0x71 JUMPI
---
0x68: V34 = 0x70a08231
0x6d: V35 = EQ 0x70a08231 V12
0x6e: V36 = 0x407
0x71: JUMPI 0x407 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x435]
---
0x72 DUP1
0x73 PUSH4 0x8f580996
0x78 EQ
0x79 PUSH2 0x435
0x7c JUMPI
---
0x73: V37 = 0x8f580996
0x78: V38 = EQ 0x8f580996 V12
0x79: V39 = 0x435
0x7c: JUMPI 0x435 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x447]
---
0x7d DUP1
0x7e PUSH4 0x95d89b41
0x83 EQ
0x84 PUSH2 0x447
0x87 JUMPI
---
0x7e: V40 = 0x95d89b41
0x83: V41 = EQ 0x95d89b41 V12
0x84: V42 = 0x447
0x87: JUMPI 0x447 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x4d7]
---
0x88 DUP1
0x89 PUSH4 0x98b01fe3
0x8e EQ
0x8f PUSH2 0x4d7
0x92 JUMPI
---
0x89: V43 = 0x98b01fe3
0x8e: V44 = EQ 0x98b01fe3 V12
0x8f: V45 = 0x4d7
0x92: JUMPI 0x4d7 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x4f9]
---
0x93 DUP1
0x94 PUSH4 0xa9059cbb
0x99 EQ
0x9a PUSH2 0x4f9
0x9d JUMPI
---
0x94: V46 = 0xa9059cbb
0x99: V47 = EQ 0xa9059cbb V12
0x9a: V48 = 0x4f9
0x9d: JUMPI 0x4f9 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x52c]
---
0x9e DUP1
0x9f PUSH4 0xc59d4847
0xa4 EQ
0xa5 PUSH2 0x52c
0xa8 JUMPI
---
0x9f: V49 = 0xc59d4847
0xa4: V50 = EQ 0xc59d4847 V12
0xa5: V51 = 0x52c
0xa8: JUMPI 0x52c V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x564]
---
0xa9 DUP1
0xaa PUSH4 0xd6906295
0xaf EQ
0xb0 PUSH2 0x564
0xb3 JUMPI
---
0xaa: V52 = 0xd6906295
0xaf: V53 = EQ 0xd6906295 V12
0xb0: V54 = 0x564
0xb3: JUMPI 0x564 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x594]
---
0xb4 DUP1
0xb5 PUSH4 0xda040c0f
0xba EQ
0xbb PUSH2 0x594
0xbe JUMPI
---
0xb5: V55 = 0xda040c0f
0xba: V56 = EQ 0xda040c0f V12
0xbb: V57 = 0x594
0xbe: JUMPI 0x594 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x5b8]
---
0xbf DUP1
0xc0 PUSH4 0xdd62ed3e
0xc5 EQ
0xc6 PUSH2 0x5b8
0xc9 JUMPI
---
0xc0: V58 = 0xdd62ed3e
0xc5: V59 = EQ 0xdd62ed3e V12
0xc6: V60 = 0x5b8
0xc9: JUMPI 0x5b8 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xcd]
---
Predecessors: [0x0, 0xbf]
Successors: [0xce]
---
0xca JUMPDEST
0xcb PUSH2 0x28d
---
0xca: JUMPDEST 
0xcb: V61 = 0x28d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28d]
Exit stack: [V12, 0x28d]

================================

Block 0xce
[0xce:0xec]
---
Predecessors: [0xca]
Successors: [0xed, 0xf2]
---
0xce JUMPDEST
0xcf PUSH1 0x0
0xd1 PUSH1 0x0
0xd3 PUSH1 0x0
0xd5 PUSH1 0x0
0xd7 PUSH1 0x0
0xd9 PUSH1 0x14
0xdb SWAP1
0xdc SLOAD
0xdd SWAP1
0xde PUSH2 0x100
0xe1 EXP
0xe2 SWAP1
0xe3 DIV
0xe4 PUSH1 0xff
0xe6 AND
0xe7 ISZERO
0xe8 ISZERO
0xe9 PUSH2 0xf2
0xec JUMPI
---
0xce: JUMPDEST 
0xcf: V62 = 0x0
0xd1: V63 = 0x0
0xd3: V64 = 0x0
0xd5: V65 = 0x0
0xd7: V66 = 0x0
0xd9: V67 = 0x14
0xdc: V68 = S[0x0]
0xde: V69 = 0x100
0xe1: V70 = EXP 0x100 0x14
0xe3: V71 = DIV V68 0x10000000000000000000000000000000000000000
0xe4: V72 = 0xff
0xe6: V73 = AND 0xff V71
0xe7: V74 = ISZERO V73
0xe8: V75 = ISZERO V74
0xe9: V76 = 0xf2
0xec: JUMPI 0xf2 V75
---
Entry stack: [V12, 0x28d]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x28d, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xed
[0xed:0xf1]
---
Predecessors: [0xce]
Successors: []
---
0xed PUSH1 0x0
0xef PUSH1 0x0
0xf1 REVERT
---
0xed: V77 = 0x0
0xef: V78 = 0x0
0xf1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x28d, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28d, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xf2
[0xf2:0xf9]
---
Predecessors: [0xce]
Successors: [0xfa, 0xfe]
---
0xf2 JUMPDEST
0xf3 CALLVALUE
0xf4 ISZERO
0xf5 ISZERO
0xf6 PUSH2 0xfe
0xf9 JUMPI
---
0xf2: JUMPDEST 
0xf3: V79 = CALLVALUE
0xf4: V80 = ISZERO V79
0xf5: V81 = ISZERO V80
0xf6: V82 = 0xfe
0xf9: JUMPI 0xfe V81
---
Entry stack: [V12, 0x28d, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28d, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xfa
[0xfa:0xfd]
---
Predecessors: [0xf2]
Successors: [0x287]
---
0xfa PUSH2 0x287
0xfd JUMP
---
0xfa: V83 = 0x287
0xfd: JUMP 0x287
---
Entry stack: [V12, 0x28d, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28d, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xfe
[0xfe:0x12d]
---
Predecessors: [0xf2]
Successors: [0x12e, 0x12f]
---
0xfe JUMPDEST
0xff PUSH1 0x0
0x101 DUP1
0x102 SLOAD
0x103 PUSH1 0x40
0x105 MLOAD
0x106 PUSH1 0x1
0x108 PUSH1 0xa0
0x10a PUSH1 0x2
0x10c EXP
0x10d SUB
0x10e SWAP1
0x10f SWAP2
0x110 AND
0x111 SWAP2
0x112 CALLVALUE
0x113 DUP1
0x114 ISZERO
0x115 PUSH2 0x8fc
0x118 MUL
0x119 SWAP3
0x11a SWAP1
0x11b SWAP2
0x11c DUP2
0x11d DUP2
0x11e DUP2
0x11f DUP6
0x120 DUP9
0x121 DUP9
0x122 CALL
0x123 SWAP4
0x124 POP
0x125 POP
0x126 POP
0x127 POP
0x128 ISZERO
0x129 ISZERO
0x12a PUSH2 0x12f
0x12d JUMPI
---
0xfe: JUMPDEST 
0xff: V84 = 0x0
0x102: V85 = S[0x0]
0x103: V86 = 0x40
0x105: V87 = M[0x40]
0x106: V88 = 0x1
0x108: V89 = 0xa0
0x10a: V90 = 0x2
0x10c: V91 = EXP 0x2 0xa0
0x10d: V92 = SUB 0x10000000000000000000000000000000000000000 0x1
0x110: V93 = AND V85 0xffffffffffffffffffffffffffffffffffffffff
0x112: V94 = CALLVALUE
0x114: V95 = ISZERO V94
0x115: V96 = 0x8fc
0x118: V97 = MUL 0x8fc V95
0x122: V98 = CALL V97 V93 V94 V87 0x0 V87 0x0
0x128: V99 = ISZERO V98
0x129: V100 = ISZERO V99
0x12a: V101 = 0x12f
0x12d: JUMPI 0x12f V100
---
Entry stack: [V12, 0x28d, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28d, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x12e
[0x12e:0x12e]
---
Predecessors: [0xfe]
Successors: []
---
0x12e INVALID
---
0x12e: INVALID 
---
Entry stack: [V12, 0x28d, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28d, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x12f
[0x12f:0x14e]
---
Predecessors: [0xfe]
Successors: [0x14f, 0x224]
---
0x12f JUMPDEST
0x130 PUSH1 0x3
0x132 DUP1
0x133 SLOAD
0x134 CALLVALUE
0x135 SWAP1
0x136 DUP2
0x137 ADD
0x138 SWAP1
0x139 SWAP2
0x13a SSTORE
0x13b PUSH1 0x64
0x13d DUP2
0x13e MUL
0x13f SWAP5
0x140 POP
0x141 PUSH7 0x2386f26fc10000
0x149 SWAP1
0x14a LT
0x14b PUSH2 0x224
0x14e JUMPI
---
0x12f: JUMPDEST 
0x130: V102 = 0x3
0x133: V103 = S[0x3]
0x134: V104 = CALLVALUE
0x137: V105 = ADD V104 V103
0x13a: S[0x3] = V105
0x13b: V106 = 0x64
0x13e: V107 = MUL V104 0x64
0x141: V108 = 0x2386f26fc10000
0x14a: V109 = LT V104 0x2386f26fc10000
0x14b: V110 = 0x224
0x14e: JUMPI 0x224 V109
---
Entry stack: [V12, 0x28d, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V107, S2, S1, S0]
Exit stack: [V12, 0x28d, V107, 0x0, 0x0, 0x0]

================================

Block 0x14f
[0x14f:0x1b7]
---
Predecessors: [0x12f]
Successors: [0x1b8, 0x1b9]
---
0x14f PUSH1 0x3
0x151 SLOAD
0x152 DUP5
0x153 ADD
0x154 SWAP4
0x155 POP
0x156 PUSH1 0x3
0x158 COINBASE
0x159 NUMBER
0x15a TIMESTAMP
0x15b PUSH1 0x0
0x15d PUSH1 0x40
0x15f MLOAD
0x160 PUSH1 0x20
0x162 ADD
0x163 MSTORE
0x164 PUSH1 0x40
0x166 MLOAD
0x167 DUP1
0x168 DUP5
0x169 PUSH1 0x1
0x16b PUSH1 0xa0
0x16d PUSH1 0x2
0x16f EXP
0x170 SUB
0x171 AND
0x172 PUSH1 0x1
0x174 PUSH1 0xa0
0x176 PUSH1 0x2
0x178 EXP
0x179 SUB
0x17a AND
0x17b PUSH13 0x1000000000000000000000000
0x189 MUL
0x18a DUP2
0x18b MSTORE
0x18c PUSH1 0x14
0x18e ADD
0x18f DUP4
0x190 DUP2
0x191 MSTORE
0x192 PUSH1 0x20
0x194 ADD
0x195 DUP3
0x196 DUP2
0x197 MSTORE
0x198 PUSH1 0x20
0x19a ADD
0x19b SWAP4
0x19c POP
0x19d POP
0x19e POP
0x19f POP
0x1a0 PUSH1 0x20
0x1a2 PUSH1 0x40
0x1a4 MLOAD
0x1a5 DUP1
0x1a6 DUP4
0x1a7 SUB
0x1a8 DUP2
0x1a9 PUSH1 0x0
0x1ab DUP7
0x1ac PUSH2 0x61da
0x1af GAS
0x1b0 SUB
0x1b1 CALL
0x1b2 ISZERO
0x1b3 ISZERO
0x1b4 PUSH2 0x1b9
0x1b7 JUMPI
---
0x14f: V111 = 0x3
0x151: V112 = S[0x3]
0x153: V113 = ADD V107 V112
0x156: V114 = 0x3
0x158: V115 = COINBASE
0x159: V116 = NUMBER
0x15a: V117 = TIMESTAMP
0x15b: V118 = 0x0
0x15d: V119 = 0x40
0x15f: V120 = M[0x40]
0x160: V121 = 0x20
0x162: V122 = ADD 0x20 V120
0x163: M[V122] = 0x0
0x164: V123 = 0x40
0x166: V124 = M[0x40]
0x169: V125 = 0x1
0x16b: V126 = 0xa0
0x16d: V127 = 0x2
0x16f: V128 = EXP 0x2 0xa0
0x170: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x171: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x172: V131 = 0x1
0x174: V132 = 0xa0
0x176: V133 = 0x2
0x178: V134 = EXP 0x2 0xa0
0x179: V135 = SUB 0x10000000000000000000000000000000000000000 0x1
0x17a: V136 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x17b: V137 = 0x1000000000000000000000000
0x189: V138 = MUL 0x1000000000000000000000000 V136
0x18b: M[V124] = V138
0x18c: V139 = 0x14
0x18e: V140 = ADD 0x14 V124
0x191: M[V140] = V116
0x192: V141 = 0x20
0x194: V142 = ADD 0x20 V140
0x197: M[V142] = V117
0x198: V143 = 0x20
0x19a: V144 = ADD 0x20 V142
0x1a0: V145 = 0x20
0x1a2: V146 = 0x40
0x1a4: V147 = M[0x40]
0x1a7: V148 = SUB V144 V147
0x1a9: V149 = 0x0
0x1ac: V150 = 0x61da
0x1af: V151 = GAS
0x1b0: V152 = SUB V151 0x61da
0x1b1: V153 = CALL V152 0x3 0x0 V147 V148 V147 0x20
0x1b2: V154 = ISZERO V153
0x1b3: V155 = ISZERO V154
0x1b4: V156 = 0x1b9
0x1b7: JUMPI 0x1b9 V155
---
Entry stack: [V12, 0x28d, V107, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [V113, S2, S1, S0, 0x3, V144]
Exit stack: [V12, 0x28d, V113, 0x0, 0x0, 0x0, 0x3, V144]

================================

Block 0x1b8
[0x1b8:0x1b8]
---
Predecessors: [0x14f]
Successors: []
---
0x1b8 INVALID
---
0x1b8: INVALID 
---
Entry stack: [V12, 0x28d, V113, 0x0, 0x0, 0x0, 0x3, V144]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28d, V113, 0x0, 0x0, 0x0, 0x3, V144]

================================

Block 0x1b9
[0x1b9:0x1d3]
---
Predecessors: [0x14f]
Successors: [0x1d4]
---
0x1b9 JUMPDEST
0x1ba POP
0x1bb POP
0x1bc PUSH1 0x40
0x1be MLOAD
0x1bf MLOAD
0x1c0 PUSH13 0x1000000000000000000000000
0x1ce MUL
0x1cf SWAP3
0x1d0 POP
0x1d1 DUP3
0x1d2 PUSH1 0x0
---
0x1b9: JUMPDEST 
0x1bc: V157 = 0x40
0x1be: V158 = M[0x40]
0x1bf: V159 = M[V158]
0x1c0: V160 = 0x1000000000000000000000000
0x1ce: V161 = MUL 0x1000000000000000000000000 V159
0x1d2: V162 = 0x0
---
Entry stack: [V12, 0x28d, V113, 0x0, 0x0, 0x0, 0x3, V144]
Stack pops: 5
Stack additions: [V161, S3, S2, V161, 0x0]
Exit stack: [V12, 0x28d, V113, V161, 0x0, 0x0, V161, 0x0]

================================

Block 0x1d4
[0x1d4:0x20b]
---
Predecessors: [0x1b9]
Successors: [0x20c, 0x224]
---
0x1d4 JUMPDEST
0x1d5 BYTE
0x1d6 PUSH1 0xf8
0x1d8 PUSH1 0x2
0x1da EXP
0x1db MUL
0x1dc PUSH31 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1fc NOT
0x1fd AND
0x1fe PUSH1 0x0
0x200 PUSH1 0xf8
0x202 PUSH1 0x2
0x204 EXP
0x205 MUL
0x206 EQ
0x207 ISZERO
0x208 PUSH2 0x224
0x20b JUMPI
---
0x1d4: JUMPDEST 
0x1d5: V163 = BYTE 0x0 V161
0x1d6: V164 = 0xf8
0x1d8: V165 = 0x2
0x1da: V166 = EXP 0x2 0xf8
0x1db: V167 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 V163
0x1dc: V168 = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1fc: V169 = NOT 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x1fd: V170 = AND 0xff00000000000000000000000000000000000000000000000000000000000000 V167
0x1fe: V171 = 0x0
0x200: V172 = 0xf8
0x202: V173 = 0x2
0x204: V174 = EXP 0x2 0xf8
0x205: V175 = MUL 0x100000000000000000000000000000000000000000000000000000000000000 0x0
0x206: V176 = EQ 0x0 V170
0x207: V177 = ISZERO V176
0x208: V178 = 0x224
0x20b: JUMPI 0x224 V177
---
Entry stack: [V12, 0x28d, V113, V161, 0x0, 0x0, V161, 0x0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x28d, V113, V161, 0x0, 0x0]

================================

Block 0x20c
[0x20c:0x223]
---
Predecessors: [0x1d4]
Successors: [0x224]
---
0x20c POP
0x20d POP
0x20e PUSH1 0x4
0x210 DUP1
0x211 SLOAD
0x212 PUSH2 0x2710
0x215 CALLVALUE
0x216 MUL
0x217 SWAP1
0x218 DUP2
0x219 ADD
0x21a SWAP1
0x21b SWAP2
0x21c SSTORE
0x21d SWAP2
0x21e DUP3
0x21f ADD
0x220 SWAP2
0x221 PUSH1 0x64
0x223 SWAP1
---
0x20e: V179 = 0x4
0x211: V180 = S[0x4]
0x212: V181 = 0x2710
0x215: V182 = CALLVALUE
0x216: V183 = MUL V182 0x2710
0x219: V184 = ADD V183 V180
0x21c: S[0x4] = V184
0x21f: V185 = ADD V183 V113
0x221: V186 = 0x64
---
Entry stack: [V12, 0x28d, V113, V161, 0x0, 0x0]
Stack pops: 4
Stack additions: [V185, S2, 0x64, V183]
Exit stack: [V12, 0x28d, V185, V161, 0x64, V183]

================================

Block 0x224
[0x224:0x224]
---
Predecessors: [0x12f, 0x1d4, 0x20c]
Successors: [0x225]
---
0x224 JUMPDEST
---
0x224: JUMPDEST 
---
Entry stack: [V12, 0x28d, S3, S2, {0x0, 0x64}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28d, S3, S2, {0x0, 0x64}, S0]

================================

Block 0x225
[0x225:0x286]
---
Predecessors: [0x224]
Successors: [0x287]
---
0x225 JUMPDEST
0x226 PUSH1 0x5
0x228 DUP1
0x229 SLOAD
0x22a DUP6
0x22b ADD
0x22c SWAP1
0x22d SSTORE
0x22e PUSH1 0x1
0x230 PUSH1 0xa0
0x232 PUSH1 0x2
0x234 EXP
0x235 SUB
0x236 CALLER
0x237 DUP2
0x238 AND
0x239 PUSH1 0x0
0x23b DUP2
0x23c DUP2
0x23d MSTORE
0x23e PUSH1 0x1
0x240 PUSH1 0x20
0x242 SWAP1
0x243 DUP2
0x244 MSTORE
0x245 PUSH1 0x40
0x247 SWAP2
0x248 DUP3
0x249 SWAP1
0x24a SHA3
0x24b DUP1
0x24c SLOAD
0x24d DUP10
0x24e ADD
0x24f SWAP1
0x250 SSTORE
0x251 DUP2
0x252 MLOAD
0x253 DUP9
0x254 DUP2
0x255 MSTORE
0x256 SWAP2
0x257 MLOAD
0x258 SWAP3
0x259 SWAP4
0x25a ADDRESS
0x25b AND
0x25c SWAP3
0x25d PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x27e SWAP3
0x27f DUP2
0x280 SWAP1
0x281 SUB
0x282 SWAP1
0x283 SWAP2
0x284 ADD
0x285 SWAP1
0x286 LOG3
---
0x225: JUMPDEST 
0x226: V187 = 0x5
0x229: V188 = S[0x5]
0x22b: V189 = ADD S3 V188
0x22d: S[0x5] = V189
0x22e: V190 = 0x1
0x230: V191 = 0xa0
0x232: V192 = 0x2
0x234: V193 = EXP 0x2 0xa0
0x235: V194 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V195 = CALLER
0x238: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x239: V197 = 0x0
0x23d: M[0x0] = V196
0x23e: V198 = 0x1
0x240: V199 = 0x20
0x244: M[0x20] = 0x1
0x245: V200 = 0x40
0x24a: V201 = SHA3 0x0 0x40
0x24c: V202 = S[V201]
0x24e: V203 = ADD S3 V202
0x250: S[V201] = V203
0x252: V204 = M[0x40]
0x255: M[V204] = S3
0x257: V205 = M[0x40]
0x25a: V206 = ADDRESS
0x25b: V207 = AND V206 0xffffffffffffffffffffffffffffffffffffffff
0x25d: V208 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x281: V209 = SUB V204 V205
0x284: V210 = ADD 0x20 V209
0x286: LOG V205 V210 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V207 V196
---
Entry stack: [V12, 0x28d, S3, S2, {0x0, 0x64}, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x28d, S3, S2, {0x0, 0x64}, S0]

================================

Block 0x287
[0x287:0x28c]
---
Predecessors: [0xfa, 0x225]
Successors: [0x28d]
---
0x287 JUMPDEST
0x288 POP
0x289 POP
0x28a POP
0x28b POP
0x28c JUMP
---
0x287: JUMPDEST 
0x28c: JUMP 0x28d
---
Entry stack: [V12, 0x28d, S3, S2, {0x0, 0x64}, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x28d
[0x28d:0x28e]
---
Predecessors: [0x287, 0x853, 0x8b5]
Successors: []
---
0x28d JUMPDEST
0x28e STOP
---
0x28d: JUMPDEST 
0x28e: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28f
[0x28f:0x295]
---
Predecessors: [0xb]
Successors: [0x296, 0x297]
---
0x28f JUMPDEST
0x290 CALLVALUE
0x291 ISZERO
0x292 PUSH2 0x297
0x295 JUMPI
---
0x28f: JUMPDEST 
0x290: V211 = CALLVALUE
0x291: V212 = ISZERO V211
0x292: V213 = 0x297
0x295: JUMPI 0x297 V212
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x296
[0x296:0x296]
---
Predecessors: [0x28f]
Successors: []
---
0x296 INVALID
---
0x296: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x297
[0x297:0x29e]
---
Predecessors: [0x28f]
Successors: [0x5ec]
---
0x297 JUMPDEST
0x298 PUSH2 0x29f
0x29b PUSH2 0x5ec
0x29e JUMP
---
0x297: JUMPDEST 
0x298: V214 = 0x29f
0x29b: V215 = 0x5ec
0x29e: JUMP 0x5ec
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29f]
Exit stack: [V12, 0x29f]

================================

Block 0x29f
[0x29f:0x2c4]
---
Predecessors: [0x62a, 0x8f5]
Successors: [0x2c5, 0x2e5]
---
0x29f JUMPDEST
0x2a0 PUSH1 0x40
0x2a2 DUP1
0x2a3 MLOAD
0x2a4 PUSH1 0x20
0x2a6 DUP1
0x2a7 DUP3
0x2a8 MSTORE
0x2a9 DUP4
0x2aa MLOAD
0x2ab DUP2
0x2ac DUP4
0x2ad ADD
0x2ae MSTORE
0x2af DUP4
0x2b0 MLOAD
0x2b1 SWAP2
0x2b2 SWAP3
0x2b3 DUP4
0x2b4 SWAP3
0x2b5 SWAP1
0x2b6 DUP4
0x2b7 ADD
0x2b8 SWAP2
0x2b9 DUP6
0x2ba ADD
0x2bb SWAP1
0x2bc DUP1
0x2bd DUP4
0x2be DUP4
0x2bf DUP3
0x2c0 ISZERO
0x2c1 PUSH2 0x2e5
0x2c4 JUMPI
---
0x29f: JUMPDEST 
0x2a0: V216 = 0x40
0x2a3: V217 = M[0x40]
0x2a4: V218 = 0x20
0x2a8: M[V217] = 0x20
0x2aa: V219 = M[S0]
0x2ad: V220 = ADD V217 0x20
0x2ae: M[V220] = V219
0x2b0: V221 = M[S0]
0x2b7: V222 = ADD V217 0x40
0x2ba: V223 = ADD S0 0x20
0x2c0: V224 = ISZERO V221
0x2c1: V225 = 0x2e5
0x2c4: JUMPI 0x2e5 V224
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: [S0, V217, V217, V222, V223, V221, V221, V222, V223]
Exit stack: [V12, S0, V217, V217, V222, V223, V221, V221, V222, V223]

================================

Block 0x2c5
[0x2c5:0x2d2]
---
Predecessors: [0x29f, 0x2d3, 0x48b]
Successors: [0x2d3, 0x2e5]
---
0x2c5 JUMPDEST
0x2c6 DUP1
0x2c7 MLOAD
0x2c8 DUP3
0x2c9 MSTORE
0x2ca PUSH1 0x20
0x2cc DUP4
0x2cd GT
0x2ce ISZERO
0x2cf PUSH2 0x2e5
0x2d2 JUMPI
---
0x2c5: JUMPDEST 
0x2c7: V226 = M[S0]
0x2c9: M[S1] = V226
0x2ca: V227 = 0x20
0x2cd: V228 = GT S2 0x20
0x2ce: V229 = ISZERO V228
0x2cf: V230 = 0x2e5
0x2d2: JUMPI 0x2e5 V229
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x2d3
[0x2d3:0x2e4]
---
Predecessors: [0x2c5]
Successors: [0x2c5]
---
0x2d3 PUSH1 0x1f
0x2d5 NOT
0x2d6 SWAP1
0x2d7 SWAP3
0x2d8 ADD
0x2d9 SWAP2
0x2da PUSH1 0x20
0x2dc SWAP2
0x2dd DUP3
0x2de ADD
0x2df SWAP2
0x2e0 ADD
0x2e1 PUSH2 0x2c5
0x2e4 JUMP
---
0x2d3: V231 = 0x1f
0x2d5: V232 = NOT 0x1f
0x2d8: V233 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x2da: V234 = 0x20
0x2de: V235 = ADD 0x20 S1
0x2e0: V236 = ADD 0x20 S0
0x2e1: V237 = 0x2c5
0x2e4: JUMP 0x2c5
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V233, V235, V236]
Exit stack: [V12, S8, S7, S6, S5, S4, S3, V233, V235, V236]

================================

Block 0x2e5
[0x2e5:0x2f7]
---
Predecessors: [0x29f, 0x2c5, 0x457, 0x47d]
Successors: [0x2f8, 0x311]
---
0x2e5 JUMPDEST
0x2e6 POP
0x2e7 POP
0x2e8 POP
0x2e9 SWAP1
0x2ea POP
0x2eb SWAP1
0x2ec DUP2
0x2ed ADD
0x2ee SWAP1
0x2ef PUSH1 0x1f
0x2f1 AND
0x2f2 DUP1
0x2f3 ISZERO
0x2f4 PUSH2 0x311
0x2f7 JUMPI
---
0x2e5: JUMPDEST 
0x2ed: V238 = ADD S3 S5
0x2ef: V239 = 0x1f
0x2f1: V240 = AND 0x1f S3
0x2f3: V241 = ISZERO V240
0x2f4: V242 = 0x311
0x2f7: JUMPI 0x311 V241
---
Entry stack: [V12, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V238, V240]
Exit stack: [V12, S8, S7, S6, V238, V240]

================================

Block 0x2f8
[0x2f8:0x310]
---
Predecessors: [0x2e5]
Successors: [0x311]
---
0x2f8 DUP1
0x2f9 DUP3
0x2fa SUB
0x2fb DUP1
0x2fc MLOAD
0x2fd PUSH1 0x1
0x2ff DUP4
0x300 PUSH1 0x20
0x302 SUB
0x303 PUSH2 0x100
0x306 EXP
0x307 SUB
0x308 NOT
0x309 AND
0x30a DUP2
0x30b MSTORE
0x30c PUSH1 0x20
0x30e ADD
0x30f SWAP2
0x310 POP
---
0x2fa: V243 = SUB V238 V240
0x2fc: V244 = M[V243]
0x2fd: V245 = 0x1
0x300: V246 = 0x20
0x302: V247 = SUB 0x20 V240
0x303: V248 = 0x100
0x306: V249 = EXP 0x100 V247
0x307: V250 = SUB V249 0x1
0x308: V251 = NOT V250
0x309: V252 = AND V251 V244
0x30b: M[V243] = V252
0x30c: V253 = 0x20
0x30e: V254 = ADD 0x20 V243
---
Entry stack: [V12, S4, S3, S2, V238, V240]
Stack pops: 2
Stack additions: [V254, S0]
Exit stack: [V12, S4, S3, S2, V254, V240]

================================

Block 0x311
[0x311:0x31e]
---
Predecessors: [0x2e5, 0x2f8, 0x49d]
Successors: []
---
0x311 JUMPDEST
0x312 POP
0x313 SWAP3
0x314 POP
0x315 POP
0x316 POP
0x317 PUSH1 0x40
0x319 MLOAD
0x31a DUP1
0x31b SWAP2
0x31c SUB
0x31d SWAP1
0x31e RETURN
---
0x311: JUMPDEST 
0x317: V255 = 0x40
0x319: V256 = M[0x40]
0x31c: V257 = SUB S1 V256
0x31e: RETURN V256 V257
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x31f
[0x31f:0x325]
---
Predecessors: [0x25]
Successors: [0x326, 0x327]
---
0x31f JUMPDEST
0x320 CALLVALUE
0x321 ISZERO
0x322 PUSH2 0x327
0x325 JUMPI
---
0x31f: JUMPDEST 
0x320: V258 = CALLVALUE
0x321: V259 = ISZERO V258
0x322: V260 = 0x327
0x325: JUMPI 0x327 V259
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x326
[0x326:0x326]
---
Predecessors: [0x31f]
Successors: []
---
0x326 INVALID
---
0x326: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x327
[0x327:0x33d]
---
Predecessors: [0x31f]
Successors: [0x62d]
---
0x327 JUMPDEST
0x328 PUSH2 0x33e
0x32b PUSH1 0x1
0x32d PUSH1 0xa0
0x32f PUSH1 0x2
0x331 EXP
0x332 SUB
0x333 PUSH1 0x4
0x335 CALLDATALOAD
0x336 AND
0x337 PUSH1 0x24
0x339 CALLDATALOAD
0x33a PUSH2 0x62d
0x33d JUMP
---
0x327: JUMPDEST 
0x328: V261 = 0x33e
0x32b: V262 = 0x1
0x32d: V263 = 0xa0
0x32f: V264 = 0x2
0x331: V265 = EXP 0x2 0xa0
0x332: V266 = SUB 0x10000000000000000000000000000000000000000 0x1
0x333: V267 = 0x4
0x335: V268 = CALLDATALOAD 0x4
0x336: V269 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0x337: V270 = 0x24
0x339: V271 = CALLDATALOAD 0x24
0x33a: V272 = 0x62d
0x33d: JUMP 0x62d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x33e, V269, V271]
Exit stack: [V12, 0x33e, V269, V271]

================================

Block 0x33e
[0x33e:0x351]
---
Predecessors: [0x6d0, 0x806, 0x9d8, 0xb20, 0xb27]
Successors: []
---
0x33e JUMPDEST
0x33f PUSH1 0x40
0x341 DUP1
0x342 MLOAD
0x343 SWAP2
0x344 ISZERO
0x345 ISZERO
0x346 DUP3
0x347 MSTORE
0x348 MLOAD
0x349 SWAP1
0x34a DUP2
0x34b SWAP1
0x34c SUB
0x34d PUSH1 0x20
0x34f ADD
0x350 SWAP1
0x351 RETURN
---
0x33e: JUMPDEST 
0x33f: V273 = 0x40
0x342: V274 = M[0x40]
0x344: V275 = ISZERO S0
0x345: V276 = ISZERO V275
0x347: M[V274] = V276
0x348: V277 = M[0x40]
0x34c: V278 = SUB V274 V277
0x34d: V279 = 0x20
0x34f: V280 = ADD 0x20 V278
0x351: RETURN V277 V280
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x352
[0x352:0x358]
---
Predecessors: [0x30]
Successors: [0x359, 0x35a]
---
0x352 JUMPDEST
0x353 CALLVALUE
0x354 ISZERO
0x355 PUSH2 0x35a
0x358 JUMPI
---
0x352: JUMPDEST 
0x353: V281 = CALLVALUE
0x354: V282 = ISZERO V281
0x355: V283 = 0x35a
0x358: JUMPI 0x35a V282
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x359
[0x359:0x359]
---
Predecessors: [0x352]
Successors: []
---
0x359 INVALID
---
0x359: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35a
[0x35a:0x361]
---
Predecessors: [0x352]
Successors: [0x6d6]
---
0x35a JUMPDEST
0x35b PUSH2 0x362
0x35e PUSH2 0x6d6
0x361 JUMP
---
0x35a: JUMPDEST 
0x35b: V284 = 0x362
0x35e: V285 = 0x6d6
0x361: JUMP 0x6d6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x362]
Exit stack: [V12, 0x362]

================================

Block 0x362
[0x362:0x373]
---
Predecessors: [0x6d6, 0x6dc, 0x86f, 0x8f8, 0xb5e]
Successors: []
---
0x362 JUMPDEST
0x363 PUSH1 0x40
0x365 DUP1
0x366 MLOAD
0x367 SWAP2
0x368 DUP3
0x369 MSTORE
0x36a MLOAD
0x36b SWAP1
0x36c DUP2
0x36d SWAP1
0x36e SUB
0x36f PUSH1 0x20
0x371 ADD
0x372 SWAP1
0x373 RETURN
---
0x362: JUMPDEST 
0x363: V286 = 0x40
0x366: V287 = M[0x40]
0x369: M[V287] = S0
0x36a: V288 = M[0x40]
0x36e: V289 = SUB V287 V288
0x36f: V290 = 0x20
0x371: V291 = ADD 0x20 V289
0x373: RETURN V288 V291
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x374
[0x374:0x37a]
---
Predecessors: [0x3b]
Successors: [0x37b, 0x37c]
---
0x374 JUMPDEST
0x375 CALLVALUE
0x376 ISZERO
0x377 PUSH2 0x37c
0x37a JUMPI
---
0x374: JUMPDEST 
0x375: V292 = CALLVALUE
0x376: V293 = ISZERO V292
0x377: V294 = 0x37c
0x37a: JUMPI 0x37c V293
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37b
[0x37b:0x37b]
---
Predecessors: [0x374]
Successors: []
---
0x37b INVALID
---
0x37b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37c
[0x37c:0x383]
---
Predecessors: [0x374]
Successors: [0x6dc]
---
0x37c JUMPDEST
0x37d PUSH2 0x362
0x380 PUSH2 0x6dc
0x383 JUMP
---
0x37c: JUMPDEST 
0x37d: V295 = 0x362
0x380: V296 = 0x6dc
0x383: JUMP 0x6dc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x362]
Exit stack: [V12, 0x362]

================================

Block 0x384
[0x384:0x395]
---
Predecessors: []
Successors: []
---
0x384 JUMPDEST
0x385 PUSH1 0x40
0x387 DUP1
0x388 MLOAD
0x389 SWAP2
0x38a DUP3
0x38b MSTORE
0x38c MLOAD
0x38d SWAP1
0x38e DUP2
0x38f SWAP1
0x390 SUB
0x391 PUSH1 0x20
0x393 ADD
0x394 SWAP1
0x395 RETURN
---
0x384: JUMPDEST 
0x385: V297 = 0x40
0x388: V298 = M[0x40]
0x38b: M[V298] = S0
0x38c: V299 = M[0x40]
0x390: V300 = SUB V298 V299
0x391: V301 = 0x20
0x393: V302 = ADD 0x20 V300
0x395: RETURN V299 V302
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x396
[0x396:0x39c]
---
Predecessors: [0x46]
Successors: [0x39d, 0x39e]
---
0x396 JUMPDEST
0x397 CALLVALUE
0x398 ISZERO
0x399 PUSH2 0x39e
0x39c JUMPI
---
0x396: JUMPDEST 
0x397: V303 = CALLVALUE
0x398: V304 = ISZERO V303
0x399: V305 = 0x39e
0x39c: JUMPI 0x39e V304
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39d
[0x39d:0x39d]
---
Predecessors: [0x396]
Successors: []
---
0x39d INVALID
---
0x39d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39e
[0x39e:0x3ba]
---
Predecessors: [0x396]
Successors: [0x6e2]
---
0x39e JUMPDEST
0x39f PUSH2 0x33e
0x3a2 PUSH1 0x1
0x3a4 PUSH1 0xa0
0x3a6 PUSH1 0x2
0x3a8 EXP
0x3a9 SUB
0x3aa PUSH1 0x4
0x3ac CALLDATALOAD
0x3ad DUP2
0x3ae AND
0x3af SWAP1
0x3b0 PUSH1 0x24
0x3b2 CALLDATALOAD
0x3b3 AND
0x3b4 PUSH1 0x44
0x3b6 CALLDATALOAD
0x3b7 PUSH2 0x6e2
0x3ba JUMP
---
0x39e: JUMPDEST 
0x39f: V306 = 0x33e
0x3a2: V307 = 0x1
0x3a4: V308 = 0xa0
0x3a6: V309 = 0x2
0x3a8: V310 = EXP 0x2 0xa0
0x3a9: V311 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3aa: V312 = 0x4
0x3ac: V313 = CALLDATALOAD 0x4
0x3ae: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V313
0x3b0: V315 = 0x24
0x3b2: V316 = CALLDATALOAD 0x24
0x3b3: V317 = AND V316 0xffffffffffffffffffffffffffffffffffffffff
0x3b4: V318 = 0x44
0x3b6: V319 = CALLDATALOAD 0x44
0x3b7: V320 = 0x6e2
0x3ba: JUMP 0x6e2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x33e, V314, V317, V319]
Exit stack: [V12, 0x33e, V314, V317, V319]

================================

Block 0x3bb
[0x3bb:0x3ce]
---
Predecessors: []
Successors: []
---
0x3bb JUMPDEST
0x3bc PUSH1 0x40
0x3be DUP1
0x3bf MLOAD
0x3c0 SWAP2
0x3c1 ISZERO
0x3c2 ISZERO
0x3c3 DUP3
0x3c4 MSTORE
0x3c5 MLOAD
0x3c6 SWAP1
0x3c7 DUP2
0x3c8 SWAP1
0x3c9 SUB
0x3ca PUSH1 0x20
0x3cc ADD
0x3cd SWAP1
0x3ce RETURN
---
0x3bb: JUMPDEST 
0x3bc: V321 = 0x40
0x3bf: V322 = M[0x40]
0x3c1: V323 = ISZERO S0
0x3c2: V324 = ISZERO V323
0x3c4: M[V322] = V324
0x3c5: V325 = M[0x40]
0x3c9: V326 = SUB V322 V325
0x3ca: V327 = 0x20
0x3cc: V328 = ADD 0x20 V326
0x3ce: RETURN V325 V328
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3cf
[0x3cf:0x3d5]
---
Predecessors: [0x51]
Successors: [0x3d6, 0x3d7]
---
0x3cf JUMPDEST
0x3d0 CALLVALUE
0x3d1 ISZERO
0x3d2 PUSH2 0x3d7
0x3d5 JUMPI
---
0x3cf: JUMPDEST 
0x3d0: V329 = CALLVALUE
0x3d1: V330 = ISZERO V329
0x3d2: V331 = 0x3d7
0x3d5: JUMPI 0x3d7 V330
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d6
[0x3d6:0x3d6]
---
Predecessors: [0x3cf]
Successors: []
---
0x3d6 INVALID
---
0x3d6: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d7
[0x3d7:0x3de]
---
Predecessors: [0x3cf]
Successors: [0x812]
---
0x3d7 JUMPDEST
0x3d8 PUSH2 0x3df
0x3db PUSH2 0x812
0x3de JUMP
---
0x3d7: JUMPDEST 
0x3d8: V332 = 0x3df
0x3db: V333 = 0x812
0x3de: JUMP 0x812
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x3df]
Exit stack: [V12, 0x3df]

================================

Block 0x3df
[0x3df:0x3f4]
---
Predecessors: [0x815]
Successors: []
---
0x3df JUMPDEST
0x3e0 PUSH1 0x40
0x3e2 DUP1
0x3e3 MLOAD
0x3e4 PUSH1 0xff
0x3e6 SWAP1
0x3e7 SWAP3
0x3e8 AND
0x3e9 DUP3
0x3ea MSTORE
0x3eb MLOAD
0x3ec SWAP1
0x3ed DUP2
0x3ee SWAP1
0x3ef SUB
0x3f0 PUSH1 0x20
0x3f2 ADD
0x3f3 SWAP1
0x3f4 RETURN
---
0x3df: JUMPDEST 
0x3e0: V334 = 0x40
0x3e3: V335 = M[0x40]
0x3e4: V336 = 0xff
0x3e8: V337 = AND 0x12 0xff
0x3ea: M[V335] = 0x12
0x3eb: V338 = M[0x40]
0x3ef: V339 = SUB V335 V338
0x3f0: V340 = 0x20
0x3f2: V341 = ADD 0x20 V339
0x3f4: RETURN V338 V341
---
Entry stack: [V12, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f5
[0x3f5:0x3fb]
---
Predecessors: [0x5c]
Successors: [0x3fc, 0x3fd]
---
0x3f5 JUMPDEST
0x3f6 CALLVALUE
0x3f7 ISZERO
0x3f8 PUSH2 0x3fd
0x3fb JUMPI
---
0x3f5: JUMPDEST 
0x3f6: V342 = CALLVALUE
0x3f7: V343 = ISZERO V342
0x3f8: V344 = 0x3fd
0x3fb: JUMPI 0x3fd V343
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3fc
[0x3fc:0x3fc]
---
Predecessors: [0x3f5]
Successors: []
---
0x3fc INVALID
---
0x3fc: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3fd
[0x3fd:0x404]
---
Predecessors: [0x3f5]
Successors: [0x818]
---
0x3fd JUMPDEST
0x3fe PUSH2 0x28d
0x401 PUSH2 0x818
0x404 JUMP
---
0x3fd: JUMPDEST 
0x3fe: V345 = 0x28d
0x401: V346 = 0x818
0x404: JUMP 0x818
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28d]
Exit stack: [V12, 0x28d]

================================

Block 0x405
[0x405:0x406]
---
Predecessors: []
Successors: []
---
0x405 JUMPDEST
0x406 STOP
---
0x405: JUMPDEST 
0x406: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x407
[0x407:0x40d]
---
Predecessors: [0x67]
Successors: [0x40e, 0x40f]
---
0x407 JUMPDEST
0x408 CALLVALUE
0x409 ISZERO
0x40a PUSH2 0x40f
0x40d JUMPI
---
0x407: JUMPDEST 
0x408: V347 = CALLVALUE
0x409: V348 = ISZERO V347
0x40a: V349 = 0x40f
0x40d: JUMPI 0x40f V348
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x40e
[0x40e:0x40e]
---
Predecessors: [0x407]
Successors: []
---
0x40e INVALID
---
0x40e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x40f
[0x40f:0x422]
---
Predecessors: [0x407]
Successors: [0x855]
---
0x40f JUMPDEST
0x410 PUSH2 0x362
0x413 PUSH1 0x1
0x415 PUSH1 0xa0
0x417 PUSH1 0x2
0x419 EXP
0x41a SUB
0x41b PUSH1 0x4
0x41d CALLDATALOAD
0x41e AND
0x41f PUSH2 0x855
0x422 JUMP
---
0x40f: JUMPDEST 
0x410: V350 = 0x362
0x413: V351 = 0x1
0x415: V352 = 0xa0
0x417: V353 = 0x2
0x419: V354 = EXP 0x2 0xa0
0x41a: V355 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41b: V356 = 0x4
0x41d: V357 = CALLDATALOAD 0x4
0x41e: V358 = AND V357 0xffffffffffffffffffffffffffffffffffffffff
0x41f: V359 = 0x855
0x422: JUMP 0x855
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x362, V358]
Exit stack: [V12, 0x362, V358]

================================

Block 0x423
[0x423:0x434]
---
Predecessors: []
Successors: []
---
0x423 JUMPDEST
0x424 PUSH1 0x40
0x426 DUP1
0x427 MLOAD
0x428 SWAP2
0x429 DUP3
0x42a MSTORE
0x42b MLOAD
0x42c SWAP1
0x42d DUP2
0x42e SWAP1
0x42f SUB
0x430 PUSH1 0x20
0x432 ADD
0x433 SWAP1
0x434 RETURN
---
0x423: JUMPDEST 
0x424: V360 = 0x40
0x427: V361 = M[0x40]
0x42a: M[V361] = S0
0x42b: V362 = M[0x40]
0x42f: V363 = SUB V361 V362
0x430: V364 = 0x20
0x432: V365 = ADD 0x20 V363
0x434: RETURN V362 V365
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x435
[0x435:0x43b]
---
Predecessors: [0x72]
Successors: [0x43c, 0x43d]
---
0x435 JUMPDEST
0x436 CALLVALUE
0x437 ISZERO
0x438 PUSH2 0x43d
0x43b JUMPI
---
0x435: JUMPDEST 
0x436: V366 = CALLVALUE
0x437: V367 = ISZERO V366
0x438: V368 = 0x43d
0x43b: JUMPI 0x43d V367
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x43c
[0x43c:0x43c]
---
Predecessors: [0x435]
Successors: []
---
0x43c INVALID
---
0x43c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x43d
[0x43d:0x444]
---
Predecessors: [0x435]
Successors: [0x874]
---
0x43d JUMPDEST
0x43e PUSH2 0x28d
0x441 PUSH2 0x874
0x444 JUMP
---
0x43d: JUMPDEST 
0x43e: V369 = 0x28d
0x441: V370 = 0x874
0x444: JUMP 0x874
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x28d]
Exit stack: [V12, 0x28d]

================================

Block 0x445
[0x445:0x446]
---
Predecessors: []
Successors: []
---
0x445 JUMPDEST
0x446 STOP
---
0x445: JUMPDEST 
0x446: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x447
[0x447:0x44d]
---
Predecessors: [0x7d]
Successors: [0x44e, 0x44f]
---
0x447 JUMPDEST
0x448 CALLVALUE
0x449 ISZERO
0x44a PUSH2 0x44f
0x44d JUMPI
---
0x447: JUMPDEST 
0x448: V371 = CALLVALUE
0x449: V372 = ISZERO V371
0x44a: V373 = 0x44f
0x44d: JUMPI 0x44f V372
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x44e
[0x44e:0x44e]
---
Predecessors: [0x447]
Successors: []
---
0x44e INVALID
---
0x44e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x44f
[0x44f:0x456]
---
Predecessors: [0x447]
Successors: [0x8b7]
---
0x44f JUMPDEST
0x450 PUSH2 0x29f
0x453 PUSH2 0x8b7
0x456 JUMP
---
0x44f: JUMPDEST 
0x450: V374 = 0x29f
0x453: V375 = 0x8b7
0x456: JUMP 0x8b7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29f]
Exit stack: [V12, 0x29f]

================================

Block 0x457
[0x457:0x47c]
---
Predecessors: []
Successors: [0x2e5, 0x47d]
---
0x457 JUMPDEST
0x458 PUSH1 0x40
0x45a DUP1
0x45b MLOAD
0x45c PUSH1 0x20
0x45e DUP1
0x45f DUP3
0x460 MSTORE
0x461 DUP4
0x462 MLOAD
0x463 DUP2
0x464 DUP4
0x465 ADD
0x466 MSTORE
0x467 DUP4
0x468 MLOAD
0x469 SWAP2
0x46a SWAP3
0x46b DUP4
0x46c SWAP3
0x46d SWAP1
0x46e DUP4
0x46f ADD
0x470 SWAP2
0x471 DUP6
0x472 ADD
0x473 SWAP1
0x474 DUP1
0x475 DUP4
0x476 DUP4
0x477 DUP3
0x478 ISZERO
0x479 PUSH2 0x2e5
0x47c JUMPI
---
0x457: JUMPDEST 
0x458: V376 = 0x40
0x45b: V377 = M[0x40]
0x45c: V378 = 0x20
0x460: M[V377] = 0x20
0x462: V379 = M[S0]
0x465: V380 = ADD V377 0x20
0x466: M[V380] = V379
0x468: V381 = M[S0]
0x46f: V382 = ADD V377 0x40
0x472: V383 = ADD S0 0x20
0x478: V384 = ISZERO V381
0x479: V385 = 0x2e5
0x47c: JUMPI 0x2e5 V384
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V377, V377, V382, V383, V381, V381, V382, V383]
Exit stack: [S0, V377, V377, V382, V383, V381, V381, V382, V383]

================================

Block 0x47d
[0x47d:0x48a]
---
Predecessors: [0x457]
Successors: [0x2e5, 0x48b]
---
0x47d JUMPDEST
0x47e DUP1
0x47f MLOAD
0x480 DUP3
0x481 MSTORE
0x482 PUSH1 0x20
0x484 DUP4
0x485 GT
0x486 ISZERO
0x487 PUSH2 0x2e5
0x48a JUMPI
---
0x47d: JUMPDEST 
0x47f: V386 = M[V383]
0x481: M[V382] = V386
0x482: V387 = 0x20
0x485: V388 = GT V381 0x20
0x486: V389 = ISZERO V388
0x487: V390 = 0x2e5
0x48a: JUMPI 0x2e5 V389
---
Entry stack: [S8, V377, V377, V382, V383, V381, V381, V382, V383]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V377, V377, V382, V383, V381, V381, V382, V383]

================================

Block 0x48b
[0x48b:0x49c]
---
Predecessors: [0x47d]
Successors: [0x2c5]
---
0x48b PUSH1 0x1f
0x48d NOT
0x48e SWAP1
0x48f SWAP3
0x490 ADD
0x491 SWAP2
0x492 PUSH1 0x20
0x494 SWAP2
0x495 DUP3
0x496 ADD
0x497 SWAP2
0x498 ADD
0x499 PUSH2 0x2c5
0x49c JUMP
---
0x48b: V391 = 0x1f
0x48d: V392 = NOT 0x1f
0x490: V393 = ADD V381 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x492: V394 = 0x20
0x496: V395 = ADD 0x20 V382
0x498: V396 = ADD 0x20 V383
0x499: V397 = 0x2c5
0x49c: JUMP 0x2c5
---
Entry stack: [S8, V377, V377, V382, V383, V381, V381, V382, V383]
Stack pops: 3
Stack additions: [V393, V395, V396]
Exit stack: [S8, V377, V377, V382, V383, V381, V393, V395, V396]

================================

Block 0x49d
[0x49d:0x4af]
---
Predecessors: []
Successors: [0x311, 0x4b0]
---
0x49d JUMPDEST
0x49e POP
0x49f POP
0x4a0 POP
0x4a1 SWAP1
0x4a2 POP
0x4a3 SWAP1
0x4a4 DUP2
0x4a5 ADD
0x4a6 SWAP1
0x4a7 PUSH1 0x1f
0x4a9 AND
0x4aa DUP1
0x4ab ISZERO
0x4ac PUSH2 0x311
0x4af JUMPI
---
0x49d: JUMPDEST 
0x4a5: V398 = ADD S3 S5
0x4a7: V399 = 0x1f
0x4a9: V400 = AND 0x1f S3
0x4ab: V401 = ISZERO V400
0x4ac: V402 = 0x311
0x4af: JUMPI 0x311 V401
---
Entry stack: []
Stack pops: 6
Stack additions: [V398, V400]
Exit stack: [V398, V400]

================================

Block 0x4b0
[0x4b0:0x4c8]
---
Predecessors: [0x49d]
Successors: [0x4c9]
---
0x4b0 DUP1
0x4b1 DUP3
0x4b2 SUB
0x4b3 DUP1
0x4b4 MLOAD
0x4b5 PUSH1 0x1
0x4b7 DUP4
0x4b8 PUSH1 0x20
0x4ba SUB
0x4bb PUSH2 0x100
0x4be EXP
0x4bf SUB
0x4c0 NOT
0x4c1 AND
0x4c2 DUP2
0x4c3 MSTORE
0x4c4 PUSH1 0x20
0x4c6 ADD
0x4c7 SWAP2
0x4c8 POP
---
0x4b2: V403 = SUB V398 V400
0x4b4: V404 = M[V403]
0x4b5: V405 = 0x1
0x4b8: V406 = 0x20
0x4ba: V407 = SUB 0x20 V400
0x4bb: V408 = 0x100
0x4be: V409 = EXP 0x100 V407
0x4bf: V410 = SUB V409 0x1
0x4c0: V411 = NOT V410
0x4c1: V412 = AND V411 V404
0x4c3: M[V403] = V412
0x4c4: V413 = 0x20
0x4c6: V414 = ADD 0x20 V403
---
Entry stack: [V398, V400]
Stack pops: 2
Stack additions: [V414, S0]
Exit stack: [V414, V400]

================================

Block 0x4c9
[0x4c9:0x4d6]
---
Predecessors: [0x4b0]
Successors: []
---
0x4c9 JUMPDEST
0x4ca POP
0x4cb SWAP3
0x4cc POP
0x4cd POP
0x4ce POP
0x4cf PUSH1 0x40
0x4d1 MLOAD
0x4d2 DUP1
0x4d3 SWAP2
0x4d4 SUB
0x4d5 SWAP1
0x4d6 RETURN
---
0x4c9: JUMPDEST 
0x4cf: V415 = 0x40
0x4d1: V416 = M[0x40]
0x4d4: V417 = SUB V414 V416
0x4d6: RETURN V416 V417
---
Entry stack: [V414, V400]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x4d7
[0x4d7:0x4dd]
---
Predecessors: [0x88]
Successors: [0x4de, 0x4df]
---
0x4d7 JUMPDEST
0x4d8 CALLVALUE
0x4d9 ISZERO
0x4da PUSH2 0x4df
0x4dd JUMPI
---
0x4d7: JUMPDEST 
0x4d8: V418 = CALLVALUE
0x4d9: V419 = ISZERO V418
0x4da: V420 = 0x4df
0x4dd: JUMPI 0x4df V419
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4de
[0x4de:0x4de]
---
Predecessors: [0x4d7]
Successors: []
---
0x4de INVALID
---
0x4de: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4df
[0x4df:0x4e6]
---
Predecessors: [0x4d7]
Successors: [0x8f8]
---
0x4df JUMPDEST
0x4e0 PUSH2 0x362
0x4e3 PUSH2 0x8f8
0x4e6 JUMP
---
0x4df: JUMPDEST 
0x4e0: V421 = 0x362
0x4e3: V422 = 0x8f8
0x4e6: JUMP 0x8f8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x362]
Exit stack: [V12, 0x362]

================================

Block 0x4e7
[0x4e7:0x4f8]
---
Predecessors: []
Successors: []
---
0x4e7 JUMPDEST
0x4e8 PUSH1 0x40
0x4ea DUP1
0x4eb MLOAD
0x4ec SWAP2
0x4ed DUP3
0x4ee MSTORE
0x4ef MLOAD
0x4f0 SWAP1
0x4f1 DUP2
0x4f2 SWAP1
0x4f3 SUB
0x4f4 PUSH1 0x20
0x4f6 ADD
0x4f7 SWAP1
0x4f8 RETURN
---
0x4e7: JUMPDEST 
0x4e8: V423 = 0x40
0x4eb: V424 = M[0x40]
0x4ee: M[V424] = S0
0x4ef: V425 = M[0x40]
0x4f3: V426 = SUB V424 V425
0x4f4: V427 = 0x20
0x4f6: V428 = ADD 0x20 V426
0x4f8: RETURN V425 V428
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4f9
[0x4f9:0x4ff]
---
Predecessors: [0x93]
Successors: [0x500, 0x501]
---
0x4f9 JUMPDEST
0x4fa CALLVALUE
0x4fb ISZERO
0x4fc PUSH2 0x501
0x4ff JUMPI
---
0x4f9: JUMPDEST 
0x4fa: V429 = CALLVALUE
0x4fb: V430 = ISZERO V429
0x4fc: V431 = 0x501
0x4ff: JUMPI 0x501 V430
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x500
[0x500:0x500]
---
Predecessors: [0x4f9]
Successors: []
---
0x500 INVALID
---
0x500: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x501
[0x501:0x517]
---
Predecessors: [0x4f9]
Successors: [0x8fe]
---
0x501 JUMPDEST
0x502 PUSH2 0x33e
0x505 PUSH1 0x1
0x507 PUSH1 0xa0
0x509 PUSH1 0x2
0x50b EXP
0x50c SUB
0x50d PUSH1 0x4
0x50f CALLDATALOAD
0x510 AND
0x511 PUSH1 0x24
0x513 CALLDATALOAD
0x514 PUSH2 0x8fe
0x517 JUMP
---
0x501: JUMPDEST 
0x502: V432 = 0x33e
0x505: V433 = 0x1
0x507: V434 = 0xa0
0x509: V435 = 0x2
0x50b: V436 = EXP 0x2 0xa0
0x50c: V437 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50d: V438 = 0x4
0x50f: V439 = CALLDATALOAD 0x4
0x510: V440 = AND V439 0xffffffffffffffffffffffffffffffffffffffff
0x511: V441 = 0x24
0x513: V442 = CALLDATALOAD 0x24
0x514: V443 = 0x8fe
0x517: JUMP 0x8fe
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x33e, V440, V442]
Exit stack: [V12, 0x33e, V440, V442]

================================

Block 0x518
[0x518:0x52b]
---
Predecessors: []
Successors: []
---
0x518 JUMPDEST
0x519 PUSH1 0x40
0x51b DUP1
0x51c MLOAD
0x51d SWAP2
0x51e ISZERO
0x51f ISZERO
0x520 DUP3
0x521 MSTORE
0x522 MLOAD
0x523 SWAP1
0x524 DUP2
0x525 SWAP1
0x526 SUB
0x527 PUSH1 0x20
0x529 ADD
0x52a SWAP1
0x52b RETURN
---
0x518: JUMPDEST 
0x519: V444 = 0x40
0x51c: V445 = M[0x40]
0x51e: V446 = ISZERO S0
0x51f: V447 = ISZERO V446
0x521: M[V445] = V447
0x522: V448 = M[0x40]
0x526: V449 = SUB V445 V448
0x527: V450 = 0x20
0x529: V451 = ADD 0x20 V449
0x52b: RETURN V448 V451
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x52c
[0x52c:0x532]
---
Predecessors: [0x9e]
Successors: [0x533, 0x534]
---
0x52c JUMPDEST
0x52d CALLVALUE
0x52e ISZERO
0x52f PUSH2 0x534
0x532 JUMPI
---
0x52c: JUMPDEST 
0x52d: V452 = CALLVALUE
0x52e: V453 = ISZERO V452
0x52f: V454 = 0x534
0x532: JUMPI 0x534 V453
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x533
[0x533:0x533]
---
Predecessors: [0x52c]
Successors: []
---
0x533 INVALID
---
0x533: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x534
[0x534:0x53b]
---
Predecessors: [0x52c]
Successors: [0x9e1]
---
0x534 JUMPDEST
0x535 PUSH2 0x53c
0x538 PUSH2 0x9e1
0x53b JUMP
---
0x534: JUMPDEST 
0x535: V455 = 0x53c
0x538: V456 = 0x9e1
0x53b: JUMP 0x9e1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x53c]
Exit stack: [V12, 0x53c]

================================

Block 0x53c
[0x53c:0x563]
---
Predecessors: [0x9f8]
Successors: []
---
0x53c JUMPDEST
0x53d PUSH1 0x40
0x53f DUP1
0x540 MLOAD
0x541 SWAP5
0x542 DUP6
0x543 MSTORE
0x544 PUSH1 0x20
0x546 DUP6
0x547 ADD
0x548 SWAP4
0x549 SWAP1
0x54a SWAP4
0x54b MSTORE
0x54c DUP4
0x54d DUP4
0x54e ADD
0x54f SWAP2
0x550 SWAP1
0x551 SWAP2
0x552 MSTORE
0x553 ISZERO
0x554 ISZERO
0x555 PUSH1 0x60
0x557 DUP4
0x558 ADD
0x559 MSTORE
0x55a MLOAD
0x55b SWAP1
0x55c DUP2
0x55d SWAP1
0x55e SUB
0x55f PUSH1 0x80
0x561 ADD
0x562 SWAP1
0x563 RETURN
---
0x53c: JUMPDEST 
0x53d: V457 = 0x40
0x540: V458 = M[0x40]
0x543: M[V458] = V792
0x544: V459 = 0x20
0x547: V460 = ADD V458 0x20
0x54b: M[V460] = V794
0x54e: V461 = ADD 0x40 V458
0x552: M[V461] = V796
0x553: V462 = ISZERO V804
0x554: V463 = ISZERO V462
0x555: V464 = 0x60
0x558: V465 = ADD V458 0x60
0x559: M[V465] = V463
0x55a: V466 = M[0x40]
0x55e: V467 = SUB V458 V466
0x55f: V468 = 0x80
0x561: V469 = ADD 0x80 V467
0x563: RETURN V466 V469
---
Entry stack: [V12, V792, V794, V796, V804]
Stack pops: 4
Stack additions: []
Exit stack: [V12]

================================

Block 0x564
[0x564:0x56a]
---
Predecessors: [0xa9]
Successors: [0x56b, 0x56c]
---
0x564 JUMPDEST
0x565 CALLVALUE
0x566 ISZERO
0x567 PUSH2 0x56c
0x56a JUMPI
---
0x564: JUMPDEST 
0x565: V470 = CALLVALUE
0x566: V471 = ISZERO V470
0x567: V472 = 0x56c
0x56a: JUMPI 0x56c V471
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x56b
[0x56b:0x56b]
---
Predecessors: [0x564]
Successors: []
---
0x56b INVALID
---
0x56b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x56c
[0x56c:0x57f]
---
Predecessors: [0x564]
Successors: [0x9fe]
---
0x56c JUMPDEST
0x56d PUSH2 0x33e
0x570 PUSH1 0x1
0x572 PUSH1 0xa0
0x574 PUSH1 0x2
0x576 EXP
0x577 SUB
0x578 PUSH1 0x4
0x57a CALLDATALOAD
0x57b AND
0x57c PUSH2 0x9fe
0x57f JUMP
---
0x56c: JUMPDEST 
0x56d: V473 = 0x33e
0x570: V474 = 0x1
0x572: V475 = 0xa0
0x574: V476 = 0x2
0x576: V477 = EXP 0x2 0xa0
0x577: V478 = SUB 0x10000000000000000000000000000000000000000 0x1
0x578: V479 = 0x4
0x57a: V480 = CALLDATALOAD 0x4
0x57b: V481 = AND V480 0xffffffffffffffffffffffffffffffffffffffff
0x57c: V482 = 0x9fe
0x57f: JUMP 0x9fe
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x33e, V481]
Exit stack: [V12, 0x33e, V481]

================================

Block 0x580
[0x580:0x593]
---
Predecessors: []
Successors: []
---
0x580 JUMPDEST
0x581 PUSH1 0x40
0x583 DUP1
0x584 MLOAD
0x585 SWAP2
0x586 ISZERO
0x587 ISZERO
0x588 DUP3
0x589 MSTORE
0x58a MLOAD
0x58b SWAP1
0x58c DUP2
0x58d SWAP1
0x58e SUB
0x58f PUSH1 0x20
0x591 ADD
0x592 SWAP1
0x593 RETURN
---
0x580: JUMPDEST 
0x581: V483 = 0x40
0x584: V484 = M[0x40]
0x586: V485 = ISZERO S0
0x587: V486 = ISZERO V485
0x589: M[V484] = V486
0x58a: V487 = M[0x40]
0x58e: V488 = SUB V484 V487
0x58f: V489 = 0x20
0x591: V490 = ADD 0x20 V488
0x593: RETURN V487 V490
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x594
[0x594:0x59a]
---
Predecessors: [0xb4]
Successors: [0x59b, 0x59c]
---
0x594 JUMPDEST
0x595 CALLVALUE
0x596 ISZERO
0x597 PUSH2 0x59c
0x59a JUMPI
---
0x594: JUMPDEST 
0x595: V491 = CALLVALUE
0x596: V492 = ISZERO V491
0x597: V493 = 0x59c
0x59a: JUMPI 0x59c V492
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x59b
[0x59b:0x59b]
---
Predecessors: [0x594]
Successors: []
---
0x59b INVALID
---
0x59b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x59c
[0x59c:0x5a3]
---
Predecessors: [0x594]
Successors: [0xb27]
---
0x59c JUMPDEST
0x59d PUSH2 0x33e
0x5a0 PUSH2 0xb27
0x5a3 JUMP
---
0x59c: JUMPDEST 
0x59d: V494 = 0x33e
0x5a0: V495 = 0xb27
0x5a3: JUMP 0xb27
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x33e]
Exit stack: [V12, 0x33e]

================================

Block 0x5a4
[0x5a4:0x5b7]
---
Predecessors: []
Successors: []
---
0x5a4 JUMPDEST
0x5a5 PUSH1 0x40
0x5a7 DUP1
0x5a8 MLOAD
0x5a9 SWAP2
0x5aa ISZERO
0x5ab ISZERO
0x5ac DUP3
0x5ad MSTORE
0x5ae MLOAD
0x5af SWAP1
0x5b0 DUP2
0x5b1 SWAP1
0x5b2 SUB
0x5b3 PUSH1 0x20
0x5b5 ADD
0x5b6 SWAP1
0x5b7 RETURN
---
0x5a4: JUMPDEST 
0x5a5: V496 = 0x40
0x5a8: V497 = M[0x40]
0x5aa: V498 = ISZERO S0
0x5ab: V499 = ISZERO V498
0x5ad: M[V497] = V499
0x5ae: V500 = M[0x40]
0x5b2: V501 = SUB V497 V500
0x5b3: V502 = 0x20
0x5b5: V503 = ADD 0x20 V501
0x5b7: RETURN V500 V503
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5b8
[0x5b8:0x5be]
---
Predecessors: [0xbf]
Successors: [0x5bf, 0x5c0]
---
0x5b8 JUMPDEST
0x5b9 CALLVALUE
0x5ba ISZERO
0x5bb PUSH2 0x5c0
0x5be JUMPI
---
0x5b8: JUMPDEST 
0x5b9: V504 = CALLVALUE
0x5ba: V505 = ISZERO V504
0x5bb: V506 = 0x5c0
0x5be: JUMPI 0x5c0 V505
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5bf
[0x5bf:0x5bf]
---
Predecessors: [0x5b8]
Successors: []
---
0x5bf INVALID
---
0x5bf: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5c0
[0x5c0:0x5d9]
---
Predecessors: [0x5b8]
Successors: [0xb37]
---
0x5c0 JUMPDEST
0x5c1 PUSH2 0x362
0x5c4 PUSH1 0x1
0x5c6 PUSH1 0xa0
0x5c8 PUSH1 0x2
0x5ca EXP
0x5cb SUB
0x5cc PUSH1 0x4
0x5ce CALLDATALOAD
0x5cf DUP2
0x5d0 AND
0x5d1 SWAP1
0x5d2 PUSH1 0x24
0x5d4 CALLDATALOAD
0x5d5 AND
0x5d6 PUSH2 0xb37
0x5d9 JUMP
---
0x5c0: JUMPDEST 
0x5c1: V507 = 0x362
0x5c4: V508 = 0x1
0x5c6: V509 = 0xa0
0x5c8: V510 = 0x2
0x5ca: V511 = EXP 0x2 0xa0
0x5cb: V512 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5cc: V513 = 0x4
0x5ce: V514 = CALLDATALOAD 0x4
0x5d0: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V514
0x5d2: V516 = 0x24
0x5d4: V517 = CALLDATALOAD 0x24
0x5d5: V518 = AND V517 0xffffffffffffffffffffffffffffffffffffffff
0x5d6: V519 = 0xb37
0x5d9: JUMP 0xb37
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x362, V515, V518]
Exit stack: [V12, 0x362, V515, V518]

================================

Block 0x5da
[0x5da:0x5eb]
---
Predecessors: []
Successors: []
---
0x5da JUMPDEST
0x5db PUSH1 0x40
0x5dd DUP1
0x5de MLOAD
0x5df SWAP2
0x5e0 DUP3
0x5e1 MSTORE
0x5e2 MLOAD
0x5e3 SWAP1
0x5e4 DUP2
0x5e5 SWAP1
0x5e6 SUB
0x5e7 PUSH1 0x20
0x5e9 ADD
0x5ea SWAP1
0x5eb RETURN
---
0x5da: JUMPDEST 
0x5db: V520 = 0x40
0x5de: V521 = M[0x40]
0x5e1: M[V521] = S0
0x5e2: V522 = M[0x40]
0x5e6: V523 = SUB V521 V522
0x5e7: V524 = 0x20
0x5e9: V525 = ADD 0x20 V523
0x5eb: RETURN V522 V525
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5ec
[0x5ec:0x5f3]
---
Predecessors: [0x297]
Successors: [0xb64]
---
0x5ec JUMPDEST
0x5ed PUSH2 0x5f4
0x5f0 PUSH2 0xb64
0x5f3 JUMP
---
0x5ec: JUMPDEST 
0x5ed: V526 = 0x5f4
0x5f0: V527 = 0xb64
0x5f3: JUMP 0xb64
---
Entry stack: [V12, 0x29f]
Stack pops: 0
Stack additions: [0x5f4]
Exit stack: [V12, 0x29f, 0x5f4]

================================

Block 0x5f4
[0x5f4:0x629]
---
Predecessors: [0xb64]
Successors: [0x62a]
---
0x5f4 JUMPDEST
0x5f5 POP
0x5f6 PUSH1 0x40
0x5f8 DUP1
0x5f9 MLOAD
0x5fa DUP1
0x5fb DUP3
0x5fc ADD
0x5fd SWAP1
0x5fe SWAP2
0x5ff MSTORE
0x600 PUSH1 0x9
0x602 DUP2
0x603 MSTORE
0x604 PUSH32 0x5363616d546f6b656e0000000000000000000000000000000000000000000000
0x625 PUSH1 0x20
0x627 DUP3
0x628 ADD
0x629 MSTORE
---
0x5f4: JUMPDEST 
0x5f6: V528 = 0x40
0x5f9: V529 = M[0x40]
0x5fc: V530 = ADD 0x40 V529
0x5ff: M[0x40] = V530
0x600: V531 = 0x9
0x603: M[V529] = 0x9
0x604: V532 = 0x5363616d546f6b656e0000000000000000000000000000000000000000000000
0x625: V533 = 0x20
0x628: V534 = ADD V529 0x20
0x629: M[V534] = 0x5363616d546f6b656e0000000000000000000000000000000000000000000000
---
Entry stack: [V12, 0x29f, V935]
Stack pops: 1
Stack additions: [V529]
Exit stack: [V12, 0x29f, V529]

================================

Block 0x62a
[0x62a:0x62c]
---
Predecessors: [0x5f4]
Successors: [0x29f]
---
0x62a JUMPDEST
0x62b SWAP1
0x62c JUMP
---
0x62a: JUMPDEST 
0x62c: JUMP 0x29f
---
Entry stack: [V12, 0x29f, V529]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V529]

================================

Block 0x62d
[0x62d:0x638]
---
Predecessors: [0x327]
Successors: [0x639, 0x662]
---
0x62d JUMPDEST
0x62e PUSH1 0x0
0x630 DUP2
0x631 ISZERO
0x632 DUP1
0x633 ISZERO
0x634 SWAP1
0x635 PUSH2 0x662
0x638 JUMPI
---
0x62d: JUMPDEST 
0x62e: V535 = 0x0
0x631: V536 = ISZERO V271
0x633: V537 = ISZERO V536
0x635: V538 = 0x662
0x638: JUMPI 0x662 V536
---
Entry stack: [V12, 0x33e, V269, V271]
Stack pops: 1
Stack additions: [S0, 0x0, V537]
Exit stack: [V12, 0x33e, V269, V271, 0x0, V537]

================================

Block 0x639
[0x639:0x661]
---
Predecessors: [0x62d]
Successors: [0x662]
---
0x639 POP
0x63a PUSH1 0x1
0x63c PUSH1 0xa0
0x63e PUSH1 0x2
0x640 EXP
0x641 SUB
0x642 CALLER
0x643 DUP2
0x644 AND
0x645 PUSH1 0x0
0x647 SWAP1
0x648 DUP2
0x649 MSTORE
0x64a PUSH1 0x2
0x64c PUSH1 0x20
0x64e SWAP1
0x64f DUP2
0x650 MSTORE
0x651 PUSH1 0x40
0x653 DUP1
0x654 DUP4
0x655 SHA3
0x656 SWAP4
0x657 DUP8
0x658 AND
0x659 DUP4
0x65a MSTORE
0x65b SWAP3
0x65c SWAP1
0x65d MSTORE
0x65e SHA3
0x65f SLOAD
0x660 ISZERO
0x661 ISZERO
---
0x63a: V539 = 0x1
0x63c: V540 = 0xa0
0x63e: V541 = 0x2
0x640: V542 = EXP 0x2 0xa0
0x641: V543 = SUB 0x10000000000000000000000000000000000000000 0x1
0x642: V544 = CALLER
0x644: V545 = AND 0xffffffffffffffffffffffffffffffffffffffff V544
0x645: V546 = 0x0
0x649: M[0x0] = V545
0x64a: V547 = 0x2
0x64c: V548 = 0x20
0x650: M[0x20] = 0x2
0x651: V549 = 0x40
0x655: V550 = SHA3 0x0 0x40
0x658: V551 = AND V269 0xffffffffffffffffffffffffffffffffffffffff
0x65a: M[0x0] = V551
0x65d: M[0x20] = V550
0x65e: V552 = SHA3 0x0 0x40
0x65f: V553 = S[V552]
0x660: V554 = ISZERO V553
0x661: V555 = ISZERO V554
---
Entry stack: [V12, 0x33e, V269, V271, 0x0, V537]
Stack pops: 4
Stack additions: [S3, S2, S1, V555]
Exit stack: [V12, 0x33e, V269, V271, 0x0, V555]

================================

Block 0x662
[0x662:0x667]
---
Predecessors: [0x62d, 0x639]
Successors: [0x668, 0x66f]
---
0x662 JUMPDEST
0x663 ISZERO
0x664 PUSH2 0x66f
0x667 JUMPI
---
0x662: JUMPDEST 
0x663: V556 = ISZERO S0
0x664: V557 = 0x66f
0x667: JUMPI 0x66f V556
---
Entry stack: [V12, 0x33e, V269, V271, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x33e, V269, V271, 0x0]

================================

Block 0x668
[0x668:0x66e]
---
Predecessors: [0x662]
Successors: [0x6d0]
---
0x668 POP
0x669 PUSH1 0x0
0x66b PUSH2 0x6d0
0x66e JUMP
---
0x669: V558 = 0x0
0x66b: V559 = 0x6d0
0x66e: JUMP 0x6d0
---
Entry stack: [V12, 0x33e, V269, V271, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x33e, V269, V271, 0x0]

================================

Block 0x66f
[0x66f:0x6cf]
---
Predecessors: [0x662]
Successors: [0x6d0]
---
0x66f JUMPDEST
0x670 PUSH1 0x1
0x672 PUSH1 0xa0
0x674 PUSH1 0x2
0x676 EXP
0x677 SUB
0x678 CALLER
0x679 DUP2
0x67a AND
0x67b PUSH1 0x0
0x67d DUP2
0x67e DUP2
0x67f MSTORE
0x680 PUSH1 0x2
0x682 PUSH1 0x20
0x684 SWAP1
0x685 DUP2
0x686 MSTORE
0x687 PUSH1 0x40
0x689 DUP1
0x68a DUP4
0x68b SHA3
0x68c SWAP5
0x68d DUP9
0x68e AND
0x68f DUP1
0x690 DUP5
0x691 MSTORE
0x692 SWAP5
0x693 DUP3
0x694 MSTORE
0x695 SWAP2
0x696 DUP3
0x697 SWAP1
0x698 SHA3
0x699 DUP7
0x69a SWAP1
0x69b SSTORE
0x69c DUP2
0x69d MLOAD
0x69e DUP7
0x69f DUP2
0x6a0 MSTORE
0x6a1 SWAP2
0x6a2 MLOAD
0x6a3 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x6c4 SWAP3
0x6c5 DUP2
0x6c6 SWAP1
0x6c7 SUB
0x6c8 SWAP1
0x6c9 SWAP2
0x6ca ADD
0x6cb SWAP1
0x6cc LOG3
0x6cd POP
0x6ce PUSH1 0x1
---
0x66f: JUMPDEST 
0x670: V560 = 0x1
0x672: V561 = 0xa0
0x674: V562 = 0x2
0x676: V563 = EXP 0x2 0xa0
0x677: V564 = SUB 0x10000000000000000000000000000000000000000 0x1
0x678: V565 = CALLER
0x67a: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x67b: V567 = 0x0
0x67f: M[0x0] = V566
0x680: V568 = 0x2
0x682: V569 = 0x20
0x686: M[0x20] = 0x2
0x687: V570 = 0x40
0x68b: V571 = SHA3 0x0 0x40
0x68e: V572 = AND V269 0xffffffffffffffffffffffffffffffffffffffff
0x691: M[0x0] = V572
0x694: M[0x20] = V571
0x698: V573 = SHA3 0x0 0x40
0x69b: S[V573] = V271
0x69d: V574 = M[0x40]
0x6a0: M[V574] = V271
0x6a2: V575 = M[0x40]
0x6a3: V576 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x6c7: V577 = SUB V574 V575
0x6ca: V578 = ADD 0x20 V577
0x6cc: LOG V575 V578 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V566 V572
0x6ce: V579 = 0x1
---
Entry stack: [V12, 0x33e, V269, V271, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V12, 0x33e, V269, V271, 0x1]

================================

Block 0x6d0
[0x6d0:0x6d5]
---
Predecessors: [0x668, 0x66f]
Successors: [0x33e]
---
0x6d0 JUMPDEST
0x6d1 SWAP3
0x6d2 SWAP2
0x6d3 POP
0x6d4 POP
0x6d5 JUMP
---
0x6d0: JUMPDEST 
0x6d5: JUMP 0x33e
---
Entry stack: [V12, 0x33e, V269, V271, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x6d6
[0x6d6:0x6db]
---
Predecessors: [0x35a]
Successors: [0x362]
---
0x6d6 JUMPDEST
0x6d7 PUSH1 0x3
0x6d9 SLOAD
0x6da DUP2
0x6db JUMP
---
0x6d6: JUMPDEST 
0x6d7: V580 = 0x3
0x6d9: V581 = S[0x3]
0x6db: JUMP 0x362
---
Entry stack: [V12, 0x362]
Stack pops: 1
Stack additions: [S0, V581]
Exit stack: [V12, 0x362, V581]

================================

Block 0x6dc
[0x6dc:0x6e1]
---
Predecessors: [0x37c]
Successors: [0x362]
---
0x6dc JUMPDEST
0x6dd PUSH1 0x5
0x6df SLOAD
0x6e0 DUP2
0x6e1 JUMP
---
0x6dc: JUMPDEST 
0x6dd: V582 = 0x5
0x6df: V583 = S[0x5]
0x6e1: JUMP 0x362
---
Entry stack: [V12, 0x362]
Stack pops: 1
Stack additions: [S0, V583]
Exit stack: [V12, 0x362, V583]

================================

Block 0x6e2
[0x6e2:0x6f2]
---
Predecessors: [0x39e]
Successors: [0x6f3, 0x6f8]
---
0x6e2 JUMPDEST
0x6e3 PUSH1 0x0
0x6e5 DUP1
0x6e6 DUP1
0x6e7 DUP1
0x6e8 DUP1
0x6e9 DUP1
0x6ea PUSH1 0x64
0x6ec CALLDATASIZE
0x6ed LT
0x6ee ISZERO
0x6ef PUSH2 0x6f8
0x6f2 JUMPI
---
0x6e2: JUMPDEST 
0x6e3: V584 = 0x0
0x6ea: V585 = 0x64
0x6ec: V586 = CALLDATASIZE
0x6ed: V587 = LT V586 0x64
0x6ee: V588 = ISZERO V587
0x6ef: V589 = 0x6f8
0x6f2: JUMPI 0x6f8 V588
---
Entry stack: [V12, 0x33e, V314, V317, V319]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x33e, V314, V317, V319, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x6f3
[0x6f3:0x6f7]
---
Predecessors: [0x6e2]
Successors: []
---
0x6f3 PUSH1 0x0
0x6f5 PUSH1 0x0
0x6f7 REVERT
---
0x6f3: V590 = 0x0
0x6f5: V591 = 0x0
0x6f7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x33e, V314, V317, V319, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x33e, V314, V317, V319, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x6f8
[0x6f8:0x6ff]
---
Predecessors: [0x6e2]
Successors: [0x700, 0x708]
---
0x6f8 JUMPDEST
0x6f9 DUP7
0x6fa ISZERO
0x6fb ISZERO
0x6fc PUSH2 0x708
0x6ff JUMPI
---
0x6f8: JUMPDEST 
0x6fa: V592 = ISZERO V319
0x6fb: V593 = ISZERO V592
0x6fc: V594 = 0x708
0x6ff: JUMPI 0x708 V593
---
Entry stack: [V12, 0x33e, V314, V317, V319, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x33e, V314, V317, V319, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x700
[0x700:0x707]
---
Predecessors: [0x6f8]
Successors: [0x805]
---
0x700 PUSH1 0x0
0x702 SWAP6
0x703 POP
0x704 PUSH2 0x805
0x707 JUMP
---
0x700: V595 = 0x0
0x704: V596 = 0x805
0x707: JUMP 0x805
---
Entry stack: [V12, 0x33e, V314, V317, V319, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x33e, V314, V317, V319, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x708
[0x708:0x764]
---
Predecessors: [0x6f8]
Successors: [0x765, 0x767]
---
0x708 JUMPDEST
0x709 POP
0x70a POP
0x70b POP
0x70c POP
0x70d PUSH1 0x1
0x70f PUSH1 0xa0
0x711 PUSH1 0x2
0x713 EXP
0x714 SUB
0x715 DUP6
0x716 DUP2
0x717 AND
0x718 PUSH1 0x0
0x71a SWAP1
0x71b DUP2
0x71c MSTORE
0x71d PUSH1 0x1
0x71f PUSH1 0x20
0x721 DUP2
0x722 DUP2
0x723 MSTORE
0x724 PUSH1 0x40
0x726 DUP1
0x727 DUP5
0x728 SHA3
0x729 SLOAD
0x72a PUSH1 0x2
0x72c DUP4
0x72d MSTORE
0x72e DUP2
0x72f DUP6
0x730 SHA3
0x731 CALLER
0x732 DUP8
0x733 AND
0x734 DUP7
0x735 MSTORE
0x736 DUP4
0x737 MSTORE
0x738 DUP2
0x739 DUP6
0x73a SHA3
0x73b SLOAD
0x73c SWAP6
0x73d DUP11
0x73e AND
0x73f DUP6
0x740 MSTORE
0x741 SWAP3
0x742 SWAP1
0x743 SWAP2
0x744 MSTORE
0x745 SWAP1
0x746 SWAP2
0x747 SHA3
0x748 SLOAD
0x749 SWAP1
0x74a SWAP3
0x74b POP
0x74c DUP5
0x74d DUP4
0x74e GT
0x74f DUP1
0x750 ISZERO
0x751 SWAP2
0x752 DUP7
0x753 DUP5
0x754 GT
0x755 ISZERO
0x756 SWAP2
0x757 DUP8
0x758 DUP3
0x759 ADD
0x75a SWAP2
0x75b SWAP1
0x75c SWAP2
0x75d GT
0x75e SWAP1
0x75f DUP4
0x760 SWAP1
0x761 PUSH2 0x767
0x764 JUMPI
---
0x708: JUMPDEST 
0x70d: V597 = 0x1
0x70f: V598 = 0xa0
0x711: V599 = 0x2
0x713: V600 = EXP 0x2 0xa0
0x714: V601 = SUB 0x10000000000000000000000000000000000000000 0x1
0x717: V602 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x718: V603 = 0x0
0x71c: M[0x0] = V602
0x71d: V604 = 0x1
0x71f: V605 = 0x20
0x723: M[0x20] = 0x1
0x724: V606 = 0x40
0x728: V607 = SHA3 0x0 0x40
0x729: V608 = S[V607]
0x72a: V609 = 0x2
0x72d: M[0x20] = 0x2
0x730: V610 = SHA3 0x0 0x40
0x731: V611 = CALLER
0x733: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V611
0x735: M[0x0] = V612
0x737: M[0x20] = V610
0x73a: V613 = SHA3 0x0 0x40
0x73b: V614 = S[V613]
0x73e: V615 = AND V317 0xffffffffffffffffffffffffffffffffffffffff
0x740: M[0x0] = V615
0x744: M[0x20] = 0x1
0x747: V616 = SHA3 0x0 0x40
0x748: V617 = S[V616]
0x74e: V618 = GT V608 V319
0x750: V619 = ISZERO V618
0x754: V620 = GT V614 V319
0x755: V621 = ISZERO V620
0x759: V622 = ADD V617 V319
0x75d: V623 = GT V622 V617
0x761: V624 = 0x767
0x764: JUMPI 0x767 V618
---
Entry stack: [V12, 0x33e, V314, V317, V319, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V608, V614, V619, V621, V623, V619]
Exit stack: [V12, 0x33e, V314, V317, V319, 0x0, V608, V614, V619, V621, V623, V619]

================================

Block 0x765
[0x765:0x766]
---
Predecessors: [0x708]
Successors: [0x767]
---
0x765 POP
0x766 DUP2
---
0x765: NOP 
---
Entry stack: [V12, 0x33e, V314, V317, V319, 0x0, V608, V614, V619, V621, V623, V619]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V12, 0x33e, V314, V317, V319, 0x0, V608, V614, V619, V621, V623, V621]

================================

Block 0x767
[0x767:0x76d]
---
Predecessors: [0x708, 0x765]
Successors: [0x76e, 0x771]
---
0x767 JUMPDEST
0x768 DUP1
0x769 ISZERO
0x76a PUSH2 0x771
0x76d JUMPI
---
0x767: JUMPDEST 
0x769: V625 = ISZERO S0
0x76a: V626 = 0x771
0x76d: JUMPI 0x771 V625
---
Entry stack: [V12, 0x33e, V314, V317, V319, 0x0, V608, V614, V619, V621, V623, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x33e, V314, V317, V319, 0x0, V608, V614, V619, V621, V623, S0]

================================

Block 0x76e
[0x76e:0x770]
---
Predecessors: [0x767]
Successors: [0x771]
---
0x76e POP
0x76f DUP1
0x770 ISZERO
---
0x770: V627 = ISZERO V623
---
Entry stack: [V12, 0x33e, V314, V317, V319, 0x0, V608, V614, V619, V621, V623, S0]
Stack pops: 2
Stack additions: [S1, V627]
Exit stack: [V12, 0x33e, V314, V317, V319, 0x0, V608, V614, V619, V621, V623, V627]

================================

Block 0x771
[0x771:0x776]
---
Predecessors: [0x767, 0x76e]
Successors: [0x777, 0x800]
---
0x771 JUMPDEST
0x772 ISZERO
0x773 PUSH2 0x800
0x776 JUMPI
---
0x771: JUMPDEST 
0x772: V628 = ISZERO S0
0x773: V629 = 0x800
0x776: JUMPI 0x800 V628
---
Entry stack: [V12, 0x33e, V314, V317, V319, 0x0, V608, V614, V619, V621, V623, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x33e, V314, V317, V319, 0x0, V608, V614, V619, V621, V623]

================================

Block 0x777
[0x777:0x7ff]
---
Predecessors: [0x771]
Successors: [0x805]
---
0x777 PUSH1 0x1
0x779 PUSH1 0xa0
0x77b PUSH1 0x2
0x77d EXP
0x77e SUB
0x77f DUP1
0x780 DUP10
0x781 AND
0x782 PUSH1 0x0
0x784 DUP2
0x785 DUP2
0x786 MSTORE
0x787 PUSH1 0x1
0x789 PUSH1 0x20
0x78b SWAP1
0x78c DUP2
0x78d MSTORE
0x78e PUSH1 0x40
0x790 DUP1
0x791 DUP4
0x792 SHA3
0x793 DUP1
0x794 SLOAD
0x795 DUP14
0x796 ADD
0x797 SWAP1
0x798 SSTORE
0x799 DUP14
0x79a DUP6
0x79b AND
0x79c DUP1
0x79d DUP5
0x79e MSTORE
0x79f DUP2
0x7a0 DUP5
0x7a1 SHA3
0x7a2 DUP1
0x7a3 SLOAD
0x7a4 DUP15
0x7a5 SWAP1
0x7a6 SUB
0x7a7 SWAP1
0x7a8 SSTORE
0x7a9 PUSH1 0x2
0x7ab DUP4
0x7ac MSTORE
0x7ad DUP2
0x7ae DUP5
0x7af SHA3
0x7b0 CALLER
0x7b1 SWAP1
0x7b2 SWAP7
0x7b3 AND
0x7b4 DUP5
0x7b5 MSTORE
0x7b6 SWAP5
0x7b7 DUP3
0x7b8 MSTORE
0x7b9 SWAP2
0x7ba DUP3
0x7bb SWAP1
0x7bc SHA3
0x7bd DUP1
0x7be SLOAD
0x7bf DUP13
0x7c0 SWAP1
0x7c1 SUB
0x7c2 SWAP1
0x7c3 SSTORE
0x7c4 DUP2
0x7c5 MLOAD
0x7c6 DUP12
0x7c7 DUP2
0x7c8 MSTORE
0x7c9 SWAP2
0x7ca MLOAD
0x7cb SWAP3
0x7cc SWAP4
0x7cd SWAP3
0x7ce PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x7ef SWAP3
0x7f0 DUP2
0x7f1 SWAP1
0x7f2 SUB
0x7f3 SWAP1
0x7f4 SWAP2
0x7f5 ADD
0x7f6 SWAP1
0x7f7 LOG3
0x7f8 PUSH1 0x1
0x7fa SWAP6
0x7fb POP
0x7fc PUSH2 0x805
0x7ff JUMP
---
0x777: V630 = 0x1
0x779: V631 = 0xa0
0x77b: V632 = 0x2
0x77d: V633 = EXP 0x2 0xa0
0x77e: V634 = SUB 0x10000000000000000000000000000000000000000 0x1
0x781: V635 = AND V317 0xffffffffffffffffffffffffffffffffffffffff
0x782: V636 = 0x0
0x786: M[0x0] = V635
0x787: V637 = 0x1
0x789: V638 = 0x20
0x78d: M[0x20] = 0x1
0x78e: V639 = 0x40
0x792: V640 = SHA3 0x0 0x40
0x794: V641 = S[V640]
0x796: V642 = ADD V319 V641
0x798: S[V640] = V642
0x79b: V643 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x79e: M[0x0] = V643
0x7a1: V644 = SHA3 0x0 0x40
0x7a3: V645 = S[V644]
0x7a6: V646 = SUB V645 V319
0x7a8: S[V644] = V646
0x7a9: V647 = 0x2
0x7ac: M[0x20] = 0x2
0x7af: V648 = SHA3 0x0 0x40
0x7b0: V649 = CALLER
0x7b3: V650 = AND 0xffffffffffffffffffffffffffffffffffffffff V649
0x7b5: M[0x0] = V650
0x7b8: M[0x20] = V648
0x7bc: V651 = SHA3 0x0 0x40
0x7be: V652 = S[V651]
0x7c1: V653 = SUB V652 V319
0x7c3: S[V651] = V653
0x7c5: V654 = M[0x40]
0x7c8: M[V654] = V319
0x7ca: V655 = M[0x40]
0x7ce: V656 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x7f2: V657 = SUB V654 V655
0x7f5: V658 = ADD 0x20 V657
0x7f7: LOG V655 V658 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V643 V635
0x7f8: V659 = 0x1
0x7fc: V660 = 0x805
0x7ff: JUMP 0x805
---
Entry stack: [V12, 0x33e, V314, V317, V319, 0x0, V608, V614, V619, V621, V623]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x33e, V314, V317, V319, 0x1, V608, V614, V619, V621, V623]

================================

Block 0x800
[0x800:0x804]
---
Predecessors: [0x771]
Successors: [0x805]
---
0x800 JUMPDEST
0x801 PUSH1 0x0
0x803 SWAP6
0x804 POP
---
0x800: JUMPDEST 
0x801: V661 = 0x0
---
Entry stack: [V12, 0x33e, V314, V317, V319, 0x0, V608, V614, V619, V621, V623]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x33e, V314, V317, V319, 0x0, V608, V614, V619, V621, V623]

================================

Block 0x805
[0x805:0x805]
---
Predecessors: [0x700, 0x777, 0x800]
Successors: [0x806]
---
0x805 JUMPDEST
---
0x805: JUMPDEST 
---
Entry stack: [V12, 0x33e, V314, V317, V319, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x33e, V314, V317, V319, {0x0, 0x1}, S4, S3, S2, S1, S0]

================================

Block 0x806
[0x806:0x811]
---
Predecessors: [0x805]
Successors: [0x33e]
---
0x806 JUMPDEST
0x807 POP
0x808 POP
0x809 POP
0x80a POP
0x80b POP
0x80c SWAP4
0x80d SWAP3
0x80e POP
0x80f POP
0x810 POP
0x811 JUMP
---
0x806: JUMPDEST 
0x811: JUMP 0x33e
---
Entry stack: [V12, 0x33e, V314, V317, V319, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S5]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x812
[0x812:0x814]
---
Predecessors: [0x3d7]
Successors: [0x815]
---
0x812 JUMPDEST
0x813 PUSH1 0x12
---
0x812: JUMPDEST 
0x813: V662 = 0x12
---
Entry stack: [V12, 0x3df]
Stack pops: 0
Stack additions: [0x12]
Exit stack: [V12, 0x3df, 0x12]

================================

Block 0x815
[0x815:0x817]
---
Predecessors: [0x812]
Successors: [0x3df]
---
0x815 JUMPDEST
0x816 SWAP1
0x817 JUMP
---
0x815: JUMPDEST 
0x817: JUMP 0x3df
---
Entry stack: [V12, 0x3df, 0x12]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x12]

================================

Block 0x818
[0x818:0x82e]
---
Predecessors: [0x3fd]
Successors: [0x82f, 0x834]
---
0x818 JUMPDEST
0x819 PUSH1 0x0
0x81b SLOAD
0x81c CALLER
0x81d PUSH1 0x1
0x81f PUSH1 0xa0
0x821 PUSH1 0x2
0x823 EXP
0x824 SUB
0x825 SWAP1
0x826 DUP2
0x827 AND
0x828 SWAP2
0x829 AND
0x82a EQ
0x82b PUSH2 0x834
0x82e JUMPI
---
0x818: JUMPDEST 
0x819: V663 = 0x0
0x81b: V664 = S[0x0]
0x81c: V665 = CALLER
0x81d: V666 = 0x1
0x81f: V667 = 0xa0
0x821: V668 = 0x2
0x823: V669 = EXP 0x2 0xa0
0x824: V670 = SUB 0x10000000000000000000000000000000000000000 0x1
0x827: V671 = AND 0xffffffffffffffffffffffffffffffffffffffff V665
0x829: V672 = AND V664 0xffffffffffffffffffffffffffffffffffffffff
0x82a: V673 = EQ V672 V671
0x82b: V674 = 0x834
0x82e: JUMPI 0x834 V673
---
Entry stack: [V12, 0x28d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28d]

================================

Block 0x82f
[0x82f:0x833]
---
Predecessors: [0x818]
Successors: []
---
0x82f PUSH1 0x0
0x831 PUSH1 0x0
0x833 REVERT
---
0x82f: V675 = 0x0
0x831: V676 = 0x0
0x833: REVERT 0x0 0x0
---
Entry stack: [V12, 0x28d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28d]

================================

Block 0x834
[0x834:0x852]
---
Predecessors: [0x818]
Successors: [0x853]
---
0x834 JUMPDEST
0x835 PUSH1 0x0
0x837 DUP1
0x838 SLOAD
0x839 PUSH21 0xff0000000000000000000000000000000000000000
0x84f NOT
0x850 AND
0x851 SWAP1
0x852 SSTORE
---
0x834: JUMPDEST 
0x835: V677 = 0x0
0x838: V678 = S[0x0]
0x839: V679 = 0xff0000000000000000000000000000000000000000
0x84f: V680 = NOT 0xff0000000000000000000000000000000000000000
0x850: V681 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V678
0x852: S[0x0] = V681
---
Entry stack: [V12, 0x28d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28d]

================================

Block 0x853
[0x853:0x854]
---
Predecessors: [0x834]
Successors: [0x28d]
---
0x853 JUMPDEST
0x854 JUMP
---
0x853: JUMPDEST 
0x854: JUMP 0x28d
---
Entry stack: [V12, 0x28d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x855
[0x855:0x86e]
---
Predecessors: [0x40f]
Successors: [0x86f]
---
0x855 JUMPDEST
0x856 PUSH1 0x1
0x858 PUSH1 0xa0
0x85a PUSH1 0x2
0x85c EXP
0x85d SUB
0x85e DUP2
0x85f AND
0x860 PUSH1 0x0
0x862 SWAP1
0x863 DUP2
0x864 MSTORE
0x865 PUSH1 0x1
0x867 PUSH1 0x20
0x869 MSTORE
0x86a PUSH1 0x40
0x86c SWAP1
0x86d SHA3
0x86e SLOAD
---
0x855: JUMPDEST 
0x856: V682 = 0x1
0x858: V683 = 0xa0
0x85a: V684 = 0x2
0x85c: V685 = EXP 0x2 0xa0
0x85d: V686 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85f: V687 = AND V358 0xffffffffffffffffffffffffffffffffffffffff
0x860: V688 = 0x0
0x864: M[0x0] = V687
0x865: V689 = 0x1
0x867: V690 = 0x20
0x869: M[0x20] = 0x1
0x86a: V691 = 0x40
0x86d: V692 = SHA3 0x0 0x40
0x86e: V693 = S[V692]
---
Entry stack: [V12, 0x362, V358]
Stack pops: 1
Stack additions: [S0, V693]
Exit stack: [V12, 0x362, V358, V693]

================================

Block 0x86f
[0x86f:0x873]
---
Predecessors: [0x855]
Successors: [0x362]
---
0x86f JUMPDEST
0x870 SWAP2
0x871 SWAP1
0x872 POP
0x873 JUMP
---
0x86f: JUMPDEST 
0x873: JUMP 0x362
---
Entry stack: [V12, 0x362, V358, V693]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V693]

================================

Block 0x874
[0x874:0x88a]
---
Predecessors: [0x43d]
Successors: [0x88b, 0x890]
---
0x874 JUMPDEST
0x875 PUSH1 0x0
0x877 SLOAD
0x878 CALLER
0x879 PUSH1 0x1
0x87b PUSH1 0xa0
0x87d PUSH1 0x2
0x87f EXP
0x880 SUB
0x881 SWAP1
0x882 DUP2
0x883 AND
0x884 SWAP2
0x885 AND
0x886 EQ
0x887 PUSH2 0x890
0x88a JUMPI
---
0x874: JUMPDEST 
0x875: V694 = 0x0
0x877: V695 = S[0x0]
0x878: V696 = CALLER
0x879: V697 = 0x1
0x87b: V698 = 0xa0
0x87d: V699 = 0x2
0x87f: V700 = EXP 0x2 0xa0
0x880: V701 = SUB 0x10000000000000000000000000000000000000000 0x1
0x883: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff V696
0x885: V703 = AND V695 0xffffffffffffffffffffffffffffffffffffffff
0x886: V704 = EQ V703 V702
0x887: V705 = 0x890
0x88a: JUMPI 0x890 V704
---
Entry stack: [V12, 0x28d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28d]

================================

Block 0x88b
[0x88b:0x88f]
---
Predecessors: [0x874]
Successors: []
---
0x88b PUSH1 0x0
0x88d PUSH1 0x0
0x88f REVERT
---
0x88b: V706 = 0x0
0x88d: V707 = 0x0
0x88f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x28d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28d]

================================

Block 0x890
[0x890:0x8b4]
---
Predecessors: [0x874]
Successors: [0x8b5]
---
0x890 JUMPDEST
0x891 PUSH1 0x0
0x893 DUP1
0x894 SLOAD
0x895 PUSH21 0xff0000000000000000000000000000000000000000
0x8ab NOT
0x8ac AND
0x8ad PUSH1 0xa0
0x8af PUSH1 0x2
0x8b1 EXP
0x8b2 OR
0x8b3 SWAP1
0x8b4 SSTORE
---
0x890: JUMPDEST 
0x891: V708 = 0x0
0x894: V709 = S[0x0]
0x895: V710 = 0xff0000000000000000000000000000000000000000
0x8ab: V711 = NOT 0xff0000000000000000000000000000000000000000
0x8ac: V712 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V709
0x8ad: V713 = 0xa0
0x8af: V714 = 0x2
0x8b1: V715 = EXP 0x2 0xa0
0x8b2: V716 = OR 0x10000000000000000000000000000000000000000 V712
0x8b4: S[0x0] = V716
---
Entry stack: [V12, 0x28d]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x28d]

================================

Block 0x8b5
[0x8b5:0x8b6]
---
Predecessors: [0x890]
Successors: [0x28d]
---
0x8b5 JUMPDEST
0x8b6 JUMP
---
0x8b5: JUMPDEST 
0x8b6: JUMP 0x28d
---
Entry stack: [V12, 0x28d]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x8b7
[0x8b7:0x8be]
---
Predecessors: [0x44f]
Successors: [0xb64]
---
0x8b7 JUMPDEST
0x8b8 PUSH2 0x8bf
0x8bb PUSH2 0xb64
0x8be JUMP
---
0x8b7: JUMPDEST 
0x8b8: V717 = 0x8bf
0x8bb: V718 = 0xb64
0x8be: JUMP 0xb64
---
Entry stack: [V12, 0x29f]
Stack pops: 0
Stack additions: [0x8bf]
Exit stack: [V12, 0x29f, 0x8bf]

================================

Block 0x8bf
[0x8bf:0x8f4]
---
Predecessors: [0xb64]
Successors: [0x8f5]
---
0x8bf JUMPDEST
0x8c0 POP
0x8c1 PUSH1 0x40
0x8c3 DUP1
0x8c4 MLOAD
0x8c5 DUP1
0x8c6 DUP3
0x8c7 ADD
0x8c8 SWAP1
0x8c9 SWAP2
0x8ca MSTORE
0x8cb PUSH1 0x4
0x8cd DUP2
0x8ce MSTORE
0x8cf PUSH32 0x5343414d00000000000000000000000000000000000000000000000000000000
0x8f0 PUSH1 0x20
0x8f2 DUP3
0x8f3 ADD
0x8f4 MSTORE
---
0x8bf: JUMPDEST 
0x8c1: V719 = 0x40
0x8c4: V720 = M[0x40]
0x8c7: V721 = ADD 0x40 V720
0x8ca: M[0x40] = V721
0x8cb: V722 = 0x4
0x8ce: M[V720] = 0x4
0x8cf: V723 = 0x5343414d00000000000000000000000000000000000000000000000000000000
0x8f0: V724 = 0x20
0x8f3: V725 = ADD V720 0x20
0x8f4: M[V725] = 0x5343414d00000000000000000000000000000000000000000000000000000000
---
Entry stack: [V12, 0x29f, V935]
Stack pops: 1
Stack additions: [V720]
Exit stack: [V12, 0x29f, V720]

================================

Block 0x8f5
[0x8f5:0x8f7]
---
Predecessors: [0x8bf]
Successors: [0x29f]
---
0x8f5 JUMPDEST
0x8f6 SWAP1
0x8f7 JUMP
---
0x8f5: JUMPDEST 
0x8f7: JUMP 0x29f
---
Entry stack: [V12, 0x29f, V720]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V720]

================================

Block 0x8f8
[0x8f8:0x8fd]
---
Predecessors: [0x4df]
Successors: [0x362]
---
0x8f8 JUMPDEST
0x8f9 PUSH1 0x4
0x8fb SLOAD
0x8fc DUP2
0x8fd JUMP
---
0x8f8: JUMPDEST 
0x8f9: V726 = 0x4
0x8fb: V727 = S[0x4]
0x8fd: JUMP 0x362
---
Entry stack: [V12, 0x362]
Stack pops: 1
Stack additions: [S0, V727]
Exit stack: [V12, 0x362, V727]

================================

Block 0x8fe
[0x8fe:0x90c]
---
Predecessors: [0x501]
Successors: [0x90d, 0x912]
---
0x8fe JUMPDEST
0x8ff PUSH1 0x0
0x901 DUP1
0x902 DUP1
0x903 DUP1
0x904 PUSH1 0x44
0x906 CALLDATASIZE
0x907 LT
0x908 ISZERO
0x909 PUSH2 0x912
0x90c JUMPI
---
0x8fe: JUMPDEST 
0x8ff: V728 = 0x0
0x904: V729 = 0x44
0x906: V730 = CALLDATASIZE
0x907: V731 = LT V730 0x44
0x908: V732 = ISZERO V731
0x909: V733 = 0x912
0x90c: JUMPI 0x912 V732
---
Entry stack: [V12, 0x33e, V440, V442]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x33e, V440, V442, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x90d
[0x90d:0x911]
---
Predecessors: [0x8fe]
Successors: []
---
0x90d PUSH1 0x0
0x90f PUSH1 0x0
0x911 REVERT
---
0x90d: V734 = 0x0
0x90f: V735 = 0x0
0x911: REVERT 0x0 0x0
---
Entry stack: [V12, 0x33e, V440, V442, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x33e, V440, V442, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x912
[0x912:0x919]
---
Predecessors: [0x8fe]
Successors: [0x91a, 0x922]
---
0x912 JUMPDEST
0x913 DUP5
0x914 ISZERO
0x915 ISZERO
0x916 PUSH2 0x922
0x919 JUMPI
---
0x912: JUMPDEST 
0x914: V736 = ISZERO V442
0x915: V737 = ISZERO V736
0x916: V738 = 0x922
0x919: JUMPI 0x922 V737
---
Entry stack: [V12, 0x33e, V440, V442, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x33e, V440, V442, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x91a
[0x91a:0x921]
---
Predecessors: [0x912]
Successors: [0x9d7]
---
0x91a PUSH1 0x0
0x91c SWAP4
0x91d POP
0x91e PUSH2 0x9d7
0x921 JUMP
---
0x91a: V739 = 0x0
0x91e: V740 = 0x9d7
0x921: JUMP 0x9d7
---
Entry stack: [V12, 0x33e, V440, V442, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x33e, V440, V442, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x922
[0x922:0x959]
---
Predecessors: [0x912]
Successors: [0x95a, 0x95d]
---
0x922 JUMPDEST
0x923 POP
0x924 POP
0x925 POP
0x926 PUSH1 0x1
0x928 PUSH1 0xa0
0x92a PUSH1 0x2
0x92c EXP
0x92d SUB
0x92e CALLER
0x92f DUP2
0x930 AND
0x931 PUSH1 0x0
0x933 SWAP1
0x934 DUP2
0x935 MSTORE
0x936 PUSH1 0x1
0x938 PUSH1 0x20
0x93a MSTORE
0x93b PUSH1 0x40
0x93d DUP1
0x93e DUP3
0x93f SHA3
0x940 SLOAD
0x941 SWAP3
0x942 DUP7
0x943 AND
0x944 DUP3
0x945 MSTORE
0x946 SWAP1
0x947 SHA3
0x948 SLOAD
0x949 DUP4
0x94a DUP3
0x94b LT
0x94c DUP1
0x94d ISZERO
0x94e SWAP2
0x94f DUP1
0x950 DUP7
0x951 ADD
0x952 LT
0x953 SWAP1
0x954 DUP3
0x955 SWAP1
0x956 PUSH2 0x95d
0x959 JUMPI
---
0x922: JUMPDEST 
0x926: V741 = 0x1
0x928: V742 = 0xa0
0x92a: V743 = 0x2
0x92c: V744 = EXP 0x2 0xa0
0x92d: V745 = SUB 0x10000000000000000000000000000000000000000 0x1
0x92e: V746 = CALLER
0x930: V747 = AND 0xffffffffffffffffffffffffffffffffffffffff V746
0x931: V748 = 0x0
0x935: M[0x0] = V747
0x936: V749 = 0x1
0x938: V750 = 0x20
0x93a: M[0x20] = 0x1
0x93b: V751 = 0x40
0x93f: V752 = SHA3 0x0 0x40
0x940: V753 = S[V752]
0x943: V754 = AND V440 0xffffffffffffffffffffffffffffffffffffffff
0x945: M[0x0] = V754
0x947: V755 = SHA3 0x0 0x40
0x948: V756 = S[V755]
0x94b: V757 = LT V753 V442
0x94d: V758 = ISZERO V757
0x951: V759 = ADD V442 V756
0x952: V760 = LT V759 V756
0x956: V761 = 0x95d
0x959: JUMPI 0x95d V757
---
Entry stack: [V12, 0x33e, V440, V442, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V753, V758, V760, V758]
Exit stack: [V12, 0x33e, V440, V442, 0x0, V753, V758, V760, V758]

================================

Block 0x95a
[0x95a:0x95c]
---
Predecessors: [0x922]
Successors: [0x95d]
---
0x95a POP
0x95b DUP1
0x95c ISZERO
---
0x95c: V762 = ISZERO V760
---
Entry stack: [V12, 0x33e, V440, V442, 0x0, V753, V758, V760, V758]
Stack pops: 2
Stack additions: [S1, V762]
Exit stack: [V12, 0x33e, V440, V442, 0x0, V753, V758, V760, V762]

================================

Block 0x95d
[0x95d:0x962]
---
Predecessors: [0x922, 0x95a]
Successors: [0x963, 0x9d2]
---
0x95d JUMPDEST
0x95e ISZERO
0x95f PUSH2 0x9d2
0x962 JUMPI
---
0x95d: JUMPDEST 
0x95e: V763 = ISZERO S0
0x95f: V764 = 0x9d2
0x962: JUMPI 0x9d2 V763
---
Entry stack: [V12, 0x33e, V440, V442, 0x0, V753, V758, V760, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x33e, V440, V442, 0x0, V753, V758, V760]

================================

Block 0x963
[0x963:0x9d1]
---
Predecessors: [0x95d]
Successors: [0x9d7]
---
0x963 PUSH1 0x1
0x965 PUSH1 0xa0
0x967 PUSH1 0x2
0x969 EXP
0x96a SUB
0x96b CALLER
0x96c DUP2
0x96d AND
0x96e PUSH1 0x0
0x970 DUP2
0x971 DUP2
0x972 MSTORE
0x973 PUSH1 0x1
0x975 PUSH1 0x20
0x977 SWAP1
0x978 DUP2
0x979 MSTORE
0x97a PUSH1 0x40
0x97c DUP1
0x97d DUP4
0x97e SHA3
0x97f DUP1
0x980 SLOAD
0x981 DUP12
0x982 SWAP1
0x983 SUB
0x984 SWAP1
0x985 SSTORE
0x986 SWAP4
0x987 DUP11
0x988 AND
0x989 DUP1
0x98a DUP4
0x98b MSTORE
0x98c SWAP2
0x98d DUP5
0x98e SWAP1
0x98f SHA3
0x990 DUP1
0x991 SLOAD
0x992 DUP11
0x993 ADD
0x994 SWAP1
0x995 SSTORE
0x996 DUP4
0x997 MLOAD
0x998 DUP10
0x999 DUP2
0x99a MSTORE
0x99b SWAP4
0x99c MLOAD
0x99d SWAP2
0x99e SWAP4
0x99f PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x9c0 SWAP3
0x9c1 SWAP1
0x9c2 DUP2
0x9c3 SWAP1
0x9c4 SUB
0x9c5 SWAP1
0x9c6 SWAP2
0x9c7 ADD
0x9c8 SWAP1
0x9c9 LOG3
0x9ca PUSH1 0x1
0x9cc SWAP4
0x9cd POP
0x9ce PUSH2 0x9d7
0x9d1 JUMP
---
0x963: V765 = 0x1
0x965: V766 = 0xa0
0x967: V767 = 0x2
0x969: V768 = EXP 0x2 0xa0
0x96a: V769 = SUB 0x10000000000000000000000000000000000000000 0x1
0x96b: V770 = CALLER
0x96d: V771 = AND 0xffffffffffffffffffffffffffffffffffffffff V770
0x96e: V772 = 0x0
0x972: M[0x0] = V771
0x973: V773 = 0x1
0x975: V774 = 0x20
0x979: M[0x20] = 0x1
0x97a: V775 = 0x40
0x97e: V776 = SHA3 0x0 0x40
0x980: V777 = S[V776]
0x983: V778 = SUB V777 V442
0x985: S[V776] = V778
0x988: V779 = AND V440 0xffffffffffffffffffffffffffffffffffffffff
0x98b: M[0x0] = V779
0x98f: V780 = SHA3 0x0 0x40
0x991: V781 = S[V780]
0x993: V782 = ADD V442 V781
0x995: S[V780] = V782
0x997: V783 = M[0x40]
0x99a: M[V783] = V442
0x99c: V784 = M[0x40]
0x99f: V785 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x9c4: V786 = SUB V783 V784
0x9c7: V787 = ADD 0x20 V786
0x9c9: LOG V784 V787 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V771 V779
0x9ca: V788 = 0x1
0x9ce: V789 = 0x9d7
0x9d1: JUMP 0x9d7
---
Entry stack: [V12, 0x33e, V440, V442, 0x0, V753, V758, V760]
Stack pops: 6
Stack additions: [S5, S4, 0x1, S2, S1, S0]
Exit stack: [V12, 0x33e, V440, V442, 0x1, V753, V758, V760]

================================

Block 0x9d2
[0x9d2:0x9d6]
---
Predecessors: [0x95d]
Successors: [0x9d7]
---
0x9d2 JUMPDEST
0x9d3 PUSH1 0x0
0x9d5 SWAP4
0x9d6 POP
---
0x9d2: JUMPDEST 
0x9d3: V790 = 0x0
---
Entry stack: [V12, 0x33e, V440, V442, 0x0, V753, V758, V760]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x33e, V440, V442, 0x0, V753, V758, V760]

================================

Block 0x9d7
[0x9d7:0x9d7]
---
Predecessors: [0x91a, 0x963, 0x9d2]
Successors: [0x9d8]
---
0x9d7 JUMPDEST
---
0x9d7: JUMPDEST 
---
Entry stack: [V12, 0x33e, V440, V442, {0x0, 0x1}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x33e, V440, V442, {0x0, 0x1}, S2, S1, S0]

================================

Block 0x9d8
[0x9d8:0x9e0]
---
Predecessors: [0x9d7]
Successors: [0x33e]
---
0x9d8 JUMPDEST
0x9d9 POP
0x9da POP
0x9db POP
0x9dc SWAP3
0x9dd SWAP2
0x9de POP
0x9df POP
0x9e0 JUMP
---
0x9d8: JUMPDEST 
0x9e0: JUMP 0x33e
---
Entry stack: [V12, 0x33e, V440, V442, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x9e1
[0x9e1:0x9f7]
---
Predecessors: [0x534]
Successors: [0x9f8]
---
0x9e1 JUMPDEST
0x9e2 PUSH1 0x3
0x9e4 SLOAD
0x9e5 PUSH1 0x5
0x9e7 SLOAD
0x9e8 PUSH1 0x4
0x9ea SLOAD
0x9eb PUSH1 0x0
0x9ed SLOAD
0x9ee PUSH1 0xa0
0x9f0 PUSH1 0x2
0x9f2 EXP
0x9f3 SWAP1
0x9f4 DIV
0x9f5 PUSH1 0xff
0x9f7 AND
---
0x9e1: JUMPDEST 
0x9e2: V791 = 0x3
0x9e4: V792 = S[0x3]
0x9e5: V793 = 0x5
0x9e7: V794 = S[0x5]
0x9e8: V795 = 0x4
0x9ea: V796 = S[0x4]
0x9eb: V797 = 0x0
0x9ed: V798 = S[0x0]
0x9ee: V799 = 0xa0
0x9f0: V800 = 0x2
0x9f2: V801 = EXP 0x2 0xa0
0x9f4: V802 = DIV V798 0x10000000000000000000000000000000000000000
0x9f5: V803 = 0xff
0x9f7: V804 = AND 0xff V802
---
Entry stack: [V12, 0x53c]
Stack pops: 0
Stack additions: [V792, V794, V796, V804]
Exit stack: [V12, 0x53c, V792, V794, V796, V804]

================================

Block 0x9f8
[0x9f8:0x9fd]
---
Predecessors: [0x9e1]
Successors: [0x53c]
---
0x9f8 JUMPDEST
0x9f9 SWAP1
0x9fa SWAP2
0x9fb SWAP3
0x9fc SWAP4
0x9fd JUMP
---
0x9f8: JUMPDEST 
0x9fd: JUMP 0x53c
---
Entry stack: [V12, 0x53c, V792, V794, V796, V804]
Stack pops: 5
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, V792, V794, V796, V804]

================================

Block 0x9fe
[0x9fe:0xa19]
---
Predecessors: [0x56c]
Successors: [0xa1a, 0xa1f]
---
0x9fe JUMPDEST
0x9ff PUSH1 0x0
0xa01 DUP1
0xa02 SLOAD
0xa03 DUP2
0xa04 SWAP1
0xa05 DUP2
0xa06 SWAP1
0xa07 CALLER
0xa08 PUSH1 0x1
0xa0a PUSH1 0xa0
0xa0c PUSH1 0x2
0xa0e EXP
0xa0f SUB
0xa10 SWAP1
0xa11 DUP2
0xa12 AND
0xa13 SWAP2
0xa14 AND
0xa15 EQ
0xa16 PUSH2 0xa1f
0xa19 JUMPI
---
0x9fe: JUMPDEST 
0x9ff: V805 = 0x0
0xa02: V806 = S[0x0]
0xa07: V807 = CALLER
0xa08: V808 = 0x1
0xa0a: V809 = 0xa0
0xa0c: V810 = 0x2
0xa0e: V811 = EXP 0x2 0xa0
0xa0f: V812 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa12: V813 = AND 0xffffffffffffffffffffffffffffffffffffffff V807
0xa14: V814 = AND V806 0xffffffffffffffffffffffffffffffffffffffff
0xa15: V815 = EQ V814 V813
0xa16: V816 = 0xa1f
0xa19: JUMPI 0xa1f V815
---
Entry stack: [V12, 0x33e, V481]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x33e, V481, 0x0, 0x0, 0x0]

================================

Block 0xa1a
[0xa1a:0xa1e]
---
Predecessors: [0x9fe]
Successors: []
---
0xa1a PUSH1 0x0
0xa1c PUSH1 0x0
0xa1e REVERT
---
0xa1a: V817 = 0x0
0xa1c: V818 = 0x0
0xa1e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x33e, V481, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x33e, V481, 0x0, 0x0, 0x0]

================================

Block 0xa1f
[0xa1f:0xa80]
---
Predecessors: [0x9fe]
Successors: [0xa81, 0xa82]
---
0xa1f JUMPDEST
0xa20 DUP4
0xa21 SWAP2
0xa22 POP
0xa23 DUP2
0xa24 PUSH1 0x1
0xa26 PUSH1 0xa0
0xa28 PUSH1 0x2
0xa2a EXP
0xa2b SUB
0xa2c AND
0xa2d PUSH4 0x70a08231
0xa32 ADDRESS
0xa33 PUSH1 0x0
0xa35 PUSH1 0x40
0xa37 MLOAD
0xa38 PUSH1 0x20
0xa3a ADD
0xa3b MSTORE
0xa3c PUSH1 0x40
0xa3e MLOAD
0xa3f DUP3
0xa40 PUSH4 0xffffffff
0xa45 AND
0xa46 PUSH1 0xe0
0xa48 PUSH1 0x2
0xa4a EXP
0xa4b MUL
0xa4c DUP2
0xa4d MSTORE
0xa4e PUSH1 0x4
0xa50 ADD
0xa51 DUP1
0xa52 DUP3
0xa53 PUSH1 0x1
0xa55 PUSH1 0xa0
0xa57 PUSH1 0x2
0xa59 EXP
0xa5a SUB
0xa5b AND
0xa5c PUSH1 0x1
0xa5e PUSH1 0xa0
0xa60 PUSH1 0x2
0xa62 EXP
0xa63 SUB
0xa64 AND
0xa65 DUP2
0xa66 MSTORE
0xa67 PUSH1 0x20
0xa69 ADD
0xa6a SWAP2
0xa6b POP
0xa6c POP
0xa6d PUSH1 0x20
0xa6f PUSH1 0x40
0xa71 MLOAD
0xa72 DUP1
0xa73 DUP4
0xa74 SUB
0xa75 DUP2
0xa76 PUSH1 0x0
0xa78 DUP8
0xa79 DUP1
0xa7a EXTCODESIZE
0xa7b ISZERO
0xa7c ISZERO
0xa7d PUSH2 0xa82
0xa80 JUMPI
---
0xa1f: JUMPDEST 
0xa24: V819 = 0x1
0xa26: V820 = 0xa0
0xa28: V821 = 0x2
0xa2a: V822 = EXP 0x2 0xa0
0xa2b: V823 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa2c: V824 = AND 0xffffffffffffffffffffffffffffffffffffffff V481
0xa2d: V825 = 0x70a08231
0xa32: V826 = ADDRESS
0xa33: V827 = 0x0
0xa35: V828 = 0x40
0xa37: V829 = M[0x40]
0xa38: V830 = 0x20
0xa3a: V831 = ADD 0x20 V829
0xa3b: M[V831] = 0x0
0xa3c: V832 = 0x40
0xa3e: V833 = M[0x40]
0xa40: V834 = 0xffffffff
0xa45: V835 = AND 0xffffffff 0x70a08231
0xa46: V836 = 0xe0
0xa48: V837 = 0x2
0xa4a: V838 = EXP 0x2 0xe0
0xa4b: V839 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xa4d: M[V833] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa4e: V840 = 0x4
0xa50: V841 = ADD 0x4 V833
0xa53: V842 = 0x1
0xa55: V843 = 0xa0
0xa57: V844 = 0x2
0xa59: V845 = EXP 0x2 0xa0
0xa5a: V846 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5b: V847 = AND 0xffffffffffffffffffffffffffffffffffffffff V826
0xa5c: V848 = 0x1
0xa5e: V849 = 0xa0
0xa60: V850 = 0x2
0xa62: V851 = EXP 0x2 0xa0
0xa63: V852 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa64: V853 = AND 0xffffffffffffffffffffffffffffffffffffffff V847
0xa66: M[V841] = V853
0xa67: V854 = 0x20
0xa69: V855 = ADD 0x20 V841
0xa6d: V856 = 0x20
0xa6f: V857 = 0x40
0xa71: V858 = M[0x40]
0xa74: V859 = SUB V855 V858
0xa76: V860 = 0x0
0xa7a: V861 = EXTCODESIZE V824
0xa7b: V862 = ISZERO V861
0xa7c: V863 = ISZERO V862
0xa7d: V864 = 0xa82
0xa80: JUMPI 0xa82 V863
---
Entry stack: [V12, 0x33e, V481, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V824, 0x70a08231, V855, 0x20, V858, V859, V858, 0x0, V824]
Exit stack: [V12, 0x33e, V481, 0x0, V481, 0x0, V824, 0x70a08231, V855, 0x20, V858, V859, V858, 0x0, V824]

================================

Block 0xa81
[0xa81:0xa81]
---
Predecessors: [0xa1f]
Successors: []
---
0xa81 INVALID
---
0xa81: INVALID 
---
Entry stack: [V12, 0x33e, V481, 0x0, V481, 0x0, V824, 0x70a08231, V855, 0x20, V858, V859, V858, 0x0, V824]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x33e, V481, 0x0, V481, 0x0, V824, 0x70a08231, V855, 0x20, V858, V859, V858, 0x0, V824]

================================

Block 0xa82
[0xa82:0xa8d]
---
Predecessors: [0xa1f]
Successors: [0xa8e, 0xa8f]
---
0xa82 JUMPDEST
0xa83 PUSH1 0x32
0xa85 GAS
0xa86 SUB
0xa87 CALL
0xa88 ISZERO
0xa89 ISZERO
0xa8a PUSH2 0xa8f
0xa8d JUMPI
---
0xa82: JUMPDEST 
0xa83: V865 = 0x32
0xa85: V866 = GAS
0xa86: V867 = SUB V866 0x32
0xa87: V868 = CALL V867 V824 0x0 V858 V859 V858 0x20
0xa88: V869 = ISZERO V868
0xa89: V870 = ISZERO V869
0xa8a: V871 = 0xa8f
0xa8d: JUMPI 0xa8f V870
---
Entry stack: [V12, 0x33e, V481, 0x0, V481, 0x0, V824, 0x70a08231, V855, 0x20, V858, V859, V858, 0x0, V824]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x33e, V481, 0x0, V481, 0x0, V824, 0x70a08231, V855]

================================

Block 0xa8e
[0xa8e:0xa8e]
---
Predecessors: [0xa82]
Successors: []
---
0xa8e INVALID
---
0xa8e: INVALID 
---
Entry stack: [V12, 0x33e, V481, 0x0, V481, 0x0, V824, 0x70a08231, V855]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x33e, V481, 0x0, V481, 0x0, V824, 0x70a08231, V855]

================================

Block 0xa8f
[0xa8f:0xb07]
---
Predecessors: [0xa82]
Successors: [0xb08, 0xb09]
---
0xa8f JUMPDEST
0xa90 POP
0xa91 POP
0xa92 PUSH1 0x40
0xa94 DUP1
0xa95 MLOAD
0xa96 DUP1
0xa97 MLOAD
0xa98 PUSH1 0x0
0xa9a DUP1
0xa9b SLOAD
0xa9c PUSH1 0x20
0xa9e SWAP4
0xa9f DUP5
0xaa0 ADD
0xaa1 DUP3
0xaa2 SWAP1
0xaa3 MSTORE
0xaa4 DUP5
0xaa5 MLOAD
0xaa6 PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xac7 DUP2
0xac8 MSTORE
0xac9 PUSH1 0x1
0xacb PUSH1 0xa0
0xacd PUSH1 0x2
0xacf EXP
0xad0 SUB
0xad1 SWAP2
0xad2 DUP3
0xad3 AND
0xad4 PUSH1 0x4
0xad6 DUP3
0xad7 ADD
0xad8 MSTORE
0xad9 PUSH1 0x24
0xadb DUP2
0xadc ADD
0xadd DUP5
0xade SWAP1
0xadf MSTORE
0xae0 SWAP5
0xae1 MLOAD
0xae2 SWAP3
0xae3 SWAP7
0xae4 POP
0xae5 DUP8
0xae6 AND
0xae7 SWAP5
0xae8 POP
0xae9 PUSH4 0xa9059cbb
0xaee SWAP4
0xaef PUSH1 0x44
0xaf1 DUP1
0xaf2 DUP3
0xaf3 ADD
0xaf4 SWAP5
0xaf5 SWAP4
0xaf6 SWAP3
0xaf7 SWAP2
0xaf8 DUP4
0xaf9 SWAP1
0xafa SUB
0xafb ADD
0xafc SWAP1
0xafd DUP3
0xafe SWAP1
0xaff DUP8
0xb00 DUP1
0xb01 EXTCODESIZE
0xb02 ISZERO
0xb03 ISZERO
0xb04 PUSH2 0xb09
0xb07 JUMPI
---
0xa8f: JUMPDEST 
0xa92: V872 = 0x40
0xa95: V873 = M[0x40]
0xa97: V874 = M[V873]
0xa98: V875 = 0x0
0xa9b: V876 = S[0x0]
0xa9c: V877 = 0x20
0xaa0: V878 = ADD 0x20 V873
0xaa3: M[V878] = 0x0
0xaa5: V879 = M[0x40]
0xaa6: V880 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xac8: M[V879] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xac9: V881 = 0x1
0xacb: V882 = 0xa0
0xacd: V883 = 0x2
0xacf: V884 = EXP 0x2 0xa0
0xad0: V885 = SUB 0x10000000000000000000000000000000000000000 0x1
0xad3: V886 = AND 0xffffffffffffffffffffffffffffffffffffffff V876
0xad4: V887 = 0x4
0xad7: V888 = ADD V879 0x4
0xad8: M[V888] = V886
0xad9: V889 = 0x24
0xadc: V890 = ADD V879 0x24
0xadf: M[V890] = V874
0xae1: V891 = M[0x40]
0xae6: V892 = AND V481 0xffffffffffffffffffffffffffffffffffffffff
0xae9: V893 = 0xa9059cbb
0xaef: V894 = 0x44
0xaf3: V895 = ADD V879 0x44
0xafa: V896 = SUB V879 V891
0xafb: V897 = ADD V896 0x44
0xb01: V898 = EXTCODESIZE V892
0xb02: V899 = ISZERO V898
0xb03: V900 = ISZERO V899
0xb04: V901 = 0xb09
0xb07: JUMPI 0xb09 V900
---
Entry stack: [V12, 0x33e, V481, 0x0, V481, 0x0, V824, 0x70a08231, V855]
Stack pops: 5
Stack additions: [S4, V874, V892, 0xa9059cbb, V895, 0x20, V891, V897, V891, 0x0, V892]
Exit stack: [V12, 0x33e, V481, 0x0, V481, V874, V892, 0xa9059cbb, V895, 0x20, V891, V897, V891, 0x0, V892]

================================

Block 0xb08
[0xb08:0xb08]
---
Predecessors: [0xa8f]
Successors: []
---
0xb08 INVALID
---
0xb08: INVALID 
---
Entry stack: [V12, 0x33e, V481, 0x0, V481, V874, V892, 0xa9059cbb, V895, 0x20, V891, V897, V891, 0x0, V892]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x33e, V481, 0x0, V481, V874, V892, 0xa9059cbb, V895, 0x20, V891, V897, V891, 0x0, V892]

================================

Block 0xb09
[0xb09:0xb14]
---
Predecessors: [0xa8f]
Successors: [0xb15, 0xb16]
---
0xb09 JUMPDEST
0xb0a PUSH1 0x32
0xb0c GAS
0xb0d SUB
0xb0e CALL
0xb0f ISZERO
0xb10 ISZERO
0xb11 PUSH2 0xb16
0xb14 JUMPI
---
0xb09: JUMPDEST 
0xb0a: V902 = 0x32
0xb0c: V903 = GAS
0xb0d: V904 = SUB V903 0x32
0xb0e: V905 = CALL V904 V892 0x0 V891 V897 V891 0x20
0xb0f: V906 = ISZERO V905
0xb10: V907 = ISZERO V906
0xb11: V908 = 0xb16
0xb14: JUMPI 0xb16 V907
---
Entry stack: [V12, 0x33e, V481, 0x0, V481, V874, V892, 0xa9059cbb, V895, 0x20, V891, V897, V891, 0x0, V892]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x33e, V481, 0x0, V481, V874, V892, 0xa9059cbb, V895]

================================

Block 0xb15
[0xb15:0xb15]
---
Predecessors: [0xb09]
Successors: []
---
0xb15 INVALID
---
0xb15: INVALID 
---
Entry stack: [V12, 0x33e, V481, 0x0, V481, V874, V892, 0xa9059cbb, V895]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x33e, V481, 0x0, V481, V874, V892, 0xa9059cbb, V895]

================================

Block 0xb16
[0xb16:0xb1f]
---
Predecessors: [0xb09]
Successors: [0xb20]
---
0xb16 JUMPDEST
0xb17 POP
0xb18 POP
0xb19 PUSH1 0x40
0xb1b MLOAD
0xb1c MLOAD
0xb1d SWAP4
0xb1e POP
0xb1f POP
---
0xb16: JUMPDEST 
0xb19: V909 = 0x40
0xb1b: V910 = M[0x40]
0xb1c: V911 = M[V910]
---
Entry stack: [V12, 0x33e, V481, 0x0, V481, V874, V892, 0xa9059cbb, V895]
Stack pops: 6
Stack additions: [V911, S4, S3]
Exit stack: [V12, 0x33e, V481, V911, V481, V874]

================================

Block 0xb20
[0xb20:0xb26]
---
Predecessors: [0xb16]
Successors: [0x33e]
---
0xb20 JUMPDEST
0xb21 POP
0xb22 POP
0xb23 SWAP2
0xb24 SWAP1
0xb25 POP
0xb26 JUMP
---
0xb20: JUMPDEST 
0xb26: JUMP 0x33e
---
Entry stack: [V12, 0x33e, V481, V911, V481, V874]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V12, V911]

================================

Block 0xb27
[0xb27:0xb36]
---
Predecessors: [0x59c]
Successors: [0x33e]
---
0xb27 JUMPDEST
0xb28 PUSH1 0x0
0xb2a SLOAD
0xb2b PUSH1 0xa0
0xb2d PUSH1 0x2
0xb2f EXP
0xb30 SWAP1
0xb31 DIV
0xb32 PUSH1 0xff
0xb34 AND
0xb35 DUP2
0xb36 JUMP
---
0xb27: JUMPDEST 
0xb28: V912 = 0x0
0xb2a: V913 = S[0x0]
0xb2b: V914 = 0xa0
0xb2d: V915 = 0x2
0xb2f: V916 = EXP 0x2 0xa0
0xb31: V917 = DIV V913 0x10000000000000000000000000000000000000000
0xb32: V918 = 0xff
0xb34: V919 = AND 0xff V917
0xb36: JUMP 0x33e
---
Entry stack: [V12, 0x33e]
Stack pops: 1
Stack additions: [S0, V919]
Exit stack: [V12, 0x33e, V919]

================================

Block 0xb37
[0xb37:0xb5d]
---
Predecessors: [0x5c0]
Successors: [0xb5e]
---
0xb37 JUMPDEST
0xb38 PUSH1 0x1
0xb3a PUSH1 0xa0
0xb3c PUSH1 0x2
0xb3e EXP
0xb3f SUB
0xb40 DUP1
0xb41 DUP4
0xb42 AND
0xb43 PUSH1 0x0
0xb45 SWAP1
0xb46 DUP2
0xb47 MSTORE
0xb48 PUSH1 0x2
0xb4a PUSH1 0x20
0xb4c SWAP1
0xb4d DUP2
0xb4e MSTORE
0xb4f PUSH1 0x40
0xb51 DUP1
0xb52 DUP4
0xb53 SHA3
0xb54 SWAP4
0xb55 DUP6
0xb56 AND
0xb57 DUP4
0xb58 MSTORE
0xb59 SWAP3
0xb5a SWAP1
0xb5b MSTORE
0xb5c SHA3
0xb5d SLOAD
---
0xb37: JUMPDEST 
0xb38: V920 = 0x1
0xb3a: V921 = 0xa0
0xb3c: V922 = 0x2
0xb3e: V923 = EXP 0x2 0xa0
0xb3f: V924 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb42: V925 = AND V515 0xffffffffffffffffffffffffffffffffffffffff
0xb43: V926 = 0x0
0xb47: M[0x0] = V925
0xb48: V927 = 0x2
0xb4a: V928 = 0x20
0xb4e: M[0x20] = 0x2
0xb4f: V929 = 0x40
0xb53: V930 = SHA3 0x0 0x40
0xb56: V931 = AND V518 0xffffffffffffffffffffffffffffffffffffffff
0xb58: M[0x0] = V931
0xb5b: M[0x20] = V930
0xb5c: V932 = SHA3 0x0 0x40
0xb5d: V933 = S[V932]
---
Entry stack: [V12, 0x362, V515, V518]
Stack pops: 2
Stack additions: [S1, S0, V933]
Exit stack: [V12, 0x362, V515, V518, V933]

================================

Block 0xb5e
[0xb5e:0xb63]
---
Predecessors: [0xb37]
Successors: [0x362]
---
0xb5e JUMPDEST
0xb5f SWAP3
0xb60 SWAP2
0xb61 POP
0xb62 POP
0xb63 JUMP
---
0xb5e: JUMPDEST 
0xb63: JUMP 0x362
---
Entry stack: [V12, 0x362, V515, V518, V933]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, V933]

================================

Block 0xb64
[0xb64:0xb75]
---
Predecessors: [0x5ec, 0x8b7]
Successors: [0x5f4, 0x8bf]
---
0xb64 JUMPDEST
0xb65 PUSH1 0x40
0xb67 DUP1
0xb68 MLOAD
0xb69 PUSH1 0x20
0xb6b DUP2
0xb6c ADD
0xb6d SWAP1
0xb6e SWAP2
0xb6f MSTORE
0xb70 PUSH1 0x0
0xb72 DUP2
0xb73 MSTORE
0xb74 SWAP1
0xb75 JUMP
---
0xb64: JUMPDEST 
0xb65: V934 = 0x40
0xb68: V935 = M[0x40]
0xb69: V936 = 0x20
0xb6c: V937 = ADD V935 0x20
0xb6f: M[0x40] = V937
0xb70: V938 = 0x0
0xb73: M[V935] = 0x0
0xb75: JUMP {0x5f4, 0x8bf}
---
Entry stack: [V12, 0x29f, {0x5f4, 0x8bf}]
Stack pops: 1
Stack additions: [V935]
Exit stack: [V12, 0x29f, V935]

================================

Block 0xb76
[0xb76:0xba2]
---
Predecessors: []
Successors: []
---
0xb76 STOP
0xb77 LOG1
0xb78 PUSH6 0x627a7a723058
0xb7f SHA3
0xb80 MISSING 0xb8
0xb81 SWAP1
0xb82 MISSING 0x4d
0xb83 MISSING 0xcd
0xb84 SWAP1
0xb85 CALLDATALOAD
0xb86 MISSING 0x29
0xb87 DUP9
0xb88 MISSING 0xd8
0xb89 RETURNDATACOPY
0xb8a MISSING 0x49
0xb8b DUP6
0xb8c CALLDATALOAD
0xb8d PUSH21 0x845366136e875409bc8cfc50e9735d5262400029
---
0xb76: STOP 
0xb77: LOG S0 S1 S2
0xb78: V939 = 0x627a7a723058
0xb7f: V940 = SHA3 0x627a7a723058 S3
0xb80: MISSING 0xb8
0xb82: MISSING 0x4d
0xb83: MISSING 0xcd
0xb85: V941 = CALLDATALOAD S1
0xb86: MISSING 0x29
0xb88: MISSING 0xd8
0xb89: RETURNDATACOPY S0 S1 S2
0xb8a: MISSING 0x49
0xb8c: V942 = CALLDATALOAD S5
0xb8d: V943 = 0x845366136e875409bc8cfc50e9735d5262400029
---
Entry stack: []
Stack pops: 0
Stack additions: [V940, S1, S0, V941, S0, S8, S0, S1, S2, S3, S4, S5, S6, S7, S8, 0x845366136e875409bc8cfc50e9735d5262400029, V942, S0, S1, S2, S3, S4, S5]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x28f
Exit block: 0x311
Body: 0x28f, 0x296, 0x297, 0x29f, 0x2c5, 0x2d3, 0x2e5, 0x2f8, 0x311, 0x5ec, 0x5f4, 0x62a

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x31f
Exit block: 0x33e
Body: 0x31f, 0x326, 0x327, 0x33e, 0x62d, 0x639, 0x662, 0x668, 0x66f, 0x6d0

Function 2:
Public function signature: 0xdcf4b8f
Entry block: 0x352
Exit block: 0x362
Body: 0x352, 0x359, 0x35a, 0x362, 0x6d6

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x374
Exit block: 0x362
Body: 0x362, 0x374, 0x37b, 0x37c, 0x6dc

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x396
Exit block: 0x33e
Body: 0x33e, 0x396, 0x39d, 0x39e, 0x6e2, 0x6f3, 0x6f8, 0x700, 0x708, 0x765, 0x767, 0x76e, 0x771, 0x777, 0x800, 0x805, 0x806

Function 5:
Public function signature: 0x313ce567
Entry block: 0x3cf
Exit block: 0x3df
Body: 0x3cf, 0x3d6, 0x3d7, 0x3df, 0x812, 0x815

Function 6:
Public function signature: 0x64acdb77
Entry block: 0x3f5
Exit block: 0x28d
Body: 0x28d, 0x3f5, 0x3fc, 0x3fd, 0x818, 0x82f, 0x834, 0x853

Function 7:
Public function signature: 0x70a08231
Entry block: 0x407
Exit block: 0x362
Body: 0x362, 0x407, 0x40e, 0x40f, 0x855, 0x86f

Function 8:
Public function signature: 0x8f580996
Entry block: 0x435
Exit block: 0x28d
Body: 0x28d, 0x435, 0x43c, 0x43d, 0x874, 0x88b, 0x890, 0x8b5

Function 9:
Public function signature: 0x95d89b41
Entry block: 0x447
Exit block: 0x311
Body: 0x29f, 0x2c5, 0x2d3, 0x2e5, 0x2f8, 0x311, 0x447, 0x44e, 0x44f, 0x8b7, 0x8bf, 0x8f5

Function 10:
Public function signature: 0x98b01fe3
Entry block: 0x4d7
Exit block: 0x362
Body: 0x362, 0x4d7, 0x4de, 0x4df, 0x8f8

Function 11:
Public function signature: 0xa9059cbb
Entry block: 0x4f9
Exit block: 0x33e
Body: 0x33e, 0x4f9, 0x500, 0x501, 0x8fe, 0x90d, 0x912, 0x91a, 0x922, 0x95a, 0x95d, 0x963, 0x9d2, 0x9d7, 0x9d8

Function 12:
Public function signature: 0xc59d4847
Entry block: 0x52c
Exit block: 0x53c
Body: 0x52c, 0x533, 0x534, 0x53c, 0x9e1, 0x9f8

Function 13:
Public function signature: 0xd6906295
Entry block: 0x564
Exit block: 0x33e
Body: 0x33e, 0x564, 0x56b, 0x56c, 0x9fe, 0xa1a, 0xa1f, 0xa81, 0xa82, 0xa8e, 0xa8f, 0xb08, 0xb09, 0xb15, 0xb16, 0xb20

Function 14:
Public function signature: 0xda040c0f
Entry block: 0x594
Exit block: 0x33e
Body: 0x33e, 0x594, 0x59b, 0x59c, 0xb27

Function 15:
Public function signature: 0xdd62ed3e
Entry block: 0x5b8
Exit block: 0x362
Body: 0x362, 0x5b8, 0x5bf, 0x5c0, 0xb37, 0xb5e

Function 16:
Public fallback function
Entry block: 0xca
Exit block: 0x1b8
Body: 0xca, 0xce, 0xed, 0xf2, 0xfa, 0xfe, 0x12e, 0x12f, 0x14f, 0x1b8, 0x1b9, 0x1d4, 0x20c, 0x224, 0x225, 0x287, 0x28d

