Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x82]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x11610c25
0x3c EQ
0x3d PUSH2 0x82
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x11610c25
0x3c: V13 = EQ 0x11610c25 V11
0x3d: V14 = 0x82
0x40: JUMPI 0x82 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x8c]
---
0x41 DUP1
0x42 PUSH4 0x4d68282f
0x47 EQ
0x48 PUSH2 0x8c
0x4b JUMPI
---
0x42: V15 = 0x4d68282f
0x47: V16 = EQ 0x4d68282f V11
0x48: V17 = 0x8c
0x4b: JUMPI 0x8c V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xb9]
---
0x4c DUP1
0x4d PUSH4 0x5ec01e4d
0x52 EQ
0x53 PUSH2 0xb9
0x56 JUMPI
---
0x4d: V18 = 0x5ec01e4d
0x52: V19 = EQ 0x5ec01e4d V11
0x53: V20 = 0xb9
0x56: JUMPI 0xb9 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xea]
---
0x57 DUP1
0x58 PUSH4 0xa69df4b5
0x5d EQ
0x5e PUSH2 0xea
0x61 JUMPI
---
0x58: V21 = 0xa69df4b5
0x5d: V22 = EQ 0xa69df4b5 V11
0x5e: V23 = 0xea
0x61: JUMPI 0xea V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x101]
---
0x62 DUP1
0x63 PUSH4 0xf349e3e3
0x68 EQ
0x69 PUSH2 0x101
0x6c JUMPI
---
0x63: V24 = 0xf349e3e3
0x68: V25 = EQ 0xf349e3e3 V11
0x69: V26 = 0x101
0x6c: JUMPI 0x101 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x144]
---
0x6d DUP1
0x6e PUSH4 0xf83d08ba
0x73 EQ
0x74 PUSH2 0x144
0x77 JUMPI
---
0x6e: V27 = 0xf83d08ba
0x73: V28 = EQ 0xf83d08ba V11
0x74: V29 = 0x144
0x77: JUMPI 0x144 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x7f]
---
Predecessors: [0x0, 0x6d]
Successors: [0x15b]
---
0x78 JUMPDEST
0x79 PUSH2 0x80
0x7c PUSH2 0x15b
0x7f JUMP
---
0x78: JUMPDEST 
0x79: V30 = 0x80
0x7c: V31 = 0x15b
0x7f: JUMP 0x15b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x80]
Exit stack: [V11, 0x80]

================================

Block 0x80
[0x80:0x81]
---
Predecessors: [0x1e9]
Successors: []
---
0x80 JUMPDEST
0x81 STOP
---
0x80: JUMPDEST 
0x81: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x82
[0x82:0x89]
---
Predecessors: [0xd]
Successors: [0x15b]
---
0x82 JUMPDEST
0x83 PUSH2 0x8a
0x86 PUSH2 0x15b
0x89 JUMP
---
0x82: JUMPDEST 
0x83: V32 = 0x8a
0x86: V33 = 0x15b
0x89: JUMP 0x15b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8a]
Exit stack: [V11, 0x8a]

================================

Block 0x8a
[0x8a:0x8b]
---
Predecessors: [0x1e9]
Successors: []
---
0x8a JUMPDEST
0x8b STOP
---
0x8a: JUMPDEST 
0x8b: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8c
[0x8c:0x93]
---
Predecessors: [0x41]
Successors: [0x94, 0x98]
---
0x8c JUMPDEST
0x8d CALLVALUE
0x8e DUP1
0x8f ISZERO
0x90 PUSH2 0x98
0x93 JUMPI
---
0x8c: JUMPDEST 
0x8d: V34 = CALLVALUE
0x8f: V35 = ISZERO V34
0x90: V36 = 0x98
0x93: JUMPI 0x98 V35
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V34]
Exit stack: [V11, V34]

================================

Block 0x94
[0x94:0x97]
---
Predecessors: [0x8c]
Successors: []
---
0x94 PUSH1 0x0
0x96 DUP1
0x97 REVERT
---
0x94: V37 = 0x0
0x97: REVERT 0x0 0x0
---
Entry stack: [V11, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V34]

================================

Block 0x98
[0x98:0xb6]
---
Predecessors: [0x8c]
Successors: [0x1eb]
---
0x98 JUMPDEST
0x99 POP
0x9a PUSH2 0xb7
0x9d PUSH1 0x4
0x9f DUP1
0xa0 CALLDATASIZE
0xa1 SUB
0xa2 DUP2
0xa3 ADD
0xa4 SWAP1
0xa5 DUP1
0xa6 DUP1
0xa7 CALLDATALOAD
0xa8 SWAP1
0xa9 PUSH1 0x20
0xab ADD
0xac SWAP1
0xad SWAP3
0xae SWAP2
0xaf SWAP1
0xb0 POP
0xb1 POP
0xb2 POP
0xb3 PUSH2 0x1eb
0xb6 JUMP
---
0x98: JUMPDEST 
0x9a: V38 = 0xb7
0x9d: V39 = 0x4
0xa0: V40 = CALLDATASIZE
0xa1: V41 = SUB V40 0x4
0xa3: V42 = ADD 0x4 V41
0xa7: V43 = CALLDATALOAD 0x4
0xa9: V44 = 0x20
0xab: V45 = ADD 0x20 0x4
0xb3: V46 = 0x1eb
0xb6: JUMP 0x1eb
---
Entry stack: [V11, V34]
Stack pops: 1
Stack additions: [0xb7, V43]
Exit stack: [V11, 0xb7, V43]

================================

Block 0xb7
[0xb7:0xb8]
---
Predecessors: [0x292]
Successors: []
---
0xb7 JUMPDEST
0xb8 STOP
---
0xb7: JUMPDEST 
0xb8: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xc0]
---
Predecessors: [0x4c]
Successors: [0xc1, 0xc5]
---
0xb9 JUMPDEST
0xba CALLVALUE
0xbb DUP1
0xbc ISZERO
0xbd PUSH2 0xc5
0xc0 JUMPI
---
0xb9: JUMPDEST 
0xba: V47 = CALLVALUE
0xbc: V48 = ISZERO V47
0xbd: V49 = 0xc5
0xc0: JUMPI 0xc5 V48
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V47]
Exit stack: [V11, V47]

================================

Block 0xc1
[0xc1:0xc4]
---
Predecessors: [0xb9]
Successors: []
---
0xc1 PUSH1 0x0
0xc3 DUP1
0xc4 REVERT
---
0xc1: V50 = 0x0
0xc4: REVERT 0x0 0x0
---
Entry stack: [V11, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V47]

================================

Block 0xc5
[0xc5:0xcd]
---
Predecessors: [0xb9]
Successors: [0x295]
---
0xc5 JUMPDEST
0xc6 POP
0xc7 PUSH2 0xce
0xca PUSH2 0x295
0xcd JUMP
---
0xc5: JUMPDEST 
0xc7: V51 = 0xce
0xca: V52 = 0x295
0xcd: JUMP 0x295
---
Entry stack: [V11, V47]
Stack pops: 1
Stack additions: [0xce]
Exit stack: [V11, 0xce]

================================

Block 0xce
[0xce:0xe9]
---
Predecessors: [0x2c5]
Successors: []
---
0xce JUMPDEST
0xcf PUSH1 0x40
0xd1 MLOAD
0xd2 DUP1
0xd3 DUP3
0xd4 PUSH1 0xff
0xd6 AND
0xd7 PUSH1 0xff
0xd9 AND
0xda DUP2
0xdb MSTORE
0xdc PUSH1 0x20
0xde ADD
0xdf SWAP2
0xe0 POP
0xe1 POP
0xe2 PUSH1 0x40
0xe4 MLOAD
0xe5 DUP1
0xe6 SWAP2
0xe7 SUB
0xe8 SWAP1
0xe9 RETURN
---
0xce: JUMPDEST 
0xcf: V53 = 0x40
0xd1: V54 = M[0x40]
0xd4: V55 = 0xff
0xd6: V56 = AND 0xff V194
0xd7: V57 = 0xff
0xd9: V58 = AND 0xff V56
0xdb: M[V54] = V58
0xdc: V59 = 0x20
0xde: V60 = ADD 0x20 V54
0xe2: V61 = 0x40
0xe4: V62 = M[0x40]
0xe7: V63 = SUB V60 V62
0xe9: RETURN V62 V63
---
Entry stack: [V11, {0x80, 0x8a}, 0x1, S1, V194]
Stack pops: 1
Stack additions: []
Exit stack: [V11, {0x80, 0x8a}, 0x1, S1]

================================

Block 0xea
[0xea:0xf1]
---
Predecessors: [0x57]
Successors: [0xf2, 0xf6]
---
0xea JUMPDEST
0xeb CALLVALUE
0xec DUP1
0xed ISZERO
0xee PUSH2 0xf6
0xf1 JUMPI
---
0xea: JUMPDEST 
0xeb: V64 = CALLVALUE
0xed: V65 = ISZERO V64
0xee: V66 = 0xf6
0xf1: JUMPI 0xf6 V65
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V64]
Exit stack: [V11, V64]

================================

Block 0xf2
[0xf2:0xf5]
---
Predecessors: [0xea]
Successors: []
---
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 REVERT
---
0xf2: V67 = 0x0
0xf5: REVERT 0x0 0x0
---
Entry stack: [V11, V64]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V64]

================================

Block 0xf6
[0xf6:0xfe]
---
Predecessors: [0xea]
Successors: [0x2cb]
---
0xf6 JUMPDEST
0xf7 POP
0xf8 PUSH2 0xff
0xfb PUSH2 0x2cb
0xfe JUMP
---
0xf6: JUMPDEST 
0xf8: V68 = 0xff
0xfb: V69 = 0x2cb
0xfe: JUMP 0x2cb
---
Entry stack: [V11, V64]
Stack pops: 1
Stack additions: [0xff]
Exit stack: [V11, 0xff]

================================

Block 0xff
[0xff:0x100]
---
Predecessors: [0x33b]
Successors: []
---
0xff JUMPDEST
0x100 STOP
---
0xff: JUMPDEST 
0x100: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x101
[0x101:0x108]
---
Predecessors: [0x62]
Successors: [0x109, 0x10d]
---
0x101 JUMPDEST
0x102 CALLVALUE
0x103 DUP1
0x104 ISZERO
0x105 PUSH2 0x10d
0x108 JUMPI
---
0x101: JUMPDEST 
0x102: V70 = CALLVALUE
0x104: V71 = ISZERO V70
0x105: V72 = 0x10d
0x108: JUMPI 0x10d V71
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V70]
Exit stack: [V11, V70]

================================

Block 0x109
[0x109:0x10c]
---
Predecessors: [0x101]
Successors: []
---
0x109 PUSH1 0x0
0x10b DUP1
0x10c REVERT
---
0x109: V73 = 0x0
0x10c: REVERT 0x0 0x0
---
Entry stack: [V11, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V70]

================================

Block 0x10d
[0x10d:0x141]
---
Predecessors: [0x101]
Successors: [0x33d]
---
0x10d JUMPDEST
0x10e POP
0x10f PUSH2 0x142
0x112 PUSH1 0x4
0x114 DUP1
0x115 CALLDATASIZE
0x116 SUB
0x117 DUP2
0x118 ADD
0x119 SWAP1
0x11a DUP1
0x11b DUP1
0x11c CALLDATALOAD
0x11d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x132 AND
0x133 SWAP1
0x134 PUSH1 0x20
0x136 ADD
0x137 SWAP1
0x138 SWAP3
0x139 SWAP2
0x13a SWAP1
0x13b POP
0x13c POP
0x13d POP
0x13e PUSH2 0x33d
0x141 JUMP
---
0x10d: JUMPDEST 
0x10f: V74 = 0x142
0x112: V75 = 0x4
0x115: V76 = CALLDATASIZE
0x116: V77 = SUB V76 0x4
0x118: V78 = ADD 0x4 V77
0x11c: V79 = CALLDATALOAD 0x4
0x11d: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x132: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x134: V82 = 0x20
0x136: V83 = ADD 0x20 0x4
0x13e: V84 = 0x33d
0x141: JUMP 0x33d
---
Entry stack: [V11, V70]
Stack pops: 1
Stack additions: [0x142, V81]
Exit stack: [V11, 0x142, V81]

================================

Block 0x142
[0x142:0x143]
---
Predecessors: [0x42b]
Successors: []
---
0x142 JUMPDEST
0x143 STOP
---
0x142: JUMPDEST 
0x143: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x144
[0x144:0x14b]
---
Predecessors: [0x6d]
Successors: [0x14c, 0x150]
---
0x144 JUMPDEST
0x145 CALLVALUE
0x146 DUP1
0x147 ISZERO
0x148 PUSH2 0x150
0x14b JUMPI
---
0x144: JUMPDEST 
0x145: V85 = CALLVALUE
0x147: V86 = ISZERO V85
0x148: V87 = 0x150
0x14b: JUMPI 0x150 V86
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V85]
Exit stack: [V11, V85]

================================

Block 0x14c
[0x14c:0x14f]
---
Predecessors: [0x144]
Successors: []
---
0x14c PUSH1 0x0
0x14e DUP1
0x14f REVERT
---
0x14c: V88 = 0x0
0x14f: REVERT 0x0 0x0
---
Entry stack: [V11, V85]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V85]

================================

Block 0x150
[0x150:0x158]
---
Predecessors: [0x144]
Successors: [0x42e]
---
0x150 JUMPDEST
0x151 POP
0x152 PUSH2 0x159
0x155 PUSH2 0x42e
0x158 JUMP
---
0x150: JUMPDEST 
0x152: V89 = 0x159
0x155: V90 = 0x42e
0x158: JUMP 0x42e
---
Entry stack: [V11, V85]
Stack pops: 1
Stack additions: [0x159]
Exit stack: [V11, 0x159]

================================

Block 0x159
[0x159:0x15a]
---
Predecessors: [0x49f]
Successors: []
---
0x159 JUMPDEST
0x15a STOP
---
0x159: JUMPDEST 
0x15a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15b
[0x15b:0x166]
---
Predecessors: [0x78, 0x82]
Successors: [0x295]
---
0x15b JUMPDEST
0x15c PUSH1 0x1
0x15e PUSH1 0x2
0x160 PUSH2 0x167
0x163 PUSH2 0x295
0x166 JUMP
---
0x15b: JUMPDEST 
0x15c: V91 = 0x1
0x15e: V92 = 0x2
0x160: V93 = 0x167
0x163: V94 = 0x295
0x166: JUMP 0x295
---
Entry stack: [V11, {0x80, 0x8a}]
Stack pops: 0
Stack additions: [0x1, 0x2, 0x167]
Exit stack: [V11, {0x80, 0x8a}, 0x1, 0x2, 0x167]

================================

Block 0x167
[0x167:0x171]
---
Predecessors: [0x2c5]
Successors: [0x172, 0x173]
---
0x167 JUMPDEST
0x168 PUSH1 0xff
0x16a AND
0x16b DUP2
0x16c ISZERO
0x16d ISZERO
0x16e PUSH2 0x173
0x171 JUMPI
---
0x167: JUMPDEST 
0x168: V95 = 0xff
0x16a: V96 = AND 0xff V194
0x16c: V97 = ISZERO S1
0x16d: V98 = ISZERO V97
0x16e: V99 = 0x173
0x171: JUMPI 0x173 V98
---
Entry stack: [V11, {0x80, 0x8a}, 0x1, S1, V194]
Stack pops: 2
Stack additions: [S1, V96]
Exit stack: [V11, {0x80, 0x8a}, 0x1, S1, V96]

================================

Block 0x172
[0x172:0x172]
---
Predecessors: [0x167]
Successors: []
---
0x172 INVALID
---
0x172: INVALID 
---
Entry stack: [V11, {0x80, 0x8a}, 0x1, S1, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x80, 0x8a}, 0x1, S1, V96]

================================

Block 0x173
[0x173:0x17e]
---
Predecessors: [0x167]
Successors: [0x17f, 0x18b]
---
0x173 JUMPDEST
0x174 MOD
0x175 PUSH1 0xff
0x177 AND
0x178 EQ
0x179 DUP1
0x17a ISZERO
0x17b PUSH2 0x18b
0x17e JUMPI
---
0x173: JUMPDEST 
0x174: V100 = MOD V96 S1
0x175: V101 = 0xff
0x177: V102 = AND 0xff V100
0x178: V103 = EQ V102 0x1
0x17a: V104 = ISZERO V103
0x17b: V105 = 0x18b
0x17e: JUMPI 0x18b V104
---
Entry stack: [V11, {0x80, 0x8a}, 0x1, S1, V96]
Stack pops: 3
Stack additions: [V103]
Exit stack: [V11, {0x80, 0x8a}, V103]

================================

Block 0x17f
[0x17f:0x18a]
---
Predecessors: [0x173]
Successors: [0x18b]
---
0x17f POP
0x180 PUSH8 0xde0b6b3a7640000
0x189 CALLVALUE
0x18a EQ
---
0x180: V106 = 0xde0b6b3a7640000
0x189: V107 = CALLVALUE
0x18a: V108 = EQ V107 0xde0b6b3a7640000
---
Entry stack: [V11, {0x80, 0x8a}, V103]
Stack pops: 1
Stack additions: [V108]
Exit stack: [V11, {0x80, 0x8a}, V108]

================================

Block 0x18b
[0x18b:0x191]
---
Predecessors: [0x173, 0x17f]
Successors: [0x192, 0x1a4]
---
0x18b JUMPDEST
0x18c DUP1
0x18d ISZERO
0x18e PUSH2 0x1a4
0x191 JUMPI
---
0x18b: JUMPDEST 
0x18d: V109 = ISZERO S0
0x18e: V110 = 0x1a4
0x191: JUMPI 0x1a4 V109
---
Entry stack: [V11, {0x80, 0x8a}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, {0x80, 0x8a}, S0]

================================

Block 0x192
[0x192:0x1a3]
---
Predecessors: [0x18b]
Successors: [0x1a4]
---
0x192 POP
0x193 PUSH1 0x0
0x195 PUSH1 0x14
0x197 SWAP1
0x198 SLOAD
0x199 SWAP1
0x19a PUSH2 0x100
0x19d EXP
0x19e SWAP1
0x19f DIV
0x1a0 PUSH1 0xff
0x1a2 AND
0x1a3 ISZERO
---
0x193: V111 = 0x0
0x195: V112 = 0x14
0x198: V113 = S[0x0]
0x19a: V114 = 0x100
0x19d: V115 = EXP 0x100 0x14
0x19f: V116 = DIV V113 0x10000000000000000000000000000000000000000
0x1a0: V117 = 0xff
0x1a2: V118 = AND 0xff V116
0x1a3: V119 = ISZERO V118
---
Entry stack: [V11, {0x80, 0x8a}, S0]
Stack pops: 1
Stack additions: [V119]
Exit stack: [V11, {0x80, 0x8a}, V119]

================================

Block 0x1a4
[0x1a4:0x1a9]
---
Predecessors: [0x18b, 0x192]
Successors: [0x1aa, 0x1e9]
---
0x1a4 JUMPDEST
0x1a5 ISZERO
0x1a6 PUSH2 0x1e9
0x1a9 JUMPI
---
0x1a4: JUMPDEST 
0x1a5: V120 = ISZERO S0
0x1a6: V121 = 0x1e9
0x1a9: JUMPI 0x1e9 V120
---
Entry stack: [V11, {0x80, 0x8a}, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, {0x80, 0x8a}]

================================

Block 0x1aa
[0x1aa:0x1e3]
---
Predecessors: [0x1a4]
Successors: [0x1e4, 0x1e8]
---
0x1aa CALLER
0x1ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c0 AND
0x1c1 PUSH8 0x1bc16d674ec80000
0x1ca PUSH1 0x40
0x1cc MLOAD
0x1cd PUSH1 0x0
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 DUP1
0x1d3 DUP4
0x1d4 SUB
0x1d5 DUP2
0x1d6 DUP6
0x1d7 DUP8
0x1d8 GAS
0x1d9 CALL
0x1da SWAP3
0x1db POP
0x1dc POP
0x1dd POP
0x1de ISZERO
0x1df ISZERO
0x1e0 PUSH2 0x1e8
0x1e3 JUMPI
---
0x1aa: V122 = CALLER
0x1ab: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x1c1: V125 = 0x1bc16d674ec80000
0x1ca: V126 = 0x40
0x1cc: V127 = M[0x40]
0x1cd: V128 = 0x0
0x1cf: V129 = 0x40
0x1d1: V130 = M[0x40]
0x1d4: V131 = SUB V127 V130
0x1d8: V132 = GAS
0x1d9: V133 = CALL V132 V124 0x1bc16d674ec80000 V130 V131 V130 0x0
0x1de: V134 = ISZERO V133
0x1df: V135 = ISZERO V134
0x1e0: V136 = 0x1e8
0x1e3: JUMPI 0x1e8 V135
---
Entry stack: [V11, {0x80, 0x8a}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x80, 0x8a}]

================================

Block 0x1e4
[0x1e4:0x1e7]
---
Predecessors: [0x1aa]
Successors: []
---
0x1e4 PUSH1 0x0
0x1e6 DUP1
0x1e7 REVERT
---
0x1e4: V137 = 0x0
0x1e7: REVERT 0x0 0x0
---
Entry stack: [V11, {0x80, 0x8a}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x80, 0x8a}]

================================

Block 0x1e8
[0x1e8:0x1e8]
---
Predecessors: [0x1aa]
Successors: [0x1e9]
---
0x1e8 JUMPDEST
---
0x1e8: JUMPDEST 
---
Entry stack: [V11, {0x80, 0x8a}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x80, 0x8a}]

================================

Block 0x1e9
[0x1e9:0x1ea]
---
Predecessors: [0x1a4, 0x1e8]
Successors: [0x80, 0x8a]
---
0x1e9 JUMPDEST
0x1ea JUMP
---
0x1e9: JUMPDEST 
0x1ea: JUMP {0x80, 0x8a}
---
Entry stack: [V11, {0x80, 0x8a}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1eb
[0x1eb:0x240]
---
Predecessors: [0x98]
Successors: [0x241, 0x292]
---
0x1eb JUMPDEST
0x1ec CALLER
0x1ed PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x202 AND
0x203 PUSH1 0x0
0x205 DUP1
0x206 SWAP1
0x207 SLOAD
0x208 SWAP1
0x209 PUSH2 0x100
0x20c EXP
0x20d SWAP1
0x20e DIV
0x20f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x224 AND
0x225 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23a AND
0x23b EQ
0x23c ISZERO
0x23d PUSH2 0x292
0x240 JUMPI
---
0x1eb: JUMPDEST 
0x1ec: V138 = CALLER
0x1ed: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x202: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x203: V141 = 0x0
0x207: V142 = S[0x0]
0x209: V143 = 0x100
0x20c: V144 = EXP 0x100 0x0
0x20e: V145 = DIV V142 0x1
0x20f: V146 = 0xffffffffffffffffffffffffffffffffffffffff
0x224: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x225: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x23a: V149 = AND 0xffffffffffffffffffffffffffffffffffffffff V147
0x23b: V150 = EQ V149 V140
0x23c: V151 = ISZERO V150
0x23d: V152 = 0x292
0x240: JUMPI 0x292 V151
---
Entry stack: [V11, 0xb7, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb7, V43]

================================

Block 0x241
[0x241:0x286]
---
Predecessors: [0x1eb]
Successors: [0x287, 0x290]
---
0x241 CALLER
0x242 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x257 AND
0x258 PUSH2 0x8fc
0x25b PUSH8 0xde0b6b3a7640000
0x264 DUP4
0x265 MUL
0x266 SWAP1
0x267 DUP2
0x268 ISZERO
0x269 MUL
0x26a SWAP1
0x26b PUSH1 0x40
0x26d MLOAD
0x26e PUSH1 0x0
0x270 PUSH1 0x40
0x272 MLOAD
0x273 DUP1
0x274 DUP4
0x275 SUB
0x276 DUP2
0x277 DUP6
0x278 DUP9
0x279 DUP9
0x27a CALL
0x27b SWAP4
0x27c POP
0x27d POP
0x27e POP
0x27f POP
0x280 ISZERO
0x281 DUP1
0x282 ISZERO
0x283 PUSH2 0x290
0x286 JUMPI
---
0x241: V153 = CALLER
0x242: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x257: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x258: V156 = 0x8fc
0x25b: V157 = 0xde0b6b3a7640000
0x265: V158 = MUL V43 0xde0b6b3a7640000
0x268: V159 = ISZERO V158
0x269: V160 = MUL V159 0x8fc
0x26b: V161 = 0x40
0x26d: V162 = M[0x40]
0x26e: V163 = 0x0
0x270: V164 = 0x40
0x272: V165 = M[0x40]
0x275: V166 = SUB V162 V165
0x27a: V167 = CALL V160 V155 V158 V165 V166 V165 0x0
0x280: V168 = ISZERO V167
0x282: V169 = ISZERO V168
0x283: V170 = 0x290
0x286: JUMPI 0x290 V169
---
Entry stack: [V11, 0xb7, V43]
Stack pops: 1
Stack additions: [S0, V168]
Exit stack: [V11, 0xb7, V43, V168]

================================

Block 0x287
[0x287:0x28f]
---
Predecessors: [0x241]
Successors: []
---
0x287 RETURNDATASIZE
0x288 PUSH1 0x0
0x28a DUP1
0x28b RETURNDATACOPY
0x28c RETURNDATASIZE
0x28d PUSH1 0x0
0x28f REVERT
---
0x287: V171 = RETURNDATASIZE
0x288: V172 = 0x0
0x28b: RETURNDATACOPY 0x0 0x0 V171
0x28c: V173 = RETURNDATASIZE
0x28d: V174 = 0x0
0x28f: REVERT 0x0 V173
---
Entry stack: [V11, 0xb7, V43, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb7, V43, V168]

================================

Block 0x290
[0x290:0x291]
---
Predecessors: [0x241]
Successors: [0x292]
---
0x290 JUMPDEST
0x291 POP
---
0x290: JUMPDEST 
---
Entry stack: [V11, 0xb7, V43, V168]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb7, V43]

================================

Block 0x292
[0x292:0x294]
---
Predecessors: [0x1eb, 0x290]
Successors: [0xb7]
---
0x292 JUMPDEST
0x293 POP
0x294 JUMP
---
0x292: JUMPDEST 
0x294: JUMP 0xb7
---
Entry stack: [V11, 0xb7, V43]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x295
[0x295:0x2c3]
---
Predecessors: [0xc5, 0x15b]
Successors: [0x2c4, 0x2c5]
---
0x295 JUMPDEST
0x296 PUSH1 0x0
0x298 PUSH2 0x100
0x29b TIMESTAMP
0x29c DIFFICULTY
0x29d PUSH1 0x40
0x29f MLOAD
0x2a0 DUP1
0x2a1 DUP4
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 PUSH1 0x20
0x2a6 ADD
0x2a7 DUP3
0x2a8 DUP2
0x2a9 MSTORE
0x2aa PUSH1 0x20
0x2ac ADD
0x2ad SWAP3
0x2ae POP
0x2af POP
0x2b0 POP
0x2b1 PUSH1 0x40
0x2b3 MLOAD
0x2b4 DUP1
0x2b5 SWAP2
0x2b6 SUB
0x2b7 SWAP1
0x2b8 SHA3
0x2b9 PUSH1 0x1
0x2bb SWAP1
0x2bc DIV
0x2bd DUP2
0x2be ISZERO
0x2bf ISZERO
0x2c0 PUSH2 0x2c5
0x2c3 JUMPI
---
0x295: JUMPDEST 
0x296: V175 = 0x0
0x298: V176 = 0x100
0x29b: V177 = TIMESTAMP
0x29c: V178 = DIFFICULTY
0x29d: V179 = 0x40
0x29f: V180 = M[0x40]
0x2a3: M[V180] = V177
0x2a4: V181 = 0x20
0x2a6: V182 = ADD 0x20 V180
0x2a9: M[V182] = V178
0x2aa: V183 = 0x20
0x2ac: V184 = ADD 0x20 V182
0x2b1: V185 = 0x40
0x2b3: V186 = M[0x40]
0x2b6: V187 = SUB V184 V186
0x2b8: V188 = SHA3 V186 V187
0x2b9: V189 = 0x1
0x2bc: V190 = DIV V188 0x1
0x2be: V191 = ISZERO 0x100
0x2bf: V192 = ISZERO 0x0
0x2c0: V193 = 0x2c5
0x2c3: JUMPI 0x2c5 0x1
---
Entry stack: [V11, {0x80, 0x8a}, 0x1, S1, {0xce, 0x167}]
Stack pops: 0
Stack additions: [0x0, 0x100, V190]
Exit stack: [V11, {0x80, 0x8a}, 0x1, S1, {0xce, 0x167}, 0x0, 0x100, V190]

================================

Block 0x2c4
[0x2c4:0x2c4]
---
Predecessors: [0x295]
Successors: []
---
0x2c4 INVALID
---
0x2c4: INVALID 
---
Entry stack: [V11, {0x80, 0x8a}, 0x1, S4, {0xce, 0x167}, 0x0, 0x100, V190]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x80, 0x8a}, 0x1, S4, {0xce, 0x167}, 0x0, 0x100, V190]

================================

Block 0x2c5
[0x2c5:0x2ca]
---
Predecessors: [0x295]
Successors: [0xce, 0x167]
---
0x2c5 JUMPDEST
0x2c6 MOD
0x2c7 SWAP1
0x2c8 POP
0x2c9 SWAP1
0x2ca JUMP
---
0x2c5: JUMPDEST 
0x2c6: V194 = MOD V190 0x100
0x2ca: JUMP {0xce, 0x167}
---
Entry stack: [V11, {0x80, 0x8a}, 0x1, S4, {0xce, 0x167}, 0x0, 0x100, V190]
Stack pops: 4
Stack additions: [V194]
Exit stack: [V11, {0x80, 0x8a}, 0x1, S4, V194]

================================

Block 0x2cb
[0x2cb:0x320]
---
Predecessors: [0xf6]
Successors: [0x321, 0x33b]
---
0x2cb JUMPDEST
0x2cc CALLER
0x2cd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e2 AND
0x2e3 PUSH1 0x0
0x2e5 DUP1
0x2e6 SWAP1
0x2e7 SLOAD
0x2e8 SWAP1
0x2e9 PUSH2 0x100
0x2ec EXP
0x2ed SWAP1
0x2ee DIV
0x2ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x304 AND
0x305 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31a AND
0x31b EQ
0x31c ISZERO
0x31d PUSH2 0x33b
0x320 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V195 = CALLER
0x2cd: V196 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e2: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x2e3: V198 = 0x0
0x2e7: V199 = S[0x0]
0x2e9: V200 = 0x100
0x2ec: V201 = EXP 0x100 0x0
0x2ee: V202 = DIV V199 0x1
0x2ef: V203 = 0xffffffffffffffffffffffffffffffffffffffff
0x304: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x305: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x31a: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x31b: V207 = EQ V206 V197
0x31c: V208 = ISZERO V207
0x31d: V209 = 0x33b
0x320: JUMPI 0x33b V208
---
Entry stack: [V11, 0xff]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xff]

================================

Block 0x321
[0x321:0x33a]
---
Predecessors: [0x2cb]
Successors: [0x33b]
---
0x321 PUSH1 0x0
0x323 DUP1
0x324 PUSH1 0x14
0x326 PUSH2 0x100
0x329 EXP
0x32a DUP2
0x32b SLOAD
0x32c DUP2
0x32d PUSH1 0xff
0x32f MUL
0x330 NOT
0x331 AND
0x332 SWAP1
0x333 DUP4
0x334 ISZERO
0x335 ISZERO
0x336 MUL
0x337 OR
0x338 SWAP1
0x339 SSTORE
0x33a POP
---
0x321: V210 = 0x0
0x324: V211 = 0x14
0x326: V212 = 0x100
0x329: V213 = EXP 0x100 0x14
0x32b: V214 = S[0x0]
0x32d: V215 = 0xff
0x32f: V216 = MUL 0xff 0x10000000000000000000000000000000000000000
0x330: V217 = NOT 0xff0000000000000000000000000000000000000000
0x331: V218 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V214
0x334: V219 = ISZERO 0x0
0x335: V220 = ISZERO 0x1
0x336: V221 = MUL 0x0 0x10000000000000000000000000000000000000000
0x337: V222 = OR 0x0 V218
0x339: S[0x0] = V222
---
Entry stack: [V11, 0xff]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xff]

================================

Block 0x33b
[0x33b:0x33c]
---
Predecessors: [0x2cb, 0x321]
Successors: [0xff]
---
0x33b JUMPDEST
0x33c JUMP
---
0x33b: JUMPDEST 
0x33c: JUMP 0xff
---
Entry stack: [V11, 0xff]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x33d
[0x33d:0x393]
---
Predecessors: [0x10d]
Successors: [0x394, 0x3e5]
---
0x33d JUMPDEST
0x33e PUSH1 0x0
0x340 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x355 AND
0x356 PUSH1 0x0
0x358 DUP1
0x359 SWAP1
0x35a SLOAD
0x35b SWAP1
0x35c PUSH2 0x100
0x35f EXP
0x360 SWAP1
0x361 DIV
0x362 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x377 AND
0x378 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38d AND
0x38e EQ
0x38f DUP1
0x390 PUSH2 0x3e5
0x393 JUMPI
---
0x33d: JUMPDEST 
0x33e: V223 = 0x0
0x340: V224 = 0xffffffffffffffffffffffffffffffffffffffff
0x355: V225 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x356: V226 = 0x0
0x35a: V227 = S[0x0]
0x35c: V228 = 0x100
0x35f: V229 = EXP 0x100 0x0
0x361: V230 = DIV V227 0x1
0x362: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x377: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x378: V233 = 0xffffffffffffffffffffffffffffffffffffffff
0x38d: V234 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x38e: V235 = EQ V234 0x0
0x390: V236 = 0x3e5
0x393: JUMPI 0x3e5 V235
---
Entry stack: [V11, 0x142, V81]
Stack pops: 0
Stack additions: [V235]
Exit stack: [V11, 0x142, V81, V235]

================================

Block 0x394
[0x394:0x3e4]
---
Predecessors: [0x33d]
Successors: [0x3e5]
---
0x394 POP
0x395 CALLER
0x396 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ab AND
0x3ac PUSH1 0x0
0x3ae DUP1
0x3af SWAP1
0x3b0 SLOAD
0x3b1 SWAP1
0x3b2 PUSH2 0x100
0x3b5 EXP
0x3b6 SWAP1
0x3b7 DIV
0x3b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3cd AND
0x3ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e3 AND
0x3e4 EQ
---
0x395: V237 = CALLER
0x396: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ab: V239 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x3ac: V240 = 0x0
0x3b0: V241 = S[0x0]
0x3b2: V242 = 0x100
0x3b5: V243 = EXP 0x100 0x0
0x3b7: V244 = DIV V241 0x1
0x3b8: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x3cd: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x3ce: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e3: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x3e4: V249 = EQ V248 V239
---
Entry stack: [V11, 0x142, V81, V235]
Stack pops: 1
Stack additions: [V249]
Exit stack: [V11, 0x142, V81, V249]

================================

Block 0x3e5
[0x3e5:0x3ea]
---
Predecessors: [0x33d, 0x394]
Successors: [0x3eb, 0x42b]
---
0x3e5 JUMPDEST
0x3e6 ISZERO
0x3e7 PUSH2 0x42b
0x3ea JUMPI
---
0x3e5: JUMPDEST 
0x3e6: V250 = ISZERO S0
0x3e7: V251 = 0x42b
0x3ea: JUMPI 0x42b V250
---
Entry stack: [V11, 0x142, V81, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x142, V81]

================================

Block 0x3eb
[0x3eb:0x42a]
---
Predecessors: [0x3e5]
Successors: [0x42b]
---
0x3eb DUP1
0x3ec PUSH1 0x0
0x3ee DUP1
0x3ef PUSH2 0x100
0x3f2 EXP
0x3f3 DUP2
0x3f4 SLOAD
0x3f5 DUP2
0x3f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x40b MUL
0x40c NOT
0x40d AND
0x40e SWAP1
0x40f DUP4
0x410 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x425 AND
0x426 MUL
0x427 OR
0x428 SWAP1
0x429 SSTORE
0x42a POP
---
0x3ec: V252 = 0x0
0x3ef: V253 = 0x100
0x3f2: V254 = EXP 0x100 0x0
0x3f4: V255 = S[0x0]
0x3f6: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x40b: V257 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x40c: V258 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x40d: V259 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V255
0x410: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x425: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x426: V262 = MUL V261 0x1
0x427: V263 = OR V262 V259
0x429: S[0x0] = V263
---
Entry stack: [V11, 0x142, V81]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x142, V81]

================================

Block 0x42b
[0x42b:0x42d]
---
Predecessors: [0x3e5, 0x3eb]
Successors: [0x142]
---
0x42b JUMPDEST
0x42c POP
0x42d JUMP
---
0x42b: JUMPDEST 
0x42d: JUMP 0x142
---
Entry stack: [V11, 0x142, V81]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x42e
[0x42e:0x483]
---
Predecessors: [0x150]
Successors: [0x484, 0x49f]
---
0x42e JUMPDEST
0x42f CALLER
0x430 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x445 AND
0x446 PUSH1 0x0
0x448 DUP1
0x449 SWAP1
0x44a SLOAD
0x44b SWAP1
0x44c PUSH2 0x100
0x44f EXP
0x450 SWAP1
0x451 DIV
0x452 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x467 AND
0x468 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47d AND
0x47e EQ
0x47f ISZERO
0x480 PUSH2 0x49f
0x483 JUMPI
---
0x42e: JUMPDEST 
0x42f: V264 = CALLER
0x430: V265 = 0xffffffffffffffffffffffffffffffffffffffff
0x445: V266 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x446: V267 = 0x0
0x44a: V268 = S[0x0]
0x44c: V269 = 0x100
0x44f: V270 = EXP 0x100 0x0
0x451: V271 = DIV V268 0x1
0x452: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x467: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x468: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x47d: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x47e: V276 = EQ V275 V266
0x47f: V277 = ISZERO V276
0x480: V278 = 0x49f
0x483: JUMPI 0x49f V277
---
Entry stack: [V11, 0x159]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x159]

================================

Block 0x484
[0x484:0x49e]
---
Predecessors: [0x42e]
Successors: [0x49f]
---
0x484 PUSH1 0x1
0x486 PUSH1 0x0
0x488 PUSH1 0x14
0x48a PUSH2 0x100
0x48d EXP
0x48e DUP2
0x48f SLOAD
0x490 DUP2
0x491 PUSH1 0xff
0x493 MUL
0x494 NOT
0x495 AND
0x496 SWAP1
0x497 DUP4
0x498 ISZERO
0x499 ISZERO
0x49a MUL
0x49b OR
0x49c SWAP1
0x49d SSTORE
0x49e POP
---
0x484: V279 = 0x1
0x486: V280 = 0x0
0x488: V281 = 0x14
0x48a: V282 = 0x100
0x48d: V283 = EXP 0x100 0x14
0x48f: V284 = S[0x0]
0x491: V285 = 0xff
0x493: V286 = MUL 0xff 0x10000000000000000000000000000000000000000
0x494: V287 = NOT 0xff0000000000000000000000000000000000000000
0x495: V288 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V284
0x498: V289 = ISZERO 0x1
0x499: V290 = ISZERO 0x0
0x49a: V291 = MUL 0x1 0x10000000000000000000000000000000000000000
0x49b: V292 = OR 0x10000000000000000000000000000000000000000 V288
0x49d: S[0x0] = V292
---
Entry stack: [V11, 0x159]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x159]

================================

Block 0x49f
[0x49f:0x4a0]
---
Predecessors: [0x42e, 0x484]
Successors: [0x159]
---
0x49f JUMPDEST
0x4a0 JUMP
---
0x49f: JUMPDEST 
0x4a0: JUMP 0x159
---
Entry stack: [V11, 0x159]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4a1
[0x4a1:0x4e0]
---
Predecessors: []
Successors: []
---
0x4a1 STOP
0x4a2 LOG1
0x4a3 PUSH6 0x627a7a723058
0x4aa SHA3
0x4ab MISSING 0xea
0x4ac MISSING 0xfc
0x4ad MLOAD
0x4ae MUL
0x4af MISSING 0xed
0x4b0 MISSING 0x4e
0x4b1 MISSING 0xb1
0x4b2 PUSH18 0x5ed2e3c8fccffd52cc539887df7cc00ffe66
0x4c5 MISSING 0x5f
0x4c6 PUSH26 0xd84f15fe0029
---
0x4a1: STOP 
0x4a2: LOG S0 S1 S2
0x4a3: V293 = 0x627a7a723058
0x4aa: V294 = SHA3 0x627a7a723058 S3
0x4ab: MISSING 0xea
0x4ac: MISSING 0xfc
0x4ad: V295 = M[S0]
0x4ae: V296 = MUL V295 S1
0x4af: MISSING 0xed
0x4b0: MISSING 0x4e
0x4b1: MISSING 0xb1
0x4b2: V297 = 0x5ed2e3c8fccffd52cc539887df7cc00ffe66
0x4c5: MISSING 0x5f
0x4c6: V298 = 0xd84f15fe0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V294, V296, 0x5ed2e3c8fccffd52cc539887df7cc00ffe66, 0xd84f15fe0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x11610c25
Entry block: 0x82
Exit block: 0x8a
Body: 0x82, 0x8a

Function 1:
Public function signature: 0x4d68282f
Entry block: 0x8c
Exit block: 0x287
Body: 0x8c, 0x94, 0x98, 0xb7, 0x1eb, 0x241, 0x287, 0x290, 0x292

Function 2:
Public function signature: 0x5ec01e4d
Entry block: 0xb9
Exit block: 0xc1
Body: 0xb9, 0xc1, 0xc5, 0xce

Function 3:
Public function signature: 0xa69df4b5
Entry block: 0xea
Exit block: 0xff
Body: 0xea, 0xf2, 0xf6, 0xff, 0x2cb, 0x321, 0x33b

Function 4:
Public function signature: 0xf349e3e3
Entry block: 0x101
Exit block: 0x142
Body: 0x101, 0x109, 0x10d, 0x142, 0x33d, 0x394, 0x3e5, 0x3eb, 0x42b

Function 5:
Public function signature: 0xf83d08ba
Entry block: 0x144
Exit block: 0x159
Body: 0x144, 0x14c, 0x150, 0x159, 0x42e, 0x484, 0x49f

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x80
Body: 0x78, 0x80

Function 7:
Private function
Entry block: 0x295
Exit block: 0x2c5
Body: 0x295, 0x2c5

Function 8:
Private function
Entry block: 0x15b
Exit block: 0x1e9
Body: 0x15b, 0x167, 0x173, 0x17f, 0x18b, 0x192, 0x1a4, 0x1aa, 0x1e8, 0x1e9

