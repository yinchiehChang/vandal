Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xcc]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xcc
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xcc
0xc: JUMPI 0xcc V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xd8]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x6fdde03
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xd8
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x6fdde03
0x22: V15 = EQ V13 0x6fdde03
0x23: V16 = 0xd8
0x26: JUMPI 0xd8 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x162]
---
0x27 DUP1
0x28 PUSH4 0x1e2def3a
0x2d EQ
0x2e PUSH2 0x162
0x31 JUMPI
---
0x28: V17 = 0x1e2def3a
0x2d: V18 = EQ 0x1e2def3a V13
0x2e: V19 = 0x162
0x31: JUMPI 0x162 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x187]
---
0x32 DUP1
0x33 PUSH4 0x3763d4b4
0x38 EQ
0x39 PUSH2 0x187
0x3c JUMPI
---
0x33: V20 = 0x3763d4b4
0x38: V21 = EQ 0x3763d4b4 V13
0x39: V22 = 0x187
0x3c: JUMPI 0x187 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x19a]
---
0x3d DUP1
0x3e PUSH4 0x3c276d86
0x43 EQ
0x44 PUSH2 0x19a
0x47 JUMPI
---
0x3e: V23 = 0x3c276d86
0x43: V24 = EQ 0x3c276d86 V13
0x44: V25 = 0x19a
0x47: JUMPI 0x19a V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x1ad]
---
0x48 DUP1
0x49 PUSH4 0x41c0e1b5
0x4e EQ
0x4f PUSH2 0x1ad
0x52 JUMPI
---
0x49: V26 = 0x41c0e1b5
0x4e: V27 = EQ 0x41c0e1b5 V13
0x4f: V28 = 0x1ad
0x52: JUMPI 0x1ad V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x1c0]
---
0x53 DUP1
0x54 PUSH4 0x61241c28
0x59 EQ
0x5a PUSH2 0x1c0
0x5d JUMPI
---
0x54: V29 = 0x61241c28
0x59: V30 = EQ 0x61241c28 V13
0x5a: V31 = 0x1c0
0x5d: JUMPI 0x1c0 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x1d6]
---
0x5e DUP1
0x5f PUSH4 0x76cdb03b
0x64 EQ
0x65 PUSH2 0x1d6
0x68 JUMPI
---
0x5f: V32 = 0x76cdb03b
0x64: V33 = EQ 0x76cdb03b V13
0x65: V34 = 0x1d6
0x68: JUMPI 0x1d6 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x205]
---
0x69 DUP1
0x6a PUSH4 0x7d3d6522
0x6f EQ
0x70 PUSH2 0x205
0x73 JUMPI
---
0x6a: V35 = 0x7d3d6522
0x6f: V36 = EQ 0x7d3d6522 V13
0x70: V37 = 0x205
0x73: JUMPI 0x205 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x22c]
---
0x74 DUP1
0x75 PUSH4 0x8da5cb5b
0x7a EQ
0x7b PUSH2 0x22c
0x7e JUMPI
---
0x75: V38 = 0x8da5cb5b
0x7a: V39 = EQ 0x8da5cb5b V13
0x7b: V40 = 0x22c
0x7e: JUMPI 0x22c V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x23f]
---
0x7f DUP1
0x80 PUSH4 0xa6f9dae1
0x85 EQ
0x86 PUSH2 0x23f
0x89 JUMPI
---
0x80: V41 = 0xa6f9dae1
0x85: V42 = EQ 0xa6f9dae1 V13
0x86: V43 = 0x23f
0x89: JUMPI 0x23f V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x25e]
---
0x8a DUP1
0x8b PUSH4 0xc7c049fc
0x90 EQ
0x91 PUSH2 0x25e
0x94 JUMPI
---
0x8b: V44 = 0xc7c049fc
0x90: V45 = EQ 0xc7c049fc V13
0x91: V46 = 0x25e
0x94: JUMPI 0x25e V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x271]
---
0x95 DUP1
0x96 PUSH4 0xcbdd69b5
0x9b EQ
0x9c PUSH2 0x271
0x9f JUMPI
---
0x96: V47 = 0xcbdd69b5
0x9b: V48 = EQ 0xcbdd69b5 V13
0x9c: V49 = 0x271
0x9f: JUMPI 0x271 V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x284]
---
0xa0 DUP1
0xa1 PUSH4 0xe29eb836
0xa6 EQ
0xa7 PUSH2 0x284
0xaa JUMPI
---
0xa1: V50 = 0xe29eb836
0xa6: V51 = EQ 0xe29eb836 V13
0xa7: V52 = 0x284
0xaa: JUMPI 0x284 V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x297]
---
0xab DUP1
0xac PUSH4 0xf069629c
0xb1 EQ
0xb2 PUSH2 0x297
0xb5 JUMPI
---
0xac: V53 = 0xf069629c
0xb1: V54 = EQ 0xf069629c V13
0xb2: V55 = 0x297
0xb5: JUMPI 0x297 V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xc0]
---
Predecessors: [0xab]
Successors: [0xc1, 0x2aa]
---
0xb6 DUP1
0xb7 PUSH4 0xf6933c7d
0xbc EQ
0xbd PUSH2 0x2aa
0xc0 JUMPI
---
0xb7: V56 = 0xf6933c7d
0xbc: V57 = EQ 0xf6933c7d V13
0xbd: V58 = 0x2aa
0xc0: JUMPI 0x2aa V57
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc1
[0xc1:0xcb]
---
Predecessors: [0xb6]
Successors: [0xcc, 0x2bd]
---
0xc1 DUP1
0xc2 PUSH4 0xfd6b7ef8
0xc7 EQ
0xc8 PUSH2 0x2bd
0xcb JUMPI
---
0xc2: V59 = 0xfd6b7ef8
0xc7: V60 = EQ 0xfd6b7ef8 V13
0xc8: V61 = 0x2bd
0xcb: JUMPI 0x2bd V60
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xd5]
---
Predecessors: [0x0, 0xc1]
Successors: [0x2d0]
---
0xcc JUMPDEST
0xcd PUSH2 0xd6
0xd0 CALLER
0xd1 CALLVALUE
0xd2 PUSH2 0x2d0
0xd5 JUMP
---
0xcc: JUMPDEST 
0xcd: V62 = 0xd6
0xd0: V63 = CALLER
0xd1: V64 = CALLVALUE
0xd2: V65 = 0x2d0
0xd5: JUMP 0x2d0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd6, V63, V64]
Exit stack: [V13, 0xd6, V63, V64]

================================

Block 0xd6
[0xd6:0xd7]
---
Predecessors: [0x53f, 0x7ec, 0x863, 0x96b]
Successors: []
---
0xd6 JUMPDEST
0xd7 STOP
---
0xd6: JUMPDEST 
0xd7: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd8
[0xd8:0xde]
---
Predecessors: [0xd]
Successors: [0xdf, 0xe3]
---
0xd8 JUMPDEST
0xd9 CALLVALUE
0xda ISZERO
0xdb PUSH2 0xe3
0xde JUMPI
---
0xd8: JUMPDEST 
0xd9: V66 = CALLVALUE
0xda: V67 = ISZERO V66
0xdb: V68 = 0xe3
0xde: JUMPI 0xe3 V67
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xdf
[0xdf:0xe2]
---
Predecessors: [0xd8]
Successors: []
---
0xdf PUSH1 0x0
0xe1 DUP1
0xe2 REVERT
---
0xdf: V69 = 0x0
0xe2: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xe3
[0xe3:0xea]
---
Predecessors: [0xd8]
Successors: [0x56e]
---
0xe3 JUMPDEST
0xe4 PUSH2 0xeb
0xe7 PUSH2 0x56e
0xea JUMP
---
0xe3: JUMPDEST 
0xe4: V70 = 0xeb
0xe7: V71 = 0x56e
0xea: JUMP 0x56e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xeb]
Exit stack: [V13, 0xeb]

================================

Block 0xeb
[0xeb:0x10e]
---
Predecessors: [0x604]
Successors: [0x10f]
---
0xeb JUMPDEST
0xec PUSH1 0x40
0xee MLOAD
0xef PUSH1 0x20
0xf1 DUP1
0xf2 DUP3
0xf3 MSTORE
0xf4 DUP2
0xf5 SWAP1
0xf6 DUP2
0xf7 ADD
0xf8 DUP4
0xf9 DUP2
0xfa DUP2
0xfb MLOAD
0xfc DUP2
0xfd MSTORE
0xfe PUSH1 0x20
0x100 ADD
0x101 SWAP2
0x102 POP
0x103 DUP1
0x104 MLOAD
0x105 SWAP1
0x106 PUSH1 0x20
0x108 ADD
0x109 SWAP1
0x10a DUP1
0x10b DUP4
0x10c DUP4
0x10d PUSH1 0x0
---
0xeb: JUMPDEST 
0xec: V72 = 0x40
0xee: V73 = M[0x40]
0xef: V74 = 0x20
0xf3: M[V73] = 0x20
0xf7: V75 = ADD V73 0x20
0xfb: V76 = M[V524]
0xfd: M[V75] = V76
0xfe: V77 = 0x20
0x100: V78 = ADD 0x20 V75
0x104: V79 = M[V524]
0x106: V80 = 0x20
0x108: V81 = ADD 0x20 V524
0x10d: V82 = 0x0
---
Entry stack: [V13, 0xeb, V524]
Stack pops: 1
Stack additions: [S0, V73, V73, V78, V81, V79, V79, V78, V81, 0x0]
Exit stack: [V13, 0xeb, V524, V73, V73, V78, V81, V79, V79, V78, V81, 0x0]

================================

Block 0x10f
[0x10f:0x117]
---
Predecessors: [0xeb, 0x118]
Successors: [0x118, 0x127]
---
0x10f JUMPDEST
0x110 DUP4
0x111 DUP2
0x112 LT
0x113 ISZERO
0x114 PUSH2 0x127
0x117 JUMPI
---
0x10f: JUMPDEST 
0x112: V83 = LT S0 V79
0x113: V84 = ISZERO V83
0x114: V85 = 0x127
0x117: JUMPI 0x127 V84
---
Entry stack: [V13, 0xeb, V524, V73, V73, V78, V81, V79, V79, V78, V81, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0xeb, V524, V73, V73, V78, V81, V79, V79, V78, V81, S0]

================================

Block 0x118
[0x118:0x126]
---
Predecessors: [0x10f]
Successors: [0x10f]
---
0x118 DUP1
0x119 DUP3
0x11a ADD
0x11b MLOAD
0x11c DUP4
0x11d DUP3
0x11e ADD
0x11f MSTORE
0x120 PUSH1 0x20
0x122 ADD
0x123 PUSH2 0x10f
0x126 JUMP
---
0x11a: V86 = ADD V81 S0
0x11b: V87 = M[V86]
0x11e: V88 = ADD S0 V78
0x11f: M[V88] = V87
0x120: V89 = 0x20
0x122: V90 = ADD 0x20 S0
0x123: V91 = 0x10f
0x126: JUMP 0x10f
---
Entry stack: [V13, 0xeb, V524, V73, V73, V78, V81, V79, V79, V78, V81, S0]
Stack pops: 3
Stack additions: [S2, S1, V90]
Exit stack: [V13, 0xeb, V524, V73, V73, V78, V81, V79, V79, V78, V81, V90]

================================

Block 0x127
[0x127:0x13a]
---
Predecessors: [0x10f]
Successors: [0x13b, 0x154]
---
0x127 JUMPDEST
0x128 POP
0x129 POP
0x12a POP
0x12b POP
0x12c SWAP1
0x12d POP
0x12e SWAP1
0x12f DUP2
0x130 ADD
0x131 SWAP1
0x132 PUSH1 0x1f
0x134 AND
0x135 DUP1
0x136 ISZERO
0x137 PUSH2 0x154
0x13a JUMPI
---
0x127: JUMPDEST 
0x130: V92 = ADD V79 V78
0x132: V93 = 0x1f
0x134: V94 = AND 0x1f V79
0x136: V95 = ISZERO V94
0x137: V96 = 0x154
0x13a: JUMPI 0x154 V95
---
Entry stack: [V13, 0xeb, V524, V73, V73, V78, V81, V79, V79, V78, V81, S0]
Stack pops: 7
Stack additions: [V92, V94]
Exit stack: [V13, 0xeb, V524, V73, V73, V92, V94]

================================

Block 0x13b
[0x13b:0x153]
---
Predecessors: [0x127]
Successors: [0x154]
---
0x13b DUP1
0x13c DUP3
0x13d SUB
0x13e DUP1
0x13f MLOAD
0x140 PUSH1 0x1
0x142 DUP4
0x143 PUSH1 0x20
0x145 SUB
0x146 PUSH2 0x100
0x149 EXP
0x14a SUB
0x14b NOT
0x14c AND
0x14d DUP2
0x14e MSTORE
0x14f PUSH1 0x20
0x151 ADD
0x152 SWAP2
0x153 POP
---
0x13d: V97 = SUB V92 V94
0x13f: V98 = M[V97]
0x140: V99 = 0x1
0x143: V100 = 0x20
0x145: V101 = SUB 0x20 V94
0x146: V102 = 0x100
0x149: V103 = EXP 0x100 V101
0x14a: V104 = SUB V103 0x1
0x14b: V105 = NOT V104
0x14c: V106 = AND V105 V98
0x14e: M[V97] = V106
0x14f: V107 = 0x20
0x151: V108 = ADD 0x20 V97
---
Entry stack: [V13, 0xeb, V524, V73, V73, V92, V94]
Stack pops: 2
Stack additions: [V108, S0]
Exit stack: [V13, 0xeb, V524, V73, V73, V108, V94]

================================

Block 0x154
[0x154:0x161]
---
Predecessors: [0x127, 0x13b]
Successors: []
---
0x154 JUMPDEST
0x155 POP
0x156 SWAP3
0x157 POP
0x158 POP
0x159 POP
0x15a PUSH1 0x40
0x15c MLOAD
0x15d DUP1
0x15e SWAP2
0x15f SUB
0x160 SWAP1
0x161 RETURN
---
0x154: JUMPDEST 
0x15a: V109 = 0x40
0x15c: V110 = M[0x40]
0x15f: V111 = SUB S1 V110
0x161: RETURN V110 V111
---
Entry stack: [V13, 0xeb, V524, V73, V73, S1, V94]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0xeb]

================================

Block 0x162
[0x162:0x168]
---
Predecessors: [0x27]
Successors: [0x169, 0x16d]
---
0x162 JUMPDEST
0x163 CALLVALUE
0x164 ISZERO
0x165 PUSH2 0x16d
0x168 JUMPI
---
0x162: JUMPDEST 
0x163: V112 = CALLVALUE
0x164: V113 = ISZERO V112
0x165: V114 = 0x16d
0x168: JUMPI 0x16d V113
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x169
[0x169:0x16c]
---
Predecessors: [0x162]
Successors: []
---
0x169 PUSH1 0x0
0x16b DUP1
0x16c REVERT
---
0x169: V115 = 0x0
0x16c: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x16d
[0x16d:0x174]
---
Predecessors: [0x162]
Successors: [0x60c]
---
0x16d JUMPDEST
0x16e PUSH2 0x175
0x171 PUSH2 0x60c
0x174 JUMP
---
0x16d: JUMPDEST 
0x16e: V116 = 0x175
0x171: V117 = 0x60c
0x174: JUMP 0x60c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x175]
Exit stack: [V13, 0x175]

================================

Block 0x175
[0x175:0x186]
---
Predecessors: [0x60c, 0x612, 0x61a, 0x8ce, 0x8d4, 0x8da, 0x8e0]
Successors: []
---
0x175 JUMPDEST
0x176 PUSH1 0x40
0x178 MLOAD
0x179 SWAP1
0x17a DUP2
0x17b MSTORE
0x17c PUSH1 0x20
0x17e ADD
0x17f PUSH1 0x40
0x181 MLOAD
0x182 DUP1
0x183 SWAP2
0x184 SUB
0x185 SWAP1
0x186 RETURN
---
0x175: JUMPDEST 
0x176: V118 = 0x40
0x178: V119 = M[0x40]
0x17b: M[V119] = S0
0x17c: V120 = 0x20
0x17e: V121 = ADD 0x20 V119
0x17f: V122 = 0x40
0x181: V123 = M[0x40]
0x184: V124 = SUB V121 V123
0x186: RETURN V123 V124
---
Entry stack: [V13, 0x175, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x175]

================================

Block 0x187
[0x187:0x18d]
---
Predecessors: [0x32]
Successors: [0x18e, 0x192]
---
0x187 JUMPDEST
0x188 CALLVALUE
0x189 ISZERO
0x18a PUSH2 0x192
0x18d JUMPI
---
0x187: JUMPDEST 
0x188: V125 = CALLVALUE
0x189: V126 = ISZERO V125
0x18a: V127 = 0x192
0x18d: JUMPI 0x192 V126
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x18e
[0x18e:0x191]
---
Predecessors: [0x187]
Successors: []
---
0x18e PUSH1 0x0
0x190 DUP1
0x191 REVERT
---
0x18e: V128 = 0x0
0x191: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x192
[0x192:0x199]
---
Predecessors: [0x187]
Successors: [0x612]
---
0x192 JUMPDEST
0x193 PUSH2 0x175
0x196 PUSH2 0x612
0x199 JUMP
---
0x192: JUMPDEST 
0x193: V129 = 0x175
0x196: V130 = 0x612
0x199: JUMP 0x612
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x175]
Exit stack: [V13, 0x175]

================================

Block 0x19a
[0x19a:0x1a0]
---
Predecessors: [0x3d]
Successors: [0x1a1, 0x1a5]
---
0x19a JUMPDEST
0x19b CALLVALUE
0x19c ISZERO
0x19d PUSH2 0x1a5
0x1a0 JUMPI
---
0x19a: JUMPDEST 
0x19b: V131 = CALLVALUE
0x19c: V132 = ISZERO V131
0x19d: V133 = 0x1a5
0x1a0: JUMPI 0x1a5 V132
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a1
[0x1a1:0x1a4]
---
Predecessors: [0x19a]
Successors: []
---
0x1a1 PUSH1 0x0
0x1a3 DUP1
0x1a4 REVERT
---
0x1a1: V134 = 0x0
0x1a4: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a5
[0x1a5:0x1ac]
---
Predecessors: [0x19a]
Successors: [0x61a]
---
0x1a5 JUMPDEST
0x1a6 PUSH2 0x175
0x1a9 PUSH2 0x61a
0x1ac JUMP
---
0x1a5: JUMPDEST 
0x1a6: V135 = 0x175
0x1a9: V136 = 0x61a
0x1ac: JUMP 0x61a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x175]
Exit stack: [V13, 0x175]

================================

Block 0x1ad
[0x1ad:0x1b3]
---
Predecessors: [0x48]
Successors: [0x1b4, 0x1b8]
---
0x1ad JUMPDEST
0x1ae CALLVALUE
0x1af ISZERO
0x1b0 PUSH2 0x1b8
0x1b3 JUMPI
---
0x1ad: JUMPDEST 
0x1ae: V137 = CALLVALUE
0x1af: V138 = ISZERO V137
0x1b0: V139 = 0x1b8
0x1b3: JUMPI 0x1b8 V138
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1b4
[0x1b4:0x1b7]
---
Predecessors: [0x1ad]
Successors: []
---
0x1b4 PUSH1 0x0
0x1b6 DUP1
0x1b7 REVERT
---
0x1b4: V140 = 0x0
0x1b7: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1b8
[0x1b8:0x1bf]
---
Predecessors: [0x1ad]
Successors: [0x620]
---
0x1b8 JUMPDEST
0x1b9 PUSH2 0xd6
0x1bc PUSH2 0x620
0x1bf JUMP
---
0x1b8: JUMPDEST 
0x1b9: V141 = 0xd6
0x1bc: V142 = 0x620
0x1bf: JUMP 0x620
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd6]
Exit stack: [V13, 0xd6]

================================

Block 0x1c0
[0x1c0:0x1c6]
---
Predecessors: [0x53]
Successors: [0x1c7, 0x1cb]
---
0x1c0 JUMPDEST
0x1c1 CALLVALUE
0x1c2 ISZERO
0x1c3 PUSH2 0x1cb
0x1c6 JUMPI
---
0x1c0: JUMPDEST 
0x1c1: V143 = CALLVALUE
0x1c2: V144 = ISZERO V143
0x1c3: V145 = 0x1cb
0x1c6: JUMPI 0x1cb V144
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c7
[0x1c7:0x1ca]
---
Predecessors: [0x1c0]
Successors: []
---
0x1c7 PUSH1 0x0
0x1c9 DUP1
0x1ca REVERT
---
0x1c7: V146 = 0x0
0x1ca: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1cb
[0x1cb:0x1d5]
---
Predecessors: [0x1c0]
Successors: [0x7d1]
---
0x1cb JUMPDEST
0x1cc PUSH2 0xd6
0x1cf PUSH1 0x4
0x1d1 CALLDATALOAD
0x1d2 PUSH2 0x7d1
0x1d5 JUMP
---
0x1cb: JUMPDEST 
0x1cc: V147 = 0xd6
0x1cf: V148 = 0x4
0x1d1: V149 = CALLDATALOAD 0x4
0x1d2: V150 = 0x7d1
0x1d5: JUMP 0x7d1
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd6, V149]
Exit stack: [V13, 0xd6, V149]

================================

Block 0x1d6
[0x1d6:0x1dc]
---
Predecessors: [0x5e]
Successors: [0x1dd, 0x1e1]
---
0x1d6 JUMPDEST
0x1d7 CALLVALUE
0x1d8 ISZERO
0x1d9 PUSH2 0x1e1
0x1dc JUMPI
---
0x1d6: JUMPDEST 
0x1d7: V151 = CALLVALUE
0x1d8: V152 = ISZERO V151
0x1d9: V153 = 0x1e1
0x1dc: JUMPI 0x1e1 V152
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1dd
[0x1dd:0x1e0]
---
Predecessors: [0x1d6]
Successors: []
---
0x1dd PUSH1 0x0
0x1df DUP1
0x1e0 REVERT
---
0x1dd: V154 = 0x0
0x1e0: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1e1
[0x1e1:0x1e8]
---
Predecessors: [0x1d6]
Successors: [0x7f1]
---
0x1e1 JUMPDEST
0x1e2 PUSH2 0x1e9
0x1e5 PUSH2 0x7f1
0x1e8 JUMP
---
0x1e1: JUMPDEST 
0x1e2: V155 = 0x1e9
0x1e5: V156 = 0x7f1
0x1e8: JUMP 0x7f1
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1e9]
Exit stack: [V13, 0x1e9]

================================

Block 0x1e9
[0x1e9:0x204]
---
Predecessors: [0x7f1, 0x809]
Successors: []
---
0x1e9 JUMPDEST
0x1ea PUSH1 0x40
0x1ec MLOAD
0x1ed PUSH1 0x1
0x1ef PUSH1 0xa0
0x1f1 PUSH1 0x2
0x1f3 EXP
0x1f4 SUB
0x1f5 SWAP1
0x1f6 SWAP2
0x1f7 AND
0x1f8 DUP2
0x1f9 MSTORE
0x1fa PUSH1 0x20
0x1fc ADD
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 DUP1
0x201 SWAP2
0x202 SUB
0x203 SWAP1
0x204 RETURN
---
0x1e9: JUMPDEST 
0x1ea: V157 = 0x40
0x1ec: V158 = M[0x40]
0x1ed: V159 = 0x1
0x1ef: V160 = 0xa0
0x1f1: V161 = 0x2
0x1f3: V162 = EXP 0x2 0xa0
0x1f4: V163 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f7: V164 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1f9: M[V158] = V164
0x1fa: V165 = 0x20
0x1fc: V166 = ADD 0x20 V158
0x1fd: V167 = 0x40
0x1ff: V168 = M[0x40]
0x202: V169 = SUB V166 V168
0x204: RETURN V168 V169
---
Entry stack: [V13, 0x1e9, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1e9]

================================

Block 0x205
[0x205:0x20b]
---
Predecessors: [0x69]
Successors: [0x20c, 0x210]
---
0x205 JUMPDEST
0x206 CALLVALUE
0x207 ISZERO
0x208 PUSH2 0x210
0x20b JUMPI
---
0x205: JUMPDEST 
0x206: V170 = CALLVALUE
0x207: V171 = ISZERO V170
0x208: V172 = 0x210
0x20b: JUMPI 0x210 V171
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x20c
[0x20c:0x20f]
---
Predecessors: [0x205]
Successors: []
---
0x20c PUSH1 0x0
0x20e DUP1
0x20f REVERT
---
0x20c: V173 = 0x0
0x20f: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x210
[0x210:0x217]
---
Predecessors: [0x205]
Successors: [0x800]
---
0x210 JUMPDEST
0x211 PUSH2 0x218
0x214 PUSH2 0x800
0x217 JUMP
---
0x210: JUMPDEST 
0x211: V174 = 0x218
0x214: V175 = 0x800
0x217: JUMP 0x800
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x218]
Exit stack: [V13, 0x218]

================================

Block 0x218
[0x218:0x22b]
---
Predecessors: [0x800, 0x910]
Successors: []
---
0x218 JUMPDEST
0x219 PUSH1 0x40
0x21b MLOAD
0x21c SWAP1
0x21d ISZERO
0x21e ISZERO
0x21f DUP2
0x220 MSTORE
0x221 PUSH1 0x20
0x223 ADD
0x224 PUSH1 0x40
0x226 MLOAD
0x227 DUP1
0x228 SWAP2
0x229 SUB
0x22a SWAP1
0x22b RETURN
---
0x218: JUMPDEST 
0x219: V176 = 0x40
0x21b: V177 = M[0x40]
0x21d: V178 = ISZERO S0
0x21e: V179 = ISZERO V178
0x220: M[V177] = V179
0x221: V180 = 0x20
0x223: V181 = ADD 0x20 V177
0x224: V182 = 0x40
0x226: V183 = M[0x40]
0x229: V184 = SUB V181 V183
0x22b: RETURN V183 V184
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S3, S2, S1]

================================

Block 0x22c
[0x22c:0x232]
---
Predecessors: [0x74]
Successors: [0x233, 0x237]
---
0x22c JUMPDEST
0x22d CALLVALUE
0x22e ISZERO
0x22f PUSH2 0x237
0x232 JUMPI
---
0x22c: JUMPDEST 
0x22d: V185 = CALLVALUE
0x22e: V186 = ISZERO V185
0x22f: V187 = 0x237
0x232: JUMPI 0x237 V186
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x233
[0x233:0x236]
---
Predecessors: [0x22c]
Successors: []
---
0x233 PUSH1 0x0
0x235 DUP1
0x236 REVERT
---
0x233: V188 = 0x0
0x236: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x237
[0x237:0x23e]
---
Predecessors: [0x22c]
Successors: [0x809]
---
0x237 JUMPDEST
0x238 PUSH2 0x1e9
0x23b PUSH2 0x809
0x23e JUMP
---
0x237: JUMPDEST 
0x238: V189 = 0x1e9
0x23b: V190 = 0x809
0x23e: JUMP 0x809
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1e9]
Exit stack: [V13, 0x1e9]

================================

Block 0x23f
[0x23f:0x245]
---
Predecessors: [0x7f]
Successors: [0x246, 0x24a]
---
0x23f JUMPDEST
0x240 CALLVALUE
0x241 ISZERO
0x242 PUSH2 0x24a
0x245 JUMPI
---
0x23f: JUMPDEST 
0x240: V191 = CALLVALUE
0x241: V192 = ISZERO V191
0x242: V193 = 0x24a
0x245: JUMPI 0x24a V192
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x246
[0x246:0x249]
---
Predecessors: [0x23f]
Successors: []
---
0x246 PUSH1 0x0
0x248 DUP1
0x249 REVERT
---
0x246: V194 = 0x0
0x249: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x24a
[0x24a:0x25d]
---
Predecessors: [0x23f]
Successors: [0x818]
---
0x24a JUMPDEST
0x24b PUSH2 0xd6
0x24e PUSH1 0x1
0x250 PUSH1 0xa0
0x252 PUSH1 0x2
0x254 EXP
0x255 SUB
0x256 PUSH1 0x4
0x258 CALLDATALOAD
0x259 AND
0x25a PUSH2 0x818
0x25d JUMP
---
0x24a: JUMPDEST 
0x24b: V195 = 0xd6
0x24e: V196 = 0x1
0x250: V197 = 0xa0
0x252: V198 = 0x2
0x254: V199 = EXP 0x2 0xa0
0x255: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x256: V201 = 0x4
0x258: V202 = CALLDATALOAD 0x4
0x259: V203 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x25a: V204 = 0x818
0x25d: JUMP 0x818
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd6, V203]
Exit stack: [V13, 0xd6, V203]

================================

Block 0x25e
[0x25e:0x264]
---
Predecessors: [0x8a]
Successors: [0x265, 0x269]
---
0x25e JUMPDEST
0x25f CALLVALUE
0x260 ISZERO
0x261 PUSH2 0x269
0x264 JUMPI
---
0x25e: JUMPDEST 
0x25f: V205 = CALLVALUE
0x260: V206 = ISZERO V205
0x261: V207 = 0x269
0x264: JUMPI 0x269 V206
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x265
[0x265:0x268]
---
Predecessors: [0x25e]
Successors: []
---
0x265 PUSH1 0x0
0x267 DUP1
0x268 REVERT
---
0x265: V208 = 0x0
0x268: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x269
[0x269:0x270]
---
Predecessors: [0x25e]
Successors: [0x8ce]
---
0x269 JUMPDEST
0x26a PUSH2 0x175
0x26d PUSH2 0x8ce
0x270 JUMP
---
0x269: JUMPDEST 
0x26a: V209 = 0x175
0x26d: V210 = 0x8ce
0x270: JUMP 0x8ce
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x175]
Exit stack: [V13, 0x175]

================================

Block 0x271
[0x271:0x277]
---
Predecessors: [0x95]
Successors: [0x278, 0x27c]
---
0x271 JUMPDEST
0x272 CALLVALUE
0x273 ISZERO
0x274 PUSH2 0x27c
0x277 JUMPI
---
0x271: JUMPDEST 
0x272: V211 = CALLVALUE
0x273: V212 = ISZERO V211
0x274: V213 = 0x27c
0x277: JUMPI 0x27c V212
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x278
[0x278:0x27b]
---
Predecessors: [0x271]
Successors: []
---
0x278 PUSH1 0x0
0x27a DUP1
0x27b REVERT
---
0x278: V214 = 0x0
0x27b: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x27c
[0x27c:0x283]
---
Predecessors: [0x271]
Successors: [0x8d4]
---
0x27c JUMPDEST
0x27d PUSH2 0x175
0x280 PUSH2 0x8d4
0x283 JUMP
---
0x27c: JUMPDEST 
0x27d: V215 = 0x175
0x280: V216 = 0x8d4
0x283: JUMP 0x8d4
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x175]
Exit stack: [V13, 0x175]

================================

Block 0x284
[0x284:0x28a]
---
Predecessors: [0xa0]
Successors: [0x28b, 0x28f]
---
0x284 JUMPDEST
0x285 CALLVALUE
0x286 ISZERO
0x287 PUSH2 0x28f
0x28a JUMPI
---
0x284: JUMPDEST 
0x285: V217 = CALLVALUE
0x286: V218 = ISZERO V217
0x287: V219 = 0x28f
0x28a: JUMPI 0x28f V218
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x28b
[0x28b:0x28e]
---
Predecessors: [0x284]
Successors: []
---
0x28b PUSH1 0x0
0x28d DUP1
0x28e REVERT
---
0x28b: V220 = 0x0
0x28e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x28f
[0x28f:0x296]
---
Predecessors: [0x284]
Successors: [0x8da]
---
0x28f JUMPDEST
0x290 PUSH2 0x175
0x293 PUSH2 0x8da
0x296 JUMP
---
0x28f: JUMPDEST 
0x290: V221 = 0x175
0x293: V222 = 0x8da
0x296: JUMP 0x8da
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x175]
Exit stack: [V13, 0x175]

================================

Block 0x297
[0x297:0x29d]
---
Predecessors: [0xab]
Successors: [0x29e, 0x2a2]
---
0x297 JUMPDEST
0x298 CALLVALUE
0x299 ISZERO
0x29a PUSH2 0x2a2
0x29d JUMPI
---
0x297: JUMPDEST 
0x298: V223 = CALLVALUE
0x299: V224 = ISZERO V223
0x29a: V225 = 0x2a2
0x29d: JUMPI 0x2a2 V224
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x29e
[0x29e:0x2a1]
---
Predecessors: [0x297]
Successors: []
---
0x29e PUSH1 0x0
0x2a0 DUP1
0x2a1 REVERT
---
0x29e: V226 = 0x0
0x2a1: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2a2
[0x2a2:0x2a9]
---
Predecessors: [0x297]
Successors: [0x8e0]
---
0x2a2 JUMPDEST
0x2a3 PUSH2 0x175
0x2a6 PUSH2 0x8e0
0x2a9 JUMP
---
0x2a2: JUMPDEST 
0x2a3: V227 = 0x175
0x2a6: V228 = 0x8e0
0x2a9: JUMP 0x8e0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x175]
Exit stack: [V13, 0x175]

================================

Block 0x2aa
[0x2aa:0x2b0]
---
Predecessors: [0xb6]
Successors: [0x2b1, 0x2b5]
---
0x2aa JUMPDEST
0x2ab CALLVALUE
0x2ac ISZERO
0x2ad PUSH2 0x2b5
0x2b0 JUMPI
---
0x2aa: JUMPDEST 
0x2ab: V229 = CALLVALUE
0x2ac: V230 = ISZERO V229
0x2ad: V231 = 0x2b5
0x2b0: JUMPI 0x2b5 V230
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2b1
[0x2b1:0x2b4]
---
Predecessors: [0x2aa]
Successors: []
---
0x2b1 PUSH1 0x0
0x2b3 DUP1
0x2b4 REVERT
---
0x2b1: V232 = 0x0
0x2b4: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2b5
[0x2b5:0x2bc]
---
Predecessors: [0x2aa]
Successors: [0x8e8]
---
0x2b5 JUMPDEST
0x2b6 PUSH2 0x218
0x2b9 PUSH2 0x8e8
0x2bc JUMP
---
0x2b5: JUMPDEST 
0x2b6: V233 = 0x218
0x2b9: V234 = 0x8e8
0x2bc: JUMP 0x8e8
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x218]
Exit stack: [V13, 0x218]

================================

Block 0x2bd
[0x2bd:0x2c3]
---
Predecessors: [0xc1]
Successors: [0x2c4, 0x2c8]
---
0x2bd JUMPDEST
0x2be CALLVALUE
0x2bf ISZERO
0x2c0 PUSH2 0x2c8
0x2c3 JUMPI
---
0x2bd: JUMPDEST 
0x2be: V235 = CALLVALUE
0x2bf: V236 = ISZERO V235
0x2c0: V237 = 0x2c8
0x2c3: JUMPI 0x2c8 V236
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2c4
[0x2c4:0x2c7]
---
Predecessors: [0x2bd]
Successors: []
---
0x2c4 PUSH1 0x0
0x2c6 DUP1
0x2c7 REVERT
---
0x2c4: V238 = 0x0
0x2c7: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x2c8
[0x2c8:0x2cf]
---
Predecessors: [0x2bd]
Successors: [0x915]
---
0x2c8 JUMPDEST
0x2c9 PUSH2 0xd6
0x2cc PUSH2 0x915
0x2cf JUMP
---
0x2c8: JUMPDEST 
0x2c9: V239 = 0xd6
0x2cc: V240 = 0x915
0x2cf: JUMP 0x915
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd6]
Exit stack: [V13, 0xd6]

================================

Block 0x2d0
[0x2d0:0x2dd]
---
Predecessors: [0xcc]
Successors: [0x8e8]
---
0x2d0 JUMPDEST
0x2d1 PUSH1 0x0
0x2d3 DUP1
0x2d4 PUSH1 0x0
0x2d6 DUP1
0x2d7 PUSH2 0x2de
0x2da PUSH2 0x8e8
0x2dd JUMP
---
0x2d0: JUMPDEST 
0x2d1: V241 = 0x0
0x2d4: V242 = 0x0
0x2d7: V243 = 0x2de
0x2da: V244 = 0x8e8
0x2dd: JUMP 0x8e8
---
Entry stack: [V13, 0xd6, V63, V64]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x2de]
Exit stack: [V13, 0xd6, V63, V64, 0x0, 0x0, 0x0, 0x0, 0x2de]

================================

Block 0x2de
[0x2de:0x2e4]
---
Predecessors: [0x910]
Successors: [0x2e5, 0x2e9]
---
0x2de JUMPDEST
0x2df ISZERO
0x2e0 ISZERO
0x2e1 PUSH2 0x2e9
0x2e4 JUMPI
---
0x2de: JUMPDEST 
0x2df: V245 = ISZERO S0
0x2e0: V246 = ISZERO V245
0x2e1: V247 = 0x2e9
0x2e4: JUMPI 0x2e9 V246
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S3, {0x0, 0xd6}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S3, {0x0, 0xd6}, S1]

================================

Block 0x2e5
[0x2e5:0x2e8]
---
Predecessors: [0x2de]
Successors: []
---
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 REVERT
---
0x2e5: V248 = 0x0
0x2e8: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]

================================

Block 0x2e9
[0x2e9:0x2f1]
---
Predecessors: [0x2de]
Successors: [0x2f2, 0x2f3]
---
0x2e9 JUMPDEST
0x2ea PUSH1 0x0
0x2ec CALLVALUE
0x2ed GT
0x2ee PUSH2 0x2f3
0x2f1 JUMPI
---
0x2e9: JUMPDEST 
0x2ea: V249 = 0x0
0x2ec: V250 = CALLVALUE
0x2ed: V251 = GT V250 0x0
0x2ee: V252 = 0x2f3
0x2f1: JUMPI 0x2f3 V251
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]

================================

Block 0x2f2
[0x2f2:0x2f2]
---
Predecessors: [0x2e9]
Successors: []
---
0x2f2 INVALID
---
0x2f2: INVALID 
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]

================================

Block 0x2f3
[0x2f3:0x396]
---
Predecessors: [0x2e9]
Successors: [0x397, 0x39b]
---
0x2f3 JUMPDEST
0x2f4 DUP5
0x2f5 ADDRESS
0x2f6 PUSH1 0x1
0x2f8 PUSH1 0xa0
0x2fa PUSH1 0x2
0x2fc EXP
0x2fd SUB
0x2fe AND
0x2ff DUP8
0x300 PUSH1 0x1
0x302 PUSH1 0xa0
0x304 PUSH1 0x2
0x306 EXP
0x307 SUB
0x308 AND
0x309 PUSH1 0x0
0x30b DUP1
0x30c MLOAD
0x30d PUSH1 0x20
0x30f PUSH2 0x9a0
0x312 DUP4
0x313 CODECOPY
0x314 DUP2
0x315 MLOAD
0x316 SWAP2
0x317 MSTORE
0x318 PUSH1 0x40
0x31a MLOAD
0x31b PUSH1 0x40
0x31d MLOAD
0x31e DUP1
0x31f SWAP2
0x320 SUB
0x321 SWAP1
0x322 LOG4
0x323 PUSH1 0x15
0x325 SLOAD
0x326 PUSH8 0xde0b6b3a7640000
0x32f SWAP1
0x330 DUP7
0x331 MUL
0x332 PUSH1 0xf
0x334 SLOAD
0x335 PUSH1 0xc
0x337 SLOAD
0x338 PUSH1 0xe
0x33a SLOAD
0x33b SWAP4
0x33c SWAP1
0x33d SWAP3
0x33e DIV
0x33f SWAP7
0x340 POP
0x341 SWAP2
0x342 PUSH1 0x1
0x344 PUSH1 0xa0
0x346 PUSH1 0x2
0x348 EXP
0x349 SUB
0x34a SWAP2
0x34b DUP3
0x34c AND
0x34d SWAP2
0x34e PUSH4 0x70a08231
0x353 SWAP2
0x354 AND
0x355 PUSH1 0x0
0x357 PUSH1 0x40
0x359 MLOAD
0x35a PUSH1 0x20
0x35c ADD
0x35d MSTORE
0x35e PUSH1 0x40
0x360 MLOAD
0x361 PUSH1 0xe0
0x363 PUSH1 0x2
0x365 EXP
0x366 PUSH4 0xffffffff
0x36b DUP5
0x36c AND
0x36d MUL
0x36e DUP2
0x36f MSTORE
0x370 PUSH1 0x1
0x372 PUSH1 0xa0
0x374 PUSH1 0x2
0x376 EXP
0x377 SUB
0x378 SWAP1
0x379 SWAP2
0x37a AND
0x37b PUSH1 0x4
0x37d DUP3
0x37e ADD
0x37f MSTORE
0x380 PUSH1 0x24
0x382 ADD
0x383 PUSH1 0x20
0x385 PUSH1 0x40
0x387 MLOAD
0x388 DUP1
0x389 DUP4
0x38a SUB
0x38b DUP2
0x38c PUSH1 0x0
0x38e DUP8
0x38f DUP1
0x390 EXTCODESIZE
0x391 ISZERO
0x392 ISZERO
0x393 PUSH2 0x39b
0x396 JUMPI
---
0x2f3: JUMPDEST 
0x2f5: V253 = ADDRESS
0x2f6: V254 = 0x1
0x2f8: V255 = 0xa0
0x2fa: V256 = 0x2
0x2fc: V257 = EXP 0x2 0xa0
0x2fd: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fe: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x300: V260 = 0x1
0x302: V261 = 0xa0
0x304: V262 = 0x2
0x306: V263 = EXP 0x2 0xa0
0x307: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x308: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x309: V266 = 0x0
0x30c: V267 = M[0x0]
0x30d: V268 = 0x20
0x30f: V269 = 0x9a0
0x313: CODECOPY 0x0 0x9a0 0x20
0x315: V270 = M[0x0]
0x317: M[0x0] = V267
0x318: V271 = 0x40
0x31a: V272 = M[0x40]
0x31b: V273 = 0x40
0x31d: V274 = M[0x40]
0x320: V275 = SUB V272 V274
0x322: LOG V274 V275 V270 V265 V259 V64
0x323: V276 = 0x15
0x325: V277 = S[0x15]
0x326: V278 = 0xde0b6b3a7640000
0x331: V279 = MUL V64 V277
0x332: V280 = 0xf
0x334: V281 = S[0xf]
0x335: V282 = 0xc
0x337: V283 = S[0xc]
0x338: V284 = 0xe
0x33a: V285 = S[0xe]
0x33e: V286 = DIV V279 0xde0b6b3a7640000
0x342: V287 = 0x1
0x344: V288 = 0xa0
0x346: V289 = 0x2
0x348: V290 = EXP 0x2 0xa0
0x349: V291 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34c: V292 = AND 0xffffffffffffffffffffffffffffffffffffffff V283
0x34e: V293 = 0x70a08231
0x354: V294 = AND V285 0xffffffffffffffffffffffffffffffffffffffff
0x355: V295 = 0x0
0x357: V296 = 0x40
0x359: V297 = M[0x40]
0x35a: V298 = 0x20
0x35c: V299 = ADD 0x20 V297
0x35d: M[V299] = 0x0
0x35e: V300 = 0x40
0x360: V301 = M[0x40]
0x361: V302 = 0xe0
0x363: V303 = 0x2
0x365: V304 = EXP 0x2 0xe0
0x366: V305 = 0xffffffff
0x36c: V306 = AND 0x70a08231 0xffffffff
0x36d: V307 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x36f: M[V301] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x370: V308 = 0x1
0x372: V309 = 0xa0
0x374: V310 = 0x2
0x376: V311 = EXP 0x2 0xa0
0x377: V312 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37a: V313 = AND V294 0xffffffffffffffffffffffffffffffffffffffff
0x37b: V314 = 0x4
0x37e: V315 = ADD V301 0x4
0x37f: M[V315] = V313
0x380: V316 = 0x24
0x382: V317 = ADD 0x24 V301
0x383: V318 = 0x20
0x385: V319 = 0x40
0x387: V320 = M[0x40]
0x38a: V321 = SUB V317 V320
0x38c: V322 = 0x0
0x390: V323 = EXTCODESIZE V292
0x391: V324 = ISZERO V323
0x392: V325 = ISZERO V324
0x393: V326 = 0x39b
0x396: JUMPI 0x39b V325
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]
Stack pops: 6
Stack additions: [S5, S4, V286, S2, S1, S0, V281, V292, 0x70a08231, V317, 0x20, V320, V321, V320, 0x0, V292]
Exit stack: [V13, 0xd6, V63, V64, V286, S2, {0x0, 0xd6}, S0, V281, V292, 0x70a08231, V317, 0x20, V320, V321, V320, 0x0, V292]

================================

Block 0x397
[0x397:0x39a]
---
Predecessors: [0x2f3]
Successors: []
---
0x397 PUSH1 0x0
0x399 DUP1
0x39a REVERT
---
0x397: V327 = 0x0
0x39a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, V63, V64, V286, S12, {0x0, 0xd6}, S10, V281, V292, 0x70a08231, V317, 0x20, V320, V321, V320, 0x0, V292]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, V286, S12, {0x0, 0xd6}, S10, V281, V292, 0x70a08231, V317, 0x20, V320, V321, V320, 0x0, V292]

================================

Block 0x39b
[0x39b:0x3a7]
---
Predecessors: [0x2f3]
Successors: [0x3a8, 0x3ac]
---
0x39b JUMPDEST
0x39c PUSH2 0x2c6
0x39f GAS
0x3a0 SUB
0x3a1 CALL
0x3a2 ISZERO
0x3a3 ISZERO
0x3a4 PUSH2 0x3ac
0x3a7 JUMPI
---
0x39b: JUMPDEST 
0x39c: V328 = 0x2c6
0x39f: V329 = GAS
0x3a0: V330 = SUB V329 0x2c6
0x3a1: V331 = CALL V330 V292 0x0 V320 V321 V320 0x20
0x3a2: V332 = ISZERO V331
0x3a3: V333 = ISZERO V332
0x3a4: V334 = 0x3ac
0x3a7: JUMPI 0x3ac V333
---
Entry stack: [V13, 0xd6, V63, V64, V286, S12, {0x0, 0xd6}, S10, V281, V292, 0x70a08231, V317, 0x20, V320, V321, V320, 0x0, V292]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, V286, S12, {0x0, 0xd6}, S10, V281, V292, 0x70a08231, V317]

================================

Block 0x3a8
[0x3a8:0x3ab]
---
Predecessors: [0x39b]
Successors: []
---
0x3a8 PUSH1 0x0
0x3aa DUP1
0x3ab REVERT
---
0x3a8: V335 = 0x0
0x3ab: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, V63, V64, V286, S6, {0x0, 0xd6}, S4, V281, V292, 0x70a08231, V317]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, V286, S6, {0x0, 0xd6}, S4, V281, V292, 0x70a08231, V317]

================================

Block 0x3ac
[0x3ac:0x3bd]
---
Predecessors: [0x39b]
Successors: [0x3be, 0x3bf]
---
0x3ac JUMPDEST
0x3ad POP
0x3ae POP
0x3af POP
0x3b0 PUSH1 0x40
0x3b2 MLOAD
0x3b3 DUP1
0x3b4 MLOAD
0x3b5 SWAP1
0x3b6 POP
0x3b7 DUP2
0x3b8 ISZERO
0x3b9 ISZERO
0x3ba PUSH2 0x3bf
0x3bd JUMPI
---
0x3ac: JUMPDEST 
0x3b0: V336 = 0x40
0x3b2: V337 = M[0x40]
0x3b4: V338 = M[V337]
0x3b8: V339 = ISZERO V281
0x3b9: V340 = ISZERO V339
0x3ba: V341 = 0x3bf
0x3bd: JUMPI 0x3bf V340
---
Entry stack: [V13, 0xd6, V63, V64, V286, S6, {0x0, 0xd6}, S4, V281, V292, 0x70a08231, V317]
Stack pops: 4
Stack additions: [S3, V338]
Exit stack: [V13, 0xd6, V63, V64, V286, S6, {0x0, 0xd6}, S4, V281, V338]

================================

Block 0x3be
[0x3be:0x3be]
---
Predecessors: [0x3ac]
Successors: []
---
0x3be INVALID
---
0x3be: INVALID 
---
Entry stack: [V13, 0xd6, V63, V64, V286, S4, {0x0, 0xd6}, S2, V281, V338]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, V286, S4, {0x0, 0xd6}, S2, V281, V338]

================================

Block 0x3bf
[0x3bf:0x3c9]
---
Predecessors: [0x3ac]
Successors: [0x3ca, 0x3dc]
---
0x3bf JUMPDEST
0x3c0 DIV
0x3c1 SWAP3
0x3c2 POP
0x3c3 DUP4
0x3c4 DUP4
0x3c5 GT
0x3c6 PUSH2 0x3dc
0x3c9 JUMPI
---
0x3bf: JUMPDEST 
0x3c0: V342 = DIV V338 V281
0x3c5: V343 = GT V342 V286
0x3c6: V344 = 0x3dc
0x3c9: JUMPI 0x3dc V343
---
Entry stack: [V13, 0xd6, V63, V64, V286, S4, {0x0, 0xd6}, S2, V281, V338]
Stack pops: 6
Stack additions: [S5, V342, S3, S2]
Exit stack: [V13, 0xd6, V63, V64, V286, V342, {0x0, 0xd6}, S2]

================================

Block 0x3ca
[0x3ca:0x3db]
---
Predecessors: [0x3bf]
Successors: [0x3dc]
---
0x3ca PUSH1 0x14
0x3cc DUP1
0x3cd SLOAD
0x3ce PUSH1 0xff
0x3d0 NOT
0x3d1 AND
0x3d2 PUSH1 0x1
0x3d4 OR
0x3d5 SWAP1
0x3d6 SSTORE
0x3d7 SWAP2
0x3d8 SWAP3
0x3d9 POP
0x3da DUP3
0x3db SWAP2
---
0x3ca: V345 = 0x14
0x3cd: V346 = S[0x14]
0x3ce: V347 = 0xff
0x3d0: V348 = NOT 0xff
0x3d1: V349 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V346
0x3d2: V350 = 0x1
0x3d4: V351 = OR 0x1 V349
0x3d6: S[0x14] = V351
---
Entry stack: [V13, 0xd6, V63, V64, V286, V342, {0x0, 0xd6}, S0]
Stack pops: 4
Stack additions: [S2, S2, S1, S0]
Exit stack: [V13, 0xd6, V63, V64, V342, V342, {0x0, 0xd6}, S0]

================================

Block 0x3dc
[0x3dc:0x3f1]
---
Predecessors: [0x3bf, 0x3ca]
Successors: [0x3f2, 0x3f3]
---
0x3dc JUMPDEST
0x3dd PUSH1 0x15
0x3df SLOAD
0x3e0 DUP5
0x3e1 PUSH8 0xde0b6b3a7640000
0x3ea MUL
0x3eb DUP2
0x3ec ISZERO
0x3ed ISZERO
0x3ee PUSH2 0x3f3
0x3f1 JUMPI
---
0x3dc: JUMPDEST 
0x3dd: V352 = 0x15
0x3df: V353 = S[0x15]
0x3e1: V354 = 0xde0b6b3a7640000
0x3ea: V355 = MUL 0xde0b6b3a7640000 S3
0x3ec: V356 = ISZERO V353
0x3ed: V357 = ISZERO V356
0x3ee: V358 = 0x3f3
0x3f1: JUMPI 0x3f3 V357
---
Entry stack: [V13, 0xd6, V63, V64, S3, V342, {0x0, 0xd6}, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V353, V355]
Exit stack: [V13, 0xd6, V63, V64, S3, V342, {0x0, 0xd6}, S0, V353, V355]

================================

Block 0x3f2
[0x3f2:0x3f2]
---
Predecessors: [0x3dc]
Successors: []
---
0x3f2 INVALID
---
0x3f2: INVALID 
---
Entry stack: [V13, 0xd6, V63, V64, S5, V342, {0x0, 0xd6}, S2, V353, V355]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, S5, V342, {0x0, 0xd6}, S2, V353, V355]

================================

Block 0x3f3
[0x3f3:0x46f]
---
Predecessors: [0x3dc]
Successors: [0x470, 0x474]
---
0x3f3 JUMPDEST
0x3f4 PUSH1 0xc
0x3f6 SLOAD
0x3f7 PUSH1 0xe
0x3f9 SLOAD
0x3fa PUSH1 0xf
0x3fc SLOAD
0x3fd SWAP4
0x3fe SWAP1
0x3ff SWAP3
0x400 DIV
0x401 SWAP5
0x402 POP
0x403 PUSH1 0x1
0x405 PUSH1 0xa0
0x407 PUSH1 0x2
0x409 EXP
0x40a SUB
0x40b SWAP1
0x40c DUP2
0x40d AND
0x40e SWAP3
0x40f PUSH4 0x23b872dd
0x414 SWAP3
0x415 SWAP1
0x416 SWAP2
0x417 AND
0x418 SWAP1
0x419 DUP10
0x41a SWAP1
0x41b DUP9
0x41c MUL
0x41d PUSH1 0x0
0x41f PUSH1 0x40
0x421 MLOAD
0x422 PUSH1 0x20
0x424 ADD
0x425 MSTORE
0x426 PUSH1 0x40
0x428 MLOAD
0x429 PUSH1 0xe0
0x42b PUSH1 0x2
0x42d EXP
0x42e PUSH4 0xffffffff
0x433 DUP7
0x434 AND
0x435 MUL
0x436 DUP2
0x437 MSTORE
0x438 PUSH1 0x1
0x43a PUSH1 0xa0
0x43c PUSH1 0x2
0x43e EXP
0x43f SUB
0x440 SWAP4
0x441 DUP5
0x442 AND
0x443 PUSH1 0x4
0x445 DUP3
0x446 ADD
0x447 MSTORE
0x448 SWAP2
0x449 SWAP1
0x44a SWAP3
0x44b AND
0x44c PUSH1 0x24
0x44e DUP3
0x44f ADD
0x450 MSTORE
0x451 PUSH1 0x44
0x453 DUP2
0x454 ADD
0x455 SWAP2
0x456 SWAP1
0x457 SWAP2
0x458 MSTORE
0x459 PUSH1 0x64
0x45b ADD
0x45c PUSH1 0x20
0x45e PUSH1 0x40
0x460 MLOAD
0x461 DUP1
0x462 DUP4
0x463 SUB
0x464 DUP2
0x465 PUSH1 0x0
0x467 DUP8
0x468 DUP1
0x469 EXTCODESIZE
0x46a ISZERO
0x46b ISZERO
0x46c PUSH2 0x474
0x46f JUMPI
---
0x3f3: JUMPDEST 
0x3f4: V359 = 0xc
0x3f6: V360 = S[0xc]
0x3f7: V361 = 0xe
0x3f9: V362 = S[0xe]
0x3fa: V363 = 0xf
0x3fc: V364 = S[0xf]
0x400: V365 = DIV V355 V353
0x403: V366 = 0x1
0x405: V367 = 0xa0
0x407: V368 = 0x2
0x409: V369 = EXP 0x2 0xa0
0x40a: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40d: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V360
0x40f: V372 = 0x23b872dd
0x417: V373 = AND 0xffffffffffffffffffffffffffffffffffffffff V362
0x41c: V374 = MUL S5 V364
0x41d: V375 = 0x0
0x41f: V376 = 0x40
0x421: V377 = M[0x40]
0x422: V378 = 0x20
0x424: V379 = ADD 0x20 V377
0x425: M[V379] = 0x0
0x426: V380 = 0x40
0x428: V381 = M[0x40]
0x429: V382 = 0xe0
0x42b: V383 = 0x2
0x42d: V384 = EXP 0x2 0xe0
0x42e: V385 = 0xffffffff
0x434: V386 = AND 0x23b872dd 0xffffffff
0x435: V387 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x437: M[V381] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x438: V388 = 0x1
0x43a: V389 = 0xa0
0x43c: V390 = 0x2
0x43e: V391 = EXP 0x2 0xa0
0x43f: V392 = SUB 0x10000000000000000000000000000000000000000 0x1
0x442: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x443: V394 = 0x4
0x446: V395 = ADD V381 0x4
0x447: M[V395] = V393
0x44b: V396 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x44c: V397 = 0x24
0x44f: V398 = ADD V381 0x24
0x450: M[V398] = V396
0x451: V399 = 0x44
0x454: V400 = ADD V381 0x44
0x458: M[V400] = V374
0x459: V401 = 0x64
0x45b: V402 = ADD 0x64 V381
0x45c: V403 = 0x20
0x45e: V404 = 0x40
0x460: V405 = M[0x40]
0x463: V406 = SUB V402 V405
0x465: V407 = 0x0
0x469: V408 = EXTCODESIZE V371
0x46a: V409 = ISZERO V408
0x46b: V410 = ISZERO V409
0x46c: V411 = 0x474
0x46f: JUMPI 0x474 V410
---
Entry stack: [V13, 0xd6, V63, V64, S5, V342, {0x0, 0xd6}, S2, V353, V355]
Stack pops: 8
Stack additions: [S7, S6, S5, S4, V365, S2, V371, 0x23b872dd, V402, 0x20, V405, V406, V405, 0x0, V371]
Exit stack: [V13, 0xd6, V63, V64, S5, V342, V365, S2, V371, 0x23b872dd, V402, 0x20, V405, V406, V405, 0x0, V371]

================================

Block 0x470
[0x470:0x473]
---
Predecessors: [0x3f3]
Successors: []
---
0x470 PUSH1 0x0
0x472 DUP1
0x473 REVERT
---
0x470: V412 = 0x0
0x473: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, V63, V64, S12, V342, V365, S9, V371, 0x23b872dd, V402, 0x20, V405, V406, V405, 0x0, V371]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, S12, V342, V365, S9, V371, 0x23b872dd, V402, 0x20, V405, V406, V405, 0x0, V371]

================================

Block 0x474
[0x474:0x480]
---
Predecessors: [0x3f3]
Successors: [0x481, 0x485]
---
0x474 JUMPDEST
0x475 PUSH2 0x2c6
0x478 GAS
0x479 SUB
0x47a CALL
0x47b ISZERO
0x47c ISZERO
0x47d PUSH2 0x485
0x480 JUMPI
---
0x474: JUMPDEST 
0x475: V413 = 0x2c6
0x478: V414 = GAS
0x479: V415 = SUB V414 0x2c6
0x47a: V416 = CALL V415 V371 0x0 V405 V406 V405 0x20
0x47b: V417 = ISZERO V416
0x47c: V418 = ISZERO V417
0x47d: V419 = 0x485
0x480: JUMPI 0x485 V418
---
Entry stack: [V13, 0xd6, V63, V64, S12, V342, V365, S9, V371, 0x23b872dd, V402, 0x20, V405, V406, V405, 0x0, V371]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, S12, V342, V365, S9, V371, 0x23b872dd, V402]

================================

Block 0x481
[0x481:0x484]
---
Predecessors: [0x474]
Successors: []
---
0x481 PUSH1 0x0
0x483 DUP1
0x484 REVERT
---
0x481: V420 = 0x0
0x484: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, V63, V64, S6, V342, V365, S3, V371, 0x23b872dd, V402]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, S6, V342, V365, S3, V371, 0x23b872dd, V402]

================================

Block 0x485
[0x485:0x4de]
---
Predecessors: [0x474]
Successors: [0x4df, 0x53f]
---
0x485 JUMPDEST
0x486 POP
0x487 POP
0x488 POP
0x489 PUSH1 0x40
0x48b MLOAD
0x48c DUP1
0x48d MLOAD
0x48e SWAP1
0x48f POP
0x490 POP
0x491 DUP4
0x492 DUP6
0x493 DUP8
0x494 PUSH1 0x1
0x496 PUSH1 0xa0
0x498 PUSH1 0x2
0x49a EXP
0x49b SUB
0x49c AND
0x49d PUSH32 0xdac5b8ae4ba946ab451cea83f02cf2db5027d245ab4382ce9f0aaf42c56d8cb7
0x4be PUSH1 0x15
0x4c0 SLOAD
0x4c1 PUSH1 0x40
0x4c3 MLOAD
0x4c4 SWAP1
0x4c5 DUP2
0x4c6 MSTORE
0x4c7 PUSH1 0x20
0x4c9 ADD
0x4ca PUSH1 0x40
0x4cc MLOAD
0x4cd DUP1
0x4ce SWAP2
0x4cf SUB
0x4d0 SWAP1
0x4d1 LOG4
0x4d2 POP
0x4d3 DUP1
0x4d4 DUP5
0x4d5 SUB
0x4d6 PUSH1 0x0
0x4d8 DUP2
0x4d9 GT
0x4da ISZERO
0x4db PUSH2 0x53f
0x4de JUMPI
---
0x485: JUMPDEST 
0x489: V421 = 0x40
0x48b: V422 = M[0x40]
0x48d: V423 = M[V422]
0x494: V424 = 0x1
0x496: V425 = 0xa0
0x498: V426 = 0x2
0x49a: V427 = EXP 0x2 0xa0
0x49b: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49c: V429 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x49d: V430 = 0xdac5b8ae4ba946ab451cea83f02cf2db5027d245ab4382ce9f0aaf42c56d8cb7
0x4be: V431 = 0x15
0x4c0: V432 = S[0x15]
0x4c1: V433 = 0x40
0x4c3: V434 = M[0x40]
0x4c6: M[V434] = V432
0x4c7: V435 = 0x20
0x4c9: V436 = ADD 0x20 V434
0x4ca: V437 = 0x40
0x4cc: V438 = M[0x40]
0x4cf: V439 = SUB V436 V438
0x4d1: LOG V438 V439 0xdac5b8ae4ba946ab451cea83f02cf2db5027d245ab4382ce9f0aaf42c56d8cb7 V429 V64 S6
0x4d5: V440 = SUB V64 V365
0x4d6: V441 = 0x0
0x4d9: V442 = GT V440 0x0
0x4da: V443 = ISZERO V442
0x4db: V444 = 0x53f
0x4de: JUMPI 0x53f V443
---
Entry stack: [V13, 0xd6, V63, V64, S6, V342, V365, S3, V371, 0x23b872dd, V402]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, V440]
Exit stack: [V13, 0xd6, V63, V64, S6, V342, V365, V440]

================================

Block 0x4df
[0x4df:0x50a]
---
Predecessors: [0x485]
Successors: [0x50b, 0x50f]
---
0x4df PUSH1 0x1
0x4e1 PUSH1 0xa0
0x4e3 PUSH1 0x2
0x4e5 EXP
0x4e6 SUB
0x4e7 DUP7
0x4e8 AND
0x4e9 DUP2
0x4ea ISZERO
0x4eb PUSH2 0x8fc
0x4ee MUL
0x4ef DUP3
0x4f0 PUSH1 0x40
0x4f2 MLOAD
0x4f3 PUSH1 0x0
0x4f5 PUSH1 0x40
0x4f7 MLOAD
0x4f8 DUP1
0x4f9 DUP4
0x4fa SUB
0x4fb DUP2
0x4fc DUP6
0x4fd DUP9
0x4fe DUP9
0x4ff CALL
0x500 SWAP4
0x501 POP
0x502 POP
0x503 POP
0x504 POP
0x505 ISZERO
0x506 ISZERO
0x507 PUSH2 0x50f
0x50a JUMPI
---
0x4df: V445 = 0x1
0x4e1: V446 = 0xa0
0x4e3: V447 = 0x2
0x4e5: V448 = EXP 0x2 0xa0
0x4e6: V449 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e8: V450 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0x4ea: V451 = ISZERO V440
0x4eb: V452 = 0x8fc
0x4ee: V453 = MUL 0x8fc V451
0x4f0: V454 = 0x40
0x4f2: V455 = M[0x40]
0x4f3: V456 = 0x0
0x4f5: V457 = 0x40
0x4f7: V458 = M[0x40]
0x4fa: V459 = SUB V455 V458
0x4ff: V460 = CALL V453 V450 V440 V458 V459 V458 0x0
0x505: V461 = ISZERO V460
0x506: V462 = ISZERO V461
0x507: V463 = 0x50f
0x50a: JUMPI 0x50f V462
---
Entry stack: [V13, 0xd6, V63, V64, S3, V342, V365, V440]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0xd6, V63, V64, S3, V342, V365, V440]

================================

Block 0x50b
[0x50b:0x50e]
---
Predecessors: [0x4df]
Successors: []
---
0x50b PUSH1 0x0
0x50d DUP1
0x50e REVERT
---
0x50b: V464 = 0x0
0x50e: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, V63, V64, S3, V342, V365, V440]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, S3, V342, V365, V440]

================================

Block 0x50f
[0x50f:0x53e]
---
Predecessors: [0x4df]
Successors: [0x53f]
---
0x50f JUMPDEST
0x510 DUP1
0x511 DUP7
0x512 PUSH1 0x1
0x514 PUSH1 0xa0
0x516 PUSH1 0x2
0x518 EXP
0x519 SUB
0x51a AND
0x51b ADDRESS
0x51c PUSH1 0x1
0x51e PUSH1 0xa0
0x520 PUSH1 0x2
0x522 EXP
0x523 SUB
0x524 AND
0x525 PUSH1 0x0
0x527 DUP1
0x528 MLOAD
0x529 PUSH1 0x20
0x52b PUSH2 0x9a0
0x52e DUP4
0x52f CODECOPY
0x530 DUP2
0x531 MLOAD
0x532 SWAP2
0x533 MSTORE
0x534 PUSH1 0x40
0x536 MLOAD
0x537 PUSH1 0x40
0x539 MLOAD
0x53a DUP1
0x53b SWAP2
0x53c SUB
0x53d SWAP1
0x53e LOG4
---
0x50f: JUMPDEST 
0x512: V465 = 0x1
0x514: V466 = 0xa0
0x516: V467 = 0x2
0x518: V468 = EXP 0x2 0xa0
0x519: V469 = SUB 0x10000000000000000000000000000000000000000 0x1
0x51a: V470 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x51b: V471 = ADDRESS
0x51c: V472 = 0x1
0x51e: V473 = 0xa0
0x520: V474 = 0x2
0x522: V475 = EXP 0x2 0xa0
0x523: V476 = SUB 0x10000000000000000000000000000000000000000 0x1
0x524: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff V471
0x525: V478 = 0x0
0x528: V479 = M[0x0]
0x529: V480 = 0x20
0x52b: V481 = 0x9a0
0x52f: CODECOPY 0x0 0x9a0 0x20
0x531: V482 = M[0x0]
0x533: M[0x0] = V479
0x534: V483 = 0x40
0x536: V484 = M[0x40]
0x537: V485 = 0x40
0x539: V486 = M[0x40]
0x53c: V487 = SUB V484 V486
0x53e: LOG V486 V487 V482 V477 V470 V440
---
Entry stack: [V13, 0xd6, V63, V64, S3, V342, V365, V440]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0xd6, V63, V64, S3, V342, V365, V440]

================================

Block 0x53f
[0x53f:0x56d]
---
Predecessors: [0x485, 0x50f]
Successors: [0xd6]
---
0x53f JUMPDEST
0x540 POP
0x541 PUSH1 0x1
0x543 PUSH1 0xa0
0x545 PUSH1 0x2
0x547 EXP
0x548 SUB
0x549 SWAP1
0x54a SWAP5
0x54b AND
0x54c PUSH1 0x0
0x54e SWAP1
0x54f DUP2
0x550 MSTORE
0x551 PUSH1 0x16
0x553 PUSH1 0x20
0x555 MSTORE
0x556 PUSH1 0x40
0x558 SWAP1
0x559 SHA3
0x55a DUP1
0x55b SLOAD
0x55c DUP6
0x55d ADD
0x55e SWAP1
0x55f SSTORE
0x560 POP
0x561 POP
0x562 PUSH1 0x10
0x564 DUP1
0x565 SLOAD
0x566 SWAP1
0x567 SWAP3
0x568 ADD
0x569 SWAP1
0x56a SWAP2
0x56b SSTORE
0x56c POP
0x56d JUMP
---
0x53f: JUMPDEST 
0x541: V488 = 0x1
0x543: V489 = 0xa0
0x545: V490 = 0x2
0x547: V491 = EXP 0x2 0xa0
0x548: V492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54b: V493 = AND V63 0xffffffffffffffffffffffffffffffffffffffff
0x54c: V494 = 0x0
0x550: M[0x0] = V493
0x551: V495 = 0x16
0x553: V496 = 0x20
0x555: M[0x20] = 0x16
0x556: V497 = 0x40
0x559: V498 = SHA3 0x0 0x40
0x55b: V499 = S[V498]
0x55d: V500 = ADD V365 V499
0x55f: S[V498] = V500
0x562: V501 = 0x10
0x565: V502 = S[0x10]
0x568: V503 = ADD V365 V502
0x56b: S[0x10] = V503
0x56d: JUMP 0xd6
---
Entry stack: [V13, 0xd6, V63, V64, S3, V342, V365, V440]
Stack pops: 7
Stack additions: []
Exit stack: [V13]

================================

Block 0x56e
[0x56e:0x5bd]
---
Predecessors: [0xe3]
Successors: [0x5be, 0x604]
---
0x56e JUMPDEST
0x56f PUSH1 0xb
0x571 DUP1
0x572 SLOAD
0x573 PUSH1 0x1
0x575 DUP2
0x576 PUSH1 0x1
0x578 AND
0x579 ISZERO
0x57a PUSH2 0x100
0x57d MUL
0x57e SUB
0x57f AND
0x580 PUSH1 0x2
0x582 SWAP1
0x583 DIV
0x584 DUP1
0x585 PUSH1 0x1f
0x587 ADD
0x588 PUSH1 0x20
0x58a DUP1
0x58b SWAP2
0x58c DIV
0x58d MUL
0x58e PUSH1 0x20
0x590 ADD
0x591 PUSH1 0x40
0x593 MLOAD
0x594 SWAP1
0x595 DUP2
0x596 ADD
0x597 PUSH1 0x40
0x599 MSTORE
0x59a DUP1
0x59b SWAP3
0x59c SWAP2
0x59d SWAP1
0x59e DUP2
0x59f DUP2
0x5a0 MSTORE
0x5a1 PUSH1 0x20
0x5a3 ADD
0x5a4 DUP3
0x5a5 DUP1
0x5a6 SLOAD
0x5a7 PUSH1 0x1
0x5a9 DUP2
0x5aa PUSH1 0x1
0x5ac AND
0x5ad ISZERO
0x5ae PUSH2 0x100
0x5b1 MUL
0x5b2 SUB
0x5b3 AND
0x5b4 PUSH1 0x2
0x5b6 SWAP1
0x5b7 DIV
0x5b8 DUP1
0x5b9 ISZERO
0x5ba PUSH2 0x604
0x5bd JUMPI
---
0x56e: JUMPDEST 
0x56f: V504 = 0xb
0x572: V505 = S[0xb]
0x573: V506 = 0x1
0x576: V507 = 0x1
0x578: V508 = AND 0x1 V505
0x579: V509 = ISZERO V508
0x57a: V510 = 0x100
0x57d: V511 = MUL 0x100 V509
0x57e: V512 = SUB V511 0x1
0x57f: V513 = AND V512 V505
0x580: V514 = 0x2
0x583: V515 = DIV V513 0x2
0x585: V516 = 0x1f
0x587: V517 = ADD 0x1f V515
0x588: V518 = 0x20
0x58c: V519 = DIV V517 0x20
0x58d: V520 = MUL V519 0x20
0x58e: V521 = 0x20
0x590: V522 = ADD 0x20 V520
0x591: V523 = 0x40
0x593: V524 = M[0x40]
0x596: V525 = ADD V524 V522
0x597: V526 = 0x40
0x599: M[0x40] = V525
0x5a0: M[V524] = V515
0x5a1: V527 = 0x20
0x5a3: V528 = ADD 0x20 V524
0x5a6: V529 = S[0xb]
0x5a7: V530 = 0x1
0x5aa: V531 = 0x1
0x5ac: V532 = AND 0x1 V529
0x5ad: V533 = ISZERO V532
0x5ae: V534 = 0x100
0x5b1: V535 = MUL 0x100 V533
0x5b2: V536 = SUB V535 0x1
0x5b3: V537 = AND V536 V529
0x5b4: V538 = 0x2
0x5b7: V539 = DIV V537 0x2
0x5b9: V540 = ISZERO V539
0x5ba: V541 = 0x604
0x5bd: JUMPI 0x604 V540
---
Entry stack: [V13, 0xeb]
Stack pops: 0
Stack additions: [V524, 0xb, V515, V528, 0xb, V539]
Exit stack: [V13, 0xeb, V524, 0xb, V515, V528, 0xb, V539]

================================

Block 0x5be
[0x5be:0x5c5]
---
Predecessors: [0x56e]
Successors: [0x5c6, 0x5d9]
---
0x5be DUP1
0x5bf PUSH1 0x1f
0x5c1 LT
0x5c2 PUSH2 0x5d9
0x5c5 JUMPI
---
0x5bf: V542 = 0x1f
0x5c1: V543 = LT 0x1f V539
0x5c2: V544 = 0x5d9
0x5c5: JUMPI 0x5d9 V543
---
Entry stack: [V13, 0xeb, V524, 0xb, V515, V528, 0xb, V539]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xeb, V524, 0xb, V515, V528, 0xb, V539]

================================

Block 0x5c6
[0x5c6:0x5d8]
---
Predecessors: [0x5be]
Successors: [0x604]
---
0x5c6 PUSH2 0x100
0x5c9 DUP1
0x5ca DUP4
0x5cb SLOAD
0x5cc DIV
0x5cd MUL
0x5ce DUP4
0x5cf MSTORE
0x5d0 SWAP2
0x5d1 PUSH1 0x20
0x5d3 ADD
0x5d4 SWAP2
0x5d5 PUSH2 0x604
0x5d8 JUMP
---
0x5c6: V545 = 0x100
0x5cb: V546 = S[0xb]
0x5cc: V547 = DIV V546 0x100
0x5cd: V548 = MUL V547 0x100
0x5cf: M[V528] = V548
0x5d1: V549 = 0x20
0x5d3: V550 = ADD 0x20 V528
0x5d5: V551 = 0x604
0x5d8: JUMP 0x604
---
Entry stack: [V13, 0xeb, V524, 0xb, V515, V528, 0xb, V539]
Stack pops: 3
Stack additions: [V550, S1, S0]
Exit stack: [V13, 0xeb, V524, 0xb, V515, V550, 0xb, V539]

================================

Block 0x5d9
[0x5d9:0x5e6]
---
Predecessors: [0x5be]
Successors: [0x5e7]
---
0x5d9 JUMPDEST
0x5da DUP3
0x5db ADD
0x5dc SWAP2
0x5dd SWAP1
0x5de PUSH1 0x0
0x5e0 MSTORE
0x5e1 PUSH1 0x20
0x5e3 PUSH1 0x0
0x5e5 SHA3
0x5e6 SWAP1
---
0x5d9: JUMPDEST 
0x5db: V552 = ADD V528 V539
0x5de: V553 = 0x0
0x5e0: M[0x0] = 0xb
0x5e1: V554 = 0x20
0x5e3: V555 = 0x0
0x5e5: V556 = SHA3 0x0 0x20
---
Entry stack: [V13, 0xeb, V524, 0xb, V515, V528, 0xb, V539]
Stack pops: 3
Stack additions: [V552, V556, S2]
Exit stack: [V13, 0xeb, V524, 0xb, V515, V552, V556, V528]

================================

Block 0x5e7
[0x5e7:0x5fa]
---
Predecessors: [0x5d9, 0x5e7]
Successors: [0x5e7, 0x5fb]
---
0x5e7 JUMPDEST
0x5e8 DUP2
0x5e9 SLOAD
0x5ea DUP2
0x5eb MSTORE
0x5ec SWAP1
0x5ed PUSH1 0x1
0x5ef ADD
0x5f0 SWAP1
0x5f1 PUSH1 0x20
0x5f3 ADD
0x5f4 DUP1
0x5f5 DUP4
0x5f6 GT
0x5f7 PUSH2 0x5e7
0x5fa JUMPI
---
0x5e7: JUMPDEST 
0x5e9: V557 = S[S1]
0x5eb: M[S0] = V557
0x5ed: V558 = 0x1
0x5ef: V559 = ADD 0x1 S1
0x5f1: V560 = 0x20
0x5f3: V561 = ADD 0x20 S0
0x5f6: V562 = GT V552 V561
0x5f7: V563 = 0x5e7
0x5fa: JUMPI 0x5e7 V562
---
Entry stack: [V13, 0xeb, V524, 0xb, V515, V552, S1, S0]
Stack pops: 3
Stack additions: [S2, V559, V561]
Exit stack: [V13, 0xeb, V524, 0xb, V515, V552, V559, V561]

================================

Block 0x5fb
[0x5fb:0x603]
---
Predecessors: [0x5e7]
Successors: [0x604]
---
0x5fb DUP3
0x5fc SWAP1
0x5fd SUB
0x5fe PUSH1 0x1f
0x600 AND
0x601 DUP3
0x602 ADD
0x603 SWAP2
---
0x5fd: V564 = SUB V561 V552
0x5fe: V565 = 0x1f
0x600: V566 = AND 0x1f V564
0x602: V567 = ADD V552 V566
---
Entry stack: [V13, 0xeb, V524, 0xb, V515, V552, V559, V561]
Stack pops: 3
Stack additions: [V567, S1, S2]
Exit stack: [V13, 0xeb, V524, 0xb, V515, V567, V559, V552]

================================

Block 0x604
[0x604:0x60b]
---
Predecessors: [0x56e, 0x5c6, 0x5fb]
Successors: [0xeb]
---
0x604 JUMPDEST
0x605 POP
0x606 POP
0x607 POP
0x608 POP
0x609 POP
0x60a DUP2
0x60b JUMP
---
0x604: JUMPDEST 
0x60b: JUMP 0xeb
---
Entry stack: [V13, 0xeb, V524, 0xb, V515, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V13, 0xeb, V524]

================================

Block 0x60c
[0x60c:0x611]
---
Predecessors: [0x16d]
Successors: [0x175]
---
0x60c JUMPDEST
0x60d PUSH1 0x12
0x60f SLOAD
0x610 DUP2
0x611 JUMP
---
0x60c: JUMPDEST 
0x60d: V568 = 0x12
0x60f: V569 = S[0x12]
0x611: JUMP 0x175
---
Entry stack: [V13, 0x175]
Stack pops: 1
Stack additions: [S0, V569]
Exit stack: [V13, 0x175, V569]

================================

Block 0x612
[0x612:0x619]
---
Predecessors: [0x192]
Successors: [0x175]
---
0x612 JUMPDEST
0x613 PUSH4 0x5b299900
0x618 DUP2
0x619 JUMP
---
0x612: JUMPDEST 
0x613: V570 = 0x5b299900
0x619: JUMP 0x175
---
Entry stack: [V13, 0x175]
Stack pops: 1
Stack additions: [S0, 0x5b299900]
Exit stack: [V13, 0x175, 0x5b299900]

================================

Block 0x61a
[0x61a:0x61f]
---
Predecessors: [0x1a5]
Successors: [0x175]
---
0x61a JUMPDEST
0x61b PUSH1 0x11
0x61d SLOAD
0x61e DUP2
0x61f JUMP
---
0x61a: JUMPDEST 
0x61b: V571 = 0x11
0x61d: V572 = S[0x11]
0x61f: JUMP 0x175
---
Entry stack: [V13, 0x175]
Stack pops: 1
Stack additions: [S0, V572]
Exit stack: [V13, 0x175, V572]

================================

Block 0x620
[0x620:0x637]
---
Predecessors: [0x1b8]
Successors: [0x638, 0x63c]
---
0x620 JUMPDEST
0x621 PUSH1 0x0
0x623 DUP1
0x624 SLOAD
0x625 CALLER
0x626 PUSH1 0x1
0x628 PUSH1 0xa0
0x62a PUSH1 0x2
0x62c EXP
0x62d SUB
0x62e SWAP1
0x62f DUP2
0x630 AND
0x631 SWAP2
0x632 AND
0x633 EQ
0x634 PUSH2 0x63c
0x637 JUMPI
---
0x620: JUMPDEST 
0x621: V573 = 0x0
0x624: V574 = S[0x0]
0x625: V575 = CALLER
0x626: V576 = 0x1
0x628: V577 = 0xa0
0x62a: V578 = 0x2
0x62c: V579 = EXP 0x2 0xa0
0x62d: V580 = SUB 0x10000000000000000000000000000000000000000 0x1
0x630: V581 = AND 0xffffffffffffffffffffffffffffffffffffffff V575
0x632: V582 = AND V574 0xffffffffffffffffffffffffffffffffffffffff
0x633: V583 = EQ V582 V581
0x634: V584 = 0x63c
0x637: JUMPI 0x63c V583
---
Entry stack: [V13, 0xd6]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0xd6, 0x0]

================================

Block 0x638
[0x638:0x63b]
---
Predecessors: [0x620]
Successors: []
---
0x638 PUSH1 0x0
0x63a DUP1
0x63b REVERT
---
0x638: V585 = 0x0
0x63b: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, 0x0]

================================

Block 0x63c
[0x63c:0x643]
---
Predecessors: [0x620]
Successors: [0x8e8]
---
0x63c JUMPDEST
0x63d PUSH2 0x644
0x640 PUSH2 0x8e8
0x643 JUMP
---
0x63c: JUMPDEST 
0x63d: V586 = 0x644
0x640: V587 = 0x8e8
0x643: JUMP 0x8e8
---
Entry stack: [V13, 0xd6, 0x0]
Stack pops: 0
Stack additions: [0x644]
Exit stack: [V13, 0xd6, 0x0, 0x644]

================================

Block 0x644
[0x644:0x649]
---
Predecessors: [0x910]
Successors: [0x64a, 0x64e]
---
0x644 JUMPDEST
0x645 ISZERO
0x646 PUSH2 0x64e
0x649 JUMPI
---
0x644: JUMPDEST 
0x645: V588 = ISZERO S0
0x646: V589 = 0x64e
0x649: JUMPI 0x64e V588
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S3, {0x0, 0xd6}, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S3, {0x0, 0xd6}, S1]

================================

Block 0x64a
[0x64a:0x64d]
---
Predecessors: [0x644]
Successors: []
---
0x64a PUSH1 0x0
0x64c DUP1
0x64d REVERT
---
0x64a: V590 = 0x0
0x64d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]

================================

Block 0x64e
[0x64e:0x665]
---
Predecessors: [0x644]
Successors: [0x666, 0x66a]
---
0x64e JUMPDEST
0x64f PUSH1 0x17
0x651 SLOAD
0x652 PUSH1 0x0
0x654 PUSH1 0x1
0x656 PUSH1 0xa0
0x658 PUSH1 0x2
0x65a EXP
0x65b SUB
0x65c SWAP1
0x65d SWAP2
0x65e AND
0x65f BALANCE
0x660 GT
0x661 ISZERO
0x662 PUSH2 0x66a
0x665 JUMPI
---
0x64e: JUMPDEST 
0x64f: V591 = 0x17
0x651: V592 = S[0x17]
0x652: V593 = 0x0
0x654: V594 = 0x1
0x656: V595 = 0xa0
0x658: V596 = 0x2
0x65a: V597 = EXP 0x2 0xa0
0x65b: V598 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65e: V599 = AND V592 0xffffffffffffffffffffffffffffffffffffffff
0x65f: V600 = BALANCE V599
0x660: V601 = GT V600 0x0
0x661: V602 = ISZERO V601
0x662: V603 = 0x66a
0x665: JUMPI 0x66a V602
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]

================================

Block 0x666
[0x666:0x669]
---
Predecessors: [0x64e]
Successors: []
---
0x666 PUSH1 0x0
0x668 DUP1
0x669 REVERT
---
0x666: V604 = 0x0
0x669: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]

================================

Block 0x66a
[0x66a:0x676]
---
Predecessors: [0x64e]
Successors: [0x677, 0x684]
---
0x66a JUMPDEST
0x66b PUSH4 0x5ad92d80
0x670 TIMESTAMP
0x671 LT
0x672 ISZERO
0x673 PUSH2 0x684
0x676 JUMPI
---
0x66a: JUMPDEST 
0x66b: V605 = 0x5ad92d80
0x670: V606 = TIMESTAMP
0x671: V607 = LT V606 0x5ad92d80
0x672: V608 = ISZERO V607
0x673: V609 = 0x684
0x676: JUMPI 0x684 V608
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]

================================

Block 0x677
[0x677:0x683]
---
Predecessors: [0x66a]
Successors: []
---
0x677 PUSH1 0x0
0x679 SLOAD
0x67a PUSH1 0x1
0x67c PUSH1 0xa0
0x67e PUSH1 0x2
0x680 EXP
0x681 SUB
0x682 AND
0x683 SELFDESTRUCT
---
0x677: V610 = 0x0
0x679: V611 = S[0x0]
0x67a: V612 = 0x1
0x67c: V613 = 0xa0
0x67e: V614 = 0x2
0x680: V615 = EXP 0x2 0xa0
0x681: V616 = SUB 0x10000000000000000000000000000000000000000 0x1
0x682: V617 = AND 0xffffffffffffffffffffffffffffffffffffffff V611
0x683: SELFDESTRUCT V617
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]

================================

Block 0x684
[0x684:0x6df]
---
Predecessors: [0x66a]
Successors: [0x6e0, 0x6e4]
---
0x684 JUMPDEST
0x685 PUSH1 0xc
0x687 SLOAD
0x688 PUSH1 0xe
0x68a SLOAD
0x68b PUSH1 0x1
0x68d PUSH1 0xa0
0x68f PUSH1 0x2
0x691 EXP
0x692 SUB
0x693 SWAP2
0x694 DUP3
0x695 AND
0x696 SWAP2
0x697 PUSH4 0x70a08231
0x69c SWAP2
0x69d AND
0x69e PUSH1 0x0
0x6a0 PUSH1 0x40
0x6a2 MLOAD
0x6a3 PUSH1 0x20
0x6a5 ADD
0x6a6 MSTORE
0x6a7 PUSH1 0x40
0x6a9 MLOAD
0x6aa PUSH1 0xe0
0x6ac PUSH1 0x2
0x6ae EXP
0x6af PUSH4 0xffffffff
0x6b4 DUP5
0x6b5 AND
0x6b6 MUL
0x6b7 DUP2
0x6b8 MSTORE
0x6b9 PUSH1 0x1
0x6bb PUSH1 0xa0
0x6bd PUSH1 0x2
0x6bf EXP
0x6c0 SUB
0x6c1 SWAP1
0x6c2 SWAP2
0x6c3 AND
0x6c4 PUSH1 0x4
0x6c6 DUP3
0x6c7 ADD
0x6c8 MSTORE
0x6c9 PUSH1 0x24
0x6cb ADD
0x6cc PUSH1 0x20
0x6ce PUSH1 0x40
0x6d0 MLOAD
0x6d1 DUP1
0x6d2 DUP4
0x6d3 SUB
0x6d4 DUP2
0x6d5 PUSH1 0x0
0x6d7 DUP8
0x6d8 DUP1
0x6d9 EXTCODESIZE
0x6da ISZERO
0x6db ISZERO
0x6dc PUSH2 0x6e4
0x6df JUMPI
---
0x684: JUMPDEST 
0x685: V618 = 0xc
0x687: V619 = S[0xc]
0x688: V620 = 0xe
0x68a: V621 = S[0xe]
0x68b: V622 = 0x1
0x68d: V623 = 0xa0
0x68f: V624 = 0x2
0x691: V625 = EXP 0x2 0xa0
0x692: V626 = SUB 0x10000000000000000000000000000000000000000 0x1
0x695: V627 = AND 0xffffffffffffffffffffffffffffffffffffffff V619
0x697: V628 = 0x70a08231
0x69d: V629 = AND V621 0xffffffffffffffffffffffffffffffffffffffff
0x69e: V630 = 0x0
0x6a0: V631 = 0x40
0x6a2: V632 = M[0x40]
0x6a3: V633 = 0x20
0x6a5: V634 = ADD 0x20 V632
0x6a6: M[V634] = 0x0
0x6a7: V635 = 0x40
0x6a9: V636 = M[0x40]
0x6aa: V637 = 0xe0
0x6ac: V638 = 0x2
0x6ae: V639 = EXP 0x2 0xe0
0x6af: V640 = 0xffffffff
0x6b5: V641 = AND 0x70a08231 0xffffffff
0x6b6: V642 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x6b8: M[V636] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6b9: V643 = 0x1
0x6bb: V644 = 0xa0
0x6bd: V645 = 0x2
0x6bf: V646 = EXP 0x2 0xa0
0x6c0: V647 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c3: V648 = AND V629 0xffffffffffffffffffffffffffffffffffffffff
0x6c4: V649 = 0x4
0x6c7: V650 = ADD V636 0x4
0x6c8: M[V650] = V648
0x6c9: V651 = 0x24
0x6cb: V652 = ADD 0x24 V636
0x6cc: V653 = 0x20
0x6ce: V654 = 0x40
0x6d0: V655 = M[0x40]
0x6d3: V656 = SUB V652 V655
0x6d5: V657 = 0x0
0x6d9: V658 = EXTCODESIZE V627
0x6da: V659 = ISZERO V658
0x6db: V660 = ISZERO V659
0x6dc: V661 = 0x6e4
0x6df: JUMPI 0x6e4 V660
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0]
Stack pops: 0
Stack additions: [V627, 0x70a08231, V652, 0x20, V655, V656, V655, 0x0, V627]
Exit stack: [V13, 0xd6, V63, V64, 0x0, S2, {0x0, 0xd6}, S0, V627, 0x70a08231, V652, 0x20, V655, V656, V655, 0x0, V627]

================================

Block 0x6e0
[0x6e0:0x6e3]
---
Predecessors: [0x684]
Successors: []
---
0x6e0 PUSH1 0x0
0x6e2 DUP1
0x6e3 REVERT
---
0x6e0: V662 = 0x0
0x6e3: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S11, {0x0, 0xd6}, S9, V627, 0x70a08231, V652, 0x20, V655, V656, V655, 0x0, V627]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S11, {0x0, 0xd6}, S9, V627, 0x70a08231, V652, 0x20, V655, V656, V655, 0x0, V627]

================================

Block 0x6e4
[0x6e4:0x6f0]
---
Predecessors: [0x684]
Successors: [0x6f1, 0x6f5]
---
0x6e4 JUMPDEST
0x6e5 PUSH2 0x2c6
0x6e8 GAS
0x6e9 SUB
0x6ea CALL
0x6eb ISZERO
0x6ec ISZERO
0x6ed PUSH2 0x6f5
0x6f0 JUMPI
---
0x6e4: JUMPDEST 
0x6e5: V663 = 0x2c6
0x6e8: V664 = GAS
0x6e9: V665 = SUB V664 0x2c6
0x6ea: V666 = CALL V665 V627 0x0 V655 V656 V655 0x20
0x6eb: V667 = ISZERO V666
0x6ec: V668 = ISZERO V667
0x6ed: V669 = 0x6f5
0x6f0: JUMPI 0x6f5 V668
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S11, {0x0, 0xd6}, S9, V627, 0x70a08231, V652, 0x20, V655, V656, V655, 0x0, V627]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S11, {0x0, 0xd6}, S9, V627, 0x70a08231, V652]

================================

Block 0x6f1
[0x6f1:0x6f4]
---
Predecessors: [0x6e4]
Successors: []
---
0x6f1 PUSH1 0x0
0x6f3 DUP1
0x6f4 REVERT
---
0x6f1: V670 = 0x0
0x6f4: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S5, {0x0, 0xd6}, S3, V627, 0x70a08231, V652]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S5, {0x0, 0xd6}, S3, V627, 0x70a08231, V652]

================================

Block 0x6f5
[0x6f5:0x775]
---
Predecessors: [0x6e4]
Successors: [0x776, 0x77a]
---
0x6f5 JUMPDEST
0x6f6 POP
0x6f7 POP
0x6f8 POP
0x6f9 PUSH1 0x40
0x6fb MLOAD
0x6fc DUP1
0x6fd MLOAD
0x6fe PUSH1 0xc
0x700 SLOAD
0x701 PUSH1 0xe
0x703 SLOAD
0x704 PUSH1 0x9
0x706 SLOAD
0x707 SWAP3
0x708 SWAP5
0x709 POP
0x70a PUSH1 0x1
0x70c PUSH1 0xa0
0x70e PUSH1 0x2
0x710 EXP
0x711 SUB
0x712 SWAP2
0x713 DUP3
0x714 AND
0x715 SWAP4
0x716 POP
0x717 PUSH4 0x23b872dd
0x71c SWAP3
0x71d SWAP1
0x71e DUP3
0x71f AND
0x720 SWAP2
0x721 AND
0x722 DUP5
0x723 PUSH1 0x0
0x725 PUSH1 0x40
0x727 MLOAD
0x728 PUSH1 0x20
0x72a ADD
0x72b MSTORE
0x72c PUSH1 0x40
0x72e MLOAD
0x72f PUSH1 0xe0
0x731 PUSH1 0x2
0x733 EXP
0x734 PUSH4 0xffffffff
0x739 DUP7
0x73a AND
0x73b MUL
0x73c DUP2
0x73d MSTORE
0x73e PUSH1 0x1
0x740 PUSH1 0xa0
0x742 PUSH1 0x2
0x744 EXP
0x745 SUB
0x746 SWAP4
0x747 DUP5
0x748 AND
0x749 PUSH1 0x4
0x74b DUP3
0x74c ADD
0x74d MSTORE
0x74e SWAP2
0x74f SWAP1
0x750 SWAP3
0x751 AND
0x752 PUSH1 0x24
0x754 DUP3
0x755 ADD
0x756 MSTORE
0x757 PUSH1 0x44
0x759 DUP2
0x75a ADD
0x75b SWAP2
0x75c SWAP1
0x75d SWAP2
0x75e MSTORE
0x75f PUSH1 0x64
0x761 ADD
0x762 PUSH1 0x20
0x764 PUSH1 0x40
0x766 MLOAD
0x767 DUP1
0x768 DUP4
0x769 SUB
0x76a DUP2
0x76b PUSH1 0x0
0x76d DUP8
0x76e DUP1
0x76f EXTCODESIZE
0x770 ISZERO
0x771 ISZERO
0x772 PUSH2 0x77a
0x775 JUMPI
---
0x6f5: JUMPDEST 
0x6f9: V671 = 0x40
0x6fb: V672 = M[0x40]
0x6fd: V673 = M[V672]
0x6fe: V674 = 0xc
0x700: V675 = S[0xc]
0x701: V676 = 0xe
0x703: V677 = S[0xe]
0x704: V678 = 0x9
0x706: V679 = S[0x9]
0x70a: V680 = 0x1
0x70c: V681 = 0xa0
0x70e: V682 = 0x2
0x710: V683 = EXP 0x2 0xa0
0x711: V684 = SUB 0x10000000000000000000000000000000000000000 0x1
0x714: V685 = AND 0xffffffffffffffffffffffffffffffffffffffff V675
0x717: V686 = 0x23b872dd
0x71f: V687 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0x721: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff V679
0x723: V689 = 0x0
0x725: V690 = 0x40
0x727: V691 = M[0x40]
0x728: V692 = 0x20
0x72a: V693 = ADD 0x20 V691
0x72b: M[V693] = 0x0
0x72c: V694 = 0x40
0x72e: V695 = M[0x40]
0x72f: V696 = 0xe0
0x731: V697 = 0x2
0x733: V698 = EXP 0x2 0xe0
0x734: V699 = 0xffffffff
0x73a: V700 = AND 0x23b872dd 0xffffffff
0x73b: V701 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x73d: M[V695] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x73e: V702 = 0x1
0x740: V703 = 0xa0
0x742: V704 = 0x2
0x744: V705 = EXP 0x2 0xa0
0x745: V706 = SUB 0x10000000000000000000000000000000000000000 0x1
0x748: V707 = AND 0xffffffffffffffffffffffffffffffffffffffff V687
0x749: V708 = 0x4
0x74c: V709 = ADD V695 0x4
0x74d: M[V709] = V707
0x751: V710 = AND 0xffffffffffffffffffffffffffffffffffffffff V688
0x752: V711 = 0x24
0x755: V712 = ADD V695 0x24
0x756: M[V712] = V710
0x757: V713 = 0x44
0x75a: V714 = ADD V695 0x44
0x75e: M[V714] = V673
0x75f: V715 = 0x64
0x761: V716 = ADD 0x64 V695
0x762: V717 = 0x20
0x764: V718 = 0x40
0x766: V719 = M[0x40]
0x769: V720 = SUB V716 V719
0x76b: V721 = 0x0
0x76f: V722 = EXTCODESIZE V685
0x770: V723 = ISZERO V722
0x771: V724 = ISZERO V723
0x772: V725 = 0x77a
0x775: JUMPI 0x77a V724
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S5, {0x0, 0xd6}, S3, V627, 0x70a08231, V652]
Stack pops: 4
Stack additions: [V673, V685, 0x23b872dd, V716, 0x20, V719, V720, V719, 0x0, V685]
Exit stack: [V13, 0xd6, V63, V64, 0x0, S5, {0x0, 0xd6}, V673, V685, 0x23b872dd, V716, 0x20, V719, V720, V719, 0x0, V685]

================================

Block 0x776
[0x776:0x779]
---
Predecessors: [0x6f5]
Successors: []
---
0x776 PUSH1 0x0
0x778 DUP1
0x779 REVERT
---
0x776: V726 = 0x0
0x779: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S11, {0x0, 0xd6}, V673, V685, 0x23b872dd, V716, 0x20, V719, V720, V719, 0x0, V685]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S11, {0x0, 0xd6}, V673, V685, 0x23b872dd, V716, 0x20, V719, V720, V719, 0x0, V685]

================================

Block 0x77a
[0x77a:0x786]
---
Predecessors: [0x6f5]
Successors: [0x787, 0x78b]
---
0x77a JUMPDEST
0x77b PUSH2 0x2c6
0x77e GAS
0x77f SUB
0x780 CALL
0x781 ISZERO
0x782 ISZERO
0x783 PUSH2 0x78b
0x786 JUMPI
---
0x77a: JUMPDEST 
0x77b: V727 = 0x2c6
0x77e: V728 = GAS
0x77f: V729 = SUB V728 0x2c6
0x780: V730 = CALL V729 V685 0x0 V719 V720 V719 0x20
0x781: V731 = ISZERO V730
0x782: V732 = ISZERO V731
0x783: V733 = 0x78b
0x786: JUMPI 0x78b V732
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S11, {0x0, 0xd6}, V673, V685, 0x23b872dd, V716, 0x20, V719, V720, V719, 0x0, V685]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S11, {0x0, 0xd6}, V673, V685, 0x23b872dd, V716]

================================

Block 0x787
[0x787:0x78a]
---
Predecessors: [0x77a]
Successors: []
---
0x787 PUSH1 0x0
0x789 DUP1
0x78a REVERT
---
0x787: V734 = 0x0
0x78a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S5, {0x0, 0xd6}, V673, V685, 0x23b872dd, V716]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S5, {0x0, 0xd6}, V673, V685, 0x23b872dd, V716]

================================

Block 0x78b
[0x78b:0x7d0]
---
Predecessors: [0x77a]
Successors: []
---
0x78b JUMPDEST
0x78c POP
0x78d POP
0x78e POP
0x78f PUSH1 0x40
0x791 MLOAD
0x792 DUP1
0x793 MLOAD
0x794 POP
0x795 POP
0x796 PUSH1 0x17
0x798 SLOAD
0x799 PUSH1 0x1
0x79b PUSH1 0xa0
0x79d PUSH1 0x2
0x79f EXP
0x7a0 SUB
0x7a1 SWAP1
0x7a2 DUP2
0x7a3 AND
0x7a4 DUP1
0x7a5 BALANCE
0x7a6 SWAP2
0x7a7 CALLER
0x7a8 AND
0x7a9 SWAP1
0x7aa PUSH1 0x0
0x7ac DUP1
0x7ad MLOAD
0x7ae PUSH1 0x20
0x7b0 PUSH2 0x9a0
0x7b3 DUP4
0x7b4 CODECOPY
0x7b5 DUP2
0x7b6 MLOAD
0x7b7 SWAP2
0x7b8 MSTORE
0x7b9 PUSH1 0x40
0x7bb MLOAD
0x7bc PUSH1 0x40
0x7be MLOAD
0x7bf DUP1
0x7c0 SWAP2
0x7c1 SUB
0x7c2 SWAP1
0x7c3 LOG4
0x7c4 PUSH1 0x0
0x7c6 SLOAD
0x7c7 PUSH1 0x1
0x7c9 PUSH1 0xa0
0x7cb PUSH1 0x2
0x7cd EXP
0x7ce SUB
0x7cf AND
0x7d0 SELFDESTRUCT
---
0x78b: JUMPDEST 
0x78f: V735 = 0x40
0x791: V736 = M[0x40]
0x793: V737 = M[V736]
0x796: V738 = 0x17
0x798: V739 = S[0x17]
0x799: V740 = 0x1
0x79b: V741 = 0xa0
0x79d: V742 = 0x2
0x79f: V743 = EXP 0x2 0xa0
0x7a0: V744 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a3: V745 = AND 0xffffffffffffffffffffffffffffffffffffffff V739
0x7a5: V746 = BALANCE V745
0x7a7: V747 = CALLER
0x7a8: V748 = AND V747 0xffffffffffffffffffffffffffffffffffffffff
0x7aa: V749 = 0x0
0x7ad: V750 = M[0x0]
0x7ae: V751 = 0x20
0x7b0: V752 = 0x9a0
0x7b4: CODECOPY 0x0 0x9a0 0x20
0x7b6: V753 = M[0x0]
0x7b8: M[0x0] = V750
0x7b9: V754 = 0x40
0x7bb: V755 = M[0x40]
0x7bc: V756 = 0x40
0x7be: V757 = M[0x40]
0x7c1: V758 = SUB V755 V757
0x7c3: LOG V757 V758 V753 V745 V748 V746
0x7c4: V759 = 0x0
0x7c6: V760 = S[0x0]
0x7c7: V761 = 0x1
0x7c9: V762 = 0xa0
0x7cb: V763 = 0x2
0x7cd: V764 = EXP 0x2 0xa0
0x7ce: V765 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7cf: V766 = AND 0xffffffffffffffffffffffffffffffffffffffff V760
0x7d0: SELFDESTRUCT V766
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S5, {0x0, 0xd6}, V673, V685, 0x23b872dd, V716]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xd6, V63, V64, 0x0, S5, {0x0, 0xd6}, V673]

================================

Block 0x7d1
[0x7d1:0x7e7]
---
Predecessors: [0x1cb]
Successors: [0x7e8, 0x7ec]
---
0x7d1 JUMPDEST
0x7d2 PUSH1 0x0
0x7d4 SLOAD
0x7d5 CALLER
0x7d6 PUSH1 0x1
0x7d8 PUSH1 0xa0
0x7da PUSH1 0x2
0x7dc EXP
0x7dd SUB
0x7de SWAP1
0x7df DUP2
0x7e0 AND
0x7e1 SWAP2
0x7e2 AND
0x7e3 EQ
0x7e4 PUSH2 0x7ec
0x7e7 JUMPI
---
0x7d1: JUMPDEST 
0x7d2: V767 = 0x0
0x7d4: V768 = S[0x0]
0x7d5: V769 = CALLER
0x7d6: V770 = 0x1
0x7d8: V771 = 0xa0
0x7da: V772 = 0x2
0x7dc: V773 = EXP 0x2 0xa0
0x7dd: V774 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e0: V775 = AND 0xffffffffffffffffffffffffffffffffffffffff V769
0x7e2: V776 = AND V768 0xffffffffffffffffffffffffffffffffffffffff
0x7e3: V777 = EQ V776 V775
0x7e4: V778 = 0x7ec
0x7e7: JUMPI 0x7ec V777
---
Entry stack: [V13, 0xd6, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V149]

================================

Block 0x7e8
[0x7e8:0x7eb]
---
Predecessors: [0x7d1]
Successors: []
---
0x7e8 PUSH1 0x0
0x7ea DUP1
0x7eb REVERT
---
0x7e8: V779 = 0x0
0x7eb: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V149]

================================

Block 0x7ec
[0x7ec:0x7f0]
---
Predecessors: [0x7d1]
Successors: [0xd6]
---
0x7ec JUMPDEST
0x7ed PUSH1 0x15
0x7ef SSTORE
0x7f0 JUMP
---
0x7ec: JUMPDEST 
0x7ed: V780 = 0x15
0x7ef: S[0x15] = V149
0x7f0: JUMP 0xd6
---
Entry stack: [V13, 0xd6, V149]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x7f1
[0x7f1:0x7ff]
---
Predecessors: [0x1e1]
Successors: [0x1e9]
---
0x7f1 JUMPDEST
0x7f2 PUSH1 0xd
0x7f4 SLOAD
0x7f5 PUSH1 0x1
0x7f7 PUSH1 0xa0
0x7f9 PUSH1 0x2
0x7fb EXP
0x7fc SUB
0x7fd AND
0x7fe DUP2
0x7ff JUMP
---
0x7f1: JUMPDEST 
0x7f2: V781 = 0xd
0x7f4: V782 = S[0xd]
0x7f5: V783 = 0x1
0x7f7: V784 = 0xa0
0x7f9: V785 = 0x2
0x7fb: V786 = EXP 0x2 0xa0
0x7fc: V787 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7fd: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff V782
0x7ff: JUMP 0x1e9
---
Entry stack: [V13, 0x1e9]
Stack pops: 1
Stack additions: [S0, V788]
Exit stack: [V13, 0x1e9, V788]

================================

Block 0x800
[0x800:0x808]
---
Predecessors: [0x210]
Successors: [0x218]
---
0x800 JUMPDEST
0x801 PUSH1 0x14
0x803 SLOAD
0x804 PUSH1 0xff
0x806 AND
0x807 DUP2
0x808 JUMP
---
0x800: JUMPDEST 
0x801: V789 = 0x14
0x803: V790 = S[0x14]
0x804: V791 = 0xff
0x806: V792 = AND 0xff V790
0x808: JUMP 0x218
---
Entry stack: [V13, 0x218]
Stack pops: 1
Stack additions: [S0, V792]
Exit stack: [V13, 0x218, V792]

================================

Block 0x809
[0x809:0x817]
---
Predecessors: [0x237]
Successors: [0x1e9]
---
0x809 JUMPDEST
0x80a PUSH1 0x0
0x80c SLOAD
0x80d PUSH1 0x1
0x80f PUSH1 0xa0
0x811 PUSH1 0x2
0x813 EXP
0x814 SUB
0x815 AND
0x816 DUP2
0x817 JUMP
---
0x809: JUMPDEST 
0x80a: V793 = 0x0
0x80c: V794 = S[0x0]
0x80d: V795 = 0x1
0x80f: V796 = 0xa0
0x811: V797 = 0x2
0x813: V798 = EXP 0x2 0xa0
0x814: V799 = SUB 0x10000000000000000000000000000000000000000 0x1
0x815: V800 = AND 0xffffffffffffffffffffffffffffffffffffffff V794
0x817: JUMP 0x1e9
---
Entry stack: [V13, 0x1e9]
Stack pops: 1
Stack additions: [S0, V800]
Exit stack: [V13, 0x1e9, V800]

================================

Block 0x818
[0x818:0x82e]
---
Predecessors: [0x24a]
Successors: [0x82f, 0x833]
---
0x818 JUMPDEST
0x819 PUSH1 0x0
0x81b SLOAD
0x81c CALLER
0x81d PUSH1 0x1
0x81f PUSH1 0xa0
0x821 PUSH1 0x2
0x823 EXP
0x824 SUB
0x825 SWAP1
0x826 DUP2
0x827 AND
0x828 SWAP2
0x829 AND
0x82a EQ
0x82b PUSH2 0x833
0x82e JUMPI
---
0x818: JUMPDEST 
0x819: V801 = 0x0
0x81b: V802 = S[0x0]
0x81c: V803 = CALLER
0x81d: V804 = 0x1
0x81f: V805 = 0xa0
0x821: V806 = 0x2
0x823: V807 = EXP 0x2 0xa0
0x824: V808 = SUB 0x10000000000000000000000000000000000000000 0x1
0x827: V809 = AND 0xffffffffffffffffffffffffffffffffffffffff V803
0x829: V810 = AND V802 0xffffffffffffffffffffffffffffffffffffffff
0x82a: V811 = EQ V810 V809
0x82b: V812 = 0x833
0x82e: JUMPI 0x833 V811
---
Entry stack: [V13, 0xd6, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V203]

================================

Block 0x82f
[0x82f:0x832]
---
Predecessors: [0x818]
Successors: []
---
0x82f PUSH1 0x0
0x831 DUP1
0x832 REVERT
---
0x82f: V813 = 0x0
0x832: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V203]

================================

Block 0x833
[0x833:0x843]
---
Predecessors: [0x818]
Successors: [0x844, 0x848]
---
0x833 JUMPDEST
0x834 PUSH1 0x1
0x836 PUSH1 0xa0
0x838 PUSH1 0x2
0x83a EXP
0x83b SUB
0x83c DUP2
0x83d AND
0x83e ISZERO
0x83f ISZERO
0x840 PUSH2 0x848
0x843 JUMPI
---
0x833: JUMPDEST 
0x834: V814 = 0x1
0x836: V815 = 0xa0
0x838: V816 = 0x2
0x83a: V817 = EXP 0x2 0xa0
0x83b: V818 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83d: V819 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x83e: V820 = ISZERO V819
0x83f: V821 = ISZERO V820
0x840: V822 = 0x848
0x843: JUMPI 0x848 V821
---
Entry stack: [V13, 0xd6, V203]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xd6, V203]

================================

Block 0x844
[0x844:0x847]
---
Predecessors: [0x833]
Successors: []
---
0x844 PUSH1 0x0
0x846 DUP1
0x847 REVERT
---
0x844: V823 = 0x0
0x847: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V203]

================================

Block 0x848
[0x848:0x85e]
---
Predecessors: [0x833]
Successors: [0x85f, 0x863]
---
0x848 JUMPDEST
0x849 PUSH1 0x0
0x84b SLOAD
0x84c PUSH1 0x1
0x84e PUSH1 0xa0
0x850 PUSH1 0x2
0x852 EXP
0x853 SUB
0x854 DUP3
0x855 DUP2
0x856 AND
0x857 SWAP2
0x858 AND
0x859 EQ
0x85a ISZERO
0x85b PUSH2 0x863
0x85e JUMPI
---
0x848: JUMPDEST 
0x849: V824 = 0x0
0x84b: V825 = S[0x0]
0x84c: V826 = 0x1
0x84e: V827 = 0xa0
0x850: V828 = 0x2
0x852: V829 = EXP 0x2 0xa0
0x853: V830 = SUB 0x10000000000000000000000000000000000000000 0x1
0x856: V831 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x858: V832 = AND V825 0xffffffffffffffffffffffffffffffffffffffff
0x859: V833 = EQ V832 V831
0x85a: V834 = ISZERO V833
0x85b: V835 = 0x863
0x85e: JUMPI 0x863 V834
---
Entry stack: [V13, 0xd6, V203]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xd6, V203]

================================

Block 0x85f
[0x85f:0x862]
---
Predecessors: [0x848]
Successors: []
---
0x85f PUSH1 0x0
0x861 DUP1
0x862 REVERT
---
0x85f: V836 = 0x0
0x862: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6, V203]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6, V203]

================================

Block 0x863
[0x863:0x8cd]
---
Predecessors: [0x848]
Successors: [0xd6]
---
0x863 JUMPDEST
0x864 PUSH1 0x0
0x866 SLOAD
0x867 PUSH1 0x1
0x869 PUSH1 0xa0
0x86b PUSH1 0x2
0x86d EXP
0x86e SUB
0x86f DUP1
0x870 DUP4
0x871 AND
0x872 SWAP2
0x873 AND
0x874 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x895 PUSH1 0x40
0x897 MLOAD
0x898 PUSH1 0x40
0x89a MLOAD
0x89b DUP1
0x89c SWAP2
0x89d SUB
0x89e SWAP1
0x89f LOG3
0x8a0 PUSH1 0x0
0x8a2 DUP1
0x8a3 SLOAD
0x8a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b9 NOT
0x8ba AND
0x8bb PUSH1 0x1
0x8bd PUSH1 0xa0
0x8bf PUSH1 0x2
0x8c1 EXP
0x8c2 SUB
0x8c3 SWAP3
0x8c4 SWAP1
0x8c5 SWAP3
0x8c6 AND
0x8c7 SWAP2
0x8c8 SWAP1
0x8c9 SWAP2
0x8ca OR
0x8cb SWAP1
0x8cc SSTORE
0x8cd JUMP
---
0x863: JUMPDEST 
0x864: V837 = 0x0
0x866: V838 = S[0x0]
0x867: V839 = 0x1
0x869: V840 = 0xa0
0x86b: V841 = 0x2
0x86d: V842 = EXP 0x2 0xa0
0x86e: V843 = SUB 0x10000000000000000000000000000000000000000 0x1
0x871: V844 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x873: V845 = AND V838 0xffffffffffffffffffffffffffffffffffffffff
0x874: V846 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x895: V847 = 0x40
0x897: V848 = M[0x40]
0x898: V849 = 0x40
0x89a: V850 = M[0x40]
0x89d: V851 = SUB V848 V850
0x89f: LOG V850 V851 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V845 V844
0x8a0: V852 = 0x0
0x8a3: V853 = S[0x0]
0x8a4: V854 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b9: V855 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x8ba: V856 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V853
0x8bb: V857 = 0x1
0x8bd: V858 = 0xa0
0x8bf: V859 = 0x2
0x8c1: V860 = EXP 0x2 0xa0
0x8c2: V861 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c6: V862 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x8ca: V863 = OR V862 V856
0x8cc: S[0x0] = V863
0x8cd: JUMP 0xd6
---
Entry stack: [V13, 0xd6, V203]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x8ce
[0x8ce:0x8d3]
---
Predecessors: [0x269]
Successors: [0x175]
---
0x8ce JUMPDEST
0x8cf PUSH1 0x13
0x8d1 SLOAD
0x8d2 DUP2
0x8d3 JUMP
---
0x8ce: JUMPDEST 
0x8cf: V864 = 0x13
0x8d1: V865 = S[0x13]
0x8d3: JUMP 0x175
---
Entry stack: [V13, 0x175]
Stack pops: 1
Stack additions: [S0, V865]
Exit stack: [V13, 0x175, V865]

================================

Block 0x8d4
[0x8d4:0x8d9]
---
Predecessors: [0x27c]
Successors: [0x175]
---
0x8d4 JUMPDEST
0x8d5 PUSH1 0x15
0x8d7 SLOAD
0x8d8 DUP2
0x8d9 JUMP
---
0x8d4: JUMPDEST 
0x8d5: V866 = 0x15
0x8d7: V867 = S[0x15]
0x8d9: JUMP 0x175
---
Entry stack: [V13, 0x175]
Stack pops: 1
Stack additions: [S0, V867]
Exit stack: [V13, 0x175, V867]

================================

Block 0x8da
[0x8da:0x8df]
---
Predecessors: [0x28f]
Successors: [0x175]
---
0x8da JUMPDEST
0x8db PUSH1 0x10
0x8dd SLOAD
0x8de DUP2
0x8df JUMP
---
0x8da: JUMPDEST 
0x8db: V868 = 0x10
0x8dd: V869 = S[0x10]
0x8df: JUMP 0x175
---
Entry stack: [V13, 0x175]
Stack pops: 1
Stack additions: [S0, V869]
Exit stack: [V13, 0x175, V869]

================================

Block 0x8e0
[0x8e0:0x8e7]
---
Predecessors: [0x2a2]
Successors: [0x175]
---
0x8e0 JUMPDEST
0x8e1 PUSH4 0x5ad92d80
0x8e6 DUP2
0x8e7 JUMP
---
0x8e0: JUMPDEST 
0x8e1: V870 = 0x5ad92d80
0x8e7: JUMP 0x175
---
Entry stack: [V13, 0x175]
Stack pops: 1
Stack additions: [S0, 0x5ad92d80]
Exit stack: [V13, 0x175, 0x5ad92d80]

================================

Block 0x8e8
[0x8e8:0x8f8]
---
Predecessors: [0x2b5, 0x2d0, 0x63c]
Successors: [0x8f9, 0x901]
---
0x8e8 JUMPDEST
0x8e9 PUSH1 0x0
0x8eb TIMESTAMP
0x8ec PUSH4 0x5ad92d80
0x8f1 GT
0x8f2 ISZERO
0x8f3 DUP1
0x8f4 ISZERO
0x8f5 PUSH2 0x901
0x8f8 JUMPI
---
0x8e8: JUMPDEST 
0x8e9: V871 = 0x0
0x8eb: V872 = TIMESTAMP
0x8ec: V873 = 0x5ad92d80
0x8f1: V874 = GT 0x5ad92d80 V872
0x8f2: V875 = ISZERO V874
0x8f4: V876 = ISZERO V875
0x8f5: V877 = 0x901
0x8f8: JUMPI 0x901 V876
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S3, {0x0, 0xd6}, S1, {0x218, 0x2de, 0x644}]
Stack pops: 0
Stack additions: [0x0, V875]
Exit stack: [V13, 0xd6, V63, V64, 0x0, S3, {0x0, 0xd6}, S1, {0x218, 0x2de, 0x644}, 0x0, V875]

================================

Block 0x8f9
[0x8f9:0x900]
---
Predecessors: [0x8e8]
Successors: [0x901]
---
0x8f9 POP
0x8fa PUSH4 0x5b299900
0x8ff TIMESTAMP
0x900 LT
---
0x8fa: V878 = 0x5b299900
0x8ff: V879 = TIMESTAMP
0x900: V880 = LT V879 0x5b299900
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S5, {0x0, 0xd6}, S3, {0x218, 0x2de, 0x644}, 0x0, V875]
Stack pops: 1
Stack additions: [V880]
Exit stack: [V13, 0xd6, V63, V64, 0x0, S5, {0x0, 0xd6}, S3, {0x218, 0x2de, 0x644}, 0x0, V880]

================================

Block 0x901
[0x901:0x907]
---
Predecessors: [0x8e8, 0x8f9]
Successors: [0x908, 0x910]
---
0x901 JUMPDEST
0x902 DUP1
0x903 ISZERO
0x904 PUSH2 0x910
0x907 JUMPI
---
0x901: JUMPDEST 
0x903: V881 = ISZERO S0
0x904: V882 = 0x910
0x907: JUMPI 0x910 V881
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S5, {0x0, 0xd6}, S3, {0x218, 0x2de, 0x644}, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xd6, V63, V64, 0x0, S5, {0x0, 0xd6}, S3, {0x218, 0x2de, 0x644}, 0x0, S0]

================================

Block 0x908
[0x908:0x90f]
---
Predecessors: [0x901]
Successors: [0x910]
---
0x908 POP
0x909 PUSH1 0x14
0x90b SLOAD
0x90c PUSH1 0xff
0x90e AND
0x90f ISZERO
---
0x909: V883 = 0x14
0x90b: V884 = S[0x14]
0x90c: V885 = 0xff
0x90e: V886 = AND 0xff V884
0x90f: V887 = ISZERO V886
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S5, {0x0, 0xd6}, S3, {0x218, 0x2de, 0x644}, 0x0, S0]
Stack pops: 1
Stack additions: [V887]
Exit stack: [V13, 0xd6, V63, V64, 0x0, S5, {0x0, 0xd6}, S3, {0x218, 0x2de, 0x644}, 0x0, V887]

================================

Block 0x910
[0x910:0x914]
---
Predecessors: [0x901, 0x908]
Successors: [0x218, 0x2de, 0x644]
---
0x910 JUMPDEST
0x911 SWAP1
0x912 POP
0x913 SWAP1
0x914 JUMP
---
0x910: JUMPDEST 
0x914: JUMP {0x218, 0x2de, 0x644}
---
Entry stack: [V13, 0xd6, V63, V64, 0x0, S5, {0x0, 0xd6}, S3, {0x218, 0x2de, 0x644}, 0x0, S0]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V13, 0xd6, V63, V64, 0x0, S5, {0x0, 0xd6}, S3, S0]

================================

Block 0x915
[0x915:0x92b]
---
Predecessors: [0x2c8]
Successors: [0x92c, 0x930]
---
0x915 JUMPDEST
0x916 PUSH1 0x0
0x918 SLOAD
0x919 CALLER
0x91a PUSH1 0x1
0x91c PUSH1 0xa0
0x91e PUSH1 0x2
0x920 EXP
0x921 SUB
0x922 SWAP1
0x923 DUP2
0x924 AND
0x925 SWAP2
0x926 AND
0x927 EQ
0x928 PUSH2 0x930
0x92b JUMPI
---
0x915: JUMPDEST 
0x916: V888 = 0x0
0x918: V889 = S[0x0]
0x919: V890 = CALLER
0x91a: V891 = 0x1
0x91c: V892 = 0xa0
0x91e: V893 = 0x2
0x920: V894 = EXP 0x2 0xa0
0x921: V895 = SUB 0x10000000000000000000000000000000000000000 0x1
0x924: V896 = AND 0xffffffffffffffffffffffffffffffffffffffff V890
0x926: V897 = AND V889 0xffffffffffffffffffffffffffffffffffffffff
0x927: V898 = EQ V897 V896
0x928: V899 = 0x930
0x92b: JUMPI 0x930 V898
---
Entry stack: [V13, 0xd6]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6]

================================

Block 0x92c
[0x92c:0x92f]
---
Predecessors: [0x915]
Successors: []
---
0x92c PUSH1 0x0
0x92e DUP1
0x92f REVERT
---
0x92c: V900 = 0x0
0x92f: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6]

================================

Block 0x930
[0x930:0x966]
---
Predecessors: [0x915]
Successors: [0x967, 0x96b]
---
0x930 JUMPDEST
0x931 PUSH1 0xd
0x933 SLOAD
0x934 PUSH1 0x17
0x936 SLOAD
0x937 PUSH1 0x1
0x939 PUSH1 0xa0
0x93b PUSH1 0x2
0x93d EXP
0x93e SUB
0x93f SWAP2
0x940 DUP3
0x941 AND
0x942 SWAP2
0x943 AND
0x944 BALANCE
0x945 DUP1
0x946 ISZERO
0x947 PUSH2 0x8fc
0x94a MUL
0x94b SWAP1
0x94c PUSH1 0x40
0x94e MLOAD
0x94f PUSH1 0x0
0x951 PUSH1 0x40
0x953 MLOAD
0x954 DUP1
0x955 DUP4
0x956 SUB
0x957 DUP2
0x958 DUP6
0x959 DUP9
0x95a DUP9
0x95b CALL
0x95c SWAP4
0x95d POP
0x95e POP
0x95f POP
0x960 POP
0x961 ISZERO
0x962 ISZERO
0x963 PUSH2 0x96b
0x966 JUMPI
---
0x930: JUMPDEST 
0x931: V901 = 0xd
0x933: V902 = S[0xd]
0x934: V903 = 0x17
0x936: V904 = S[0x17]
0x937: V905 = 0x1
0x939: V906 = 0xa0
0x93b: V907 = 0x2
0x93d: V908 = EXP 0x2 0xa0
0x93e: V909 = SUB 0x10000000000000000000000000000000000000000 0x1
0x941: V910 = AND 0xffffffffffffffffffffffffffffffffffffffff V902
0x943: V911 = AND 0xffffffffffffffffffffffffffffffffffffffff V904
0x944: V912 = BALANCE V911
0x946: V913 = ISZERO V912
0x947: V914 = 0x8fc
0x94a: V915 = MUL 0x8fc V913
0x94c: V916 = 0x40
0x94e: V917 = M[0x40]
0x94f: V918 = 0x0
0x951: V919 = 0x40
0x953: V920 = M[0x40]
0x956: V921 = SUB V917 V920
0x95b: V922 = CALL V915 V910 V912 V920 V921 V920 0x0
0x961: V923 = ISZERO V922
0x962: V924 = ISZERO V923
0x963: V925 = 0x96b
0x966: JUMPI 0x96b V924
---
Entry stack: [V13, 0xd6]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6]

================================

Block 0x967
[0x967:0x96a]
---
Predecessors: [0x930]
Successors: []
---
0x967 PUSH1 0x0
0x969 DUP1
0x96a REVERT
---
0x967: V926 = 0x0
0x96a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd6]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd6]

================================

Block 0x96b
[0x96b:0x99e]
---
Predecessors: [0x930]
Successors: [0xd6]
---
0x96b JUMPDEST
0x96c PUSH1 0x17
0x96e SLOAD
0x96f PUSH1 0xd
0x971 SLOAD
0x972 PUSH1 0x1
0x974 PUSH1 0xa0
0x976 PUSH1 0x2
0x978 EXP
0x979 SUB
0x97a SWAP2
0x97b DUP3
0x97c AND
0x97d DUP1
0x97e BALANCE
0x97f SWAP3
0x980 SWAP1
0x981 SWAP2
0x982 AND
0x983 SWAP1
0x984 PUSH1 0x0
0x986 DUP1
0x987 MLOAD
0x988 PUSH1 0x20
0x98a PUSH2 0x9a0
0x98d DUP4
0x98e CODECOPY
0x98f DUP2
0x990 MLOAD
0x991 SWAP2
0x992 MSTORE
0x993 PUSH1 0x40
0x995 MLOAD
0x996 PUSH1 0x40
0x998 MLOAD
0x999 DUP1
0x99a SWAP2
0x99b SUB
0x99c SWAP1
0x99d LOG4
0x99e JUMP
---
0x96b: JUMPDEST 
0x96c: V927 = 0x17
0x96e: V928 = S[0x17]
0x96f: V929 = 0xd
0x971: V930 = S[0xd]
0x972: V931 = 0x1
0x974: V932 = 0xa0
0x976: V933 = 0x2
0x978: V934 = EXP 0x2 0xa0
0x979: V935 = SUB 0x10000000000000000000000000000000000000000 0x1
0x97c: V936 = AND 0xffffffffffffffffffffffffffffffffffffffff V928
0x97e: V937 = BALANCE V936
0x982: V938 = AND V930 0xffffffffffffffffffffffffffffffffffffffff
0x984: V939 = 0x0
0x987: V940 = M[0x0]
0x988: V941 = 0x20
0x98a: V942 = 0x9a0
0x98e: CODECOPY 0x0 0x9a0 0x20
0x990: V943 = M[0x0]
0x992: M[0x0] = V940
0x993: V944 = 0x40
0x995: V945 = M[0x40]
0x996: V946 = 0x40
0x998: V947 = M[0x40]
0x99b: V948 = SUB V945 V947
0x99d: LOG V947 V948 V943 V936 V938 V937
0x99e: JUMP 0xd6
---
Entry stack: [V13, 0xd6]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x99f
[0x99f:0x9a6]
---
Predecessors: []
Successors: [0x9a7]
Has unresolved jump.
---
0x99f STOP
0x9a0 SWAP15
0x9a1 MISSING 0xfb
0x9a2 MISSING 0xae
0x9a3 DUP2
0x9a4 MISSING 0x47
0x9a5 MISSING 0xa8
0x9a6 JUMPI
---
0x99f: STOP 
0x9a1: MISSING 0xfb
0x9a2: MISSING 0xae
0x9a4: MISSING 0x47
0x9a5: MISSING 0xa8
0x9a6: JUMPI S0 S1
---
Entry stack: []
Stack pops: 0
Stack additions: [S15, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S0, S1, S0, S1]
Exit stack: []

================================

Block 0x9a7
[0x9a7:0x9f1]
---
Predecessors: [0x99f]
Successors: []
---
0x9a7 PUSH28 0x5a4714ecf53a64fe21e6f76ee4931cbfa7859c560234e025a165627a
0x9c4 PUSH27 0x7230582003a3ad20f4981eae894c27a14bb34ef7ec72ff8370e811
0x9e0 PUSH17 0xfd9b9158f2db00029
---
0x9a7: V949 = 0x5a4714ecf53a64fe21e6f76ee4931cbfa7859c560234e025a165627a
0x9c4: V950 = 0x7230582003a3ad20f4981eae894c27a14bb34ef7ec72ff8370e811
0x9e0: V951 = 0xfd9b9158f2db00029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x5a4714ecf53a64fe21e6f76ee4931cbfa7859c560234e025a165627a, 0x7230582003a3ad20f4981eae894c27a14bb34ef7ec72ff8370e811, 0xfd9b9158f2db00029]
Exit stack: [0x5a4714ecf53a64fe21e6f76ee4931cbfa7859c560234e025a165627a, 0x7230582003a3ad20f4981eae894c27a14bb34ef7ec72ff8370e811, 0xfd9b9158f2db00029]

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xd8
Exit block: 0x154
Body: 0xd8, 0xdf, 0xe3, 0xeb, 0x10f, 0x118, 0x127, 0x13b, 0x154, 0x56e, 0x5be, 0x5c6, 0x5d9, 0x5e7, 0x5fb, 0x604

Function 1:
Public function signature: 0x1e2def3a
Entry block: 0x162
Exit block: 0x175
Body: 0x162, 0x169, 0x16d, 0x175, 0x60c

Function 2:
Public function signature: 0x3763d4b4
Entry block: 0x187
Exit block: 0x175
Body: 0x175, 0x187, 0x18e, 0x192, 0x612

Function 3:
Public function signature: 0x3c276d86
Entry block: 0x19a
Exit block: 0x175
Body: 0x175, 0x19a, 0x1a1, 0x1a5, 0x61a

Function 4:
Public function signature: 0x41c0e1b5
Entry block: 0x1ad
Exit block: 0x78b
Body: 0x1ad, 0x1b4, 0x1b8, 0x620, 0x638, 0x63c, 0x644, 0x64a, 0x64e, 0x666, 0x66a, 0x677, 0x684, 0x6e0, 0x6e4, 0x6f1, 0x6f5, 0x776, 0x77a, 0x787, 0x78b

Function 5:
Public function signature: 0x61241c28
Entry block: 0x1c0
Exit block: 0xd6
Body: 0xd6, 0x1c0, 0x1c7, 0x1cb, 0x7d1, 0x7e8, 0x7ec

Function 6:
Public function signature: 0x76cdb03b
Entry block: 0x1d6
Exit block: 0x1e9
Body: 0x1d6, 0x1dd, 0x1e1, 0x1e9, 0x7f1

Function 7:
Public function signature: 0x7d3d6522
Entry block: 0x205
Exit block: 0x218
Body: 0x205, 0x20c, 0x210, 0x218, 0x800

Function 8:
Public function signature: 0x8da5cb5b
Entry block: 0x22c
Exit block: 0x1e9
Body: 0x1e9, 0x22c, 0x233, 0x237, 0x809

Function 9:
Public function signature: 0xa6f9dae1
Entry block: 0x23f
Exit block: 0xd6
Body: 0xd6, 0x23f, 0x246, 0x24a, 0x818, 0x82f, 0x833, 0x844, 0x848, 0x85f, 0x863

Function 10:
Public function signature: 0xc7c049fc
Entry block: 0x25e
Exit block: 0x175
Body: 0x175, 0x25e, 0x265, 0x269, 0x8ce

Function 11:
Public function signature: 0xcbdd69b5
Entry block: 0x271
Exit block: 0x175
Body: 0x175, 0x271, 0x278, 0x27c, 0x8d4

Function 12:
Public function signature: 0xe29eb836
Entry block: 0x284
Exit block: 0x175
Body: 0x175, 0x284, 0x28b, 0x28f, 0x8da

Function 13:
Public function signature: 0xf069629c
Entry block: 0x297
Exit block: 0x175
Body: 0x175, 0x297, 0x29e, 0x2a2, 0x8e0

Function 14:
Public function signature: 0xf6933c7d
Entry block: 0x2aa
Exit block: 0x2b1
Body: 0x218, 0x2aa, 0x2b1, 0x2b5

Function 15:
Public function signature: 0xfd6b7ef8
Entry block: 0x2bd
Exit block: 0xd6
Body: 0xd6, 0x2bd, 0x2c4, 0x2c8, 0x915, 0x92c, 0x930, 0x967, 0x96b

Function 16:
Public fallback function
Entry block: 0xcc
Exit block: 0xd6
Body: 0xcc, 0xd6, 0x2d0, 0x2de, 0x2e5, 0x2e9, 0x2f2, 0x2f3, 0x397, 0x39b, 0x3a8, 0x3ac, 0x3be, 0x3bf, 0x3ca, 0x3dc, 0x3f2, 0x3f3, 0x470, 0x474, 0x481, 0x485, 0x4df, 0x50b, 0x50f, 0x53f

Function 17:
Private function
Entry block: 0x8e8
Exit block: 0x910
Body: 0x8e8, 0x8f9, 0x901, 0x908, 0x910

