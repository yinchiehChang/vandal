Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x11bcd830
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x11bcd830
0x3c: V13 = EQ 0x11bcd830 V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x8d]
---
0x41 DUP1
0x42 PUSH4 0x27e235e3
0x47 EQ
0x48 PUSH2 0x8d
0x4b JUMPI
---
0x42: V15 = 0x27e235e3
0x47: V16 = EQ 0x27e235e3 V11
0x48: V17 = 0x8d
0x4b: JUMPI 0x8d V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xda]
---
0x4c DUP1
0x4d PUSH4 0x9ffa0711
0x52 EQ
0x53 PUSH2 0xda
0x56 JUMPI
---
0x4d: V18 = 0x9ffa0711
0x52: V19 = EQ 0x9ffa0711 V11
0x53: V20 = 0xda
0x56: JUMPI 0xda V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xf2]
---
0x57 DUP1
0x58 PUSH4 0xed21248c
0x5d EQ
0x5e PUSH2 0xf2
0x61 JUMPI
---
0x58: V21 = 0xed21248c
0x5d: V22 = EQ 0xed21248c V11
0x5e: V23 = 0xf2
0x61: JUMPI 0xf2 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6a]
---
Predecessors: [0xd]
Successors: [0x6b, 0x6f]
---
0x64 JUMPDEST
0x65 CALLVALUE
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x64: JUMPDEST 
0x65: V24 = CALLVALUE
0x66: V25 = ISZERO V24
0x67: V26 = 0x6f
0x6a: JUMPI 0x6f V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x64]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V27 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0x64]
Successors: [0xfc]
---
0x6f JUMPDEST
0x70 PUSH2 0x77
0x73 PUSH2 0xfc
0x76 JUMP
---
0x6f: JUMPDEST 
0x70: V28 = 0x77
0x73: V29 = 0xfc
0x76: JUMP 0xfc
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x77
[0x77:0x8c]
---
Predecessors: [0xfc]
Successors: []
---
0x77 JUMPDEST
0x78 PUSH1 0x40
0x7a MLOAD
0x7b DUP1
0x7c DUP3
0x7d DUP2
0x7e MSTORE
0x7f PUSH1 0x20
0x81 ADD
0x82 SWAP2
0x83 POP
0x84 POP
0x85 PUSH1 0x40
0x87 MLOAD
0x88 DUP1
0x89 SWAP2
0x8a SUB
0x8b SWAP1
0x8c RETURN
---
0x77: JUMPDEST 
0x78: V30 = 0x40
0x7a: V31 = M[0x40]
0x7e: M[V31] = V65
0x7f: V32 = 0x20
0x81: V33 = ADD 0x20 V31
0x85: V34 = 0x40
0x87: V35 = M[0x40]
0x8a: V36 = SUB V33 V35
0x8c: RETURN V35 V36
---
Entry stack: [V11, 0x77, V65]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x8d
[0x8d:0x93]
---
Predecessors: [0x41]
Successors: [0x94, 0x98]
---
0x8d JUMPDEST
0x8e CALLVALUE
0x8f ISZERO
0x90 PUSH2 0x98
0x93 JUMPI
---
0x8d: JUMPDEST 
0x8e: V37 = CALLVALUE
0x8f: V38 = ISZERO V37
0x90: V39 = 0x98
0x93: JUMPI 0x98 V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x94
[0x94:0x97]
---
Predecessors: [0x8d]
Successors: []
---
0x94 PUSH1 0x0
0x96 DUP1
0x97 REVERT
---
0x94: V40 = 0x0
0x97: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x98
[0x98:0xc3]
---
Predecessors: [0x8d]
Successors: [0x102]
---
0x98 JUMPDEST
0x99 PUSH2 0xc4
0x9c PUSH1 0x4
0x9e DUP1
0x9f DUP1
0xa0 CALLDATALOAD
0xa1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb6 AND
0xb7 SWAP1
0xb8 PUSH1 0x20
0xba ADD
0xbb SWAP1
0xbc SWAP2
0xbd SWAP1
0xbe POP
0xbf POP
0xc0 PUSH2 0x102
0xc3 JUMP
---
0x98: JUMPDEST 
0x99: V41 = 0xc4
0x9c: V42 = 0x4
0xa0: V43 = CALLDATALOAD 0x4
0xa1: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xb6: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xb8: V46 = 0x20
0xba: V47 = ADD 0x20 0x4
0xc0: V48 = 0x102
0xc3: JUMP 0x102
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc4, V45]
Exit stack: [V11, 0xc4, V45]

================================

Block 0xc4
[0xc4:0xd9]
---
Predecessors: [0x102]
Successors: []
---
0xc4 JUMPDEST
0xc5 PUSH1 0x40
0xc7 MLOAD
0xc8 DUP1
0xc9 DUP3
0xca DUP2
0xcb MSTORE
0xcc PUSH1 0x20
0xce ADD
0xcf SWAP2
0xd0 POP
0xd1 POP
0xd2 PUSH1 0x40
0xd4 MLOAD
0xd5 DUP1
0xd6 SWAP2
0xd7 SUB
0xd8 SWAP1
0xd9 RETURN
---
0xc4: JUMPDEST 
0xc5: V49 = 0x40
0xc7: V50 = M[0x40]
0xcb: M[V50] = V73
0xcc: V51 = 0x20
0xce: V52 = ADD 0x20 V50
0xd2: V53 = 0x40
0xd4: V54 = M[0x40]
0xd7: V55 = SUB V52 V54
0xd9: RETURN V54 V55
---
Entry stack: [V11, 0xc4, V73]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc4]

================================

Block 0xda
[0xda:0xef]
---
Predecessors: [0x4c]
Successors: [0x11a]
---
0xda JUMPDEST
0xdb PUSH2 0xf0
0xde PUSH1 0x4
0xe0 DUP1
0xe1 DUP1
0xe2 CALLDATALOAD
0xe3 SWAP1
0xe4 PUSH1 0x20
0xe6 ADD
0xe7 SWAP1
0xe8 SWAP2
0xe9 SWAP1
0xea POP
0xeb POP
0xec PUSH2 0x11a
0xef JUMP
---
0xda: JUMPDEST 
0xdb: V56 = 0xf0
0xde: V57 = 0x4
0xe2: V58 = CALLDATALOAD 0x4
0xe4: V59 = 0x20
0xe6: V60 = ADD 0x20 0x4
0xec: V61 = 0x11a
0xef: JUMP 0x11a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xf0, V58]
Exit stack: [V11, 0xf0, V58]

================================

Block 0xf0
[0xf0:0xf1]
---
Predecessors: [0x2f5]
Successors: []
---
0xf0 JUMPDEST
0xf1 STOP
---
0xf0: JUMPDEST 
0xf1: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf2
[0xf2:0xf9]
---
Predecessors: [0x57]
Successors: [0x2f8]
---
0xf2 JUMPDEST
0xf3 PUSH2 0xfa
0xf6 PUSH2 0x2f8
0xf9 JUMP
---
0xf2: JUMPDEST 
0xf3: V62 = 0xfa
0xf6: V63 = 0x2f8
0xf9: JUMP 0x2f8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfa]
Exit stack: [V11, 0xfa]

================================

Block 0xfa
[0xfa:0xfb]
---
Predecessors: [0x460]
Successors: []
---
0xfa JUMPDEST
0xfb STOP
---
0xfa: JUMPDEST 
0xfb: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfc
[0xfc:0x101]
---
Predecessors: [0x6f]
Successors: [0x77]
---
0xfc JUMPDEST
0xfd PUSH1 0x2
0xff SLOAD
0x100 DUP2
0x101 JUMP
---
0xfc: JUMPDEST 
0xfd: V64 = 0x2
0xff: V65 = S[0x2]
0x101: JUMP 0x77
---
Entry stack: [V11, 0x77]
Stack pops: 1
Stack additions: [S0, V65]
Exit stack: [V11, 0x77, V65]

================================

Block 0x102
[0x102:0x119]
---
Predecessors: [0x98]
Successors: [0xc4]
---
0x102 JUMPDEST
0x103 PUSH1 0x0
0x105 PUSH1 0x20
0x107 MSTORE
0x108 DUP1
0x109 PUSH1 0x0
0x10b MSTORE
0x10c PUSH1 0x40
0x10e PUSH1 0x0
0x110 SHA3
0x111 PUSH1 0x0
0x113 SWAP2
0x114 POP
0x115 SWAP1
0x116 POP
0x117 SLOAD
0x118 DUP2
0x119 JUMP
---
0x102: JUMPDEST 
0x103: V66 = 0x0
0x105: V67 = 0x20
0x107: M[0x20] = 0x0
0x109: V68 = 0x0
0x10b: M[0x0] = V45
0x10c: V69 = 0x40
0x10e: V70 = 0x0
0x110: V71 = SHA3 0x0 0x40
0x111: V72 = 0x0
0x117: V73 = S[V71]
0x119: JUMP 0xc4
---
Entry stack: [V11, 0xc4, V45]
Stack pops: 2
Stack additions: [S1, V73]
Exit stack: [V11, 0xc4, V73]

================================

Block 0x11a
[0x11a:0x161]
---
Predecessors: [0xda]
Successors: [0x162, 0x2f5]
---
0x11a JUMPDEST
0x11b PUSH1 0x0
0x11d DUP1
0x11e CALLER
0x11f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x134 AND
0x135 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14a AND
0x14b DUP2
0x14c MSTORE
0x14d PUSH1 0x20
0x14f ADD
0x150 SWAP1
0x151 DUP2
0x152 MSTORE
0x153 PUSH1 0x20
0x155 ADD
0x156 PUSH1 0x0
0x158 SHA3
0x159 SLOAD
0x15a DUP2
0x15b GT
0x15c ISZERO
0x15d ISZERO
0x15e PUSH2 0x2f5
0x161 JUMPI
---
0x11a: JUMPDEST 
0x11b: V74 = 0x0
0x11e: V75 = CALLER
0x11f: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x134: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x135: V78 = 0xffffffffffffffffffffffffffffffffffffffff
0x14a: V79 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x14c: M[0x0] = V79
0x14d: V80 = 0x20
0x14f: V81 = ADD 0x20 0x0
0x152: M[0x20] = 0x0
0x153: V82 = 0x20
0x155: V83 = ADD 0x20 0x20
0x156: V84 = 0x0
0x158: V85 = SHA3 0x0 0x40
0x159: V86 = S[V85]
0x15b: V87 = GT V58 V86
0x15c: V88 = ISZERO V87
0x15d: V89 = ISZERO V88
0x15e: V90 = 0x2f5
0x161: JUMPI 0x2f5 V89
---
Entry stack: [V11, 0xf0, V58]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xf0, V58]

================================

Block 0x162
[0x162:0x196]
---
Predecessors: [0x11a]
Successors: [0x197, 0x2f4]
---
0x162 CALLER
0x163 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x178 AND
0x179 DUP2
0x17a PUSH1 0x40
0x17c MLOAD
0x17d PUSH1 0x0
0x17f PUSH1 0x40
0x181 MLOAD
0x182 DUP1
0x183 DUP4
0x184 SUB
0x185 DUP2
0x186 DUP6
0x187 DUP8
0x188 PUSH2 0x8796
0x18b GAS
0x18c SUB
0x18d CALL
0x18e SWAP3
0x18f POP
0x190 POP
0x191 POP
0x192 ISZERO
0x193 PUSH2 0x2f4
0x196 JUMPI
---
0x162: V91 = CALLER
0x163: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x178: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x17a: V94 = 0x40
0x17c: V95 = M[0x40]
0x17d: V96 = 0x0
0x17f: V97 = 0x40
0x181: V98 = M[0x40]
0x184: V99 = SUB V95 V98
0x188: V100 = 0x8796
0x18b: V101 = GAS
0x18c: V102 = SUB V101 0x8796
0x18d: V103 = CALL V102 V93 V58 V98 V99 V98 0x0
0x192: V104 = ISZERO V103
0x193: V105 = 0x2f4
0x196: JUMPI 0x2f4 V104
---
Entry stack: [V11, 0xf0, V58]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xf0, V58]

================================

Block 0x197
[0x197:0x2da]
---
Predecessors: [0x162]
Successors: [0x2db, 0x2df]
---
0x197 DUP1
0x198 PUSH1 0x0
0x19a DUP1
0x19b CALLER
0x19c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b1 AND
0x1b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c7 AND
0x1c8 DUP2
0x1c9 MSTORE
0x1ca PUSH1 0x20
0x1cc ADD
0x1cd SWAP1
0x1ce DUP2
0x1cf MSTORE
0x1d0 PUSH1 0x20
0x1d2 ADD
0x1d3 PUSH1 0x0
0x1d5 SHA3
0x1d6 PUSH1 0x0
0x1d8 DUP3
0x1d9 DUP3
0x1da SLOAD
0x1db SUB
0x1dc SWAP3
0x1dd POP
0x1de POP
0x1df DUP2
0x1e0 SWAP1
0x1e1 SSTORE
0x1e2 POP
0x1e3 PUSH1 0x1
0x1e5 PUSH1 0x0
0x1e7 SWAP1
0x1e8 SLOAD
0x1e9 SWAP1
0x1ea PUSH2 0x100
0x1ed EXP
0x1ee SWAP1
0x1ef DIV
0x1f0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x205 AND
0x206 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21b AND
0x21c PUSH4 0x4c2f04a4
0x221 CALLER
0x222 DUP4
0x223 PUSH1 0x40
0x225 MLOAD
0x226 DUP4
0x227 PUSH4 0xffffffff
0x22c AND
0x22d PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x24b MUL
0x24c DUP2
0x24d MSTORE
0x24e PUSH1 0x4
0x250 ADD
0x251 DUP1
0x252 DUP4
0x253 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x268 AND
0x269 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27e AND
0x27f DUP2
0x280 MSTORE
0x281 PUSH1 0x20
0x283 ADD
0x284 DUP3
0x285 DUP2
0x286 MSTORE
0x287 PUSH1 0x20
0x289 ADD
0x28a DUP1
0x28b PUSH1 0x20
0x28d ADD
0x28e DUP3
0x28f DUP2
0x290 SUB
0x291 DUP3
0x292 MSTORE
0x293 PUSH1 0x7
0x295 DUP2
0x296 MSTORE
0x297 PUSH1 0x20
0x299 ADD
0x29a DUP1
0x29b PUSH32 0x436173684f757400000000000000000000000000000000000000000000000000
0x2bc DUP2
0x2bd MSTORE
0x2be POP
0x2bf PUSH1 0x20
0x2c1 ADD
0x2c2 SWAP4
0x2c3 POP
0x2c4 POP
0x2c5 POP
0x2c6 POP
0x2c7 PUSH1 0x0
0x2c9 PUSH1 0x40
0x2cb MLOAD
0x2cc DUP1
0x2cd DUP4
0x2ce SUB
0x2cf DUP2
0x2d0 PUSH1 0x0
0x2d2 DUP8
0x2d3 DUP1
0x2d4 EXTCODESIZE
0x2d5 ISZERO
0x2d6 ISZERO
0x2d7 PUSH2 0x2df
0x2da JUMPI
---
0x198: V106 = 0x0
0x19b: V107 = CALLER
0x19c: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b1: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1b2: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c7: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1c9: M[0x0] = V111
0x1ca: V112 = 0x20
0x1cc: V113 = ADD 0x20 0x0
0x1cf: M[0x20] = 0x0
0x1d0: V114 = 0x20
0x1d2: V115 = ADD 0x20 0x20
0x1d3: V116 = 0x0
0x1d5: V117 = SHA3 0x0 0x40
0x1d6: V118 = 0x0
0x1da: V119 = S[V117]
0x1db: V120 = SUB V119 V58
0x1e1: S[V117] = V120
0x1e3: V121 = 0x1
0x1e5: V122 = 0x0
0x1e8: V123 = S[0x1]
0x1ea: V124 = 0x100
0x1ed: V125 = EXP 0x100 0x0
0x1ef: V126 = DIV V123 0x1
0x1f0: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x205: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x206: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x21b: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x21c: V131 = 0x4c2f04a4
0x221: V132 = CALLER
0x223: V133 = 0x40
0x225: V134 = M[0x40]
0x227: V135 = 0xffffffff
0x22c: V136 = AND 0xffffffff 0x4c2f04a4
0x22d: V137 = 0x100000000000000000000000000000000000000000000000000000000
0x24b: V138 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4c2f04a4
0x24d: M[V134] = 0x4c2f04a400000000000000000000000000000000000000000000000000000000
0x24e: V139 = 0x4
0x250: V140 = ADD 0x4 V134
0x253: V141 = 0xffffffffffffffffffffffffffffffffffffffff
0x268: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x269: V143 = 0xffffffffffffffffffffffffffffffffffffffff
0x27e: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x280: M[V140] = V144
0x281: V145 = 0x20
0x283: V146 = ADD 0x20 V140
0x286: M[V146] = V58
0x287: V147 = 0x20
0x289: V148 = ADD 0x20 V146
0x28b: V149 = 0x20
0x28d: V150 = ADD 0x20 V148
0x290: V151 = SUB V150 V140
0x292: M[V148] = V151
0x293: V152 = 0x7
0x296: M[V150] = 0x7
0x297: V153 = 0x20
0x299: V154 = ADD 0x20 V150
0x29b: V155 = 0x436173684f757400000000000000000000000000000000000000000000000000
0x2bd: M[V154] = 0x436173684f757400000000000000000000000000000000000000000000000000
0x2bf: V156 = 0x20
0x2c1: V157 = ADD 0x20 V154
0x2c7: V158 = 0x0
0x2c9: V159 = 0x40
0x2cb: V160 = M[0x40]
0x2ce: V161 = SUB V157 V160
0x2d0: V162 = 0x0
0x2d4: V163 = EXTCODESIZE V130
0x2d5: V164 = ISZERO V163
0x2d6: V165 = ISZERO V164
0x2d7: V166 = 0x2df
0x2da: JUMPI 0x2df V165
---
Entry stack: [V11, 0xf0, V58]
Stack pops: 1
Stack additions: [S0, V130, 0x4c2f04a4, V157, 0x0, V160, V161, V160, 0x0, V130]
Exit stack: [V11, 0xf0, V58, V130, 0x4c2f04a4, V157, 0x0, V160, V161, V160, 0x0, V130]

================================

Block 0x2db
[0x2db:0x2de]
---
Predecessors: [0x197]
Successors: []
---
0x2db PUSH1 0x0
0x2dd DUP1
0x2de REVERT
---
0x2db: V167 = 0x0
0x2de: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf0, V58, V130, 0x4c2f04a4, V157, 0x0, V160, V161, V160, 0x0, V130]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf0, V58, V130, 0x4c2f04a4, V157, 0x0, V160, V161, V160, 0x0, V130]

================================

Block 0x2df
[0x2df:0x2eb]
---
Predecessors: [0x197]
Successors: [0x2ec, 0x2f0]
---
0x2df JUMPDEST
0x2e0 PUSH2 0x2c6
0x2e3 GAS
0x2e4 SUB
0x2e5 CALL
0x2e6 ISZERO
0x2e7 ISZERO
0x2e8 PUSH2 0x2f0
0x2eb JUMPI
---
0x2df: JUMPDEST 
0x2e0: V168 = 0x2c6
0x2e3: V169 = GAS
0x2e4: V170 = SUB V169 0x2c6
0x2e5: V171 = CALL V170 V130 0x0 V160 V161 V160 0x0
0x2e6: V172 = ISZERO V171
0x2e7: V173 = ISZERO V172
0x2e8: V174 = 0x2f0
0x2eb: JUMPI 0x2f0 V173
---
Entry stack: [V11, 0xf0, V58, V130, 0x4c2f04a4, V157, 0x0, V160, V161, V160, 0x0, V130]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xf0, V58, V130, 0x4c2f04a4, V157]

================================

Block 0x2ec
[0x2ec:0x2ef]
---
Predecessors: [0x2df]
Successors: []
---
0x2ec PUSH1 0x0
0x2ee DUP1
0x2ef REVERT
---
0x2ec: V175 = 0x0
0x2ef: REVERT 0x0 0x0
---
Entry stack: [V11, 0xf0, V58, V130, 0x4c2f04a4, V157]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf0, V58, V130, 0x4c2f04a4, V157]

================================

Block 0x2f0
[0x2f0:0x2f3]
---
Predecessors: [0x2df]
Successors: [0x2f4]
---
0x2f0 JUMPDEST
0x2f1 POP
0x2f2 POP
0x2f3 POP
---
0x2f0: JUMPDEST 
---
Entry stack: [V11, 0xf0, V58, V130, 0x4c2f04a4, V157]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xf0, V58]

================================

Block 0x2f4
[0x2f4:0x2f4]
---
Predecessors: [0x162, 0x2f0]
Successors: [0x2f5]
---
0x2f4 JUMPDEST
---
0x2f4: JUMPDEST 
---
Entry stack: [V11, 0xf0, V58]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf0, V58]

================================

Block 0x2f5
[0x2f5:0x2f7]
---
Predecessors: [0x11a, 0x2f4]
Successors: [0xf0]
---
0x2f5 JUMPDEST
0x2f6 POP
0x2f7 JUMP
---
0x2f5: JUMPDEST 
0x2f7: JUMP 0xf0
---
Entry stack: [V11, 0xf0, V58]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f8
[0x2f8:0x302]
---
Predecessors: [0xf2]
Successors: [0x303, 0x460]
---
0x2f8 JUMPDEST
0x2f9 PUSH1 0x2
0x2fb SLOAD
0x2fc CALLVALUE
0x2fd GT
0x2fe ISZERO
0x2ff PUSH2 0x460
0x302 JUMPI
---
0x2f8: JUMPDEST 
0x2f9: V176 = 0x2
0x2fb: V177 = S[0x2]
0x2fc: V178 = CALLVALUE
0x2fd: V179 = GT V178 V177
0x2fe: V180 = ISZERO V179
0x2ff: V181 = 0x460
0x302: JUMPI 0x460 V180
---
Entry stack: [V11, 0xfa]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfa]

================================

Block 0x303
[0x303:0x446]
---
Predecessors: [0x2f8]
Successors: [0x447, 0x44b]
---
0x303 CALLVALUE
0x304 PUSH1 0x0
0x306 DUP1
0x307 CALLER
0x308 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31d AND
0x31e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x333 AND
0x334 DUP2
0x335 MSTORE
0x336 PUSH1 0x20
0x338 ADD
0x339 SWAP1
0x33a DUP2
0x33b MSTORE
0x33c PUSH1 0x20
0x33e ADD
0x33f PUSH1 0x0
0x341 SHA3
0x342 PUSH1 0x0
0x344 DUP3
0x345 DUP3
0x346 SLOAD
0x347 ADD
0x348 SWAP3
0x349 POP
0x34a POP
0x34b DUP2
0x34c SWAP1
0x34d SSTORE
0x34e POP
0x34f PUSH1 0x1
0x351 PUSH1 0x0
0x353 SWAP1
0x354 SLOAD
0x355 SWAP1
0x356 PUSH2 0x100
0x359 EXP
0x35a SWAP1
0x35b DIV
0x35c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x371 AND
0x372 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x387 AND
0x388 PUSH4 0x4c2f04a4
0x38d CALLER
0x38e CALLVALUE
0x38f PUSH1 0x40
0x391 MLOAD
0x392 DUP4
0x393 PUSH4 0xffffffff
0x398 AND
0x399 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3b7 MUL
0x3b8 DUP2
0x3b9 MSTORE
0x3ba PUSH1 0x4
0x3bc ADD
0x3bd DUP1
0x3be DUP4
0x3bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d4 AND
0x3d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ea AND
0x3eb DUP2
0x3ec MSTORE
0x3ed PUSH1 0x20
0x3ef ADD
0x3f0 DUP3
0x3f1 DUP2
0x3f2 MSTORE
0x3f3 PUSH1 0x20
0x3f5 ADD
0x3f6 DUP1
0x3f7 PUSH1 0x20
0x3f9 ADD
0x3fa DUP3
0x3fb DUP2
0x3fc SUB
0x3fd DUP3
0x3fe MSTORE
0x3ff PUSH1 0x7
0x401 DUP2
0x402 MSTORE
0x403 PUSH1 0x20
0x405 ADD
0x406 DUP1
0x407 PUSH32 0x4465706f73697400000000000000000000000000000000000000000000000000
0x428 DUP2
0x429 MSTORE
0x42a POP
0x42b PUSH1 0x20
0x42d ADD
0x42e SWAP4
0x42f POP
0x430 POP
0x431 POP
0x432 POP
0x433 PUSH1 0x0
0x435 PUSH1 0x40
0x437 MLOAD
0x438 DUP1
0x439 DUP4
0x43a SUB
0x43b DUP2
0x43c PUSH1 0x0
0x43e DUP8
0x43f DUP1
0x440 EXTCODESIZE
0x441 ISZERO
0x442 ISZERO
0x443 PUSH2 0x44b
0x446 JUMPI
---
0x303: V182 = CALLVALUE
0x304: V183 = 0x0
0x307: V184 = CALLER
0x308: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x31d: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x31e: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x333: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x335: M[0x0] = V188
0x336: V189 = 0x20
0x338: V190 = ADD 0x20 0x0
0x33b: M[0x20] = 0x0
0x33c: V191 = 0x20
0x33e: V192 = ADD 0x20 0x20
0x33f: V193 = 0x0
0x341: V194 = SHA3 0x0 0x40
0x342: V195 = 0x0
0x346: V196 = S[V194]
0x347: V197 = ADD V196 V182
0x34d: S[V194] = V197
0x34f: V198 = 0x1
0x351: V199 = 0x0
0x354: V200 = S[0x1]
0x356: V201 = 0x100
0x359: V202 = EXP 0x100 0x0
0x35b: V203 = DIV V200 0x1
0x35c: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x371: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x372: V206 = 0xffffffffffffffffffffffffffffffffffffffff
0x387: V207 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x388: V208 = 0x4c2f04a4
0x38d: V209 = CALLER
0x38e: V210 = CALLVALUE
0x38f: V211 = 0x40
0x391: V212 = M[0x40]
0x393: V213 = 0xffffffff
0x398: V214 = AND 0xffffffff 0x4c2f04a4
0x399: V215 = 0x100000000000000000000000000000000000000000000000000000000
0x3b7: V216 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4c2f04a4
0x3b9: M[V212] = 0x4c2f04a400000000000000000000000000000000000000000000000000000000
0x3ba: V217 = 0x4
0x3bc: V218 = ADD 0x4 V212
0x3bf: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d4: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x3d5: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ea: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x3ec: M[V218] = V222
0x3ed: V223 = 0x20
0x3ef: V224 = ADD 0x20 V218
0x3f2: M[V224] = V210
0x3f3: V225 = 0x20
0x3f5: V226 = ADD 0x20 V224
0x3f7: V227 = 0x20
0x3f9: V228 = ADD 0x20 V226
0x3fc: V229 = SUB V228 V218
0x3fe: M[V226] = V229
0x3ff: V230 = 0x7
0x402: M[V228] = 0x7
0x403: V231 = 0x20
0x405: V232 = ADD 0x20 V228
0x407: V233 = 0x4465706f73697400000000000000000000000000000000000000000000000000
0x429: M[V232] = 0x4465706f73697400000000000000000000000000000000000000000000000000
0x42b: V234 = 0x20
0x42d: V235 = ADD 0x20 V232
0x433: V236 = 0x0
0x435: V237 = 0x40
0x437: V238 = M[0x40]
0x43a: V239 = SUB V235 V238
0x43c: V240 = 0x0
0x440: V241 = EXTCODESIZE V207
0x441: V242 = ISZERO V241
0x442: V243 = ISZERO V242
0x443: V244 = 0x44b
0x446: JUMPI 0x44b V243
---
Entry stack: [V11, 0xfa]
Stack pops: 0
Stack additions: [V207, 0x4c2f04a4, V235, 0x0, V238, V239, V238, 0x0, V207]
Exit stack: [V11, 0xfa, V207, 0x4c2f04a4, V235, 0x0, V238, V239, V238, 0x0, V207]

================================

Block 0x447
[0x447:0x44a]
---
Predecessors: [0x303]
Successors: []
---
0x447 PUSH1 0x0
0x449 DUP1
0x44a REVERT
---
0x447: V245 = 0x0
0x44a: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfa, V207, 0x4c2f04a4, V235, 0x0, V238, V239, V238, 0x0, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfa, V207, 0x4c2f04a4, V235, 0x0, V238, V239, V238, 0x0, V207]

================================

Block 0x44b
[0x44b:0x457]
---
Predecessors: [0x303]
Successors: [0x458, 0x45c]
---
0x44b JUMPDEST
0x44c PUSH2 0x2c6
0x44f GAS
0x450 SUB
0x451 CALL
0x452 ISZERO
0x453 ISZERO
0x454 PUSH2 0x45c
0x457 JUMPI
---
0x44b: JUMPDEST 
0x44c: V246 = 0x2c6
0x44f: V247 = GAS
0x450: V248 = SUB V247 0x2c6
0x451: V249 = CALL V248 V207 0x0 V238 V239 V238 0x0
0x452: V250 = ISZERO V249
0x453: V251 = ISZERO V250
0x454: V252 = 0x45c
0x457: JUMPI 0x45c V251
---
Entry stack: [V11, 0xfa, V207, 0x4c2f04a4, V235, 0x0, V238, V239, V238, 0x0, V207]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xfa, V207, 0x4c2f04a4, V235]

================================

Block 0x458
[0x458:0x45b]
---
Predecessors: [0x44b]
Successors: []
---
0x458 PUSH1 0x0
0x45a DUP1
0x45b REVERT
---
0x458: V253 = 0x0
0x45b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfa, V207, 0x4c2f04a4, V235]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfa, V207, 0x4c2f04a4, V235]

================================

Block 0x45c
[0x45c:0x45f]
---
Predecessors: [0x44b]
Successors: [0x460]
---
0x45c JUMPDEST
0x45d POP
0x45e POP
0x45f POP
---
0x45c: JUMPDEST 
---
Entry stack: [V11, 0xfa, V207, 0x4c2f04a4, V235]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xfa]

================================

Block 0x460
[0x460:0x461]
---
Predecessors: [0x2f8, 0x45c]
Successors: [0xfa]
---
0x460 JUMPDEST
0x461 JUMP
---
0x460: JUMPDEST 
0x461: JUMP 0xfa
---
Entry stack: [V11, 0xfa]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x462
[0x462:0x48d]
---
Predecessors: []
Successors: []
---
0x462 STOP
0x463 LOG1
0x464 PUSH6 0x627a7a723058
0x46b SHA3
0x46c TIMESTAMP
0x46d DUP14
0x46e MISSING 0x21
0x46f MISSING 0xdb
0x470 MISSING 0xb7
0x471 MISSING 0xde
0x472 MISSING 0xdd
0x473 MISSING 0xc8
0x474 SWAP8
0x475 TIMESTAMP
0x476 MISSING 0x46
0x477 MISSING 0x24
0x478 NUMBER
0x479 SWAP11
0x47a MISSING 0xe7
0x47b EXTCODECOPY
0x47c MISSING 0xe9
0x47d CREATE2
0x47e MISSING 0xbc
0x47f DUP5
0x480 MISSING 0x5e
0x481 PUSH12 0xa35b3917a21f83292ab60029
---
0x462: STOP 
0x463: LOG S0 S1 S2
0x464: V254 = 0x627a7a723058
0x46b: V255 = SHA3 0x627a7a723058 S3
0x46c: V256 = TIMESTAMP
0x46e: MISSING 0x21
0x46f: MISSING 0xdb
0x470: MISSING 0xb7
0x471: MISSING 0xde
0x472: MISSING 0xdd
0x473: MISSING 0xc8
0x475: V257 = TIMESTAMP
0x476: MISSING 0x46
0x477: MISSING 0x24
0x478: V258 = NUMBER
0x47a: MISSING 0xe7
0x47b: EXTCODECOPY S0 S1 S2 S3
0x47c: MISSING 0xe9
0x47d: V259 = CREATE2 S0 S1 S2 S3
0x47e: MISSING 0xbc
0x480: MISSING 0x5e
0x481: V260 = 0xa35b3917a21f83292ab60029
---
Entry stack: []
Stack pops: 0
Stack additions: [S15, V256, V255, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V257, S8, S1, S2, S3, S4, S5, S6, S7, S0, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, V258, V259, S4, S0, S1, S2, S3, S4, 0xa35b3917a21f83292ab60029]
Exit stack: []

================================

Function 0:
Public function signature: 0x11bcd830
Entry block: 0x64
Exit block: 0x77
Body: 0x64, 0x6b, 0x6f, 0x77, 0xfc

Function 1:
Public function signature: 0x27e235e3
Entry block: 0x8d
Exit block: 0xc4
Body: 0x8d, 0x94, 0x98, 0xc4, 0x102

Function 2:
Public function signature: 0x9ffa0711
Entry block: 0xda
Exit block: 0x2ec
Body: 0xda, 0xf0, 0x11a, 0x162, 0x197, 0x2db, 0x2df, 0x2ec, 0x2f0, 0x2f4, 0x2f5

Function 3:
Public function signature: 0xed21248c
Entry block: 0xf2
Exit block: 0x458
Body: 0xf2, 0xfa, 0x2f8, 0x303, 0x447, 0x44b, 0x458, 0x45c, 0x460

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

