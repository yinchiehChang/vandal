Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x5c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x5c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x5c
0xa: JUMPI 0x5c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x6d]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2e1a7d4d
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x6d
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2e1a7d4d
0x20: V14 = EQ V12 0x2e1a7d4d
0x21: V15 = 0x6d
0x24: JUMPI 0x6d V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x82]
---
0x25 DUP1
0x26 PUSH4 0x41c0e1b5
0x2b EQ
0x2c PUSH2 0x82
0x2f JUMPI
---
0x26: V16 = 0x41c0e1b5
0x2b: V17 = EQ 0x41c0e1b5 V12
0x2c: V18 = 0x82
0x2f: JUMPI 0x82 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x94]
---
0x30 DUP1
0x31 PUSH4 0xb4a99a4e
0x36 EQ
0x37 PUSH2 0x94
0x3a JUMPI
---
0x31: V19 = 0xb4a99a4e
0x36: V20 = EQ 0xb4a99a4e V12
0x37: V21 = 0x94
0x3a: JUMPI 0x94 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xc0]
---
0x3b DUP1
0x3c PUSH4 0xd0e30db0
0x41 EQ
0x42 PUSH2 0xc0
0x45 JUMPI
---
0x3c: V22 = 0xd0e30db0
0x41: V23 = EQ 0xd0e30db0 V12
0x42: V24 = 0xc0
0x45: JUMPI 0xc0 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0xca]
---
0x46 DUP1
0x47 PUSH4 0xe1c7392a
0x4c EQ
0x4d PUSH2 0xca
0x50 JUMPI
---
0x47: V25 = 0xe1c7392a
0x4c: V26 = EQ 0xe1c7392a V12
0x4d: V27 = 0xca
0x50: JUMPI 0xca V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0xdc]
---
0x51 DUP1
0x52 PUSH4 0xfc7e286d
0x57 EQ
0x58 PUSH2 0xdc
0x5b JUMPI
---
0x52: V28 = 0xfc7e286d
0x57: V29 = EQ 0xfc7e286d V12
0x58: V30 = 0xdc
0x5b: JUMPI 0xdc V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x5f]
---
Predecessors: [0x0, 0x51]
Successors: [0x60]
---
0x5c JUMPDEST
0x5d PUSH2 0x6b
---
0x5c: JUMPDEST 
0x5d: V31 = 0x6b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6b]
Exit stack: [V12, 0x6b]

================================

Block 0x60
[0x60:0x67]
---
Predecessors: [0x5c]
Successors: [0x10a]
---
0x60 JUMPDEST
0x61 PUSH2 0x68
0x64 PUSH2 0x10a
0x67 JUMP
---
0x60: JUMPDEST 
0x61: V32 = 0x68
0x64: V33 = 0x10a
0x67: JUMP 0x10a
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: [0x68]
Exit stack: [V12, 0x6b, 0x68]

================================

Block 0x68
[0x68:0x68]
---
Predecessors: [0x69, 0x11a]
Successors: [0x69]
---
0x68 JUMPDEST
---
0x68: JUMPDEST 
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x69
[0x69:0x6a]
---
Predecessors: [0x68]
Successors: [0x68, 0x6b]
---
0x69 JUMPDEST
0x6a JUMP
---
0x69: JUMPDEST 
0x6a: JUMP S0
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x6b
[0x6b:0x6c]
---
Predecessors: [0x69, 0x1b9, 0x236]
Successors: []
---
0x6b JUMPDEST
0x6c STOP
---
0x6b: JUMPDEST 
0x6c: STOP 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0x6d
[0x6d:0x73]
---
Predecessors: [0xb]
Successors: [0x74, 0x75]
---
0x6d JUMPDEST
0x6e CALLVALUE
0x6f ISZERO
0x70 PUSH2 0x75
0x73 JUMPI
---
0x6d: JUMPDEST 
0x6e: V34 = CALLVALUE
0x6f: V35 = ISZERO V34
0x70: V36 = 0x75
0x73: JUMPI 0x75 V35
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x74
[0x74:0x74]
---
Predecessors: [0x6d]
Successors: []
---
0x74 INVALID
---
0x74: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6d]
Successors: [0x145]
---
0x75 JUMPDEST
0x76 PUSH2 0x6b
0x79 PUSH1 0x4
0x7b CALLDATALOAD
0x7c PUSH2 0x145
0x7f JUMP
---
0x75: JUMPDEST 
0x76: V37 = 0x6b
0x79: V38 = 0x4
0x7b: V39 = CALLDATALOAD 0x4
0x7c: V40 = 0x145
0x7f: JUMP 0x145
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6b, V39]
Exit stack: [V12, 0x6b, V39]

================================

Block 0x80
[0x80:0x81]
---
Predecessors: []
Successors: []
---
0x80 JUMPDEST
0x81 STOP
---
0x80: JUMPDEST 
0x81: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x82
[0x82:0x88]
---
Predecessors: [0x25]
Successors: [0x89, 0x8a]
---
0x82 JUMPDEST
0x83 CALLVALUE
0x84 ISZERO
0x85 PUSH2 0x8a
0x88 JUMPI
---
0x82: JUMPDEST 
0x83: V41 = CALLVALUE
0x84: V42 = ISZERO V41
0x85: V43 = 0x8a
0x88: JUMPI 0x8a V42
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x89
[0x89:0x89]
---
Predecessors: [0x82]
Successors: []
---
0x89 INVALID
---
0x89: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a
[0x8a:0x91]
---
Predecessors: [0x82]
Successors: [0x1bd]
---
0x8a JUMPDEST
0x8b PUSH2 0x6b
0x8e PUSH2 0x1bd
0x91 JUMP
---
0x8a: JUMPDEST 
0x8b: V44 = 0x6b
0x8e: V45 = 0x1bd
0x91: JUMP 0x1bd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6b]
Exit stack: [V12, 0x6b]

================================

Block 0x92
[0x92:0x93]
---
Predecessors: []
Successors: []
---
0x92 JUMPDEST
0x93 STOP
---
0x92: JUMPDEST 
0x93: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x94
[0x94:0x9a]
---
Predecessors: [0x30]
Successors: [0x9b, 0x9c]
---
0x94 JUMPDEST
0x95 CALLVALUE
0x96 ISZERO
0x97 PUSH2 0x9c
0x9a JUMPI
---
0x94: JUMPDEST 
0x95: V46 = CALLVALUE
0x96: V47 = ISZERO V46
0x97: V48 = 0x9c
0x9a: JUMPI 0x9c V47
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9b
[0x9b:0x9b]
---
Predecessors: [0x94]
Successors: []
---
0x9b INVALID
---
0x9b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9c
[0x9c:0xa3]
---
Predecessors: [0x94]
Successors: [0x1fe]
---
0x9c JUMPDEST
0x9d PUSH2 0xa4
0xa0 PUSH2 0x1fe
0xa3 JUMP
---
0x9c: JUMPDEST 
0x9d: V49 = 0xa4
0xa0: V50 = 0x1fe
0xa3: JUMP 0x1fe
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa4]
Exit stack: [V12, 0xa4]

================================

Block 0xa4
[0xa4:0xbf]
---
Predecessors: [0x1fe]
Successors: []
---
0xa4 JUMPDEST
0xa5 PUSH1 0x40
0xa7 DUP1
0xa8 MLOAD
0xa9 PUSH1 0x1
0xab PUSH1 0xa0
0xad PUSH1 0x2
0xaf EXP
0xb0 SUB
0xb1 SWAP1
0xb2 SWAP3
0xb3 AND
0xb4 DUP3
0xb5 MSTORE
0xb6 MLOAD
0xb7 SWAP1
0xb8 DUP2
0xb9 SWAP1
0xba SUB
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP1
0xbf RETURN
---
0xa4: JUMPDEST 
0xa5: V51 = 0x40
0xa8: V52 = M[0x40]
0xa9: V53 = 0x1
0xab: V54 = 0xa0
0xad: V55 = 0x2
0xaf: V56 = EXP 0x2 0xa0
0xb0: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3: V58 = AND V199 0xffffffffffffffffffffffffffffffffffffffff
0xb5: M[V52] = V58
0xb6: V59 = M[0x40]
0xba: V60 = SUB V52 V59
0xbb: V61 = 0x20
0xbd: V62 = ADD 0x20 V60
0xbf: RETURN V59 V62
---
Entry stack: [V12, 0xa4, V199]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa4]

================================

Block 0xc0
[0xc0:0xc7]
---
Predecessors: [0x3b]
Successors: [0x10a]
---
0xc0 JUMPDEST
0xc1 PUSH2 0x6b
0xc4 PUSH2 0x10a
0xc7 JUMP
---
0xc0: JUMPDEST 
0xc1: V63 = 0x6b
0xc4: V64 = 0x10a
0xc7: JUMP 0x10a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6b]
Exit stack: [V12, 0x6b]

================================

Block 0xc8
[0xc8:0xc9]
---
Predecessors: []
Successors: []
---
0xc8 JUMPDEST
0xc9 STOP
---
0xc8: JUMPDEST 
0xc9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xca
[0xca:0xd0]
---
Predecessors: [0x46]
Successors: [0xd1, 0xd2]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc ISZERO
0xcd PUSH2 0xd2
0xd0 JUMPI
---
0xca: JUMPDEST 
0xcb: V65 = CALLVALUE
0xcc: V66 = ISZERO V65
0xcd: V67 = 0xd2
0xd0: JUMPI 0xd2 V66
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd1
[0xd1:0xd1]
---
Predecessors: [0xca]
Successors: []
---
0xd1 INVALID
---
0xd1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd2
[0xd2:0xd9]
---
Predecessors: [0xca]
Successors: [0x20d]
---
0xd2 JUMPDEST
0xd3 PUSH2 0x6b
0xd6 PUSH2 0x20d
0xd9 JUMP
---
0xd2: JUMPDEST 
0xd3: V68 = 0x6b
0xd6: V69 = 0x20d
0xd9: JUMP 0x20d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6b]
Exit stack: [V12, 0x6b]

================================

Block 0xda
[0xda:0xdb]
---
Predecessors: []
Successors: []
---
0xda JUMPDEST
0xdb STOP
---
0xda: JUMPDEST 
0xdb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdc
[0xdc:0xe2]
---
Predecessors: [0x51]
Successors: [0xe3, 0xe4]
---
0xdc JUMPDEST
0xdd CALLVALUE
0xde ISZERO
0xdf PUSH2 0xe4
0xe2 JUMPI
---
0xdc: JUMPDEST 
0xdd: V70 = CALLVALUE
0xde: V71 = ISZERO V70
0xdf: V72 = 0xe4
0xe2: JUMPI 0xe4 V71
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe3
[0xe3:0xe3]
---
Predecessors: [0xdc]
Successors: []
---
0xe3 INVALID
---
0xe3: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe4
[0xe4:0xf7]
---
Predecessors: [0xdc]
Successors: [0x238]
---
0xe4 JUMPDEST
0xe5 PUSH2 0xf8
0xe8 PUSH1 0x1
0xea PUSH1 0xa0
0xec PUSH1 0x2
0xee EXP
0xef SUB
0xf0 PUSH1 0x4
0xf2 CALLDATALOAD
0xf3 AND
0xf4 PUSH2 0x238
0xf7 JUMP
---
0xe4: JUMPDEST 
0xe5: V73 = 0xf8
0xe8: V74 = 0x1
0xea: V75 = 0xa0
0xec: V76 = 0x2
0xee: V77 = EXP 0x2 0xa0
0xef: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf0: V79 = 0x4
0xf2: V80 = CALLDATALOAD 0x4
0xf3: V81 = AND V80 0xffffffffffffffffffffffffffffffffffffffff
0xf4: V82 = 0x238
0xf7: JUMP 0x238
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf8, V81]
Exit stack: [V12, 0xf8, V81]

================================

Block 0xf8
[0xf8:0x109]
---
Predecessors: [0x238]
Successors: []
---
0xf8 JUMPDEST
0xf9 PUSH1 0x40
0xfb DUP1
0xfc MLOAD
0xfd SWAP2
0xfe DUP3
0xff MSTORE
0x100 MLOAD
0x101 SWAP1
0x102 DUP2
0x103 SWAP1
0x104 SUB
0x105 PUSH1 0x20
0x107 ADD
0x108 SWAP1
0x109 RETURN
---
0xf8: JUMPDEST 
0xf9: V83 = 0x40
0xfc: V84 = M[0x40]
0xff: M[V84] = V218
0x100: V85 = M[0x40]
0x104: V86 = SUB V84 V85
0x105: V87 = 0x20
0x107: V88 = ADD 0x20 V86
0x109: RETURN V85 V88
---
Entry stack: [V12, 0xf8, V218]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xf8]

================================

Block 0x10a
[0x10a:0x119]
---
Predecessors: [0x60, 0xc0]
Successors: [0x11a, 0x13c]
---
0x10a JUMPDEST
0x10b PUSH8 0x3782dace9d90000
0x114 CALLVALUE
0x115 LT
0x116 PUSH2 0x13c
0x119 JUMPI
---
0x10a: JUMPDEST 
0x10b: V89 = 0x3782dace9d90000
0x114: V90 = CALLVALUE
0x115: V91 = LT V90 0x3782dace9d90000
0x116: V92 = 0x13c
0x119: JUMPI 0x13c V91
---
Entry stack: [V12, S1, {0x68, 0x6b}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x68, 0x6b}]

================================

Block 0x11a
[0x11a:0x13b]
---
Predecessors: [0x10a]
Successors: [0x68]
---
0x11a PUSH1 0x1
0x11c PUSH1 0xa0
0x11e PUSH1 0x2
0x120 EXP
0x121 SUB
0x122 CALLER
0x123 AND
0x124 PUSH1 0x0
0x126 SWAP1
0x127 DUP2
0x128 MSTORE
0x129 PUSH1 0x2
0x12b PUSH1 0x20
0x12d MSTORE
0x12e PUSH1 0x40
0x130 SWAP1
0x131 SHA3
0x132 DUP1
0x133 SLOAD
0x134 CALLVALUE
0x135 ADD
0x136 SWAP1
0x137 SSTORE
0x138 PUSH2 0x68
0x13b JUMP
---
0x11a: V93 = 0x1
0x11c: V94 = 0xa0
0x11e: V95 = 0x2
0x120: V96 = EXP 0x2 0xa0
0x121: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x122: V98 = CALLER
0x123: V99 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x124: V100 = 0x0
0x128: M[0x0] = V99
0x129: V101 = 0x2
0x12b: V102 = 0x20
0x12d: M[0x20] = 0x2
0x12e: V103 = 0x40
0x131: V104 = SHA3 0x0 0x40
0x133: V105 = S[V104]
0x134: V106 = CALLVALUE
0x135: V107 = ADD V106 V105
0x137: S[V104] = V107
0x138: V108 = 0x68
0x13b: JUMP 0x68
---
Entry stack: [V12, S1, {0x68, 0x6b}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x68, 0x6b}]

================================

Block 0x13c
[0x13c:0x141]
---
Predecessors: [0x10a]
Successors: []
---
0x13c JUMPDEST
0x13d PUSH1 0x0
0x13f PUSH1 0x0
0x141 REVERT
---
0x13c: JUMPDEST 
0x13d: V109 = 0x0
0x13f: V110 = 0x0
0x141: REVERT 0x0 0x0
---
Entry stack: [V12, S1, {0x68, 0x6b}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x68, 0x6b}]

================================

Block 0x142
[0x142:0x142]
---
Predecessors: []
Successors: [0x143]
---
0x142 JUMPDEST
---
0x142: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x143
[0x143:0x144]
---
Predecessors: [0x142]
Successors: []
Has unresolved jump.
---
0x143 JUMPDEST
0x144 JUMP
---
0x143: JUMPDEST 
0x144: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x145
[0x145:0x15c]
---
Predecessors: [0x75]
Successors: [0x15d, 0x162]
---
0x145 JUMPDEST
0x146 PUSH1 0x0
0x148 DUP1
0x149 SLOAD
0x14a CALLER
0x14b PUSH1 0x1
0x14d PUSH1 0xa0
0x14f PUSH1 0x2
0x151 EXP
0x152 SUB
0x153 SWAP1
0x154 DUP2
0x155 AND
0x156 SWAP2
0x157 AND
0x158 EQ
0x159 PUSH2 0x162
0x15c JUMPI
---
0x145: JUMPDEST 
0x146: V111 = 0x0
0x149: V112 = S[0x0]
0x14a: V113 = CALLER
0x14b: V114 = 0x1
0x14d: V115 = 0xa0
0x14f: V116 = 0x2
0x151: V117 = EXP 0x2 0xa0
0x152: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x157: V120 = AND V112 0xffffffffffffffffffffffffffffffffffffffff
0x158: V121 = EQ V120 V119
0x159: V122 = 0x162
0x15c: JUMPI 0x162 V121
---
Entry stack: [V12, 0x6b, V39]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x6b, V39, 0x0]

================================

Block 0x15d
[0x15d:0x161]
---
Predecessors: [0x145]
Successors: []
---
0x15d PUSH1 0x0
0x15f PUSH1 0x0
0x161 REVERT
---
0x15d: V123 = 0x0
0x15f: V124 = 0x0
0x161: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6b, V39, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b, V39, 0x0]

================================

Block 0x162
[0x162:0x186]
---
Predecessors: [0x145]
Successors: [0x187, 0x18c]
---
0x162 JUMPDEST
0x163 POP
0x164 PUSH1 0x1
0x166 PUSH1 0xa0
0x168 PUSH1 0x2
0x16a EXP
0x16b SUB
0x16c CALLER
0x16d AND
0x16e PUSH1 0x0
0x170 SWAP1
0x171 DUP2
0x172 MSTORE
0x173 PUSH1 0x2
0x175 PUSH1 0x20
0x177 MSTORE
0x178 PUSH1 0x40
0x17a SWAP1
0x17b SHA3
0x17c SLOAD
0x17d DUP1
0x17e DUP3
0x17f GT
0x180 DUP1
0x181 ISZERO
0x182 SWAP1
0x183 PUSH2 0x18c
0x186 JUMPI
---
0x162: JUMPDEST 
0x164: V125 = 0x1
0x166: V126 = 0xa0
0x168: V127 = 0x2
0x16a: V128 = EXP 0x2 0xa0
0x16b: V129 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16c: V130 = CALLER
0x16d: V131 = AND V130 0xffffffffffffffffffffffffffffffffffffffff
0x16e: V132 = 0x0
0x172: M[0x0] = V131
0x173: V133 = 0x2
0x175: V134 = 0x20
0x177: M[0x20] = 0x2
0x178: V135 = 0x40
0x17b: V136 = SHA3 0x0 0x40
0x17c: V137 = S[V136]
0x17f: V138 = GT V39 V137
0x181: V139 = ISZERO V138
0x183: V140 = 0x18c
0x186: JUMPI 0x18c V138
---
Entry stack: [V12, 0x6b, V39, 0x0]
Stack pops: 2
Stack additions: [S1, V137, V139]
Exit stack: [V12, 0x6b, V39, V137, V139]

================================

Block 0x187
[0x187:0x18b]
---
Predecessors: [0x162]
Successors: [0x18c]
---
0x187 POP
0x188 PUSH1 0x0
0x18a DUP2
0x18b GT
---
0x188: V141 = 0x0
0x18b: V142 = GT V137 0x0
---
Entry stack: [V12, 0x6b, V39, V137, V139]
Stack pops: 2
Stack additions: [S1, V142]
Exit stack: [V12, 0x6b, V39, V137, V142]

================================

Block 0x18c
[0x18c:0x191]
---
Predecessors: [0x162, 0x187]
Successors: [0x192, 0x1b7]
---
0x18c JUMPDEST
0x18d ISZERO
0x18e PUSH2 0x1b7
0x191 JUMPI
---
0x18c: JUMPDEST 
0x18d: V143 = ISZERO S0
0x18e: V144 = 0x1b7
0x191: JUMPI 0x1b7 V143
---
Entry stack: [V12, 0x6b, V39, V137, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x6b, V39, V137]

================================

Block 0x192
[0x192:0x1b6]
---
Predecessors: [0x18c]
Successors: [0x1b7]
---
0x192 PUSH1 0x40
0x194 MLOAD
0x195 PUSH1 0x1
0x197 PUSH1 0xa0
0x199 PUSH1 0x2
0x19b EXP
0x19c SUB
0x19d CALLER
0x19e AND
0x19f SWAP1
0x1a0 DUP4
0x1a1 ISZERO
0x1a2 PUSH2 0x8fc
0x1a5 MUL
0x1a6 SWAP1
0x1a7 DUP5
0x1a8 SWAP1
0x1a9 PUSH1 0x0
0x1ab DUP2
0x1ac DUP2
0x1ad DUP2
0x1ae DUP6
0x1af DUP9
0x1b0 DUP9
0x1b1 CALL
0x1b2 POP
0x1b3 POP
0x1b4 POP
0x1b5 POP
0x1b6 POP
---
0x192: V145 = 0x40
0x194: V146 = M[0x40]
0x195: V147 = 0x1
0x197: V148 = 0xa0
0x199: V149 = 0x2
0x19b: V150 = EXP 0x2 0xa0
0x19c: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19d: V152 = CALLER
0x19e: V153 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x1a1: V154 = ISZERO V39
0x1a2: V155 = 0x8fc
0x1a5: V156 = MUL 0x8fc V154
0x1a9: V157 = 0x0
0x1b1: V158 = CALL V156 V153 V39 V146 0x0 V146 0x0
---
Entry stack: [V12, 0x6b, V39, V137]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x6b, V39, V137]

================================

Block 0x1b7
[0x1b7:0x1b7]
---
Predecessors: [0x18c, 0x192]
Successors: [0x1b8]
---
0x1b7 JUMPDEST
---
0x1b7: JUMPDEST 
---
Entry stack: [V12, 0x6b, V39, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b, V39, V137]

================================

Block 0x1b8
[0x1b8:0x1b8]
---
Predecessors: [0x1b7]
Successors: [0x1b9]
---
0x1b8 JUMPDEST
---
0x1b8: JUMPDEST 
---
Entry stack: [V12, 0x6b, V39, V137]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b, V39, V137]

================================

Block 0x1b9
[0x1b9:0x1bc]
---
Predecessors: [0x1b8]
Successors: [0x6b]
---
0x1b9 JUMPDEST
0x1ba POP
0x1bb POP
0x1bc JUMP
---
0x1b9: JUMPDEST 
0x1bc: JUMP 0x6b
---
Entry stack: [V12, 0x6b, V39, V137]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bd
[0x1bd:0x1d3]
---
Predecessors: [0x8a]
Successors: [0x1d4, 0x1d9]
---
0x1bd JUMPDEST
0x1be PUSH1 0x0
0x1c0 SLOAD
0x1c1 CALLER
0x1c2 PUSH1 0x1
0x1c4 PUSH1 0xa0
0x1c6 PUSH1 0x2
0x1c8 EXP
0x1c9 SUB
0x1ca SWAP1
0x1cb DUP2
0x1cc AND
0x1cd SWAP2
0x1ce AND
0x1cf EQ
0x1d0 PUSH2 0x1d9
0x1d3 JUMPI
---
0x1bd: JUMPDEST 
0x1be: V159 = 0x0
0x1c0: V160 = S[0x0]
0x1c1: V161 = CALLER
0x1c2: V162 = 0x1
0x1c4: V163 = 0xa0
0x1c6: V164 = 0x2
0x1c8: V165 = EXP 0x2 0xa0
0x1c9: V166 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cc: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x1ce: V168 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x1cf: V169 = EQ V168 V167
0x1d0: V170 = 0x1d9
0x1d3: JUMPI 0x1d9 V169
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x1d4
[0x1d4:0x1d8]
---
Predecessors: [0x1bd]
Successors: []
---
0x1d4 PUSH1 0x0
0x1d6 PUSH1 0x0
0x1d8 REVERT
---
0x1d4: V171 = 0x0
0x1d6: V172 = 0x0
0x1d8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x1d9
[0x1d9:0x1e9]
---
Predecessors: [0x1bd]
Successors: [0x1ea, 0x1ef]
---
0x1d9 JUMPDEST
0x1da PUSH1 0x1
0x1dc PUSH1 0xa0
0x1de PUSH1 0x2
0x1e0 EXP
0x1e1 SUB
0x1e2 ADDRESS
0x1e3 AND
0x1e4 BALANCE
0x1e5 ISZERO
0x1e6 PUSH2 0x1ef
0x1e9 JUMPI
---
0x1d9: JUMPDEST 
0x1da: V173 = 0x1
0x1dc: V174 = 0xa0
0x1de: V175 = 0x2
0x1e0: V176 = EXP 0x2 0xa0
0x1e1: V177 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e2: V178 = ADDRESS
0x1e3: V179 = AND V178 0xffffffffffffffffffffffffffffffffffffffff
0x1e4: V180 = BALANCE V179
0x1e5: V181 = ISZERO V180
0x1e6: V182 = 0x1ef
0x1e9: JUMPI 0x1ef V181
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x1ea
[0x1ea:0x1ee]
---
Predecessors: [0x1d9]
Successors: []
---
0x1ea PUSH1 0x0
0x1ec PUSH1 0x0
0x1ee REVERT
---
0x1ea: V183 = 0x0
0x1ec: V184 = 0x0
0x1ee: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x1ef
[0x1ef:0x1fa]
---
Predecessors: [0x1d9]
Successors: []
---
0x1ef JUMPDEST
0x1f0 CALLER
0x1f1 PUSH1 0x1
0x1f3 PUSH1 0xa0
0x1f5 PUSH1 0x2
0x1f7 EXP
0x1f8 SUB
0x1f9 AND
0x1fa SELFDESTRUCT
---
0x1ef: JUMPDEST 
0x1f0: V185 = CALLER
0x1f1: V186 = 0x1
0x1f3: V187 = 0xa0
0x1f5: V188 = 0x2
0x1f7: V189 = EXP 0x2 0xa0
0x1f8: V190 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f9: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x1fa: SELFDESTRUCT V191
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x1fb
[0x1fb:0x1fb]
---
Predecessors: []
Successors: [0x1fc]
---
0x1fb JUMPDEST
---
0x1fb: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1fc
[0x1fc:0x1fd]
---
Predecessors: [0x1fb]
Successors: []
Has unresolved jump.
---
0x1fc JUMPDEST
0x1fd JUMP
---
0x1fc: JUMPDEST 
0x1fd: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1fe
[0x1fe:0x20c]
---
Predecessors: [0x9c]
Successors: [0xa4]
---
0x1fe JUMPDEST
0x1ff PUSH1 0x1
0x201 SLOAD
0x202 PUSH1 0x1
0x204 PUSH1 0xa0
0x206 PUSH1 0x2
0x208 EXP
0x209 SUB
0x20a AND
0x20b DUP2
0x20c JUMP
---
0x1fe: JUMPDEST 
0x1ff: V192 = 0x1
0x201: V193 = S[0x1]
0x202: V194 = 0x1
0x204: V195 = 0xa0
0x206: V196 = 0x2
0x208: V197 = EXP 0x2 0xa0
0x209: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20a: V199 = AND 0xffffffffffffffffffffffffffffffffffffffff V193
0x20c: JUMP 0xa4
---
Entry stack: [V12, 0xa4]
Stack pops: 1
Stack additions: [S0, V199]
Exit stack: [V12, 0xa4, V199]

================================

Block 0x20d
[0x20d:0x235]
---
Predecessors: [0xd2]
Successors: [0x236]
---
0x20d JUMPDEST
0x20e PUSH1 0x1
0x210 DUP1
0x211 SLOAD
0x212 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x227 NOT
0x228 AND
0x229 CALLER
0x22a PUSH1 0x1
0x22c PUSH1 0xa0
0x22e PUSH1 0x2
0x230 EXP
0x231 SUB
0x232 AND
0x233 OR
0x234 SWAP1
0x235 SSTORE
---
0x20d: JUMPDEST 
0x20e: V200 = 0x1
0x211: V201 = S[0x1]
0x212: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x227: V203 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x228: V204 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V201
0x229: V205 = CALLER
0x22a: V206 = 0x1
0x22c: V207 = 0xa0
0x22e: V208 = 0x2
0x230: V209 = EXP 0x2 0xa0
0x231: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x232: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x233: V212 = OR V211 V204
0x235: S[0x1] = V212
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x236
[0x236:0x237]
---
Predecessors: [0x20d]
Successors: [0x6b]
---
0x236 JUMPDEST
0x237 JUMP
---
0x236: JUMPDEST 
0x237: JUMP 0x6b
---
Entry stack: [V12, 0x6b]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x238
[0x238:0x249]
---
Predecessors: [0xe4]
Successors: [0xf8]
---
0x238 JUMPDEST
0x239 PUSH1 0x2
0x23b PUSH1 0x20
0x23d MSTORE
0x23e PUSH1 0x0
0x240 SWAP1
0x241 DUP2
0x242 MSTORE
0x243 PUSH1 0x40
0x245 SWAP1
0x246 SHA3
0x247 SLOAD
0x248 DUP2
0x249 JUMP
---
0x238: JUMPDEST 
0x239: V213 = 0x2
0x23b: V214 = 0x20
0x23d: M[0x20] = 0x2
0x23e: V215 = 0x0
0x242: M[0x0] = V81
0x243: V216 = 0x40
0x246: V217 = SHA3 0x0 0x40
0x247: V218 = S[V217]
0x249: JUMP 0xf8
---
Entry stack: [V12, 0xf8, V81]
Stack pops: 2
Stack additions: [S1, V218]
Exit stack: [V12, 0xf8, V218]

================================

Block 0x24a
[0x24a:0x283]
---
Predecessors: []
Successors: []
---
0x24a STOP
0x24b LOG1
0x24c PUSH6 0x627a7a723058
0x253 SHA3
0x254 DUP9
0x255 MISSING 0xe3
0x256 MISSING 0xce
0x257 DUP2
0x258 MISSING 0xe1
0x259 SWAP14
0x25a LOG3
0x25b MISSING 0xa6
0x25c EXTCODEHASH
0x25d CALLDATASIZE
0x25e MISSING 0x24
0x25f CODESIZE
0x260 SHA3
0x261 DUP2
0x262 MISSING 0xd2
0x263 MISSING 0x2c
0x264 CODESIZE
0x265 MISSING 0xed
0x266 GT
0x267 EXP
0x268 MISSING 0x4e
0x269 MISSING 0xe9
0x26a CALLDATALOAD
0x26b MISSING 0xcc
0x26c PUSH23 0x8d16389ffede210029
---
0x24a: STOP 
0x24b: LOG S0 S1 S2
0x24c: V219 = 0x627a7a723058
0x253: V220 = SHA3 0x627a7a723058 S3
0x255: MISSING 0xe3
0x256: MISSING 0xce
0x258: MISSING 0xe1
0x25a: LOG S14 S1 S2 S3 S4
0x25b: MISSING 0xa6
0x25c: V221 = EXTCODEHASH S0
0x25d: V222 = CALLDATASIZE
0x25e: MISSING 0x24
0x25f: V223 = CODESIZE
0x260: V224 = SHA3 V223 S0
0x262: MISSING 0xd2
0x263: MISSING 0x2c
0x264: V225 = CODESIZE
0x265: MISSING 0xed
0x266: V226 = GT S0 S1
0x267: V227 = EXP V226 S2
0x268: MISSING 0x4e
0x269: MISSING 0xe9
0x26a: V228 = CALLDATALOAD S0
0x26b: MISSING 0xcc
0x26c: V229 = 0x8d16389ffede210029
---
Entry stack: []
Stack pops: 0
Stack additions: [S11, V220, S4, S5, S6, S7, S8, S9, S10, S11, S1, S0, S1, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, V222, V221, S1, V224, S1, V225, V227, V228, 0x8d16389ffede210029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x6d
Exit block: 0x6b
Body: 0x6b, 0x6d, 0x74, 0x75, 0x145, 0x15d, 0x162, 0x187, 0x18c, 0x192, 0x1b7, 0x1b8, 0x1b9

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x82
Exit block: 0x1ea
Body: 0x82, 0x89, 0x8a, 0x1bd, 0x1d4, 0x1d9, 0x1ea, 0x1ef

Function 2:
Public function signature: 0xb4a99a4e
Entry block: 0x94
Exit block: 0xa4
Body: 0x94, 0x9b, 0x9c, 0xa4, 0x1fe

Function 3:
Public function signature: 0xd0e30db0
Entry block: 0xc0
Exit block: 0x6b
Body: 0x6b, 0xc0

Function 4:
Public function signature: 0xe1c7392a
Entry block: 0xca
Exit block: 0x6b
Body: 0x6b, 0xca, 0xd1, 0xd2, 0x20d, 0x236

Function 5:
Public function signature: 0xfc7e286d
Entry block: 0xdc
Exit block: 0xf8
Body: 0xdc, 0xe3, 0xe4, 0xf8, 0x238

Function 6:
Public fallback function
Entry block: 0x5c
Exit block: 0x6b
Body: 0x5c, 0x60, 0x68, 0x69, 0x6b

