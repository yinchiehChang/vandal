Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x10]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLVALUE
0x6 DUP1
0x7 ISZERO
0x8 PUSH2 0x10
0xb JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = CALLVALUE
0x7: V3 = ISZERO V2
0x8: V4 = 0x10
0xb: JUMPI 0x10 V3
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0xc
[0xc:0xf]
---
Predecessors: [0x0]
Successors: []
---
0xc PUSH1 0x0
0xe DUP1
0xf REVERT
---
0xc: V5 = 0x0
0xf: REVERT 0x0 0x0
---
Entry stack: [V2]
Stack pops: 0
Stack additions: []
Exit stack: [V2]

================================

Block 0x10
[0x10:0x19]
---
Predecessors: [0x0]
Successors: [0x1a, 0xf5]
---
0x10 JUMPDEST
0x11 POP
0x12 PUSH1 0x4
0x14 CALLDATASIZE
0x15 LT
0x16 PUSH2 0xf5
0x19 JUMPI
---
0x10: JUMPDEST 
0x12: V6 = 0x4
0x14: V7 = CALLDATASIZE
0x15: V8 = LT V7 0x4
0x16: V9 = 0xf5
0x19: JUMPI 0xf5 V8
---
Entry stack: [V2]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a
[0x1a:0x2a]
---
Predecessors: [0x10]
Successors: [0x2b, 0x97]
---
0x1a PUSH1 0x0
0x1c CALLDATALOAD
0x1d PUSH1 0xe0
0x1f SHR
0x20 DUP1
0x21 PUSH4 0x70a08231
0x26 GT
0x27 PUSH2 0x97
0x2a JUMPI
---
0x1a: V10 = 0x0
0x1c: V11 = CALLDATALOAD 0x0
0x1d: V12 = 0xe0
0x1f: V13 = SHR 0xe0 V11
0x21: V14 = 0x70a08231
0x26: V15 = GT 0x70a08231 V13
0x27: V16 = 0x97
0x2a: JUMPI 0x97 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x2b
[0x2b:0x35]
---
Predecessors: [0x1a]
Successors: [0x36, 0x66]
---
0x2b DUP1
0x2c PUSH4 0xa457c2d7
0x31 GT
0x32 PUSH2 0x66
0x35 JUMPI
---
0x2c: V17 = 0xa457c2d7
0x31: V18 = GT 0xa457c2d7 V13
0x32: V19 = 0x66
0x35: JUMPI 0x66 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x36
[0x36:0x40]
---
Predecessors: [0x2b]
Successors: [0x41, 0x2d9]
---
0x36 DUP1
0x37 PUSH4 0xa457c2d7
0x3c EQ
0x3d PUSH2 0x2d9
0x40 JUMPI
---
0x37: V20 = 0xa457c2d7
0x3c: V21 = EQ 0xa457c2d7 V13
0x3d: V22 = 0x2d9
0x40: JUMPI 0x2d9 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0x36]
Successors: [0x4c, 0x305]
---
0x41 DUP1
0x42 PUSH4 0xa9059cbb
0x47 EQ
0x48 PUSH2 0x305
0x4b JUMPI
---
0x42: V23 = 0xa9059cbb
0x47: V24 = EQ 0xa9059cbb V13
0x48: V25 = 0x305
0x4b: JUMPI 0x305 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x331]
---
0x4c DUP1
0x4d PUSH4 0xdd62ed3e
0x52 EQ
0x53 PUSH2 0x331
0x56 JUMPI
---
0x4d: V26 = 0xdd62ed3e
0x52: V27 = EQ 0xdd62ed3e V13
0x53: V28 = 0x331
0x56: JUMPI 0x331 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x35f]
---
0x57 DUP1
0x58 PUSH4 0xf2fde38b
0x5d EQ
0x5e PUSH2 0x35f
0x61 JUMPI
---
0x58: V29 = 0xf2fde38b
0x5d: V30 = EQ 0xf2fde38b V13
0x5e: V31 = 0x35f
0x61: JUMPI 0x35f V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x62
[0x62:0x65]
---
Predecessors: [0x57]
Successors: [0xf5]
---
0x62 PUSH2 0xf5
0x65 JUMP
---
0x62: V32 = 0xf5
0x65: JUMP 0xf5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x66
[0x66:0x71]
---
Predecessors: [0x2b]
Successors: [0x72, 0x27f]
---
0x66 JUMPDEST
0x67 DUP1
0x68 PUSH4 0x70a08231
0x6d EQ
0x6e PUSH2 0x27f
0x71 JUMPI
---
0x66: JUMPDEST 
0x68: V33 = 0x70a08231
0x6d: V34 = EQ 0x70a08231 V13
0x6e: V35 = 0x27f
0x71: JUMPI 0x27f V34
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x66]
Successors: [0x7d, 0x2a5]
---
0x72 DUP1
0x73 PUSH4 0x715018a6
0x78 EQ
0x79 PUSH2 0x2a5
0x7c JUMPI
---
0x73: V36 = 0x715018a6
0x78: V37 = EQ 0x715018a6 V13
0x79: V38 = 0x2a5
0x7c: JUMPI 0x2a5 V37
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2ad]
---
0x7d DUP1
0x7e PUSH4 0x8da5cb5b
0x83 EQ
0x84 PUSH2 0x2ad
0x87 JUMPI
---
0x7e: V39 = 0x8da5cb5b
0x83: V40 = EQ 0x8da5cb5b V13
0x84: V41 = 0x2ad
0x87: JUMPI 0x2ad V40
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x2d1]
---
0x88 DUP1
0x89 PUSH4 0x95d89b41
0x8e EQ
0x8f PUSH2 0x2d1
0x92 JUMPI
---
0x89: V42 = 0x95d89b41
0x8e: V43 = EQ 0x95d89b41 V13
0x8f: V44 = 0x2d1
0x92: JUMPI 0x2d1 V43
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x93
[0x93:0x96]
---
Predecessors: [0x88]
Successors: [0xf5]
---
0x93 PUSH2 0xf5
0x96 JUMP
---
0x93: V45 = 0xf5
0x96: JUMP 0xf5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x97
[0x97:0xa2]
---
Predecessors: [0x1a]
Successors: [0xa3, 0xd3]
---
0x97 JUMPDEST
0x98 DUP1
0x99 PUSH4 0x23b872dd
0x9e GT
0x9f PUSH2 0xd3
0xa2 JUMPI
---
0x97: JUMPDEST 
0x99: V46 = 0x23b872dd
0x9e: V47 = GT 0x23b872dd V13
0x9f: V48 = 0xd3
0xa2: JUMPI 0xd3 V47
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x97]
Successors: [0xae, 0x1d1]
---
0xa3 DUP1
0xa4 PUSH4 0x23b872dd
0xa9 EQ
0xaa PUSH2 0x1d1
0xad JUMPI
---
0xa4: V49 = 0x23b872dd
0xa9: V50 = EQ 0x23b872dd V13
0xaa: V51 = 0x1d1
0xad: JUMPI 0x1d1 V50
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x207]
---
0xae DUP1
0xaf PUSH4 0x313ce567
0xb4 EQ
0xb5 PUSH2 0x207
0xb8 JUMPI
---
0xaf: V52 = 0x313ce567
0xb4: V53 = EQ 0x313ce567 V13
0xb5: V54 = 0x207
0xb8: JUMPI 0x207 V53
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x225]
---
0xb9 DUP1
0xba PUSH4 0x39509351
0xbf EQ
0xc0 PUSH2 0x225
0xc3 JUMPI
---
0xba: V55 = 0x39509351
0xbf: V56 = EQ 0x39509351 V13
0xc0: V57 = 0x225
0xc3: JUMPI 0x225 V56
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x251]
---
0xc4 DUP1
0xc5 PUSH4 0x40c10f19
0xca EQ
0xcb PUSH2 0x251
0xce JUMPI
---
0xc5: V58 = 0x40c10f19
0xca: V59 = EQ 0x40c10f19 V13
0xcb: V60 = 0x251
0xce: JUMPI 0x251 V59
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcf
[0xcf:0xd2]
---
Predecessors: [0xc4]
Successors: [0xf5]
---
0xcf PUSH2 0xf5
0xd2 JUMP
---
0xcf: V61 = 0xf5
0xd2: JUMP 0xf5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd3
[0xd3:0xde]
---
Predecessors: [0x97]
Successors: [0xdf, 0xfa]
---
0xd3 JUMPDEST
0xd4 DUP1
0xd5 PUSH4 0x6fdde03
0xda EQ
0xdb PUSH2 0xfa
0xde JUMPI
---
0xd3: JUMPDEST 
0xd5: V62 = 0x6fdde03
0xda: V63 = EQ 0x6fdde03 V13
0xdb: V64 = 0xfa
0xde: JUMPI 0xfa V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xdf
[0xdf:0xe9]
---
Predecessors: [0xd3]
Successors: [0xea, 0x177]
---
0xdf DUP1
0xe0 PUSH4 0x95ea7b3
0xe5 EQ
0xe6 PUSH2 0x177
0xe9 JUMPI
---
0xe0: V65 = 0x95ea7b3
0xe5: V66 = EQ 0x95ea7b3 V13
0xe6: V67 = 0x177
0xe9: JUMPI 0x177 V66
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xea
[0xea:0xf4]
---
Predecessors: [0xdf]
Successors: [0xf5, 0x1b7]
---
0xea DUP1
0xeb PUSH4 0x18160ddd
0xf0 EQ
0xf1 PUSH2 0x1b7
0xf4 JUMPI
---
0xeb: V68 = 0x18160ddd
0xf0: V69 = EQ 0x18160ddd V13
0xf1: V70 = 0x1b7
0xf4: JUMPI 0x1b7 V69
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xf5
[0xf5:0xf9]
---
Predecessors: [0x10, 0x62, 0x93, 0xcf, 0xea]
Successors: []
---
0xf5 JUMPDEST
0xf6 PUSH1 0x0
0xf8 DUP1
0xf9 REVERT
---
0xf5: JUMPDEST 
0xf6: V71 = 0x0
0xf9: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xfa
[0xfa:0x101]
---
Predecessors: [0xd3]
Successors: [0x385]
---
0xfa JUMPDEST
0xfb PUSH2 0x102
0xfe PUSH2 0x385
0x101 JUMP
---
0xfa: JUMPDEST 
0xfb: V72 = 0x102
0xfe: V73 = 0x385
0x101: JUMP 0x385
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x102]
Exit stack: [V13, 0x102]

================================

Block 0x102
[0x102:0x123]
---
Predecessors: [0x411]
Successors: [0x124]
---
0x102 JUMPDEST
0x103 PUSH1 0x40
0x105 DUP1
0x106 MLOAD
0x107 PUSH1 0x20
0x109 DUP1
0x10a DUP3
0x10b MSTORE
0x10c DUP4
0x10d MLOAD
0x10e DUP2
0x10f DUP4
0x110 ADD
0x111 MSTORE
0x112 DUP4
0x113 MLOAD
0x114 SWAP2
0x115 SWAP3
0x116 DUP4
0x117 SWAP3
0x118 SWAP1
0x119 DUP4
0x11a ADD
0x11b SWAP2
0x11c DUP6
0x11d ADD
0x11e SWAP1
0x11f DUP1
0x120 DUP4
0x121 DUP4
0x122 PUSH1 0x0
---
0x102: JUMPDEST 
0x103: V74 = 0x40
0x106: V75 = M[0x40]
0x107: V76 = 0x20
0x10b: M[V75] = 0x20
0x10d: V77 = M[S0]
0x110: V78 = ADD V75 0x20
0x111: M[V78] = V77
0x113: V79 = M[S0]
0x11a: V80 = ADD V75 0x40
0x11d: V81 = ADD S0 0x20
0x122: V82 = 0x0
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: [S0, V75, V75, V80, V81, V79, V79, V80, V81, 0x0]
Exit stack: [V13, S0, V75, V75, V80, V81, V79, V79, V80, V81, 0x0]

================================

Block 0x124
[0x124:0x12c]
---
Predecessors: [0x102, 0x12d]
Successors: [0x12d, 0x13c]
---
0x124 JUMPDEST
0x125 DUP4
0x126 DUP2
0x127 LT
0x128 ISZERO
0x129 PUSH2 0x13c
0x12c JUMPI
---
0x124: JUMPDEST 
0x127: V83 = LT S0 V79
0x128: V84 = ISZERO V83
0x129: V85 = 0x13c
0x12c: JUMPI 0x13c V84
---
Entry stack: [V13, S9, V75, V75, V80, V81, V79, V79, V80, V81, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S9, V75, V75, V80, V81, V79, V79, V80, V81, S0]

================================

Block 0x12d
[0x12d:0x13b]
---
Predecessors: [0x124]
Successors: [0x124]
---
0x12d DUP2
0x12e DUP2
0x12f ADD
0x130 MLOAD
0x131 DUP4
0x132 DUP3
0x133 ADD
0x134 MSTORE
0x135 PUSH1 0x20
0x137 ADD
0x138 PUSH2 0x124
0x13b JUMP
---
0x12f: V86 = ADD S0 V81
0x130: V87 = M[V86]
0x133: V88 = ADD S0 V80
0x134: M[V88] = V87
0x135: V89 = 0x20
0x137: V90 = ADD 0x20 S0
0x138: V91 = 0x124
0x13b: JUMP 0x124
---
Entry stack: [V13, S9, V75, V75, V80, V81, V79, V79, V80, V81, S0]
Stack pops: 3
Stack additions: [S2, S1, V90]
Exit stack: [V13, S9, V75, V75, V80, V81, V79, V79, V80, V81, V90]

================================

Block 0x13c
[0x13c:0x14f]
---
Predecessors: [0x124]
Successors: [0x150, 0x169]
---
0x13c JUMPDEST
0x13d POP
0x13e POP
0x13f POP
0x140 POP
0x141 SWAP1
0x142 POP
0x143 SWAP1
0x144 DUP2
0x145 ADD
0x146 SWAP1
0x147 PUSH1 0x1f
0x149 AND
0x14a DUP1
0x14b ISZERO
0x14c PUSH2 0x169
0x14f JUMPI
---
0x13c: JUMPDEST 
0x145: V92 = ADD V79 V80
0x147: V93 = 0x1f
0x149: V94 = AND 0x1f V79
0x14b: V95 = ISZERO V94
0x14c: V96 = 0x169
0x14f: JUMPI 0x169 V95
---
Entry stack: [V13, S9, V75, V75, V80, V81, V79, V79, V80, V81, S0]
Stack pops: 7
Stack additions: [V92, V94]
Exit stack: [V13, S9, V75, V75, V92, V94]

================================

Block 0x150
[0x150:0x168]
---
Predecessors: [0x13c]
Successors: [0x169]
---
0x150 DUP1
0x151 DUP3
0x152 SUB
0x153 DUP1
0x154 MLOAD
0x155 PUSH1 0x1
0x157 DUP4
0x158 PUSH1 0x20
0x15a SUB
0x15b PUSH2 0x100
0x15e EXP
0x15f SUB
0x160 NOT
0x161 AND
0x162 DUP2
0x163 MSTORE
0x164 PUSH1 0x20
0x166 ADD
0x167 SWAP2
0x168 POP
---
0x152: V97 = SUB V92 V94
0x154: V98 = M[V97]
0x155: V99 = 0x1
0x158: V100 = 0x20
0x15a: V101 = SUB 0x20 V94
0x15b: V102 = 0x100
0x15e: V103 = EXP 0x100 V101
0x15f: V104 = SUB V103 0x1
0x160: V105 = NOT V104
0x161: V106 = AND V105 V98
0x163: M[V97] = V106
0x164: V107 = 0x20
0x166: V108 = ADD 0x20 V97
---
Entry stack: [V13, S4, V75, V75, V92, V94]
Stack pops: 2
Stack additions: [V108, S0]
Exit stack: [V13, S4, V75, V75, V108, V94]

================================

Block 0x169
[0x169:0x176]
---
Predecessors: [0x13c, 0x150]
Successors: []
---
0x169 JUMPDEST
0x16a POP
0x16b SWAP3
0x16c POP
0x16d POP
0x16e POP
0x16f PUSH1 0x40
0x171 MLOAD
0x172 DUP1
0x173 SWAP2
0x174 SUB
0x175 SWAP1
0x176 RETURN
---
0x169: JUMPDEST 
0x16f: V109 = 0x40
0x171: V110 = M[0x40]
0x174: V111 = SUB S1 V110
0x176: RETURN V110 V111
---
Entry stack: [V13, S4, V75, V75, S1, V94]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x177
[0x177:0x188]
---
Predecessors: [0xdf]
Successors: [0x189, 0x18d]
---
0x177 JUMPDEST
0x178 PUSH2 0x1a3
0x17b PUSH1 0x4
0x17d DUP1
0x17e CALLDATASIZE
0x17f SUB
0x180 PUSH1 0x40
0x182 DUP2
0x183 LT
0x184 ISZERO
0x185 PUSH2 0x18d
0x188 JUMPI
---
0x177: JUMPDEST 
0x178: V112 = 0x1a3
0x17b: V113 = 0x4
0x17e: V114 = CALLDATASIZE
0x17f: V115 = SUB V114 0x4
0x180: V116 = 0x40
0x183: V117 = LT V115 0x40
0x184: V118 = ISZERO V117
0x185: V119 = 0x18d
0x188: JUMPI 0x18d V118
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1a3, 0x4, V115]
Exit stack: [V13, 0x1a3, 0x4, V115]

================================

Block 0x189
[0x189:0x18c]
---
Predecessors: [0x177]
Successors: []
---
0x189 PUSH1 0x0
0x18b DUP1
0x18c REVERT
---
0x189: V120 = 0x0
0x18c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a3, 0x4, V115]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a3, 0x4, V115]

================================

Block 0x18d
[0x18d:0x1a2]
---
Predecessors: [0x177]
Successors: [0x41b]
---
0x18d JUMPDEST
0x18e POP
0x18f PUSH1 0x1
0x191 PUSH1 0x1
0x193 PUSH1 0xa0
0x195 SHL
0x196 SUB
0x197 DUP2
0x198 CALLDATALOAD
0x199 AND
0x19a SWAP1
0x19b PUSH1 0x20
0x19d ADD
0x19e CALLDATALOAD
0x19f PUSH2 0x41b
0x1a2 JUMP
---
0x18d: JUMPDEST 
0x18f: V121 = 0x1
0x191: V122 = 0x1
0x193: V123 = 0xa0
0x195: V124 = SHL 0xa0 0x1
0x196: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x198: V126 = CALLDATALOAD 0x4
0x199: V127 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x19b: V128 = 0x20
0x19d: V129 = ADD 0x20 0x4
0x19e: V130 = CALLDATALOAD 0x24
0x19f: V131 = 0x41b
0x1a2: JUMP 0x41b
---
Entry stack: [V13, 0x1a3, 0x4, V115]
Stack pops: 2
Stack additions: [V127, V130]
Exit stack: [V13, 0x1a3, V127, V130]

================================

Block 0x1a3
[0x1a3:0x1b6]
---
Predecessors: [0x42f, 0x4bb, 0xb93]
Successors: []
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x40
0x1a6 DUP1
0x1a7 MLOAD
0x1a8 SWAP2
0x1a9 ISZERO
0x1aa ISZERO
0x1ab DUP3
0x1ac MSTORE
0x1ad MLOAD
0x1ae SWAP1
0x1af DUP2
0x1b0 SWAP1
0x1b1 SUB
0x1b2 PUSH1 0x20
0x1b4 ADD
0x1b5 SWAP1
0x1b6 RETURN
---
0x1a3: JUMPDEST 
0x1a4: V132 = 0x40
0x1a7: V133 = M[0x40]
0x1a9: V134 = ISZERO 0x1
0x1aa: V135 = ISZERO 0x0
0x1ac: M[V133] = 0x1
0x1ad: V136 = M[0x40]
0x1b1: V137 = SUB V133 V136
0x1b2: V138 = 0x20
0x1b4: V139 = ADD 0x20 V137
0x1b6: RETURN V136 V139
---
Entry stack: [V13, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x1b7
[0x1b7:0x1be]
---
Predecessors: [0xea]
Successors: [0x438]
---
0x1b7 JUMPDEST
0x1b8 PUSH2 0x1bf
0x1bb PUSH2 0x438
0x1be JUMP
---
0x1b7: JUMPDEST 
0x1b8: V140 = 0x1bf
0x1bb: V141 = 0x438
0x1be: JUMP 0x438
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1bf]
Exit stack: [V13, 0x1bf]

================================

Block 0x1bf
[0x1bf:0x1d0]
---
Predecessors: [0x438, 0x59e, 0x76e]
Successors: []
---
0x1bf JUMPDEST
0x1c0 PUSH1 0x40
0x1c2 DUP1
0x1c3 MLOAD
0x1c4 SWAP2
0x1c5 DUP3
0x1c6 MSTORE
0x1c7 MLOAD
0x1c8 SWAP1
0x1c9 DUP2
0x1ca SWAP1
0x1cb SUB
0x1cc PUSH1 0x20
0x1ce ADD
0x1cf SWAP1
0x1d0 RETURN
---
0x1bf: JUMPDEST 
0x1c0: V142 = 0x40
0x1c3: V143 = M[0x40]
0x1c6: M[V143] = S0
0x1c7: V144 = M[0x40]
0x1cb: V145 = SUB V143 V144
0x1cc: V146 = 0x20
0x1ce: V147 = ADD 0x20 V145
0x1d0: RETURN V144 V147
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d1
[0x1d1:0x1e2]
---
Predecessors: [0xa3]
Successors: [0x1e3, 0x1e7]
---
0x1d1 JUMPDEST
0x1d2 PUSH2 0x1a3
0x1d5 PUSH1 0x4
0x1d7 DUP1
0x1d8 CALLDATASIZE
0x1d9 SUB
0x1da PUSH1 0x60
0x1dc DUP2
0x1dd LT
0x1de ISZERO
0x1df PUSH2 0x1e7
0x1e2 JUMPI
---
0x1d1: JUMPDEST 
0x1d2: V148 = 0x1a3
0x1d5: V149 = 0x4
0x1d8: V150 = CALLDATASIZE
0x1d9: V151 = SUB V150 0x4
0x1da: V152 = 0x60
0x1dd: V153 = LT V151 0x60
0x1de: V154 = ISZERO V153
0x1df: V155 = 0x1e7
0x1e2: JUMPI 0x1e7 V154
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1a3, 0x4, V151]
Exit stack: [V13, 0x1a3, 0x4, V151]

================================

Block 0x1e3
[0x1e3:0x1e6]
---
Predecessors: [0x1d1]
Successors: []
---
0x1e3 PUSH1 0x0
0x1e5 DUP1
0x1e6 REVERT
---
0x1e3: V156 = 0x0
0x1e6: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a3, 0x4, V151]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a3, 0x4, V151]

================================

Block 0x1e7
[0x1e7:0x206]
---
Predecessors: [0x1d1]
Successors: [0x43e]
---
0x1e7 JUMPDEST
0x1e8 POP
0x1e9 PUSH1 0x1
0x1eb PUSH1 0x1
0x1ed PUSH1 0xa0
0x1ef SHL
0x1f0 SUB
0x1f1 DUP2
0x1f2 CALLDATALOAD
0x1f3 DUP2
0x1f4 AND
0x1f5 SWAP2
0x1f6 PUSH1 0x20
0x1f8 DUP2
0x1f9 ADD
0x1fa CALLDATALOAD
0x1fb SWAP1
0x1fc SWAP2
0x1fd AND
0x1fe SWAP1
0x1ff PUSH1 0x40
0x201 ADD
0x202 CALLDATALOAD
0x203 PUSH2 0x43e
0x206 JUMP
---
0x1e7: JUMPDEST 
0x1e9: V157 = 0x1
0x1eb: V158 = 0x1
0x1ed: V159 = 0xa0
0x1ef: V160 = SHL 0xa0 0x1
0x1f0: V161 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f2: V162 = CALLDATALOAD 0x4
0x1f4: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V162
0x1f6: V164 = 0x20
0x1f9: V165 = ADD 0x4 0x20
0x1fa: V166 = CALLDATALOAD 0x24
0x1fd: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x1ff: V168 = 0x40
0x201: V169 = ADD 0x40 0x4
0x202: V170 = CALLDATALOAD 0x44
0x203: V171 = 0x43e
0x206: JUMP 0x43e
---
Entry stack: [V13, 0x1a3, 0x4, V151]
Stack pops: 2
Stack additions: [V163, V167, V170]
Exit stack: [V13, 0x1a3, V163, V167, V170]

================================

Block 0x207
[0x207:0x20e]
---
Predecessors: [0xae]
Successors: [0x4c5]
---
0x207 JUMPDEST
0x208 PUSH2 0x20f
0x20b PUSH2 0x4c5
0x20e JUMP
---
0x207: JUMPDEST 
0x208: V172 = 0x20f
0x20b: V173 = 0x4c5
0x20e: JUMP 0x4c5
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x20f]
Exit stack: [V13, 0x20f]

================================

Block 0x20f
[0x20f:0x224]
---
Predecessors: [0x4c5]
Successors: []
---
0x20f JUMPDEST
0x210 PUSH1 0x40
0x212 DUP1
0x213 MLOAD
0x214 PUSH1 0xff
0x216 SWAP1
0x217 SWAP3
0x218 AND
0x219 DUP3
0x21a MSTORE
0x21b MLOAD
0x21c SWAP1
0x21d DUP2
0x21e SWAP1
0x21f SUB
0x220 PUSH1 0x20
0x222 ADD
0x223 SWAP1
0x224 RETURN
---
0x20f: JUMPDEST 
0x210: V174 = 0x40
0x213: V175 = M[0x40]
0x214: V176 = 0xff
0x218: V177 = AND V444 0xff
0x21a: M[V175] = V177
0x21b: V178 = M[0x40]
0x21f: V179 = SUB V175 V178
0x220: V180 = 0x20
0x222: V181 = ADD 0x20 V179
0x224: RETURN V178 V181
---
Entry stack: [V13, V444]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x225
[0x225:0x236]
---
Predecessors: [0xb9]
Successors: [0x237, 0x23b]
---
0x225 JUMPDEST
0x226 PUSH2 0x1a3
0x229 PUSH1 0x4
0x22b DUP1
0x22c CALLDATASIZE
0x22d SUB
0x22e PUSH1 0x40
0x230 DUP2
0x231 LT
0x232 ISZERO
0x233 PUSH2 0x23b
0x236 JUMPI
---
0x225: JUMPDEST 
0x226: V182 = 0x1a3
0x229: V183 = 0x4
0x22c: V184 = CALLDATASIZE
0x22d: V185 = SUB V184 0x4
0x22e: V186 = 0x40
0x231: V187 = LT V185 0x40
0x232: V188 = ISZERO V187
0x233: V189 = 0x23b
0x236: JUMPI 0x23b V188
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1a3, 0x4, V185]
Exit stack: [V13, 0x1a3, 0x4, V185]

================================

Block 0x237
[0x237:0x23a]
---
Predecessors: [0x225]
Successors: []
---
0x237 PUSH1 0x0
0x239 DUP1
0x23a REVERT
---
0x237: V190 = 0x0
0x23a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a3, 0x4, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a3, 0x4, V185]

================================

Block 0x23b
[0x23b:0x250]
---
Predecessors: [0x225]
Successors: [0x4ce]
---
0x23b JUMPDEST
0x23c POP
0x23d PUSH1 0x1
0x23f PUSH1 0x1
0x241 PUSH1 0xa0
0x243 SHL
0x244 SUB
0x245 DUP2
0x246 CALLDATALOAD
0x247 AND
0x248 SWAP1
0x249 PUSH1 0x20
0x24b ADD
0x24c CALLDATALOAD
0x24d PUSH2 0x4ce
0x250 JUMP
---
0x23b: JUMPDEST 
0x23d: V191 = 0x1
0x23f: V192 = 0x1
0x241: V193 = 0xa0
0x243: V194 = SHL 0xa0 0x1
0x244: V195 = SUB 0x10000000000000000000000000000000000000000 0x1
0x246: V196 = CALLDATALOAD 0x4
0x247: V197 = AND V196 0xffffffffffffffffffffffffffffffffffffffff
0x249: V198 = 0x20
0x24b: V199 = ADD 0x20 0x4
0x24c: V200 = CALLDATALOAD 0x24
0x24d: V201 = 0x4ce
0x250: JUMP 0x4ce
---
Entry stack: [V13, 0x1a3, 0x4, V185]
Stack pops: 2
Stack additions: [V197, V200]
Exit stack: [V13, 0x1a3, V197, V200]

================================

Block 0x251
[0x251:0x262]
---
Predecessors: [0xc4]
Successors: [0x263, 0x267]
---
0x251 JUMPDEST
0x252 PUSH2 0x27d
0x255 PUSH1 0x4
0x257 DUP1
0x258 CALLDATASIZE
0x259 SUB
0x25a PUSH1 0x40
0x25c DUP2
0x25d LT
0x25e ISZERO
0x25f PUSH2 0x267
0x262 JUMPI
---
0x251: JUMPDEST 
0x252: V202 = 0x27d
0x255: V203 = 0x4
0x258: V204 = CALLDATASIZE
0x259: V205 = SUB V204 0x4
0x25a: V206 = 0x40
0x25d: V207 = LT V205 0x40
0x25e: V208 = ISZERO V207
0x25f: V209 = 0x267
0x262: JUMPI 0x267 V208
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x27d, 0x4, V205]
Exit stack: [V13, 0x27d, 0x4, V205]

================================

Block 0x263
[0x263:0x266]
---
Predecessors: [0x251]
Successors: []
---
0x263 PUSH1 0x0
0x265 DUP1
0x266 REVERT
---
0x263: V210 = 0x0
0x266: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27d, 0x4, V205]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27d, 0x4, V205]

================================

Block 0x267
[0x267:0x27c]
---
Predecessors: [0x251]
Successors: [0x51c]
---
0x267 JUMPDEST
0x268 POP
0x269 PUSH1 0x1
0x26b PUSH1 0x1
0x26d PUSH1 0xa0
0x26f SHL
0x270 SUB
0x271 DUP2
0x272 CALLDATALOAD
0x273 AND
0x274 SWAP1
0x275 PUSH1 0x20
0x277 ADD
0x278 CALLDATALOAD
0x279 PUSH2 0x51c
0x27c JUMP
---
0x267: JUMPDEST 
0x269: V211 = 0x1
0x26b: V212 = 0x1
0x26d: V213 = 0xa0
0x26f: V214 = SHL 0xa0 0x1
0x270: V215 = SUB 0x10000000000000000000000000000000000000000 0x1
0x272: V216 = CALLDATALOAD 0x4
0x273: V217 = AND V216 0xffffffffffffffffffffffffffffffffffffffff
0x275: V218 = 0x20
0x277: V219 = ADD 0x20 0x4
0x278: V220 = CALLDATALOAD 0x24
0x279: V221 = 0x51c
0x27c: JUMP 0x51c
---
Entry stack: [V13, 0x27d, 0x4, V205]
Stack pops: 2
Stack additions: [V217, V220]
Exit stack: [V13, 0x27d, V217, V220]

================================

Block 0x27d
[0x27d:0x27e]
---
Predecessors: [0x59a, 0x62d, 0x852]
Successors: []
---
0x27d JUMPDEST
0x27e STOP
---
0x27d: JUMPDEST 
0x27e: STOP 
---
Entry stack: [V13, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S1, S0]

================================

Block 0x27f
[0x27f:0x290]
---
Predecessors: [0x66]
Successors: [0x291, 0x295]
---
0x27f JUMPDEST
0x280 PUSH2 0x1bf
0x283 PUSH1 0x4
0x285 DUP1
0x286 CALLDATASIZE
0x287 SUB
0x288 PUSH1 0x20
0x28a DUP2
0x28b LT
0x28c ISZERO
0x28d PUSH2 0x295
0x290 JUMPI
---
0x27f: JUMPDEST 
0x280: V222 = 0x1bf
0x283: V223 = 0x4
0x286: V224 = CALLDATASIZE
0x287: V225 = SUB V224 0x4
0x288: V226 = 0x20
0x28b: V227 = LT V225 0x20
0x28c: V228 = ISZERO V227
0x28d: V229 = 0x295
0x290: JUMPI 0x295 V228
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1bf, 0x4, V225]
Exit stack: [V13, 0x1bf, 0x4, V225]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x27f]
Successors: []
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
---
0x291: V230 = 0x0
0x294: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1bf, 0x4, V225]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bf, 0x4, V225]

================================

Block 0x295
[0x295:0x2a4]
---
Predecessors: [0x27f]
Successors: [0x59e]
---
0x295 JUMPDEST
0x296 POP
0x297 CALLDATALOAD
0x298 PUSH1 0x1
0x29a PUSH1 0x1
0x29c PUSH1 0xa0
0x29e SHL
0x29f SUB
0x2a0 AND
0x2a1 PUSH2 0x59e
0x2a4 JUMP
---
0x295: JUMPDEST 
0x297: V231 = CALLDATALOAD 0x4
0x298: V232 = 0x1
0x29a: V233 = 0x1
0x29c: V234 = 0xa0
0x29e: V235 = SHL 0xa0 0x1
0x29f: V236 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a0: V237 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x2a1: V238 = 0x59e
0x2a4: JUMP 0x59e
---
Entry stack: [V13, 0x1bf, 0x4, V225]
Stack pops: 2
Stack additions: [V237]
Exit stack: [V13, 0x1bf, V237]

================================

Block 0x2a5
[0x2a5:0x2ac]
---
Predecessors: [0x72]
Successors: [0x5b9]
---
0x2a5 JUMPDEST
0x2a6 PUSH2 0x27d
0x2a9 PUSH2 0x5b9
0x2ac JUMP
---
0x2a5: JUMPDEST 
0x2a6: V239 = 0x27d
0x2a9: V240 = 0x5b9
0x2ac: JUMP 0x5b9
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x27d]
Exit stack: [V13, 0x27d]

================================

Block 0x2ad
[0x2ad:0x2b4]
---
Predecessors: [0x7d]
Successors: [0x67d]
---
0x2ad JUMPDEST
0x2ae PUSH2 0x2b5
0x2b1 PUSH2 0x67d
0x2b4 JUMP
---
0x2ad: JUMPDEST 
0x2ae: V241 = 0x2b5
0x2b1: V242 = 0x67d
0x2b4: JUMP 0x67d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2b5]
Exit stack: [V13, 0x2b5]

================================

Block 0x2b5
[0x2b5:0x2d0]
---
Predecessors: [0x67d]
Successors: []
---
0x2b5 JUMPDEST
0x2b6 PUSH1 0x40
0x2b8 DUP1
0x2b9 MLOAD
0x2ba PUSH1 0x1
0x2bc PUSH1 0x1
0x2be PUSH1 0xa0
0x2c0 SHL
0x2c1 SUB
0x2c2 SWAP1
0x2c3 SWAP3
0x2c4 AND
0x2c5 DUP3
0x2c6 MSTORE
0x2c7 MLOAD
0x2c8 SWAP1
0x2c9 DUP2
0x2ca SWAP1
0x2cb SUB
0x2cc PUSH1 0x20
0x2ce ADD
0x2cf SWAP1
0x2d0 RETURN
---
0x2b5: JUMPDEST 
0x2b6: V243 = 0x40
0x2b9: V244 = M[0x40]
0x2ba: V245 = 0x1
0x2bc: V246 = 0x1
0x2be: V247 = 0xa0
0x2c0: V248 = SHL 0xa0 0x1
0x2c1: V249 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c4: V250 = AND V585 0xffffffffffffffffffffffffffffffffffffffff
0x2c6: M[V244] = V250
0x2c7: V251 = M[0x40]
0x2cb: V252 = SUB V244 V251
0x2cc: V253 = 0x20
0x2ce: V254 = ADD 0x20 V252
0x2d0: RETURN V251 V254
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V585]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x2d1
[0x2d1:0x2d8]
---
Predecessors: [0x88]
Successors: [0x691]
---
0x2d1 JUMPDEST
0x2d2 PUSH2 0x102
0x2d5 PUSH2 0x691
0x2d8 JUMP
---
0x2d1: JUMPDEST 
0x2d2: V255 = 0x102
0x2d5: V256 = 0x691
0x2d8: JUMP 0x691
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x102]
Exit stack: [V13, 0x102]

================================

Block 0x2d9
[0x2d9:0x2ea]
---
Predecessors: [0x36]
Successors: [0x2eb, 0x2ef]
---
0x2d9 JUMPDEST
0x2da PUSH2 0x1a3
0x2dd PUSH1 0x4
0x2df DUP1
0x2e0 CALLDATASIZE
0x2e1 SUB
0x2e2 PUSH1 0x40
0x2e4 DUP2
0x2e5 LT
0x2e6 ISZERO
0x2e7 PUSH2 0x2ef
0x2ea JUMPI
---
0x2d9: JUMPDEST 
0x2da: V257 = 0x1a3
0x2dd: V258 = 0x4
0x2e0: V259 = CALLDATASIZE
0x2e1: V260 = SUB V259 0x4
0x2e2: V261 = 0x40
0x2e5: V262 = LT V260 0x40
0x2e6: V263 = ISZERO V262
0x2e7: V264 = 0x2ef
0x2ea: JUMPI 0x2ef V263
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1a3, 0x4, V260]
Exit stack: [V13, 0x1a3, 0x4, V260]

================================

Block 0x2eb
[0x2eb:0x2ee]
---
Predecessors: [0x2d9]
Successors: []
---
0x2eb PUSH1 0x0
0x2ed DUP1
0x2ee REVERT
---
0x2eb: V265 = 0x0
0x2ee: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a3, 0x4, V260]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a3, 0x4, V260]

================================

Block 0x2ef
[0x2ef:0x304]
---
Predecessors: [0x2d9]
Successors: [0x6f2]
---
0x2ef JUMPDEST
0x2f0 POP
0x2f1 PUSH1 0x1
0x2f3 PUSH1 0x1
0x2f5 PUSH1 0xa0
0x2f7 SHL
0x2f8 SUB
0x2f9 DUP2
0x2fa CALLDATALOAD
0x2fb AND
0x2fc SWAP1
0x2fd PUSH1 0x20
0x2ff ADD
0x300 CALLDATALOAD
0x301 PUSH2 0x6f2
0x304 JUMP
---
0x2ef: JUMPDEST 
0x2f1: V266 = 0x1
0x2f3: V267 = 0x1
0x2f5: V268 = 0xa0
0x2f7: V269 = SHL 0xa0 0x1
0x2f8: V270 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fa: V271 = CALLDATALOAD 0x4
0x2fb: V272 = AND V271 0xffffffffffffffffffffffffffffffffffffffff
0x2fd: V273 = 0x20
0x2ff: V274 = ADD 0x20 0x4
0x300: V275 = CALLDATALOAD 0x24
0x301: V276 = 0x6f2
0x304: JUMP 0x6f2
---
Entry stack: [V13, 0x1a3, 0x4, V260]
Stack pops: 2
Stack additions: [V272, V275]
Exit stack: [V13, 0x1a3, V272, V275]

================================

Block 0x305
[0x305:0x316]
---
Predecessors: [0x41]
Successors: [0x317, 0x31b]
---
0x305 JUMPDEST
0x306 PUSH2 0x1a3
0x309 PUSH1 0x4
0x30b DUP1
0x30c CALLDATASIZE
0x30d SUB
0x30e PUSH1 0x40
0x310 DUP2
0x311 LT
0x312 ISZERO
0x313 PUSH2 0x31b
0x316 JUMPI
---
0x305: JUMPDEST 
0x306: V277 = 0x1a3
0x309: V278 = 0x4
0x30c: V279 = CALLDATASIZE
0x30d: V280 = SUB V279 0x4
0x30e: V281 = 0x40
0x311: V282 = LT V280 0x40
0x312: V283 = ISZERO V282
0x313: V284 = 0x31b
0x316: JUMPI 0x31b V283
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1a3, 0x4, V280]
Exit stack: [V13, 0x1a3, 0x4, V280]

================================

Block 0x317
[0x317:0x31a]
---
Predecessors: [0x305]
Successors: []
---
0x317 PUSH1 0x0
0x319 DUP1
0x31a REVERT
---
0x317: V285 = 0x0
0x31a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a3, 0x4, V280]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a3, 0x4, V280]

================================

Block 0x31b
[0x31b:0x330]
---
Predecessors: [0x305]
Successors: [0x75a]
---
0x31b JUMPDEST
0x31c POP
0x31d PUSH1 0x1
0x31f PUSH1 0x1
0x321 PUSH1 0xa0
0x323 SHL
0x324 SUB
0x325 DUP2
0x326 CALLDATALOAD
0x327 AND
0x328 SWAP1
0x329 PUSH1 0x20
0x32b ADD
0x32c CALLDATALOAD
0x32d PUSH2 0x75a
0x330 JUMP
---
0x31b: JUMPDEST 
0x31d: V286 = 0x1
0x31f: V287 = 0x1
0x321: V288 = 0xa0
0x323: V289 = SHL 0xa0 0x1
0x324: V290 = SUB 0x10000000000000000000000000000000000000000 0x1
0x326: V291 = CALLDATALOAD 0x4
0x327: V292 = AND V291 0xffffffffffffffffffffffffffffffffffffffff
0x329: V293 = 0x20
0x32b: V294 = ADD 0x20 0x4
0x32c: V295 = CALLDATALOAD 0x24
0x32d: V296 = 0x75a
0x330: JUMP 0x75a
---
Entry stack: [V13, 0x1a3, 0x4, V280]
Stack pops: 2
Stack additions: [V292, V295]
Exit stack: [V13, 0x1a3, V292, V295]

================================

Block 0x331
[0x331:0x342]
---
Predecessors: [0x4c]
Successors: [0x343, 0x347]
---
0x331 JUMPDEST
0x332 PUSH2 0x1bf
0x335 PUSH1 0x4
0x337 DUP1
0x338 CALLDATASIZE
0x339 SUB
0x33a PUSH1 0x40
0x33c DUP2
0x33d LT
0x33e ISZERO
0x33f PUSH2 0x347
0x342 JUMPI
---
0x331: JUMPDEST 
0x332: V297 = 0x1bf
0x335: V298 = 0x4
0x338: V299 = CALLDATASIZE
0x339: V300 = SUB V299 0x4
0x33a: V301 = 0x40
0x33d: V302 = LT V300 0x40
0x33e: V303 = ISZERO V302
0x33f: V304 = 0x347
0x342: JUMPI 0x347 V303
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1bf, 0x4, V300]
Exit stack: [V13, 0x1bf, 0x4, V300]

================================

Block 0x343
[0x343:0x346]
---
Predecessors: [0x331]
Successors: []
---
0x343 PUSH1 0x0
0x345 DUP1
0x346 REVERT
---
0x343: V305 = 0x0
0x346: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1bf, 0x4, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1bf, 0x4, V300]

================================

Block 0x347
[0x347:0x35e]
---
Predecessors: [0x331]
Successors: [0x76e]
---
0x347 JUMPDEST
0x348 POP
0x349 PUSH1 0x1
0x34b PUSH1 0x1
0x34d PUSH1 0xa0
0x34f SHL
0x350 SUB
0x351 DUP2
0x352 CALLDATALOAD
0x353 DUP2
0x354 AND
0x355 SWAP2
0x356 PUSH1 0x20
0x358 ADD
0x359 CALLDATALOAD
0x35a AND
0x35b PUSH2 0x76e
0x35e JUMP
---
0x347: JUMPDEST 
0x349: V306 = 0x1
0x34b: V307 = 0x1
0x34d: V308 = 0xa0
0x34f: V309 = SHL 0xa0 0x1
0x350: V310 = SUB 0x10000000000000000000000000000000000000000 0x1
0x352: V311 = CALLDATALOAD 0x4
0x354: V312 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x356: V313 = 0x20
0x358: V314 = ADD 0x20 0x4
0x359: V315 = CALLDATALOAD 0x24
0x35a: V316 = AND V315 0xffffffffffffffffffffffffffffffffffffffff
0x35b: V317 = 0x76e
0x35e: JUMP 0x76e
---
Entry stack: [V13, 0x1bf, 0x4, V300]
Stack pops: 2
Stack additions: [V312, V316]
Exit stack: [V13, 0x1bf, V312, V316]

================================

Block 0x35f
[0x35f:0x370]
---
Predecessors: [0x57]
Successors: [0x371, 0x375]
---
0x35f JUMPDEST
0x360 PUSH2 0x27d
0x363 PUSH1 0x4
0x365 DUP1
0x366 CALLDATASIZE
0x367 SUB
0x368 PUSH1 0x20
0x36a DUP2
0x36b LT
0x36c ISZERO
0x36d PUSH2 0x375
0x370 JUMPI
---
0x35f: JUMPDEST 
0x360: V318 = 0x27d
0x363: V319 = 0x4
0x366: V320 = CALLDATASIZE
0x367: V321 = SUB V320 0x4
0x368: V322 = 0x20
0x36b: V323 = LT V321 0x20
0x36c: V324 = ISZERO V323
0x36d: V325 = 0x375
0x370: JUMPI 0x375 V324
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x27d, 0x4, V321]
Exit stack: [V13, 0x27d, 0x4, V321]

================================

Block 0x371
[0x371:0x374]
---
Predecessors: [0x35f]
Successors: []
---
0x371 PUSH1 0x0
0x373 DUP1
0x374 REVERT
---
0x371: V326 = 0x0
0x374: REVERT 0x0 0x0
---
Entry stack: [V13, 0x27d, 0x4, V321]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x27d, 0x4, V321]

================================

Block 0x375
[0x375:0x384]
---
Predecessors: [0x35f]
Successors: [0x799]
---
0x375 JUMPDEST
0x376 POP
0x377 CALLDATALOAD
0x378 PUSH1 0x1
0x37a PUSH1 0x1
0x37c PUSH1 0xa0
0x37e SHL
0x37f SUB
0x380 AND
0x381 PUSH2 0x799
0x384 JUMP
---
0x375: JUMPDEST 
0x377: V327 = CALLDATALOAD 0x4
0x378: V328 = 0x1
0x37a: V329 = 0x1
0x37c: V330 = 0xa0
0x37e: V331 = SHL 0xa0 0x1
0x37f: V332 = SUB 0x10000000000000000000000000000000000000000 0x1
0x380: V333 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x381: V334 = 0x799
0x384: JUMP 0x799
---
Entry stack: [V13, 0x27d, 0x4, V321]
Stack pops: 2
Stack additions: [V333]
Exit stack: [V13, 0x27d, V333]

================================

Block 0x385
[0x385:0x3ca]
---
Predecessors: [0xfa]
Successors: [0x3cb, 0x411]
---
0x385 JUMPDEST
0x386 PUSH1 0x3
0x388 DUP1
0x389 SLOAD
0x38a PUSH1 0x40
0x38c DUP1
0x38d MLOAD
0x38e PUSH1 0x20
0x390 PUSH1 0x1f
0x392 PUSH1 0x2
0x394 PUSH1 0x0
0x396 NOT
0x397 PUSH2 0x100
0x39a PUSH1 0x1
0x39c DUP9
0x39d AND
0x39e ISZERO
0x39f MUL
0x3a0 ADD
0x3a1 SWAP1
0x3a2 SWAP6
0x3a3 AND
0x3a4 SWAP5
0x3a5 SWAP1
0x3a6 SWAP5
0x3a7 DIV
0x3a8 SWAP4
0x3a9 DUP5
0x3aa ADD
0x3ab DUP2
0x3ac SWAP1
0x3ad DIV
0x3ae DUP2
0x3af MUL
0x3b0 DUP3
0x3b1 ADD
0x3b2 DUP2
0x3b3 ADD
0x3b4 SWAP1
0x3b5 SWAP3
0x3b6 MSTORE
0x3b7 DUP3
0x3b8 DUP2
0x3b9 MSTORE
0x3ba PUSH1 0x60
0x3bc SWAP4
0x3bd SWAP1
0x3be SWAP3
0x3bf SWAP1
0x3c0 SWAP2
0x3c1 DUP4
0x3c2 ADD
0x3c3 DUP3
0x3c4 DUP3
0x3c5 DUP1
0x3c6 ISZERO
0x3c7 PUSH2 0x411
0x3ca JUMPI
---
0x385: JUMPDEST 
0x386: V335 = 0x3
0x389: V336 = S[0x3]
0x38a: V337 = 0x40
0x38d: V338 = M[0x40]
0x38e: V339 = 0x20
0x390: V340 = 0x1f
0x392: V341 = 0x2
0x394: V342 = 0x0
0x396: V343 = NOT 0x0
0x397: V344 = 0x100
0x39a: V345 = 0x1
0x39d: V346 = AND V336 0x1
0x39e: V347 = ISZERO V346
0x39f: V348 = MUL V347 0x100
0x3a0: V349 = ADD V348 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3a3: V350 = AND V336 V349
0x3a7: V351 = DIV V350 0x2
0x3aa: V352 = ADD V351 0x1f
0x3ad: V353 = DIV V352 0x20
0x3af: V354 = MUL 0x20 V353
0x3b1: V355 = ADD V338 V354
0x3b3: V356 = ADD 0x20 V355
0x3b6: M[0x40] = V356
0x3b9: M[V338] = V351
0x3ba: V357 = 0x60
0x3c2: V358 = ADD V338 0x20
0x3c6: V359 = ISZERO V351
0x3c7: V360 = 0x411
0x3ca: JUMPI 0x411 V359
---
Entry stack: [V13, 0x102]
Stack pops: 0
Stack additions: [0x60, V338, 0x3, V351, V358, 0x3, V351]
Exit stack: [V13, 0x102, 0x60, V338, 0x3, V351, V358, 0x3, V351]

================================

Block 0x3cb
[0x3cb:0x3d2]
---
Predecessors: [0x385]
Successors: [0x3d3, 0x3e6]
---
0x3cb DUP1
0x3cc PUSH1 0x1f
0x3ce LT
0x3cf PUSH2 0x3e6
0x3d2 JUMPI
---
0x3cc: V361 = 0x1f
0x3ce: V362 = LT 0x1f V351
0x3cf: V363 = 0x3e6
0x3d2: JUMPI 0x3e6 V362
---
Entry stack: [V13, 0x102, 0x60, V338, 0x3, V351, V358, 0x3, V351]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x102, 0x60, V338, 0x3, V351, V358, 0x3, V351]

================================

Block 0x3d3
[0x3d3:0x3e5]
---
Predecessors: [0x3cb]
Successors: [0x411]
---
0x3d3 PUSH2 0x100
0x3d6 DUP1
0x3d7 DUP4
0x3d8 SLOAD
0x3d9 DIV
0x3da MUL
0x3db DUP4
0x3dc MSTORE
0x3dd SWAP2
0x3de PUSH1 0x20
0x3e0 ADD
0x3e1 SWAP2
0x3e2 PUSH2 0x411
0x3e5 JUMP
---
0x3d3: V364 = 0x100
0x3d8: V365 = S[0x3]
0x3d9: V366 = DIV V365 0x100
0x3da: V367 = MUL V366 0x100
0x3dc: M[V358] = V367
0x3de: V368 = 0x20
0x3e0: V369 = ADD 0x20 V358
0x3e2: V370 = 0x411
0x3e5: JUMP 0x411
---
Entry stack: [V13, 0x102, 0x60, V338, 0x3, V351, V358, 0x3, V351]
Stack pops: 3
Stack additions: [V369, S1, S0]
Exit stack: [V13, 0x102, 0x60, V338, 0x3, V351, V369, 0x3, V351]

================================

Block 0x3e6
[0x3e6:0x3f3]
---
Predecessors: [0x3cb, 0x6d7]
Successors: [0x3f4]
---
0x3e6 JUMPDEST
0x3e7 DUP3
0x3e8 ADD
0x3e9 SWAP2
0x3ea SWAP1
0x3eb PUSH1 0x0
0x3ed MSTORE
0x3ee PUSH1 0x20
0x3f0 PUSH1 0x0
0x3f2 SHA3
0x3f3 SWAP1
---
0x3e6: JUMPDEST 
0x3e8: V371 = ADD S2 S0
0x3eb: V372 = 0x0
0x3ed: M[0x0] = {0x3, 0x4}
0x3ee: V373 = 0x20
0x3f0: V374 = 0x0
0x3f2: V375 = SHA3 0x0 0x20
---
Entry stack: [V13, 0x102, 0x60, S5, {0x3, 0x4}, S3, S2, {0x3, 0x4}, S0]
Stack pops: 3
Stack additions: [V371, V375, S2]
Exit stack: [V13, 0x102, 0x60, S5, {0x3, 0x4}, S3, V371, V375, S2]

================================

Block 0x3f4
[0x3f4:0x407]
---
Predecessors: [0x3e6, 0x3f4]
Successors: [0x3f4, 0x408]
---
0x3f4 JUMPDEST
0x3f5 DUP2
0x3f6 SLOAD
0x3f7 DUP2
0x3f8 MSTORE
0x3f9 SWAP1
0x3fa PUSH1 0x1
0x3fc ADD
0x3fd SWAP1
0x3fe PUSH1 0x20
0x400 ADD
0x401 DUP1
0x402 DUP4
0x403 GT
0x404 PUSH2 0x3f4
0x407 JUMPI
---
0x3f4: JUMPDEST 
0x3f6: V376 = S[S1]
0x3f8: M[S0] = V376
0x3fa: V377 = 0x1
0x3fc: V378 = ADD 0x1 S1
0x3fe: V379 = 0x20
0x400: V380 = ADD 0x20 S0
0x403: V381 = GT V371 V380
0x404: V382 = 0x3f4
0x407: JUMPI 0x3f4 V381
---
Entry stack: [V13, 0x102, 0x60, S5, {0x3, 0x4}, S3, V371, S1, S0]
Stack pops: 3
Stack additions: [S2, V378, V380]
Exit stack: [V13, 0x102, 0x60, S5, {0x3, 0x4}, S3, V371, V378, V380]

================================

Block 0x408
[0x408:0x410]
---
Predecessors: [0x3f4]
Successors: [0x411]
---
0x408 DUP3
0x409 SWAP1
0x40a SUB
0x40b PUSH1 0x1f
0x40d AND
0x40e DUP3
0x40f ADD
0x410 SWAP2
---
0x40a: V383 = SUB V380 V371
0x40b: V384 = 0x1f
0x40d: V385 = AND 0x1f V383
0x40f: V386 = ADD V371 V385
---
Entry stack: [V13, 0x102, 0x60, S5, {0x3, 0x4}, S3, V371, V378, V380]
Stack pops: 3
Stack additions: [V386, S1, S2]
Exit stack: [V13, 0x102, 0x60, S5, {0x3, 0x4}, S3, V386, V378, V371]

================================

Block 0x411
[0x411:0x41a]
---
Predecessors: [0x385, 0x3d3, 0x408, 0x691, 0x6df]
Successors: [0x102]
---
0x411 JUMPDEST
0x412 POP
0x413 POP
0x414 POP
0x415 POP
0x416 POP
0x417 SWAP1
0x418 POP
0x419 SWAP1
0x41a JUMP
---
0x411: JUMPDEST 
0x41a: JUMP 0x102
---
Entry stack: [V13, 0x102, 0x60, S5, {0x3, 0x4}, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V13, S5]

================================

Block 0x41b
[0x41b:0x427]
---
Predecessors: [0x18d]
Successors: [0x8b9]
---
0x41b JUMPDEST
0x41c PUSH1 0x0
0x41e PUSH2 0x42f
0x421 PUSH2 0x428
0x424 PUSH2 0x8b9
0x427 JUMP
---
0x41b: JUMPDEST 
0x41c: V387 = 0x0
0x41e: V388 = 0x42f
0x421: V389 = 0x428
0x424: V390 = 0x8b9
0x427: JUMP 0x8b9
---
Entry stack: [V13, 0x1a3, V127, V130]
Stack pops: 0
Stack additions: [0x0, 0x42f, 0x428]
Exit stack: [V13, 0x1a3, V127, V130, 0x0, 0x42f, 0x428]

================================

Block 0x428
[0x428:0x42e]
---
Predecessors: [0x8b9]
Successors: [0x8bd]
---
0x428 JUMPDEST
0x429 DUP5
0x42a DUP5
0x42b PUSH2 0x8bd
0x42e JUMP
---
0x428: JUMPDEST 
0x42b: V391 = 0x8bd
0x42e: JUMP 0x8bd
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S3]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771, S4, S3]

================================

Block 0x42f
[0x42f:0x437]
---
Predecessors: [0x62d, 0x947, 0xaaa, 0xc96]
Successors: [0x1a3]
---
0x42f JUMPDEST
0x430 POP
0x431 PUSH1 0x1
0x433 SWAP3
0x434 SWAP2
0x435 POP
0x436 POP
0x437 JUMP
---
0x42f: JUMPDEST 
0x431: V392 = 0x1
0x437: JUMP S3
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, S4, 0x1]

================================

Block 0x438
[0x438:0x43d]
---
Predecessors: [0x1b7]
Successors: [0x1bf]
---
0x438 JUMPDEST
0x439 PUSH1 0x2
0x43b SLOAD
0x43c SWAP1
0x43d JUMP
---
0x438: JUMPDEST 
0x439: V393 = 0x2
0x43b: V394 = S[0x2]
0x43d: JUMP 0x1bf
---
Entry stack: [V13, 0x1bf]
Stack pops: 1
Stack additions: [V394]
Exit stack: [V13, V394]

================================

Block 0x43e
[0x43e:0x44a]
---
Predecessors: [0x1e7]
Successors: [0x9a9]
---
0x43e JUMPDEST
0x43f PUSH1 0x0
0x441 PUSH2 0x44b
0x444 DUP5
0x445 DUP5
0x446 DUP5
0x447 PUSH2 0x9a9
0x44a JUMP
---
0x43e: JUMPDEST 
0x43f: V395 = 0x0
0x441: V396 = 0x44b
0x447: V397 = 0x9a9
0x44a: JUMP 0x9a9
---
Entry stack: [V13, 0x1a3, V163, V167, V170]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x44b, S2, S1, S0]
Exit stack: [V13, 0x1a3, V163, V167, V170, 0x0, 0x44b, V163, V167, V170]

================================

Block 0x44b
[0x44b:0x456]
---
Predecessors: [0xaaa]
Successors: [0x8b9]
---
0x44b JUMPDEST
0x44c PUSH2 0x4bb
0x44f DUP5
0x450 PUSH2 0x457
0x453 PUSH2 0x8b9
0x456 JUMP
---
0x44b: JUMPDEST 
0x44c: V398 = 0x4bb
0x450: V399 = 0x457
0x453: V400 = 0x8b9
0x456: JUMP 0x8b9
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x4bb, S3, 0x457]
Exit stack: [V13, S4, S3, S2, S1, S0, 0x4bb, S3, 0x457]

================================

Block 0x457
[0x457:0x494]
---
Predecessors: [0x8b9]
Successors: [0x8b9]
---
0x457 JUMPDEST
0x458 PUSH2 0x4b6
0x45b DUP6
0x45c PUSH1 0x40
0x45e MLOAD
0x45f DUP1
0x460 PUSH1 0x60
0x462 ADD
0x463 PUSH1 0x40
0x465 MSTORE
0x466 DUP1
0x467 PUSH1 0x28
0x469 DUP2
0x46a MSTORE
0x46b PUSH1 0x20
0x46d ADD
0x46e PUSH2 0xd83
0x471 PUSH1 0x28
0x473 SWAP2
0x474 CODECOPY
0x475 PUSH1 0x1
0x477 PUSH1 0x1
0x479 PUSH1 0xa0
0x47b SHL
0x47c SUB
0x47d DUP11
0x47e AND
0x47f PUSH1 0x0
0x481 SWAP1
0x482 DUP2
0x483 MSTORE
0x484 PUSH1 0x1
0x486 PUSH1 0x20
0x488 MSTORE
0x489 PUSH1 0x40
0x48b DUP2
0x48c SHA3
0x48d SWAP1
0x48e PUSH2 0x495
0x491 PUSH2 0x8b9
0x494 JUMP
---
0x457: JUMPDEST 
0x458: V401 = 0x4b6
0x45c: V402 = 0x40
0x45e: V403 = M[0x40]
0x460: V404 = 0x60
0x462: V405 = ADD 0x60 V403
0x463: V406 = 0x40
0x465: M[0x40] = V405
0x467: V407 = 0x28
0x46a: M[V403] = 0x28
0x46b: V408 = 0x20
0x46d: V409 = ADD 0x20 V403
0x46e: V410 = 0xd83
0x471: V411 = 0x28
0x474: CODECOPY V409 0xd83 0x28
0x475: V412 = 0x1
0x477: V413 = 0x1
0x479: V414 = 0xa0
0x47b: V415 = SHL 0xa0 0x1
0x47c: V416 = SUB 0x10000000000000000000000000000000000000000 0x1
0x47e: V417 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x47f: V418 = 0x0
0x483: M[0x0] = V417
0x484: V419 = 0x1
0x486: V420 = 0x20
0x488: M[0x20] = 0x1
0x489: V421 = 0x40
0x48c: V422 = SHA3 0x0 0x40
0x48e: V423 = 0x495
0x491: V424 = 0x8b9
0x494: JUMP 0x8b9
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x4b6, S4, V403, V422, 0x0, 0x495]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771, 0x4b6, S4, V403, V422, 0x0, 0x495]

================================

Block 0x495
[0x495:0x4b5]
---
Predecessors: [0x8b9]
Successors: [0xb04]
---
0x495 JUMPDEST
0x496 PUSH1 0x1
0x498 PUSH1 0x1
0x49a PUSH1 0xa0
0x49c SHL
0x49d SUB
0x49e AND
0x49f DUP2
0x4a0 MSTORE
0x4a1 PUSH1 0x20
0x4a3 DUP2
0x4a4 ADD
0x4a5 SWAP2
0x4a6 SWAP1
0x4a7 SWAP2
0x4a8 MSTORE
0x4a9 PUSH1 0x40
0x4ab ADD
0x4ac PUSH1 0x0
0x4ae SHA3
0x4af SLOAD
0x4b0 SWAP2
0x4b1 SWAP1
0x4b2 PUSH2 0xb04
0x4b5 JUMP
---
0x495: JUMPDEST 
0x496: V425 = 0x1
0x498: V426 = 0x1
0x49a: V427 = 0xa0
0x49c: V428 = SHL 0xa0 0x1
0x49d: V429 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49e: V430 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0x4a0: M[S1] = V430
0x4a1: V431 = 0x20
0x4a4: V432 = ADD S1 0x20
0x4a8: M[V432] = S2
0x4a9: V433 = 0x40
0x4ab: V434 = ADD 0x40 S1
0x4ac: V435 = 0x0
0x4ae: V436 = SHA3 0x0 V434
0x4af: V437 = S[V436]
0x4b2: V438 = 0xb04
0x4b5: JUMP 0xb04
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 5
Stack additions: [V437, S4, S3]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V437, S4, S3]

================================

Block 0x4b6
[0x4b6:0x4ba]
---
Predecessors: [0xb93, 0xbf5]
Successors: [0x8bd]
---
0x4b6 JUMPDEST
0x4b7 PUSH2 0x8bd
0x4ba JUMP
---
0x4b6: JUMPDEST 
0x4b7: V439 = 0x8bd
0x4ba: JUMP 0x8bd
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4bb
[0x4bb:0x4c4]
---
Predecessors: [0x852, 0x947, 0xaaa]
Successors: [0x1a3]
---
0x4bb JUMPDEST
0x4bc POP
0x4bd PUSH1 0x1
0x4bf SWAP4
0x4c0 SWAP3
0x4c1 POP
0x4c2 POP
0x4c3 POP
0x4c4 JUMP
---
0x4bb: JUMPDEST 
0x4bd: V440 = 0x1
0x4c4: JUMP S4
---
Entry stack: [V13, S4, S3, S2, S1, 0x0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x4c5
[0x4c5:0x4cd]
---
Predecessors: [0x207]
Successors: [0x20f]
---
0x4c5 JUMPDEST
0x4c6 PUSH1 0x5
0x4c8 SLOAD
0x4c9 PUSH1 0xff
0x4cb AND
0x4cc SWAP1
0x4cd JUMP
---
0x4c5: JUMPDEST 
0x4c6: V441 = 0x5
0x4c8: V442 = S[0x5]
0x4c9: V443 = 0xff
0x4cb: V444 = AND 0xff V442
0x4cd: JUMP 0x20f
---
Entry stack: [V13, 0x20f]
Stack pops: 1
Stack additions: [V444]
Exit stack: [V13, V444]

================================

Block 0x4ce
[0x4ce:0x4da]
---
Predecessors: [0x23b]
Successors: [0x8b9]
---
0x4ce JUMPDEST
0x4cf PUSH1 0x0
0x4d1 PUSH2 0x42f
0x4d4 PUSH2 0x4db
0x4d7 PUSH2 0x8b9
0x4da JUMP
---
0x4ce: JUMPDEST 
0x4cf: V445 = 0x0
0x4d1: V446 = 0x42f
0x4d4: V447 = 0x4db
0x4d7: V448 = 0x8b9
0x4da: JUMP 0x8b9
---
Entry stack: [V13, 0x1a3, V197, V200]
Stack pops: 0
Stack additions: [0x0, 0x42f, 0x4db]
Exit stack: [V13, 0x1a3, V197, V200, 0x0, 0x42f, 0x4db]

================================

Block 0x4db
[0x4db:0x4eb]
---
Predecessors: [0x8b9]
Successors: [0x8b9]
---
0x4db JUMPDEST
0x4dc DUP5
0x4dd PUSH2 0x4b6
0x4e0 DUP6
0x4e1 PUSH1 0x1
0x4e3 PUSH1 0x0
0x4e5 PUSH2 0x4ec
0x4e8 PUSH2 0x8b9
0x4eb JUMP
---
0x4db: JUMPDEST 
0x4dd: V449 = 0x4b6
0x4e1: V450 = 0x1
0x4e3: V451 = 0x0
0x4e5: V452 = 0x4ec
0x4e8: V453 = 0x8b9
0x4eb: JUMP 0x8b9
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, 0x4b6, S3, 0x1, 0x0, 0x4ec]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771, S4, 0x4b6, S3, 0x1, 0x0, 0x4ec]

================================

Block 0x4ec
[0x4ec:0x51b]
---
Predecessors: [0x8b9]
Successors: [0xb9b]
---
0x4ec JUMPDEST
0x4ed PUSH1 0x1
0x4ef PUSH1 0x1
0x4f1 PUSH1 0xa0
0x4f3 SHL
0x4f4 SUB
0x4f5 SWAP1
0x4f6 DUP2
0x4f7 AND
0x4f8 DUP3
0x4f9 MSTORE
0x4fa PUSH1 0x20
0x4fc DUP1
0x4fd DUP4
0x4fe ADD
0x4ff SWAP4
0x500 SWAP1
0x501 SWAP4
0x502 MSTORE
0x503 PUSH1 0x40
0x505 SWAP2
0x506 DUP3
0x507 ADD
0x508 PUSH1 0x0
0x50a SWAP1
0x50b DUP2
0x50c SHA3
0x50d SWAP2
0x50e DUP13
0x50f AND
0x510 DUP2
0x511 MSTORE
0x512 SWAP3
0x513 MSTORE
0x514 SWAP1
0x515 SHA3
0x516 SLOAD
0x517 SWAP1
0x518 PUSH2 0xb9b
0x51b JUMP
---
0x4ec: JUMPDEST 
0x4ed: V454 = 0x1
0x4ef: V455 = 0x1
0x4f1: V456 = 0xa0
0x4f3: V457 = SHL 0xa0 0x1
0x4f4: V458 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f7: V459 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0x4f9: M[S1] = V459
0x4fa: V460 = 0x20
0x4fe: V461 = ADD S1 0x20
0x502: M[V461] = S2
0x503: V462 = 0x40
0x507: V463 = ADD 0x40 S1
0x508: V464 = 0x0
0x50c: V465 = SHA3 0x0 V463
0x50f: V466 = AND S10 0xffffffffffffffffffffffffffffffffffffffff
0x511: M[0x0] = V466
0x513: M[0x20] = V465
0x515: V467 = SHA3 0x0 0x40
0x516: V468 = S[V467]
0x518: V469 = 0xb9b
0x51b: JUMP 0xb9b
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, V468, S3]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V468, S3]

================================

Block 0x51c
[0x51c:0x523]
---
Predecessors: [0x267]
Successors: [0x8b9]
---
0x51c JUMPDEST
0x51d PUSH2 0x524
0x520 PUSH2 0x8b9
0x523 JUMP
---
0x51c: JUMPDEST 
0x51d: V470 = 0x524
0x520: V471 = 0x8b9
0x523: JUMP 0x8b9
---
Entry stack: [V13, 0x27d, V217, V220]
Stack pops: 0
Stack additions: [0x524]
Exit stack: [V13, 0x27d, V217, V220, 0x524]

================================

Block 0x524
[0x524:0x534]
---
Predecessors: [0x8b9]
Successors: [0x67d]
---
0x524 JUMPDEST
0x525 PUSH1 0x1
0x527 PUSH1 0x1
0x529 PUSH1 0xa0
0x52b SHL
0x52c SUB
0x52d AND
0x52e PUSH2 0x535
0x531 PUSH2 0x67d
0x534 JUMP
---
0x524: JUMPDEST 
0x525: V472 = 0x1
0x527: V473 = 0x1
0x529: V474 = 0xa0
0x52b: V475 = SHL 0xa0 0x1
0x52c: V476 = SUB 0x10000000000000000000000000000000000000000 0x1
0x52d: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0x52e: V478 = 0x535
0x531: V479 = 0x67d
0x534: JUMP 0x67d
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 1
Stack additions: [V477, 0x535]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V477, 0x535]

================================

Block 0x535
[0x535:0x543]
---
Predecessors: [0x67d]
Successors: [0x544, 0x590]
---
0x535 JUMPDEST
0x536 PUSH1 0x1
0x538 PUSH1 0x1
0x53a PUSH1 0xa0
0x53c SHL
0x53d SUB
0x53e AND
0x53f EQ
0x540 PUSH2 0x590
0x543 JUMPI
---
0x535: JUMPDEST 
0x536: V480 = 0x1
0x538: V481 = 0x1
0x53a: V482 = 0xa0
0x53c: V483 = SHL 0xa0 0x1
0x53d: V484 = SUB 0x10000000000000000000000000000000000000000 0x1
0x53e: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V585
0x53f: V486 = EQ V485 S1
0x540: V487 = 0x590
0x543: JUMPI 0x590 V486
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V585]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x544
[0x544:0x58f]
---
Predecessors: [0x535]
Successors: []
---
0x544 PUSH1 0x40
0x546 DUP1
0x547 MLOAD
0x548 PUSH3 0x461bcd
0x54c PUSH1 0xe5
0x54e SHL
0x54f DUP2
0x550 MSTORE
0x551 PUSH1 0x20
0x553 PUSH1 0x4
0x555 DUP3
0x556 ADD
0x557 DUP2
0x558 SWAP1
0x559 MSTORE
0x55a PUSH1 0x24
0x55c DUP3
0x55d ADD
0x55e MSTORE
0x55f PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572
0x580 PUSH1 0x44
0x582 DUP3
0x583 ADD
0x584 MSTORE
0x585 SWAP1
0x586 MLOAD
0x587 SWAP1
0x588 DUP2
0x589 SWAP1
0x58a SUB
0x58b PUSH1 0x64
0x58d ADD
0x58e SWAP1
0x58f REVERT
---
0x544: V488 = 0x40
0x547: V489 = M[0x40]
0x548: V490 = 0x461bcd
0x54c: V491 = 0xe5
0x54e: V492 = SHL 0xe5 0x461bcd
0x550: M[V489] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x551: V493 = 0x20
0x553: V494 = 0x4
0x556: V495 = ADD V489 0x4
0x559: M[V495] = 0x20
0x55a: V496 = 0x24
0x55d: V497 = ADD V489 0x24
0x55e: M[V497] = 0x20
0x55f: V498 = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572
0x580: V499 = 0x44
0x583: V500 = ADD V489 0x44
0x584: M[V500] = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572
0x586: V501 = M[0x40]
0x58a: V502 = SUB V489 V501
0x58b: V503 = 0x64
0x58d: V504 = ADD 0x64 V502
0x58f: REVERT V501 V504
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x590
[0x590:0x599]
---
Predecessors: [0x535]
Successors: [0xbfc]
---
0x590 JUMPDEST
0x591 PUSH2 0x59a
0x594 DUP3
0x595 DUP3
0x596 PUSH2 0xbfc
0x599 JUMP
---
0x590: JUMPDEST 
0x591: V505 = 0x59a
0x596: V506 = 0xbfc
0x599: JUMP 0xbfc
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x59a, S1, S0]
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x59a, S1, S0]

================================

Block 0x59a
[0x59a:0x59d]
---
Predecessors: [0xc96]
Successors: [0x27d]
---
0x59a JUMPDEST
0x59b POP
0x59c POP
0x59d JUMP
---
0x59a: JUMPDEST 
0x59d: JUMP S2
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S5, S4, S3]

================================

Block 0x59e
[0x59e:0x5b8]
---
Predecessors: [0x295]
Successors: [0x1bf]
---
0x59e JUMPDEST
0x59f PUSH1 0x1
0x5a1 PUSH1 0x1
0x5a3 PUSH1 0xa0
0x5a5 SHL
0x5a6 SUB
0x5a7 AND
0x5a8 PUSH1 0x0
0x5aa SWAP1
0x5ab DUP2
0x5ac MSTORE
0x5ad PUSH1 0x20
0x5af DUP2
0x5b0 SWAP1
0x5b1 MSTORE
0x5b2 PUSH1 0x40
0x5b4 SWAP1
0x5b5 SHA3
0x5b6 SLOAD
0x5b7 SWAP1
0x5b8 JUMP
---
0x59e: JUMPDEST 
0x59f: V507 = 0x1
0x5a1: V508 = 0x1
0x5a3: V509 = 0xa0
0x5a5: V510 = SHL 0xa0 0x1
0x5a6: V511 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a7: V512 = AND 0xffffffffffffffffffffffffffffffffffffffff V237
0x5a8: V513 = 0x0
0x5ac: M[0x0] = V512
0x5ad: V514 = 0x20
0x5b1: M[0x20] = 0x0
0x5b2: V515 = 0x40
0x5b5: V516 = SHA3 0x0 0x40
0x5b6: V517 = S[V516]
0x5b8: JUMP 0x1bf
---
Entry stack: [V13, 0x1bf, V237]
Stack pops: 2
Stack additions: [V517]
Exit stack: [V13, V517]

================================

Block 0x5b9
[0x5b9:0x5c0]
---
Predecessors: [0x2a5]
Successors: [0x8b9]
---
0x5b9 JUMPDEST
0x5ba PUSH2 0x5c1
0x5bd PUSH2 0x8b9
0x5c0 JUMP
---
0x5b9: JUMPDEST 
0x5ba: V518 = 0x5c1
0x5bd: V519 = 0x8b9
0x5c0: JUMP 0x8b9
---
Entry stack: [V13, 0x27d]
Stack pops: 0
Stack additions: [0x5c1]
Exit stack: [V13, 0x27d, 0x5c1]

================================

Block 0x5c1
[0x5c1:0x5d1]
---
Predecessors: [0x8b9]
Successors: [0x67d]
---
0x5c1 JUMPDEST
0x5c2 PUSH1 0x1
0x5c4 PUSH1 0x1
0x5c6 PUSH1 0xa0
0x5c8 SHL
0x5c9 SUB
0x5ca AND
0x5cb PUSH2 0x5d2
0x5ce PUSH2 0x67d
0x5d1 JUMP
---
0x5c1: JUMPDEST 
0x5c2: V520 = 0x1
0x5c4: V521 = 0x1
0x5c6: V522 = 0xa0
0x5c8: V523 = SHL 0xa0 0x1
0x5c9: V524 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ca: V525 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0x5cb: V526 = 0x5d2
0x5ce: V527 = 0x67d
0x5d1: JUMP 0x67d
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 1
Stack additions: [V525, 0x5d2]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V525, 0x5d2]

================================

Block 0x5d2
[0x5d2:0x5e0]
---
Predecessors: [0x67d]
Successors: [0x5e1, 0x62d]
---
0x5d2 JUMPDEST
0x5d3 PUSH1 0x1
0x5d5 PUSH1 0x1
0x5d7 PUSH1 0xa0
0x5d9 SHL
0x5da SUB
0x5db AND
0x5dc EQ
0x5dd PUSH2 0x62d
0x5e0 JUMPI
---
0x5d2: JUMPDEST 
0x5d3: V528 = 0x1
0x5d5: V529 = 0x1
0x5d7: V530 = 0xa0
0x5d9: V531 = SHL 0xa0 0x1
0x5da: V532 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5db: V533 = AND 0xffffffffffffffffffffffffffffffffffffffff V585
0x5dc: V534 = EQ V533 S1
0x5dd: V535 = 0x62d
0x5e0: JUMPI 0x62d V534
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V585]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x5e1
[0x5e1:0x62c]
---
Predecessors: [0x5d2]
Successors: []
---
0x5e1 PUSH1 0x40
0x5e3 DUP1
0x5e4 MLOAD
0x5e5 PUSH3 0x461bcd
0x5e9 PUSH1 0xe5
0x5eb SHL
0x5ec DUP2
0x5ed MSTORE
0x5ee PUSH1 0x20
0x5f0 PUSH1 0x4
0x5f2 DUP3
0x5f3 ADD
0x5f4 DUP2
0x5f5 SWAP1
0x5f6 MSTORE
0x5f7 PUSH1 0x24
0x5f9 DUP3
0x5fa ADD
0x5fb MSTORE
0x5fc PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572
0x61d PUSH1 0x44
0x61f DUP3
0x620 ADD
0x621 MSTORE
0x622 SWAP1
0x623 MLOAD
0x624 SWAP1
0x625 DUP2
0x626 SWAP1
0x627 SUB
0x628 PUSH1 0x64
0x62a ADD
0x62b SWAP1
0x62c REVERT
---
0x5e1: V536 = 0x40
0x5e4: V537 = M[0x40]
0x5e5: V538 = 0x461bcd
0x5e9: V539 = 0xe5
0x5eb: V540 = SHL 0xe5 0x461bcd
0x5ed: M[V537] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5ee: V541 = 0x20
0x5f0: V542 = 0x4
0x5f3: V543 = ADD V537 0x4
0x5f6: M[V543] = 0x20
0x5f7: V544 = 0x24
0x5fa: V545 = ADD V537 0x24
0x5fb: M[V545] = 0x20
0x5fc: V546 = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572
0x61d: V547 = 0x44
0x620: V548 = ADD V537 0x44
0x621: M[V548] = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572
0x623: V549 = M[0x40]
0x627: V550 = SUB V537 V549
0x628: V551 = 0x64
0x62a: V552 = ADD 0x64 V550
0x62c: REVERT V549 V552
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S2, S1, S0]

================================

Block 0x62d
[0x62d:0x67c]
---
Predecessors: [0x5d2]
Successors: [0x27d, 0x42f]
---
0x62d JUMPDEST
0x62e PUSH1 0x5
0x630 SLOAD
0x631 PUSH1 0x40
0x633 MLOAD
0x634 PUSH1 0x0
0x636 SWAP2
0x637 PUSH2 0x100
0x63a SWAP1
0x63b DIV
0x63c PUSH1 0x1
0x63e PUSH1 0x1
0x640 PUSH1 0xa0
0x642 SHL
0x643 SUB
0x644 AND
0x645 SWAP1
0x646 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x667 SWAP1
0x668 DUP4
0x669 SWAP1
0x66a LOG3
0x66b PUSH1 0x5
0x66d DUP1
0x66e SLOAD
0x66f PUSH2 0x100
0x672 PUSH1 0x1
0x674 PUSH1 0xa8
0x676 SHL
0x677 SUB
0x678 NOT
0x679 AND
0x67a SWAP1
0x67b SSTORE
0x67c JUMP
---
0x62d: JUMPDEST 
0x62e: V553 = 0x5
0x630: V554 = S[0x5]
0x631: V555 = 0x40
0x633: V556 = M[0x40]
0x634: V557 = 0x0
0x637: V558 = 0x100
0x63b: V559 = DIV V554 0x100
0x63c: V560 = 0x1
0x63e: V561 = 0x1
0x640: V562 = 0xa0
0x642: V563 = SHL 0xa0 0x1
0x643: V564 = SUB 0x10000000000000000000000000000000000000000 0x1
0x644: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0x646: V566 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x66a: LOG V556 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V565 0x0
0x66b: V567 = 0x5
0x66e: V568 = S[0x5]
0x66f: V569 = 0x100
0x672: V570 = 0x1
0x674: V571 = 0xa8
0x676: V572 = SHL 0xa8 0x1
0x677: V573 = SUB 0x1000000000000000000000000000000000000000000 0x100
0x678: V574 = NOT 0xffffffffffffffffffffffffffffffffffffffff00
0x679: V575 = AND 0xffffffffffffffffffffff0000000000000000000000000000000000000000ff V568
0x67b: S[0x5] = V575
0x67c: JUMP S0
---
Entry stack: [V13, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S2, S1]

================================

Block 0x67d
[0x67d:0x690]
---
Predecessors: [0x2ad, 0x524, 0x5c1, 0x7a1]
Successors: [0x2b5, 0x535, 0x5d2, 0x7b2]
---
0x67d JUMPDEST
0x67e PUSH1 0x5
0x680 SLOAD
0x681 PUSH2 0x100
0x684 SWAP1
0x685 DIV
0x686 PUSH1 0x1
0x688 PUSH1 0x1
0x68a PUSH1 0xa0
0x68c SHL
0x68d SUB
0x68e AND
0x68f SWAP1
0x690 JUMP
---
0x67d: JUMPDEST 
0x67e: V576 = 0x5
0x680: V577 = S[0x5]
0x681: V578 = 0x100
0x685: V579 = DIV V577 0x100
0x686: V580 = 0x1
0x688: V581 = 0x1
0x68a: V582 = 0xa0
0x68c: V583 = SHL 0xa0 0x1
0x68d: V584 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68e: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V579
0x690: JUMP {0x2b5, 0x535, 0x5d2, 0x7b2}
---
Entry stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x2b5, 0x535, 0x5d2, 0x7b2}]
Stack pops: 1
Stack additions: [V585]
Exit stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V585]

================================

Block 0x691
[0x691:0x6d6]
---
Predecessors: [0x2d1]
Successors: [0x411, 0x6d7]
---
0x691 JUMPDEST
0x692 PUSH1 0x4
0x694 DUP1
0x695 SLOAD
0x696 PUSH1 0x40
0x698 DUP1
0x699 MLOAD
0x69a PUSH1 0x20
0x69c PUSH1 0x1f
0x69e PUSH1 0x2
0x6a0 PUSH1 0x0
0x6a2 NOT
0x6a3 PUSH2 0x100
0x6a6 PUSH1 0x1
0x6a8 DUP9
0x6a9 AND
0x6aa ISZERO
0x6ab MUL
0x6ac ADD
0x6ad SWAP1
0x6ae SWAP6
0x6af AND
0x6b0 SWAP5
0x6b1 SWAP1
0x6b2 SWAP5
0x6b3 DIV
0x6b4 SWAP4
0x6b5 DUP5
0x6b6 ADD
0x6b7 DUP2
0x6b8 SWAP1
0x6b9 DIV
0x6ba DUP2
0x6bb MUL
0x6bc DUP3
0x6bd ADD
0x6be DUP2
0x6bf ADD
0x6c0 SWAP1
0x6c1 SWAP3
0x6c2 MSTORE
0x6c3 DUP3
0x6c4 DUP2
0x6c5 MSTORE
0x6c6 PUSH1 0x60
0x6c8 SWAP4
0x6c9 SWAP1
0x6ca SWAP3
0x6cb SWAP1
0x6cc SWAP2
0x6cd DUP4
0x6ce ADD
0x6cf DUP3
0x6d0 DUP3
0x6d1 DUP1
0x6d2 ISZERO
0x6d3 PUSH2 0x411
0x6d6 JUMPI
---
0x691: JUMPDEST 
0x692: V586 = 0x4
0x695: V587 = S[0x4]
0x696: V588 = 0x40
0x699: V589 = M[0x40]
0x69a: V590 = 0x20
0x69c: V591 = 0x1f
0x69e: V592 = 0x2
0x6a0: V593 = 0x0
0x6a2: V594 = NOT 0x0
0x6a3: V595 = 0x100
0x6a6: V596 = 0x1
0x6a9: V597 = AND V587 0x1
0x6aa: V598 = ISZERO V597
0x6ab: V599 = MUL V598 0x100
0x6ac: V600 = ADD V599 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x6af: V601 = AND V587 V600
0x6b3: V602 = DIV V601 0x2
0x6b6: V603 = ADD V602 0x1f
0x6b9: V604 = DIV V603 0x20
0x6bb: V605 = MUL 0x20 V604
0x6bd: V606 = ADD V589 V605
0x6bf: V607 = ADD 0x20 V606
0x6c2: M[0x40] = V607
0x6c5: M[V589] = V602
0x6c6: V608 = 0x60
0x6ce: V609 = ADD V589 0x20
0x6d2: V610 = ISZERO V602
0x6d3: V611 = 0x411
0x6d6: JUMPI 0x411 V610
---
Entry stack: [V13, 0x102]
Stack pops: 0
Stack additions: [0x60, V589, 0x4, V602, V609, 0x4, V602]
Exit stack: [V13, 0x102, 0x60, V589, 0x4, V602, V609, 0x4, V602]

================================

Block 0x6d7
[0x6d7:0x6de]
---
Predecessors: [0x691]
Successors: [0x3e6, 0x6df]
---
0x6d7 DUP1
0x6d8 PUSH1 0x1f
0x6da LT
0x6db PUSH2 0x3e6
0x6de JUMPI
---
0x6d8: V612 = 0x1f
0x6da: V613 = LT 0x1f V602
0x6db: V614 = 0x3e6
0x6de: JUMPI 0x3e6 V613
---
Entry stack: [V13, 0x102, 0x60, V589, 0x4, V602, V609, 0x4, V602]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x102, 0x60, V589, 0x4, V602, V609, 0x4, V602]

================================

Block 0x6df
[0x6df:0x6f1]
---
Predecessors: [0x6d7]
Successors: [0x411]
---
0x6df PUSH2 0x100
0x6e2 DUP1
0x6e3 DUP4
0x6e4 SLOAD
0x6e5 DIV
0x6e6 MUL
0x6e7 DUP4
0x6e8 MSTORE
0x6e9 SWAP2
0x6ea PUSH1 0x20
0x6ec ADD
0x6ed SWAP2
0x6ee PUSH2 0x411
0x6f1 JUMP
---
0x6df: V615 = 0x100
0x6e4: V616 = S[0x4]
0x6e5: V617 = DIV V616 0x100
0x6e6: V618 = MUL V617 0x100
0x6e8: M[V609] = V618
0x6ea: V619 = 0x20
0x6ec: V620 = ADD 0x20 V609
0x6ee: V621 = 0x411
0x6f1: JUMP 0x411
---
Entry stack: [V13, 0x102, 0x60, V589, 0x4, V602, V609, 0x4, V602]
Stack pops: 3
Stack additions: [V620, S1, S0]
Exit stack: [V13, 0x102, 0x60, V589, 0x4, V602, V620, 0x4, V602]

================================

Block 0x6f2
[0x6f2:0x6fe]
---
Predecessors: [0x2ef]
Successors: [0x8b9]
---
0x6f2 JUMPDEST
0x6f3 PUSH1 0x0
0x6f5 PUSH2 0x42f
0x6f8 PUSH2 0x6ff
0x6fb PUSH2 0x8b9
0x6fe JUMP
---
0x6f2: JUMPDEST 
0x6f3: V622 = 0x0
0x6f5: V623 = 0x42f
0x6f8: V624 = 0x6ff
0x6fb: V625 = 0x8b9
0x6fe: JUMP 0x8b9
---
Entry stack: [V13, 0x1a3, V272, V275]
Stack pops: 0
Stack additions: [0x0, 0x42f, 0x6ff]
Exit stack: [V13, 0x1a3, V272, V275, 0x0, 0x42f, 0x6ff]

================================

Block 0x6ff
[0x6ff:0x728]
---
Predecessors: [0x8b9]
Successors: [0x8b9]
---
0x6ff JUMPDEST
0x700 DUP5
0x701 PUSH2 0x4b6
0x704 DUP6
0x705 PUSH1 0x40
0x707 MLOAD
0x708 DUP1
0x709 PUSH1 0x60
0x70b ADD
0x70c PUSH1 0x40
0x70e MSTORE
0x70f DUP1
0x710 PUSH1 0x25
0x712 DUP2
0x713 MSTORE
0x714 PUSH1 0x20
0x716 ADD
0x717 PUSH2 0xdf4
0x71a PUSH1 0x25
0x71c SWAP2
0x71d CODECOPY
0x71e PUSH1 0x1
0x720 PUSH1 0x0
0x722 PUSH2 0x729
0x725 PUSH2 0x8b9
0x728 JUMP
---
0x6ff: JUMPDEST 
0x701: V626 = 0x4b6
0x705: V627 = 0x40
0x707: V628 = M[0x40]
0x709: V629 = 0x60
0x70b: V630 = ADD 0x60 V628
0x70c: V631 = 0x40
0x70e: M[0x40] = V630
0x710: V632 = 0x25
0x713: M[V628] = 0x25
0x714: V633 = 0x20
0x716: V634 = ADD 0x20 V628
0x717: V635 = 0xdf4
0x71a: V636 = 0x25
0x71d: CODECOPY V634 0xdf4 0x25
0x71e: V637 = 0x1
0x720: V638 = 0x0
0x722: V639 = 0x729
0x725: V640 = 0x8b9
0x728: JUMP 0x8b9
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, 0x4b6, S3, V628, 0x1, 0x0, 0x729]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771, S4, 0x4b6, S3, V628, 0x1, 0x0, 0x729]

================================

Block 0x729
[0x729:0x759]
---
Predecessors: [0x8b9]
Successors: [0xb04]
---
0x729 JUMPDEST
0x72a PUSH1 0x1
0x72c PUSH1 0x1
0x72e PUSH1 0xa0
0x730 SHL
0x731 SUB
0x732 SWAP1
0x733 DUP2
0x734 AND
0x735 DUP3
0x736 MSTORE
0x737 PUSH1 0x20
0x739 DUP1
0x73a DUP4
0x73b ADD
0x73c SWAP4
0x73d SWAP1
0x73e SWAP4
0x73f MSTORE
0x740 PUSH1 0x40
0x742 SWAP2
0x743 DUP3
0x744 ADD
0x745 PUSH1 0x0
0x747 SWAP1
0x748 DUP2
0x749 SHA3
0x74a SWAP2
0x74b DUP14
0x74c AND
0x74d DUP2
0x74e MSTORE
0x74f SWAP3
0x750 MSTORE
0x751 SWAP1
0x752 SHA3
0x753 SLOAD
0x754 SWAP2
0x755 SWAP1
0x756 PUSH2 0xb04
0x759 JUMP
---
0x729: JUMPDEST 
0x72a: V641 = 0x1
0x72c: V642 = 0x1
0x72e: V643 = 0xa0
0x730: V644 = SHL 0xa0 0x1
0x731: V645 = SUB 0x10000000000000000000000000000000000000000 0x1
0x734: V646 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0x736: M[S1] = V646
0x737: V647 = 0x20
0x73b: V648 = ADD S1 0x20
0x73f: M[V648] = S2
0x740: V649 = 0x40
0x744: V650 = ADD 0x40 S1
0x745: V651 = 0x0
0x749: V652 = SHA3 0x0 V650
0x74c: V653 = AND S11 0xffffffffffffffffffffffffffffffffffffffff
0x74e: M[0x0] = V653
0x750: M[0x20] = V652
0x752: V654 = SHA3 0x0 0x40
0x753: V655 = S[V654]
0x756: V656 = 0xb04
0x759: JUMP 0xb04
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, V655, S4, S3]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V655, S4, S3]

================================

Block 0x75a
[0x75a:0x766]
---
Predecessors: [0x31b]
Successors: [0x8b9]
---
0x75a JUMPDEST
0x75b PUSH1 0x0
0x75d PUSH2 0x42f
0x760 PUSH2 0x767
0x763 PUSH2 0x8b9
0x766 JUMP
---
0x75a: JUMPDEST 
0x75b: V657 = 0x0
0x75d: V658 = 0x42f
0x760: V659 = 0x767
0x763: V660 = 0x8b9
0x766: JUMP 0x8b9
---
Entry stack: [V13, 0x1a3, V292, V295]
Stack pops: 0
Stack additions: [0x0, 0x42f, 0x767]
Exit stack: [V13, 0x1a3, V292, V295, 0x0, 0x42f, 0x767]

================================

Block 0x767
[0x767:0x76d]
---
Predecessors: [0x8b9]
Successors: [0x9a9]
---
0x767 JUMPDEST
0x768 DUP5
0x769 DUP5
0x76a PUSH2 0x9a9
0x76d JUMP
---
0x767: JUMPDEST 
0x76a: V661 = 0x9a9
0x76d: JUMP 0x9a9
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S3]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771, S4, S3]

================================

Block 0x76e
[0x76e:0x798]
---
Predecessors: [0x347]
Successors: [0x1bf]
---
0x76e JUMPDEST
0x76f PUSH1 0x1
0x771 PUSH1 0x1
0x773 PUSH1 0xa0
0x775 SHL
0x776 SUB
0x777 SWAP2
0x778 DUP3
0x779 AND
0x77a PUSH1 0x0
0x77c SWAP1
0x77d DUP2
0x77e MSTORE
0x77f PUSH1 0x1
0x781 PUSH1 0x20
0x783 SWAP1
0x784 DUP2
0x785 MSTORE
0x786 PUSH1 0x40
0x788 DUP1
0x789 DUP4
0x78a SHA3
0x78b SWAP4
0x78c SWAP1
0x78d SWAP5
0x78e AND
0x78f DUP3
0x790 MSTORE
0x791 SWAP2
0x792 SWAP1
0x793 SWAP2
0x794 MSTORE
0x795 SHA3
0x796 SLOAD
0x797 SWAP1
0x798 JUMP
---
0x76e: JUMPDEST 
0x76f: V662 = 0x1
0x771: V663 = 0x1
0x773: V664 = 0xa0
0x775: V665 = SHL 0xa0 0x1
0x776: V666 = SUB 0x10000000000000000000000000000000000000000 0x1
0x779: V667 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x77a: V668 = 0x0
0x77e: M[0x0] = V667
0x77f: V669 = 0x1
0x781: V670 = 0x20
0x785: M[0x20] = 0x1
0x786: V671 = 0x40
0x78a: V672 = SHA3 0x0 0x40
0x78e: V673 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x790: M[0x0] = V673
0x794: M[0x20] = V672
0x795: V674 = SHA3 0x0 0x40
0x796: V675 = S[V674]
0x798: JUMP 0x1bf
---
Entry stack: [V13, 0x1bf, V312, V316]
Stack pops: 3
Stack additions: [V675]
Exit stack: [V13, V675]

================================

Block 0x799
[0x799:0x7a0]
---
Predecessors: [0x375]
Successors: [0x8b9]
---
0x799 JUMPDEST
0x79a PUSH2 0x7a1
0x79d PUSH2 0x8b9
0x7a0 JUMP
---
0x799: JUMPDEST 
0x79a: V676 = 0x7a1
0x79d: V677 = 0x8b9
0x7a0: JUMP 0x8b9
---
Entry stack: [V13, 0x27d, V333]
Stack pops: 0
Stack additions: [0x7a1]
Exit stack: [V13, 0x27d, V333, 0x7a1]

================================

Block 0x7a1
[0x7a1:0x7b1]
---
Predecessors: [0x8b9]
Successors: [0x67d]
---
0x7a1 JUMPDEST
0x7a2 PUSH1 0x1
0x7a4 PUSH1 0x1
0x7a6 PUSH1 0xa0
0x7a8 SHL
0x7a9 SUB
0x7aa AND
0x7ab PUSH2 0x7b2
0x7ae PUSH2 0x67d
0x7b1 JUMP
---
0x7a1: JUMPDEST 
0x7a2: V678 = 0x1
0x7a4: V679 = 0x1
0x7a6: V680 = 0xa0
0x7a8: V681 = SHL 0xa0 0x1
0x7a9: V682 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7aa: V683 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0x7ab: V684 = 0x7b2
0x7ae: V685 = 0x67d
0x7b1: JUMP 0x67d
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 1
Stack additions: [V683, 0x7b2]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V683, 0x7b2]

================================

Block 0x7b2
[0x7b2:0x7c0]
---
Predecessors: [0x67d]
Successors: [0x7c1, 0x80d]
---
0x7b2 JUMPDEST
0x7b3 PUSH1 0x1
0x7b5 PUSH1 0x1
0x7b7 PUSH1 0xa0
0x7b9 SHL
0x7ba SUB
0x7bb AND
0x7bc EQ
0x7bd PUSH2 0x80d
0x7c0 JUMPI
---
0x7b2: JUMPDEST 
0x7b3: V686 = 0x1
0x7b5: V687 = 0x1
0x7b7: V688 = 0xa0
0x7b9: V689 = SHL 0xa0 0x1
0x7ba: V690 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7bb: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff V585
0x7bc: V692 = EQ V691 S1
0x7bd: V693 = 0x80d
0x7c0: JUMPI 0x80d V692
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V585]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x7c1
[0x7c1:0x80c]
---
Predecessors: [0x7b2]
Successors: []
---
0x7c1 PUSH1 0x40
0x7c3 DUP1
0x7c4 MLOAD
0x7c5 PUSH3 0x461bcd
0x7c9 PUSH1 0xe5
0x7cb SHL
0x7cc DUP2
0x7cd MSTORE
0x7ce PUSH1 0x20
0x7d0 PUSH1 0x4
0x7d2 DUP3
0x7d3 ADD
0x7d4 DUP2
0x7d5 SWAP1
0x7d6 MSTORE
0x7d7 PUSH1 0x24
0x7d9 DUP3
0x7da ADD
0x7db MSTORE
0x7dc PUSH32 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572
0x7fd PUSH1 0x44
0x7ff DUP3
0x800 ADD
0x801 MSTORE
0x802 SWAP1
0x803 MLOAD
0x804 SWAP1
0x805 DUP2
0x806 SWAP1
0x807 SUB
0x808 PUSH1 0x64
0x80a ADD
0x80b SWAP1
0x80c REVERT
---
0x7c1: V694 = 0x40
0x7c4: V695 = M[0x40]
0x7c5: V696 = 0x461bcd
0x7c9: V697 = 0xe5
0x7cb: V698 = SHL 0xe5 0x461bcd
0x7cd: M[V695] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7ce: V699 = 0x20
0x7d0: V700 = 0x4
0x7d3: V701 = ADD V695 0x4
0x7d6: M[V701] = 0x20
0x7d7: V702 = 0x24
0x7da: V703 = ADD V695 0x24
0x7db: M[V703] = 0x20
0x7dc: V704 = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572
0x7fd: V705 = 0x44
0x800: V706 = ADD V695 0x44
0x801: M[V706] = 0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572
0x803: V707 = M[0x40]
0x807: V708 = SUB V695 V707
0x808: V709 = 0x64
0x80a: V710 = ADD 0x64 V708
0x80c: REVERT V707 V710
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x80d
[0x80d:0x81b]
---
Predecessors: [0x7b2]
Successors: [0x81c, 0x852]
---
0x80d JUMPDEST
0x80e PUSH1 0x1
0x810 PUSH1 0x1
0x812 PUSH1 0xa0
0x814 SHL
0x815 SUB
0x816 DUP2
0x817 AND
0x818 PUSH2 0x852
0x81b JUMPI
---
0x80d: JUMPDEST 
0x80e: V711 = 0x1
0x810: V712 = 0x1
0x812: V713 = 0xa0
0x814: V714 = SHL 0xa0 0x1
0x815: V715 = SUB 0x10000000000000000000000000000000000000000 0x1
0x817: V716 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x818: V717 = 0x852
0x81b: JUMPI 0x852 V716
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x81c
[0x81c:0x851]
---
Predecessors: [0x80d]
Successors: []
---
0x81c PUSH1 0x40
0x81e MLOAD
0x81f PUSH3 0x461bcd
0x823 PUSH1 0xe5
0x825 SHL
0x826 DUP2
0x827 MSTORE
0x828 PUSH1 0x4
0x82a ADD
0x82b DUP1
0x82c DUP1
0x82d PUSH1 0x20
0x82f ADD
0x830 DUP3
0x831 DUP2
0x832 SUB
0x833 DUP3
0x834 MSTORE
0x835 PUSH1 0x26
0x837 DUP2
0x838 MSTORE
0x839 PUSH1 0x20
0x83b ADD
0x83c DUP1
0x83d PUSH2 0xd15
0x840 PUSH1 0x26
0x842 SWAP2
0x843 CODECOPY
0x844 PUSH1 0x40
0x846 ADD
0x847 SWAP2
0x848 POP
0x849 POP
0x84a PUSH1 0x40
0x84c MLOAD
0x84d DUP1
0x84e SWAP2
0x84f SUB
0x850 SWAP1
0x851 REVERT
---
0x81c: V718 = 0x40
0x81e: V719 = M[0x40]
0x81f: V720 = 0x461bcd
0x823: V721 = 0xe5
0x825: V722 = SHL 0xe5 0x461bcd
0x827: M[V719] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x828: V723 = 0x4
0x82a: V724 = ADD 0x4 V719
0x82d: V725 = 0x20
0x82f: V726 = ADD 0x20 V724
0x832: V727 = SUB V726 V724
0x834: M[V724] = V727
0x835: V728 = 0x26
0x838: M[V726] = 0x26
0x839: V729 = 0x20
0x83b: V730 = ADD 0x20 V726
0x83d: V731 = 0xd15
0x840: V732 = 0x26
0x843: CODECOPY V730 0xd15 0x26
0x844: V733 = 0x40
0x846: V734 = ADD 0x40 V730
0x84a: V735 = 0x40
0x84c: V736 = M[0x40]
0x84f: V737 = SUB V734 V736
0x851: REVERT V736 V737
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x852
[0x852:0x8b8]
---
Predecessors: [0x80d]
Successors: [0x27d, 0x4bb]
---
0x852 JUMPDEST
0x853 PUSH1 0x5
0x855 SLOAD
0x856 PUSH1 0x40
0x858 MLOAD
0x859 PUSH1 0x1
0x85b PUSH1 0x1
0x85d PUSH1 0xa0
0x85f SHL
0x860 SUB
0x861 DUP1
0x862 DUP5
0x863 AND
0x864 SWAP3
0x865 PUSH2 0x100
0x868 SWAP1
0x869 DIV
0x86a AND
0x86b SWAP1
0x86c PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x88d SWAP1
0x88e PUSH1 0x0
0x890 SWAP1
0x891 LOG3
0x892 PUSH1 0x5
0x894 DUP1
0x895 SLOAD
0x896 PUSH1 0x1
0x898 PUSH1 0x1
0x89a PUSH1 0xa0
0x89c SHL
0x89d SUB
0x89e SWAP1
0x89f SWAP3
0x8a0 AND
0x8a1 PUSH2 0x100
0x8a4 MUL
0x8a5 PUSH2 0x100
0x8a8 PUSH1 0x1
0x8aa PUSH1 0xa8
0x8ac SHL
0x8ad SUB
0x8ae NOT
0x8af SWAP1
0x8b0 SWAP3
0x8b1 AND
0x8b2 SWAP2
0x8b3 SWAP1
0x8b4 SWAP2
0x8b5 OR
0x8b6 SWAP1
0x8b7 SSTORE
0x8b8 JUMP
---
0x852: JUMPDEST 
0x853: V738 = 0x5
0x855: V739 = S[0x5]
0x856: V740 = 0x40
0x858: V741 = M[0x40]
0x859: V742 = 0x1
0x85b: V743 = 0x1
0x85d: V744 = 0xa0
0x85f: V745 = SHL 0xa0 0x1
0x860: V746 = SUB 0x10000000000000000000000000000000000000000 0x1
0x863: V747 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x865: V748 = 0x100
0x869: V749 = DIV V739 0x100
0x86a: V750 = AND V749 0xffffffffffffffffffffffffffffffffffffffff
0x86c: V751 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x88e: V752 = 0x0
0x891: LOG V741 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V750 V747
0x892: V753 = 0x5
0x895: V754 = S[0x5]
0x896: V755 = 0x1
0x898: V756 = 0x1
0x89a: V757 = 0xa0
0x89c: V758 = SHL 0xa0 0x1
0x89d: V759 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a0: V760 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x8a1: V761 = 0x100
0x8a4: V762 = MUL 0x100 V760
0x8a5: V763 = 0x100
0x8a8: V764 = 0x1
0x8aa: V765 = 0xa8
0x8ac: V766 = SHL 0xa8 0x1
0x8ad: V767 = SUB 0x1000000000000000000000000000000000000000000 0x100
0x8ae: V768 = NOT 0xffffffffffffffffffffffffffffffffffffffff00
0x8b1: V769 = AND V754 0xffffffffffffffffffffff0000000000000000000000000000000000000000ff
0x8b5: V770 = OR V769 V762
0x8b7: S[0x5] = V770
0x8b8: JUMP S1
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x8b9
[0x8b9:0x8bc]
---
Predecessors: [0x41b, 0x44b, 0x457, 0x4ce, 0x4db, 0x51c, 0x5b9, 0x6f2, 0x6ff, 0x75a, 0x799]
Successors: [0x428, 0x457, 0x495, 0x4db, 0x4ec, 0x524, 0x5c1, 0x6ff, 0x729, 0x767, 0x7a1]
---
0x8b9 JUMPDEST
0x8ba CALLER
0x8bb SWAP1
0x8bc JUMP
---
0x8b9: JUMPDEST 
0x8ba: V771 = CALLER
0x8bc: JUMP {0x428, 0x457, 0x495, 0x4db, 0x4ec, 0x524, 0x5c1, 0x6ff, 0x729, 0x767, 0x7a1}
---
Entry stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x428, 0x457, 0x495, 0x4db, 0x4ec, 0x524, 0x5c1, 0x6ff, 0x729, 0x767, 0x7a1}]
Stack pops: 1
Stack additions: [V771]
Exit stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]

================================

Block 0x8bd
[0x8bd:0x8cb]
---
Predecessors: [0x428, 0x4b6]
Successors: [0x8cc, 0x902]
---
0x8bd JUMPDEST
0x8be PUSH1 0x1
0x8c0 PUSH1 0x1
0x8c2 PUSH1 0xa0
0x8c4 SHL
0x8c5 SUB
0x8c6 DUP4
0x8c7 AND
0x8c8 PUSH2 0x902
0x8cb JUMPI
---
0x8bd: JUMPDEST 
0x8be: V772 = 0x1
0x8c0: V773 = 0x1
0x8c2: V774 = 0xa0
0x8c4: V775 = SHL 0xa0 0x1
0x8c5: V776 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c7: V777 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x8c8: V778 = 0x902
0x8cb: JUMPI 0x902 V777
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x8cc
[0x8cc:0x901]
---
Predecessors: [0x8bd]
Successors: []
---
0x8cc PUSH1 0x40
0x8ce MLOAD
0x8cf PUSH3 0x461bcd
0x8d3 PUSH1 0xe5
0x8d5 SHL
0x8d6 DUP2
0x8d7 MSTORE
0x8d8 PUSH1 0x4
0x8da ADD
0x8db DUP1
0x8dc DUP1
0x8dd PUSH1 0x20
0x8df ADD
0x8e0 DUP3
0x8e1 DUP2
0x8e2 SUB
0x8e3 DUP3
0x8e4 MSTORE
0x8e5 PUSH1 0x24
0x8e7 DUP2
0x8e8 MSTORE
0x8e9 PUSH1 0x20
0x8eb ADD
0x8ec DUP1
0x8ed PUSH2 0xdd0
0x8f0 PUSH1 0x24
0x8f2 SWAP2
0x8f3 CODECOPY
0x8f4 PUSH1 0x40
0x8f6 ADD
0x8f7 SWAP2
0x8f8 POP
0x8f9 POP
0x8fa PUSH1 0x40
0x8fc MLOAD
0x8fd DUP1
0x8fe SWAP2
0x8ff SUB
0x900 SWAP1
0x901 REVERT
---
0x8cc: V779 = 0x40
0x8ce: V780 = M[0x40]
0x8cf: V781 = 0x461bcd
0x8d3: V782 = 0xe5
0x8d5: V783 = SHL 0xe5 0x461bcd
0x8d7: M[V780] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8d8: V784 = 0x4
0x8da: V785 = ADD 0x4 V780
0x8dd: V786 = 0x20
0x8df: V787 = ADD 0x20 V785
0x8e2: V788 = SUB V787 V785
0x8e4: M[V785] = V788
0x8e5: V789 = 0x24
0x8e8: M[V787] = 0x24
0x8e9: V790 = 0x20
0x8eb: V791 = ADD 0x20 V787
0x8ed: V792 = 0xdd0
0x8f0: V793 = 0x24
0x8f3: CODECOPY V791 0xdd0 0x24
0x8f4: V794 = 0x40
0x8f6: V795 = ADD 0x40 V791
0x8fa: V796 = 0x40
0x8fc: V797 = M[0x40]
0x8ff: V798 = SUB V795 V797
0x901: REVERT V797 V798
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x902
[0x902:0x910]
---
Predecessors: [0x8bd]
Successors: [0x911, 0x947]
---
0x902 JUMPDEST
0x903 PUSH1 0x1
0x905 PUSH1 0x1
0x907 PUSH1 0xa0
0x909 SHL
0x90a SUB
0x90b DUP3
0x90c AND
0x90d PUSH2 0x947
0x910 JUMPI
---
0x902: JUMPDEST 
0x903: V799 = 0x1
0x905: V800 = 0x1
0x907: V801 = 0xa0
0x909: V802 = SHL 0xa0 0x1
0x90a: V803 = SUB 0x10000000000000000000000000000000000000000 0x1
0x90c: V804 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x90d: V805 = 0x947
0x910: JUMPI 0x947 V804
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x911
[0x911:0x946]
---
Predecessors: [0x902]
Successors: []
---
0x911 PUSH1 0x40
0x913 MLOAD
0x914 PUSH3 0x461bcd
0x918 PUSH1 0xe5
0x91a SHL
0x91b DUP2
0x91c MSTORE
0x91d PUSH1 0x4
0x91f ADD
0x920 DUP1
0x921 DUP1
0x922 PUSH1 0x20
0x924 ADD
0x925 DUP3
0x926 DUP2
0x927 SUB
0x928 DUP3
0x929 MSTORE
0x92a PUSH1 0x22
0x92c DUP2
0x92d MSTORE
0x92e PUSH1 0x20
0x930 ADD
0x931 DUP1
0x932 PUSH2 0xd3b
0x935 PUSH1 0x22
0x937 SWAP2
0x938 CODECOPY
0x939 PUSH1 0x40
0x93b ADD
0x93c SWAP2
0x93d POP
0x93e POP
0x93f PUSH1 0x40
0x941 MLOAD
0x942 DUP1
0x943 SWAP2
0x944 SUB
0x945 SWAP1
0x946 REVERT
---
0x911: V806 = 0x40
0x913: V807 = M[0x40]
0x914: V808 = 0x461bcd
0x918: V809 = 0xe5
0x91a: V810 = SHL 0xe5 0x461bcd
0x91c: M[V807] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x91d: V811 = 0x4
0x91f: V812 = ADD 0x4 V807
0x922: V813 = 0x20
0x924: V814 = ADD 0x20 V812
0x927: V815 = SUB V814 V812
0x929: M[V812] = V815
0x92a: V816 = 0x22
0x92d: M[V814] = 0x22
0x92e: V817 = 0x20
0x930: V818 = ADD 0x20 V814
0x932: V819 = 0xd3b
0x935: V820 = 0x22
0x938: CODECOPY V818 0xd3b 0x22
0x939: V821 = 0x40
0x93b: V822 = ADD 0x40 V818
0x93f: V823 = 0x40
0x941: V824 = M[0x40]
0x944: V825 = SUB V822 V824
0x946: REVERT V824 V825
---
Entry stack: [V13, S8, S7, S6, S5, 0x0, {0x42f, 0x4bb}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, 0x0, {0x42f, 0x4bb}, S2, S1, S0]

================================

Block 0x947
[0x947:0x9a8]
---
Predecessors: [0x902]
Successors: [0x42f, 0x4bb]
---
0x947 JUMPDEST
0x948 PUSH1 0x1
0x94a PUSH1 0x1
0x94c PUSH1 0xa0
0x94e SHL
0x94f SUB
0x950 DUP1
0x951 DUP5
0x952 AND
0x953 PUSH1 0x0
0x955 DUP2
0x956 DUP2
0x957 MSTORE
0x958 PUSH1 0x1
0x95a PUSH1 0x20
0x95c SWAP1
0x95d DUP2
0x95e MSTORE
0x95f PUSH1 0x40
0x961 DUP1
0x962 DUP4
0x963 SHA3
0x964 SWAP5
0x965 DUP8
0x966 AND
0x967 DUP1
0x968 DUP5
0x969 MSTORE
0x96a SWAP5
0x96b DUP3
0x96c MSTORE
0x96d SWAP2
0x96e DUP3
0x96f SWAP1
0x970 SHA3
0x971 DUP6
0x972 SWAP1
0x973 SSTORE
0x974 DUP2
0x975 MLOAD
0x976 DUP6
0x977 DUP2
0x978 MSTORE
0x979 SWAP2
0x97a MLOAD
0x97b PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x99c SWAP3
0x99d DUP2
0x99e SWAP1
0x99f SUB
0x9a0 SWAP1
0x9a1 SWAP2
0x9a2 ADD
0x9a3 SWAP1
0x9a4 LOG3
0x9a5 POP
0x9a6 POP
0x9a7 POP
0x9a8 JUMP
---
0x947: JUMPDEST 
0x948: V826 = 0x1
0x94a: V827 = 0x1
0x94c: V828 = 0xa0
0x94e: V829 = SHL 0xa0 0x1
0x94f: V830 = SUB 0x10000000000000000000000000000000000000000 0x1
0x952: V831 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x953: V832 = 0x0
0x957: M[0x0] = V831
0x958: V833 = 0x1
0x95a: V834 = 0x20
0x95e: M[0x20] = 0x1
0x95f: V835 = 0x40
0x963: V836 = SHA3 0x0 0x40
0x966: V837 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x969: M[0x0] = V837
0x96c: M[0x20] = V836
0x970: V838 = SHA3 0x0 0x40
0x973: S[V838] = S0
0x975: V839 = M[0x40]
0x978: M[V839] = S0
0x97a: V840 = M[0x40]
0x97b: V841 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x99f: V842 = SUB V839 V840
0x9a2: V843 = ADD 0x20 V842
0x9a4: LOG V840 V843 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V831 V837
0x9a8: JUMP {0x42f, 0x4bb}
---
Entry stack: [V13, S8, S7, S6, S5, 0x0, {0x42f, 0x4bb}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, 0x0]

================================

Block 0x9a9
[0x9a9:0x9b7]
---
Predecessors: [0x43e, 0x767]
Successors: [0x9b8, 0x9ee]
---
0x9a9 JUMPDEST
0x9aa PUSH1 0x1
0x9ac PUSH1 0x1
0x9ae PUSH1 0xa0
0x9b0 SHL
0x9b1 SUB
0x9b2 DUP4
0x9b3 AND
0x9b4 PUSH2 0x9ee
0x9b7 JUMPI
---
0x9a9: JUMPDEST 
0x9aa: V844 = 0x1
0x9ac: V845 = 0x1
0x9ae: V846 = 0xa0
0x9b0: V847 = SHL 0xa0 0x1
0x9b1: V848 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b3: V849 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x9b4: V850 = 0x9ee
0x9b7: JUMPI 0x9ee V849
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x9b8
[0x9b8:0x9ed]
---
Predecessors: [0x9a9]
Successors: []
---
0x9b8 PUSH1 0x40
0x9ba MLOAD
0x9bb PUSH3 0x461bcd
0x9bf PUSH1 0xe5
0x9c1 SHL
0x9c2 DUP2
0x9c3 MSTORE
0x9c4 PUSH1 0x4
0x9c6 ADD
0x9c7 DUP1
0x9c8 DUP1
0x9c9 PUSH1 0x20
0x9cb ADD
0x9cc DUP3
0x9cd DUP2
0x9ce SUB
0x9cf DUP3
0x9d0 MSTORE
0x9d1 PUSH1 0x25
0x9d3 DUP2
0x9d4 MSTORE
0x9d5 PUSH1 0x20
0x9d7 ADD
0x9d8 DUP1
0x9d9 PUSH2 0xdab
0x9dc PUSH1 0x25
0x9de SWAP2
0x9df CODECOPY
0x9e0 PUSH1 0x40
0x9e2 ADD
0x9e3 SWAP2
0x9e4 POP
0x9e5 POP
0x9e6 PUSH1 0x40
0x9e8 MLOAD
0x9e9 DUP1
0x9ea SWAP2
0x9eb SUB
0x9ec SWAP1
0x9ed REVERT
---
0x9b8: V851 = 0x40
0x9ba: V852 = M[0x40]
0x9bb: V853 = 0x461bcd
0x9bf: V854 = 0xe5
0x9c1: V855 = SHL 0xe5 0x461bcd
0x9c3: M[V852] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x9c4: V856 = 0x4
0x9c6: V857 = ADD 0x4 V852
0x9c9: V858 = 0x20
0x9cb: V859 = ADD 0x20 V857
0x9ce: V860 = SUB V859 V857
0x9d0: M[V857] = V860
0x9d1: V861 = 0x25
0x9d4: M[V859] = 0x25
0x9d5: V862 = 0x20
0x9d7: V863 = ADD 0x20 V859
0x9d9: V864 = 0xdab
0x9dc: V865 = 0x25
0x9df: CODECOPY V863 0xdab 0x25
0x9e0: V866 = 0x40
0x9e2: V867 = ADD 0x40 V863
0x9e6: V868 = 0x40
0x9e8: V869 = M[0x40]
0x9eb: V870 = SUB V867 V869
0x9ed: REVERT V869 V870
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x9ee
[0x9ee:0x9fc]
---
Predecessors: [0x9a9]
Successors: [0x9fd, 0xa33]
---
0x9ee JUMPDEST
0x9ef PUSH1 0x1
0x9f1 PUSH1 0x1
0x9f3 PUSH1 0xa0
0x9f5 SHL
0x9f6 SUB
0x9f7 DUP3
0x9f8 AND
0x9f9 PUSH2 0xa33
0x9fc JUMPI
---
0x9ee: JUMPDEST 
0x9ef: V871 = 0x1
0x9f1: V872 = 0x1
0x9f3: V873 = 0xa0
0x9f5: V874 = SHL 0xa0 0x1
0x9f6: V875 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f8: V876 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x9f9: V877 = 0xa33
0x9fc: JUMPI 0xa33 V876
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x9fd
[0x9fd:0xa32]
---
Predecessors: [0x9ee]
Successors: []
---
0x9fd PUSH1 0x40
0x9ff MLOAD
0xa00 PUSH3 0x461bcd
0xa04 PUSH1 0xe5
0xa06 SHL
0xa07 DUP2
0xa08 MSTORE
0xa09 PUSH1 0x4
0xa0b ADD
0xa0c DUP1
0xa0d DUP1
0xa0e PUSH1 0x20
0xa10 ADD
0xa11 DUP3
0xa12 DUP2
0xa13 SUB
0xa14 DUP3
0xa15 MSTORE
0xa16 PUSH1 0x23
0xa18 DUP2
0xa19 MSTORE
0xa1a PUSH1 0x20
0xa1c ADD
0xa1d DUP1
0xa1e PUSH2 0xcf2
0xa21 PUSH1 0x23
0xa23 SWAP2
0xa24 CODECOPY
0xa25 PUSH1 0x40
0xa27 ADD
0xa28 SWAP2
0xa29 POP
0xa2a POP
0xa2b PUSH1 0x40
0xa2d MLOAD
0xa2e DUP1
0xa2f SWAP2
0xa30 SUB
0xa31 SWAP1
0xa32 REVERT
---
0x9fd: V878 = 0x40
0x9ff: V879 = M[0x40]
0xa00: V880 = 0x461bcd
0xa04: V881 = 0xe5
0xa06: V882 = SHL 0xe5 0x461bcd
0xa08: M[V879] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xa09: V883 = 0x4
0xa0b: V884 = ADD 0x4 V879
0xa0e: V885 = 0x20
0xa10: V886 = ADD 0x20 V884
0xa13: V887 = SUB V886 V884
0xa15: M[V884] = V887
0xa16: V888 = 0x23
0xa19: M[V886] = 0x23
0xa1a: V889 = 0x20
0xa1c: V890 = ADD 0x20 V886
0xa1e: V891 = 0xcf2
0xa21: V892 = 0x23
0xa24: CODECOPY V890 0xcf2 0x23
0xa25: V893 = 0x40
0xa27: V894 = ADD 0x40 V890
0xa2b: V895 = 0x40
0xa2d: V896 = M[0x40]
0xa30: V897 = SUB V894 V896
0xa32: REVERT V896 V897
---
Entry stack: [V13, S8, S7, S6, S5, 0x0, {0x42f, 0x44b}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, 0x0, {0x42f, 0x44b}, S2, S1, S0]

================================

Block 0xa33
[0xa33:0xa3d]
---
Predecessors: [0x9ee]
Successors: [0xcec]
---
0xa33 JUMPDEST
0xa34 PUSH2 0xa3e
0xa37 DUP4
0xa38 DUP4
0xa39 DUP4
0xa3a PUSH2 0xcec
0xa3d JUMP
---
0xa33: JUMPDEST 
0xa34: V898 = 0xa3e
0xa3a: V899 = 0xcec
0xa3d: JUMP 0xcec
---
Entry stack: [V13, S8, S7, S6, S5, 0x0, {0x42f, 0x44b}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xa3e, S2, S1, S0]
Exit stack: [V13, S8, S7, S6, S5, 0x0, {0x42f, 0x44b}, S2, S1, S0, 0xa3e, S2, S1, S0]

================================

Block 0xa3e
[0xa3e:0xa7a]
---
Predecessors: [0xcec]
Successors: [0xb04]
---
0xa3e JUMPDEST
0xa3f PUSH2 0xa7b
0xa42 DUP2
0xa43 PUSH1 0x40
0xa45 MLOAD
0xa46 DUP1
0xa47 PUSH1 0x60
0xa49 ADD
0xa4a PUSH1 0x40
0xa4c MSTORE
0xa4d DUP1
0xa4e PUSH1 0x26
0xa50 DUP2
0xa51 MSTORE
0xa52 PUSH1 0x20
0xa54 ADD
0xa55 PUSH2 0xd5d
0xa58 PUSH1 0x26
0xa5a SWAP2
0xa5b CODECOPY
0xa5c PUSH1 0x1
0xa5e PUSH1 0x1
0xa60 PUSH1 0xa0
0xa62 SHL
0xa63 SUB
0xa64 DUP7
0xa65 AND
0xa66 PUSH1 0x0
0xa68 SWAP1
0xa69 DUP2
0xa6a MSTORE
0xa6b PUSH1 0x20
0xa6d DUP2
0xa6e SWAP1
0xa6f MSTORE
0xa70 PUSH1 0x40
0xa72 SWAP1
0xa73 SHA3
0xa74 SLOAD
0xa75 SWAP2
0xa76 SWAP1
0xa77 PUSH2 0xb04
0xa7a JUMP
---
0xa3e: JUMPDEST 
0xa3f: V900 = 0xa7b
0xa43: V901 = 0x40
0xa45: V902 = M[0x40]
0xa47: V903 = 0x60
0xa49: V904 = ADD 0x60 V902
0xa4a: V905 = 0x40
0xa4c: M[0x40] = V904
0xa4e: V906 = 0x26
0xa51: M[V902] = 0x26
0xa52: V907 = 0x20
0xa54: V908 = ADD 0x20 V902
0xa55: V909 = 0xd5d
0xa58: V910 = 0x26
0xa5b: CODECOPY V908 0xd5d 0x26
0xa5c: V911 = 0x1
0xa5e: V912 = 0x1
0xa60: V913 = 0xa0
0xa62: V914 = SHL 0xa0 0x1
0xa63: V915 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa65: V916 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xa66: V917 = 0x0
0xa6a: M[0x0] = V916
0xa6b: V918 = 0x20
0xa6f: M[0x20] = 0x0
0xa70: V919 = 0x40
0xa73: V920 = SHA3 0x0 0x40
0xa74: V921 = S[V920]
0xa77: V922 = 0xb04
0xa7a: JUMP 0xb04
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xa7b, V921, S0, V902]
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xa7b, V921, S0, V902]

================================

Block 0xa7b
[0xa7b:0xaa9]
---
Predecessors: [0xb93]
Successors: [0xb9b]
---
0xa7b JUMPDEST
0xa7c PUSH1 0x1
0xa7e PUSH1 0x1
0xa80 PUSH1 0xa0
0xa82 SHL
0xa83 SUB
0xa84 DUP1
0xa85 DUP6
0xa86 AND
0xa87 PUSH1 0x0
0xa89 SWAP1
0xa8a DUP2
0xa8b MSTORE
0xa8c PUSH1 0x20
0xa8e DUP2
0xa8f SWAP1
0xa90 MSTORE
0xa91 PUSH1 0x40
0xa93 DUP1
0xa94 DUP3
0xa95 SHA3
0xa96 SWAP4
0xa97 SWAP1
0xa98 SWAP4
0xa99 SSTORE
0xa9a SWAP1
0xa9b DUP5
0xa9c AND
0xa9d DUP2
0xa9e MSTORE
0xa9f SHA3
0xaa0 SLOAD
0xaa1 PUSH2 0xaaa
0xaa4 SWAP1
0xaa5 DUP3
0xaa6 PUSH2 0xb9b
0xaa9 JUMP
---
0xa7b: JUMPDEST 
0xa7c: V923 = 0x1
0xa7e: V924 = 0x1
0xa80: V925 = 0xa0
0xa82: V926 = SHL 0xa0 0x1
0xa83: V927 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa86: V928 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xa87: V929 = 0x0
0xa8b: M[0x0] = V928
0xa8c: V930 = 0x20
0xa90: M[0x20] = 0x0
0xa91: V931 = 0x40
0xa95: V932 = SHA3 0x0 0x40
0xa99: S[V932] = V1004
0xa9c: V933 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xa9e: M[0x0] = V933
0xa9f: V934 = SHA3 0x0 0x40
0xaa0: V935 = S[V934]
0xaa1: V936 = 0xaaa
0xaa6: V937 = 0xb9b
0xaa9: JUMP 0xb9b
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1004]
Stack pops: 4
Stack additions: [S3, S2, S1, 0xaaa, V935, S1]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xaaa, V935, S1]

================================

Block 0xaaa
[0xaaa:0xb03]
---
Predecessors: [0xbf5]
Successors: [0x42f, 0x44b, 0x4bb]
---
0xaaa JUMPDEST
0xaab PUSH1 0x1
0xaad PUSH1 0x1
0xaaf PUSH1 0xa0
0xab1 SHL
0xab2 SUB
0xab3 DUP1
0xab4 DUP5
0xab5 AND
0xab6 PUSH1 0x0
0xab8 DUP2
0xab9 DUP2
0xaba MSTORE
0xabb PUSH1 0x20
0xabd DUP2
0xabe DUP2
0xabf MSTORE
0xac0 PUSH1 0x40
0xac2 SWAP2
0xac3 DUP3
0xac4 SWAP1
0xac5 SHA3
0xac6 SWAP5
0xac7 SWAP1
0xac8 SWAP5
0xac9 SSTORE
0xaca DUP1
0xacb MLOAD
0xacc DUP6
0xacd DUP2
0xace MSTORE
0xacf SWAP1
0xad0 MLOAD
0xad1 SWAP2
0xad2 SWAP4
0xad3 SWAP3
0xad4 DUP8
0xad5 AND
0xad6 SWAP3
0xad7 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xaf8 SWAP3
0xaf9 SWAP2
0xafa DUP3
0xafb SWAP1
0xafc SUB
0xafd ADD
0xafe SWAP1
0xaff LOG3
0xb00 POP
0xb01 POP
0xb02 POP
0xb03 JUMP
---
0xaaa: JUMPDEST 
0xaab: V938 = 0x1
0xaad: V939 = 0x1
0xaaf: V940 = 0xa0
0xab1: V941 = SHL 0xa0 0x1
0xab2: V942 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab5: V943 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xab6: V944 = 0x0
0xaba: M[0x0] = V943
0xabb: V945 = 0x20
0xabf: M[0x20] = 0x0
0xac0: V946 = 0x40
0xac5: V947 = SHA3 0x0 0x40
0xac9: S[V947] = V1006
0xacb: V948 = M[0x40]
0xace: M[V948] = S1
0xad0: V949 = M[0x40]
0xad5: V950 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xad7: V951 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xafc: V952 = SUB V948 V949
0xafd: V953 = ADD V952 0x20
0xaff: LOG V949 V953 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V950 V943
0xb03: JUMP S4
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1006]
Stack pops: 5
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5]

================================

Block 0xb04
[0xb04:0xb0f]
---
Predecessors: [0x495, 0x729, 0xa3e]
Successors: [0xb10, 0xb93]
---
0xb04 JUMPDEST
0xb05 PUSH1 0x0
0xb07 DUP2
0xb08 DUP5
0xb09 DUP5
0xb0a GT
0xb0b ISZERO
0xb0c PUSH2 0xb93
0xb0f JUMPI
---
0xb04: JUMPDEST 
0xb05: V954 = 0x0
0xb0a: V955 = GT S1 S2
0xb0b: V956 = ISZERO V955
0xb0c: V957 = 0xb93
0xb0f: JUMPI 0xb93 V956
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, S0]
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, S0]

================================

Block 0xb10
[0xb10:0xb3f]
---
Predecessors: [0xb04]
Successors: [0xb40]
---
0xb10 PUSH1 0x40
0xb12 MLOAD
0xb13 PUSH3 0x461bcd
0xb17 PUSH1 0xe5
0xb19 SHL
0xb1a DUP2
0xb1b MSTORE
0xb1c PUSH1 0x4
0xb1e ADD
0xb1f DUP1
0xb20 DUP1
0xb21 PUSH1 0x20
0xb23 ADD
0xb24 DUP3
0xb25 DUP2
0xb26 SUB
0xb27 DUP3
0xb28 MSTORE
0xb29 DUP4
0xb2a DUP2
0xb2b DUP2
0xb2c MLOAD
0xb2d DUP2
0xb2e MSTORE
0xb2f PUSH1 0x20
0xb31 ADD
0xb32 SWAP2
0xb33 POP
0xb34 DUP1
0xb35 MLOAD
0xb36 SWAP1
0xb37 PUSH1 0x20
0xb39 ADD
0xb3a SWAP1
0xb3b DUP1
0xb3c DUP4
0xb3d DUP4
0xb3e PUSH1 0x0
---
0xb10: V958 = 0x40
0xb12: V959 = M[0x40]
0xb13: V960 = 0x461bcd
0xb17: V961 = 0xe5
0xb19: V962 = SHL 0xe5 0x461bcd
0xb1b: M[V959] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb1c: V963 = 0x4
0xb1e: V964 = ADD 0x4 V959
0xb21: V965 = 0x20
0xb23: V966 = ADD 0x20 V964
0xb26: V967 = SUB V966 V964
0xb28: M[V964] = V967
0xb2c: V968 = M[S0]
0xb2e: M[V966] = V968
0xb2f: V969 = 0x20
0xb31: V970 = ADD 0x20 V966
0xb35: V971 = M[S0]
0xb37: V972 = 0x20
0xb39: V973 = ADD 0x20 S0
0xb3e: V974 = 0x0
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 1
Stack additions: [S0, V964, V964, V970, V973, V971, V971, V970, V973, 0x0]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0, V964, V964, V970, V973, V971, V971, V970, V973, 0x0]

================================

Block 0xb40
[0xb40:0xb48]
---
Predecessors: [0xb10, 0xb49]
Successors: [0xb49, 0xb58]
---
0xb40 JUMPDEST
0xb41 DUP4
0xb42 DUP2
0xb43 LT
0xb44 ISZERO
0xb45 PUSH2 0xb58
0xb48 JUMPI
---
0xb40: JUMPDEST 
0xb43: V975 = LT S0 V971
0xb44: V976 = ISZERO V975
0xb45: V977 = 0xb58
0xb48: JUMPI 0xb58 V976
---
Entry stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V964, V964, V970, V973, V971, V971, V970, V973, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V964, V964, V970, V973, V971, V971, V970, V973, S0]

================================

Block 0xb49
[0xb49:0xb57]
---
Predecessors: [0xb40]
Successors: [0xb40]
---
0xb49 DUP2
0xb4a DUP2
0xb4b ADD
0xb4c MLOAD
0xb4d DUP4
0xb4e DUP3
0xb4f ADD
0xb50 MSTORE
0xb51 PUSH1 0x20
0xb53 ADD
0xb54 PUSH2 0xb40
0xb57 JUMP
---
0xb4b: V978 = ADD S0 V973
0xb4c: V979 = M[V978]
0xb4f: V980 = ADD S0 V970
0xb50: M[V980] = V979
0xb51: V981 = 0x20
0xb53: V982 = ADD 0x20 S0
0xb54: V983 = 0xb40
0xb57: JUMP 0xb40
---
Entry stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V964, V964, V970, V973, V971, V971, V970, V973, S0]
Stack pops: 3
Stack additions: [S2, S1, V982]
Exit stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V964, V964, V970, V973, V971, V971, V970, V973, V982]

================================

Block 0xb58
[0xb58:0xb6b]
---
Predecessors: [0xb40]
Successors: [0xb6c, 0xb85]
---
0xb58 JUMPDEST
0xb59 POP
0xb5a POP
0xb5b POP
0xb5c POP
0xb5d SWAP1
0xb5e POP
0xb5f SWAP1
0xb60 DUP2
0xb61 ADD
0xb62 SWAP1
0xb63 PUSH1 0x1f
0xb65 AND
0xb66 DUP1
0xb67 ISZERO
0xb68 PUSH2 0xb85
0xb6b JUMPI
---
0xb58: JUMPDEST 
0xb61: V984 = ADD V971 V970
0xb63: V985 = 0x1f
0xb65: V986 = AND 0x1f V971
0xb67: V987 = ISZERO V986
0xb68: V988 = 0xb85
0xb6b: JUMPI 0xb85 V987
---
Entry stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V964, V964, V970, V973, V971, V971, V970, V973, S0]
Stack pops: 7
Stack additions: [V984, V986]
Exit stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V964, V964, V984, V986]

================================

Block 0xb6c
[0xb6c:0xb84]
---
Predecessors: [0xb58]
Successors: [0xb85]
---
0xb6c DUP1
0xb6d DUP3
0xb6e SUB
0xb6f DUP1
0xb70 MLOAD
0xb71 PUSH1 0x1
0xb73 DUP4
0xb74 PUSH1 0x20
0xb76 SUB
0xb77 PUSH2 0x100
0xb7a EXP
0xb7b SUB
0xb7c NOT
0xb7d AND
0xb7e DUP2
0xb7f MSTORE
0xb80 PUSH1 0x20
0xb82 ADD
0xb83 SWAP2
0xb84 POP
---
0xb6e: V989 = SUB V984 V986
0xb70: V990 = M[V989]
0xb71: V991 = 0x1
0xb74: V992 = 0x20
0xb76: V993 = SUB 0x20 V986
0xb77: V994 = 0x100
0xb7a: V995 = EXP 0x100 V993
0xb7b: V996 = SUB V995 0x1
0xb7c: V997 = NOT V996
0xb7d: V998 = AND V997 V990
0xb7f: M[V989] = V998
0xb80: V999 = 0x20
0xb82: V1000 = ADD 0x20 V989
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, S4, V964, V964, V984, V986]
Stack pops: 2
Stack additions: [V1000, S0]
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, S4, V964, V964, V1000, V986]

================================

Block 0xb85
[0xb85:0xb92]
---
Predecessors: [0xb58, 0xb6c]
Successors: []
---
0xb85 JUMPDEST
0xb86 POP
0xb87 SWAP3
0xb88 POP
0xb89 POP
0xb8a POP
0xb8b PUSH1 0x40
0xb8d MLOAD
0xb8e DUP1
0xb8f SWAP2
0xb90 SUB
0xb91 SWAP1
0xb92 REVERT
---
0xb85: JUMPDEST 
0xb8b: V1001 = 0x40
0xb8d: V1002 = M[0x40]
0xb90: V1003 = SUB S1 V1002
0xb92: REVERT V1002 V1003
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, S4, V964, V964, S1, V986]
Stack pops: 5
Stack additions: []
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0]

================================

Block 0xb93
[0xb93:0xb9a]
---
Predecessors: [0xb04]
Successors: [0x1a3, 0x4b6, 0xa7b]
---
0xb93 JUMPDEST
0xb94 POP
0xb95 POP
0xb96 POP
0xb97 SWAP1
0xb98 SUB
0xb99 SWAP1
0xb9a JUMP
---
0xb93: JUMPDEST 
0xb98: V1004 = SUB S4 S3
0xb9a: JUMP S5
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: [V1004]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, V1004]

================================

Block 0xb9b
[0xb9b:0xba8]
---
Predecessors: [0x4ec, 0xa7b, 0xc63, 0xc70]
Successors: [0xba9, 0xbf5]
---
0xb9b JUMPDEST
0xb9c PUSH1 0x0
0xb9e DUP3
0xb9f DUP3
0xba0 ADD
0xba1 DUP4
0xba2 DUP2
0xba3 LT
0xba4 ISZERO
0xba5 PUSH2 0xbf5
0xba8 JUMPI
---
0xb9b: JUMPDEST 
0xb9c: V1005 = 0x0
0xba0: V1006 = ADD S0 S1
0xba3: V1007 = LT V1006 S1
0xba4: V1008 = ISZERO V1007
0xba5: V1009 = 0xbf5
0xba8: JUMPI 0xbf5 V1008
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1006]
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V1006]

================================

Block 0xba9
[0xba9:0xbf4]
---
Predecessors: [0xb9b]
Successors: []
---
0xba9 PUSH1 0x40
0xbab DUP1
0xbac MLOAD
0xbad PUSH3 0x461bcd
0xbb1 PUSH1 0xe5
0xbb3 SHL
0xbb4 DUP2
0xbb5 MSTORE
0xbb6 PUSH1 0x20
0xbb8 PUSH1 0x4
0xbba DUP3
0xbbb ADD
0xbbc MSTORE
0xbbd PUSH1 0x1b
0xbbf PUSH1 0x24
0xbc1 DUP3
0xbc2 ADD
0xbc3 MSTORE
0xbc4 PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xbe5 PUSH1 0x44
0xbe7 DUP3
0xbe8 ADD
0xbe9 MSTORE
0xbea SWAP1
0xbeb MLOAD
0xbec SWAP1
0xbed DUP2
0xbee SWAP1
0xbef SUB
0xbf0 PUSH1 0x64
0xbf2 ADD
0xbf3 SWAP1
0xbf4 REVERT
---
0xba9: V1010 = 0x40
0xbac: V1011 = M[0x40]
0xbad: V1012 = 0x461bcd
0xbb1: V1013 = 0xe5
0xbb3: V1014 = SHL 0xe5 0x461bcd
0xbb5: M[V1011] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xbb6: V1015 = 0x20
0xbb8: V1016 = 0x4
0xbbb: V1017 = ADD V1011 0x4
0xbbc: M[V1017] = 0x20
0xbbd: V1018 = 0x1b
0xbbf: V1019 = 0x24
0xbc2: V1020 = ADD V1011 0x24
0xbc3: M[V1020] = 0x1b
0xbc4: V1021 = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xbe5: V1022 = 0x44
0xbe8: V1023 = ADD V1011 0x44
0xbe9: M[V1023] = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xbeb: V1024 = M[0x40]
0xbef: V1025 = SUB V1011 V1024
0xbf0: V1026 = 0x64
0xbf2: V1027 = ADD 0x64 V1025
0xbf4: REVERT V1024 V1027
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V1006]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V1006]

================================

Block 0xbf5
[0xbf5:0xbfb]
---
Predecessors: [0xb9b]
Successors: [0x4b6, 0xaaa, 0xc70, 0xc96]
---
0xbf5 JUMPDEST
0xbf6 SWAP4
0xbf7 SWAP3
0xbf8 POP
0xbf9 POP
0xbfa POP
0xbfb JUMP
---
0xbf5: JUMPDEST 
0xbfb: JUMP S4
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V1006]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, V1006]

================================

Block 0xbfc
[0xbfc:0xc0a]
---
Predecessors: [0x590]
Successors: [0xc0b, 0xc57]
---
0xbfc JUMPDEST
0xbfd PUSH1 0x1
0xbff PUSH1 0x1
0xc01 PUSH1 0xa0
0xc03 SHL
0xc04 SUB
0xc05 DUP3
0xc06 AND
0xc07 PUSH2 0xc57
0xc0a JUMPI
---
0xbfc: JUMPDEST 
0xbfd: V1028 = 0x1
0xbff: V1029 = 0x1
0xc01: V1030 = 0xa0
0xc03: V1031 = SHL 0xa0 0x1
0xc04: V1032 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc06: V1033 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xc07: V1034 = 0xc57
0xc0a: JUMPI 0xc57 V1033
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x59a, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x59a, S1, S0]

================================

Block 0xc0b
[0xc0b:0xc56]
---
Predecessors: [0xbfc]
Successors: []
---
0xc0b PUSH1 0x40
0xc0d DUP1
0xc0e MLOAD
0xc0f PUSH3 0x461bcd
0xc13 PUSH1 0xe5
0xc15 SHL
0xc16 DUP2
0xc17 MSTORE
0xc18 PUSH1 0x20
0xc1a PUSH1 0x4
0xc1c DUP3
0xc1d ADD
0xc1e MSTORE
0xc1f PUSH1 0x1f
0xc21 PUSH1 0x24
0xc23 DUP3
0xc24 ADD
0xc25 MSTORE
0xc26 PUSH32 0x45524332303a206d696e7420746f20746865207a65726f206164647265737300
0xc47 PUSH1 0x44
0xc49 DUP3
0xc4a ADD
0xc4b MSTORE
0xc4c SWAP1
0xc4d MLOAD
0xc4e SWAP1
0xc4f DUP2
0xc50 SWAP1
0xc51 SUB
0xc52 PUSH1 0x64
0xc54 ADD
0xc55 SWAP1
0xc56 REVERT
---
0xc0b: V1035 = 0x40
0xc0e: V1036 = M[0x40]
0xc0f: V1037 = 0x461bcd
0xc13: V1038 = 0xe5
0xc15: V1039 = SHL 0xe5 0x461bcd
0xc17: M[V1036] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc18: V1040 = 0x20
0xc1a: V1041 = 0x4
0xc1d: V1042 = ADD V1036 0x4
0xc1e: M[V1042] = 0x20
0xc1f: V1043 = 0x1f
0xc21: V1044 = 0x24
0xc24: V1045 = ADD V1036 0x24
0xc25: M[V1045] = 0x1f
0xc26: V1046 = 0x45524332303a206d696e7420746f20746865207a65726f206164647265737300
0xc47: V1047 = 0x44
0xc4a: V1048 = ADD V1036 0x44
0xc4b: M[V1048] = 0x45524332303a206d696e7420746f20746865207a65726f206164647265737300
0xc4d: V1049 = M[0x40]
0xc51: V1050 = SUB V1036 V1049
0xc52: V1051 = 0x64
0xc54: V1052 = ADD 0x64 V1050
0xc56: REVERT V1049 V1052
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x59a, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x59a, S1, S0]

================================

Block 0xc57
[0xc57:0xc62]
---
Predecessors: [0xbfc]
Successors: [0xcec]
---
0xc57 JUMPDEST
0xc58 PUSH2 0xc63
0xc5b PUSH1 0x0
0xc5d DUP4
0xc5e DUP4
0xc5f PUSH2 0xcec
0xc62 JUMP
---
0xc57: JUMPDEST 
0xc58: V1053 = 0xc63
0xc5b: V1054 = 0x0
0xc5f: V1055 = 0xcec
0xc62: JUMP 0xcec
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x59a, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xc63, 0x0, S1, S0]
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x59a, S1, S0, 0xc63, 0x0, S1, S0]

================================

Block 0xc63
[0xc63:0xc6f]
---
Predecessors: [0xcec]
Successors: [0xb9b]
---
0xc63 JUMPDEST
0xc64 PUSH1 0x2
0xc66 SLOAD
0xc67 PUSH2 0xc70
0xc6a SWAP1
0xc6b DUP3
0xc6c PUSH2 0xb9b
0xc6f JUMP
---
0xc63: JUMPDEST 
0xc64: V1056 = 0x2
0xc66: V1057 = S[0x2]
0xc67: V1058 = 0xc70
0xc6c: V1059 = 0xb9b
0xc6f: JUMP 0xb9b
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0xc70, V1057, S0]
Exit stack: [V13, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xc70, V1057, S0]

================================

Block 0xc70
[0xc70:0xc95]
---
Predecessors: [0xbf5]
Successors: [0xb9b]
---
0xc70 JUMPDEST
0xc71 PUSH1 0x2
0xc73 SSTORE
0xc74 PUSH1 0x1
0xc76 PUSH1 0x1
0xc78 PUSH1 0xa0
0xc7a SHL
0xc7b SUB
0xc7c DUP3
0xc7d AND
0xc7e PUSH1 0x0
0xc80 SWAP1
0xc81 DUP2
0xc82 MSTORE
0xc83 PUSH1 0x20
0xc85 DUP2
0xc86 SWAP1
0xc87 MSTORE
0xc88 PUSH1 0x40
0xc8a SWAP1
0xc8b SHA3
0xc8c SLOAD
0xc8d PUSH2 0xc96
0xc90 SWAP1
0xc91 DUP3
0xc92 PUSH2 0xb9b
0xc95 JUMP
---
0xc70: JUMPDEST 
0xc71: V1060 = 0x2
0xc73: S[0x2] = S0
0xc74: V1061 = 0x1
0xc76: V1062 = 0x1
0xc78: V1063 = 0xa0
0xc7a: V1064 = SHL 0xa0 0x1
0xc7b: V1065 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7d: V1066 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xc7e: V1067 = 0x0
0xc82: M[0x0] = V1066
0xc83: V1068 = 0x20
0xc87: M[0x20] = 0x0
0xc88: V1069 = 0x40
0xc8b: V1070 = SHA3 0x0 0x40
0xc8c: V1071 = S[V1070]
0xc8d: V1072 = 0xc96
0xc92: V1073 = 0xb9b
0xc95: JUMP 0xb9b
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0xc96, V1071, S1]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xc96, V1071, S1]

================================

Block 0xc96
[0xc96:0xceb]
---
Predecessors: [0xbf5]
Successors: [0x42f, 0x59a]
---
0xc96 JUMPDEST
0xc97 PUSH1 0x1
0xc99 PUSH1 0x1
0xc9b PUSH1 0xa0
0xc9d SHL
0xc9e SUB
0xc9f DUP4
0xca0 AND
0xca1 PUSH1 0x0
0xca3 DUP2
0xca4 DUP2
0xca5 MSTORE
0xca6 PUSH1 0x20
0xca8 DUP2
0xca9 DUP2
0xcaa MSTORE
0xcab PUSH1 0x40
0xcad DUP1
0xcae DUP4
0xcaf SHA3
0xcb0 SWAP5
0xcb1 SWAP1
0xcb2 SWAP5
0xcb3 SSTORE
0xcb4 DUP4
0xcb5 MLOAD
0xcb6 DUP6
0xcb7 DUP2
0xcb8 MSTORE
0xcb9 SWAP4
0xcba MLOAD
0xcbb SWAP3
0xcbc SWAP4
0xcbd SWAP2
0xcbe SWAP3
0xcbf PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xce0 SWAP3
0xce1 DUP2
0xce2 SWAP1
0xce3 SUB
0xce4 SWAP1
0xce5 SWAP2
0xce6 ADD
0xce7 SWAP1
0xce8 LOG3
0xce9 POP
0xcea POP
0xceb JUMP
---
0xc96: JUMPDEST 
0xc97: V1074 = 0x1
0xc99: V1075 = 0x1
0xc9b: V1076 = 0xa0
0xc9d: V1077 = SHL 0xa0 0x1
0xc9e: V1078 = SUB 0x10000000000000000000000000000000000000000 0x1
0xca0: V1079 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xca1: V1080 = 0x0
0xca5: M[0x0] = V1079
0xca6: V1081 = 0x20
0xcaa: M[0x20] = 0x0
0xcab: V1082 = 0x40
0xcaf: V1083 = SHA3 0x0 0x40
0xcb3: S[V1083] = S0
0xcb5: V1084 = M[0x40]
0xcb8: M[V1084] = S1
0xcba: V1085 = M[0x40]
0xcbf: V1086 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xce3: V1087 = SUB V1084 V1085
0xce6: V1088 = ADD 0x20 V1087
0xce8: LOG V1085 V1088 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef 0x0 V1079
0xceb: JUMP S3
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, S4]

================================

Block 0xcec
[0xcec:0xcf0]
---
Predecessors: [0xa33, 0xc57]
Successors: [0xa3e, 0xc63]
---
0xcec JUMPDEST
0xced POP
0xcee POP
0xcef POP
0xcf0 JUMP
---
0xcec: JUMPDEST 
0xcf0: JUMP {0xa3e, 0xc63}
---
Entry stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0xa3e, 0xc63}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0xcf1
[0xcf1:0xe4d]
---
Predecessors: []
Successors: []
---
0xcf1 INVALID
0xcf2 GASLIMIT
0xcf3 MSTORE
0xcf4 NUMBER
0xcf5 ORIGIN
0xcf6 ADDRESS
0xcf7 GASPRICE
0xcf8 SHA3
0xcf9 PUSH21 0x72616e7366657220746f20746865207a65726f2061
0xd0f PUSH5 0x6472657373
0xd15 MISSING 0x4f
0xd16 PUSH24 0x6e61626c653a206e6577206f776e65722069732074686520
0xd2f PUSH27 0x65726f206164647265737345524332303a20617070726f76652074
0xd4b PUSH16 0x20746865207a65726f20616464726573
0xd5c PUSH20 0x45524332303a207472616e7366657220616d6f75
0xd71 PUSH15 0x7420657863656564732062616c616e
0xd81 PUSH4 0x65455243
0xd86 ORIGIN
0xd87 ADDRESS
0xd88 GASPRICE
0xd89 SHA3
0xd8a PUSH21 0x72616e7366657220616d6f756e7420657863656564
0xda0 PUSH20 0x20616c6c6f77616e636545524332303a20747261
0xdb5 PUSH15 0x736665722066726f6d20746865207a
0xdc5 PUSH6 0x726f20616464
0xdcc PUSH19 0x65737345524332303a20617070726f76652066
0xde0 PUSH19 0x6f6d20746865207a65726f2061646472657373
0xdf4 GASLIMIT
0xdf5 MSTORE
0xdf6 NUMBER
0xdf7 ORIGIN
0xdf8 ADDRESS
0xdf9 GASPRICE
0xdfa SHA3
0xdfb PUSH5 0x6563726561
0xe01 PUSH20 0x656420616c6c6f77616e63652062656c6f77207a
0xe16 PUSH6 0x726fa2646970
0xe1d PUSH7 0x735822122028d8
0xe25 DUP1
0xe26 MISSING 0x4b
0xe27 MISSING 0xd5
0xe28 MISSING 0xe9
0xe29 MISSING 0xc6
0xe2a PUSH22 0x8ba3bb1e2a5b7098c8bd0fba4cf9966e2c8f0ae0cc9d
0xe41 DUP9
0xe42 MISSING 0x4b
0xe43 PUSH5 0x736f6c6343
0xe49 STOP
0xe4a MOD
0xe4b MISSING 0xc
0xe4c STOP
0xe4d CALLER
---
0xcf1: INVALID 
0xcf2: V1089 = GASLIMIT
0xcf3: M[V1089] = S0
0xcf4: V1090 = NUMBER
0xcf5: V1091 = ORIGIN
0xcf6: V1092 = ADDRESS
0xcf7: V1093 = GASPRICE
0xcf8: V1094 = SHA3 V1093 V1092
0xcf9: V1095 = 0x72616e7366657220746f20746865207a65726f2061
0xd0f: V1096 = 0x6472657373
0xd15: MISSING 0x4f
0xd16: V1097 = 0x6e61626c653a206e6577206f776e65722069732074686520
0xd2f: V1098 = 0x65726f206164647265737345524332303a20617070726f76652074
0xd4b: V1099 = 0x20746865207a65726f20616464726573
0xd5c: V1100 = 0x45524332303a207472616e7366657220616d6f75
0xd71: V1101 = 0x7420657863656564732062616c616e
0xd81: V1102 = 0x65455243
0xd86: V1103 = ORIGIN
0xd87: V1104 = ADDRESS
0xd88: V1105 = GASPRICE
0xd89: V1106 = SHA3 V1105 V1104
0xd8a: V1107 = 0x72616e7366657220616d6f756e7420657863656564
0xda0: V1108 = 0x20616c6c6f77616e636545524332303a20747261
0xdb5: V1109 = 0x736665722066726f6d20746865207a
0xdc5: V1110 = 0x726f20616464
0xdcc: V1111 = 0x65737345524332303a20617070726f76652066
0xde0: V1112 = 0x6f6d20746865207a65726f2061646472657373
0xdf4: V1113 = GASLIMIT
0xdf5: M[V1113] = 0x6f6d20746865207a65726f2061646472657373
0xdf6: V1114 = NUMBER
0xdf7: V1115 = ORIGIN
0xdf8: V1116 = ADDRESS
0xdf9: V1117 = GASPRICE
0xdfa: V1118 = SHA3 V1117 V1116
0xdfb: V1119 = 0x6563726561
0xe01: V1120 = 0x656420616c6c6f77616e63652062656c6f77207a
0xe16: V1121 = 0x726fa2646970
0xe1d: V1122 = 0x735822122028d8
0xe26: MISSING 0x4b
0xe27: MISSING 0xd5
0xe28: MISSING 0xe9
0xe29: MISSING 0xc6
0xe2a: V1123 = 0x8ba3bb1e2a5b7098c8bd0fba4cf9966e2c8f0ae0cc9d
0xe42: MISSING 0x4b
0xe43: V1124 = 0x736f6c6343
0xe49: STOP 
0xe4a: V1125 = MOD S0 S1
0xe4b: MISSING 0xc
0xe4c: STOP 
0xe4d: V1126 = CALLER
---
Entry stack: []
Stack pops: 0
Stack additions: [0x6472657373, 0x72616e7366657220746f20746865207a65726f2061, V1094, V1091, V1090, 0x735822122028d8, 0x735822122028d8, 0x726fa2646970, 0x656420616c6c6f77616e63652062656c6f77207a, 0x6563726561, V1118, V1115, V1114, 0x65737345524332303a20617070726f76652066, 0x726f20616464, 0x736665722066726f6d20746865207a, 0x20616c6c6f77616e636545524332303a20747261, 0x72616e7366657220616d6f756e7420657863656564, V1106, V1103, 0x65455243, 0x7420657863656564732062616c616e, 0x45524332303a207472616e7366657220616d6f75, 0x20746865207a65726f20616464726573, 0x65726f206164647265737345524332303a20617070726f76652074, 0x6e61626c653a206e6577206f776e65722069732074686520, S7, 0x8ba3bb1e2a5b7098c8bd0fba4cf9966e2c8f0ae0cc9d, S0, S1, S2, S3, S4, S5, S6, S7, 0x736f6c6343, V1125, V1126]
Exit stack: []

================================

Function 0:
Private function
Entry block: 0xb9b
Exit block: 0xbf5
Body: 0xb9b, 0xbf5

Function 1:
Private function
Entry block: 0x8b9
Exit block: 0x8b9
Body: 0x44b, 0x457, 0x495, 0x4ec, 0x729, 0x8b9, 0xa7b, 0xaaa, 0xb04, 0xb93, 0xb9b, 0xbf5, 0xc70

