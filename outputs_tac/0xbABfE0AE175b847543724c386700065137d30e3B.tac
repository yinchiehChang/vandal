Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x11bcd830
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x11bcd830
0x3c: V13 = EQ 0x11bcd830 V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x98]
---
0x41 DUP1
0x42 PUSH4 0x3d79d1c8
0x47 EQ
0x48 PUSH2 0x98
0x4b JUMPI
---
0x42: V15 = 0x3d79d1c8
0x47: V16 = EQ 0x3d79d1c8 V11
0x48: V17 = 0x98
0x4b: JUMPI 0x98 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xc1]
---
0x4c DUP1
0x4d PUSH4 0x9ffa0711
0x52 EQ
0x53 PUSH2 0xc1
0x56 JUMPI
---
0x4d: V18 = 0x9ffa0711
0x52: V19 = EQ 0x9ffa0711 V11
0x53: V20 = 0xc1
0x56: JUMPI 0xc1 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xe4]
---
0x57 DUP1
0x58 PUSH4 0xbf8869b5
0x5d EQ
0x5e PUSH2 0xe4
0x61 JUMPI
---
0x58: V21 = 0xbf8869b5
0x5d: V22 = EQ 0xbf8869b5 V11
0x5e: V23 = 0xe4
0x61: JUMPI 0xe4 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x10d]
---
0x62 DUP1
0x63 PUSH4 0xed21248c
0x68 EQ
0x69 PUSH2 0x10d
0x6c JUMPI
---
0x63: V24 = 0xed21248c
0x68: V25 = EQ 0xed21248c V11
0x69: V26 = 0x10d
0x6c: JUMPI 0x10d V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x75]
---
Predecessors: [0xd]
Successors: [0x76, 0x7a]
---
0x6f JUMPDEST
0x70 CALLVALUE
0x71 ISZERO
0x72 PUSH2 0x7a
0x75 JUMPI
---
0x6f: JUMPDEST 
0x70: V27 = CALLVALUE
0x71: V28 = ISZERO V27
0x72: V29 = 0x7a
0x75: JUMPI 0x7a V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x76
[0x76:0x79]
---
Predecessors: [0x6f]
Successors: []
---
0x76 PUSH1 0x0
0x78 DUP1
0x79 REVERT
---
0x76: V30 = 0x0
0x79: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x81]
---
Predecessors: [0x6f]
Successors: [0x117]
---
0x7a JUMPDEST
0x7b PUSH2 0x82
0x7e PUSH2 0x117
0x81 JUMP
---
0x7a: JUMPDEST 
0x7b: V31 = 0x82
0x7e: V32 = 0x117
0x81: JUMP 0x117
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V11, 0x82]

================================

Block 0x82
[0x82:0x97]
---
Predecessors: [0x117]
Successors: []
---
0x82 JUMPDEST
0x83 PUSH1 0x40
0x85 MLOAD
0x86 DUP1
0x87 DUP3
0x88 DUP2
0x89 MSTORE
0x8a PUSH1 0x20
0x8c ADD
0x8d SWAP2
0x8e POP
0x8f POP
0x90 PUSH1 0x40
0x92 MLOAD
0x93 DUP1
0x94 SWAP2
0x95 SUB
0x96 SWAP1
0x97 RETURN
---
0x82: JUMPDEST 
0x83: V33 = 0x40
0x85: V34 = M[0x40]
0x89: M[V34] = V79
0x8a: V35 = 0x20
0x8c: V36 = ADD 0x20 V34
0x90: V37 = 0x40
0x92: V38 = M[0x40]
0x95: V39 = SUB V36 V38
0x97: RETURN V38 V39
---
Entry stack: [V11, 0x82, V79]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0x98
[0x98:0x9e]
---
Predecessors: [0x41]
Successors: [0x9f, 0xa3]
---
0x98 JUMPDEST
0x99 CALLVALUE
0x9a ISZERO
0x9b PUSH2 0xa3
0x9e JUMPI
---
0x98: JUMPDEST 
0x99: V40 = CALLVALUE
0x9a: V41 = ISZERO V40
0x9b: V42 = 0xa3
0x9e: JUMPI 0xa3 V41
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9f
[0x9f:0xa2]
---
Predecessors: [0x98]
Successors: []
---
0x9f PUSH1 0x0
0xa1 DUP1
0xa2 REVERT
---
0x9f: V43 = 0x0
0xa2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa3
[0xa3:0xaa]
---
Predecessors: [0x98]
Successors: [0x11d]
---
0xa3 JUMPDEST
0xa4 PUSH2 0xab
0xa7 PUSH2 0x11d
0xaa JUMP
---
0xa3: JUMPDEST 
0xa4: V44 = 0xab
0xa7: V45 = 0x11d
0xaa: JUMP 0x11d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xab]
Exit stack: [V11, 0xab]

================================

Block 0xab
[0xab:0xc0]
---
Predecessors: [0x11d]
Successors: []
---
0xab JUMPDEST
0xac PUSH1 0x40
0xae MLOAD
0xaf DUP1
0xb0 DUP3
0xb1 DUP2
0xb2 MSTORE
0xb3 PUSH1 0x20
0xb5 ADD
0xb6 SWAP2
0xb7 POP
0xb8 POP
0xb9 PUSH1 0x40
0xbb MLOAD
0xbc DUP1
0xbd SWAP2
0xbe SUB
0xbf SWAP1
0xc0 RETURN
---
0xab: JUMPDEST 
0xac: V46 = 0x40
0xae: V47 = M[0x40]
0xb2: M[V47] = V84
0xb3: V48 = 0x20
0xb5: V49 = ADD 0x20 V47
0xb9: V50 = 0x40
0xbb: V51 = M[0x40]
0xbe: V52 = SUB V49 V51
0xc0: RETURN V51 V52
---
Entry stack: [V11, V84]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0xc1
[0xc1:0xc7]
---
Predecessors: [0x4c]
Successors: [0xc8, 0xcc]
---
0xc1 JUMPDEST
0xc2 CALLVALUE
0xc3 ISZERO
0xc4 PUSH2 0xcc
0xc7 JUMPI
---
0xc1: JUMPDEST 
0xc2: V53 = CALLVALUE
0xc3: V54 = ISZERO V53
0xc4: V55 = 0xcc
0xc7: JUMPI 0xcc V54
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc8
[0xc8:0xcb]
---
Predecessors: [0xc1]
Successors: []
---
0xc8 PUSH1 0x0
0xca DUP1
0xcb REVERT
---
0xc8: V56 = 0x0
0xcb: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcc
[0xcc:0xe1]
---
Predecessors: [0xc1]
Successors: [0x13c]
---
0xcc JUMPDEST
0xcd PUSH2 0xe2
0xd0 PUSH1 0x4
0xd2 DUP1
0xd3 DUP1
0xd4 CALLDATALOAD
0xd5 SWAP1
0xd6 PUSH1 0x20
0xd8 ADD
0xd9 SWAP1
0xda SWAP2
0xdb SWAP1
0xdc POP
0xdd POP
0xde PUSH2 0x13c
0xe1 JUMP
---
0xcc: JUMPDEST 
0xcd: V57 = 0xe2
0xd0: V58 = 0x4
0xd4: V59 = CALLDATALOAD 0x4
0xd6: V60 = 0x20
0xd8: V61 = ADD 0x20 0x4
0xde: V62 = 0x13c
0xe1: JUMP 0x13c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe2, V59]
Exit stack: [V11, 0xe2, V59]

================================

Block 0xe2
[0xe2:0xe3]
---
Predecessors: [0x317]
Successors: []
---
0xe2 JUMPDEST
0xe3 STOP
---
0xe2: JUMPDEST 
0xe3: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe4
[0xe4:0xea]
---
Predecessors: [0x57]
Successors: [0xeb, 0xef]
---
0xe4 JUMPDEST
0xe5 CALLVALUE
0xe6 ISZERO
0xe7 PUSH2 0xef
0xea JUMPI
---
0xe4: JUMPDEST 
0xe5: V63 = CALLVALUE
0xe6: V64 = ISZERO V63
0xe7: V65 = 0xef
0xea: JUMPI 0xef V64
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0xe4]
Successors: []
---
0xeb PUSH1 0x0
0xed DUP1
0xee REVERT
---
0xeb: V66 = 0x0
0xee: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xef
[0xef:0xf6]
---
Predecessors: [0xe4]
Successors: [0x31a]
---
0xef JUMPDEST
0xf0 PUSH2 0xf7
0xf3 PUSH2 0x31a
0xf6 JUMP
---
0xef: JUMPDEST 
0xf0: V67 = 0xf7
0xf3: V68 = 0x31a
0xf6: JUMP 0x31a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xf7]
Exit stack: [V11, 0xf7]

================================

Block 0xf7
[0xf7:0x10c]
---
Predecessors: [0x31a]
Successors: []
---
0xf7 JUMPDEST
0xf8 PUSH1 0x40
0xfa MLOAD
0xfb DUP1
0xfc DUP3
0xfd DUP2
0xfe MSTORE
0xff PUSH1 0x20
0x101 ADD
0x102 SWAP2
0x103 POP
0x104 POP
0x105 PUSH1 0x40
0x107 MLOAD
0x108 DUP1
0x109 SWAP2
0x10a SUB
0x10b SWAP1
0x10c RETURN
---
0xf7: JUMPDEST 
0xf8: V69 = 0x40
0xfa: V70 = M[0x40]
0xfe: M[V70] = V200
0xff: V71 = 0x20
0x101: V72 = ADD 0x20 V70
0x105: V73 = 0x40
0x107: V74 = M[0x40]
0x10a: V75 = SUB V72 V74
0x10c: RETURN V74 V75
---
Entry stack: [V11, V200]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x10d
[0x10d:0x114]
---
Predecessors: [0x62]
Successors: [0x360]
---
0x10d JUMPDEST
0x10e PUSH2 0x115
0x111 PUSH2 0x360
0x114 JUMP
---
0x10d: JUMPDEST 
0x10e: V76 = 0x115
0x111: V77 = 0x360
0x114: JUMP 0x360
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x115]
Exit stack: [V11, 0x115]

================================

Block 0x115
[0x115:0x116]
---
Predecessors: [0x4c9]
Successors: []
---
0x115 JUMPDEST
0x116 STOP
---
0x115: JUMPDEST 
0x116: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x117
[0x117:0x11c]
---
Predecessors: [0x7a]
Successors: [0x82]
---
0x117 JUMPDEST
0x118 PUSH1 0x1
0x11a SLOAD
0x11b DUP2
0x11c JUMP
---
0x117: JUMPDEST 
0x118: V78 = 0x1
0x11a: V79 = S[0x1]
0x11c: JUMP 0x82
---
Entry stack: [V11, 0x82]
Stack pops: 1
Stack additions: [S0, V79]
Exit stack: [V11, 0x82, V79]

================================

Block 0x11d
[0x11d:0x13b]
---
Predecessors: [0xa3]
Successors: [0xab]
---
0x11d JUMPDEST
0x11e PUSH1 0x0
0x120 ADDRESS
0x121 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x136 AND
0x137 BALANCE
0x138 SWAP1
0x139 POP
0x13a SWAP1
0x13b JUMP
---
0x11d: JUMPDEST 
0x11e: V80 = 0x0
0x120: V81 = ADDRESS
0x121: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x136: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x137: V84 = BALANCE V83
0x13b: JUMP 0xab
---
Entry stack: [V11, 0xab]
Stack pops: 1
Stack additions: [V84]
Exit stack: [V11, V84]

================================

Block 0x13c
[0x13c:0x183]
---
Predecessors: [0xcc]
Successors: [0x184, 0x317]
---
0x13c JUMPDEST
0x13d PUSH1 0x0
0x13f DUP1
0x140 CALLER
0x141 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x156 AND
0x157 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16c AND
0x16d DUP2
0x16e MSTORE
0x16f PUSH1 0x20
0x171 ADD
0x172 SWAP1
0x173 DUP2
0x174 MSTORE
0x175 PUSH1 0x20
0x177 ADD
0x178 PUSH1 0x0
0x17a SHA3
0x17b SLOAD
0x17c DUP2
0x17d GT
0x17e ISZERO
0x17f ISZERO
0x180 PUSH2 0x317
0x183 JUMPI
---
0x13c: JUMPDEST 
0x13d: V85 = 0x0
0x140: V86 = CALLER
0x141: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x156: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x157: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x16c: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x16e: M[0x0] = V90
0x16f: V91 = 0x20
0x171: V92 = ADD 0x20 0x0
0x174: M[0x20] = 0x0
0x175: V93 = 0x20
0x177: V94 = ADD 0x20 0x20
0x178: V95 = 0x0
0x17a: V96 = SHA3 0x0 0x40
0x17b: V97 = S[V96]
0x17d: V98 = GT V59 V97
0x17e: V99 = ISZERO V98
0x17f: V100 = ISZERO V99
0x180: V101 = 0x317
0x183: JUMPI 0x317 V100
---
Entry stack: [V11, 0xe2, V59]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe2, V59]

================================

Block 0x184
[0x184:0x1b8]
---
Predecessors: [0x13c]
Successors: [0x1b9, 0x316]
---
0x184 CALLER
0x185 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19a AND
0x19b DUP2
0x19c PUSH1 0x40
0x19e MLOAD
0x19f PUSH1 0x0
0x1a1 PUSH1 0x40
0x1a3 MLOAD
0x1a4 DUP1
0x1a5 DUP4
0x1a6 SUB
0x1a7 DUP2
0x1a8 DUP6
0x1a9 DUP8
0x1aa PUSH2 0x8796
0x1ad GAS
0x1ae SUB
0x1af CALL
0x1b0 SWAP3
0x1b1 POP
0x1b2 POP
0x1b3 POP
0x1b4 ISZERO
0x1b5 PUSH2 0x316
0x1b8 JUMPI
---
0x184: V102 = CALLER
0x185: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x19a: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x19c: V105 = 0x40
0x19e: V106 = M[0x40]
0x19f: V107 = 0x0
0x1a1: V108 = 0x40
0x1a3: V109 = M[0x40]
0x1a6: V110 = SUB V106 V109
0x1aa: V111 = 0x8796
0x1ad: V112 = GAS
0x1ae: V113 = SUB V112 0x8796
0x1af: V114 = CALL V113 V104 V59 V109 V110 V109 0x0
0x1b4: V115 = ISZERO V114
0x1b5: V116 = 0x316
0x1b8: JUMPI 0x316 V115
---
Entry stack: [V11, 0xe2, V59]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xe2, V59]

================================

Block 0x1b9
[0x1b9:0x2fc]
---
Predecessors: [0x184]
Successors: [0x2fd, 0x301]
---
0x1b9 DUP1
0x1ba PUSH1 0x0
0x1bc DUP1
0x1bd CALLER
0x1be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d3 AND
0x1d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e9 AND
0x1ea DUP2
0x1eb MSTORE
0x1ec PUSH1 0x20
0x1ee ADD
0x1ef SWAP1
0x1f0 DUP2
0x1f1 MSTORE
0x1f2 PUSH1 0x20
0x1f4 ADD
0x1f5 PUSH1 0x0
0x1f7 SHA3
0x1f8 PUSH1 0x0
0x1fa DUP3
0x1fb DUP3
0x1fc SLOAD
0x1fd SUB
0x1fe SWAP3
0x1ff POP
0x200 POP
0x201 DUP2
0x202 SWAP1
0x203 SSTORE
0x204 POP
0x205 PUSH1 0x2
0x207 PUSH1 0x0
0x209 SWAP1
0x20a SLOAD
0x20b SWAP1
0x20c PUSH2 0x100
0x20f EXP
0x210 SWAP1
0x211 DIV
0x212 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x227 AND
0x228 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23d AND
0x23e PUSH4 0x4c2f04a4
0x243 CALLER
0x244 DUP4
0x245 PUSH1 0x40
0x247 MLOAD
0x248 DUP4
0x249 PUSH4 0xffffffff
0x24e AND
0x24f PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x26d MUL
0x26e DUP2
0x26f MSTORE
0x270 PUSH1 0x4
0x272 ADD
0x273 DUP1
0x274 DUP4
0x275 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28a AND
0x28b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a0 AND
0x2a1 DUP2
0x2a2 MSTORE
0x2a3 PUSH1 0x20
0x2a5 ADD
0x2a6 DUP3
0x2a7 DUP2
0x2a8 MSTORE
0x2a9 PUSH1 0x20
0x2ab ADD
0x2ac DUP1
0x2ad PUSH1 0x20
0x2af ADD
0x2b0 DUP3
0x2b1 DUP2
0x2b2 SUB
0x2b3 DUP3
0x2b4 MSTORE
0x2b5 PUSH1 0x7
0x2b7 DUP2
0x2b8 MSTORE
0x2b9 PUSH1 0x20
0x2bb ADD
0x2bc DUP1
0x2bd PUSH32 0x436173684f757400000000000000000000000000000000000000000000000000
0x2de DUP2
0x2df MSTORE
0x2e0 POP
0x2e1 PUSH1 0x20
0x2e3 ADD
0x2e4 SWAP4
0x2e5 POP
0x2e6 POP
0x2e7 POP
0x2e8 POP
0x2e9 PUSH1 0x0
0x2eb PUSH1 0x40
0x2ed MLOAD
0x2ee DUP1
0x2ef DUP4
0x2f0 SUB
0x2f1 DUP2
0x2f2 PUSH1 0x0
0x2f4 DUP8
0x2f5 DUP1
0x2f6 EXTCODESIZE
0x2f7 ISZERO
0x2f8 ISZERO
0x2f9 PUSH2 0x301
0x2fc JUMPI
---
0x1ba: V117 = 0x0
0x1bd: V118 = CALLER
0x1be: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d3: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x1d4: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e9: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x1eb: M[0x0] = V122
0x1ec: V123 = 0x20
0x1ee: V124 = ADD 0x20 0x0
0x1f1: M[0x20] = 0x0
0x1f2: V125 = 0x20
0x1f4: V126 = ADD 0x20 0x20
0x1f5: V127 = 0x0
0x1f7: V128 = SHA3 0x0 0x40
0x1f8: V129 = 0x0
0x1fc: V130 = S[V128]
0x1fd: V131 = SUB V130 V59
0x203: S[V128] = V131
0x205: V132 = 0x2
0x207: V133 = 0x0
0x20a: V134 = S[0x2]
0x20c: V135 = 0x100
0x20f: V136 = EXP 0x100 0x0
0x211: V137 = DIV V134 0x1
0x212: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x227: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V137
0x228: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x23d: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x23e: V142 = 0x4c2f04a4
0x243: V143 = CALLER
0x245: V144 = 0x40
0x247: V145 = M[0x40]
0x249: V146 = 0xffffffff
0x24e: V147 = AND 0xffffffff 0x4c2f04a4
0x24f: V148 = 0x100000000000000000000000000000000000000000000000000000000
0x26d: V149 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4c2f04a4
0x26f: M[V145] = 0x4c2f04a400000000000000000000000000000000000000000000000000000000
0x270: V150 = 0x4
0x272: V151 = ADD 0x4 V145
0x275: V152 = 0xffffffffffffffffffffffffffffffffffffffff
0x28a: V153 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x28b: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a0: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x2a2: M[V151] = V155
0x2a3: V156 = 0x20
0x2a5: V157 = ADD 0x20 V151
0x2a8: M[V157] = V59
0x2a9: V158 = 0x20
0x2ab: V159 = ADD 0x20 V157
0x2ad: V160 = 0x20
0x2af: V161 = ADD 0x20 V159
0x2b2: V162 = SUB V161 V151
0x2b4: M[V159] = V162
0x2b5: V163 = 0x7
0x2b8: M[V161] = 0x7
0x2b9: V164 = 0x20
0x2bb: V165 = ADD 0x20 V161
0x2bd: V166 = 0x436173684f757400000000000000000000000000000000000000000000000000
0x2df: M[V165] = 0x436173684f757400000000000000000000000000000000000000000000000000
0x2e1: V167 = 0x20
0x2e3: V168 = ADD 0x20 V165
0x2e9: V169 = 0x0
0x2eb: V170 = 0x40
0x2ed: V171 = M[0x40]
0x2f0: V172 = SUB V168 V171
0x2f2: V173 = 0x0
0x2f6: V174 = EXTCODESIZE V141
0x2f7: V175 = ISZERO V174
0x2f8: V176 = ISZERO V175
0x2f9: V177 = 0x301
0x2fc: JUMPI 0x301 V176
---
Entry stack: [V11, 0xe2, V59]
Stack pops: 1
Stack additions: [S0, V141, 0x4c2f04a4, V168, 0x0, V171, V172, V171, 0x0, V141]
Exit stack: [V11, 0xe2, V59, V141, 0x4c2f04a4, V168, 0x0, V171, V172, V171, 0x0, V141]

================================

Block 0x2fd
[0x2fd:0x300]
---
Predecessors: [0x1b9]
Successors: []
---
0x2fd PUSH1 0x0
0x2ff DUP1
0x300 REVERT
---
0x2fd: V178 = 0x0
0x300: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe2, V59, V141, 0x4c2f04a4, V168, 0x0, V171, V172, V171, 0x0, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe2, V59, V141, 0x4c2f04a4, V168, 0x0, V171, V172, V171, 0x0, V141]

================================

Block 0x301
[0x301:0x30d]
---
Predecessors: [0x1b9]
Successors: [0x30e, 0x312]
---
0x301 JUMPDEST
0x302 PUSH2 0x2c6
0x305 GAS
0x306 SUB
0x307 CALL
0x308 ISZERO
0x309 ISZERO
0x30a PUSH2 0x312
0x30d JUMPI
---
0x301: JUMPDEST 
0x302: V179 = 0x2c6
0x305: V180 = GAS
0x306: V181 = SUB V180 0x2c6
0x307: V182 = CALL V181 V141 0x0 V171 V172 V171 0x0
0x308: V183 = ISZERO V182
0x309: V184 = ISZERO V183
0x30a: V185 = 0x312
0x30d: JUMPI 0x312 V184
---
Entry stack: [V11, 0xe2, V59, V141, 0x4c2f04a4, V168, 0x0, V171, V172, V171, 0x0, V141]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xe2, V59, V141, 0x4c2f04a4, V168]

================================

Block 0x30e
[0x30e:0x311]
---
Predecessors: [0x301]
Successors: []
---
0x30e PUSH1 0x0
0x310 DUP1
0x311 REVERT
---
0x30e: V186 = 0x0
0x311: REVERT 0x0 0x0
---
Entry stack: [V11, 0xe2, V59, V141, 0x4c2f04a4, V168]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe2, V59, V141, 0x4c2f04a4, V168]

================================

Block 0x312
[0x312:0x315]
---
Predecessors: [0x301]
Successors: [0x316]
---
0x312 JUMPDEST
0x313 POP
0x314 POP
0x315 POP
---
0x312: JUMPDEST 
---
Entry stack: [V11, 0xe2, V59, V141, 0x4c2f04a4, V168]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xe2, V59]

================================

Block 0x316
[0x316:0x316]
---
Predecessors: [0x184, 0x312]
Successors: [0x317]
---
0x316 JUMPDEST
---
0x316: JUMPDEST 
---
Entry stack: [V11, 0xe2, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xe2, V59]

================================

Block 0x317
[0x317:0x319]
---
Predecessors: [0x13c, 0x316]
Successors: [0xe2]
---
0x317 JUMPDEST
0x318 POP
0x319 JUMP
---
0x317: JUMPDEST 
0x319: JUMP 0xe2
---
Entry stack: [V11, 0xe2, V59]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x31a
[0x31a:0x35f]
---
Predecessors: [0xef]
Successors: [0xf7]
---
0x31a JUMPDEST
0x31b PUSH1 0x0
0x31d DUP1
0x31e PUSH1 0x0
0x320 CALLER
0x321 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x336 AND
0x337 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34c AND
0x34d DUP2
0x34e MSTORE
0x34f PUSH1 0x20
0x351 ADD
0x352 SWAP1
0x353 DUP2
0x354 MSTORE
0x355 PUSH1 0x20
0x357 ADD
0x358 PUSH1 0x0
0x35a SHA3
0x35b SLOAD
0x35c SWAP1
0x35d POP
0x35e SWAP1
0x35f JUMP
---
0x31a: JUMPDEST 
0x31b: V187 = 0x0
0x31e: V188 = 0x0
0x320: V189 = CALLER
0x321: V190 = 0xffffffffffffffffffffffffffffffffffffffff
0x336: V191 = AND 0xffffffffffffffffffffffffffffffffffffffff V189
0x337: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x34c: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x34e: M[0x0] = V193
0x34f: V194 = 0x20
0x351: V195 = ADD 0x20 0x0
0x354: M[0x20] = 0x0
0x355: V196 = 0x20
0x357: V197 = ADD 0x20 0x20
0x358: V198 = 0x0
0x35a: V199 = SHA3 0x0 0x40
0x35b: V200 = S[V199]
0x35f: JUMP 0xf7
---
Entry stack: [V11, 0xf7]
Stack pops: 1
Stack additions: [V200]
Exit stack: [V11, V200]

================================

Block 0x360
[0x360:0x36b]
---
Predecessors: [0x10d]
Successors: [0x36c, 0x4c9]
---
0x360 JUMPDEST
0x361 PUSH1 0x1
0x363 SLOAD
0x364 CALLVALUE
0x365 LT
0x366 ISZERO
0x367 ISZERO
0x368 PUSH2 0x4c9
0x36b JUMPI
---
0x360: JUMPDEST 
0x361: V201 = 0x1
0x363: V202 = S[0x1]
0x364: V203 = CALLVALUE
0x365: V204 = LT V203 V202
0x366: V205 = ISZERO V204
0x367: V206 = ISZERO V205
0x368: V207 = 0x4c9
0x36b: JUMPI 0x4c9 V206
---
Entry stack: [V11, 0x115]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x115]

================================

Block 0x36c
[0x36c:0x4af]
---
Predecessors: [0x360]
Successors: [0x4b0, 0x4b4]
---
0x36c CALLVALUE
0x36d PUSH1 0x0
0x36f DUP1
0x370 CALLER
0x371 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x386 AND
0x387 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39c AND
0x39d DUP2
0x39e MSTORE
0x39f PUSH1 0x20
0x3a1 ADD
0x3a2 SWAP1
0x3a3 DUP2
0x3a4 MSTORE
0x3a5 PUSH1 0x20
0x3a7 ADD
0x3a8 PUSH1 0x0
0x3aa SHA3
0x3ab PUSH1 0x0
0x3ad DUP3
0x3ae DUP3
0x3af SLOAD
0x3b0 ADD
0x3b1 SWAP3
0x3b2 POP
0x3b3 POP
0x3b4 DUP2
0x3b5 SWAP1
0x3b6 SSTORE
0x3b7 POP
0x3b8 PUSH1 0x2
0x3ba PUSH1 0x0
0x3bc SWAP1
0x3bd SLOAD
0x3be SWAP1
0x3bf PUSH2 0x100
0x3c2 EXP
0x3c3 SWAP1
0x3c4 DIV
0x3c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3da AND
0x3db PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f0 AND
0x3f1 PUSH4 0x4c2f04a4
0x3f6 CALLER
0x3f7 CALLVALUE
0x3f8 PUSH1 0x40
0x3fa MLOAD
0x3fb DUP4
0x3fc PUSH4 0xffffffff
0x401 AND
0x402 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x420 MUL
0x421 DUP2
0x422 MSTORE
0x423 PUSH1 0x4
0x425 ADD
0x426 DUP1
0x427 DUP4
0x428 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x43d AND
0x43e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x453 AND
0x454 DUP2
0x455 MSTORE
0x456 PUSH1 0x20
0x458 ADD
0x459 DUP3
0x45a DUP2
0x45b MSTORE
0x45c PUSH1 0x20
0x45e ADD
0x45f DUP1
0x460 PUSH1 0x20
0x462 ADD
0x463 DUP3
0x464 DUP2
0x465 SUB
0x466 DUP3
0x467 MSTORE
0x468 PUSH1 0x7
0x46a DUP2
0x46b MSTORE
0x46c PUSH1 0x20
0x46e ADD
0x46f DUP1
0x470 PUSH32 0x4465706f73697400000000000000000000000000000000000000000000000000
0x491 DUP2
0x492 MSTORE
0x493 POP
0x494 PUSH1 0x20
0x496 ADD
0x497 SWAP4
0x498 POP
0x499 POP
0x49a POP
0x49b POP
0x49c PUSH1 0x0
0x49e PUSH1 0x40
0x4a0 MLOAD
0x4a1 DUP1
0x4a2 DUP4
0x4a3 SUB
0x4a4 DUP2
0x4a5 PUSH1 0x0
0x4a7 DUP8
0x4a8 DUP1
0x4a9 EXTCODESIZE
0x4aa ISZERO
0x4ab ISZERO
0x4ac PUSH2 0x4b4
0x4af JUMPI
---
0x36c: V208 = CALLVALUE
0x36d: V209 = 0x0
0x370: V210 = CALLER
0x371: V211 = 0xffffffffffffffffffffffffffffffffffffffff
0x386: V212 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x387: V213 = 0xffffffffffffffffffffffffffffffffffffffff
0x39c: V214 = AND 0xffffffffffffffffffffffffffffffffffffffff V212
0x39e: M[0x0] = V214
0x39f: V215 = 0x20
0x3a1: V216 = ADD 0x20 0x0
0x3a4: M[0x20] = 0x0
0x3a5: V217 = 0x20
0x3a7: V218 = ADD 0x20 0x20
0x3a8: V219 = 0x0
0x3aa: V220 = SHA3 0x0 0x40
0x3ab: V221 = 0x0
0x3af: V222 = S[V220]
0x3b0: V223 = ADD V222 V208
0x3b6: S[V220] = V223
0x3b8: V224 = 0x2
0x3ba: V225 = 0x0
0x3bd: V226 = S[0x2]
0x3bf: V227 = 0x100
0x3c2: V228 = EXP 0x100 0x0
0x3c4: V229 = DIV V226 0x1
0x3c5: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x3da: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V229
0x3db: V232 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f0: V233 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x3f1: V234 = 0x4c2f04a4
0x3f6: V235 = CALLER
0x3f7: V236 = CALLVALUE
0x3f8: V237 = 0x40
0x3fa: V238 = M[0x40]
0x3fc: V239 = 0xffffffff
0x401: V240 = AND 0xffffffff 0x4c2f04a4
0x402: V241 = 0x100000000000000000000000000000000000000000000000000000000
0x420: V242 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4c2f04a4
0x422: M[V238] = 0x4c2f04a400000000000000000000000000000000000000000000000000000000
0x423: V243 = 0x4
0x425: V244 = ADD 0x4 V238
0x428: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x43d: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V235
0x43e: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x453: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x455: M[V244] = V248
0x456: V249 = 0x20
0x458: V250 = ADD 0x20 V244
0x45b: M[V250] = V236
0x45c: V251 = 0x20
0x45e: V252 = ADD 0x20 V250
0x460: V253 = 0x20
0x462: V254 = ADD 0x20 V252
0x465: V255 = SUB V254 V244
0x467: M[V252] = V255
0x468: V256 = 0x7
0x46b: M[V254] = 0x7
0x46c: V257 = 0x20
0x46e: V258 = ADD 0x20 V254
0x470: V259 = 0x4465706f73697400000000000000000000000000000000000000000000000000
0x492: M[V258] = 0x4465706f73697400000000000000000000000000000000000000000000000000
0x494: V260 = 0x20
0x496: V261 = ADD 0x20 V258
0x49c: V262 = 0x0
0x49e: V263 = 0x40
0x4a0: V264 = M[0x40]
0x4a3: V265 = SUB V261 V264
0x4a5: V266 = 0x0
0x4a9: V267 = EXTCODESIZE V233
0x4aa: V268 = ISZERO V267
0x4ab: V269 = ISZERO V268
0x4ac: V270 = 0x4b4
0x4af: JUMPI 0x4b4 V269
---
Entry stack: [V11, 0x115]
Stack pops: 0
Stack additions: [V233, 0x4c2f04a4, V261, 0x0, V264, V265, V264, 0x0, V233]
Exit stack: [V11, 0x115, V233, 0x4c2f04a4, V261, 0x0, V264, V265, V264, 0x0, V233]

================================

Block 0x4b0
[0x4b0:0x4b3]
---
Predecessors: [0x36c]
Successors: []
---
0x4b0 PUSH1 0x0
0x4b2 DUP1
0x4b3 REVERT
---
0x4b0: V271 = 0x0
0x4b3: REVERT 0x0 0x0
---
Entry stack: [V11, 0x115, V233, 0x4c2f04a4, V261, 0x0, V264, V265, V264, 0x0, V233]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x115, V233, 0x4c2f04a4, V261, 0x0, V264, V265, V264, 0x0, V233]

================================

Block 0x4b4
[0x4b4:0x4c0]
---
Predecessors: [0x36c]
Successors: [0x4c1, 0x4c5]
---
0x4b4 JUMPDEST
0x4b5 PUSH2 0x2c6
0x4b8 GAS
0x4b9 SUB
0x4ba CALL
0x4bb ISZERO
0x4bc ISZERO
0x4bd PUSH2 0x4c5
0x4c0 JUMPI
---
0x4b4: JUMPDEST 
0x4b5: V272 = 0x2c6
0x4b8: V273 = GAS
0x4b9: V274 = SUB V273 0x2c6
0x4ba: V275 = CALL V274 V233 0x0 V264 V265 V264 0x0
0x4bb: V276 = ISZERO V275
0x4bc: V277 = ISZERO V276
0x4bd: V278 = 0x4c5
0x4c0: JUMPI 0x4c5 V277
---
Entry stack: [V11, 0x115, V233, 0x4c2f04a4, V261, 0x0, V264, V265, V264, 0x0, V233]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x115, V233, 0x4c2f04a4, V261]

================================

Block 0x4c1
[0x4c1:0x4c4]
---
Predecessors: [0x4b4]
Successors: []
---
0x4c1 PUSH1 0x0
0x4c3 DUP1
0x4c4 REVERT
---
0x4c1: V279 = 0x0
0x4c4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x115, V233, 0x4c2f04a4, V261]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x115, V233, 0x4c2f04a4, V261]

================================

Block 0x4c5
[0x4c5:0x4c8]
---
Predecessors: [0x4b4]
Successors: [0x4c9]
---
0x4c5 JUMPDEST
0x4c6 POP
0x4c7 POP
0x4c8 POP
---
0x4c5: JUMPDEST 
---
Entry stack: [V11, 0x115, V233, 0x4c2f04a4, V261]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x115]

================================

Block 0x4c9
[0x4c9:0x4ca]
---
Predecessors: [0x360, 0x4c5]
Successors: [0x115]
---
0x4c9 JUMPDEST
0x4ca JUMP
---
0x4c9: JUMPDEST 
0x4ca: JUMP 0x115
---
Entry stack: [V11, 0x115]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4cb
[0x4cb:0x4f6]
---
Predecessors: []
Successors: []
---
0x4cb STOP
0x4cc LOG1
0x4cd PUSH6 0x627a7a723058
0x4d4 SHA3
0x4d5 MLOAD
0x4d6 SWAP9
0x4d7 PUSH30 0x64f2794ca3d6adb0a1450b3a249b1582b57ae97b0ab345f82c79343f7400
0x4f6 MISSING 0x29
---
0x4cb: STOP 
0x4cc: LOG S0 S1 S2
0x4cd: V280 = 0x627a7a723058
0x4d4: V281 = SHA3 0x627a7a723058 S3
0x4d5: V282 = M[V281]
0x4d7: V283 = 0x64f2794ca3d6adb0a1450b3a249b1582b57ae97b0ab345f82c79343f7400
0x4f6: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x64f2794ca3d6adb0a1450b3a249b1582b57ae97b0ab345f82c79343f7400, S12, S4, S5, S6, S7, S8, S9, S10, S11, V282]
Exit stack: []

================================

Function 0:
Public function signature: 0x11bcd830
Entry block: 0x6f
Exit block: 0x82
Body: 0x6f, 0x76, 0x7a, 0x82, 0x117

Function 1:
Public function signature: 0x3d79d1c8
Entry block: 0x98
Exit block: 0xab
Body: 0x98, 0x9f, 0xa3, 0xab, 0x11d

Function 2:
Public function signature: 0x9ffa0711
Entry block: 0xc1
Exit block: 0x30e
Body: 0xc1, 0xc8, 0xcc, 0xe2, 0x13c, 0x184, 0x1b9, 0x2fd, 0x301, 0x30e, 0x312, 0x316, 0x317

Function 3:
Public function signature: 0xbf8869b5
Entry block: 0xe4
Exit block: 0xf7
Body: 0xe4, 0xeb, 0xef, 0xf7, 0x31a

Function 4:
Public function signature: 0xed21248c
Entry block: 0x10d
Exit block: 0x4c1
Body: 0x10d, 0x115, 0x360, 0x36c, 0x4b0, 0x4b4, 0x4c1, 0x4c5, 0x4c9

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

