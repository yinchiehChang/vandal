Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x8a]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x8a
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x8a
0xc: JUMPI 0x8a V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x8f]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x144fa6d7
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x8f
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x144fa6d7
0x22: V15 = EQ V13 0x144fa6d7
0x23: V16 = 0x8f
0x26: JUMPI 0x8f V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xb0]
---
0x27 DUP1
0x28 PUSH4 0x2c4e722e
0x2d EQ
0x2e PUSH2 0xb0
0x31 JUMPI
---
0x28: V17 = 0x2c4e722e
0x2d: V18 = EQ 0x2c4e722e V13
0x2e: V19 = 0xb0
0x31: JUMPI 0xb0 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xd5]
---
0x32 DUP1
0x33 PUSH4 0x34fcf437
0x38 EQ
0x39 PUSH2 0xd5
0x3c JUMPI
---
0x33: V20 = 0x34fcf437
0x38: V21 = EQ 0x34fcf437 V13
0x39: V22 = 0xd5
0x3c: JUMPI 0xd5 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xeb]
---
0x3d DUP1
0x3e PUSH4 0x48c54b9d
0x43 EQ
0x44 PUSH2 0xeb
0x47 JUMPI
---
0x3e: V23 = 0x48c54b9d
0x43: V24 = EQ 0x48c54b9d V13
0x44: V25 = 0xeb
0x47: JUMPI 0xeb V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0xfe]
---
0x48 DUP1
0x49 PUSH4 0x4e71d92d
0x4e EQ
0x4f PUSH2 0xfe
0x52 JUMPI
---
0x49: V26 = 0x4e71d92d
0x4e: V27 = EQ 0x4e71d92d V13
0x4f: V28 = 0xfe
0x52: JUMPI 0xfe V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x111]
---
0x53 DUP1
0x54 PUSH4 0x8da5cb5b
0x59 EQ
0x5a PUSH2 0x111
0x5d JUMPI
---
0x54: V29 = 0x8da5cb5b
0x59: V30 = EQ 0x8da5cb5b V13
0x5a: V31 = 0x111
0x5d: JUMPI 0x111 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x140]
---
0x5e DUP1
0x5f PUSH4 0xa6f2ae3a
0x64 EQ
0x65 PUSH2 0x140
0x68 JUMPI
---
0x5f: V32 = 0xa6f2ae3a
0x64: V33 = EQ 0xa6f2ae3a V13
0x65: V34 = 0x140
0x68: JUMPI 0x140 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x148]
---
0x69 DUP1
0x6a PUSH4 0xb95c2740
0x6f EQ
0x70 PUSH2 0x148
0x73 JUMPI
---
0x6a: V35 = 0xb95c2740
0x6f: V36 = EQ 0xb95c2740 V13
0x70: V37 = 0x148
0x73: JUMPI 0x148 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x19c]
---
0x74 DUP1
0x75 PUSH4 0xf2fde38b
0x7a EQ
0x7b PUSH2 0x19c
0x7e JUMPI
---
0x75: V38 = 0xf2fde38b
0x7a: V39 = EQ 0xf2fde38b V13
0x7b: V40 = 0x19c
0x7e: JUMPI 0x19c V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x1bb]
---
0x7f DUP1
0x80 PUSH4 0xfc0c546a
0x85 EQ
0x86 PUSH2 0x1bb
0x89 JUMPI
---
0x80: V41 = 0xfc0c546a
0x85: V42 = EQ 0xfc0c546a V13
0x86: V43 = 0x1bb
0x89: JUMPI 0x1bb V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x8e]
---
Predecessors: [0x0, 0x7f]
Successors: []
---
0x8a JUMPDEST
0x8b PUSH1 0x0
0x8d DUP1
0x8e REVERT
---
0x8a: JUMPDEST 
0x8b: V44 = 0x0
0x8e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x8f
[0x8f:0x95]
---
Predecessors: [0xd]
Successors: [0x96, 0x9a]
---
0x8f JUMPDEST
0x90 CALLVALUE
0x91 ISZERO
0x92 PUSH2 0x9a
0x95 JUMPI
---
0x8f: JUMPDEST 
0x90: V45 = CALLVALUE
0x91: V46 = ISZERO V45
0x92: V47 = 0x9a
0x95: JUMPI 0x9a V46
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x96
[0x96:0x99]
---
Predecessors: [0x8f]
Successors: []
---
0x96 PUSH1 0x0
0x98 DUP1
0x99 REVERT
---
0x96: V48 = 0x0
0x99: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x9a
[0x9a:0xad]
---
Predecessors: [0x8f]
Successors: [0x1ce]
---
0x9a JUMPDEST
0x9b PUSH2 0xae
0x9e PUSH1 0x1
0xa0 PUSH1 0xa0
0xa2 PUSH1 0x2
0xa4 EXP
0xa5 SUB
0xa6 PUSH1 0x4
0xa8 CALLDATALOAD
0xa9 AND
0xaa PUSH2 0x1ce
0xad JUMP
---
0x9a: JUMPDEST 
0x9b: V49 = 0xae
0x9e: V50 = 0x1
0xa0: V51 = 0xa0
0xa2: V52 = 0x2
0xa4: V53 = EXP 0x2 0xa0
0xa5: V54 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa6: V55 = 0x4
0xa8: V56 = CALLDATALOAD 0x4
0xa9: V57 = AND V56 0xffffffffffffffffffffffffffffffffffffffff
0xaa: V58 = 0x1ce
0xad: JUMP 0x1ce
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xae, V57]
Exit stack: [V13, 0xae, V57]

================================

Block 0xae
[0xae:0xaf]
---
Predecessors: [0x1fe, 0x25a, 0x35d, 0x3bd, 0x446, 0x55b, 0x590]
Successors: []
---
0xae JUMPDEST
0xaf STOP
---
0xae: JUMPDEST 
0xaf: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xb0
[0xb0:0xb6]
---
Predecessors: [0x27]
Successors: [0xb7, 0xbb]
---
0xb0 JUMPDEST
0xb1 CALLVALUE
0xb2 ISZERO
0xb3 PUSH2 0xbb
0xb6 JUMPI
---
0xb0: JUMPDEST 
0xb1: V59 = CALLVALUE
0xb2: V60 = ISZERO V59
0xb3: V61 = 0xbb
0xb6: JUMPI 0xbb V60
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xb7
[0xb7:0xba]
---
Predecessors: [0xb0]
Successors: []
---
0xb7 PUSH1 0x0
0xb9 DUP1
0xba REVERT
---
0xb7: V62 = 0x0
0xba: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xbb
[0xbb:0xc2]
---
Predecessors: [0xb0]
Successors: [0x22d]
---
0xbb JUMPDEST
0xbc PUSH2 0xc3
0xbf PUSH2 0x22d
0xc2 JUMP
---
0xbb: JUMPDEST 
0xbc: V63 = 0xc3
0xbf: V64 = 0x22d
0xc2: JUMP 0x22d
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xc3]
Exit stack: [V13, 0xc3]

================================

Block 0xc3
[0xc3:0xd4]
---
Predecessors: [0x22d]
Successors: []
---
0xc3 JUMPDEST
0xc4 PUSH1 0x40
0xc6 MLOAD
0xc7 SWAP1
0xc8 DUP2
0xc9 MSTORE
0xca PUSH1 0x20
0xcc ADD
0xcd PUSH1 0x40
0xcf MLOAD
0xd0 DUP1
0xd1 SWAP2
0xd2 SUB
0xd3 SWAP1
0xd4 RETURN
---
0xc3: JUMPDEST 
0xc4: V65 = 0x40
0xc6: V66 = M[0x40]
0xc9: M[V66] = V197
0xca: V67 = 0x20
0xcc: V68 = ADD 0x20 V66
0xcd: V69 = 0x40
0xcf: V70 = M[0x40]
0xd2: V71 = SUB V68 V70
0xd4: RETURN V70 V71
---
Entry stack: [V13, 0xc3, V197]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xc3]

================================

Block 0xd5
[0xd5:0xdb]
---
Predecessors: [0x32]
Successors: [0xdc, 0xe0]
---
0xd5 JUMPDEST
0xd6 CALLVALUE
0xd7 ISZERO
0xd8 PUSH2 0xe0
0xdb JUMPI
---
0xd5: JUMPDEST 
0xd6: V72 = CALLVALUE
0xd7: V73 = ISZERO V72
0xd8: V74 = 0xe0
0xdb: JUMPI 0xe0 V73
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xdc
[0xdc:0xdf]
---
Predecessors: [0xd5]
Successors: []
---
0xdc PUSH1 0x0
0xde DUP1
0xdf REVERT
---
0xdc: V75 = 0x0
0xdf: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0x233]
---
0xe0 JUMPDEST
0xe1 PUSH2 0xae
0xe4 PUSH1 0x4
0xe6 CALLDATALOAD
0xe7 PUSH2 0x233
0xea JUMP
---
0xe0: JUMPDEST 
0xe1: V76 = 0xae
0xe4: V77 = 0x4
0xe6: V78 = CALLDATALOAD 0x4
0xe7: V79 = 0x233
0xea: JUMP 0x233
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xae, V78]
Exit stack: [V13, 0xae, V78]

================================

Block 0xeb
[0xeb:0xf1]
---
Predecessors: [0x3d]
Successors: [0xf2, 0xf6]
---
0xeb JUMPDEST
0xec CALLVALUE
0xed ISZERO
0xee PUSH2 0xf6
0xf1 JUMPI
---
0xeb: JUMPDEST 
0xec: V80 = CALLVALUE
0xed: V81 = ISZERO V80
0xee: V82 = 0xf6
0xf1: JUMPI 0xf6 V81
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf2
[0xf2:0xf5]
---
Predecessors: [0xeb]
Successors: []
---
0xf2 PUSH1 0x0
0xf4 DUP1
0xf5 REVERT
---
0xf2: V83 = 0x0
0xf5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf6
[0xf6:0xfd]
---
Predecessors: [0xeb]
Successors: [0x25f]
---
0xf6 JUMPDEST
0xf7 PUSH2 0xae
0xfa PUSH2 0x25f
0xfd JUMP
---
0xf6: JUMPDEST 
0xf7: V84 = 0xae
0xfa: V85 = 0x25f
0xfd: JUMP 0x25f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xae]
Exit stack: [V13, 0xae]

================================

Block 0xfe
[0xfe:0x104]
---
Predecessors: [0x48]
Successors: [0x105, 0x109]
---
0xfe JUMPDEST
0xff CALLVALUE
0x100 ISZERO
0x101 PUSH2 0x109
0x104 JUMPI
---
0xfe: JUMPDEST 
0xff: V86 = CALLVALUE
0x100: V87 = ISZERO V86
0x101: V88 = 0x109
0x104: JUMPI 0x109 V87
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x105
[0x105:0x108]
---
Predecessors: [0xfe]
Successors: []
---
0x105 PUSH1 0x0
0x107 DUP1
0x108 REVERT
---
0x105: V89 = 0x0
0x108: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x109
[0x109:0x110]
---
Predecessors: [0xfe]
Successors: [0x369]
---
0x109 JUMPDEST
0x10a PUSH2 0xae
0x10d PUSH2 0x369
0x110 JUMP
---
0x109: JUMPDEST 
0x10a: V90 = 0xae
0x10d: V91 = 0x369
0x110: JUMP 0x369
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xae]
Exit stack: [V13, 0xae]

================================

Block 0x111
[0x111:0x117]
---
Predecessors: [0x53]
Successors: [0x118, 0x11c]
---
0x111 JUMPDEST
0x112 CALLVALUE
0x113 ISZERO
0x114 PUSH2 0x11c
0x117 JUMPI
---
0x111: JUMPDEST 
0x112: V92 = CALLVALUE
0x113: V93 = ISZERO V92
0x114: V94 = 0x11c
0x117: JUMPI 0x11c V93
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x118
[0x118:0x11b]
---
Predecessors: [0x111]
Successors: []
---
0x118 PUSH1 0x0
0x11a DUP1
0x11b REVERT
---
0x118: V95 = 0x0
0x11b: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x11c
[0x11c:0x123]
---
Predecessors: [0x111]
Successors: [0x3bf]
---
0x11c JUMPDEST
0x11d PUSH2 0x124
0x120 PUSH2 0x3bf
0x123 JUMP
---
0x11c: JUMPDEST 
0x11d: V96 = 0x124
0x120: V97 = 0x3bf
0x123: JUMP 0x3bf
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x124]
Exit stack: [V13, 0x124]

================================

Block 0x124
[0x124:0x13f]
---
Predecessors: [0x3bf, 0x5fb]
Successors: []
---
0x124 JUMPDEST
0x125 PUSH1 0x40
0x127 MLOAD
0x128 PUSH1 0x1
0x12a PUSH1 0xa0
0x12c PUSH1 0x2
0x12e EXP
0x12f SUB
0x130 SWAP1
0x131 SWAP2
0x132 AND
0x133 DUP2
0x134 MSTORE
0x135 PUSH1 0x20
0x137 ADD
0x138 PUSH1 0x40
0x13a MLOAD
0x13b DUP1
0x13c SWAP2
0x13d SUB
0x13e SWAP1
0x13f RETURN
---
0x124: JUMPDEST 
0x125: V98 = 0x40
0x127: V99 = M[0x40]
0x128: V100 = 0x1
0x12a: V101 = 0xa0
0x12c: V102 = 0x2
0x12e: V103 = EXP 0x2 0xa0
0x12f: V104 = SUB 0x10000000000000000000000000000000000000000 0x1
0x132: V105 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x134: M[V99] = V105
0x135: V106 = 0x20
0x137: V107 = ADD 0x20 V99
0x138: V108 = 0x40
0x13a: V109 = M[0x40]
0x13d: V110 = SUB V107 V109
0x13f: RETURN V109 V110
---
Entry stack: [V13, 0x124, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x124]

================================

Block 0x140
[0x140:0x147]
---
Predecessors: [0x5e]
Successors: [0x3ce]
---
0x140 JUMPDEST
0x141 PUSH2 0xae
0x144 PUSH2 0x3ce
0x147 JUMP
---
0x140: JUMPDEST 
0x141: V111 = 0xae
0x144: V112 = 0x3ce
0x147: JUMP 0x3ce
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xae]
Exit stack: [V13, 0xae]

================================

Block 0x148
[0x148:0x19b]
---
Predecessors: [0x69]
Successors: [0x453]
---
0x148 JUMPDEST
0x149 PUSH2 0xae
0x14c PUSH1 0x4
0x14e DUP1
0x14f CALLDATALOAD
0x150 PUSH1 0x1
0x152 PUSH1 0xa0
0x154 PUSH1 0x2
0x156 EXP
0x157 SUB
0x158 AND
0x159 SWAP1
0x15a PUSH1 0x44
0x15c PUSH1 0x24
0x15e DUP1
0x15f CALLDATALOAD
0x160 SWAP1
0x161 DUP2
0x162 ADD
0x163 SWAP1
0x164 DUP4
0x165 ADD
0x166 CALLDATALOAD
0x167 DUP1
0x168 PUSH1 0x20
0x16a PUSH1 0x1f
0x16c DUP3
0x16d ADD
0x16e DUP2
0x16f SWAP1
0x170 DIV
0x171 DUP2
0x172 MUL
0x173 ADD
0x174 PUSH1 0x40
0x176 MLOAD
0x177 SWAP1
0x178 DUP2
0x179 ADD
0x17a PUSH1 0x40
0x17c MSTORE
0x17d DUP2
0x17e DUP2
0x17f MSTORE
0x180 SWAP3
0x181 SWAP2
0x182 SWAP1
0x183 PUSH1 0x20
0x185 DUP5
0x186 ADD
0x187 DUP4
0x188 DUP4
0x189 DUP1
0x18a DUP3
0x18b DUP5
0x18c CALLDATACOPY
0x18d POP
0x18e SWAP5
0x18f SWAP7
0x190 POP
0x191 PUSH2 0x453
0x194 SWAP6
0x195 POP
0x196 POP
0x197 POP
0x198 POP
0x199 POP
0x19a POP
0x19b JUMP
---
0x148: JUMPDEST 
0x149: V113 = 0xae
0x14c: V114 = 0x4
0x14f: V115 = CALLDATALOAD 0x4
0x150: V116 = 0x1
0x152: V117 = 0xa0
0x154: V118 = 0x2
0x156: V119 = EXP 0x2 0xa0
0x157: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x158: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x15a: V122 = 0x44
0x15c: V123 = 0x24
0x15f: V124 = CALLDATALOAD 0x24
0x162: V125 = ADD V124 0x24
0x165: V126 = ADD 0x4 V124
0x166: V127 = CALLDATALOAD V126
0x168: V128 = 0x20
0x16a: V129 = 0x1f
0x16d: V130 = ADD V127 0x1f
0x170: V131 = DIV V130 0x20
0x172: V132 = MUL 0x20 V131
0x173: V133 = ADD V132 0x20
0x174: V134 = 0x40
0x176: V135 = M[0x40]
0x179: V136 = ADD V135 V133
0x17a: V137 = 0x40
0x17c: M[0x40] = V136
0x17f: M[V135] = V127
0x183: V138 = 0x20
0x186: V139 = ADD V135 0x20
0x18c: CALLDATACOPY V139 V125 V127
0x191: V140 = 0x453
0x19b: JUMP 0x453
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xae, V121, V135]
Exit stack: [V13, 0xae, V121, V135]

================================

Block 0x19c
[0x19c:0x1a2]
---
Predecessors: [0x74]
Successors: [0x1a3, 0x1a7]
---
0x19c JUMPDEST
0x19d CALLVALUE
0x19e ISZERO
0x19f PUSH2 0x1a7
0x1a2 JUMPI
---
0x19c: JUMPDEST 
0x19d: V141 = CALLVALUE
0x19e: V142 = ISZERO V141
0x19f: V143 = 0x1a7
0x1a2: JUMPI 0x1a7 V142
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a3
[0x1a3:0x1a6]
---
Predecessors: [0x19c]
Successors: []
---
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 REVERT
---
0x1a3: V144 = 0x0
0x1a6: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a7
[0x1a7:0x1ba]
---
Predecessors: [0x19c]
Successors: [0x560]
---
0x1a7 JUMPDEST
0x1a8 PUSH2 0xae
0x1ab PUSH1 0x1
0x1ad PUSH1 0xa0
0x1af PUSH1 0x2
0x1b1 EXP
0x1b2 SUB
0x1b3 PUSH1 0x4
0x1b5 CALLDATALOAD
0x1b6 AND
0x1b7 PUSH2 0x560
0x1ba JUMP
---
0x1a7: JUMPDEST 
0x1a8: V145 = 0xae
0x1ab: V146 = 0x1
0x1ad: V147 = 0xa0
0x1af: V148 = 0x2
0x1b1: V149 = EXP 0x2 0xa0
0x1b2: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b3: V151 = 0x4
0x1b5: V152 = CALLDATALOAD 0x4
0x1b6: V153 = AND V152 0xffffffffffffffffffffffffffffffffffffffff
0x1b7: V154 = 0x560
0x1ba: JUMP 0x560
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xae, V153]
Exit stack: [V13, 0xae, V153]

================================

Block 0x1bb
[0x1bb:0x1c1]
---
Predecessors: [0x7f]
Successors: [0x1c2, 0x1c6]
---
0x1bb JUMPDEST
0x1bc CALLVALUE
0x1bd ISZERO
0x1be PUSH2 0x1c6
0x1c1 JUMPI
---
0x1bb: JUMPDEST 
0x1bc: V155 = CALLVALUE
0x1bd: V156 = ISZERO V155
0x1be: V157 = 0x1c6
0x1c1: JUMPI 0x1c6 V156
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c2
[0x1c2:0x1c5]
---
Predecessors: [0x1bb]
Successors: []
---
0x1c2 PUSH1 0x0
0x1c4 DUP1
0x1c5 REVERT
---
0x1c2: V158 = 0x0
0x1c5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c6
[0x1c6:0x1cd]
---
Predecessors: [0x1bb]
Successors: [0x5fb]
---
0x1c6 JUMPDEST
0x1c7 PUSH2 0x124
0x1ca PUSH2 0x5fb
0x1cd JUMP
---
0x1c6: JUMPDEST 
0x1c7: V159 = 0x124
0x1ca: V160 = 0x5fb
0x1cd: JUMP 0x5fb
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x124]
Exit stack: [V13, 0x124]

================================

Block 0x1ce
[0x1ce:0x1e4]
---
Predecessors: [0x9a]
Successors: [0x1e5, 0x1e9]
---
0x1ce JUMPDEST
0x1cf PUSH1 0x0
0x1d1 SLOAD
0x1d2 CALLER
0x1d3 PUSH1 0x1
0x1d5 PUSH1 0xa0
0x1d7 PUSH1 0x2
0x1d9 EXP
0x1da SUB
0x1db SWAP1
0x1dc DUP2
0x1dd AND
0x1de SWAP2
0x1df AND
0x1e0 EQ
0x1e1 PUSH2 0x1e9
0x1e4 JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V161 = 0x0
0x1d1: V162 = S[0x0]
0x1d2: V163 = CALLER
0x1d3: V164 = 0x1
0x1d5: V165 = 0xa0
0x1d7: V166 = 0x2
0x1d9: V167 = EXP 0x2 0xa0
0x1da: V168 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1dd: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x1df: V170 = AND V162 0xffffffffffffffffffffffffffffffffffffffff
0x1e0: V171 = EQ V170 V169
0x1e1: V172 = 0x1e9
0x1e4: JUMPI 0x1e9 V171
---
Entry stack: [V13, 0xae, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V57]

================================

Block 0x1e5
[0x1e5:0x1e8]
---
Predecessors: [0x1ce]
Successors: []
---
0x1e5 PUSH1 0x0
0x1e7 DUP1
0x1e8 REVERT
---
0x1e5: V173 = 0x0
0x1e8: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V57]

================================

Block 0x1e9
[0x1e9:0x1f9]
---
Predecessors: [0x1ce]
Successors: [0x1fa, 0x1fe]
---
0x1e9 JUMPDEST
0x1ea PUSH1 0x1
0x1ec PUSH1 0xa0
0x1ee PUSH1 0x2
0x1f0 EXP
0x1f1 SUB
0x1f2 DUP2
0x1f3 AND
0x1f4 ISZERO
0x1f5 ISZERO
0x1f6 PUSH2 0x1fe
0x1f9 JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V174 = 0x1
0x1ec: V175 = 0xa0
0x1ee: V176 = 0x2
0x1f0: V177 = EXP 0x2 0xa0
0x1f1: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f3: V179 = AND V57 0xffffffffffffffffffffffffffffffffffffffff
0x1f4: V180 = ISZERO V179
0x1f5: V181 = ISZERO V180
0x1f6: V182 = 0x1fe
0x1f9: JUMPI 0x1fe V181
---
Entry stack: [V13, 0xae, V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xae, V57]

================================

Block 0x1fa
[0x1fa:0x1fd]
---
Predecessors: [0x1e9]
Successors: []
---
0x1fa PUSH1 0x0
0x1fc DUP1
0x1fd REVERT
---
0x1fa: V183 = 0x0
0x1fd: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V57]

================================

Block 0x1fe
[0x1fe:0x22c]
---
Predecessors: [0x1e9]
Successors: [0xae]
---
0x1fe JUMPDEST
0x1ff PUSH1 0x1
0x201 DUP1
0x202 SLOAD
0x203 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x218 NOT
0x219 AND
0x21a PUSH1 0x1
0x21c PUSH1 0xa0
0x21e PUSH1 0x2
0x220 EXP
0x221 SUB
0x222 SWAP3
0x223 SWAP1
0x224 SWAP3
0x225 AND
0x226 SWAP2
0x227 SWAP1
0x228 SWAP2
0x229 OR
0x22a SWAP1
0x22b SSTORE
0x22c JUMP
---
0x1fe: JUMPDEST 
0x1ff: V184 = 0x1
0x202: V185 = S[0x1]
0x203: V186 = 0xffffffffffffffffffffffffffffffffffffffff
0x218: V187 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x219: V188 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V185
0x21a: V189 = 0x1
0x21c: V190 = 0xa0
0x21e: V191 = 0x2
0x220: V192 = EXP 0x2 0xa0
0x221: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x225: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x229: V195 = OR V194 V188
0x22b: S[0x1] = V195
0x22c: JUMP 0xae
---
Entry stack: [V13, 0xae, V57]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x22d
[0x22d:0x232]
---
Predecessors: [0xbb]
Successors: [0xc3]
---
0x22d JUMPDEST
0x22e PUSH1 0x2
0x230 SLOAD
0x231 DUP2
0x232 JUMP
---
0x22d: JUMPDEST 
0x22e: V196 = 0x2
0x230: V197 = S[0x2]
0x232: JUMP 0xc3
---
Entry stack: [V13, 0xc3]
Stack pops: 1
Stack additions: [S0, V197]
Exit stack: [V13, 0xc3, V197]

================================

Block 0x233
[0x233:0x249]
---
Predecessors: [0xe0]
Successors: [0x24a, 0x24e]
---
0x233 JUMPDEST
0x234 PUSH1 0x0
0x236 SLOAD
0x237 CALLER
0x238 PUSH1 0x1
0x23a PUSH1 0xa0
0x23c PUSH1 0x2
0x23e EXP
0x23f SUB
0x240 SWAP1
0x241 DUP2
0x242 AND
0x243 SWAP2
0x244 AND
0x245 EQ
0x246 PUSH2 0x24e
0x249 JUMPI
---
0x233: JUMPDEST 
0x234: V198 = 0x0
0x236: V199 = S[0x0]
0x237: V200 = CALLER
0x238: V201 = 0x1
0x23a: V202 = 0xa0
0x23c: V203 = 0x2
0x23e: V204 = EXP 0x2 0xa0
0x23f: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x242: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x244: V207 = AND V199 0xffffffffffffffffffffffffffffffffffffffff
0x245: V208 = EQ V207 V206
0x246: V209 = 0x24e
0x249: JUMPI 0x24e V208
---
Entry stack: [V13, 0xae, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V78]

================================

Block 0x24a
[0x24a:0x24d]
---
Predecessors: [0x233]
Successors: []
---
0x24a PUSH1 0x0
0x24c DUP1
0x24d REVERT
---
0x24a: V210 = 0x0
0x24d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V78]

================================

Block 0x24e
[0x24e:0x255]
---
Predecessors: [0x233]
Successors: [0x256, 0x25a]
---
0x24e JUMPDEST
0x24f DUP1
0x250 ISZERO
0x251 ISZERO
0x252 PUSH2 0x25a
0x255 JUMPI
---
0x24e: JUMPDEST 
0x250: V211 = ISZERO V78
0x251: V212 = ISZERO V211
0x252: V213 = 0x25a
0x255: JUMPI 0x25a V212
---
Entry stack: [V13, 0xae, V78]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xae, V78]

================================

Block 0x256
[0x256:0x259]
---
Predecessors: [0x24e]
Successors: []
---
0x256 PUSH1 0x0
0x258 DUP1
0x259 REVERT
---
0x256: V214 = 0x0
0x259: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V78]

================================

Block 0x25a
[0x25a:0x25e]
---
Predecessors: [0x24e]
Successors: [0xae]
---
0x25a JUMPDEST
0x25b PUSH1 0x2
0x25d SSTORE
0x25e JUMP
---
0x25a: JUMPDEST 
0x25b: V215 = 0x2
0x25d: S[0x2] = V78
0x25e: JUMP 0xae
---
Entry stack: [V13, 0xae, V78]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x25f
[0x25f:0x275]
---
Predecessors: [0xf6]
Successors: [0x276, 0x27a]
---
0x25f JUMPDEST
0x260 PUSH1 0x0
0x262 SLOAD
0x263 CALLER
0x264 PUSH1 0x1
0x266 PUSH1 0xa0
0x268 PUSH1 0x2
0x26a EXP
0x26b SUB
0x26c SWAP1
0x26d DUP2
0x26e AND
0x26f SWAP2
0x270 AND
0x271 EQ
0x272 PUSH2 0x27a
0x275 JUMPI
---
0x25f: JUMPDEST 
0x260: V216 = 0x0
0x262: V217 = S[0x0]
0x263: V218 = CALLER
0x264: V219 = 0x1
0x266: V220 = 0xa0
0x268: V221 = 0x2
0x26a: V222 = EXP 0x2 0xa0
0x26b: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x26e: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x270: V225 = AND V217 0xffffffffffffffffffffffffffffffffffffffff
0x271: V226 = EQ V225 V224
0x272: V227 = 0x27a
0x275: JUMPI 0x27a V226
---
Entry stack: [V13, 0xae]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae]

================================

Block 0x276
[0x276:0x279]
---
Predecessors: [0x25f]
Successors: []
---
0x276 PUSH1 0x0
0x278 DUP1
0x279 REVERT
---
0x276: V228 = 0x0
0x279: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae]

================================

Block 0x27a
[0x27a:0x2e0]
---
Predecessors: [0x25f]
Successors: [0x2e1, 0x2e5]
---
0x27a JUMPDEST
0x27b PUSH1 0x1
0x27d SLOAD
0x27e PUSH1 0x0
0x280 DUP1
0x281 SLOAD
0x282 PUSH1 0x1
0x284 PUSH1 0xa0
0x286 PUSH1 0x2
0x288 EXP
0x289 SUB
0x28a SWAP3
0x28b DUP4
0x28c AND
0x28d SWAP3
0x28e PUSH4 0xa9059cbb
0x293 SWAP3
0x294 SWAP2
0x295 AND
0x296 SWAP1
0x297 DUP4
0x298 SWAP1
0x299 PUSH4 0x70a08231
0x29e SWAP1
0x29f ADDRESS
0x2a0 SWAP1
0x2a1 PUSH1 0x40
0x2a3 MLOAD
0x2a4 PUSH1 0x20
0x2a6 ADD
0x2a7 MSTORE
0x2a8 PUSH1 0x40
0x2aa MLOAD
0x2ab PUSH1 0xe0
0x2ad PUSH1 0x2
0x2af EXP
0x2b0 PUSH4 0xffffffff
0x2b5 DUP5
0x2b6 AND
0x2b7 MUL
0x2b8 DUP2
0x2b9 MSTORE
0x2ba PUSH1 0x1
0x2bc PUSH1 0xa0
0x2be PUSH1 0x2
0x2c0 EXP
0x2c1 SUB
0x2c2 SWAP1
0x2c3 SWAP2
0x2c4 AND
0x2c5 PUSH1 0x4
0x2c7 DUP3
0x2c8 ADD
0x2c9 MSTORE
0x2ca PUSH1 0x24
0x2cc ADD
0x2cd PUSH1 0x20
0x2cf PUSH1 0x40
0x2d1 MLOAD
0x2d2 DUP1
0x2d3 DUP4
0x2d4 SUB
0x2d5 DUP2
0x2d6 PUSH1 0x0
0x2d8 DUP8
0x2d9 DUP1
0x2da EXTCODESIZE
0x2db ISZERO
0x2dc ISZERO
0x2dd PUSH2 0x2e5
0x2e0 JUMPI
---
0x27a: JUMPDEST 
0x27b: V229 = 0x1
0x27d: V230 = S[0x1]
0x27e: V231 = 0x0
0x281: V232 = S[0x0]
0x282: V233 = 0x1
0x284: V234 = 0xa0
0x286: V235 = 0x2
0x288: V236 = EXP 0x2 0xa0
0x289: V237 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28c: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x28e: V239 = 0xa9059cbb
0x295: V240 = AND V232 0xffffffffffffffffffffffffffffffffffffffff
0x299: V241 = 0x70a08231
0x29f: V242 = ADDRESS
0x2a1: V243 = 0x40
0x2a3: V244 = M[0x40]
0x2a4: V245 = 0x20
0x2a6: V246 = ADD 0x20 V244
0x2a7: M[V246] = 0x0
0x2a8: V247 = 0x40
0x2aa: V248 = M[0x40]
0x2ab: V249 = 0xe0
0x2ad: V250 = 0x2
0x2af: V251 = EXP 0x2 0xe0
0x2b0: V252 = 0xffffffff
0x2b6: V253 = AND 0x70a08231 0xffffffff
0x2b7: V254 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x2b9: M[V248] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x2ba: V255 = 0x1
0x2bc: V256 = 0xa0
0x2be: V257 = 0x2
0x2c0: V258 = EXP 0x2 0xa0
0x2c1: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c4: V260 = AND V242 0xffffffffffffffffffffffffffffffffffffffff
0x2c5: V261 = 0x4
0x2c8: V262 = ADD V248 0x4
0x2c9: M[V262] = V260
0x2ca: V263 = 0x24
0x2cc: V264 = ADD 0x24 V248
0x2cd: V265 = 0x20
0x2cf: V266 = 0x40
0x2d1: V267 = M[0x40]
0x2d4: V268 = SUB V264 V267
0x2d6: V269 = 0x0
0x2da: V270 = EXTCODESIZE V238
0x2db: V271 = ISZERO V270
0x2dc: V272 = ISZERO V271
0x2dd: V273 = 0x2e5
0x2e0: JUMPI 0x2e5 V272
---
Entry stack: [V13, 0xae]
Stack pops: 0
Stack additions: [V238, 0xa9059cbb, V240, V238, 0x70a08231, V264, 0x20, V267, V268, V267, 0x0, V238]
Exit stack: [V13, 0xae, V238, 0xa9059cbb, V240, V238, 0x70a08231, V264, 0x20, V267, V268, V267, 0x0, V238]

================================

Block 0x2e1
[0x2e1:0x2e4]
---
Predecessors: [0x27a]
Successors: []
---
0x2e1 PUSH1 0x0
0x2e3 DUP1
0x2e4 REVERT
---
0x2e1: V274 = 0x0
0x2e4: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae, V238, 0xa9059cbb, V240, V238, 0x70a08231, V264, 0x20, V267, V268, V267, 0x0, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V238, 0xa9059cbb, V240, V238, 0x70a08231, V264, 0x20, V267, V268, V267, 0x0, V238]

================================

Block 0x2e5
[0x2e5:0x2f1]
---
Predecessors: [0x27a]
Successors: [0x2f2, 0x2f6]
---
0x2e5 JUMPDEST
0x2e6 PUSH2 0x2c6
0x2e9 GAS
0x2ea SUB
0x2eb CALL
0x2ec ISZERO
0x2ed ISZERO
0x2ee PUSH2 0x2f6
0x2f1 JUMPI
---
0x2e5: JUMPDEST 
0x2e6: V275 = 0x2c6
0x2e9: V276 = GAS
0x2ea: V277 = SUB V276 0x2c6
0x2eb: V278 = CALL V277 V238 0x0 V267 V268 V267 0x20
0x2ec: V279 = ISZERO V278
0x2ed: V280 = ISZERO V279
0x2ee: V281 = 0x2f6
0x2f1: JUMPI 0x2f6 V280
---
Entry stack: [V13, 0xae, V238, 0xa9059cbb, V240, V238, 0x70a08231, V264, 0x20, V267, V268, V267, 0x0, V238]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xae, V238, 0xa9059cbb, V240, V238, 0x70a08231, V264]

================================

Block 0x2f2
[0x2f2:0x2f5]
---
Predecessors: [0x2e5]
Successors: []
---
0x2f2 PUSH1 0x0
0x2f4 DUP1
0x2f5 REVERT
---
0x2f2: V282 = 0x0
0x2f5: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae, V238, 0xa9059cbb, V240, V238, 0x70a08231, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V238, 0xa9059cbb, V240, V238, 0x70a08231, V264]

================================

Block 0x2f6
[0x2f6:0x347]
---
Predecessors: [0x2e5]
Successors: [0x348, 0x34c]
---
0x2f6 JUMPDEST
0x2f7 POP
0x2f8 POP
0x2f9 POP
0x2fa PUSH1 0x40
0x2fc MLOAD
0x2fd DUP1
0x2fe MLOAD
0x2ff SWAP1
0x300 POP
0x301 PUSH1 0x0
0x303 PUSH1 0x40
0x305 MLOAD
0x306 PUSH1 0x20
0x308 ADD
0x309 MSTORE
0x30a PUSH1 0x40
0x30c MLOAD
0x30d PUSH1 0xe0
0x30f PUSH1 0x2
0x311 EXP
0x312 PUSH4 0xffffffff
0x317 DUP6
0x318 AND
0x319 MUL
0x31a DUP2
0x31b MSTORE
0x31c PUSH1 0x1
0x31e PUSH1 0xa0
0x320 PUSH1 0x2
0x322 EXP
0x323 SUB
0x324 SWAP1
0x325 SWAP3
0x326 AND
0x327 PUSH1 0x4
0x329 DUP4
0x32a ADD
0x32b MSTORE
0x32c PUSH1 0x24
0x32e DUP3
0x32f ADD
0x330 MSTORE
0x331 PUSH1 0x44
0x333 ADD
0x334 PUSH1 0x20
0x336 PUSH1 0x40
0x338 MLOAD
0x339 DUP1
0x33a DUP4
0x33b SUB
0x33c DUP2
0x33d PUSH1 0x0
0x33f DUP8
0x340 DUP1
0x341 EXTCODESIZE
0x342 ISZERO
0x343 ISZERO
0x344 PUSH2 0x34c
0x347 JUMPI
---
0x2f6: JUMPDEST 
0x2fa: V283 = 0x40
0x2fc: V284 = M[0x40]
0x2fe: V285 = M[V284]
0x301: V286 = 0x0
0x303: V287 = 0x40
0x305: V288 = M[0x40]
0x306: V289 = 0x20
0x308: V290 = ADD 0x20 V288
0x309: M[V290] = 0x0
0x30a: V291 = 0x40
0x30c: V292 = M[0x40]
0x30d: V293 = 0xe0
0x30f: V294 = 0x2
0x311: V295 = EXP 0x2 0xe0
0x312: V296 = 0xffffffff
0x318: V297 = AND 0xa9059cbb 0xffffffff
0x319: V298 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x31b: M[V292] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x31c: V299 = 0x1
0x31e: V300 = 0xa0
0x320: V301 = 0x2
0x322: V302 = EXP 0x2 0xa0
0x323: V303 = SUB 0x10000000000000000000000000000000000000000 0x1
0x326: V304 = AND V240 0xffffffffffffffffffffffffffffffffffffffff
0x327: V305 = 0x4
0x32a: V306 = ADD V292 0x4
0x32b: M[V306] = V304
0x32c: V307 = 0x24
0x32f: V308 = ADD V292 0x24
0x330: M[V308] = V285
0x331: V309 = 0x44
0x333: V310 = ADD 0x44 V292
0x334: V311 = 0x20
0x336: V312 = 0x40
0x338: V313 = M[0x40]
0x33b: V314 = SUB V310 V313
0x33d: V315 = 0x0
0x341: V316 = EXTCODESIZE V238
0x342: V317 = ISZERO V316
0x343: V318 = ISZERO V317
0x344: V319 = 0x34c
0x347: JUMPI 0x34c V318
---
Entry stack: [V13, 0xae, V238, 0xa9059cbb, V240, V238, 0x70a08231, V264]
Stack pops: 6
Stack additions: [S5, S4, V310, 0x20, V313, V314, V313, 0x0, S5]
Exit stack: [V13, 0xae, V238, 0xa9059cbb, V310, 0x20, V313, V314, V313, 0x0, V238]

================================

Block 0x348
[0x348:0x34b]
---
Predecessors: [0x2f6]
Successors: []
---
0x348 PUSH1 0x0
0x34a DUP1
0x34b REVERT
---
0x348: V320 = 0x0
0x34b: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae, V238, 0xa9059cbb, V310, 0x20, V313, V314, V313, 0x0, V238]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V238, 0xa9059cbb, V310, 0x20, V313, V314, V313, 0x0, V238]

================================

Block 0x34c
[0x34c:0x358]
---
Predecessors: [0x2f6]
Successors: [0x359, 0x35d]
---
0x34c JUMPDEST
0x34d PUSH2 0x2c6
0x350 GAS
0x351 SUB
0x352 CALL
0x353 ISZERO
0x354 ISZERO
0x355 PUSH2 0x35d
0x358 JUMPI
---
0x34c: JUMPDEST 
0x34d: V321 = 0x2c6
0x350: V322 = GAS
0x351: V323 = SUB V322 0x2c6
0x352: V324 = CALL V323 V238 0x0 V313 V314 V313 0x20
0x353: V325 = ISZERO V324
0x354: V326 = ISZERO V325
0x355: V327 = 0x35d
0x358: JUMPI 0x35d V326
---
Entry stack: [V13, 0xae, V238, 0xa9059cbb, V310, 0x20, V313, V314, V313, 0x0, V238]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xae, V238, 0xa9059cbb, V310]

================================

Block 0x359
[0x359:0x35c]
---
Predecessors: [0x34c]
Successors: []
---
0x359 PUSH1 0x0
0x35b DUP1
0x35c REVERT
---
0x359: V328 = 0x0
0x35c: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae, V238, 0xa9059cbb, V310]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V238, 0xa9059cbb, V310]

================================

Block 0x35d
[0x35d:0x368]
---
Predecessors: [0x34c]
Successors: [0xae]
---
0x35d JUMPDEST
0x35e POP
0x35f POP
0x360 POP
0x361 PUSH1 0x40
0x363 MLOAD
0x364 DUP1
0x365 MLOAD
0x366 POP
0x367 POP
0x368 JUMP
---
0x35d: JUMPDEST 
0x361: V329 = 0x40
0x363: V330 = M[0x40]
0x365: V331 = M[V330]
0x368: JUMP 0xae
---
Entry stack: [V13, 0xae, V238, 0xa9059cbb, V310]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x369
[0x369:0x37f]
---
Predecessors: [0x109]
Successors: [0x380, 0x384]
---
0x369 JUMPDEST
0x36a PUSH1 0x0
0x36c SLOAD
0x36d CALLER
0x36e PUSH1 0x1
0x370 PUSH1 0xa0
0x372 PUSH1 0x2
0x374 EXP
0x375 SUB
0x376 SWAP1
0x377 DUP2
0x378 AND
0x379 SWAP2
0x37a AND
0x37b EQ
0x37c PUSH2 0x384
0x37f JUMPI
---
0x369: JUMPDEST 
0x36a: V332 = 0x0
0x36c: V333 = S[0x0]
0x36d: V334 = CALLER
0x36e: V335 = 0x1
0x370: V336 = 0xa0
0x372: V337 = 0x2
0x374: V338 = EXP 0x2 0xa0
0x375: V339 = SUB 0x10000000000000000000000000000000000000000 0x1
0x378: V340 = AND 0xffffffffffffffffffffffffffffffffffffffff V334
0x37a: V341 = AND V333 0xffffffffffffffffffffffffffffffffffffffff
0x37b: V342 = EQ V341 V340
0x37c: V343 = 0x384
0x37f: JUMPI 0x384 V342
---
Entry stack: [V13, 0xae]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae]

================================

Block 0x380
[0x380:0x383]
---
Predecessors: [0x369]
Successors: []
---
0x380 PUSH1 0x0
0x382 DUP1
0x383 REVERT
---
0x380: V344 = 0x0
0x383: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae]

================================

Block 0x384
[0x384:0x3b8]
---
Predecessors: [0x369]
Successors: [0x3b9, 0x3bd]
---
0x384 JUMPDEST
0x385 PUSH1 0x0
0x387 SLOAD
0x388 PUSH1 0x1
0x38a PUSH1 0xa0
0x38c PUSH1 0x2
0x38e EXP
0x38f SUB
0x390 SWAP1
0x391 DUP2
0x392 AND
0x393 SWAP1
0x394 ADDRESS
0x395 AND
0x396 BALANCE
0x397 DUP1
0x398 ISZERO
0x399 PUSH2 0x8fc
0x39c MUL
0x39d SWAP1
0x39e PUSH1 0x40
0x3a0 MLOAD
0x3a1 PUSH1 0x0
0x3a3 PUSH1 0x40
0x3a5 MLOAD
0x3a6 DUP1
0x3a7 DUP4
0x3a8 SUB
0x3a9 DUP2
0x3aa DUP6
0x3ab DUP9
0x3ac DUP9
0x3ad CALL
0x3ae SWAP4
0x3af POP
0x3b0 POP
0x3b1 POP
0x3b2 POP
0x3b3 ISZERO
0x3b4 ISZERO
0x3b5 PUSH2 0x3bd
0x3b8 JUMPI
---
0x384: JUMPDEST 
0x385: V345 = 0x0
0x387: V346 = S[0x0]
0x388: V347 = 0x1
0x38a: V348 = 0xa0
0x38c: V349 = 0x2
0x38e: V350 = EXP 0x2 0xa0
0x38f: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x392: V352 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x394: V353 = ADDRESS
0x395: V354 = AND V353 0xffffffffffffffffffffffffffffffffffffffff
0x396: V355 = BALANCE V354
0x398: V356 = ISZERO V355
0x399: V357 = 0x8fc
0x39c: V358 = MUL 0x8fc V356
0x39e: V359 = 0x40
0x3a0: V360 = M[0x40]
0x3a1: V361 = 0x0
0x3a3: V362 = 0x40
0x3a5: V363 = M[0x40]
0x3a8: V364 = SUB V360 V363
0x3ad: V365 = CALL V358 V352 V355 V363 V364 V363 0x0
0x3b3: V366 = ISZERO V365
0x3b4: V367 = ISZERO V366
0x3b5: V368 = 0x3bd
0x3b8: JUMPI 0x3bd V367
---
Entry stack: [V13, 0xae]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae]

================================

Block 0x3b9
[0x3b9:0x3bc]
---
Predecessors: [0x384]
Successors: []
---
0x3b9 PUSH1 0x0
0x3bb DUP1
0x3bc REVERT
---
0x3b9: V369 = 0x0
0x3bc: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae]

================================

Block 0x3bd
[0x3bd:0x3be]
---
Predecessors: [0x384]
Successors: [0xae]
---
0x3bd JUMPDEST
0x3be JUMP
---
0x3bd: JUMPDEST 
0x3be: JUMP 0xae
---
Entry stack: [V13, 0xae]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x3bf
[0x3bf:0x3cd]
---
Predecessors: [0x11c]
Successors: [0x124]
---
0x3bf JUMPDEST
0x3c0 PUSH1 0x0
0x3c2 SLOAD
0x3c3 PUSH1 0x1
0x3c5 PUSH1 0xa0
0x3c7 PUSH1 0x2
0x3c9 EXP
0x3ca SUB
0x3cb AND
0x3cc DUP2
0x3cd JUMP
---
0x3bf: JUMPDEST 
0x3c0: V370 = 0x0
0x3c2: V371 = S[0x0]
0x3c3: V372 = 0x1
0x3c5: V373 = 0xa0
0x3c7: V374 = 0x2
0x3c9: V375 = EXP 0x2 0xa0
0x3ca: V376 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3cb: V377 = AND 0xffffffffffffffffffffffffffffffffffffffff V371
0x3cd: JUMP 0x124
---
Entry stack: [V13, 0x124]
Stack pops: 1
Stack additions: [S0, V377]
Exit stack: [V13, 0x124, V377]

================================

Block 0x3ce
[0x3ce:0x430]
---
Predecessors: [0x140]
Successors: [0x431, 0x435]
---
0x3ce JUMPDEST
0x3cf PUSH1 0x2
0x3d1 SLOAD
0x3d2 PUSH1 0x1
0x3d4 SLOAD
0x3d5 CALLVALUE
0x3d6 SWAP1
0x3d7 SWAP2
0x3d8 MUL
0x3d9 SWAP1
0x3da PUSH1 0x1
0x3dc PUSH1 0xa0
0x3de PUSH1 0x2
0x3e0 EXP
0x3e1 SUB
0x3e2 AND
0x3e3 PUSH4 0xa9059cbb
0x3e8 CALLER
0x3e9 DUP4
0x3ea PUSH1 0x0
0x3ec PUSH1 0x40
0x3ee MLOAD
0x3ef PUSH1 0x20
0x3f1 ADD
0x3f2 MSTORE
0x3f3 PUSH1 0x40
0x3f5 MLOAD
0x3f6 PUSH1 0xe0
0x3f8 PUSH1 0x2
0x3fa EXP
0x3fb PUSH4 0xffffffff
0x400 DUP6
0x401 AND
0x402 MUL
0x403 DUP2
0x404 MSTORE
0x405 PUSH1 0x1
0x407 PUSH1 0xa0
0x409 PUSH1 0x2
0x40b EXP
0x40c SUB
0x40d SWAP1
0x40e SWAP3
0x40f AND
0x410 PUSH1 0x4
0x412 DUP4
0x413 ADD
0x414 MSTORE
0x415 PUSH1 0x24
0x417 DUP3
0x418 ADD
0x419 MSTORE
0x41a PUSH1 0x44
0x41c ADD
0x41d PUSH1 0x20
0x41f PUSH1 0x40
0x421 MLOAD
0x422 DUP1
0x423 DUP4
0x424 SUB
0x425 DUP2
0x426 PUSH1 0x0
0x428 DUP8
0x429 DUP1
0x42a EXTCODESIZE
0x42b ISZERO
0x42c ISZERO
0x42d PUSH2 0x435
0x430 JUMPI
---
0x3ce: JUMPDEST 
0x3cf: V378 = 0x2
0x3d1: V379 = S[0x2]
0x3d2: V380 = 0x1
0x3d4: V381 = S[0x1]
0x3d5: V382 = CALLVALUE
0x3d8: V383 = MUL V379 V382
0x3da: V384 = 0x1
0x3dc: V385 = 0xa0
0x3de: V386 = 0x2
0x3e0: V387 = EXP 0x2 0xa0
0x3e1: V388 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3e2: V389 = AND 0xffffffffffffffffffffffffffffffffffffffff V381
0x3e3: V390 = 0xa9059cbb
0x3e8: V391 = CALLER
0x3ea: V392 = 0x0
0x3ec: V393 = 0x40
0x3ee: V394 = M[0x40]
0x3ef: V395 = 0x20
0x3f1: V396 = ADD 0x20 V394
0x3f2: M[V396] = 0x0
0x3f3: V397 = 0x40
0x3f5: V398 = M[0x40]
0x3f6: V399 = 0xe0
0x3f8: V400 = 0x2
0x3fa: V401 = EXP 0x2 0xe0
0x3fb: V402 = 0xffffffff
0x401: V403 = AND 0xa9059cbb 0xffffffff
0x402: V404 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x404: M[V398] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x405: V405 = 0x1
0x407: V406 = 0xa0
0x409: V407 = 0x2
0x40b: V408 = EXP 0x2 0xa0
0x40c: V409 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40f: V410 = AND V391 0xffffffffffffffffffffffffffffffffffffffff
0x410: V411 = 0x4
0x413: V412 = ADD V398 0x4
0x414: M[V412] = V410
0x415: V413 = 0x24
0x418: V414 = ADD V398 0x24
0x419: M[V414] = V383
0x41a: V415 = 0x44
0x41c: V416 = ADD 0x44 V398
0x41d: V417 = 0x20
0x41f: V418 = 0x40
0x421: V419 = M[0x40]
0x424: V420 = SUB V416 V419
0x426: V421 = 0x0
0x42a: V422 = EXTCODESIZE V389
0x42b: V423 = ISZERO V422
0x42c: V424 = ISZERO V423
0x42d: V425 = 0x435
0x430: JUMPI 0x435 V424
---
Entry stack: [V13, 0xae]
Stack pops: 0
Stack additions: [V383, V389, 0xa9059cbb, V416, 0x20, V419, V420, V419, 0x0, V389]
Exit stack: [V13, 0xae, V383, V389, 0xa9059cbb, V416, 0x20, V419, V420, V419, 0x0, V389]

================================

Block 0x431
[0x431:0x434]
---
Predecessors: [0x3ce]
Successors: []
---
0x431 PUSH1 0x0
0x433 DUP1
0x434 REVERT
---
0x431: V426 = 0x0
0x434: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae, V383, V389, 0xa9059cbb, V416, 0x20, V419, V420, V419, 0x0, V389]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V383, V389, 0xa9059cbb, V416, 0x20, V419, V420, V419, 0x0, V389]

================================

Block 0x435
[0x435:0x441]
---
Predecessors: [0x3ce]
Successors: [0x442, 0x446]
---
0x435 JUMPDEST
0x436 PUSH2 0x2c6
0x439 GAS
0x43a SUB
0x43b CALL
0x43c ISZERO
0x43d ISZERO
0x43e PUSH2 0x446
0x441 JUMPI
---
0x435: JUMPDEST 
0x436: V427 = 0x2c6
0x439: V428 = GAS
0x43a: V429 = SUB V428 0x2c6
0x43b: V430 = CALL V429 V389 0x0 V419 V420 V419 0x20
0x43c: V431 = ISZERO V430
0x43d: V432 = ISZERO V431
0x43e: V433 = 0x446
0x441: JUMPI 0x446 V432
---
Entry stack: [V13, 0xae, V383, V389, 0xa9059cbb, V416, 0x20, V419, V420, V419, 0x0, V389]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xae, V383, V389, 0xa9059cbb, V416]

================================

Block 0x442
[0x442:0x445]
---
Predecessors: [0x435]
Successors: []
---
0x442 PUSH1 0x0
0x444 DUP1
0x445 REVERT
---
0x442: V434 = 0x0
0x445: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae, V383, V389, 0xa9059cbb, V416]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V383, V389, 0xa9059cbb, V416]

================================

Block 0x446
[0x446:0x452]
---
Predecessors: [0x435]
Successors: [0xae]
---
0x446 JUMPDEST
0x447 POP
0x448 POP
0x449 POP
0x44a PUSH1 0x40
0x44c MLOAD
0x44d DUP1
0x44e MLOAD
0x44f POP
0x450 POP
0x451 POP
0x452 JUMP
---
0x446: JUMPDEST 
0x44a: V435 = 0x40
0x44c: V436 = M[0x40]
0x44e: V437 = M[V436]
0x452: JUMP 0xae
---
Entry stack: [V13, 0xae, V383, V389, 0xa9059cbb, V416]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x453
[0x453:0x4b5]
---
Predecessors: [0x148]
Successors: [0x4b6, 0x4ba]
---
0x453 JUMPDEST
0x454 PUSH1 0x2
0x456 SLOAD
0x457 PUSH1 0x1
0x459 SLOAD
0x45a CALLVALUE
0x45b SWAP1
0x45c SWAP2
0x45d MUL
0x45e SWAP1
0x45f PUSH1 0x1
0x461 PUSH1 0xa0
0x463 PUSH1 0x2
0x465 EXP
0x466 SUB
0x467 AND
0x468 PUSH4 0xa9059cbb
0x46d DUP5
0x46e DUP4
0x46f PUSH1 0x0
0x471 PUSH1 0x40
0x473 MLOAD
0x474 PUSH1 0x20
0x476 ADD
0x477 MSTORE
0x478 PUSH1 0x40
0x47a MLOAD
0x47b PUSH1 0xe0
0x47d PUSH1 0x2
0x47f EXP
0x480 PUSH4 0xffffffff
0x485 DUP6
0x486 AND
0x487 MUL
0x488 DUP2
0x489 MSTORE
0x48a PUSH1 0x1
0x48c PUSH1 0xa0
0x48e PUSH1 0x2
0x490 EXP
0x491 SUB
0x492 SWAP1
0x493 SWAP3
0x494 AND
0x495 PUSH1 0x4
0x497 DUP4
0x498 ADD
0x499 MSTORE
0x49a PUSH1 0x24
0x49c DUP3
0x49d ADD
0x49e MSTORE
0x49f PUSH1 0x44
0x4a1 ADD
0x4a2 PUSH1 0x20
0x4a4 PUSH1 0x40
0x4a6 MLOAD
0x4a7 DUP1
0x4a8 DUP4
0x4a9 SUB
0x4aa DUP2
0x4ab PUSH1 0x0
0x4ad DUP8
0x4ae DUP1
0x4af EXTCODESIZE
0x4b0 ISZERO
0x4b1 ISZERO
0x4b2 PUSH2 0x4ba
0x4b5 JUMPI
---
0x453: JUMPDEST 
0x454: V438 = 0x2
0x456: V439 = S[0x2]
0x457: V440 = 0x1
0x459: V441 = S[0x1]
0x45a: V442 = CALLVALUE
0x45d: V443 = MUL V439 V442
0x45f: V444 = 0x1
0x461: V445 = 0xa0
0x463: V446 = 0x2
0x465: V447 = EXP 0x2 0xa0
0x466: V448 = SUB 0x10000000000000000000000000000000000000000 0x1
0x467: V449 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x468: V450 = 0xa9059cbb
0x46f: V451 = 0x0
0x471: V452 = 0x40
0x473: V453 = M[0x40]
0x474: V454 = 0x20
0x476: V455 = ADD 0x20 V453
0x477: M[V455] = 0x0
0x478: V456 = 0x40
0x47a: V457 = M[0x40]
0x47b: V458 = 0xe0
0x47d: V459 = 0x2
0x47f: V460 = EXP 0x2 0xe0
0x480: V461 = 0xffffffff
0x486: V462 = AND 0xa9059cbb 0xffffffff
0x487: V463 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x489: M[V457] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x48a: V464 = 0x1
0x48c: V465 = 0xa0
0x48e: V466 = 0x2
0x490: V467 = EXP 0x2 0xa0
0x491: V468 = SUB 0x10000000000000000000000000000000000000000 0x1
0x494: V469 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x495: V470 = 0x4
0x498: V471 = ADD V457 0x4
0x499: M[V471] = V469
0x49a: V472 = 0x24
0x49d: V473 = ADD V457 0x24
0x49e: M[V473] = V443
0x49f: V474 = 0x44
0x4a1: V475 = ADD 0x44 V457
0x4a2: V476 = 0x20
0x4a4: V477 = 0x40
0x4a6: V478 = M[0x40]
0x4a9: V479 = SUB V475 V478
0x4ab: V480 = 0x0
0x4af: V481 = EXTCODESIZE V449
0x4b0: V482 = ISZERO V481
0x4b1: V483 = ISZERO V482
0x4b2: V484 = 0x4ba
0x4b5: JUMPI 0x4ba V483
---
Entry stack: [V13, 0xae, V121, V135]
Stack pops: 2
Stack additions: [S1, S0, V443, V449, 0xa9059cbb, V475, 0x20, V478, V479, V478, 0x0, V449]
Exit stack: [V13, 0xae, V121, V135, V443, V449, 0xa9059cbb, V475, 0x20, V478, V479, V478, 0x0, V449]

================================

Block 0x4b6
[0x4b6:0x4b9]
---
Predecessors: [0x453]
Successors: []
---
0x4b6 PUSH1 0x0
0x4b8 DUP1
0x4b9 REVERT
---
0x4b6: V485 = 0x0
0x4b9: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae, V121, V135, V443, V449, 0xa9059cbb, V475, 0x20, V478, V479, V478, 0x0, V449]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V121, V135, V443, V449, 0xa9059cbb, V475, 0x20, V478, V479, V478, 0x0, V449]

================================

Block 0x4ba
[0x4ba:0x4c6]
---
Predecessors: [0x453]
Successors: [0x4c7, 0x4cb]
---
0x4ba JUMPDEST
0x4bb PUSH2 0x2c6
0x4be GAS
0x4bf SUB
0x4c0 CALL
0x4c1 ISZERO
0x4c2 ISZERO
0x4c3 PUSH2 0x4cb
0x4c6 JUMPI
---
0x4ba: JUMPDEST 
0x4bb: V486 = 0x2c6
0x4be: V487 = GAS
0x4bf: V488 = SUB V487 0x2c6
0x4c0: V489 = CALL V488 V449 0x0 V478 V479 V478 0x20
0x4c1: V490 = ISZERO V489
0x4c2: V491 = ISZERO V490
0x4c3: V492 = 0x4cb
0x4c6: JUMPI 0x4cb V491
---
Entry stack: [V13, 0xae, V121, V135, V443, V449, 0xa9059cbb, V475, 0x20, V478, V479, V478, 0x0, V449]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xae, V121, V135, V443, V449, 0xa9059cbb, V475]

================================

Block 0x4c7
[0x4c7:0x4ca]
---
Predecessors: [0x4ba]
Successors: []
---
0x4c7 PUSH1 0x0
0x4c9 DUP1
0x4ca REVERT
---
0x4c7: V493 = 0x0
0x4ca: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae, V121, V135, V443, V449, 0xa9059cbb, V475]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V121, V135, V443, V449, 0xa9059cbb, V475]

================================

Block 0x4cb
[0x4cb:0x4f1]
---
Predecessors: [0x4ba]
Successors: [0x4f2]
---
0x4cb JUMPDEST
0x4cc POP
0x4cd POP
0x4ce POP
0x4cf PUSH1 0x40
0x4d1 MLOAD
0x4d2 DUP1
0x4d3 MLOAD
0x4d4 POP
0x4d5 POP
0x4d6 PUSH1 0x1
0x4d8 PUSH1 0xa0
0x4da PUSH1 0x2
0x4dc EXP
0x4dd SUB
0x4de DUP4
0x4df AND
0x4e0 DUP3
0x4e1 PUSH1 0x40
0x4e3 MLOAD
0x4e4 DUP1
0x4e5 DUP3
0x4e6 DUP1
0x4e7 MLOAD
0x4e8 SWAP1
0x4e9 PUSH1 0x20
0x4eb ADD
0x4ec SWAP1
0x4ed DUP1
0x4ee DUP4
0x4ef DUP4
0x4f0 PUSH1 0x0
---
0x4cb: JUMPDEST 
0x4cf: V494 = 0x40
0x4d1: V495 = M[0x40]
0x4d3: V496 = M[V495]
0x4d6: V497 = 0x1
0x4d8: V498 = 0xa0
0x4da: V499 = 0x2
0x4dc: V500 = EXP 0x2 0xa0
0x4dd: V501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4df: V502 = AND V121 0xffffffffffffffffffffffffffffffffffffffff
0x4e1: V503 = 0x40
0x4e3: V504 = M[0x40]
0x4e7: V505 = M[V135]
0x4e9: V506 = 0x20
0x4eb: V507 = ADD 0x20 V135
0x4f0: V508 = 0x0
---
Entry stack: [V13, 0xae, V121, V135, V443, V449, 0xa9059cbb, V475]
Stack pops: 6
Stack additions: [S5, S4, S3, V502, S4, V504, V504, V507, V505, V505, V504, V507, 0x0]
Exit stack: [V13, 0xae, V121, V135, V443, V502, V135, V504, V504, V507, V505, V505, V504, V507, 0x0]

================================

Block 0x4f2
[0x4f2:0x4fa]
---
Predecessors: [0x4cb, 0x4fb]
Successors: [0x4fb, 0x50a]
---
0x4f2 JUMPDEST
0x4f3 DUP4
0x4f4 DUP2
0x4f5 LT
0x4f6 ISZERO
0x4f7 PUSH2 0x50a
0x4fa JUMPI
---
0x4f2: JUMPDEST 
0x4f5: V509 = LT S0 V505
0x4f6: V510 = ISZERO V509
0x4f7: V511 = 0x50a
0x4fa: JUMPI 0x50a V510
---
Entry stack: [V13, 0xae, V121, V135, V443, V502, V135, V504, V504, V507, V505, V505, V504, V507, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0xae, V121, V135, V443, V502, V135, V504, V504, V507, V505, V505, V504, V507, S0]

================================

Block 0x4fb
[0x4fb:0x509]
---
Predecessors: [0x4f2]
Successors: [0x4f2]
---
0x4fb DUP1
0x4fc DUP3
0x4fd ADD
0x4fe MLOAD
0x4ff DUP4
0x500 DUP3
0x501 ADD
0x502 MSTORE
0x503 PUSH1 0x20
0x505 ADD
0x506 PUSH2 0x4f2
0x509 JUMP
---
0x4fd: V512 = ADD V507 S0
0x4fe: V513 = M[V512]
0x501: V514 = ADD S0 V504
0x502: M[V514] = V513
0x503: V515 = 0x20
0x505: V516 = ADD 0x20 S0
0x506: V517 = 0x4f2
0x509: JUMP 0x4f2
---
Entry stack: [V13, 0xae, V121, V135, V443, V502, V135, V504, V504, V507, V505, V505, V504, V507, S0]
Stack pops: 3
Stack additions: [S2, S1, V516]
Exit stack: [V13, 0xae, V121, V135, V443, V502, V135, V504, V504, V507, V505, V505, V504, V507, V516]

================================

Block 0x50a
[0x50a:0x51d]
---
Predecessors: [0x4f2]
Successors: [0x51e, 0x537]
---
0x50a JUMPDEST
0x50b POP
0x50c POP
0x50d POP
0x50e POP
0x50f SWAP1
0x510 POP
0x511 SWAP1
0x512 DUP2
0x513 ADD
0x514 SWAP1
0x515 PUSH1 0x1f
0x517 AND
0x518 DUP1
0x519 ISZERO
0x51a PUSH2 0x537
0x51d JUMPI
---
0x50a: JUMPDEST 
0x513: V518 = ADD V505 V504
0x515: V519 = 0x1f
0x517: V520 = AND 0x1f V505
0x519: V521 = ISZERO V520
0x51a: V522 = 0x537
0x51d: JUMPI 0x537 V521
---
Entry stack: [V13, 0xae, V121, V135, V443, V502, V135, V504, V504, V507, V505, V505, V504, V507, S0]
Stack pops: 7
Stack additions: [V518, V520]
Exit stack: [V13, 0xae, V121, V135, V443, V502, V135, V504, V518, V520]

================================

Block 0x51e
[0x51e:0x536]
---
Predecessors: [0x50a]
Successors: [0x537]
---
0x51e DUP1
0x51f DUP3
0x520 SUB
0x521 DUP1
0x522 MLOAD
0x523 PUSH1 0x1
0x525 DUP4
0x526 PUSH1 0x20
0x528 SUB
0x529 PUSH2 0x100
0x52c EXP
0x52d SUB
0x52e NOT
0x52f AND
0x530 DUP2
0x531 MSTORE
0x532 PUSH1 0x20
0x534 ADD
0x535 SWAP2
0x536 POP
---
0x520: V523 = SUB V518 V520
0x522: V524 = M[V523]
0x523: V525 = 0x1
0x526: V526 = 0x20
0x528: V527 = SUB 0x20 V520
0x529: V528 = 0x100
0x52c: V529 = EXP 0x100 V527
0x52d: V530 = SUB V529 0x1
0x52e: V531 = NOT V530
0x52f: V532 = AND V531 V524
0x531: M[V523] = V532
0x532: V533 = 0x20
0x534: V534 = ADD 0x20 V523
---
Entry stack: [V13, 0xae, V121, V135, V443, V502, V135, V504, V518, V520]
Stack pops: 2
Stack additions: [V534, S0]
Exit stack: [V13, 0xae, V121, V135, V443, V502, V135, V504, V534, V520]

================================

Block 0x537
[0x537:0x556]
---
Predecessors: [0x50a, 0x51e]
Successors: [0x557, 0x55b]
---
0x537 JUMPDEST
0x538 POP
0x539 SWAP2
0x53a POP
0x53b POP
0x53c PUSH1 0x0
0x53e PUSH1 0x40
0x540 MLOAD
0x541 DUP1
0x542 DUP4
0x543 SUB
0x544 DUP2
0x545 PUSH1 0x0
0x547 DUP7
0x548 PUSH2 0x646e
0x54b GAS
0x54c SUB
0x54d CALL
0x54e SWAP2
0x54f POP
0x550 POP
0x551 ISZERO
0x552 ISZERO
0x553 PUSH2 0x55b
0x556 JUMPI
---
0x537: JUMPDEST 
0x53c: V535 = 0x0
0x53e: V536 = 0x40
0x540: V537 = M[0x40]
0x543: V538 = SUB S1 V537
0x545: V539 = 0x0
0x548: V540 = 0x646e
0x54b: V541 = GAS
0x54c: V542 = SUB V541 0x646e
0x54d: V543 = CALL V542 V502 0x0 V537 V538 V537 0x0
0x551: V544 = ISZERO V543
0x552: V545 = ISZERO V544
0x553: V546 = 0x55b
0x556: JUMPI 0x55b V545
---
Entry stack: [V13, 0xae, V121, V135, V443, V502, V135, V504, S1, V520]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0xae, V121, V135, V443]

================================

Block 0x557
[0x557:0x55a]
---
Predecessors: [0x537]
Successors: []
---
0x557 PUSH1 0x0
0x559 DUP1
0x55a REVERT
---
0x557: V547 = 0x0
0x55a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae, V121, V135, V443]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V121, V135, V443]

================================

Block 0x55b
[0x55b:0x55f]
---
Predecessors: [0x537]
Successors: [0xae]
---
0x55b JUMPDEST
0x55c POP
0x55d POP
0x55e POP
0x55f JUMP
---
0x55b: JUMPDEST 
0x55f: JUMP 0xae
---
Entry stack: [V13, 0xae, V121, V135, V443]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x560
[0x560:0x576]
---
Predecessors: [0x1a7]
Successors: [0x577, 0x57b]
---
0x560 JUMPDEST
0x561 PUSH1 0x0
0x563 SLOAD
0x564 CALLER
0x565 PUSH1 0x1
0x567 PUSH1 0xa0
0x569 PUSH1 0x2
0x56b EXP
0x56c SUB
0x56d SWAP1
0x56e DUP2
0x56f AND
0x570 SWAP2
0x571 AND
0x572 EQ
0x573 PUSH2 0x57b
0x576 JUMPI
---
0x560: JUMPDEST 
0x561: V548 = 0x0
0x563: V549 = S[0x0]
0x564: V550 = CALLER
0x565: V551 = 0x1
0x567: V552 = 0xa0
0x569: V553 = 0x2
0x56b: V554 = EXP 0x2 0xa0
0x56c: V555 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56f: V556 = AND 0xffffffffffffffffffffffffffffffffffffffff V550
0x571: V557 = AND V549 0xffffffffffffffffffffffffffffffffffffffff
0x572: V558 = EQ V557 V556
0x573: V559 = 0x57b
0x576: JUMPI 0x57b V558
---
Entry stack: [V13, 0xae, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V153]

================================

Block 0x577
[0x577:0x57a]
---
Predecessors: [0x560]
Successors: []
---
0x577 PUSH1 0x0
0x579 DUP1
0x57a REVERT
---
0x577: V560 = 0x0
0x57a: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V153]

================================

Block 0x57b
[0x57b:0x58b]
---
Predecessors: [0x560]
Successors: [0x58c, 0x590]
---
0x57b JUMPDEST
0x57c PUSH1 0x1
0x57e PUSH1 0xa0
0x580 PUSH1 0x2
0x582 EXP
0x583 SUB
0x584 DUP2
0x585 AND
0x586 ISZERO
0x587 ISZERO
0x588 PUSH2 0x590
0x58b JUMPI
---
0x57b: JUMPDEST 
0x57c: V561 = 0x1
0x57e: V562 = 0xa0
0x580: V563 = 0x2
0x582: V564 = EXP 0x2 0xa0
0x583: V565 = SUB 0x10000000000000000000000000000000000000000 0x1
0x585: V566 = AND V153 0xffffffffffffffffffffffffffffffffffffffff
0x586: V567 = ISZERO V566
0x587: V568 = ISZERO V567
0x588: V569 = 0x590
0x58b: JUMPI 0x590 V568
---
Entry stack: [V13, 0xae, V153]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xae, V153]

================================

Block 0x58c
[0x58c:0x58f]
---
Predecessors: [0x57b]
Successors: []
---
0x58c PUSH1 0x0
0x58e DUP1
0x58f REVERT
---
0x58c: V570 = 0x0
0x58f: REVERT 0x0 0x0
---
Entry stack: [V13, 0xae, V153]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xae, V153]

================================

Block 0x590
[0x590:0x5fa]
---
Predecessors: [0x57b]
Successors: [0xae]
---
0x590 JUMPDEST
0x591 PUSH1 0x0
0x593 SLOAD
0x594 PUSH1 0x1
0x596 PUSH1 0xa0
0x598 PUSH1 0x2
0x59a EXP
0x59b SUB
0x59c DUP1
0x59d DUP4
0x59e AND
0x59f SWAP2
0x5a0 AND
0x5a1 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x5c2 PUSH1 0x40
0x5c4 MLOAD
0x5c5 PUSH1 0x40
0x5c7 MLOAD
0x5c8 DUP1
0x5c9 SWAP2
0x5ca SUB
0x5cb SWAP1
0x5cc LOG3
0x5cd PUSH1 0x0
0x5cf DUP1
0x5d0 SLOAD
0x5d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e6 NOT
0x5e7 AND
0x5e8 PUSH1 0x1
0x5ea PUSH1 0xa0
0x5ec PUSH1 0x2
0x5ee EXP
0x5ef SUB
0x5f0 SWAP3
0x5f1 SWAP1
0x5f2 SWAP3
0x5f3 AND
0x5f4 SWAP2
0x5f5 SWAP1
0x5f6 SWAP2
0x5f7 OR
0x5f8 SWAP1
0x5f9 SSTORE
0x5fa JUMP
---
0x590: JUMPDEST 
0x591: V571 = 0x0
0x593: V572 = S[0x0]
0x594: V573 = 0x1
0x596: V574 = 0xa0
0x598: V575 = 0x2
0x59a: V576 = EXP 0x2 0xa0
0x59b: V577 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59e: V578 = AND V153 0xffffffffffffffffffffffffffffffffffffffff
0x5a0: V579 = AND V572 0xffffffffffffffffffffffffffffffffffffffff
0x5a1: V580 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x5c2: V581 = 0x40
0x5c4: V582 = M[0x40]
0x5c5: V583 = 0x40
0x5c7: V584 = M[0x40]
0x5ca: V585 = SUB V582 V584
0x5cc: LOG V584 V585 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V579 V578
0x5cd: V586 = 0x0
0x5d0: V587 = S[0x0]
0x5d1: V588 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e6: V589 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5e7: V590 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V587
0x5e8: V591 = 0x1
0x5ea: V592 = 0xa0
0x5ec: V593 = 0x2
0x5ee: V594 = EXP 0x2 0xa0
0x5ef: V595 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f3: V596 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x5f7: V597 = OR V596 V590
0x5f9: S[0x0] = V597
0x5fa: JUMP 0xae
---
Entry stack: [V13, 0xae, V153]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x5fb
[0x5fb:0x609]
---
Predecessors: [0x1c6]
Successors: [0x124]
---
0x5fb JUMPDEST
0x5fc PUSH1 0x1
0x5fe SLOAD
0x5ff PUSH1 0x1
0x601 PUSH1 0xa0
0x603 PUSH1 0x2
0x605 EXP
0x606 SUB
0x607 AND
0x608 DUP2
0x609 JUMP
---
0x5fb: JUMPDEST 
0x5fc: V598 = 0x1
0x5fe: V599 = S[0x1]
0x5ff: V600 = 0x1
0x601: V601 = 0xa0
0x603: V602 = 0x2
0x605: V603 = EXP 0x2 0xa0
0x606: V604 = SUB 0x10000000000000000000000000000000000000000 0x1
0x607: V605 = AND 0xffffffffffffffffffffffffffffffffffffffff V599
0x609: JUMP 0x124
---
Entry stack: [V13, 0x124]
Stack pops: 1
Stack additions: [S0, V605]
Exit stack: [V13, 0x124, V605]

================================

Block 0x60a
[0x60a:0x635]
---
Predecessors: []
Successors: []
---
0x60a STOP
0x60b LOG1
0x60c PUSH6 0x627a7a723058
0x613 SHA3
0x614 PUSH27 0x7c53699f7564020a9d0d46695be6c4aa72b205e26970ce167d6042
0x630 MISSING 0xcc
0x631 SELFDESTRUCT
0x632 MISSING 0xdd
0x633 MISSING 0xf6
0x634 STOP
0x635 MISSING 0x29
---
0x60a: STOP 
0x60b: LOG S0 S1 S2
0x60c: V606 = 0x627a7a723058
0x613: V607 = SHA3 0x627a7a723058 S3
0x614: V608 = 0x7c53699f7564020a9d0d46695be6c4aa72b205e26970ce167d6042
0x630: MISSING 0xcc
0x631: SELFDESTRUCT S0
0x632: MISSING 0xdd
0x633: MISSING 0xf6
0x634: STOP 
0x635: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x7c53699f7564020a9d0d46695be6c4aa72b205e26970ce167d6042, V607]
Exit stack: []

================================

Function 0:
Public function signature: 0x144fa6d7
Entry block: 0x8f
Exit block: 0xae
Body: 0x8f, 0x96, 0x9a, 0xae, 0x1ce, 0x1e5, 0x1e9, 0x1fa, 0x1fe

Function 1:
Public function signature: 0x2c4e722e
Entry block: 0xb0
Exit block: 0xc3
Body: 0xb0, 0xb7, 0xbb, 0xc3, 0x22d

Function 2:
Public function signature: 0x34fcf437
Entry block: 0xd5
Exit block: 0xae
Body: 0xae, 0xd5, 0xdc, 0xe0, 0x233, 0x24a, 0x24e, 0x256, 0x25a

Function 3:
Public function signature: 0x48c54b9d
Entry block: 0xeb
Exit block: 0xae
Body: 0xae, 0xeb, 0xf2, 0xf6, 0x25f, 0x276, 0x27a, 0x2e1, 0x2e5, 0x2f2, 0x2f6, 0x348, 0x34c, 0x359, 0x35d

Function 4:
Public function signature: 0x4e71d92d
Entry block: 0xfe
Exit block: 0xae
Body: 0xae, 0xfe, 0x105, 0x109, 0x369, 0x380, 0x384, 0x3b9, 0x3bd

Function 5:
Public function signature: 0x8da5cb5b
Entry block: 0x111
Exit block: 0x124
Body: 0x111, 0x118, 0x11c, 0x124, 0x3bf

Function 6:
Public function signature: 0xa6f2ae3a
Entry block: 0x140
Exit block: 0xae
Body: 0xae, 0x140, 0x3ce, 0x431, 0x435, 0x442, 0x446

Function 7:
Public function signature: 0xb95c2740
Entry block: 0x148
Exit block: 0xae
Body: 0xae, 0x148, 0x453, 0x4b6, 0x4ba, 0x4c7, 0x4cb, 0x4f2, 0x4fb, 0x50a, 0x51e, 0x537, 0x557, 0x55b

Function 8:
Public function signature: 0xf2fde38b
Entry block: 0x19c
Exit block: 0xae
Body: 0xae, 0x19c, 0x1a3, 0x1a7, 0x560, 0x577, 0x57b, 0x58c, 0x590

Function 9:
Public function signature: 0xfc0c546a
Entry block: 0x1bb
Exit block: 0x124
Body: 0x124, 0x1bb, 0x1c2, 0x1c6, 0x5fb

Function 10:
Public fallback function
Entry block: 0x8a
Exit block: 0x8a
Body: 0x8a

