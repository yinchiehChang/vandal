Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3ccfd60b
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3ccfd60b
0x3b: V13 = EQ V11 0x3ccfd60b
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x6b]
---
0x40 DUP1
0x41 PUSH4 0x54fd4d50
0x46 EQ
0x47 PUSH2 0x6b
0x4a JUMPI
---
0x41: V15 = 0x54fd4d50
0x46: V16 = EQ 0x54fd4d50 V11
0x47: V17 = 0x6b
0x4a: JUMPI 0x6b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xf5]
---
0x4b DUP1
0x4c PUSH4 0xb4a99a4e
0x51 EQ
0x52 PUSH2 0xf5
0x55 JUMPI
---
0x4c: V18 = 0xb4a99a4e
0x51: V19 = EQ 0xb4a99a4e V11
0x52: V20 = 0xf5
0x55: JUMPI 0xf5 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x124]
---
0x56 DUP1
0x57 PUSH4 0xe1661ff2
0x5c EQ
0x5d PUSH2 0x124
0x60 JUMPI
---
0x57: V21 = 0xe1661ff2
0x5c: V22 = EQ 0xe1661ff2 V11
0x5d: V23 = 0x124
0x60: JUMPI 0x124 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x18c, 0x224]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0xd]
Successors: [0x138]
---
0x63 JUMPDEST
0x64 PUSH2 0x61
0x67 PUSH2 0x138
0x6a JUMP
---
0x63: JUMPDEST 
0x64: V24 = 0x61
0x67: V25 = 0x138
0x6a: JUMP 0x138
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x6b
[0x6b:0x71]
---
Predecessors: [0x40]
Successors: [0x72, 0x76]
---
0x6b JUMPDEST
0x6c CALLVALUE
0x6d ISZERO
0x6e PUSH2 0x76
0x71 JUMPI
---
0x6b: JUMPDEST 
0x6c: V26 = CALLVALUE
0x6d: V27 = ISZERO V26
0x6e: V28 = 0x76
0x71: JUMPI 0x76 V27
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x75]
---
Predecessors: [0x6b]
Successors: []
---
0x72 PUSH1 0x0
0x74 DUP1
0x75 REVERT
---
0x72: V29 = 0x0
0x75: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x76
[0x76:0x7d]
---
Predecessors: [0x6b]
Successors: [0x18e]
---
0x76 JUMPDEST
0x77 PUSH2 0x7e
0x7a PUSH2 0x18e
0x7d JUMP
---
0x76: JUMPDEST 
0x77: V30 = 0x7e
0x7a: V31 = 0x18e
0x7d: JUMP 0x18e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7e]
Exit stack: [V11, 0x7e]

================================

Block 0x7e
[0x7e:0xa1]
---
Predecessors: [0x18e]
Successors: [0xa2]
---
0x7e JUMPDEST
0x7f PUSH1 0x40
0x81 MLOAD
0x82 PUSH1 0x20
0x84 DUP1
0x85 DUP3
0x86 MSTORE
0x87 DUP2
0x88 SWAP1
0x89 DUP2
0x8a ADD
0x8b DUP4
0x8c DUP2
0x8d DUP2
0x8e MLOAD
0x8f DUP2
0x90 MSTORE
0x91 PUSH1 0x20
0x93 ADD
0x94 SWAP2
0x95 POP
0x96 DUP1
0x97 MLOAD
0x98 SWAP1
0x99 PUSH1 0x20
0x9b ADD
0x9c SWAP1
0x9d DUP1
0x9e DUP4
0x9f DUP4
0xa0 PUSH1 0x0
---
0x7e: JUMPDEST 
0x7f: V32 = 0x40
0x81: V33 = M[0x40]
0x82: V34 = 0x20
0x86: M[V33] = 0x20
0x8a: V35 = ADD V33 0x20
0x8e: V36 = M[V140]
0x90: M[V35] = V36
0x91: V37 = 0x20
0x93: V38 = ADD 0x20 V35
0x97: V39 = M[V140]
0x99: V40 = 0x20
0x9b: V41 = ADD 0x20 V140
0xa0: V42 = 0x0
---
Entry stack: [V11, 0x7e, V140]
Stack pops: 1
Stack additions: [S0, V33, V33, V38, V41, V39, V39, V38, V41, 0x0]
Exit stack: [V11, 0x7e, V140, V33, V33, V38, V41, V39, V39, V38, V41, 0x0]

================================

Block 0xa2
[0xa2:0xaa]
---
Predecessors: [0x7e, 0xab]
Successors: [0xab, 0xba]
---
0xa2 JUMPDEST
0xa3 DUP4
0xa4 DUP2
0xa5 LT
0xa6 ISZERO
0xa7 PUSH2 0xba
0xaa JUMPI
---
0xa2: JUMPDEST 
0xa5: V43 = LT S0 V39
0xa6: V44 = ISZERO V43
0xa7: V45 = 0xba
0xaa: JUMPI 0xba V44
---
Entry stack: [V11, 0x7e, V140, V33, V33, V38, V41, V39, V39, V38, V41, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x7e, V140, V33, V33, V38, V41, V39, V39, V38, V41, S0]

================================

Block 0xab
[0xab:0xb9]
---
Predecessors: [0xa2]
Successors: [0xa2]
---
0xab DUP1
0xac DUP3
0xad ADD
0xae MLOAD
0xaf DUP4
0xb0 DUP3
0xb1 ADD
0xb2 MSTORE
0xb3 PUSH1 0x20
0xb5 ADD
0xb6 PUSH2 0xa2
0xb9 JUMP
---
0xad: V46 = ADD V41 S0
0xae: V47 = M[V46]
0xb1: V48 = ADD S0 V38
0xb2: M[V48] = V47
0xb3: V49 = 0x20
0xb5: V50 = ADD 0x20 S0
0xb6: V51 = 0xa2
0xb9: JUMP 0xa2
---
Entry stack: [V11, 0x7e, V140, V33, V33, V38, V41, V39, V39, V38, V41, S0]
Stack pops: 3
Stack additions: [S2, S1, V50]
Exit stack: [V11, 0x7e, V140, V33, V33, V38, V41, V39, V39, V38, V41, V50]

================================

Block 0xba
[0xba:0xcd]
---
Predecessors: [0xa2]
Successors: [0xce, 0xe7]
---
0xba JUMPDEST
0xbb POP
0xbc POP
0xbd POP
0xbe POP
0xbf SWAP1
0xc0 POP
0xc1 SWAP1
0xc2 DUP2
0xc3 ADD
0xc4 SWAP1
0xc5 PUSH1 0x1f
0xc7 AND
0xc8 DUP1
0xc9 ISZERO
0xca PUSH2 0xe7
0xcd JUMPI
---
0xba: JUMPDEST 
0xc3: V52 = ADD V39 V38
0xc5: V53 = 0x1f
0xc7: V54 = AND 0x1f V39
0xc9: V55 = ISZERO V54
0xca: V56 = 0xe7
0xcd: JUMPI 0xe7 V55
---
Entry stack: [V11, 0x7e, V140, V33, V33, V38, V41, V39, V39, V38, V41, S0]
Stack pops: 7
Stack additions: [V52, V54]
Exit stack: [V11, 0x7e, V140, V33, V33, V52, V54]

================================

Block 0xce
[0xce:0xe6]
---
Predecessors: [0xba]
Successors: [0xe7]
---
0xce DUP1
0xcf DUP3
0xd0 SUB
0xd1 DUP1
0xd2 MLOAD
0xd3 PUSH1 0x1
0xd5 DUP4
0xd6 PUSH1 0x20
0xd8 SUB
0xd9 PUSH2 0x100
0xdc EXP
0xdd SUB
0xde NOT
0xdf AND
0xe0 DUP2
0xe1 MSTORE
0xe2 PUSH1 0x20
0xe4 ADD
0xe5 SWAP2
0xe6 POP
---
0xd0: V57 = SUB V52 V54
0xd2: V58 = M[V57]
0xd3: V59 = 0x1
0xd6: V60 = 0x20
0xd8: V61 = SUB 0x20 V54
0xd9: V62 = 0x100
0xdc: V63 = EXP 0x100 V61
0xdd: V64 = SUB V63 0x1
0xde: V65 = NOT V64
0xdf: V66 = AND V65 V58
0xe1: M[V57] = V66
0xe2: V67 = 0x20
0xe4: V68 = ADD 0x20 V57
---
Entry stack: [V11, 0x7e, V140, V33, V33, V52, V54]
Stack pops: 2
Stack additions: [V68, S0]
Exit stack: [V11, 0x7e, V140, V33, V33, V68, V54]

================================

Block 0xe7
[0xe7:0xf4]
---
Predecessors: [0xba, 0xce]
Successors: []
---
0xe7 JUMPDEST
0xe8 POP
0xe9 SWAP3
0xea POP
0xeb POP
0xec POP
0xed PUSH1 0x40
0xef MLOAD
0xf0 DUP1
0xf1 SWAP2
0xf2 SUB
0xf3 SWAP1
0xf4 RETURN
---
0xe7: JUMPDEST 
0xed: V69 = 0x40
0xef: V70 = M[0x40]
0xf2: V71 = SUB S1 V70
0xf4: RETURN V70 V71
---
Entry stack: [V11, 0x7e, V140, V33, V33, S1, V54]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x7e]

================================

Block 0xf5
[0xf5:0xfb]
---
Predecessors: [0x4b]
Successors: [0xfc, 0x100]
---
0xf5 JUMPDEST
0xf6 CALLVALUE
0xf7 ISZERO
0xf8 PUSH2 0x100
0xfb JUMPI
---
0xf5: JUMPDEST 
0xf6: V72 = CALLVALUE
0xf7: V73 = ISZERO V72
0xf8: V74 = 0x100
0xfb: JUMPI 0x100 V73
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfc
[0xfc:0xff]
---
Predecessors: [0xf5]
Successors: []
---
0xfc PUSH1 0x0
0xfe DUP1
0xff REVERT
---
0xfc: V75 = 0x0
0xff: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x100
[0x100:0x107]
---
Predecessors: [0xf5]
Successors: [0x1c5]
---
0x100 JUMPDEST
0x101 PUSH2 0x108
0x104 PUSH2 0x1c5
0x107 JUMP
---
0x100: JUMPDEST 
0x101: V76 = 0x108
0x104: V77 = 0x1c5
0x107: JUMP 0x1c5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x108]
Exit stack: [V11, 0x108]

================================

Block 0x108
[0x108:0x123]
---
Predecessors: [0x1c5]
Successors: []
---
0x108 JUMPDEST
0x109 PUSH1 0x40
0x10b MLOAD
0x10c PUSH1 0x1
0x10e PUSH1 0xa0
0x110 PUSH1 0x2
0x112 EXP
0x113 SUB
0x114 SWAP1
0x115 SWAP2
0x116 AND
0x117 DUP2
0x118 MSTORE
0x119 PUSH1 0x20
0x11b ADD
0x11c PUSH1 0x40
0x11e MLOAD
0x11f DUP1
0x120 SWAP2
0x121 SUB
0x122 SWAP1
0x123 RETURN
---
0x108: JUMPDEST 
0x109: V78 = 0x40
0x10b: V79 = M[0x40]
0x10c: V80 = 0x1
0x10e: V81 = 0xa0
0x110: V82 = 0x2
0x112: V83 = EXP 0x2 0xa0
0x113: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0x116: V85 = AND V154 0xffffffffffffffffffffffffffffffffffffffff
0x118: M[V79] = V85
0x119: V86 = 0x20
0x11b: V87 = ADD 0x20 V79
0x11c: V88 = 0x40
0x11e: V89 = M[0x40]
0x121: V90 = SUB V87 V89
0x123: RETURN V89 V90
---
Entry stack: [V11, 0x108, V154]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x108]

================================

Block 0x124
[0x124:0x137]
---
Predecessors: [0x56]
Successors: [0x1d4]
---
0x124 JUMPDEST
0x125 PUSH2 0x61
0x128 PUSH1 0x1
0x12a PUSH1 0xa0
0x12c PUSH1 0x2
0x12e EXP
0x12f SUB
0x130 PUSH1 0x4
0x132 CALLDATALOAD
0x133 AND
0x134 PUSH2 0x1d4
0x137 JUMP
---
0x124: JUMPDEST 
0x125: V91 = 0x61
0x128: V92 = 0x1
0x12a: V93 = 0xa0
0x12c: V94 = 0x2
0x12e: V95 = EXP 0x2 0xa0
0x12f: V96 = SUB 0x10000000000000000000000000000000000000000 0x1
0x130: V97 = 0x4
0x132: V98 = CALLDATALOAD 0x4
0x133: V99 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x134: V100 = 0x1d4
0x137: JUMP 0x1d4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, V99]
Exit stack: [V11, 0x61, V99]

================================

Block 0x138
[0x138:0x14e]
---
Predecessors: [0x63]
Successors: [0x14f, 0x153]
---
0x138 JUMPDEST
0x139 PUSH1 0x0
0x13b SLOAD
0x13c CALLER
0x13d PUSH1 0x1
0x13f PUSH1 0xa0
0x141 PUSH1 0x2
0x143 EXP
0x144 SUB
0x145 SWAP1
0x146 DUP2
0x147 AND
0x148 SWAP2
0x149 AND
0x14a EQ
0x14b PUSH2 0x153
0x14e JUMPI
---
0x138: JUMPDEST 
0x139: V101 = 0x0
0x13b: V102 = S[0x0]
0x13c: V103 = CALLER
0x13d: V104 = 0x1
0x13f: V105 = 0xa0
0x141: V106 = 0x2
0x143: V107 = EXP 0x2 0xa0
0x144: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x147: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x149: V110 = AND V102 0xffffffffffffffffffffffffffffffffffffffff
0x14a: V111 = EQ V110 V109
0x14b: V112 = 0x153
0x14e: JUMPI 0x153 V111
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x14f
[0x14f:0x152]
---
Predecessors: [0x138]
Successors: []
---
0x14f PUSH1 0x0
0x151 DUP1
0x152 REVERT
---
0x14f: V113 = 0x0
0x152: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x153
[0x153:0x187]
---
Predecessors: [0x138]
Successors: [0x188, 0x18c]
---
0x153 JUMPDEST
0x154 PUSH1 0x0
0x156 SLOAD
0x157 PUSH1 0x1
0x159 PUSH1 0xa0
0x15b PUSH1 0x2
0x15d EXP
0x15e SUB
0x15f SWAP1
0x160 DUP2
0x161 AND
0x162 SWAP1
0x163 ADDRESS
0x164 AND
0x165 BALANCE
0x166 DUP1
0x167 ISZERO
0x168 PUSH2 0x8fc
0x16b MUL
0x16c SWAP1
0x16d PUSH1 0x40
0x16f MLOAD
0x170 PUSH1 0x0
0x172 PUSH1 0x40
0x174 MLOAD
0x175 DUP1
0x176 DUP4
0x177 SUB
0x178 DUP2
0x179 DUP6
0x17a DUP9
0x17b DUP9
0x17c CALL
0x17d SWAP4
0x17e POP
0x17f POP
0x180 POP
0x181 POP
0x182 ISZERO
0x183 ISZERO
0x184 PUSH2 0x18c
0x187 JUMPI
---
0x153: JUMPDEST 
0x154: V114 = 0x0
0x156: V115 = S[0x0]
0x157: V116 = 0x1
0x159: V117 = 0xa0
0x15b: V118 = 0x2
0x15d: V119 = EXP 0x2 0xa0
0x15e: V120 = SUB 0x10000000000000000000000000000000000000000 0x1
0x161: V121 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x163: V122 = ADDRESS
0x164: V123 = AND V122 0xffffffffffffffffffffffffffffffffffffffff
0x165: V124 = BALANCE V123
0x167: V125 = ISZERO V124
0x168: V126 = 0x8fc
0x16b: V127 = MUL 0x8fc V125
0x16d: V128 = 0x40
0x16f: V129 = M[0x40]
0x170: V130 = 0x0
0x172: V131 = 0x40
0x174: V132 = M[0x40]
0x177: V133 = SUB V129 V132
0x17c: V134 = CALL V127 V121 V124 V132 V133 V132 0x0
0x182: V135 = ISZERO V134
0x183: V136 = ISZERO V135
0x184: V137 = 0x18c
0x187: JUMPI 0x18c V136
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x188
[0x188:0x18b]
---
Predecessors: [0x153]
Successors: []
---
0x188 PUSH1 0x0
0x18a DUP1
0x18b REVERT
---
0x188: V138 = 0x0
0x18b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x18c
[0x18c:0x18d]
---
Predecessors: [0x153]
Successors: [0x61]
---
0x18c JUMPDEST
0x18d JUMP
---
0x18c: JUMPDEST 
0x18d: JUMP 0x61
---
Entry stack: [V11, 0x61]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x18e
[0x18e:0x1c4]
---
Predecessors: [0x76]
Successors: [0x7e]
---
0x18e JUMPDEST
0x18f PUSH1 0x40
0x191 DUP1
0x192 MLOAD
0x193 SWAP1
0x194 DUP2
0x195 ADD
0x196 PUSH1 0x40
0x198 MSTORE
0x199 PUSH1 0x3
0x19b DUP2
0x19c MSTORE
0x19d PUSH32 0x312e300000000000000000000000000000000000000000000000000000000000
0x1be PUSH1 0x20
0x1c0 DUP3
0x1c1 ADD
0x1c2 MSTORE
0x1c3 DUP2
0x1c4 JUMP
---
0x18e: JUMPDEST 
0x18f: V139 = 0x40
0x192: V140 = M[0x40]
0x195: V141 = ADD V140 0x40
0x196: V142 = 0x40
0x198: M[0x40] = V141
0x199: V143 = 0x3
0x19c: M[V140] = 0x3
0x19d: V144 = 0x312e300000000000000000000000000000000000000000000000000000000000
0x1be: V145 = 0x20
0x1c1: V146 = ADD V140 0x20
0x1c2: M[V146] = 0x312e300000000000000000000000000000000000000000000000000000000000
0x1c4: JUMP 0x7e
---
Entry stack: [V11, 0x7e]
Stack pops: 1
Stack additions: [S0, V140]
Exit stack: [V11, 0x7e, V140]

================================

Block 0x1c5
[0x1c5:0x1d3]
---
Predecessors: [0x100]
Successors: [0x108]
---
0x1c5 JUMPDEST
0x1c6 PUSH1 0x0
0x1c8 SLOAD
0x1c9 PUSH1 0x1
0x1cb PUSH1 0xa0
0x1cd PUSH1 0x2
0x1cf EXP
0x1d0 SUB
0x1d1 AND
0x1d2 DUP2
0x1d3 JUMP
---
0x1c5: JUMPDEST 
0x1c6: V147 = 0x0
0x1c8: V148 = S[0x0]
0x1c9: V149 = 0x1
0x1cb: V150 = 0xa0
0x1cd: V151 = 0x2
0x1cf: V152 = EXP 0x2 0xa0
0x1d0: V153 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d1: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x1d3: JUMP 0x108
---
Entry stack: [V11, 0x108]
Stack pops: 1
Stack additions: [S0, V154]
Exit stack: [V11, 0x108, V154]

================================

Block 0x1d4
[0x1d4:0x1e5]
---
Predecessors: [0x124]
Successors: [0x1e6, 0x224]
---
0x1d4 JUMPDEST
0x1d5 PUSH1 0x1
0x1d7 PUSH1 0xa0
0x1d9 PUSH1 0x2
0x1db EXP
0x1dc SUB
0x1dd ADDRESS
0x1de AND
0x1df BALANCE
0x1e0 CALLVALUE
0x1e1 LT
0x1e2 PUSH2 0x224
0x1e5 JUMPI
---
0x1d4: JUMPDEST 
0x1d5: V155 = 0x1
0x1d7: V156 = 0xa0
0x1d9: V157 = 0x2
0x1db: V158 = EXP 0x2 0xa0
0x1dc: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1dd: V160 = ADDRESS
0x1de: V161 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x1df: V162 = BALANCE V161
0x1e0: V163 = CALLVALUE
0x1e1: V164 = LT V163 V162
0x1e2: V165 = 0x224
0x1e5: JUMPI 0x224 V164
---
Entry stack: [V11, 0x61, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V99]

================================

Block 0x1e6
[0x1e6:0x21f]
---
Predecessors: [0x1d4]
Successors: [0x220, 0x224]
---
0x1e6 DUP1
0x1e7 PUSH1 0x1
0x1e9 PUSH1 0xa0
0x1eb PUSH1 0x2
0x1ed EXP
0x1ee SUB
0x1ef AND
0x1f0 PUSH2 0x8fc
0x1f3 CALLVALUE
0x1f4 ADDRESS
0x1f5 PUSH1 0x1
0x1f7 PUSH1 0xa0
0x1f9 PUSH1 0x2
0x1fb EXP
0x1fc SUB
0x1fd AND
0x1fe BALANCE
0x1ff ADD
0x200 SWAP1
0x201 DUP2
0x202 ISZERO
0x203 MUL
0x204 SWAP1
0x205 PUSH1 0x40
0x207 MLOAD
0x208 PUSH1 0x0
0x20a PUSH1 0x40
0x20c MLOAD
0x20d DUP1
0x20e DUP4
0x20f SUB
0x210 DUP2
0x211 DUP6
0x212 DUP9
0x213 DUP9
0x214 CALL
0x215 SWAP4
0x216 POP
0x217 POP
0x218 POP
0x219 POP
0x21a ISZERO
0x21b ISZERO
0x21c PUSH2 0x224
0x21f JUMPI
---
0x1e7: V166 = 0x1
0x1e9: V167 = 0xa0
0x1eb: V168 = 0x2
0x1ed: V169 = EXP 0x2 0xa0
0x1ee: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ef: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x1f0: V172 = 0x8fc
0x1f3: V173 = CALLVALUE
0x1f4: V174 = ADDRESS
0x1f5: V175 = 0x1
0x1f7: V176 = 0xa0
0x1f9: V177 = 0x2
0x1fb: V178 = EXP 0x2 0xa0
0x1fc: V179 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fd: V180 = AND 0xffffffffffffffffffffffffffffffffffffffff V174
0x1fe: V181 = BALANCE V180
0x1ff: V182 = ADD V181 V173
0x202: V183 = ISZERO V182
0x203: V184 = MUL V183 0x8fc
0x205: V185 = 0x40
0x207: V186 = M[0x40]
0x208: V187 = 0x0
0x20a: V188 = 0x40
0x20c: V189 = M[0x40]
0x20f: V190 = SUB V186 V189
0x214: V191 = CALL V184 V171 V182 V189 V190 V189 0x0
0x21a: V192 = ISZERO V191
0x21b: V193 = ISZERO V192
0x21c: V194 = 0x224
0x21f: JUMPI 0x224 V193
---
Entry stack: [V11, 0x61, V99]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x61, V99]

================================

Block 0x220
[0x220:0x223]
---
Predecessors: [0x1e6]
Successors: []
---
0x220 PUSH1 0x0
0x222 DUP1
0x223 REVERT
---
0x220: V195 = 0x0
0x223: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V99]

================================

Block 0x224
[0x224:0x226]
---
Predecessors: [0x1d4, 0x1e6]
Successors: [0x61]
---
0x224 JUMPDEST
0x225 POP
0x226 JUMP
---
0x224: JUMPDEST 
0x226: JUMP 0x61
---
Entry stack: [V11, 0x61, V99]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x227
[0x227:0x234]
---
Predecessors: []
Successors: [0x235]
---
0x227 STOP
0x228 LOG1
0x229 PUSH6 0x627a7a723058
0x230 SHA3
0x231 MOD
0x232 TIMESTAMP
0x233 SWAP7
0x234 MULMOD
---
0x227: STOP 
0x228: LOG S0 S1 S2
0x229: V196 = 0x627a7a723058
0x230: V197 = SHA3 0x627a7a723058 S3
0x231: V198 = MOD V197 S4
0x232: V199 = TIMESTAMP
0x234: V200 = MULMOD S10 V198 S5
---
Entry stack: []
Stack pops: 0
Stack additions: [V200, S6, S7, S8, S9, V199]
Exit stack: []

================================

Block 0x235
[0x235:0x262]
---
Predecessors: [0x227]
Successors: []
---
0x235 JUMPDEST
0x236 MISSING 0x2d
0x237 BALANCE
0x238 MULMOD
0x239 MISSING 0x21
0x23a SWAP8
0x23b MISSING 0xc9
0x23c MISSING 0xe3
0x23d CALLDATASIZE
0x23e MISSING 0xd8
0x23f ISZERO
0x240 SWAP1
0x241 DUP16
0x242 MISSING 0xd7
0x243 MISSING 0xe1
0x244 MISSING 0x28
0x245 MISSING 0xb7
0x246 MULMOD
0x247 EXP
0x248 MISSING 0x5d
0x249 PUSH25 0xc3244376da99a60029
---
0x235: JUMPDEST 
0x236: MISSING 0x2d
0x237: V201 = BALANCE S0
0x238: V202 = MULMOD V201 S1 S2
0x239: MISSING 0x21
0x23b: MISSING 0xc9
0x23c: MISSING 0xe3
0x23d: V203 = CALLDATASIZE
0x23e: MISSING 0xd8
0x23f: V204 = ISZERO S0
0x242: MISSING 0xd7
0x243: MISSING 0xe1
0x244: MISSING 0x28
0x245: MISSING 0xb7
0x246: V205 = MULMOD S0 S1 S2
0x247: V206 = EXP V205 S3
0x248: MISSING 0x5d
0x249: V207 = 0xc3244376da99a60029
---
Entry stack: [V199, S4, S3, S2, S1, V200]
Stack pops: 0
Stack additions: [V202, S8, S1, S2, S3, S4, S5, S6, S7, S0, V203, S15, S1, V204, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V206, 0xc3244376da99a60029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x63
Exit block: 0x61
Body: 0x61, 0x63, 0x138, 0x14f, 0x153, 0x188, 0x18c

Function 1:
Public function signature: 0x54fd4d50
Entry block: 0x6b
Exit block: 0xe7
Body: 0x6b, 0x72, 0x76, 0x7e, 0xa2, 0xab, 0xba, 0xce, 0xe7, 0x18e

Function 2:
Public function signature: 0xb4a99a4e
Entry block: 0xf5
Exit block: 0x108
Body: 0xf5, 0xfc, 0x100, 0x108, 0x1c5

Function 3:
Public function signature: 0xe1661ff2
Entry block: 0x124
Exit block: 0x61
Body: 0x61, 0x124, 0x1d4, 0x1e6, 0x220, 0x224

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

