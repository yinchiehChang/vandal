Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x77]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2e1a7d4d
0x3c EQ
0x3d PUSH2 0x77
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2e1a7d4d
0x3c: V13 = EQ 0x2e1a7d4d V11
0x3d: V14 = 0x77
0x40: JUMPI 0x77 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x9a]
---
0x41 DUP1
0x42 PUSH4 0x85511d5f
0x47 EQ
0x48 PUSH2 0x9a
0x4b JUMPI
---
0x42: V15 = 0x85511d5f
0x47: V16 = EQ 0x85511d5f V11
0x48: V17 = 0x9a
0x4b: JUMPI 0x9a V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xc6]
---
0x4c DUP1
0x4d PUSH4 0x8da5cb5b
0x52 EQ
0x53 PUSH2 0xc6
0x56 JUMPI
---
0x4d: V18 = 0x8da5cb5b
0x52: V19 = EQ 0x8da5cb5b V11
0x53: V20 = 0xc6
0x56: JUMPI 0xc6 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x11b]
---
0x57 DUP1
0x58 PUSH4 0xa70f101c
0x5d EQ
0x5e PUSH2 0x11b
0x61 JUMPI
---
0x58: V21 = 0xa70f101c
0x5d: V22 = EQ 0xa70f101c V11
0x5e: V23 = 0x11b
0x61: JUMPI 0x11b V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x133]
---
0x62 DUP1
0x63 PUSH4 0xd0e30db0
0x68 EQ
0x69 PUSH2 0x133
0x6c JUMPI
---
0x63: V24 = 0xd0e30db0
0x68: V25 = EQ 0xd0e30db0 V11
0x69: V26 = 0x133
0x6c: JUMPI 0x133 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x74]
---
Predecessors: [0x0, 0x62]
Successors: [0x13d]
---
0x6d JUMPDEST
0x6e PUSH2 0x75
0x71 PUSH2 0x13d
0x74 JUMP
---
0x6d: JUMPDEST 
0x6e: V27 = 0x75
0x71: V28 = 0x13d
0x74: JUMP 0x13d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x75]
Exit stack: [V11, 0x75]

================================

Block 0x75
[0x75:0x76]
---
Predecessors: [0x14c]
Successors: []
---
0x75 JUMPDEST
0x76 STOP
---
0x75: JUMPDEST 
0x76: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x77
[0x77:0x7d]
---
Predecessors: [0xd]
Successors: [0x7e, 0x82]
---
0x77 JUMPDEST
0x78 CALLVALUE
0x79 ISZERO
0x7a PUSH2 0x82
0x7d JUMPI
---
0x77: JUMPDEST 
0x78: V29 = CALLVALUE
0x79: V30 = ISZERO V29
0x7a: V31 = 0x82
0x7d: JUMPI 0x82 V30
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7e
[0x7e:0x81]
---
Predecessors: [0x77]
Successors: []
---
0x7e PUSH1 0x0
0x80 DUP1
0x81 REVERT
---
0x7e: V32 = 0x0
0x81: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x82
[0x82:0x97]
---
Predecessors: [0x77]
Successors: [0x1b9]
---
0x82 JUMPDEST
0x83 PUSH2 0x98
0x86 PUSH1 0x4
0x88 DUP1
0x89 DUP1
0x8a CALLDATALOAD
0x8b SWAP1
0x8c PUSH1 0x20
0x8e ADD
0x8f SWAP1
0x90 SWAP2
0x91 SWAP1
0x92 POP
0x93 POP
0x94 PUSH2 0x1b9
0x97 JUMP
---
0x82: JUMPDEST 
0x83: V33 = 0x98
0x86: V34 = 0x4
0x8a: V35 = CALLDATALOAD 0x4
0x8c: V36 = 0x20
0x8e: V37 = ADD 0x20 0x4
0x94: V38 = 0x1b9
0x97: JUMP 0x1b9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x98, V35]
Exit stack: [V11, 0x98, V35]

================================

Block 0x98
[0x98:0x99]
---
Predecessors: [0x27a]
Successors: []
---
0x98 JUMPDEST
0x99 STOP
---
0x98: JUMPDEST 
0x99: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9a
[0x9a:0xa0]
---
Predecessors: [0x41]
Successors: [0xa1, 0xa5]
---
0x9a JUMPDEST
0x9b CALLVALUE
0x9c ISZERO
0x9d PUSH2 0xa5
0xa0 JUMPI
---
0x9a: JUMPDEST 
0x9b: V39 = CALLVALUE
0x9c: V40 = ISZERO V39
0x9d: V41 = 0xa5
0xa0: JUMPI 0xa5 V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa1
[0xa1:0xa4]
---
Predecessors: [0x9a]
Successors: []
---
0xa1 PUSH1 0x0
0xa3 DUP1
0xa4 REVERT
---
0xa1: V42 = 0x0
0xa4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa5
[0xa5:0xc3]
---
Predecessors: [0x9a]
Successors: [0x27d]
---
0xa5 JUMPDEST
0xa6 PUSH2 0xc4
0xa9 PUSH1 0x4
0xab DUP1
0xac DUP1
0xad CALLDATALOAD
0xae SWAP1
0xaf PUSH1 0x20
0xb1 ADD
0xb2 SWAP1
0xb3 SWAP2
0xb4 SWAP1
0xb5 DUP1
0xb6 CALLDATALOAD
0xb7 SWAP1
0xb8 PUSH1 0x20
0xba ADD
0xbb SWAP1
0xbc SWAP2
0xbd SWAP1
0xbe POP
0xbf POP
0xc0 PUSH2 0x27d
0xc3 JUMP
---
0xa5: JUMPDEST 
0xa6: V43 = 0xc4
0xa9: V44 = 0x4
0xad: V45 = CALLDATALOAD 0x4
0xaf: V46 = 0x20
0xb1: V47 = ADD 0x20 0x4
0xb6: V48 = CALLDATALOAD 0x24
0xb8: V49 = 0x20
0xba: V50 = ADD 0x20 0x24
0xc0: V51 = 0x27d
0xc3: JUMP 0x27d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc4, V45, V48]
Exit stack: [V11, 0xc4, V45, V48]

================================

Block 0xc4
[0xc4:0xc5]
---
Predecessors: [0x2d8]
Successors: []
---
0xc4 JUMPDEST
0xc5 STOP
---
0xc4: JUMPDEST 
0xc5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc6
[0xc6:0xcc]
---
Predecessors: [0x4c]
Successors: [0xcd, 0xd1]
---
0xc6 JUMPDEST
0xc7 CALLVALUE
0xc8 ISZERO
0xc9 PUSH2 0xd1
0xcc JUMPI
---
0xc6: JUMPDEST 
0xc7: V52 = CALLVALUE
0xc8: V53 = ISZERO V52
0xc9: V54 = 0xd1
0xcc: JUMPI 0xd1 V53
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0xc6]
Successors: []
---
0xcd PUSH1 0x0
0xcf DUP1
0xd0 REVERT
---
0xcd: V55 = 0x0
0xd0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd1
[0xd1:0xd8]
---
Predecessors: [0xc6]
Successors: [0x2ea]
---
0xd1 JUMPDEST
0xd2 PUSH2 0xd9
0xd5 PUSH2 0x2ea
0xd8 JUMP
---
0xd1: JUMPDEST 
0xd2: V56 = 0xd9
0xd5: V57 = 0x2ea
0xd8: JUMP 0x2ea
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd9]
Exit stack: [V11, 0xd9]

================================

Block 0xd9
[0xd9:0x11a]
---
Predecessors: [0x2ea]
Successors: []
---
0xd9 JUMPDEST
0xda PUSH1 0x40
0xdc MLOAD
0xdd DUP1
0xde DUP3
0xdf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf4 AND
0xf5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10a AND
0x10b DUP2
0x10c MSTORE
0x10d PUSH1 0x20
0x10f ADD
0x110 SWAP2
0x111 POP
0x112 POP
0x113 PUSH1 0x40
0x115 MLOAD
0x116 DUP1
0x117 SWAP2
0x118 SUB
0x119 SWAP1
0x11a RETURN
---
0xd9: JUMPDEST 
0xda: V58 = 0x40
0xdc: V59 = M[0x40]
0xdf: V60 = 0xffffffffffffffffffffffffffffffffffffffff
0xf4: V61 = AND 0xffffffffffffffffffffffffffffffffffffffff V170
0xf5: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x10a: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x10c: M[V59] = V63
0x10d: V64 = 0x20
0x10f: V65 = ADD 0x20 V59
0x113: V66 = 0x40
0x115: V67 = M[0x40]
0x118: V68 = SUB V65 V67
0x11a: RETURN V67 V68
---
Entry stack: [V11, 0xd9, V170]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd9]

================================

Block 0x11b
[0x11b:0x130]
---
Predecessors: [0x57]
Successors: [0x310]
---
0x11b JUMPDEST
0x11c PUSH2 0x131
0x11f PUSH1 0x4
0x121 DUP1
0x122 DUP1
0x123 CALLDATALOAD
0x124 SWAP1
0x125 PUSH1 0x20
0x127 ADD
0x128 SWAP1
0x129 SWAP2
0x12a SWAP1
0x12b POP
0x12c POP
0x12d PUSH2 0x310
0x130 JUMP
---
0x11b: JUMPDEST 
0x11c: V69 = 0x131
0x11f: V70 = 0x4
0x123: V71 = CALLDATALOAD 0x4
0x125: V72 = 0x20
0x127: V73 = ADD 0x20 0x4
0x12d: V74 = 0x310
0x130: JUMP 0x310
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x131, V71]
Exit stack: [V11, 0x131, V71]

================================

Block 0x131
[0x131:0x132]
---
Predecessors: [0x369]
Successors: []
---
0x131 JUMPDEST
0x132 STOP
---
0x131: JUMPDEST 
0x132: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x133
[0x133:0x13a]
---
Predecessors: [0x62]
Successors: [0x13d]
---
0x133 JUMPDEST
0x134 PUSH2 0x13b
0x137 PUSH2 0x13d
0x13a JUMP
---
0x133: JUMPDEST 
0x134: V75 = 0x13b
0x137: V76 = 0x13d
0x13a: JUMP 0x13d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x13b]
Exit stack: [V11, 0x13b]

================================

Block 0x13b
[0x13b:0x13c]
---
Predecessors: [0x14c]
Successors: []
---
0x13b JUMPDEST
0x13c STOP
---
0x13b: JUMPDEST 
0x13c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x13d
[0x13d:0x147]
---
Predecessors: [0x6d, 0x133]
Successors: [0x148, 0x14c]
---
0x13d JUMPDEST
0x13e PUSH1 0x0
0x140 CALLVALUE
0x141 GT
0x142 ISZERO
0x143 ISZERO
0x144 PUSH2 0x14c
0x147 JUMPI
---
0x13d: JUMPDEST 
0x13e: V77 = 0x0
0x140: V78 = CALLVALUE
0x141: V79 = GT V78 0x0
0x142: V80 = ISZERO V79
0x143: V81 = ISZERO V80
0x144: V82 = 0x14c
0x147: JUMPI 0x14c V81
---
Entry stack: [V11, {0x75, 0x13b}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x75, 0x13b}]

================================

Block 0x148
[0x148:0x14b]
---
Predecessors: [0x13d]
Successors: []
---
0x148 PUSH1 0x0
0x14a DUP1
0x14b REVERT
---
0x148: V83 = 0x0
0x14b: REVERT 0x0 0x0
---
Entry stack: [V11, {0x75, 0x13b}]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0x75, 0x13b}]

================================

Block 0x14c
[0x14c:0x1b8]
---
Predecessors: [0x13d]
Successors: [0x75, 0x13b]
---
0x14c JUMPDEST
0x14d PUSH32 0xd2cad255828c6a11390781271ed9c840b1e7bb3828e52f54ade2e47e921c1a94
0x16e CALLER
0x16f CALLVALUE
0x170 PUSH1 0x40
0x172 MLOAD
0x173 DUP1
0x174 DUP4
0x175 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18a AND
0x18b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a0 AND
0x1a1 DUP2
0x1a2 MSTORE
0x1a3 PUSH1 0x20
0x1a5 ADD
0x1a6 DUP3
0x1a7 DUP2
0x1a8 MSTORE
0x1a9 PUSH1 0x20
0x1ab ADD
0x1ac SWAP3
0x1ad POP
0x1ae POP
0x1af POP
0x1b0 PUSH1 0x40
0x1b2 MLOAD
0x1b3 DUP1
0x1b4 SWAP2
0x1b5 SUB
0x1b6 SWAP1
0x1b7 LOG1
0x1b8 JUMP
---
0x14c: JUMPDEST 
0x14d: V84 = 0xd2cad255828c6a11390781271ed9c840b1e7bb3828e52f54ade2e47e921c1a94
0x16e: V85 = CALLER
0x16f: V86 = CALLVALUE
0x170: V87 = 0x40
0x172: V88 = M[0x40]
0x175: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V85
0x18b: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x1a2: M[V88] = V92
0x1a3: V93 = 0x20
0x1a5: V94 = ADD 0x20 V88
0x1a8: M[V94] = V86
0x1a9: V95 = 0x20
0x1ab: V96 = ADD 0x20 V94
0x1b0: V97 = 0x40
0x1b2: V98 = M[0x40]
0x1b5: V99 = SUB V96 V98
0x1b7: LOG V98 V99 0xd2cad255828c6a11390781271ed9c840b1e7bb3828e52f54ade2e47e921c1a94
0x1b8: JUMP {0x75, 0x13b}
---
Entry stack: [V11, {0x75, 0x13b}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b9
[0x1b9:0x20f]
---
Predecessors: [0x82]
Successors: [0x210, 0x214]
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x0
0x1bc DUP1
0x1bd SWAP1
0x1be SLOAD
0x1bf SWAP1
0x1c0 PUSH2 0x100
0x1c3 EXP
0x1c4 SWAP1
0x1c5 DIV
0x1c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1db AND
0x1dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f1 AND
0x1f2 CALLER
0x1f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x208 AND
0x209 EQ
0x20a ISZERO
0x20b ISZERO
0x20c PUSH2 0x214
0x20f JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V100 = 0x0
0x1be: V101 = S[0x0]
0x1c0: V102 = 0x100
0x1c3: V103 = EXP 0x100 0x0
0x1c5: V104 = DIV V101 0x1
0x1c6: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1dc: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f1: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1f2: V109 = CALLER
0x1f3: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x208: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x209: V112 = EQ V111 V108
0x20a: V113 = ISZERO V112
0x20b: V114 = ISZERO V113
0x20c: V115 = 0x214
0x20f: JUMPI 0x214 V114
---
Entry stack: [V11, 0x98, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98, V35]

================================

Block 0x210
[0x210:0x213]
---
Predecessors: [0x1b9]
Successors: []
---
0x210 PUSH1 0x0
0x212 DUP1
0x213 REVERT
---
0x210: V116 = 0x0
0x213: REVERT 0x0 0x0
---
Entry stack: [V11, 0x98, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98, V35]

================================

Block 0x214
[0x214:0x235]
---
Predecessors: [0x1b9]
Successors: [0x236, 0x23a]
---
0x214 JUMPDEST
0x215 ADDRESS
0x216 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22b AND
0x22c BALANCE
0x22d DUP2
0x22e GT
0x22f ISZERO
0x230 ISZERO
0x231 ISZERO
0x232 PUSH2 0x23a
0x235 JUMPI
---
0x214: JUMPDEST 
0x215: V117 = ADDRESS
0x216: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x22b: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V117
0x22c: V120 = BALANCE V119
0x22e: V121 = GT V35 V120
0x22f: V122 = ISZERO V121
0x230: V123 = ISZERO V122
0x231: V124 = ISZERO V123
0x232: V125 = 0x23a
0x235: JUMPI 0x23a V124
---
Entry stack: [V11, 0x98, V35]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x98, V35]

================================

Block 0x236
[0x236:0x239]
---
Predecessors: [0x214]
Successors: []
---
0x236 PUSH1 0x0
0x238 DUP1
0x239 REVERT
---
0x236: V126 = 0x0
0x239: REVERT 0x0 0x0
---
Entry stack: [V11, 0x98, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98, V35]

================================

Block 0x23a
[0x23a:0x275]
---
Predecessors: [0x214]
Successors: [0x276, 0x27a]
---
0x23a JUMPDEST
0x23b CALLER
0x23c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x251 AND
0x252 PUSH2 0x8fc
0x255 DUP3
0x256 SWAP1
0x257 DUP2
0x258 ISZERO
0x259 MUL
0x25a SWAP1
0x25b PUSH1 0x40
0x25d MLOAD
0x25e PUSH1 0x0
0x260 PUSH1 0x40
0x262 MLOAD
0x263 DUP1
0x264 DUP4
0x265 SUB
0x266 DUP2
0x267 DUP6
0x268 DUP9
0x269 DUP9
0x26a CALL
0x26b SWAP4
0x26c POP
0x26d POP
0x26e POP
0x26f POP
0x270 ISZERO
0x271 ISZERO
0x272 PUSH2 0x27a
0x275 JUMPI
---
0x23a: JUMPDEST 
0x23b: V127 = CALLER
0x23c: V128 = 0xffffffffffffffffffffffffffffffffffffffff
0x251: V129 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x252: V130 = 0x8fc
0x258: V131 = ISZERO V35
0x259: V132 = MUL V131 0x8fc
0x25b: V133 = 0x40
0x25d: V134 = M[0x40]
0x25e: V135 = 0x0
0x260: V136 = 0x40
0x262: V137 = M[0x40]
0x265: V138 = SUB V134 V137
0x26a: V139 = CALL V132 V129 V35 V137 V138 V137 0x0
0x270: V140 = ISZERO V139
0x271: V141 = ISZERO V140
0x272: V142 = 0x27a
0x275: JUMPI 0x27a V141
---
Entry stack: [V11, 0x98, V35]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x98, V35]

================================

Block 0x276
[0x276:0x279]
---
Predecessors: [0x23a]
Successors: []
---
0x276 PUSH1 0x0
0x278 DUP1
0x279 REVERT
---
0x276: V143 = 0x0
0x279: REVERT 0x0 0x0
---
Entry stack: [V11, 0x98, V35]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x98, V35]

================================

Block 0x27a
[0x27a:0x27c]
---
Predecessors: [0x23a]
Successors: [0x98]
---
0x27a JUMPDEST
0x27b POP
0x27c JUMP
---
0x27a: JUMPDEST 
0x27c: JUMP 0x98
---
Entry stack: [V11, 0x98, V35]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x27d
[0x27d:0x2d3]
---
Predecessors: [0xa5]
Successors: [0x2d4, 0x2d8]
---
0x27d JUMPDEST
0x27e PUSH1 0x0
0x280 DUP1
0x281 SWAP1
0x282 SLOAD
0x283 SWAP1
0x284 PUSH2 0x100
0x287 EXP
0x288 SWAP1
0x289 DIV
0x28a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x29f AND
0x2a0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b5 AND
0x2b6 CALLER
0x2b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2cc AND
0x2cd EQ
0x2ce ISZERO
0x2cf ISZERO
0x2d0 PUSH2 0x2d8
0x2d3 JUMPI
---
0x27d: JUMPDEST 
0x27e: V144 = 0x0
0x282: V145 = S[0x0]
0x284: V146 = 0x100
0x287: V147 = EXP 0x100 0x0
0x289: V148 = DIV V145 0x1
0x28a: V149 = 0xffffffffffffffffffffffffffffffffffffffff
0x29f: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V148
0x2a0: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b5: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x2b6: V153 = CALLER
0x2b7: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x2cc: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x2cd: V156 = EQ V155 V152
0x2ce: V157 = ISZERO V156
0x2cf: V158 = ISZERO V157
0x2d0: V159 = 0x2d8
0x2d3: JUMPI 0x2d8 V158
---
Entry stack: [V11, 0xc4, V45, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc4, V45, V48]

================================

Block 0x2d4
[0x2d4:0x2d7]
---
Predecessors: [0x27d]
Successors: []
---
0x2d4 PUSH1 0x0
0x2d6 DUP1
0x2d7 REVERT
---
0x2d4: V160 = 0x0
0x2d7: REVERT 0x0 0x0
---
Entry stack: [V11, 0xc4, V45, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xc4, V45, V48]

================================

Block 0x2d8
[0x2d8:0x2e9]
---
Predecessors: [0x27d]
Successors: [0xc4]
---
0x2d8 JUMPDEST
0x2d9 DUP2
0x2da PUSH1 0x2
0x2dc DUP2
0x2dd SWAP1
0x2de SSTORE
0x2df POP
0x2e0 DUP1
0x2e1 PUSH1 0x3
0x2e3 DUP2
0x2e4 SWAP1
0x2e5 SSTORE
0x2e6 POP
0x2e7 POP
0x2e8 POP
0x2e9 JUMP
---
0x2d8: JUMPDEST 
0x2da: V161 = 0x2
0x2de: S[0x2] = V45
0x2e1: V162 = 0x3
0x2e5: S[0x3] = V48
0x2e9: JUMP 0xc4
---
Entry stack: [V11, 0xc4, V45, V48]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ea
[0x2ea:0x30f]
---
Predecessors: [0xd1]
Successors: [0xd9]
---
0x2ea JUMPDEST
0x2eb PUSH1 0x1
0x2ed PUSH1 0x0
0x2ef SWAP1
0x2f0 SLOAD
0x2f1 SWAP1
0x2f2 PUSH2 0x100
0x2f5 EXP
0x2f6 SWAP1
0x2f7 DIV
0x2f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30d AND
0x30e DUP2
0x30f JUMP
---
0x2ea: JUMPDEST 
0x2eb: V163 = 0x1
0x2ed: V164 = 0x0
0x2f0: V165 = S[0x1]
0x2f2: V166 = 0x100
0x2f5: V167 = EXP 0x100 0x0
0x2f7: V168 = DIV V165 0x1
0x2f8: V169 = 0xffffffffffffffffffffffffffffffffffffffff
0x30d: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V168
0x30f: JUMP 0xd9
---
Entry stack: [V11, 0xd9]
Stack pops: 1
Stack additions: [S0, V170]
Exit stack: [V11, 0xd9, V170]

================================

Block 0x310
[0x310:0x31b]
---
Predecessors: [0x11b]
Successors: [0x31c, 0x322]
---
0x310 JUMPDEST
0x311 PUSH1 0x2
0x313 SLOAD
0x314 DUP2
0x315 EQ
0x316 DUP1
0x317 ISZERO
0x318 PUSH2 0x322
0x31b JUMPI
---
0x310: JUMPDEST 
0x311: V171 = 0x2
0x313: V172 = S[0x2]
0x315: V173 = EQ V71 V172
0x317: V174 = ISZERO V173
0x318: V175 = 0x322
0x31b: JUMPI 0x322 V174
---
Entry stack: [V11, 0x131, V71]
Stack pops: 1
Stack additions: [S0, V173]
Exit stack: [V11, 0x131, V71, V173]

================================

Block 0x31c
[0x31c:0x321]
---
Predecessors: [0x310]
Successors: [0x322]
---
0x31c POP
0x31d PUSH1 0x3
0x31f SLOAD
0x320 CALLVALUE
0x321 EQ
---
0x31d: V176 = 0x3
0x31f: V177 = S[0x3]
0x320: V178 = CALLVALUE
0x321: V179 = EQ V178 V177
---
Entry stack: [V11, 0x131, V71, V173]
Stack pops: 1
Stack additions: [V179]
Exit stack: [V11, 0x131, V71, V179]

================================

Block 0x322
[0x322:0x327]
---
Predecessors: [0x310, 0x31c]
Successors: [0x328, 0x369]
---
0x322 JUMPDEST
0x323 ISZERO
0x324 PUSH2 0x369
0x327 JUMPI
---
0x322: JUMPDEST 
0x323: V180 = ISZERO S0
0x324: V181 = 0x369
0x327: JUMPI 0x369 V180
---
Entry stack: [V11, 0x131, V71, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x131, V71]

================================

Block 0x328
[0x328:0x368]
---
Predecessors: [0x322]
Successors: [0x369]
---
0x328 CALLER
0x329 PUSH1 0x1
0x32b PUSH1 0x0
0x32d PUSH2 0x100
0x330 EXP
0x331 DUP2
0x332 SLOAD
0x333 DUP2
0x334 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x349 MUL
0x34a NOT
0x34b AND
0x34c SWAP1
0x34d DUP4
0x34e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x363 AND
0x364 MUL
0x365 OR
0x366 SWAP1
0x367 SSTORE
0x368 POP
---
0x328: V182 = CALLER
0x329: V183 = 0x1
0x32b: V184 = 0x0
0x32d: V185 = 0x100
0x330: V186 = EXP 0x100 0x0
0x332: V187 = S[0x1]
0x334: V188 = 0xffffffffffffffffffffffffffffffffffffffff
0x349: V189 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x34a: V190 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x34b: V191 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V187
0x34e: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x363: V193 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x364: V194 = MUL V193 0x1
0x365: V195 = OR V194 V191
0x367: S[0x1] = V195
---
Entry stack: [V11, 0x131, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x131, V71]

================================

Block 0x369
[0x369:0x36b]
---
Predecessors: [0x322, 0x328]
Successors: [0x131]
---
0x369 JUMPDEST
0x36a POP
0x36b JUMP
---
0x369: JUMPDEST 
0x36b: JUMP 0x131
---
Entry stack: [V11, 0x131, V71]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x36c
[0x36c:0x3ab]
---
Predecessors: []
Successors: []
---
0x36c STOP
0x36d LOG1
0x36e PUSH6 0x627a7a723058
0x375 SHA3
0x376 ORIGIN
0x377 MISSING 0xce
0x378 MISSING 0x2b
0x379 MISSING 0x2d
0x37a AND
0x37b MISSING 0xb2
0x37c TIMESTAMP
0x37d SWAP1
0x37e MISSING 0xd0
0x37f MISSING 0x28
0x380 DIV
0x381 MISSING 0xda
0x382 MISSING 0xea
0x383 MISSING 0xe6
0x384 MISSING 0x25
0x385 MISSING 0x5d
0x386 SIGNEXTEND
0x387 MISSING 0x49
0x388 DUP8
0x389 MISSING 0x4b
0x38a MISSING 0xd6
0x38b CODECOPY
0x38c CALLCODE
0x38d AND
0x38e MLOAD
0x38f MISSING 0x5f
0x390 MISSING 0xd8
0x391 MISSING 0xf
0x392 MISSING 0x4a
0x393 PUSH24 0xc3ec0029
---
0x36c: STOP 
0x36d: LOG S0 S1 S2
0x36e: V196 = 0x627a7a723058
0x375: V197 = SHA3 0x627a7a723058 S3
0x376: V198 = ORIGIN
0x377: MISSING 0xce
0x378: MISSING 0x2b
0x379: MISSING 0x2d
0x37a: V199 = AND S0 S1
0x37b: MISSING 0xb2
0x37c: V200 = TIMESTAMP
0x37e: MISSING 0xd0
0x37f: MISSING 0x28
0x380: V201 = DIV S0 S1
0x381: MISSING 0xda
0x382: MISSING 0xea
0x383: MISSING 0xe6
0x384: MISSING 0x25
0x385: MISSING 0x5d
0x386: V202 = SIGNEXTEND S0 S1
0x387: MISSING 0x49
0x389: MISSING 0x4b
0x38a: MISSING 0xd6
0x38b: CODECOPY S0 S1 S2
0x38c: V203 = CALLCODE S3 S4 S5 S6 S7 S8 S9
0x38d: V204 = AND V203 S10
0x38e: V205 = M[V204]
0x38f: MISSING 0x5f
0x390: MISSING 0xd8
0x391: MISSING 0xf
0x392: MISSING 0x4a
0x393: V206 = 0xc3ec0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V198, V197, V199, S0, V200, V201, V202, S7, S0, S1, S2, S3, S4, S5, S6, S7, V205, 0xc3ec0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x77
Exit block: 0x98
Body: 0x77, 0x7e, 0x82, 0x98, 0x1b9, 0x210, 0x214, 0x236, 0x23a, 0x276, 0x27a

Function 1:
Public function signature: 0x85511d5f
Entry block: 0x9a
Exit block: 0xc4
Body: 0x9a, 0xa1, 0xa5, 0xc4, 0x27d, 0x2d4, 0x2d8

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xc6
Exit block: 0xd9
Body: 0xc6, 0xcd, 0xd1, 0xd9, 0x2ea

Function 3:
Public function signature: 0xa70f101c
Entry block: 0x11b
Exit block: 0x131
Body: 0x11b, 0x131, 0x310, 0x31c, 0x322, 0x328, 0x369

Function 4:
Public function signature: 0xd0e30db0
Entry block: 0x133
Exit block: 0x13b
Body: 0x133, 0x13b

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x75
Body: 0x6d, 0x75

Function 6:
Private function
Entry block: 0x13d
Exit block: 0x14c
Body: 0x13d, 0x14c

