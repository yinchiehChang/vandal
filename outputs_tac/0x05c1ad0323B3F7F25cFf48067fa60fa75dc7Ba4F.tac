Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x10]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLVALUE
0x6 DUP1
0x7 ISZERO
0x8 PUSH2 0x10
0xb JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = CALLVALUE
0x7: V3 = ISZERO V2
0x8: V4 = 0x10
0xb: JUMPI 0x10 V3
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0xc
[0xc:0xf]
---
Predecessors: [0x0]
Successors: []
---
0xc PUSH1 0x0
0xe DUP1
0xf REVERT
---
0xc: V5 = 0x0
0xf: REVERT 0x0 0x0
---
Entry stack: [V2]
Stack pops: 0
Stack additions: []
Exit stack: [V2]

================================

Block 0x10
[0x10:0x19]
---
Predecessors: [0x0]
Successors: [0x1a, 0xcf]
---
0x10 JUMPDEST
0x11 POP
0x12 PUSH1 0x4
0x14 CALLDATASIZE
0x15 LT
0x16 PUSH2 0xcf
0x19 JUMPI
---
0x10: JUMPDEST 
0x12: V6 = 0x4
0x14: V7 = CALLDATASIZE
0x15: V8 = LT V7 0x4
0x16: V9 = 0xcf
0x19: JUMPI 0xcf V8
---
Entry stack: [V2]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a
[0x1a:0x2a]
---
Predecessors: [0x10]
Successors: [0x2b, 0x8c]
---
0x1a PUSH1 0x0
0x1c CALLDATALOAD
0x1d PUSH1 0xe0
0x1f SHR
0x20 DUP1
0x21 PUSH4 0x42966c68
0x26 GT
0x27 PUSH2 0x8c
0x2a JUMPI
---
0x1a: V10 = 0x0
0x1c: V11 = CALLDATALOAD 0x0
0x1d: V12 = 0xe0
0x1f: V13 = SHR 0xe0 V11
0x21: V14 = 0x42966c68
0x26: V15 = GT 0x42966c68 V13
0x27: V16 = 0x8c
0x2a: JUMPI 0x8c V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x2b
[0x2b:0x35]
---
Predecessors: [0x1a]
Successors: [0x36, 0x66]
---
0x2b DUP1
0x2c PUSH4 0x95d89b41
0x31 GT
0x32 PUSH2 0x66
0x35 JUMPI
---
0x2c: V17 = 0x95d89b41
0x31: V18 = GT 0x95d89b41 V13
0x32: V19 = 0x66
0x35: JUMPI 0x66 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x36
[0x36:0x40]
---
Predecessors: [0x2b]
Successors: [0x41, 0x3b6]
---
0x36 DUP1
0x37 PUSH4 0x95d89b41
0x3c EQ
0x3d PUSH2 0x3b6
0x40 JUMPI
---
0x37: V20 = 0x95d89b41
0x3c: V21 = EQ 0x95d89b41 V13
0x3d: V22 = 0x3b6
0x40: JUMPI 0x3b6 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0x36]
Successors: [0x4c, 0x439]
---
0x41 DUP1
0x42 PUSH4 0xa457c2d7
0x47 EQ
0x48 PUSH2 0x439
0x4b JUMPI
---
0x42: V23 = 0xa457c2d7
0x47: V24 = EQ 0xa457c2d7 V13
0x48: V25 = 0x439
0x4b: JUMPI 0x439 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x49d]
---
0x4c DUP1
0x4d PUSH4 0xa9059cbb
0x52 EQ
0x53 PUSH2 0x49d
0x56 JUMPI
---
0x4d: V26 = 0xa9059cbb
0x52: V27 = EQ 0xa9059cbb V13
0x53: V28 = 0x49d
0x56: JUMPI 0x49d V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x501]
---
0x57 DUP1
0x58 PUSH4 0xdd62ed3e
0x5d EQ
0x5e PUSH2 0x501
0x61 JUMPI
---
0x58: V29 = 0xdd62ed3e
0x5d: V30 = EQ 0xdd62ed3e V13
0x5e: V31 = 0x501
0x61: JUMPI 0x501 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x62
[0x62:0x65]
---
Predecessors: [0x57]
Successors: [0xcf]
---
0x62 PUSH2 0xcf
0x65 JUMP
---
0x62: V32 = 0xcf
0x65: JUMP 0xcf
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x66
[0x66:0x71]
---
Predecessors: [0x2b]
Successors: [0x72, 0x2e2]
---
0x66 JUMPDEST
0x67 DUP1
0x68 PUSH4 0x42966c68
0x6d EQ
0x6e PUSH2 0x2e2
0x71 JUMPI
---
0x66: JUMPDEST 
0x68: V33 = 0x42966c68
0x6d: V34 = EQ 0x42966c68 V13
0x6e: V35 = 0x2e2
0x71: JUMPI 0x2e2 V34
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x66]
Successors: [0x7d, 0x310]
---
0x72 DUP1
0x73 PUSH4 0x70a08231
0x78 EQ
0x79 PUSH2 0x310
0x7c JUMPI
---
0x73: V36 = 0x70a08231
0x78: V37 = EQ 0x70a08231 V13
0x79: V38 = 0x310
0x7c: JUMPI 0x310 V37
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x368]
---
0x7d DUP1
0x7e PUSH4 0x79cc6790
0x83 EQ
0x84 PUSH2 0x368
0x87 JUMPI
---
0x7e: V39 = 0x79cc6790
0x83: V40 = EQ 0x79cc6790 V13
0x84: V41 = 0x368
0x87: JUMPI 0x368 V40
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x88
[0x88:0x8b]
---
Predecessors: [0x7d]
Successors: [0xcf]
---
0x88 PUSH2 0xcf
0x8b JUMP
---
0x88: V42 = 0xcf
0x8b: JUMP 0xcf
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x8c
[0x8c:0x97]
---
Predecessors: [0x1a]
Successors: [0x98, 0xd4]
---
0x8c JUMPDEST
0x8d DUP1
0x8e PUSH4 0x6fdde03
0x93 EQ
0x94 PUSH2 0xd4
0x97 JUMPI
---
0x8c: JUMPDEST 
0x8e: V43 = 0x6fdde03
0x93: V44 = EQ 0x6fdde03 V13
0x94: V45 = 0xd4
0x97: JUMPI 0xd4 V44
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x98
[0x98:0xa2]
---
Predecessors: [0x8c]
Successors: [0xa3, 0x157]
---
0x98 DUP1
0x99 PUSH4 0x95ea7b3
0x9e EQ
0x9f PUSH2 0x157
0xa2 JUMPI
---
0x99: V46 = 0x95ea7b3
0x9e: V47 = EQ 0x95ea7b3 V13
0x9f: V48 = 0x157
0xa2: JUMPI 0x157 V47
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x98]
Successors: [0xae, 0x1bb]
---
0xa3 DUP1
0xa4 PUSH4 0x18160ddd
0xa9 EQ
0xaa PUSH2 0x1bb
0xad JUMPI
---
0xa4: V49 = 0x18160ddd
0xa9: V50 = EQ 0x18160ddd V13
0xaa: V51 = 0x1bb
0xad: JUMPI 0x1bb V50
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x1d9]
---
0xae DUP1
0xaf PUSH4 0x23b872dd
0xb4 EQ
0xb5 PUSH2 0x1d9
0xb8 JUMPI
---
0xaf: V52 = 0x23b872dd
0xb4: V53 = EQ 0x23b872dd V13
0xb5: V54 = 0x1d9
0xb8: JUMPI 0x1d9 V53
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x25d]
---
0xb9 DUP1
0xba PUSH4 0x313ce567
0xbf EQ
0xc0 PUSH2 0x25d
0xc3 JUMPI
---
0xba: V55 = 0x313ce567
0xbf: V56 = EQ 0x313ce567 V13
0xc0: V57 = 0x25d
0xc3: JUMPI 0x25d V56
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x27e]
---
0xc4 DUP1
0xc5 PUSH4 0x39509351
0xca EQ
0xcb PUSH2 0x27e
0xce JUMPI
---
0xc5: V58 = 0x39509351
0xca: V59 = EQ 0x39509351 V13
0xcb: V60 = 0x27e
0xce: JUMPI 0x27e V59
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcf
[0xcf:0xd3]
---
Predecessors: [0x10, 0x62, 0x88, 0xc4]
Successors: []
---
0xcf JUMPDEST
0xd0 PUSH1 0x0
0xd2 DUP1
0xd3 REVERT
---
0xcf: JUMPDEST 
0xd0: V61 = 0x0
0xd3: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd4
[0xd4:0xdb]
---
Predecessors: [0x8c]
Successors: [0x579]
---
0xd4 JUMPDEST
0xd5 PUSH2 0xdc
0xd8 PUSH2 0x579
0xdb JUMP
---
0xd4: JUMPDEST 
0xd5: V62 = 0xdc
0xd8: V63 = 0x579
0xdb: JUMP 0x579
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xdc]
Exit stack: [V13, 0xdc]

================================

Block 0xdc
[0xdc:0x100]
---
Predecessors: [0x611]
Successors: [0x101]
---
0xdc JUMPDEST
0xdd PUSH1 0x40
0xdf MLOAD
0xe0 DUP1
0xe1 DUP1
0xe2 PUSH1 0x20
0xe4 ADD
0xe5 DUP3
0xe6 DUP2
0xe7 SUB
0xe8 DUP3
0xe9 MSTORE
0xea DUP4
0xeb DUP2
0xec DUP2
0xed MLOAD
0xee DUP2
0xef MSTORE
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 SWAP2
0xf4 POP
0xf5 DUP1
0xf6 MLOAD
0xf7 SWAP1
0xf8 PUSH1 0x20
0xfa ADD
0xfb SWAP1
0xfc DUP1
0xfd DUP4
0xfe DUP4
0xff PUSH1 0x0
---
0xdc: JUMPDEST 
0xdd: V64 = 0x40
0xdf: V65 = M[0x40]
0xe2: V66 = 0x20
0xe4: V67 = ADD 0x20 V65
0xe7: V68 = SUB V67 V65
0xe9: M[V65] = V68
0xed: V69 = M[V418]
0xef: M[V67] = V69
0xf0: V70 = 0x20
0xf2: V71 = ADD 0x20 V67
0xf6: V72 = M[V418]
0xf8: V73 = 0x20
0xfa: V74 = ADD 0x20 V418
0xff: V75 = 0x0
---
Entry stack: [V13, V418]
Stack pops: 1
Stack additions: [S0, V65, V65, V71, V74, V72, V72, V71, V74, 0x0]
Exit stack: [V13, V418, V65, V65, V71, V74, V72, V72, V71, V74, 0x0]

================================

Block 0x101
[0x101:0x109]
---
Predecessors: [0xdc, 0x10a]
Successors: [0x10a, 0x11c]
---
0x101 JUMPDEST
0x102 DUP4
0x103 DUP2
0x104 LT
0x105 ISZERO
0x106 PUSH2 0x11c
0x109 JUMPI
---
0x101: JUMPDEST 
0x104: V76 = LT S0 V72
0x105: V77 = ISZERO V76
0x106: V78 = 0x11c
0x109: JUMPI 0x11c V77
---
Entry stack: [V13, V418, V65, V65, V71, V74, V72, V72, V71, V74, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, V418, V65, V65, V71, V74, V72, V72, V71, V74, S0]

================================

Block 0x10a
[0x10a:0x11b]
---
Predecessors: [0x101]
Successors: [0x101]
---
0x10a DUP1
0x10b DUP3
0x10c ADD
0x10d MLOAD
0x10e DUP2
0x10f DUP5
0x110 ADD
0x111 MSTORE
0x112 PUSH1 0x20
0x114 DUP2
0x115 ADD
0x116 SWAP1
0x117 POP
0x118 PUSH2 0x101
0x11b JUMP
---
0x10c: V79 = ADD V74 S0
0x10d: V80 = M[V79]
0x110: V81 = ADD V71 S0
0x111: M[V81] = V80
0x112: V82 = 0x20
0x115: V83 = ADD S0 0x20
0x118: V84 = 0x101
0x11b: JUMP 0x101
---
Entry stack: [V13, V418, V65, V65, V71, V74, V72, V72, V71, V74, S0]
Stack pops: 3
Stack additions: [S2, S1, V83]
Exit stack: [V13, V418, V65, V65, V71, V74, V72, V72, V71, V74, V83]

================================

Block 0x11c
[0x11c:0x12f]
---
Predecessors: [0x101]
Successors: [0x130, 0x149]
---
0x11c JUMPDEST
0x11d POP
0x11e POP
0x11f POP
0x120 POP
0x121 SWAP1
0x122 POP
0x123 SWAP1
0x124 DUP2
0x125 ADD
0x126 SWAP1
0x127 PUSH1 0x1f
0x129 AND
0x12a DUP1
0x12b ISZERO
0x12c PUSH2 0x149
0x12f JUMPI
---
0x11c: JUMPDEST 
0x125: V85 = ADD V72 V71
0x127: V86 = 0x1f
0x129: V87 = AND 0x1f V72
0x12b: V88 = ISZERO V87
0x12c: V89 = 0x149
0x12f: JUMPI 0x149 V88
---
Entry stack: [V13, V418, V65, V65, V71, V74, V72, V72, V71, V74, S0]
Stack pops: 7
Stack additions: [V85, V87]
Exit stack: [V13, V418, V65, V65, V85, V87]

================================

Block 0x130
[0x130:0x148]
---
Predecessors: [0x11c]
Successors: [0x149]
---
0x130 DUP1
0x131 DUP3
0x132 SUB
0x133 DUP1
0x134 MLOAD
0x135 PUSH1 0x1
0x137 DUP4
0x138 PUSH1 0x20
0x13a SUB
0x13b PUSH2 0x100
0x13e EXP
0x13f SUB
0x140 NOT
0x141 AND
0x142 DUP2
0x143 MSTORE
0x144 PUSH1 0x20
0x146 ADD
0x147 SWAP2
0x148 POP
---
0x132: V90 = SUB V85 V87
0x134: V91 = M[V90]
0x135: V92 = 0x1
0x138: V93 = 0x20
0x13a: V94 = SUB 0x20 V87
0x13b: V95 = 0x100
0x13e: V96 = EXP 0x100 V94
0x13f: V97 = SUB V96 0x1
0x140: V98 = NOT V97
0x141: V99 = AND V98 V91
0x143: M[V90] = V99
0x144: V100 = 0x20
0x146: V101 = ADD 0x20 V90
---
Entry stack: [V13, V418, V65, V65, V85, V87]
Stack pops: 2
Stack additions: [V101, S0]
Exit stack: [V13, V418, V65, V65, V101, V87]

================================

Block 0x149
[0x149:0x156]
---
Predecessors: [0x11c, 0x130]
Successors: []
---
0x149 JUMPDEST
0x14a POP
0x14b SWAP3
0x14c POP
0x14d POP
0x14e POP
0x14f PUSH1 0x40
0x151 MLOAD
0x152 DUP1
0x153 SWAP2
0x154 SUB
0x155 SWAP1
0x156 RETURN
---
0x149: JUMPDEST 
0x14f: V102 = 0x40
0x151: V103 = M[0x40]
0x154: V104 = SUB S1 V103
0x156: RETURN V103 V104
---
Entry stack: [V13, V418, V65, V65, S1, V87]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x157
[0x157:0x168]
---
Predecessors: [0x98]
Successors: [0x169, 0x16d]
---
0x157 JUMPDEST
0x158 PUSH2 0x1a3
0x15b PUSH1 0x4
0x15d DUP1
0x15e CALLDATASIZE
0x15f SUB
0x160 PUSH1 0x40
0x162 DUP2
0x163 LT
0x164 ISZERO
0x165 PUSH2 0x16d
0x168 JUMPI
---
0x157: JUMPDEST 
0x158: V105 = 0x1a3
0x15b: V106 = 0x4
0x15e: V107 = CALLDATASIZE
0x15f: V108 = SUB V107 0x4
0x160: V109 = 0x40
0x163: V110 = LT V108 0x40
0x164: V111 = ISZERO V110
0x165: V112 = 0x16d
0x168: JUMPI 0x16d V111
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1a3, 0x4, V108]
Exit stack: [V13, 0x1a3, 0x4, V108]

================================

Block 0x169
[0x169:0x16c]
---
Predecessors: [0x157]
Successors: []
---
0x169 PUSH1 0x0
0x16b DUP1
0x16c REVERT
---
0x169: V113 = 0x0
0x16c: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a3, 0x4, V108]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a3, 0x4, V108]

================================

Block 0x16d
[0x16d:0x1a2]
---
Predecessors: [0x157]
Successors: [0x61b]
---
0x16d JUMPDEST
0x16e DUP2
0x16f ADD
0x170 SWAP1
0x171 DUP1
0x172 DUP1
0x173 CALLDATALOAD
0x174 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x189 AND
0x18a SWAP1
0x18b PUSH1 0x20
0x18d ADD
0x18e SWAP1
0x18f SWAP3
0x190 SWAP2
0x191 SWAP1
0x192 DUP1
0x193 CALLDATALOAD
0x194 SWAP1
0x195 PUSH1 0x20
0x197 ADD
0x198 SWAP1
0x199 SWAP3
0x19a SWAP2
0x19b SWAP1
0x19c POP
0x19d POP
0x19e POP
0x19f PUSH2 0x61b
0x1a2 JUMP
---
0x16d: JUMPDEST 
0x16f: V114 = ADD 0x4 V108
0x173: V115 = CALLDATALOAD 0x4
0x174: V116 = 0xffffffffffffffffffffffffffffffffffffffff
0x189: V117 = AND 0xffffffffffffffffffffffffffffffffffffffff V115
0x18b: V118 = 0x20
0x18d: V119 = ADD 0x20 0x4
0x193: V120 = CALLDATALOAD 0x24
0x195: V121 = 0x20
0x197: V122 = ADD 0x20 0x24
0x19f: V123 = 0x61b
0x1a2: JUMP 0x61b
---
Entry stack: [V13, 0x1a3, 0x4, V108]
Stack pops: 2
Stack additions: [V117, V120]
Exit stack: [V13, 0x1a3, V117, V120]

================================

Block 0x1a3
[0x1a3:0x1ba]
---
Predecessors: [0x62f, 0x7dc, 0xa09, 0x10ad]
Successors: []
---
0x1a3 JUMPDEST
0x1a4 PUSH1 0x40
0x1a6 MLOAD
0x1a7 DUP1
0x1a8 DUP3
0x1a9 ISZERO
0x1aa ISZERO
0x1ab DUP2
0x1ac MSTORE
0x1ad PUSH1 0x20
0x1af ADD
0x1b0 SWAP2
0x1b1 POP
0x1b2 POP
0x1b3 PUSH1 0x40
0x1b5 MLOAD
0x1b6 DUP1
0x1b7 SWAP2
0x1b8 SUB
0x1b9 SWAP1
0x1ba RETURN
---
0x1a3: JUMPDEST 
0x1a4: V124 = 0x40
0x1a6: V125 = M[0x40]
0x1a9: V126 = ISZERO 0x1
0x1aa: V127 = ISZERO 0x0
0x1ac: M[V125] = 0x1
0x1ad: V128 = 0x20
0x1af: V129 = ADD 0x20 V125
0x1b3: V130 = 0x40
0x1b5: V131 = M[0x40]
0x1b8: V132 = SUB V129 V131
0x1ba: RETURN V131 V132
---
Entry stack: [V13, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x1bb
[0x1bb:0x1c2]
---
Predecessors: [0xa3]
Successors: [0x639]
---
0x1bb JUMPDEST
0x1bc PUSH2 0x1c3
0x1bf PUSH2 0x639
0x1c2 JUMP
---
0x1bb: JUMPDEST 
0x1bc: V133 = 0x1c3
0x1bf: V134 = 0x639
0x1c2: JUMP 0x639
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1c3]
Exit stack: [V13, 0x1c3]

================================

Block 0x1c3
[0x1c3:0x1d8]
---
Predecessors: [0x639]
Successors: []
---
0x1c3 JUMPDEST
0x1c4 PUSH1 0x40
0x1c6 MLOAD
0x1c7 DUP1
0x1c8 DUP3
0x1c9 DUP2
0x1ca MSTORE
0x1cb PUSH1 0x20
0x1cd ADD
0x1ce SWAP2
0x1cf POP
0x1d0 POP
0x1d1 PUSH1 0x40
0x1d3 MLOAD
0x1d4 DUP1
0x1d5 SWAP2
0x1d6 SUB
0x1d7 SWAP1
0x1d8 RETURN
---
0x1c3: JUMPDEST 
0x1c4: V135 = 0x40
0x1c6: V136 = M[0x40]
0x1ca: M[V136] = V470
0x1cb: V137 = 0x20
0x1cd: V138 = ADD 0x20 V136
0x1d1: V139 = 0x40
0x1d3: V140 = M[0x40]
0x1d6: V141 = SUB V138 V140
0x1d8: RETURN V140 V141
---
Entry stack: [V13, V470]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x1d9
[0x1d9:0x1ea]
---
Predecessors: [0xae]
Successors: [0x1eb, 0x1ef]
---
0x1d9 JUMPDEST
0x1da PUSH2 0x245
0x1dd PUSH1 0x4
0x1df DUP1
0x1e0 CALLDATASIZE
0x1e1 SUB
0x1e2 PUSH1 0x60
0x1e4 DUP2
0x1e5 LT
0x1e6 ISZERO
0x1e7 PUSH2 0x1ef
0x1ea JUMPI
---
0x1d9: JUMPDEST 
0x1da: V142 = 0x245
0x1dd: V143 = 0x4
0x1e0: V144 = CALLDATASIZE
0x1e1: V145 = SUB V144 0x4
0x1e2: V146 = 0x60
0x1e5: V147 = LT V145 0x60
0x1e6: V148 = ISZERO V147
0x1e7: V149 = 0x1ef
0x1ea: JUMPI 0x1ef V148
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x245, 0x4, V145]
Exit stack: [V13, 0x245, 0x4, V145]

================================

Block 0x1eb
[0x1eb:0x1ee]
---
Predecessors: [0x1d9]
Successors: []
---
0x1eb PUSH1 0x0
0x1ed DUP1
0x1ee REVERT
---
0x1eb: V150 = 0x0
0x1ee: REVERT 0x0 0x0
---
Entry stack: [V13, 0x245, 0x4, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x245, 0x4, V145]

================================

Block 0x1ef
[0x1ef:0x244]
---
Predecessors: [0x1d9]
Successors: [0x643]
---
0x1ef JUMPDEST
0x1f0 DUP2
0x1f1 ADD
0x1f2 SWAP1
0x1f3 DUP1
0x1f4 DUP1
0x1f5 CALLDATALOAD
0x1f6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20b AND
0x20c SWAP1
0x20d PUSH1 0x20
0x20f ADD
0x210 SWAP1
0x211 SWAP3
0x212 SWAP2
0x213 SWAP1
0x214 DUP1
0x215 CALLDATALOAD
0x216 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x22b AND
0x22c SWAP1
0x22d PUSH1 0x20
0x22f ADD
0x230 SWAP1
0x231 SWAP3
0x232 SWAP2
0x233 SWAP1
0x234 DUP1
0x235 CALLDATALOAD
0x236 SWAP1
0x237 PUSH1 0x20
0x239 ADD
0x23a SWAP1
0x23b SWAP3
0x23c SWAP2
0x23d SWAP1
0x23e POP
0x23f POP
0x240 POP
0x241 PUSH2 0x643
0x244 JUMP
---
0x1ef: JUMPDEST 
0x1f1: V151 = ADD 0x4 V145
0x1f5: V152 = CALLDATALOAD 0x4
0x1f6: V153 = 0xffffffffffffffffffffffffffffffffffffffff
0x20b: V154 = AND 0xffffffffffffffffffffffffffffffffffffffff V152
0x20d: V155 = 0x20
0x20f: V156 = ADD 0x20 0x4
0x215: V157 = CALLDATALOAD 0x24
0x216: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x22b: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x22d: V160 = 0x20
0x22f: V161 = ADD 0x20 0x24
0x235: V162 = CALLDATALOAD 0x44
0x237: V163 = 0x20
0x239: V164 = ADD 0x20 0x44
0x241: V165 = 0x643
0x244: JUMP 0x643
---
Entry stack: [V13, 0x245, 0x4, V145]
Stack pops: 2
Stack additions: [V154, V159, V162]
Exit stack: [V13, 0x245, V154, V159, V162]

================================

Block 0x245
[0x245:0x25c]
---
Predecessors: [0x711]
Successors: []
---
0x245 JUMPDEST
0x246 PUSH1 0x40
0x248 MLOAD
0x249 DUP1
0x24a DUP3
0x24b ISZERO
0x24c ISZERO
0x24d DUP2
0x24e MSTORE
0x24f PUSH1 0x20
0x251 ADD
0x252 SWAP2
0x253 POP
0x254 POP
0x255 PUSH1 0x40
0x257 MLOAD
0x258 DUP1
0x259 SWAP2
0x25a SUB
0x25b SWAP1
0x25c RETURN
---
0x245: JUMPDEST 
0x246: V166 = 0x40
0x248: V167 = M[0x40]
0x24b: V168 = ISZERO 0x1
0x24c: V169 = ISZERO 0x0
0x24e: M[V167] = 0x1
0x24f: V170 = 0x20
0x251: V171 = ADD 0x20 V167
0x255: V172 = 0x40
0x257: V173 = M[0x40]
0x25a: V174 = SUB V171 V173
0x25c: RETURN V173 V174
---
Entry stack: [V13, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x25d
[0x25d:0x264]
---
Predecessors: [0xb9]
Successors: [0x71c]
---
0x25d JUMPDEST
0x25e PUSH2 0x265
0x261 PUSH2 0x71c
0x264 JUMP
---
0x25d: JUMPDEST 
0x25e: V175 = 0x265
0x261: V176 = 0x71c
0x264: JUMP 0x71c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x265]
Exit stack: [V13, 0x265]

================================

Block 0x265
[0x265:0x27d]
---
Predecessors: [0x71c]
Successors: []
---
0x265 JUMPDEST
0x266 PUSH1 0x40
0x268 MLOAD
0x269 DUP1
0x26a DUP3
0x26b PUSH1 0xff
0x26d AND
0x26e DUP2
0x26f MSTORE
0x270 PUSH1 0x20
0x272 ADD
0x273 SWAP2
0x274 POP
0x275 POP
0x276 PUSH1 0x40
0x278 MLOAD
0x279 DUP1
0x27a SWAP2
0x27b SUB
0x27c SWAP1
0x27d RETURN
---
0x265: JUMPDEST 
0x266: V177 = 0x40
0x268: V178 = M[0x40]
0x26b: V179 = 0xff
0x26d: V180 = AND 0xff V527
0x26f: M[V178] = V180
0x270: V181 = 0x20
0x272: V182 = ADD 0x20 V178
0x276: V183 = 0x40
0x278: V184 = M[0x40]
0x27b: V185 = SUB V182 V184
0x27d: RETURN V184 V185
---
Entry stack: [V13, V527]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x27e
[0x27e:0x28f]
---
Predecessors: [0xc4]
Successors: [0x290, 0x294]
---
0x27e JUMPDEST
0x27f PUSH2 0x2ca
0x282 PUSH1 0x4
0x284 DUP1
0x285 CALLDATASIZE
0x286 SUB
0x287 PUSH1 0x40
0x289 DUP2
0x28a LT
0x28b ISZERO
0x28c PUSH2 0x294
0x28f JUMPI
---
0x27e: JUMPDEST 
0x27f: V186 = 0x2ca
0x282: V187 = 0x4
0x285: V188 = CALLDATASIZE
0x286: V189 = SUB V188 0x4
0x287: V190 = 0x40
0x28a: V191 = LT V189 0x40
0x28b: V192 = ISZERO V191
0x28c: V193 = 0x294
0x28f: JUMPI 0x294 V192
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2ca, 0x4, V189]
Exit stack: [V13, 0x2ca, 0x4, V189]

================================

Block 0x290
[0x290:0x293]
---
Predecessors: [0x27e]
Successors: []
---
0x290 PUSH1 0x0
0x292 DUP1
0x293 REVERT
---
0x290: V194 = 0x0
0x293: REVERT 0x0 0x0
---
Entry stack: [V13, 0x2ca, 0x4, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x2ca, 0x4, V189]

================================

Block 0x294
[0x294:0x2c9]
---
Predecessors: [0x27e]
Successors: [0x733]
---
0x294 JUMPDEST
0x295 DUP2
0x296 ADD
0x297 SWAP1
0x298 DUP1
0x299 DUP1
0x29a CALLDATALOAD
0x29b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b0 AND
0x2b1 SWAP1
0x2b2 PUSH1 0x20
0x2b4 ADD
0x2b5 SWAP1
0x2b6 SWAP3
0x2b7 SWAP2
0x2b8 SWAP1
0x2b9 DUP1
0x2ba CALLDATALOAD
0x2bb SWAP1
0x2bc PUSH1 0x20
0x2be ADD
0x2bf SWAP1
0x2c0 SWAP3
0x2c1 SWAP2
0x2c2 SWAP1
0x2c3 POP
0x2c4 POP
0x2c5 POP
0x2c6 PUSH2 0x733
0x2c9 JUMP
---
0x294: JUMPDEST 
0x296: V195 = ADD 0x4 V189
0x29a: V196 = CALLDATALOAD 0x4
0x29b: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b0: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x2b2: V199 = 0x20
0x2b4: V200 = ADD 0x20 0x4
0x2ba: V201 = CALLDATALOAD 0x24
0x2bc: V202 = 0x20
0x2be: V203 = ADD 0x20 0x24
0x2c6: V204 = 0x733
0x2c9: JUMP 0x733
---
Entry stack: [V13, 0x2ca, 0x4, V189]
Stack pops: 2
Stack additions: [V198, V201]
Exit stack: [V13, 0x2ca, V198, V201]

================================

Block 0x2ca
[0x2ca:0x2e1]
---
Predecessors: [0x62f, 0x7dc, 0xa09, 0x10ad]
Successors: []
---
0x2ca JUMPDEST
0x2cb PUSH1 0x40
0x2cd MLOAD
0x2ce DUP1
0x2cf DUP3
0x2d0 ISZERO
0x2d1 ISZERO
0x2d2 DUP2
0x2d3 MSTORE
0x2d4 PUSH1 0x20
0x2d6 ADD
0x2d7 SWAP2
0x2d8 POP
0x2d9 POP
0x2da PUSH1 0x40
0x2dc MLOAD
0x2dd DUP1
0x2de SWAP2
0x2df SUB
0x2e0 SWAP1
0x2e1 RETURN
---
0x2ca: JUMPDEST 
0x2cb: V205 = 0x40
0x2cd: V206 = M[0x40]
0x2d0: V207 = ISZERO 0x1
0x2d1: V208 = ISZERO 0x0
0x2d3: M[V206] = 0x1
0x2d4: V209 = 0x20
0x2d6: V210 = ADD 0x20 V206
0x2da: V211 = 0x40
0x2dc: V212 = M[0x40]
0x2df: V213 = SUB V210 V212
0x2e1: RETURN V212 V213
---
Entry stack: [V13, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x2e2
[0x2e2:0x2f3]
---
Predecessors: [0x66]
Successors: [0x2f4, 0x2f8]
---
0x2e2 JUMPDEST
0x2e3 PUSH2 0x30e
0x2e6 PUSH1 0x4
0x2e8 DUP1
0x2e9 CALLDATASIZE
0x2ea SUB
0x2eb PUSH1 0x20
0x2ed DUP2
0x2ee LT
0x2ef ISZERO
0x2f0 PUSH2 0x2f8
0x2f3 JUMPI
---
0x2e2: JUMPDEST 
0x2e3: V214 = 0x30e
0x2e6: V215 = 0x4
0x2e9: V216 = CALLDATASIZE
0x2ea: V217 = SUB V216 0x4
0x2eb: V218 = 0x20
0x2ee: V219 = LT V217 0x20
0x2ef: V220 = ISZERO V219
0x2f0: V221 = 0x2f8
0x2f3: JUMPI 0x2f8 V220
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x30e, 0x4, V217]
Exit stack: [V13, 0x30e, 0x4, V217]

================================

Block 0x2f4
[0x2f4:0x2f7]
---
Predecessors: [0x2e2]
Successors: []
---
0x2f4 PUSH1 0x0
0x2f6 DUP1
0x2f7 REVERT
---
0x2f4: V222 = 0x0
0x2f7: REVERT 0x0 0x0
---
Entry stack: [V13, 0x30e, 0x4, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x30e, 0x4, V217]

================================

Block 0x2f8
[0x2f8:0x30d]
---
Predecessors: [0x2e2]
Successors: [0x7e6]
---
0x2f8 JUMPDEST
0x2f9 DUP2
0x2fa ADD
0x2fb SWAP1
0x2fc DUP1
0x2fd DUP1
0x2fe CALLDATALOAD
0x2ff SWAP1
0x300 PUSH1 0x20
0x302 ADD
0x303 SWAP1
0x304 SWAP3
0x305 SWAP2
0x306 SWAP1
0x307 POP
0x308 POP
0x309 POP
0x30a PUSH2 0x7e6
0x30d JUMP
---
0x2f8: JUMPDEST 
0x2fa: V223 = ADD 0x4 V217
0x2fe: V224 = CALLDATALOAD 0x4
0x300: V225 = 0x20
0x302: V226 = ADD 0x20 0x4
0x30a: V227 = 0x7e6
0x30d: JUMP 0x7e6
---
Entry stack: [V13, 0x30e, 0x4, V217]
Stack pops: 2
Stack additions: [V224]
Exit stack: [V13, 0x30e, V224]

================================

Block 0x30e
[0x30e:0x30f]
---
Predecessors: [0x7f7]
Successors: []
---
0x30e JUMPDEST
0x30f STOP
---
0x30e: JUMPDEST 
0x30f: STOP 
---
Entry stack: [V13, 0x3b4, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x3b4, S0]

================================

Block 0x310
[0x310:0x321]
---
Predecessors: [0x72]
Successors: [0x322, 0x326]
---
0x310 JUMPDEST
0x311 PUSH2 0x352
0x314 PUSH1 0x4
0x316 DUP1
0x317 CALLDATASIZE
0x318 SUB
0x319 PUSH1 0x20
0x31b DUP2
0x31c LT
0x31d ISZERO
0x31e PUSH2 0x326
0x321 JUMPI
---
0x310: JUMPDEST 
0x311: V228 = 0x352
0x314: V229 = 0x4
0x317: V230 = CALLDATASIZE
0x318: V231 = SUB V230 0x4
0x319: V232 = 0x20
0x31c: V233 = LT V231 0x20
0x31d: V234 = ISZERO V233
0x31e: V235 = 0x326
0x321: JUMPI 0x326 V234
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x352, 0x4, V231]
Exit stack: [V13, 0x352, 0x4, V231]

================================

Block 0x322
[0x322:0x325]
---
Predecessors: [0x310]
Successors: []
---
0x322 PUSH1 0x0
0x324 DUP1
0x325 REVERT
---
0x322: V236 = 0x0
0x325: REVERT 0x0 0x0
---
Entry stack: [V13, 0x352, 0x4, V231]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x352, 0x4, V231]

================================

Block 0x326
[0x326:0x351]
---
Predecessors: [0x310]
Successors: [0x7fa]
---
0x326 JUMPDEST
0x327 DUP2
0x328 ADD
0x329 SWAP1
0x32a DUP1
0x32b DUP1
0x32c CALLDATALOAD
0x32d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x342 AND
0x343 SWAP1
0x344 PUSH1 0x20
0x346 ADD
0x347 SWAP1
0x348 SWAP3
0x349 SWAP2
0x34a SWAP1
0x34b POP
0x34c POP
0x34d POP
0x34e PUSH2 0x7fa
0x351 JUMP
---
0x326: JUMPDEST 
0x328: V237 = ADD 0x4 V231
0x32c: V238 = CALLDATALOAD 0x4
0x32d: V239 = 0xffffffffffffffffffffffffffffffffffffffff
0x342: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V238
0x344: V241 = 0x20
0x346: V242 = ADD 0x20 0x4
0x34e: V243 = 0x7fa
0x351: JUMP 0x7fa
---
Entry stack: [V13, 0x352, 0x4, V231]
Stack pops: 2
Stack additions: [V240]
Exit stack: [V13, 0x352, V240]

================================

Block 0x352
[0x352:0x367]
---
Predecessors: [0x7fa]
Successors: []
---
0x352 JUMPDEST
0x353 PUSH1 0x40
0x355 MLOAD
0x356 DUP1
0x357 DUP3
0x358 DUP2
0x359 MSTORE
0x35a PUSH1 0x20
0x35c ADD
0x35d SWAP2
0x35e POP
0x35f POP
0x360 PUSH1 0x40
0x362 MLOAD
0x363 DUP1
0x364 SWAP2
0x365 SUB
0x366 SWAP1
0x367 RETURN
---
0x352: JUMPDEST 
0x353: V244 = 0x40
0x355: V245 = M[0x40]
0x359: M[V245] = V580
0x35a: V246 = 0x20
0x35c: V247 = ADD 0x20 V245
0x360: V248 = 0x40
0x362: V249 = M[0x40]
0x365: V250 = SUB V247 V249
0x367: RETURN V249 V250
---
Entry stack: [V13, V580]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x368
[0x368:0x379]
---
Predecessors: [0x7d]
Successors: [0x37a, 0x37e]
---
0x368 JUMPDEST
0x369 PUSH2 0x3b4
0x36c PUSH1 0x4
0x36e DUP1
0x36f CALLDATASIZE
0x370 SUB
0x371 PUSH1 0x40
0x373 DUP2
0x374 LT
0x375 ISZERO
0x376 PUSH2 0x37e
0x379 JUMPI
---
0x368: JUMPDEST 
0x369: V251 = 0x3b4
0x36c: V252 = 0x4
0x36f: V253 = CALLDATASIZE
0x370: V254 = SUB V253 0x4
0x371: V255 = 0x40
0x374: V256 = LT V254 0x40
0x375: V257 = ISZERO V256
0x376: V258 = 0x37e
0x379: JUMPI 0x37e V257
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x3b4, 0x4, V254]
Exit stack: [V13, 0x3b4, 0x4, V254]

================================

Block 0x37a
[0x37a:0x37d]
---
Predecessors: [0x368]
Successors: []
---
0x37a PUSH1 0x0
0x37c DUP1
0x37d REVERT
---
0x37a: V259 = 0x0
0x37d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x3b4, 0x4, V254]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x3b4, 0x4, V254]

================================

Block 0x37e
[0x37e:0x3b3]
---
Predecessors: [0x368]
Successors: [0x842]
---
0x37e JUMPDEST
0x37f DUP2
0x380 ADD
0x381 SWAP1
0x382 DUP1
0x383 DUP1
0x384 CALLDATALOAD
0x385 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x39a AND
0x39b SWAP1
0x39c PUSH1 0x20
0x39e ADD
0x39f SWAP1
0x3a0 SWAP3
0x3a1 SWAP2
0x3a2 SWAP1
0x3a3 DUP1
0x3a4 CALLDATALOAD
0x3a5 SWAP1
0x3a6 PUSH1 0x20
0x3a8 ADD
0x3a9 SWAP1
0x3aa SWAP3
0x3ab SWAP2
0x3ac SWAP1
0x3ad POP
0x3ae POP
0x3af POP
0x3b0 PUSH2 0x842
0x3b3 JUMP
---
0x37e: JUMPDEST 
0x380: V260 = ADD 0x4 V254
0x384: V261 = CALLDATALOAD 0x4
0x385: V262 = 0xffffffffffffffffffffffffffffffffffffffff
0x39a: V263 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x39c: V264 = 0x20
0x39e: V265 = ADD 0x20 0x4
0x3a4: V266 = CALLDATALOAD 0x24
0x3a6: V267 = 0x20
0x3a8: V268 = ADD 0x20 0x24
0x3b0: V269 = 0x842
0x3b3: JUMP 0x842
---
Entry stack: [V13, 0x3b4, 0x4, V254]
Stack pops: 2
Stack additions: [V263, V266]
Exit stack: [V13, 0x3b4, V263, V266]

================================

Block 0x3b4
[0x3b4:0x3b5]
---
Predecessors: [0x62f, 0x7dc, 0x89f, 0xa09, 0x1214, 0x12cb]
Successors: []
---
0x3b4 JUMPDEST
0x3b5 STOP
---
0x3b4: JUMPDEST 
0x3b5: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x3b6
[0x3b6:0x3bd]
---
Predecessors: [0x36]
Successors: [0x8a4]
---
0x3b6 JUMPDEST
0x3b7 PUSH2 0x3be
0x3ba PUSH2 0x8a4
0x3bd JUMP
---
0x3b6: JUMPDEST 
0x3b7: V270 = 0x3be
0x3ba: V271 = 0x8a4
0x3bd: JUMP 0x8a4
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x3be]
Exit stack: [V13, 0x3be]

================================

Block 0x3be
[0x3be:0x3e2]
---
Predecessors: [0x93c]
Successors: [0x3e3]
---
0x3be JUMPDEST
0x3bf PUSH1 0x40
0x3c1 MLOAD
0x3c2 DUP1
0x3c3 DUP1
0x3c4 PUSH1 0x20
0x3c6 ADD
0x3c7 DUP3
0x3c8 DUP2
0x3c9 SUB
0x3ca DUP3
0x3cb MSTORE
0x3cc DUP4
0x3cd DUP2
0x3ce DUP2
0x3cf MLOAD
0x3d0 DUP2
0x3d1 MSTORE
0x3d2 PUSH1 0x20
0x3d4 ADD
0x3d5 SWAP2
0x3d6 POP
0x3d7 DUP1
0x3d8 MLOAD
0x3d9 SWAP1
0x3da PUSH1 0x20
0x3dc ADD
0x3dd SWAP1
0x3de DUP1
0x3df DUP4
0x3e0 DUP4
0x3e1 PUSH1 0x0
---
0x3be: JUMPDEST 
0x3bf: V272 = 0x40
0x3c1: V273 = M[0x40]
0x3c4: V274 = 0x20
0x3c6: V275 = ADD 0x20 V273
0x3c9: V276 = SUB V275 V273
0x3cb: M[V273] = V276
0x3cf: V277 = M[V627]
0x3d1: M[V275] = V277
0x3d2: V278 = 0x20
0x3d4: V279 = ADD 0x20 V275
0x3d8: V280 = M[V627]
0x3da: V281 = 0x20
0x3dc: V282 = ADD 0x20 V627
0x3e1: V283 = 0x0
---
Entry stack: [V13, V627]
Stack pops: 1
Stack additions: [S0, V273, V273, V279, V282, V280, V280, V279, V282, 0x0]
Exit stack: [V13, V627, V273, V273, V279, V282, V280, V280, V279, V282, 0x0]

================================

Block 0x3e3
[0x3e3:0x3eb]
---
Predecessors: [0x3be, 0x3ec]
Successors: [0x3ec, 0x3fe]
---
0x3e3 JUMPDEST
0x3e4 DUP4
0x3e5 DUP2
0x3e6 LT
0x3e7 ISZERO
0x3e8 PUSH2 0x3fe
0x3eb JUMPI
---
0x3e3: JUMPDEST 
0x3e6: V284 = LT S0 V280
0x3e7: V285 = ISZERO V284
0x3e8: V286 = 0x3fe
0x3eb: JUMPI 0x3fe V285
---
Entry stack: [V13, V627, V273, V273, V279, V282, V280, V280, V279, V282, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, V627, V273, V273, V279, V282, V280, V280, V279, V282, S0]

================================

Block 0x3ec
[0x3ec:0x3fd]
---
Predecessors: [0x3e3]
Successors: [0x3e3]
---
0x3ec DUP1
0x3ed DUP3
0x3ee ADD
0x3ef MLOAD
0x3f0 DUP2
0x3f1 DUP5
0x3f2 ADD
0x3f3 MSTORE
0x3f4 PUSH1 0x20
0x3f6 DUP2
0x3f7 ADD
0x3f8 SWAP1
0x3f9 POP
0x3fa PUSH2 0x3e3
0x3fd JUMP
---
0x3ee: V287 = ADD V282 S0
0x3ef: V288 = M[V287]
0x3f2: V289 = ADD V279 S0
0x3f3: M[V289] = V288
0x3f4: V290 = 0x20
0x3f7: V291 = ADD S0 0x20
0x3fa: V292 = 0x3e3
0x3fd: JUMP 0x3e3
---
Entry stack: [V13, V627, V273, V273, V279, V282, V280, V280, V279, V282, S0]
Stack pops: 3
Stack additions: [S2, S1, V291]
Exit stack: [V13, V627, V273, V273, V279, V282, V280, V280, V279, V282, V291]

================================

Block 0x3fe
[0x3fe:0x411]
---
Predecessors: [0x3e3]
Successors: [0x412, 0x42b]
---
0x3fe JUMPDEST
0x3ff POP
0x400 POP
0x401 POP
0x402 POP
0x403 SWAP1
0x404 POP
0x405 SWAP1
0x406 DUP2
0x407 ADD
0x408 SWAP1
0x409 PUSH1 0x1f
0x40b AND
0x40c DUP1
0x40d ISZERO
0x40e PUSH2 0x42b
0x411 JUMPI
---
0x3fe: JUMPDEST 
0x407: V293 = ADD V280 V279
0x409: V294 = 0x1f
0x40b: V295 = AND 0x1f V280
0x40d: V296 = ISZERO V295
0x40e: V297 = 0x42b
0x411: JUMPI 0x42b V296
---
Entry stack: [V13, V627, V273, V273, V279, V282, V280, V280, V279, V282, S0]
Stack pops: 7
Stack additions: [V293, V295]
Exit stack: [V13, V627, V273, V273, V293, V295]

================================

Block 0x412
[0x412:0x42a]
---
Predecessors: [0x3fe]
Successors: [0x42b]
---
0x412 DUP1
0x413 DUP3
0x414 SUB
0x415 DUP1
0x416 MLOAD
0x417 PUSH1 0x1
0x419 DUP4
0x41a PUSH1 0x20
0x41c SUB
0x41d PUSH2 0x100
0x420 EXP
0x421 SUB
0x422 NOT
0x423 AND
0x424 DUP2
0x425 MSTORE
0x426 PUSH1 0x20
0x428 ADD
0x429 SWAP2
0x42a POP
---
0x414: V298 = SUB V293 V295
0x416: V299 = M[V298]
0x417: V300 = 0x1
0x41a: V301 = 0x20
0x41c: V302 = SUB 0x20 V295
0x41d: V303 = 0x100
0x420: V304 = EXP 0x100 V302
0x421: V305 = SUB V304 0x1
0x422: V306 = NOT V305
0x423: V307 = AND V306 V299
0x425: M[V298] = V307
0x426: V308 = 0x20
0x428: V309 = ADD 0x20 V298
---
Entry stack: [V13, V627, V273, V273, V293, V295]
Stack pops: 2
Stack additions: [V309, S0]
Exit stack: [V13, V627, V273, V273, V309, V295]

================================

Block 0x42b
[0x42b:0x438]
---
Predecessors: [0x3fe, 0x412]
Successors: []
---
0x42b JUMPDEST
0x42c POP
0x42d SWAP3
0x42e POP
0x42f POP
0x430 POP
0x431 PUSH1 0x40
0x433 MLOAD
0x434 DUP1
0x435 SWAP2
0x436 SUB
0x437 SWAP1
0x438 RETURN
---
0x42b: JUMPDEST 
0x431: V310 = 0x40
0x433: V311 = M[0x40]
0x436: V312 = SUB S1 V311
0x438: RETURN V311 V312
---
Entry stack: [V13, V627, V273, V273, S1, V295]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x439
[0x439:0x44a]
---
Predecessors: [0x41]
Successors: [0x44b, 0x44f]
---
0x439 JUMPDEST
0x43a PUSH2 0x485
0x43d PUSH1 0x4
0x43f DUP1
0x440 CALLDATASIZE
0x441 SUB
0x442 PUSH1 0x40
0x444 DUP2
0x445 LT
0x446 ISZERO
0x447 PUSH2 0x44f
0x44a JUMPI
---
0x439: JUMPDEST 
0x43a: V313 = 0x485
0x43d: V314 = 0x4
0x440: V315 = CALLDATASIZE
0x441: V316 = SUB V315 0x4
0x442: V317 = 0x40
0x445: V318 = LT V316 0x40
0x446: V319 = ISZERO V318
0x447: V320 = 0x44f
0x44a: JUMPI 0x44f V319
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x485, 0x4, V316]
Exit stack: [V13, 0x485, 0x4, V316]

================================

Block 0x44b
[0x44b:0x44e]
---
Predecessors: [0x439]
Successors: []
---
0x44b PUSH1 0x0
0x44d DUP1
0x44e REVERT
---
0x44b: V321 = 0x0
0x44e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x485, 0x4, V316]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x485, 0x4, V316]

================================

Block 0x44f
[0x44f:0x484]
---
Predecessors: [0x439]
Successors: [0x946]
---
0x44f JUMPDEST
0x450 DUP2
0x451 ADD
0x452 SWAP1
0x453 DUP1
0x454 DUP1
0x455 CALLDATALOAD
0x456 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46b AND
0x46c SWAP1
0x46d PUSH1 0x20
0x46f ADD
0x470 SWAP1
0x471 SWAP3
0x472 SWAP2
0x473 SWAP1
0x474 DUP1
0x475 CALLDATALOAD
0x476 SWAP1
0x477 PUSH1 0x20
0x479 ADD
0x47a SWAP1
0x47b SWAP3
0x47c SWAP2
0x47d SWAP1
0x47e POP
0x47f POP
0x480 POP
0x481 PUSH2 0x946
0x484 JUMP
---
0x44f: JUMPDEST 
0x451: V322 = ADD 0x4 V316
0x455: V323 = CALLDATALOAD 0x4
0x456: V324 = 0xffffffffffffffffffffffffffffffffffffffff
0x46b: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x46d: V326 = 0x20
0x46f: V327 = ADD 0x20 0x4
0x475: V328 = CALLDATALOAD 0x24
0x477: V329 = 0x20
0x479: V330 = ADD 0x20 0x24
0x481: V331 = 0x946
0x484: JUMP 0x946
---
Entry stack: [V13, 0x485, 0x4, V316]
Stack pops: 2
Stack additions: [V325, V328]
Exit stack: [V13, 0x485, V325, V328]

================================

Block 0x485
[0x485:0x49c]
---
Predecessors: [0x62f, 0x7dc, 0xa09, 0x10ad, 0x1214]
Successors: []
---
0x485 JUMPDEST
0x486 PUSH1 0x40
0x488 MLOAD
0x489 DUP1
0x48a DUP3
0x48b ISZERO
0x48c ISZERO
0x48d DUP2
0x48e MSTORE
0x48f PUSH1 0x20
0x491 ADD
0x492 SWAP2
0x493 POP
0x494 POP
0x495 PUSH1 0x40
0x497 MLOAD
0x498 DUP1
0x499 SWAP2
0x49a SUB
0x49b SWAP1
0x49c RETURN
---
0x485: JUMPDEST 
0x486: V332 = 0x40
0x488: V333 = M[0x40]
0x48b: V334 = ISZERO 0x1
0x48c: V335 = ISZERO 0x0
0x48e: M[V333] = 0x1
0x48f: V336 = 0x20
0x491: V337 = ADD 0x20 V333
0x495: V338 = 0x40
0x497: V339 = M[0x40]
0x49a: V340 = SUB V337 V339
0x49c: RETURN V339 V340
---
Entry stack: [V13, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x49d
[0x49d:0x4ae]
---
Predecessors: [0x4c]
Successors: [0x4af, 0x4b3]
---
0x49d JUMPDEST
0x49e PUSH2 0x4e9
0x4a1 PUSH1 0x4
0x4a3 DUP1
0x4a4 CALLDATASIZE
0x4a5 SUB
0x4a6 PUSH1 0x40
0x4a8 DUP2
0x4a9 LT
0x4aa ISZERO
0x4ab PUSH2 0x4b3
0x4ae JUMPI
---
0x49d: JUMPDEST 
0x49e: V341 = 0x4e9
0x4a1: V342 = 0x4
0x4a4: V343 = CALLDATASIZE
0x4a5: V344 = SUB V343 0x4
0x4a6: V345 = 0x40
0x4a9: V346 = LT V344 0x40
0x4aa: V347 = ISZERO V346
0x4ab: V348 = 0x4b3
0x4ae: JUMPI 0x4b3 V347
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x4e9, 0x4, V344]
Exit stack: [V13, 0x4e9, 0x4, V344]

================================

Block 0x4af
[0x4af:0x4b2]
---
Predecessors: [0x49d]
Successors: []
---
0x4af PUSH1 0x0
0x4b1 DUP1
0x4b2 REVERT
---
0x4af: V349 = 0x0
0x4b2: REVERT 0x0 0x0
---
Entry stack: [V13, 0x4e9, 0x4, V344]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x4e9, 0x4, V344]

================================

Block 0x4b3
[0x4b3:0x4e8]
---
Predecessors: [0x49d]
Successors: [0xa13]
---
0x4b3 JUMPDEST
0x4b4 DUP2
0x4b5 ADD
0x4b6 SWAP1
0x4b7 DUP1
0x4b8 DUP1
0x4b9 CALLDATALOAD
0x4ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4cf AND
0x4d0 SWAP1
0x4d1 PUSH1 0x20
0x4d3 ADD
0x4d4 SWAP1
0x4d5 SWAP3
0x4d6 SWAP2
0x4d7 SWAP1
0x4d8 DUP1
0x4d9 CALLDATALOAD
0x4da SWAP1
0x4db PUSH1 0x20
0x4dd ADD
0x4de SWAP1
0x4df SWAP3
0x4e0 SWAP2
0x4e1 SWAP1
0x4e2 POP
0x4e3 POP
0x4e4 POP
0x4e5 PUSH2 0xa13
0x4e8 JUMP
---
0x4b3: JUMPDEST 
0x4b5: V350 = ADD 0x4 V344
0x4b9: V351 = CALLDATALOAD 0x4
0x4ba: V352 = 0xffffffffffffffffffffffffffffffffffffffff
0x4cf: V353 = AND 0xffffffffffffffffffffffffffffffffffffffff V351
0x4d1: V354 = 0x20
0x4d3: V355 = ADD 0x20 0x4
0x4d9: V356 = CALLDATALOAD 0x24
0x4db: V357 = 0x20
0x4dd: V358 = ADD 0x20 0x24
0x4e5: V359 = 0xa13
0x4e8: JUMP 0xa13
---
Entry stack: [V13, 0x4e9, 0x4, V344]
Stack pops: 2
Stack additions: [V353, V356]
Exit stack: [V13, 0x4e9, V353, V356]

================================

Block 0x4e9
[0x4e9:0x500]
---
Predecessors: [0x62f, 0x7dc, 0xa09, 0xa27, 0x10ad, 0x1214]
Successors: []
---
0x4e9 JUMPDEST
0x4ea PUSH1 0x40
0x4ec MLOAD
0x4ed DUP1
0x4ee DUP3
0x4ef ISZERO
0x4f0 ISZERO
0x4f1 DUP2
0x4f2 MSTORE
0x4f3 PUSH1 0x20
0x4f5 ADD
0x4f6 SWAP2
0x4f7 POP
0x4f8 POP
0x4f9 PUSH1 0x40
0x4fb MLOAD
0x4fc DUP1
0x4fd SWAP2
0x4fe SUB
0x4ff SWAP1
0x500 RETURN
---
0x4e9: JUMPDEST 
0x4ea: V360 = 0x40
0x4ec: V361 = M[0x40]
0x4ef: V362 = ISZERO 0x1
0x4f0: V363 = ISZERO 0x0
0x4f2: M[V361] = 0x1
0x4f3: V364 = 0x20
0x4f5: V365 = ADD 0x20 V361
0x4f9: V366 = 0x40
0x4fb: V367 = M[0x40]
0x4fe: V368 = SUB V365 V367
0x500: RETURN V367 V368
---
Entry stack: [V13, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x501
[0x501:0x512]
---
Predecessors: [0x57]
Successors: [0x513, 0x517]
---
0x501 JUMPDEST
0x502 PUSH2 0x563
0x505 PUSH1 0x4
0x507 DUP1
0x508 CALLDATASIZE
0x509 SUB
0x50a PUSH1 0x40
0x50c DUP2
0x50d LT
0x50e ISZERO
0x50f PUSH2 0x517
0x512 JUMPI
---
0x501: JUMPDEST 
0x502: V369 = 0x563
0x505: V370 = 0x4
0x508: V371 = CALLDATASIZE
0x509: V372 = SUB V371 0x4
0x50a: V373 = 0x40
0x50d: V374 = LT V372 0x40
0x50e: V375 = ISZERO V374
0x50f: V376 = 0x517
0x512: JUMPI 0x517 V375
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x563, 0x4, V372]
Exit stack: [V13, 0x563, 0x4, V372]

================================

Block 0x513
[0x513:0x516]
---
Predecessors: [0x501]
Successors: []
---
0x513 PUSH1 0x0
0x515 DUP1
0x516 REVERT
---
0x513: V377 = 0x0
0x516: REVERT 0x0 0x0
---
Entry stack: [V13, 0x563, 0x4, V372]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x563, 0x4, V372]

================================

Block 0x517
[0x517:0x562]
---
Predecessors: [0x501]
Successors: [0xa31]
---
0x517 JUMPDEST
0x518 DUP2
0x519 ADD
0x51a SWAP1
0x51b DUP1
0x51c DUP1
0x51d CALLDATALOAD
0x51e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x533 AND
0x534 SWAP1
0x535 PUSH1 0x20
0x537 ADD
0x538 SWAP1
0x539 SWAP3
0x53a SWAP2
0x53b SWAP1
0x53c DUP1
0x53d CALLDATALOAD
0x53e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x553 AND
0x554 SWAP1
0x555 PUSH1 0x20
0x557 ADD
0x558 SWAP1
0x559 SWAP3
0x55a SWAP2
0x55b SWAP1
0x55c POP
0x55d POP
0x55e POP
0x55f PUSH2 0xa31
0x562 JUMP
---
0x517: JUMPDEST 
0x519: V378 = ADD 0x4 V372
0x51d: V379 = CALLDATALOAD 0x4
0x51e: V380 = 0xffffffffffffffffffffffffffffffffffffffff
0x533: V381 = AND 0xffffffffffffffffffffffffffffffffffffffff V379
0x535: V382 = 0x20
0x537: V383 = ADD 0x20 0x4
0x53d: V384 = CALLDATALOAD 0x24
0x53e: V385 = 0xffffffffffffffffffffffffffffffffffffffff
0x553: V386 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x555: V387 = 0x20
0x557: V388 = ADD 0x20 0x24
0x55f: V389 = 0xa31
0x562: JUMP 0xa31
---
Entry stack: [V13, 0x563, 0x4, V372]
Stack pops: 2
Stack additions: [V381, V386]
Exit stack: [V13, 0x563, V381, V386]

================================

Block 0x563
[0x563:0x578]
---
Predecessors: [0xa31]
Successors: []
---
0x563 JUMPDEST
0x564 PUSH1 0x40
0x566 MLOAD
0x567 DUP1
0x568 DUP3
0x569 DUP2
0x56a MSTORE
0x56b PUSH1 0x20
0x56d ADD
0x56e SWAP2
0x56f POP
0x570 POP
0x571 PUSH1 0x40
0x573 MLOAD
0x574 DUP1
0x575 SWAP2
0x576 SUB
0x577 SWAP1
0x578 RETURN
---
0x563: JUMPDEST 
0x564: V390 = 0x40
0x566: V391 = M[0x40]
0x56a: M[V391] = V747
0x56b: V392 = 0x20
0x56d: V393 = ADD 0x20 V391
0x571: V394 = 0x40
0x573: V395 = M[0x40]
0x576: V396 = SUB V393 V395
0x578: RETURN V395 V396
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V747]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x579
[0x579:0x5ca]
---
Predecessors: [0xd4]
Successors: [0x5cb, 0x611]
---
0x579 JUMPDEST
0x57a PUSH1 0x60
0x57c PUSH1 0x3
0x57e DUP1
0x57f SLOAD
0x580 PUSH1 0x1
0x582 DUP2
0x583 PUSH1 0x1
0x585 AND
0x586 ISZERO
0x587 PUSH2 0x100
0x58a MUL
0x58b SUB
0x58c AND
0x58d PUSH1 0x2
0x58f SWAP1
0x590 DIV
0x591 DUP1
0x592 PUSH1 0x1f
0x594 ADD
0x595 PUSH1 0x20
0x597 DUP1
0x598 SWAP2
0x599 DIV
0x59a MUL
0x59b PUSH1 0x20
0x59d ADD
0x59e PUSH1 0x40
0x5a0 MLOAD
0x5a1 SWAP1
0x5a2 DUP2
0x5a3 ADD
0x5a4 PUSH1 0x40
0x5a6 MSTORE
0x5a7 DUP1
0x5a8 SWAP3
0x5a9 SWAP2
0x5aa SWAP1
0x5ab DUP2
0x5ac DUP2
0x5ad MSTORE
0x5ae PUSH1 0x20
0x5b0 ADD
0x5b1 DUP3
0x5b2 DUP1
0x5b3 SLOAD
0x5b4 PUSH1 0x1
0x5b6 DUP2
0x5b7 PUSH1 0x1
0x5b9 AND
0x5ba ISZERO
0x5bb PUSH2 0x100
0x5be MUL
0x5bf SUB
0x5c0 AND
0x5c1 PUSH1 0x2
0x5c3 SWAP1
0x5c4 DIV
0x5c5 DUP1
0x5c6 ISZERO
0x5c7 PUSH2 0x611
0x5ca JUMPI
---
0x579: JUMPDEST 
0x57a: V397 = 0x60
0x57c: V398 = 0x3
0x57f: V399 = S[0x3]
0x580: V400 = 0x1
0x583: V401 = 0x1
0x585: V402 = AND 0x1 V399
0x586: V403 = ISZERO V402
0x587: V404 = 0x100
0x58a: V405 = MUL 0x100 V403
0x58b: V406 = SUB V405 0x1
0x58c: V407 = AND V406 V399
0x58d: V408 = 0x2
0x590: V409 = DIV V407 0x2
0x592: V410 = 0x1f
0x594: V411 = ADD 0x1f V409
0x595: V412 = 0x20
0x599: V413 = DIV V411 0x20
0x59a: V414 = MUL V413 0x20
0x59b: V415 = 0x20
0x59d: V416 = ADD 0x20 V414
0x59e: V417 = 0x40
0x5a0: V418 = M[0x40]
0x5a3: V419 = ADD V418 V416
0x5a4: V420 = 0x40
0x5a6: M[0x40] = V419
0x5ad: M[V418] = V409
0x5ae: V421 = 0x20
0x5b0: V422 = ADD 0x20 V418
0x5b3: V423 = S[0x3]
0x5b4: V424 = 0x1
0x5b7: V425 = 0x1
0x5b9: V426 = AND 0x1 V423
0x5ba: V427 = ISZERO V426
0x5bb: V428 = 0x100
0x5be: V429 = MUL 0x100 V427
0x5bf: V430 = SUB V429 0x1
0x5c0: V431 = AND V430 V423
0x5c1: V432 = 0x2
0x5c4: V433 = DIV V431 0x2
0x5c6: V434 = ISZERO V433
0x5c7: V435 = 0x611
0x5ca: JUMPI 0x611 V434
---
Entry stack: [V13, 0xdc]
Stack pops: 0
Stack additions: [0x60, V418, 0x3, V409, V422, 0x3, V433]
Exit stack: [V13, 0xdc, 0x60, V418, 0x3, V409, V422, 0x3, V433]

================================

Block 0x5cb
[0x5cb:0x5d2]
---
Predecessors: [0x579]
Successors: [0x5d3, 0x5e6]
---
0x5cb DUP1
0x5cc PUSH1 0x1f
0x5ce LT
0x5cf PUSH2 0x5e6
0x5d2 JUMPI
---
0x5cc: V436 = 0x1f
0x5ce: V437 = LT 0x1f V433
0x5cf: V438 = 0x5e6
0x5d2: JUMPI 0x5e6 V437
---
Entry stack: [V13, 0xdc, 0x60, V418, 0x3, V409, V422, 0x3, V433]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xdc, 0x60, V418, 0x3, V409, V422, 0x3, V433]

================================

Block 0x5d3
[0x5d3:0x5e5]
---
Predecessors: [0x5cb]
Successors: [0x611]
---
0x5d3 PUSH2 0x100
0x5d6 DUP1
0x5d7 DUP4
0x5d8 SLOAD
0x5d9 DIV
0x5da MUL
0x5db DUP4
0x5dc MSTORE
0x5dd SWAP2
0x5de PUSH1 0x20
0x5e0 ADD
0x5e1 SWAP2
0x5e2 PUSH2 0x611
0x5e5 JUMP
---
0x5d3: V439 = 0x100
0x5d8: V440 = S[0x3]
0x5d9: V441 = DIV V440 0x100
0x5da: V442 = MUL V441 0x100
0x5dc: M[V422] = V442
0x5de: V443 = 0x20
0x5e0: V444 = ADD 0x20 V422
0x5e2: V445 = 0x611
0x5e5: JUMP 0x611
---
Entry stack: [V13, 0xdc, 0x60, V418, 0x3, V409, V422, 0x3, V433]
Stack pops: 3
Stack additions: [V444, S1, S0]
Exit stack: [V13, 0xdc, 0x60, V418, 0x3, V409, V444, 0x3, V433]

================================

Block 0x5e6
[0x5e6:0x5f3]
---
Predecessors: [0x5cb]
Successors: [0x5f4]
---
0x5e6 JUMPDEST
0x5e7 DUP3
0x5e8 ADD
0x5e9 SWAP2
0x5ea SWAP1
0x5eb PUSH1 0x0
0x5ed MSTORE
0x5ee PUSH1 0x20
0x5f0 PUSH1 0x0
0x5f2 SHA3
0x5f3 SWAP1
---
0x5e6: JUMPDEST 
0x5e8: V446 = ADD V422 V433
0x5eb: V447 = 0x0
0x5ed: M[0x0] = 0x3
0x5ee: V448 = 0x20
0x5f0: V449 = 0x0
0x5f2: V450 = SHA3 0x0 0x20
---
Entry stack: [V13, 0xdc, 0x60, V418, 0x3, V409, V422, 0x3, V433]
Stack pops: 3
Stack additions: [V446, V450, S2]
Exit stack: [V13, 0xdc, 0x60, V418, 0x3, V409, V446, V450, V422]

================================

Block 0x5f4
[0x5f4:0x607]
---
Predecessors: [0x5e6, 0x5f4]
Successors: [0x5f4, 0x608]
---
0x5f4 JUMPDEST
0x5f5 DUP2
0x5f6 SLOAD
0x5f7 DUP2
0x5f8 MSTORE
0x5f9 SWAP1
0x5fa PUSH1 0x1
0x5fc ADD
0x5fd SWAP1
0x5fe PUSH1 0x20
0x600 ADD
0x601 DUP1
0x602 DUP4
0x603 GT
0x604 PUSH2 0x5f4
0x607 JUMPI
---
0x5f4: JUMPDEST 
0x5f6: V451 = S[S1]
0x5f8: M[S0] = V451
0x5fa: V452 = 0x1
0x5fc: V453 = ADD 0x1 S1
0x5fe: V454 = 0x20
0x600: V455 = ADD 0x20 S0
0x603: V456 = GT V446 V455
0x604: V457 = 0x5f4
0x607: JUMPI 0x5f4 V456
---
Entry stack: [V13, 0xdc, 0x60, V418, 0x3, V409, V446, S1, S0]
Stack pops: 3
Stack additions: [S2, V453, V455]
Exit stack: [V13, 0xdc, 0x60, V418, 0x3, V409, V446, V453, V455]

================================

Block 0x608
[0x608:0x610]
---
Predecessors: [0x5f4]
Successors: [0x611]
---
0x608 DUP3
0x609 SWAP1
0x60a SUB
0x60b PUSH1 0x1f
0x60d AND
0x60e DUP3
0x60f ADD
0x610 SWAP2
---
0x60a: V458 = SUB V455 V446
0x60b: V459 = 0x1f
0x60d: V460 = AND 0x1f V458
0x60f: V461 = ADD V446 V460
---
Entry stack: [V13, 0xdc, 0x60, V418, 0x3, V409, V446, V453, V455]
Stack pops: 3
Stack additions: [V461, S1, S2]
Exit stack: [V13, 0xdc, 0x60, V418, 0x3, V409, V461, V453, V446]

================================

Block 0x611
[0x611:0x61a]
---
Predecessors: [0x579, 0x5d3, 0x608]
Successors: [0xdc]
---
0x611 JUMPDEST
0x612 POP
0x613 POP
0x614 POP
0x615 POP
0x616 POP
0x617 SWAP1
0x618 POP
0x619 SWAP1
0x61a JUMP
---
0x611: JUMPDEST 
0x61a: JUMP 0xdc
---
Entry stack: [V13, 0xdc, 0x60, V418, 0x3, V409, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V13, V418]

================================

Block 0x61b
[0x61b:0x627]
---
Predecessors: [0x16d]
Successors: [0xb40]
---
0x61b JUMPDEST
0x61c PUSH1 0x0
0x61e PUSH2 0x62f
0x621 PUSH2 0x628
0x624 PUSH2 0xb40
0x627 JUMP
---
0x61b: JUMPDEST 
0x61c: V462 = 0x0
0x61e: V463 = 0x62f
0x621: V464 = 0x628
0x624: V465 = 0xb40
0x627: JUMP 0xb40
---
Entry stack: [V13, 0x1a3, V117, V120]
Stack pops: 0
Stack additions: [0x0, 0x62f, 0x628]
Exit stack: [V13, 0x1a3, V117, V120, 0x0, 0x62f, 0x628]

================================

Block 0x628
[0x628:0x62e]
---
Predecessors: [0xb40]
Successors: [0xb48]
---
0x628 JUMPDEST
0x629 DUP5
0x62a DUP5
0x62b PUSH2 0xb48
0x62e JUMP
---
0x628: JUMPDEST 
0x62b: V466 = 0xb48
0x62e: JUMP 0xb48
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S3]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771, S4, S3]

================================

Block 0x62f
[0x62f:0x638]
---
Predecessors: [0xc54]
Successors: [0x1a3, 0x2ca, 0x3b4, 0x485, 0x4e9]
---
0x62f JUMPDEST
0x630 PUSH1 0x1
0x632 SWAP1
0x633 POP
0x634 SWAP3
0x635 SWAP2
0x636 POP
0x637 POP
0x638 JUMP
---
0x62f: JUMPDEST 
0x630: V467 = 0x1
0x638: JUMP S3
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, S4, 0x1]

================================

Block 0x639
[0x639:0x642]
---
Predecessors: [0x1bb]
Successors: [0x1c3]
---
0x639 JUMPDEST
0x63a PUSH1 0x0
0x63c PUSH1 0x2
0x63e SLOAD
0x63f SWAP1
0x640 POP
0x641 SWAP1
0x642 JUMP
---
0x639: JUMPDEST 
0x63a: V468 = 0x0
0x63c: V469 = 0x2
0x63e: V470 = S[0x2]
0x642: JUMP 0x1c3
---
Entry stack: [V13, 0x1c3]
Stack pops: 1
Stack additions: [V470]
Exit stack: [V13, V470]

================================

Block 0x643
[0x643:0x64f]
---
Predecessors: [0x1ef]
Successors: [0xd3f]
---
0x643 JUMPDEST
0x644 PUSH1 0x0
0x646 PUSH2 0x650
0x649 DUP5
0x64a DUP5
0x64b DUP5
0x64c PUSH2 0xd3f
0x64f JUMP
---
0x643: JUMPDEST 
0x644: V471 = 0x0
0x646: V472 = 0x650
0x64c: V473 = 0xd3f
0x64f: JUMP 0xd3f
---
Entry stack: [V13, 0x245, V154, V159, V162]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x650, S2, S1, S0]
Exit stack: [V13, 0x245, V154, V159, V162, 0x0, 0x650, V154, V159, V162]

================================

Block 0x650
[0x650:0x65b]
---
Predecessors: [0xf54, 0x12cb]
Successors: [0xb40]
---
0x650 JUMPDEST
0x651 PUSH2 0x711
0x654 DUP5
0x655 PUSH2 0x65c
0x658 PUSH2 0xb40
0x65b JUMP
---
0x650: JUMPDEST 
0x651: V474 = 0x711
0x655: V475 = 0x65c
0x658: V476 = 0xb40
0x65b: JUMP 0xb40
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x711, S3, 0x65c]
Exit stack: [V13, S4, S3, S2, S1, S0, 0x711, S3, 0x65c]

================================

Block 0x65c
[0x65c:0x6c1]
---
Predecessors: [0xb40]
Successors: [0xb40]
---
0x65c JUMPDEST
0x65d PUSH2 0x70c
0x660 DUP6
0x661 PUSH1 0x40
0x663 MLOAD
0x664 DUP1
0x665 PUSH1 0x60
0x667 ADD
0x668 PUSH1 0x40
0x66a MSTORE
0x66b DUP1
0x66c PUSH1 0x28
0x66e DUP2
0x66f MSTORE
0x670 PUSH1 0x20
0x672 ADD
0x673 PUSH2 0x1361
0x676 PUSH1 0x28
0x678 SWAP2
0x679 CODECOPY
0x67a PUSH1 0x1
0x67c PUSH1 0x0
0x67e DUP12
0x67f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x694 AND
0x695 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6aa AND
0x6ab DUP2
0x6ac MSTORE
0x6ad PUSH1 0x20
0x6af ADD
0x6b0 SWAP1
0x6b1 DUP2
0x6b2 MSTORE
0x6b3 PUSH1 0x20
0x6b5 ADD
0x6b6 PUSH1 0x0
0x6b8 SHA3
0x6b9 PUSH1 0x0
0x6bb PUSH2 0x6c2
0x6be PUSH2 0xb40
0x6c1 JUMP
---
0x65c: JUMPDEST 
0x65d: V477 = 0x70c
0x661: V478 = 0x40
0x663: V479 = M[0x40]
0x665: V480 = 0x60
0x667: V481 = ADD 0x60 V479
0x668: V482 = 0x40
0x66a: M[0x40] = V481
0x66c: V483 = 0x28
0x66f: M[V479] = 0x28
0x670: V484 = 0x20
0x672: V485 = ADD 0x20 V479
0x673: V486 = 0x1361
0x676: V487 = 0x28
0x679: CODECOPY V485 0x1361 0x28
0x67a: V488 = 0x1
0x67c: V489 = 0x0
0x67f: V490 = 0xffffffffffffffffffffffffffffffffffffffff
0x694: V491 = AND 0xffffffffffffffffffffffffffffffffffffffff S6
0x695: V492 = 0xffffffffffffffffffffffffffffffffffffffff
0x6aa: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V491
0x6ac: M[0x0] = V493
0x6ad: V494 = 0x20
0x6af: V495 = ADD 0x20 0x0
0x6b2: M[0x20] = 0x1
0x6b3: V496 = 0x20
0x6b5: V497 = ADD 0x20 0x20
0x6b6: V498 = 0x0
0x6b8: V499 = SHA3 0x0 0x40
0x6b9: V500 = 0x0
0x6bb: V501 = 0x6c2
0x6be: V502 = 0xb40
0x6c1: JUMP 0xb40
---
Entry stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x70c, S4, V479, V499, 0x0, 0x6c2]
Exit stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771, 0x70c, S4, V479, V499, 0x0, 0x6c2]

================================

Block 0x6c2
[0x6c2:0x70b]
---
Predecessors: [0xb40]
Successors: [0x1000]
---
0x6c2 JUMPDEST
0x6c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6d8 AND
0x6d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ee AND
0x6ef DUP2
0x6f0 MSTORE
0x6f1 PUSH1 0x20
0x6f3 ADD
0x6f4 SWAP1
0x6f5 DUP2
0x6f6 MSTORE
0x6f7 PUSH1 0x20
0x6f9 ADD
0x6fa PUSH1 0x0
0x6fc SHA3
0x6fd SLOAD
0x6fe PUSH2 0x1000
0x701 SWAP1
0x702 SWAP3
0x703 SWAP2
0x704 SWAP1
0x705 PUSH4 0xffffffff
0x70a AND
0x70b JUMP
---
0x6c2: JUMPDEST 
0x6c3: V503 = 0xffffffffffffffffffffffffffffffffffffffff
0x6d8: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0x6d9: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ee: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x6f0: M[S1] = V506
0x6f1: V507 = 0x20
0x6f3: V508 = ADD 0x20 S1
0x6f6: M[V508] = S2
0x6f7: V509 = 0x20
0x6f9: V510 = ADD 0x20 V508
0x6fa: V511 = 0x0
0x6fc: V512 = SHA3 0x0 V510
0x6fd: V513 = S[V512]
0x6fe: V514 = 0x1000
0x705: V515 = 0xffffffff
0x70a: V516 = AND 0xffffffff 0x1000
0x70b: JUMP 0x1000
---
Entry stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 5
Stack additions: [V513, S4, S3]
Exit stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V513, S4, S3]

================================

Block 0x70c
[0x70c:0x710]
---
Predecessors: [0x10ad]
Successors: [0xb48]
---
0x70c JUMPDEST
0x70d PUSH2 0xb48
0x710 JUMP
---
0x70c: JUMPDEST 
0x70d: V517 = 0xb48
0x710: JUMP 0xb48
---
Entry stack: [V13, 0x3b4, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1038]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x3b4, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1038]

================================

Block 0x711
[0x711:0x71b]
---
Predecessors: [0xa31, 0xc54, 0xf54]
Successors: [0x245]
---
0x711 JUMPDEST
0x712 PUSH1 0x1
0x714 SWAP1
0x715 POP
0x716 SWAP4
0x717 SWAP3
0x718 POP
0x719 POP
0x71a POP
0x71b JUMP
---
0x711: JUMPDEST 
0x712: V518 = 0x1
0x71b: JUMP S4
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x71c
[0x71c:0x732]
---
Predecessors: [0x25d]
Successors: [0x265]
---
0x71c JUMPDEST
0x71d PUSH1 0x0
0x71f PUSH1 0x5
0x721 PUSH1 0x0
0x723 SWAP1
0x724 SLOAD
0x725 SWAP1
0x726 PUSH2 0x100
0x729 EXP
0x72a SWAP1
0x72b DIV
0x72c PUSH1 0xff
0x72e AND
0x72f SWAP1
0x730 POP
0x731 SWAP1
0x732 JUMP
---
0x71c: JUMPDEST 
0x71d: V519 = 0x0
0x71f: V520 = 0x5
0x721: V521 = 0x0
0x724: V522 = S[0x5]
0x726: V523 = 0x100
0x729: V524 = EXP 0x100 0x0
0x72b: V525 = DIV V522 0x1
0x72c: V526 = 0xff
0x72e: V527 = AND 0xff V525
0x732: JUMP 0x265
---
Entry stack: [V13, 0x265]
Stack pops: 1
Stack additions: [V527]
Exit stack: [V13, V527]

================================

Block 0x733
[0x733:0x73f]
---
Predecessors: [0x294]
Successors: [0xb40]
---
0x733 JUMPDEST
0x734 PUSH1 0x0
0x736 PUSH2 0x7dc
0x739 PUSH2 0x740
0x73c PUSH2 0xb40
0x73f JUMP
---
0x733: JUMPDEST 
0x734: V528 = 0x0
0x736: V529 = 0x7dc
0x739: V530 = 0x740
0x73c: V531 = 0xb40
0x73f: JUMP 0xb40
---
Entry stack: [V13, 0x2ca, V198, V201]
Stack pops: 0
Stack additions: [0x0, 0x7dc, 0x740]
Exit stack: [V13, 0x2ca, V198, V201, 0x0, 0x7dc, 0x740]

================================

Block 0x740
[0x740:0x750]
---
Predecessors: [0xb40]
Successors: [0xb40]
---
0x740 JUMPDEST
0x741 DUP5
0x742 PUSH2 0x7d7
0x745 DUP6
0x746 PUSH1 0x1
0x748 PUSH1 0x0
0x74a PUSH2 0x751
0x74d PUSH2 0xb40
0x750 JUMP
---
0x740: JUMPDEST 
0x742: V532 = 0x7d7
0x746: V533 = 0x1
0x748: V534 = 0x0
0x74a: V535 = 0x751
0x74d: V536 = 0xb40
0x750: JUMP 0xb40
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, 0x7d7, S3, 0x1, 0x0, 0x751]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771, S4, 0x7d7, S3, 0x1, 0x0, 0x751]

================================

Block 0x751
[0x751:0x7d6]
---
Predecessors: [0xb40]
Successors: [0xab8]
---
0x751 JUMPDEST
0x752 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x767 AND
0x768 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77d AND
0x77e DUP2
0x77f MSTORE
0x780 PUSH1 0x20
0x782 ADD
0x783 SWAP1
0x784 DUP2
0x785 MSTORE
0x786 PUSH1 0x20
0x788 ADD
0x789 PUSH1 0x0
0x78b SHA3
0x78c PUSH1 0x0
0x78e DUP10
0x78f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7a4 AND
0x7a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ba AND
0x7bb DUP2
0x7bc MSTORE
0x7bd PUSH1 0x20
0x7bf ADD
0x7c0 SWAP1
0x7c1 DUP2
0x7c2 MSTORE
0x7c3 PUSH1 0x20
0x7c5 ADD
0x7c6 PUSH1 0x0
0x7c8 SHA3
0x7c9 SLOAD
0x7ca PUSH2 0xab8
0x7cd SWAP1
0x7ce SWAP2
0x7cf SWAP1
0x7d0 PUSH4 0xffffffff
0x7d5 AND
0x7d6 JUMP
---
0x751: JUMPDEST 
0x752: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x767: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0x768: V539 = 0xffffffffffffffffffffffffffffffffffffffff
0x77d: V540 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0x77f: M[S1] = V540
0x780: V541 = 0x20
0x782: V542 = ADD 0x20 S1
0x785: M[V542] = S2
0x786: V543 = 0x20
0x788: V544 = ADD 0x20 V542
0x789: V545 = 0x0
0x78b: V546 = SHA3 0x0 V544
0x78c: V547 = 0x0
0x78f: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x7a4: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff S10
0x7a5: V550 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ba: V551 = AND 0xffffffffffffffffffffffffffffffffffffffff V549
0x7bc: M[0x0] = V551
0x7bd: V552 = 0x20
0x7bf: V553 = ADD 0x20 0x0
0x7c2: M[0x20] = V546
0x7c3: V554 = 0x20
0x7c5: V555 = ADD 0x20 0x20
0x7c6: V556 = 0x0
0x7c8: V557 = SHA3 0x0 0x40
0x7c9: V558 = S[V557]
0x7ca: V559 = 0xab8
0x7d0: V560 = 0xffffffff
0x7d5: V561 = AND 0xffffffff 0xab8
0x7d6: JUMP 0xab8
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, V558, S3]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V558, S3]

================================

Block 0x7d7
[0x7d7:0x7db]
---
Predecessors: [0xb36]
Successors: [0xb48]
---
0x7d7 JUMPDEST
0x7d8 PUSH2 0xb48
0x7db JUMP
---
0x7d7: JUMPDEST 
0x7d8: V562 = 0xb48
0x7db: JUMP 0xb48
---
Entry stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x650, 0xa27}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5, {0x0, 0x650, 0xa27}, S3, S2, S1, S0]

================================

Block 0x7dc
[0x7dc:0x7e5]
---
Predecessors: [0xc54]
Successors: [0x1a3, 0x2ca, 0x3b4, 0x485, 0x4e9]
---
0x7dc JUMPDEST
0x7dd PUSH1 0x1
0x7df SWAP1
0x7e0 POP
0x7e1 SWAP3
0x7e2 SWAP2
0x7e3 POP
0x7e4 POP
0x7e5 JUMP
---
0x7dc: JUMPDEST 
0x7dd: V563 = 0x1
0x7e5: JUMP S3
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, S4, 0x1]

================================

Block 0x7e6
[0x7e6:0x7f0]
---
Predecessors: [0x2f8]
Successors: [0xb40]
---
0x7e6 JUMPDEST
0x7e7 PUSH2 0x7f7
0x7ea PUSH2 0x7f1
0x7ed PUSH2 0xb40
0x7f0 JUMP
---
0x7e6: JUMPDEST 
0x7e7: V564 = 0x7f7
0x7ea: V565 = 0x7f1
0x7ed: V566 = 0xb40
0x7f0: JUMP 0xb40
---
Entry stack: [V13, 0x30e, V224]
Stack pops: 0
Stack additions: [0x7f7, 0x7f1]
Exit stack: [V13, 0x30e, V224, 0x7f7, 0x7f1]

================================

Block 0x7f1
[0x7f1:0x7f6]
---
Predecessors: [0xb40]
Successors: [0x10c0]
---
0x7f1 JUMPDEST
0x7f2 DUP3
0x7f3 PUSH2 0x10c0
0x7f6 JUMP
---
0x7f1: JUMPDEST 
0x7f3: V567 = 0x10c0
0x7f6: JUMP 0x10c0
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 3
Stack additions: [S2, S1, S0, S2]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771, S2]

================================

Block 0x7f7
[0x7f7:0x7f9]
---
Predecessors: [0x1214]
Successors: [0x30e]
---
0x7f7 JUMPDEST
0x7f8 POP
0x7f9 JUMP
---
0x7f7: JUMPDEST 
0x7f9: JUMP S1
---
Entry stack: [V13, 0x3b4, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x3b4, S2]

================================

Block 0x7fa
[0x7fa:0x841]
---
Predecessors: [0x326]
Successors: [0x352]
---
0x7fa JUMPDEST
0x7fb PUSH1 0x0
0x7fd DUP1
0x7fe PUSH1 0x0
0x800 DUP4
0x801 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x816 AND
0x817 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x82c AND
0x82d DUP2
0x82e MSTORE
0x82f PUSH1 0x20
0x831 ADD
0x832 SWAP1
0x833 DUP2
0x834 MSTORE
0x835 PUSH1 0x20
0x837 ADD
0x838 PUSH1 0x0
0x83a SHA3
0x83b SLOAD
0x83c SWAP1
0x83d POP
0x83e SWAP2
0x83f SWAP1
0x840 POP
0x841 JUMP
---
0x7fa: JUMPDEST 
0x7fb: V568 = 0x0
0x7fe: V569 = 0x0
0x801: V570 = 0xffffffffffffffffffffffffffffffffffffffff
0x816: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x817: V572 = 0xffffffffffffffffffffffffffffffffffffffff
0x82c: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0x82e: M[0x0] = V573
0x82f: V574 = 0x20
0x831: V575 = ADD 0x20 0x0
0x834: M[0x20] = 0x0
0x835: V576 = 0x20
0x837: V577 = ADD 0x20 0x20
0x838: V578 = 0x0
0x83a: V579 = SHA3 0x0 0x40
0x83b: V580 = S[V579]
0x841: JUMP 0x352
---
Entry stack: [V13, 0x352, V240]
Stack pops: 2
Stack additions: [V580]
Exit stack: [V13, V580]

================================

Block 0x842
[0x842:0x86c]
---
Predecessors: [0x37e]
Successors: [0xb40]
---
0x842 JUMPDEST
0x843 PUSH1 0x0
0x845 PUSH2 0x881
0x848 DUP3
0x849 PUSH1 0x40
0x84b MLOAD
0x84c DUP1
0x84d PUSH1 0x60
0x84f ADD
0x850 PUSH1 0x40
0x852 MSTORE
0x853 DUP1
0x854 PUSH1 0x24
0x856 DUP2
0x857 MSTORE
0x858 PUSH1 0x20
0x85a ADD
0x85b PUSH2 0x1389
0x85e PUSH1 0x24
0x860 SWAP2
0x861 CODECOPY
0x862 PUSH2 0x872
0x865 DUP7
0x866 PUSH2 0x86d
0x869 PUSH2 0xb40
0x86c JUMP
---
0x842: JUMPDEST 
0x843: V581 = 0x0
0x845: V582 = 0x881
0x849: V583 = 0x40
0x84b: V584 = M[0x40]
0x84d: V585 = 0x60
0x84f: V586 = ADD 0x60 V584
0x850: V587 = 0x40
0x852: M[0x40] = V586
0x854: V588 = 0x24
0x857: M[V584] = 0x24
0x858: V589 = 0x20
0x85a: V590 = ADD 0x20 V584
0x85b: V591 = 0x1389
0x85e: V592 = 0x24
0x861: CODECOPY V590 0x1389 0x24
0x862: V593 = 0x872
0x866: V594 = 0x86d
0x869: V595 = 0xb40
0x86c: JUMP 0xb40
---
Entry stack: [V13, 0x3b4, V263, V266]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x881, S0, V584, 0x872, S1, 0x86d]
Exit stack: [V13, 0x3b4, V263, V266, 0x0, 0x881, V266, V584, 0x872, V263, 0x86d]

================================

Block 0x86d
[0x86d:0x871]
---
Predecessors: [0xb40]
Successors: [0xa31]
---
0x86d JUMPDEST
0x86e PUSH2 0xa31
0x871 JUMP
---
0x86d: JUMPDEST 
0x86e: V596 = 0xa31
0x871: JUMP 0xa31
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]

================================

Block 0x872
[0x872:0x880]
---
Predecessors: [0xa31]
Successors: [0x1000]
---
0x872 JUMPDEST
0x873 PUSH2 0x1000
0x876 SWAP1
0x877 SWAP3
0x878 SWAP2
0x879 SWAP1
0x87a PUSH4 0xffffffff
0x87f AND
0x880 JUMP
---
0x872: JUMPDEST 
0x873: V597 = 0x1000
0x87a: V598 = 0xffffffff
0x87f: V599 = AND 0xffffffff 0x1000
0x880: JUMP 0x1000
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V747]
Stack pops: 3
Stack additions: [S0, S2, S1]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, V747, S2, S1]

================================

Block 0x881
[0x881:0x88e]
---
Predecessors: [0x10ad]
Successors: [0xb40]
---
0x881 JUMPDEST
0x882 SWAP1
0x883 POP
0x884 PUSH2 0x895
0x887 DUP4
0x888 PUSH2 0x88f
0x88b PUSH2 0xb40
0x88e JUMP
---
0x881: JUMPDEST 
0x884: V600 = 0x895
0x888: V601 = 0x88f
0x88b: V602 = 0xb40
0x88e: JUMP 0xb40
---
Entry stack: [V13, 0x3b4, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1038]
Stack pops: 4
Stack additions: [S3, S2, S0, 0x895, S3, 0x88f]
Exit stack: [V13, 0x3b4, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1038, 0x895, S3, 0x88f]

================================

Block 0x88f
[0x88f:0x894]
---
Predecessors: [0xb40]
Successors: [0xb48]
---
0x88f JUMPDEST
0x890 DUP4
0x891 PUSH2 0xb48
0x894 JUMP
---
0x88f: JUMPDEST 
0x891: V603 = 0xb48
0x894: JUMP 0xb48
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771, S3]

================================

Block 0x895
[0x895:0x89e]
---
Predecessors: [0xa31, 0xc54]
Successors: [0x10c0]
---
0x895 JUMPDEST
0x896 PUSH2 0x89f
0x899 DUP4
0x89a DUP4
0x89b PUSH2 0x10c0
0x89e JUMP
---
0x895: JUMPDEST 
0x896: V604 = 0x89f
0x89b: V605 = 0x10c0
0x89e: JUMP 0x10c0
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x89f, S2, S1]
Exit stack: [V13, S4, S3, S2, S1, S0, 0x89f, S2, S1]

================================

Block 0x89f
[0x89f:0x8a3]
---
Predecessors: [0x1214]
Successors: [0x3b4]
---
0x89f JUMPDEST
0x8a0 POP
0x8a1 POP
0x8a2 POP
0x8a3 JUMP
---
0x89f: JUMPDEST 
0x8a3: JUMP 0x3b4
---
Entry stack: [V13, 0x3b4, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x8a4
[0x8a4:0x8f5]
---
Predecessors: [0x3b6]
Successors: [0x8f6, 0x93c]
---
0x8a4 JUMPDEST
0x8a5 PUSH1 0x60
0x8a7 PUSH1 0x4
0x8a9 DUP1
0x8aa SLOAD
0x8ab PUSH1 0x1
0x8ad DUP2
0x8ae PUSH1 0x1
0x8b0 AND
0x8b1 ISZERO
0x8b2 PUSH2 0x100
0x8b5 MUL
0x8b6 SUB
0x8b7 AND
0x8b8 PUSH1 0x2
0x8ba SWAP1
0x8bb DIV
0x8bc DUP1
0x8bd PUSH1 0x1f
0x8bf ADD
0x8c0 PUSH1 0x20
0x8c2 DUP1
0x8c3 SWAP2
0x8c4 DIV
0x8c5 MUL
0x8c6 PUSH1 0x20
0x8c8 ADD
0x8c9 PUSH1 0x40
0x8cb MLOAD
0x8cc SWAP1
0x8cd DUP2
0x8ce ADD
0x8cf PUSH1 0x40
0x8d1 MSTORE
0x8d2 DUP1
0x8d3 SWAP3
0x8d4 SWAP2
0x8d5 SWAP1
0x8d6 DUP2
0x8d7 DUP2
0x8d8 MSTORE
0x8d9 PUSH1 0x20
0x8db ADD
0x8dc DUP3
0x8dd DUP1
0x8de SLOAD
0x8df PUSH1 0x1
0x8e1 DUP2
0x8e2 PUSH1 0x1
0x8e4 AND
0x8e5 ISZERO
0x8e6 PUSH2 0x100
0x8e9 MUL
0x8ea SUB
0x8eb AND
0x8ec PUSH1 0x2
0x8ee SWAP1
0x8ef DIV
0x8f0 DUP1
0x8f1 ISZERO
0x8f2 PUSH2 0x93c
0x8f5 JUMPI
---
0x8a4: JUMPDEST 
0x8a5: V606 = 0x60
0x8a7: V607 = 0x4
0x8aa: V608 = S[0x4]
0x8ab: V609 = 0x1
0x8ae: V610 = 0x1
0x8b0: V611 = AND 0x1 V608
0x8b1: V612 = ISZERO V611
0x8b2: V613 = 0x100
0x8b5: V614 = MUL 0x100 V612
0x8b6: V615 = SUB V614 0x1
0x8b7: V616 = AND V615 V608
0x8b8: V617 = 0x2
0x8bb: V618 = DIV V616 0x2
0x8bd: V619 = 0x1f
0x8bf: V620 = ADD 0x1f V618
0x8c0: V621 = 0x20
0x8c4: V622 = DIV V620 0x20
0x8c5: V623 = MUL V622 0x20
0x8c6: V624 = 0x20
0x8c8: V625 = ADD 0x20 V623
0x8c9: V626 = 0x40
0x8cb: V627 = M[0x40]
0x8ce: V628 = ADD V627 V625
0x8cf: V629 = 0x40
0x8d1: M[0x40] = V628
0x8d8: M[V627] = V618
0x8d9: V630 = 0x20
0x8db: V631 = ADD 0x20 V627
0x8de: V632 = S[0x4]
0x8df: V633 = 0x1
0x8e2: V634 = 0x1
0x8e4: V635 = AND 0x1 V632
0x8e5: V636 = ISZERO V635
0x8e6: V637 = 0x100
0x8e9: V638 = MUL 0x100 V636
0x8ea: V639 = SUB V638 0x1
0x8eb: V640 = AND V639 V632
0x8ec: V641 = 0x2
0x8ef: V642 = DIV V640 0x2
0x8f1: V643 = ISZERO V642
0x8f2: V644 = 0x93c
0x8f5: JUMPI 0x93c V643
---
Entry stack: [V13, 0x3be]
Stack pops: 0
Stack additions: [0x60, V627, 0x4, V618, V631, 0x4, V642]
Exit stack: [V13, 0x3be, 0x60, V627, 0x4, V618, V631, 0x4, V642]

================================

Block 0x8f6
[0x8f6:0x8fd]
---
Predecessors: [0x8a4]
Successors: [0x8fe, 0x911]
---
0x8f6 DUP1
0x8f7 PUSH1 0x1f
0x8f9 LT
0x8fa PUSH2 0x911
0x8fd JUMPI
---
0x8f7: V645 = 0x1f
0x8f9: V646 = LT 0x1f V642
0x8fa: V647 = 0x911
0x8fd: JUMPI 0x911 V646
---
Entry stack: [V13, 0x3be, 0x60, V627, 0x4, V618, V631, 0x4, V642]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x3be, 0x60, V627, 0x4, V618, V631, 0x4, V642]

================================

Block 0x8fe
[0x8fe:0x910]
---
Predecessors: [0x8f6]
Successors: [0x93c]
---
0x8fe PUSH2 0x100
0x901 DUP1
0x902 DUP4
0x903 SLOAD
0x904 DIV
0x905 MUL
0x906 DUP4
0x907 MSTORE
0x908 SWAP2
0x909 PUSH1 0x20
0x90b ADD
0x90c SWAP2
0x90d PUSH2 0x93c
0x910 JUMP
---
0x8fe: V648 = 0x100
0x903: V649 = S[0x4]
0x904: V650 = DIV V649 0x100
0x905: V651 = MUL V650 0x100
0x907: M[V631] = V651
0x909: V652 = 0x20
0x90b: V653 = ADD 0x20 V631
0x90d: V654 = 0x93c
0x910: JUMP 0x93c
---
Entry stack: [V13, 0x3be, 0x60, V627, 0x4, V618, V631, 0x4, V642]
Stack pops: 3
Stack additions: [V653, S1, S0]
Exit stack: [V13, 0x3be, 0x60, V627, 0x4, V618, V653, 0x4, V642]

================================

Block 0x911
[0x911:0x91e]
---
Predecessors: [0x8f6]
Successors: [0x91f]
---
0x911 JUMPDEST
0x912 DUP3
0x913 ADD
0x914 SWAP2
0x915 SWAP1
0x916 PUSH1 0x0
0x918 MSTORE
0x919 PUSH1 0x20
0x91b PUSH1 0x0
0x91d SHA3
0x91e SWAP1
---
0x911: JUMPDEST 
0x913: V655 = ADD V631 V642
0x916: V656 = 0x0
0x918: M[0x0] = 0x4
0x919: V657 = 0x20
0x91b: V658 = 0x0
0x91d: V659 = SHA3 0x0 0x20
---
Entry stack: [V13, 0x3be, 0x60, V627, 0x4, V618, V631, 0x4, V642]
Stack pops: 3
Stack additions: [V655, V659, S2]
Exit stack: [V13, 0x3be, 0x60, V627, 0x4, V618, V655, V659, V631]

================================

Block 0x91f
[0x91f:0x932]
---
Predecessors: [0x911, 0x91f]
Successors: [0x91f, 0x933]
---
0x91f JUMPDEST
0x920 DUP2
0x921 SLOAD
0x922 DUP2
0x923 MSTORE
0x924 SWAP1
0x925 PUSH1 0x1
0x927 ADD
0x928 SWAP1
0x929 PUSH1 0x20
0x92b ADD
0x92c DUP1
0x92d DUP4
0x92e GT
0x92f PUSH2 0x91f
0x932 JUMPI
---
0x91f: JUMPDEST 
0x921: V660 = S[S1]
0x923: M[S0] = V660
0x925: V661 = 0x1
0x927: V662 = ADD 0x1 S1
0x929: V663 = 0x20
0x92b: V664 = ADD 0x20 S0
0x92e: V665 = GT V655 V664
0x92f: V666 = 0x91f
0x932: JUMPI 0x91f V665
---
Entry stack: [V13, 0x3be, 0x60, V627, 0x4, V618, V655, S1, S0]
Stack pops: 3
Stack additions: [S2, V662, V664]
Exit stack: [V13, 0x3be, 0x60, V627, 0x4, V618, V655, V662, V664]

================================

Block 0x933
[0x933:0x93b]
---
Predecessors: [0x91f]
Successors: [0x93c]
---
0x933 DUP3
0x934 SWAP1
0x935 SUB
0x936 PUSH1 0x1f
0x938 AND
0x939 DUP3
0x93a ADD
0x93b SWAP2
---
0x935: V667 = SUB V664 V655
0x936: V668 = 0x1f
0x938: V669 = AND 0x1f V667
0x93a: V670 = ADD V655 V669
---
Entry stack: [V13, 0x3be, 0x60, V627, 0x4, V618, V655, V662, V664]
Stack pops: 3
Stack additions: [V670, S1, S2]
Exit stack: [V13, 0x3be, 0x60, V627, 0x4, V618, V670, V662, V655]

================================

Block 0x93c
[0x93c:0x945]
---
Predecessors: [0x8a4, 0x8fe, 0x933]
Successors: [0x3be]
---
0x93c JUMPDEST
0x93d POP
0x93e POP
0x93f POP
0x940 POP
0x941 POP
0x942 SWAP1
0x943 POP
0x944 SWAP1
0x945 JUMP
---
0x93c: JUMPDEST 
0x945: JUMP 0x3be
---
Entry stack: [V13, 0x3be, 0x60, V627, 0x4, V618, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V13, V627]

================================

Block 0x946
[0x946:0x952]
---
Predecessors: [0x44f]
Successors: [0xb40]
---
0x946 JUMPDEST
0x947 PUSH1 0x0
0x949 PUSH2 0xa09
0x94c PUSH2 0x953
0x94f PUSH2 0xb40
0x952 JUMP
---
0x946: JUMPDEST 
0x947: V671 = 0x0
0x949: V672 = 0xa09
0x94c: V673 = 0x953
0x94f: V674 = 0xb40
0x952: JUMP 0xb40
---
Entry stack: [V13, 0x485, V325, V328]
Stack pops: 0
Stack additions: [0x0, 0xa09, 0x953]
Exit stack: [V13, 0x485, V325, V328, 0x0, 0xa09, 0x953]

================================

Block 0x953
[0x953:0x97c]
---
Predecessors: [0xb40]
Successors: [0xb40]
---
0x953 JUMPDEST
0x954 DUP5
0x955 PUSH2 0xa04
0x958 DUP6
0x959 PUSH1 0x40
0x95b MLOAD
0x95c DUP1
0x95d PUSH1 0x60
0x95f ADD
0x960 PUSH1 0x40
0x962 MSTORE
0x963 DUP1
0x964 PUSH1 0x25
0x966 DUP2
0x967 MSTORE
0x968 PUSH1 0x20
0x96a ADD
0x96b PUSH2 0x1417
0x96e PUSH1 0x25
0x970 SWAP2
0x971 CODECOPY
0x972 PUSH1 0x1
0x974 PUSH1 0x0
0x976 PUSH2 0x97d
0x979 PUSH2 0xb40
0x97c JUMP
---
0x953: JUMPDEST 
0x955: V675 = 0xa04
0x959: V676 = 0x40
0x95b: V677 = M[0x40]
0x95d: V678 = 0x60
0x95f: V679 = ADD 0x60 V677
0x960: V680 = 0x40
0x962: M[0x40] = V679
0x964: V681 = 0x25
0x967: M[V677] = 0x25
0x968: V682 = 0x20
0x96a: V683 = ADD 0x20 V677
0x96b: V684 = 0x1417
0x96e: V685 = 0x25
0x971: CODECOPY V683 0x1417 0x25
0x972: V686 = 0x1
0x974: V687 = 0x0
0x976: V688 = 0x97d
0x979: V689 = 0xb40
0x97c: JUMP 0xb40
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, 0xa04, S3, V677, 0x1, 0x0, 0x97d]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771, S4, 0xa04, S3, V677, 0x1, 0x0, 0x97d]

================================

Block 0x97d
[0x97d:0xa03]
---
Predecessors: [0xb40]
Successors: [0x1000]
---
0x97d JUMPDEST
0x97e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x993 AND
0x994 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a9 AND
0x9aa DUP2
0x9ab MSTORE
0x9ac PUSH1 0x20
0x9ae ADD
0x9af SWAP1
0x9b0 DUP2
0x9b1 MSTORE
0x9b2 PUSH1 0x20
0x9b4 ADD
0x9b5 PUSH1 0x0
0x9b7 SHA3
0x9b8 PUSH1 0x0
0x9ba DUP11
0x9bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9d0 AND
0x9d1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9e6 AND
0x9e7 DUP2
0x9e8 MSTORE
0x9e9 PUSH1 0x20
0x9eb ADD
0x9ec SWAP1
0x9ed DUP2
0x9ee MSTORE
0x9ef PUSH1 0x20
0x9f1 ADD
0x9f2 PUSH1 0x0
0x9f4 SHA3
0x9f5 SLOAD
0x9f6 PUSH2 0x1000
0x9f9 SWAP1
0x9fa SWAP3
0x9fb SWAP2
0x9fc SWAP1
0x9fd PUSH4 0xffffffff
0xa02 AND
0xa03 JUMP
---
0x97d: JUMPDEST 
0x97e: V690 = 0xffffffffffffffffffffffffffffffffffffffff
0x993: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff V771
0x994: V692 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a9: V693 = AND 0xffffffffffffffffffffffffffffffffffffffff V691
0x9ab: M[S1] = V693
0x9ac: V694 = 0x20
0x9ae: V695 = ADD 0x20 S1
0x9b1: M[V695] = S2
0x9b2: V696 = 0x20
0x9b4: V697 = ADD 0x20 V695
0x9b5: V698 = 0x0
0x9b7: V699 = SHA3 0x0 V697
0x9b8: V700 = 0x0
0x9bb: V701 = 0xffffffffffffffffffffffffffffffffffffffff
0x9d0: V702 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x9d1: V703 = 0xffffffffffffffffffffffffffffffffffffffff
0x9e6: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff V702
0x9e8: M[0x0] = V704
0x9e9: V705 = 0x20
0x9eb: V706 = ADD 0x20 0x0
0x9ee: M[0x20] = V699
0x9ef: V707 = 0x20
0x9f1: V708 = ADD 0x20 0x20
0x9f2: V709 = 0x0
0x9f4: V710 = SHA3 0x0 0x40
0x9f5: V711 = S[V710]
0x9f6: V712 = 0x1000
0x9fd: V713 = 0xffffffff
0xa02: V714 = AND 0xffffffff 0x1000
0xa03: JUMP 0x1000
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, V711, S4, S3]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V711, S4, S3]

================================

Block 0xa04
[0xa04:0xa08]
---
Predecessors: [0x10ad]
Successors: [0xb48]
---
0xa04 JUMPDEST
0xa05 PUSH2 0xb48
0xa08 JUMP
---
0xa04: JUMPDEST 
0xa05: V715 = 0xb48
0xa08: JUMP 0xb48
---
Entry stack: [V13, 0x3b4, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1038]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x3b4, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1038]

================================

Block 0xa09
[0xa09:0xa12]
---
Predecessors: [0xc54, 0xf54]
Successors: [0x1a3, 0x2ca, 0x3b4, 0x485, 0x4e9]
---
0xa09 JUMPDEST
0xa0a PUSH1 0x1
0xa0c SWAP1
0xa0d POP
0xa0e SWAP3
0xa0f SWAP2
0xa10 POP
0xa11 POP
0xa12 JUMP
---
0xa09: JUMPDEST 
0xa0a: V716 = 0x1
0xa12: JUMP S3
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, S4, 0x1]

================================

Block 0xa13
[0xa13:0xa1f]
---
Predecessors: [0x4b3]
Successors: [0xb40]
---
0xa13 JUMPDEST
0xa14 PUSH1 0x0
0xa16 PUSH2 0xa27
0xa19 PUSH2 0xa20
0xa1c PUSH2 0xb40
0xa1f JUMP
---
0xa13: JUMPDEST 
0xa14: V717 = 0x0
0xa16: V718 = 0xa27
0xa19: V719 = 0xa20
0xa1c: V720 = 0xb40
0xa1f: JUMP 0xb40
---
Entry stack: [V13, 0x4e9, V353, V356]
Stack pops: 0
Stack additions: [0x0, 0xa27, 0xa20]
Exit stack: [V13, 0x4e9, V353, V356, 0x0, 0xa27, 0xa20]

================================

Block 0xa20
[0xa20:0xa26]
---
Predecessors: [0xb40]
Successors: [0xd3f]
---
0xa20 JUMPDEST
0xa21 DUP5
0xa22 DUP5
0xa23 PUSH2 0xd3f
0xa26 JUMP
---
0xa20: JUMPDEST 
0xa23: V721 = 0xd3f
0xa26: JUMP 0xd3f
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S3]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771, S4, S3]

================================

Block 0xa27
[0xa27:0xa30]
---
Predecessors: [0xf54, 0x12cb]
Successors: [0x4e9]
---
0xa27 JUMPDEST
0xa28 PUSH1 0x1
0xa2a SWAP1
0xa2b POP
0xa2c SWAP3
0xa2d SWAP2
0xa2e POP
0xa2f POP
0xa30 JUMP
---
0xa27: JUMPDEST 
0xa28: V722 = 0x1
0xa30: JUMP S3
---
Entry stack: [V13, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, S4, 0x1]

================================

Block 0xa31
[0xa31:0xab7]
---
Predecessors: [0x517, 0x86d]
Successors: [0x563, 0x711, 0x872, 0x895]
---
0xa31 JUMPDEST
0xa32 PUSH1 0x0
0xa34 PUSH1 0x1
0xa36 PUSH1 0x0
0xa38 DUP5
0xa39 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4e AND
0xa4f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa64 AND
0xa65 DUP2
0xa66 MSTORE
0xa67 PUSH1 0x20
0xa69 ADD
0xa6a SWAP1
0xa6b DUP2
0xa6c MSTORE
0xa6d PUSH1 0x20
0xa6f ADD
0xa70 PUSH1 0x0
0xa72 SHA3
0xa73 PUSH1 0x0
0xa75 DUP4
0xa76 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8b AND
0xa8c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa1 AND
0xaa2 DUP2
0xaa3 MSTORE
0xaa4 PUSH1 0x20
0xaa6 ADD
0xaa7 SWAP1
0xaa8 DUP2
0xaa9 MSTORE
0xaaa PUSH1 0x20
0xaac ADD
0xaad PUSH1 0x0
0xaaf SHA3
0xab0 SLOAD
0xab1 SWAP1
0xab2 POP
0xab3 SWAP3
0xab4 SWAP2
0xab5 POP
0xab6 POP
0xab7 JUMP
---
0xa31: JUMPDEST 
0xa32: V723 = 0x0
0xa34: V724 = 0x1
0xa36: V725 = 0x0
0xa39: V726 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4e: V727 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xa4f: V728 = 0xffffffffffffffffffffffffffffffffffffffff
0xa64: V729 = AND 0xffffffffffffffffffffffffffffffffffffffff V727
0xa66: M[0x0] = V729
0xa67: V730 = 0x20
0xa69: V731 = ADD 0x20 0x0
0xa6c: M[0x20] = 0x1
0xa6d: V732 = 0x20
0xa6f: V733 = ADD 0x20 0x20
0xa70: V734 = 0x0
0xa72: V735 = SHA3 0x0 0x40
0xa73: V736 = 0x0
0xa76: V737 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8b: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0xa8c: V739 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa1: V740 = AND 0xffffffffffffffffffffffffffffffffffffffff V738
0xaa3: M[0x0] = V740
0xaa4: V741 = 0x20
0xaa6: V742 = ADD 0x20 0x0
0xaa9: M[0x20] = V735
0xaaa: V743 = 0x20
0xaac: V744 = ADD 0x20 0x20
0xaad: V745 = 0x0
0xaaf: V746 = SHA3 0x0 0x40
0xab0: V747 = S[V746]
0xab7: JUMP S2
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V747]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V747]

================================

Block 0xab8
[0xab8:0xac8]
---
Predecessors: [0x751, 0xec1]
Successors: [0xac9, 0xb36]
---
0xab8 JUMPDEST
0xab9 PUSH1 0x0
0xabb DUP1
0xabc DUP3
0xabd DUP5
0xabe ADD
0xabf SWAP1
0xac0 POP
0xac1 DUP4
0xac2 DUP2
0xac3 LT
0xac4 ISZERO
0xac5 PUSH2 0xb36
0xac8 JUMPI
---
0xab8: JUMPDEST 
0xab9: V748 = 0x0
0xabe: V749 = ADD S1 S0
0xac3: V750 = LT V749 S1
0xac4: V751 = ISZERO V750
0xac5: V752 = 0xb36
0xac8: JUMPI 0xb36 V751
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V749]
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V749]

================================

Block 0xac9
[0xac9:0xb35]
---
Predecessors: [0xab8]
Successors: []
---
0xac9 PUSH1 0x40
0xacb MLOAD
0xacc PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xaed DUP2
0xaee MSTORE
0xaef PUSH1 0x4
0xaf1 ADD
0xaf2 DUP1
0xaf3 DUP1
0xaf4 PUSH1 0x20
0xaf6 ADD
0xaf7 DUP3
0xaf8 DUP2
0xaf9 SUB
0xafa DUP3
0xafb MSTORE
0xafc PUSH1 0x1b
0xafe DUP2
0xaff MSTORE
0xb00 PUSH1 0x20
0xb02 ADD
0xb03 DUP1
0xb04 PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xb25 DUP2
0xb26 MSTORE
0xb27 POP
0xb28 PUSH1 0x20
0xb2a ADD
0xb2b SWAP2
0xb2c POP
0xb2d POP
0xb2e PUSH1 0x40
0xb30 MLOAD
0xb31 DUP1
0xb32 SWAP2
0xb33 SUB
0xb34 SWAP1
0xb35 REVERT
---
0xac9: V753 = 0x40
0xacb: V754 = M[0x40]
0xacc: V755 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xaee: M[V754] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xaef: V756 = 0x4
0xaf1: V757 = ADD 0x4 V754
0xaf4: V758 = 0x20
0xaf6: V759 = ADD 0x20 V757
0xaf9: V760 = SUB V759 V757
0xafb: M[V757] = V760
0xafc: V761 = 0x1b
0xaff: M[V759] = 0x1b
0xb00: V762 = 0x20
0xb02: V763 = ADD 0x20 V759
0xb04: V764 = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xb26: M[V763] = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xb28: V765 = 0x20
0xb2a: V766 = ADD 0x20 V763
0xb2e: V767 = 0x40
0xb30: V768 = M[0x40]
0xb33: V769 = SUB V766 V768
0xb35: REVERT V768 V769
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V749]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V749]

================================

Block 0xb36
[0xb36:0xb3f]
---
Predecessors: [0xab8]
Successors: [0x7d7, 0xf54]
---
0xb36 JUMPDEST
0xb37 DUP1
0xb38 SWAP2
0xb39 POP
0xb3a POP
0xb3b SWAP3
0xb3c SWAP2
0xb3d POP
0xb3e POP
0xb3f JUMP
---
0xb36: JUMPDEST 
0xb3f: JUMP S4
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V749]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, V749]

================================

Block 0xb40
[0xb40:0xb47]
---
Predecessors: [0x61b, 0x650, 0x65c, 0x733, 0x740, 0x7e6, 0x842, 0x881, 0x946, 0x953, 0xa13]
Successors: [0x628, 0x65c, 0x6c2, 0x740, 0x751, 0x7f1, 0x86d, 0x88f, 0x953, 0x97d, 0xa20]
---
0xb40 JUMPDEST
0xb41 PUSH1 0x0
0xb43 CALLER
0xb44 SWAP1
0xb45 POP
0xb46 SWAP1
0xb47 JUMP
---
0xb40: JUMPDEST 
0xb41: V770 = 0x0
0xb43: V771 = CALLER
0xb47: JUMP {0x628, 0x65c, 0x6c2, 0x740, 0x751, 0x7f1, 0x86d, 0x88f, 0x953, 0x97d, 0xa20}
---
Entry stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x628, 0x65c, 0x6c2, 0x740, 0x751, 0x7f1, 0x86d, 0x88f, 0x953, 0x97d, 0xa20}]
Stack pops: 1
Stack additions: [V771]
Exit stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V771]

================================

Block 0xb48
[0xb48:0xb7d]
---
Predecessors: [0x628, 0x70c, 0x7d7, 0x88f, 0xa04]
Successors: [0xb7e, 0xbce]
---
0xb48 JUMPDEST
0xb49 PUSH1 0x0
0xb4b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb60 AND
0xb61 DUP4
0xb62 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb77 AND
0xb78 EQ
0xb79 ISZERO
0xb7a PUSH2 0xbce
0xb7d JUMPI
---
0xb48: JUMPDEST 
0xb49: V772 = 0x0
0xb4b: V773 = 0xffffffffffffffffffffffffffffffffffffffff
0xb60: V774 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xb62: V775 = 0xffffffffffffffffffffffffffffffffffffffff
0xb77: V776 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xb78: V777 = EQ V776 0x0
0xb79: V778 = ISZERO V777
0xb7a: V779 = 0xbce
0xb7d: JUMPI 0xbce V778
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xb7e
[0xb7e:0xbcd]
---
Predecessors: [0xb48]
Successors: []
---
0xb7e PUSH1 0x40
0xb80 MLOAD
0xb81 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xba2 DUP2
0xba3 MSTORE
0xba4 PUSH1 0x4
0xba6 ADD
0xba7 DUP1
0xba8 DUP1
0xba9 PUSH1 0x20
0xbab ADD
0xbac DUP3
0xbad DUP2
0xbae SUB
0xbaf DUP3
0xbb0 MSTORE
0xbb1 PUSH1 0x24
0xbb3 DUP2
0xbb4 MSTORE
0xbb5 PUSH1 0x20
0xbb7 ADD
0xbb8 DUP1
0xbb9 PUSH2 0x13f3
0xbbc PUSH1 0x24
0xbbe SWAP2
0xbbf CODECOPY
0xbc0 PUSH1 0x40
0xbc2 ADD
0xbc3 SWAP2
0xbc4 POP
0xbc5 POP
0xbc6 PUSH1 0x40
0xbc8 MLOAD
0xbc9 DUP1
0xbca SWAP2
0xbcb SUB
0xbcc SWAP1
0xbcd REVERT
---
0xb7e: V780 = 0x40
0xb80: V781 = M[0x40]
0xb81: V782 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xba3: M[V781] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xba4: V783 = 0x4
0xba6: V784 = ADD 0x4 V781
0xba9: V785 = 0x20
0xbab: V786 = ADD 0x20 V784
0xbae: V787 = SUB V786 V784
0xbb0: M[V784] = V787
0xbb1: V788 = 0x24
0xbb4: M[V786] = 0x24
0xbb5: V789 = 0x20
0xbb7: V790 = ADD 0x20 V786
0xbb9: V791 = 0x13f3
0xbbc: V792 = 0x24
0xbbf: CODECOPY V790 0x13f3 0x24
0xbc0: V793 = 0x40
0xbc2: V794 = ADD 0x40 V790
0xbc6: V795 = 0x40
0xbc8: V796 = M[0x40]
0xbcb: V797 = SUB V794 V796
0xbcd: REVERT V796 V797
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xbce
[0xbce:0xc03]
---
Predecessors: [0xb48]
Successors: [0xc04, 0xc54]
---
0xbce JUMPDEST
0xbcf PUSH1 0x0
0xbd1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbe6 AND
0xbe7 DUP3
0xbe8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbfd AND
0xbfe EQ
0xbff ISZERO
0xc00 PUSH2 0xc54
0xc03 JUMPI
---
0xbce: JUMPDEST 
0xbcf: V798 = 0x0
0xbd1: V799 = 0xffffffffffffffffffffffffffffffffffffffff
0xbe6: V800 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xbe8: V801 = 0xffffffffffffffffffffffffffffffffffffffff
0xbfd: V802 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xbfe: V803 = EQ V802 0x0
0xbff: V804 = ISZERO V803
0xc00: V805 = 0xc54
0xc03: JUMPI 0xc54 V804
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xc04
[0xc04:0xc53]
---
Predecessors: [0xbce]
Successors: []
---
0xc04 PUSH1 0x40
0xc06 MLOAD
0xc07 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc28 DUP2
0xc29 MSTORE
0xc2a PUSH1 0x4
0xc2c ADD
0xc2d DUP1
0xc2e DUP1
0xc2f PUSH1 0x20
0xc31 ADD
0xc32 DUP3
0xc33 DUP2
0xc34 SUB
0xc35 DUP3
0xc36 MSTORE
0xc37 PUSH1 0x22
0xc39 DUP2
0xc3a MSTORE
0xc3b PUSH1 0x20
0xc3d ADD
0xc3e DUP1
0xc3f PUSH2 0x1319
0xc42 PUSH1 0x22
0xc44 SWAP2
0xc45 CODECOPY
0xc46 PUSH1 0x40
0xc48 ADD
0xc49 SWAP2
0xc4a POP
0xc4b POP
0xc4c PUSH1 0x40
0xc4e MLOAD
0xc4f DUP1
0xc50 SWAP2
0xc51 SUB
0xc52 SWAP1
0xc53 REVERT
---
0xc04: V806 = 0x40
0xc06: V807 = M[0x40]
0xc07: V808 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc29: M[V807] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc2a: V809 = 0x4
0xc2c: V810 = ADD 0x4 V807
0xc2f: V811 = 0x20
0xc31: V812 = ADD 0x20 V810
0xc34: V813 = SUB V812 V810
0xc36: M[V810] = V813
0xc37: V814 = 0x22
0xc3a: M[V812] = 0x22
0xc3b: V815 = 0x20
0xc3d: V816 = ADD 0x20 V812
0xc3f: V817 = 0x1319
0xc42: V818 = 0x22
0xc45: CODECOPY V816 0x1319 0x22
0xc46: V819 = 0x40
0xc48: V820 = ADD 0x40 V816
0xc4c: V821 = 0x40
0xc4e: V822 = M[0x40]
0xc51: V823 = SUB V820 V822
0xc53: REVERT V822 V823
---
Entry stack: [V13, S8, S7, S6, S5, S4, {0x62f, 0x711, 0x7dc, 0x895, 0xa09}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, S4, {0x62f, 0x711, 0x7dc, 0x895, 0xa09}, S2, S1, S0]

================================

Block 0xc54
[0xc54:0xd3e]
---
Predecessors: [0xbce]
Successors: [0x62f, 0x711, 0x7dc, 0x895, 0xa09]
---
0xc54 JUMPDEST
0xc55 DUP1
0xc56 PUSH1 0x1
0xc58 PUSH1 0x0
0xc5a DUP6
0xc5b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc70 AND
0xc71 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc86 AND
0xc87 DUP2
0xc88 MSTORE
0xc89 PUSH1 0x20
0xc8b ADD
0xc8c SWAP1
0xc8d DUP2
0xc8e MSTORE
0xc8f PUSH1 0x20
0xc91 ADD
0xc92 PUSH1 0x0
0xc94 SHA3
0xc95 PUSH1 0x0
0xc97 DUP5
0xc98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcad AND
0xcae PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcc3 AND
0xcc4 DUP2
0xcc5 MSTORE
0xcc6 PUSH1 0x20
0xcc8 ADD
0xcc9 SWAP1
0xcca DUP2
0xccb MSTORE
0xccc PUSH1 0x20
0xcce ADD
0xccf PUSH1 0x0
0xcd1 SHA3
0xcd2 DUP2
0xcd3 SWAP1
0xcd4 SSTORE
0xcd5 POP
0xcd6 DUP2
0xcd7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcec AND
0xced DUP4
0xcee PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd03 AND
0xd04 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xd25 DUP4
0xd26 PUSH1 0x40
0xd28 MLOAD
0xd29 DUP1
0xd2a DUP3
0xd2b DUP2
0xd2c MSTORE
0xd2d PUSH1 0x20
0xd2f ADD
0xd30 SWAP2
0xd31 POP
0xd32 POP
0xd33 PUSH1 0x40
0xd35 MLOAD
0xd36 DUP1
0xd37 SWAP2
0xd38 SUB
0xd39 SWAP1
0xd3a LOG3
0xd3b POP
0xd3c POP
0xd3d POP
0xd3e JUMP
---
0xc54: JUMPDEST 
0xc56: V824 = 0x1
0xc58: V825 = 0x0
0xc5b: V826 = 0xffffffffffffffffffffffffffffffffffffffff
0xc70: V827 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xc71: V828 = 0xffffffffffffffffffffffffffffffffffffffff
0xc86: V829 = AND 0xffffffffffffffffffffffffffffffffffffffff V827
0xc88: M[0x0] = V829
0xc89: V830 = 0x20
0xc8b: V831 = ADD 0x20 0x0
0xc8e: M[0x20] = 0x1
0xc8f: V832 = 0x20
0xc91: V833 = ADD 0x20 0x20
0xc92: V834 = 0x0
0xc94: V835 = SHA3 0x0 0x40
0xc95: V836 = 0x0
0xc98: V837 = 0xffffffffffffffffffffffffffffffffffffffff
0xcad: V838 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xcae: V839 = 0xffffffffffffffffffffffffffffffffffffffff
0xcc3: V840 = AND 0xffffffffffffffffffffffffffffffffffffffff V838
0xcc5: M[0x0] = V840
0xcc6: V841 = 0x20
0xcc8: V842 = ADD 0x20 0x0
0xccb: M[0x20] = V835
0xccc: V843 = 0x20
0xcce: V844 = ADD 0x20 0x20
0xccf: V845 = 0x0
0xcd1: V846 = SHA3 0x0 0x40
0xcd4: S[V846] = S0
0xcd7: V847 = 0xffffffffffffffffffffffffffffffffffffffff
0xcec: V848 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xcee: V849 = 0xffffffffffffffffffffffffffffffffffffffff
0xd03: V850 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd04: V851 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xd26: V852 = 0x40
0xd28: V853 = M[0x40]
0xd2c: M[V853] = S0
0xd2d: V854 = 0x20
0xd2f: V855 = ADD 0x20 V853
0xd33: V856 = 0x40
0xd35: V857 = M[0x40]
0xd38: V858 = SUB V855 V857
0xd3a: LOG V857 V858 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V850 V848
0xd3e: JUMP {0x62f, 0x711, 0x7dc, 0x895, 0xa09}
---
Entry stack: [V13, S8, S7, S6, S5, S4, {0x62f, 0x711, 0x7dc, 0x895, 0xa09}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, S4]

================================

Block 0xd3f
[0xd3f:0xd74]
---
Predecessors: [0x643, 0xa20]
Successors: [0xd75, 0xdc5]
---
0xd3f JUMPDEST
0xd40 PUSH1 0x0
0xd42 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd57 AND
0xd58 DUP4
0xd59 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd6e AND
0xd6f EQ
0xd70 ISZERO
0xd71 PUSH2 0xdc5
0xd74 JUMPI
---
0xd3f: JUMPDEST 
0xd40: V859 = 0x0
0xd42: V860 = 0xffffffffffffffffffffffffffffffffffffffff
0xd57: V861 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xd59: V862 = 0xffffffffffffffffffffffffffffffffffffffff
0xd6e: V863 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xd6f: V864 = EQ V863 0x0
0xd70: V865 = ISZERO V864
0xd71: V866 = 0xdc5
0xd74: JUMPI 0xdc5 V865
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xd75
[0xd75:0xdc4]
---
Predecessors: [0xd3f]
Successors: []
---
0xd75 PUSH1 0x40
0xd77 MLOAD
0xd78 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xd99 DUP2
0xd9a MSTORE
0xd9b PUSH1 0x4
0xd9d ADD
0xd9e DUP1
0xd9f DUP1
0xda0 PUSH1 0x20
0xda2 ADD
0xda3 DUP3
0xda4 DUP2
0xda5 SUB
0xda6 DUP3
0xda7 MSTORE
0xda8 PUSH1 0x25
0xdaa DUP2
0xdab MSTORE
0xdac PUSH1 0x20
0xdae ADD
0xdaf DUP1
0xdb0 PUSH2 0x13ce
0xdb3 PUSH1 0x25
0xdb5 SWAP2
0xdb6 CODECOPY
0xdb7 PUSH1 0x40
0xdb9 ADD
0xdba SWAP2
0xdbb POP
0xdbc POP
0xdbd PUSH1 0x40
0xdbf MLOAD
0xdc0 DUP1
0xdc1 SWAP2
0xdc2 SUB
0xdc3 SWAP1
0xdc4 REVERT
---
0xd75: V867 = 0x40
0xd77: V868 = M[0x40]
0xd78: V869 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xd9a: M[V868] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xd9b: V870 = 0x4
0xd9d: V871 = ADD 0x4 V868
0xda0: V872 = 0x20
0xda2: V873 = ADD 0x20 V871
0xda5: V874 = SUB V873 V871
0xda7: M[V871] = V874
0xda8: V875 = 0x25
0xdab: M[V873] = 0x25
0xdac: V876 = 0x20
0xdae: V877 = ADD 0x20 V873
0xdb0: V878 = 0x13ce
0xdb3: V879 = 0x25
0xdb6: CODECOPY V877 0x13ce 0x25
0xdb7: V880 = 0x40
0xdb9: V881 = ADD 0x40 V877
0xdbd: V882 = 0x40
0xdbf: V883 = M[0x40]
0xdc2: V884 = SUB V881 V883
0xdc4: REVERT V883 V884
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xdc5
[0xdc5:0xdfa]
---
Predecessors: [0xd3f]
Successors: [0xdfb, 0xe4b]
---
0xdc5 JUMPDEST
0xdc6 PUSH1 0x0
0xdc8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xddd AND
0xdde DUP3
0xddf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf4 AND
0xdf5 EQ
0xdf6 ISZERO
0xdf7 PUSH2 0xe4b
0xdfa JUMPI
---
0xdc5: JUMPDEST 
0xdc6: V885 = 0x0
0xdc8: V886 = 0xffffffffffffffffffffffffffffffffffffffff
0xddd: V887 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0xddf: V888 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf4: V889 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xdf5: V890 = EQ V889 0x0
0xdf6: V891 = ISZERO V890
0xdf7: V892 = 0xe4b
0xdfa: JUMPI 0xe4b V891
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xdfb
[0xdfb:0xe4a]
---
Predecessors: [0xdc5]
Successors: []
---
0xdfb PUSH1 0x40
0xdfd MLOAD
0xdfe PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0xe1f DUP2
0xe20 MSTORE
0xe21 PUSH1 0x4
0xe23 ADD
0xe24 DUP1
0xe25 DUP1
0xe26 PUSH1 0x20
0xe28 ADD
0xe29 DUP3
0xe2a DUP2
0xe2b SUB
0xe2c DUP3
0xe2d MSTORE
0xe2e PUSH1 0x23
0xe30 DUP2
0xe31 MSTORE
0xe32 PUSH1 0x20
0xe34 ADD
0xe35 DUP1
0xe36 PUSH2 0x12d4
0xe39 PUSH1 0x23
0xe3b SWAP2
0xe3c CODECOPY
0xe3d PUSH1 0x40
0xe3f ADD
0xe40 SWAP2
0xe41 POP
0xe42 POP
0xe43 PUSH1 0x40
0xe45 MLOAD
0xe46 DUP1
0xe47 SWAP2
0xe48 SUB
0xe49 SWAP1
0xe4a REVERT
---
0xdfb: V893 = 0x40
0xdfd: V894 = M[0x40]
0xdfe: V895 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xe20: M[V894] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xe21: V896 = 0x4
0xe23: V897 = ADD 0x4 V894
0xe26: V898 = 0x20
0xe28: V899 = ADD 0x20 V897
0xe2b: V900 = SUB V899 V897
0xe2d: M[V897] = V900
0xe2e: V901 = 0x23
0xe31: M[V899] = 0x23
0xe32: V902 = 0x20
0xe34: V903 = ADD 0x20 V899
0xe36: V904 = 0x12d4
0xe39: V905 = 0x23
0xe3c: CODECOPY V903 0x12d4 0x23
0xe3d: V906 = 0x40
0xe3f: V907 = ADD 0x40 V903
0xe43: V908 = 0x40
0xe45: V909 = M[0x40]
0xe48: V910 = SUB V907 V909
0xe4a: REVERT V909 V910
---
Entry stack: [V13, S8, S7, S6, S5, 0x0, {0x650, 0xa27}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, 0x0, {0x650, 0xa27}, S2, S1, S0]

================================

Block 0xe4b
[0xe4b:0xe55]
---
Predecessors: [0xdc5]
Successors: [0x1284]
---
0xe4b JUMPDEST
0xe4c PUSH2 0xe56
0xe4f DUP4
0xe50 DUP4
0xe51 DUP4
0xe52 PUSH2 0x1284
0xe55 JUMP
---
0xe4b: JUMPDEST 
0xe4c: V911 = 0xe56
0xe52: V912 = 0x1284
0xe55: JUMP 0x1284
---
Entry stack: [V13, S8, S7, S6, S5, 0x0, {0x650, 0xa27}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xe56, S2, S1, S0]
Exit stack: [V13, S8, S7, S6, S5, 0x0, {0x650, 0xa27}, S2, S1, S0, 0xe56, S2, S1, S0]

================================

Block 0xe56
[0xe56:0xec0]
---
Predecessors: [0x1284]
Successors: [0x1000]
---
0xe56 JUMPDEST
0xe57 PUSH2 0xec1
0xe5a DUP2
0xe5b PUSH1 0x40
0xe5d MLOAD
0xe5e DUP1
0xe5f PUSH1 0x60
0xe61 ADD
0xe62 PUSH1 0x40
0xe64 MSTORE
0xe65 DUP1
0xe66 PUSH1 0x26
0xe68 DUP2
0xe69 MSTORE
0xe6a PUSH1 0x20
0xe6c ADD
0xe6d PUSH2 0x133b
0xe70 PUSH1 0x26
0xe72 SWAP2
0xe73 CODECOPY
0xe74 PUSH1 0x0
0xe76 DUP1
0xe77 DUP8
0xe78 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe8d AND
0xe8e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea3 AND
0xea4 DUP2
0xea5 MSTORE
0xea6 PUSH1 0x20
0xea8 ADD
0xea9 SWAP1
0xeaa DUP2
0xeab MSTORE
0xeac PUSH1 0x20
0xeae ADD
0xeaf PUSH1 0x0
0xeb1 SHA3
0xeb2 SLOAD
0xeb3 PUSH2 0x1000
0xeb6 SWAP1
0xeb7 SWAP3
0xeb8 SWAP2
0xeb9 SWAP1
0xeba PUSH4 0xffffffff
0xebf AND
0xec0 JUMP
---
0xe56: JUMPDEST 
0xe57: V913 = 0xec1
0xe5b: V914 = 0x40
0xe5d: V915 = M[0x40]
0xe5f: V916 = 0x60
0xe61: V917 = ADD 0x60 V915
0xe62: V918 = 0x40
0xe64: M[0x40] = V917
0xe66: V919 = 0x26
0xe69: M[V915] = 0x26
0xe6a: V920 = 0x20
0xe6c: V921 = ADD 0x20 V915
0xe6d: V922 = 0x133b
0xe70: V923 = 0x26
0xe73: CODECOPY V921 0x133b 0x26
0xe74: V924 = 0x0
0xe78: V925 = 0xffffffffffffffffffffffffffffffffffffffff
0xe8d: V926 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xe8e: V927 = 0xffffffffffffffffffffffffffffffffffffffff
0xea3: V928 = AND 0xffffffffffffffffffffffffffffffffffffffff V926
0xea5: M[0x0] = V928
0xea6: V929 = 0x20
0xea8: V930 = ADD 0x20 0x0
0xeab: M[0x20] = 0x0
0xeac: V931 = 0x20
0xeae: V932 = ADD 0x20 0x20
0xeaf: V933 = 0x0
0xeb1: V934 = SHA3 0x0 0x40
0xeb2: V935 = S[V934]
0xeb3: V936 = 0x1000
0xeba: V937 = 0xffffffff
0xebf: V938 = AND 0xffffffff 0x1000
0xec0: JUMP 0x1000
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xec1, V935, S0, V915]
Exit stack: [V13, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0xec1, V935, S0, V915]

================================

Block 0xec1
[0xec1:0xf53]
---
Predecessors: [0x10ad]
Successors: [0xab8]
---
0xec1 JUMPDEST
0xec2 PUSH1 0x0
0xec4 DUP1
0xec5 DUP6
0xec6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xedb AND
0xedc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef1 AND
0xef2 DUP2
0xef3 MSTORE
0xef4 PUSH1 0x20
0xef6 ADD
0xef7 SWAP1
0xef8 DUP2
0xef9 MSTORE
0xefa PUSH1 0x20
0xefc ADD
0xefd PUSH1 0x0
0xeff SHA3
0xf00 DUP2
0xf01 SWAP1
0xf02 SSTORE
0xf03 POP
0xf04 PUSH2 0xf54
0xf07 DUP2
0xf08 PUSH1 0x0
0xf0a DUP1
0xf0b DUP6
0xf0c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf21 AND
0xf22 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf37 AND
0xf38 DUP2
0xf39 MSTORE
0xf3a PUSH1 0x20
0xf3c ADD
0xf3d SWAP1
0xf3e DUP2
0xf3f MSTORE
0xf40 PUSH1 0x20
0xf42 ADD
0xf43 PUSH1 0x0
0xf45 SHA3
0xf46 SLOAD
0xf47 PUSH2 0xab8
0xf4a SWAP1
0xf4b SWAP2
0xf4c SWAP1
0xf4d PUSH4 0xffffffff
0xf52 AND
0xf53 JUMP
---
0xec1: JUMPDEST 
0xec2: V939 = 0x0
0xec6: V940 = 0xffffffffffffffffffffffffffffffffffffffff
0xedb: V941 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xedc: V942 = 0xffffffffffffffffffffffffffffffffffffffff
0xef1: V943 = AND 0xffffffffffffffffffffffffffffffffffffffff V941
0xef3: M[0x0] = V943
0xef4: V944 = 0x20
0xef6: V945 = ADD 0x20 0x0
0xef9: M[0x20] = 0x0
0xefa: V946 = 0x20
0xefc: V947 = ADD 0x20 0x20
0xefd: V948 = 0x0
0xeff: V949 = SHA3 0x0 0x40
0xf02: S[V949] = V1038
0xf04: V950 = 0xf54
0xf08: V951 = 0x0
0xf0c: V952 = 0xffffffffffffffffffffffffffffffffffffffff
0xf21: V953 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xf22: V954 = 0xffffffffffffffffffffffffffffffffffffffff
0xf37: V955 = AND 0xffffffffffffffffffffffffffffffffffffffff V953
0xf39: M[0x0] = V955
0xf3a: V956 = 0x20
0xf3c: V957 = ADD 0x20 0x0
0xf3f: M[0x20] = 0x0
0xf40: V958 = 0x20
0xf42: V959 = ADD 0x20 0x20
0xf43: V960 = 0x0
0xf45: V961 = SHA3 0x0 0x40
0xf46: V962 = S[V961]
0xf47: V963 = 0xab8
0xf4d: V964 = 0xffffffff
0xf52: V965 = AND 0xffffffff 0xab8
0xf53: JUMP 0xab8
---
Entry stack: [V13, 0x3b4, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1038]
Stack pops: 4
Stack additions: [S3, S2, S1, 0xf54, V962, S1]
Exit stack: [V13, 0x3b4, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xf54, V962, S1]

================================

Block 0xf54
[0xf54:0xfff]
---
Predecessors: [0xb36]
Successors: [0x650, 0x711, 0xa09, 0xa27]
---
0xf54 JUMPDEST
0xf55 PUSH1 0x0
0xf57 DUP1
0xf58 DUP5
0xf59 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf6e AND
0xf6f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf84 AND
0xf85 DUP2
0xf86 MSTORE
0xf87 PUSH1 0x20
0xf89 ADD
0xf8a SWAP1
0xf8b DUP2
0xf8c MSTORE
0xf8d PUSH1 0x20
0xf8f ADD
0xf90 PUSH1 0x0
0xf92 SHA3
0xf93 DUP2
0xf94 SWAP1
0xf95 SSTORE
0xf96 POP
0xf97 DUP2
0xf98 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfad AND
0xfae DUP4
0xfaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfc4 AND
0xfc5 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xfe6 DUP4
0xfe7 PUSH1 0x40
0xfe9 MLOAD
0xfea DUP1
0xfeb DUP3
0xfec DUP2
0xfed MSTORE
0xfee PUSH1 0x20
0xff0 ADD
0xff1 SWAP2
0xff2 POP
0xff3 POP
0xff4 PUSH1 0x40
0xff6 MLOAD
0xff7 DUP1
0xff8 SWAP2
0xff9 SUB
0xffa SWAP1
0xffb LOG3
0xffc POP
0xffd POP
0xffe POP
0xfff JUMP
---
0xf54: JUMPDEST 
0xf55: V966 = 0x0
0xf59: V967 = 0xffffffffffffffffffffffffffffffffffffffff
0xf6e: V968 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xf6f: V969 = 0xffffffffffffffffffffffffffffffffffffffff
0xf84: V970 = AND 0xffffffffffffffffffffffffffffffffffffffff V968
0xf86: M[0x0] = V970
0xf87: V971 = 0x20
0xf89: V972 = ADD 0x20 0x0
0xf8c: M[0x20] = 0x0
0xf8d: V973 = 0x20
0xf8f: V974 = ADD 0x20 0x20
0xf90: V975 = 0x0
0xf92: V976 = SHA3 0x0 0x40
0xf95: S[V976] = V749
0xf98: V977 = 0xffffffffffffffffffffffffffffffffffffffff
0xfad: V978 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xfaf: V979 = 0xffffffffffffffffffffffffffffffffffffffff
0xfc4: V980 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xfc5: V981 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xfe7: V982 = 0x40
0xfe9: V983 = M[0x40]
0xfed: M[V983] = S1
0xfee: V984 = 0x20
0xff0: V985 = ADD 0x20 V983
0xff4: V986 = 0x40
0xff6: V987 = M[0x40]
0xff9: V988 = SUB V985 V987
0xffb: LOG V987 V988 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V980 V978
0xfff: JUMP S4
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, S3, S2, S1, V749]
Stack pops: 5
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, S5]

================================

Block 0x1000
[0x1000:0x100c]
---
Predecessors: [0x6c2, 0x872, 0x97d, 0xe56, 0x1152, 0x1289]
Successors: [0x100d, 0x10ad]
---
0x1000 JUMPDEST
0x1001 PUSH1 0x0
0x1003 DUP4
0x1004 DUP4
0x1005 GT
0x1006 ISZERO
0x1007 DUP3
0x1008 SWAP1
0x1009 PUSH2 0x10ad
0x100c JUMPI
---
0x1000: JUMPDEST 
0x1001: V989 = 0x0
0x1005: V990 = GT S1 S2
0x1006: V991 = ISZERO V990
0x1009: V992 = 0x10ad
0x100c: JUMPI 0x10ad V991
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, S0]
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, S0]

================================

Block 0x100d
[0x100d:0x1056]
---
Predecessors: [0x1000]
Successors: [0x1057]
---
0x100d PUSH1 0x40
0x100f MLOAD
0x1010 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1031 DUP2
0x1032 MSTORE
0x1033 PUSH1 0x4
0x1035 ADD
0x1036 DUP1
0x1037 DUP1
0x1038 PUSH1 0x20
0x103a ADD
0x103b DUP3
0x103c DUP2
0x103d SUB
0x103e DUP3
0x103f MSTORE
0x1040 DUP4
0x1041 DUP2
0x1042 DUP2
0x1043 MLOAD
0x1044 DUP2
0x1045 MSTORE
0x1046 PUSH1 0x20
0x1048 ADD
0x1049 SWAP2
0x104a POP
0x104b DUP1
0x104c MLOAD
0x104d SWAP1
0x104e PUSH1 0x20
0x1050 ADD
0x1051 SWAP1
0x1052 DUP1
0x1053 DUP4
0x1054 DUP4
0x1055 PUSH1 0x0
---
0x100d: V993 = 0x40
0x100f: V994 = M[0x40]
0x1010: V995 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1032: M[V994] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1033: V996 = 0x4
0x1035: V997 = ADD 0x4 V994
0x1038: V998 = 0x20
0x103a: V999 = ADD 0x20 V997
0x103d: V1000 = SUB V999 V997
0x103f: M[V997] = V1000
0x1043: V1001 = M[S0]
0x1045: M[V999] = V1001
0x1046: V1002 = 0x20
0x1048: V1003 = ADD 0x20 V999
0x104c: V1004 = M[S0]
0x104e: V1005 = 0x20
0x1050: V1006 = ADD 0x20 S0
0x1055: V1007 = 0x0
---
Entry stack: [V13, 0x3b4, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 1
Stack additions: [S0, V997, V997, V1003, V1006, V1004, V1004, V1003, V1006, 0x0]
Exit stack: [V13, 0x3b4, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0, V997, V997, V1003, V1006, V1004, V1004, V1003, V1006, 0x0]

================================

Block 0x1057
[0x1057:0x105f]
---
Predecessors: [0x100d, 0x1060]
Successors: [0x1060, 0x1072]
---
0x1057 JUMPDEST
0x1058 DUP4
0x1059 DUP2
0x105a LT
0x105b ISZERO
0x105c PUSH2 0x1072
0x105f JUMPI
---
0x1057: JUMPDEST 
0x105a: V1008 = LT S0 V1004
0x105b: V1009 = ISZERO V1008
0x105c: V1010 = 0x1072
0x105f: JUMPI 0x1072 V1009
---
Entry stack: [V13, 0x3b4, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V997, V997, V1003, V1006, V1004, V1004, V1003, V1006, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x3b4, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V997, V997, V1003, V1006, V1004, V1004, V1003, V1006, S0]

================================

Block 0x1060
[0x1060:0x1071]
---
Predecessors: [0x1057]
Successors: [0x1057]
---
0x1060 DUP1
0x1061 DUP3
0x1062 ADD
0x1063 MLOAD
0x1064 DUP2
0x1065 DUP5
0x1066 ADD
0x1067 MSTORE
0x1068 PUSH1 0x20
0x106a DUP2
0x106b ADD
0x106c SWAP1
0x106d POP
0x106e PUSH2 0x1057
0x1071 JUMP
---
0x1062: V1011 = ADD V1006 S0
0x1063: V1012 = M[V1011]
0x1066: V1013 = ADD V1003 S0
0x1067: M[V1013] = V1012
0x1068: V1014 = 0x20
0x106b: V1015 = ADD S0 0x20
0x106e: V1016 = 0x1057
0x1071: JUMP 0x1057
---
Entry stack: [V13, 0x3b4, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V997, V997, V1003, V1006, V1004, V1004, V1003, V1006, S0]
Stack pops: 3
Stack additions: [S2, S1, V1015]
Exit stack: [V13, 0x3b4, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V997, V997, V1003, V1006, V1004, V1004, V1003, V1006, V1015]

================================

Block 0x1072
[0x1072:0x1085]
---
Predecessors: [0x1057]
Successors: [0x1086, 0x109f]
---
0x1072 JUMPDEST
0x1073 POP
0x1074 POP
0x1075 POP
0x1076 POP
0x1077 SWAP1
0x1078 POP
0x1079 SWAP1
0x107a DUP2
0x107b ADD
0x107c SWAP1
0x107d PUSH1 0x1f
0x107f AND
0x1080 DUP1
0x1081 ISZERO
0x1082 PUSH2 0x109f
0x1085 JUMPI
---
0x1072: JUMPDEST 
0x107b: V1017 = ADD V1004 V1003
0x107d: V1018 = 0x1f
0x107f: V1019 = AND 0x1f V1004
0x1081: V1020 = ISZERO V1019
0x1082: V1021 = 0x109f
0x1085: JUMPI 0x109f V1020
---
Entry stack: [V13, 0x3b4, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V997, V997, V1003, V1006, V1004, V1004, V1003, V1006, S0]
Stack pops: 7
Stack additions: [V1017, V1019]
Exit stack: [V13, 0x3b4, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V997, V997, V1017, V1019]

================================

Block 0x1086
[0x1086:0x109e]
---
Predecessors: [0x1072]
Successors: [0x109f]
---
0x1086 DUP1
0x1087 DUP3
0x1088 SUB
0x1089 DUP1
0x108a MLOAD
0x108b PUSH1 0x1
0x108d DUP4
0x108e PUSH1 0x20
0x1090 SUB
0x1091 PUSH2 0x100
0x1094 EXP
0x1095 SUB
0x1096 NOT
0x1097 AND
0x1098 DUP2
0x1099 MSTORE
0x109a PUSH1 0x20
0x109c ADD
0x109d SWAP2
0x109e POP
---
0x1088: V1022 = SUB V1017 V1019
0x108a: V1023 = M[V1022]
0x108b: V1024 = 0x1
0x108e: V1025 = 0x20
0x1090: V1026 = SUB 0x20 V1019
0x1091: V1027 = 0x100
0x1094: V1028 = EXP 0x100 V1026
0x1095: V1029 = SUB V1028 0x1
0x1096: V1030 = NOT V1029
0x1097: V1031 = AND V1030 V1023
0x1099: M[V1022] = V1031
0x109a: V1032 = 0x20
0x109c: V1033 = ADD 0x20 V1022
---
Entry stack: [V13, 0x3b4, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, S4, V997, V997, V1017, V1019]
Stack pops: 2
Stack additions: [V1033, S0]
Exit stack: [V13, 0x3b4, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, S4, V997, V997, V1033, V1019]

================================

Block 0x109f
[0x109f:0x10ac]
---
Predecessors: [0x1072, 0x1086]
Successors: []
---
0x109f JUMPDEST
0x10a0 POP
0x10a1 SWAP3
0x10a2 POP
0x10a3 POP
0x10a4 POP
0x10a5 PUSH1 0x40
0x10a7 MLOAD
0x10a8 DUP1
0x10a9 SWAP2
0x10aa SUB
0x10ab SWAP1
0x10ac REVERT
---
0x109f: JUMPDEST 
0x10a5: V1034 = 0x40
0x10a7: V1035 = M[0x40]
0x10aa: V1036 = SUB S1 V1035
0x10ac: REVERT V1035 V1036
---
Entry stack: [V13, 0x3b4, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, S4, V997, V997, S1, V1019]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x3b4, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0]

================================

Block 0x10ad
[0x10ad:0x10bf]
---
Predecessors: [0x1000]
Successors: [0x1a3, 0x2ca, 0x485, 0x4e9, 0x70c, 0x881, 0xa04, 0xec1, 0x11bd, 0x12cb]
---
0x10ad JUMPDEST
0x10ae POP
0x10af PUSH1 0x0
0x10b1 DUP4
0x10b2 DUP6
0x10b3 SUB
0x10b4 SWAP1
0x10b5 POP
0x10b6 DUP1
0x10b7 SWAP2
0x10b8 POP
0x10b9 POP
0x10ba SWAP4
0x10bb SWAP3
0x10bc POP
0x10bd POP
0x10be POP
0x10bf JUMP
---
0x10ad: JUMPDEST 
0x10af: V1037 = 0x0
0x10b3: V1038 = SUB S4 S3
0x10bf: JUMP S5
---
Entry stack: [V13, 0x3b4, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: [V1038]
Exit stack: [V13, 0x3b4, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V1038]

================================

Block 0x10c0
[0x10c0:0x10f5]
---
Predecessors: [0x7f1, 0x895]
Successors: [0x10f6, 0x1146]
---
0x10c0 JUMPDEST
0x10c1 PUSH1 0x0
0x10c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10d8 AND
0x10d9 DUP3
0x10da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10ef AND
0x10f0 EQ
0x10f1 ISZERO
0x10f2 PUSH2 0x1146
0x10f5 JUMPI
---
0x10c0: JUMPDEST 
0x10c1: V1039 = 0x0
0x10c3: V1040 = 0xffffffffffffffffffffffffffffffffffffffff
0x10d8: V1041 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x10da: V1042 = 0xffffffffffffffffffffffffffffffffffffffff
0x10ef: V1043 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x10f0: V1044 = EQ V1043 0x0
0x10f1: V1045 = ISZERO V1044
0x10f2: V1046 = 0x1146
0x10f5: JUMPI 0x1146 V1045
---
Entry stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x10f6
[0x10f6:0x1145]
---
Predecessors: [0x10c0]
Successors: []
---
0x10f6 PUSH1 0x40
0x10f8 MLOAD
0x10f9 PUSH32 0x8c379a000000000000000000000000000000000000000000000000000000000
0x111a DUP2
0x111b MSTORE
0x111c PUSH1 0x4
0x111e ADD
0x111f DUP1
0x1120 DUP1
0x1121 PUSH1 0x20
0x1123 ADD
0x1124 DUP3
0x1125 DUP2
0x1126 SUB
0x1127 DUP3
0x1128 MSTORE
0x1129 PUSH1 0x21
0x112b DUP2
0x112c MSTORE
0x112d PUSH1 0x20
0x112f ADD
0x1130 DUP1
0x1131 PUSH2 0x13ad
0x1134 PUSH1 0x21
0x1136 SWAP2
0x1137 CODECOPY
0x1138 PUSH1 0x40
0x113a ADD
0x113b SWAP2
0x113c POP
0x113d POP
0x113e PUSH1 0x40
0x1140 MLOAD
0x1141 DUP1
0x1142 SWAP2
0x1143 SUB
0x1144 SWAP1
0x1145 REVERT
---
0x10f6: V1047 = 0x40
0x10f8: V1048 = M[0x40]
0x10f9: V1049 = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x111b: M[V1048] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x111c: V1050 = 0x4
0x111e: V1051 = ADD 0x4 V1048
0x1121: V1052 = 0x20
0x1123: V1053 = ADD 0x20 V1051
0x1126: V1054 = SUB V1053 V1051
0x1128: M[V1051] = V1054
0x1129: V1055 = 0x21
0x112c: M[V1053] = 0x21
0x112d: V1056 = 0x20
0x112f: V1057 = ADD 0x20 V1053
0x1131: V1058 = 0x13ad
0x1134: V1059 = 0x21
0x1137: CODECOPY V1057 0x13ad 0x21
0x1138: V1060 = 0x40
0x113a: V1061 = ADD 0x40 V1057
0x113e: V1062 = 0x40
0x1140: V1063 = M[0x40]
0x1143: V1064 = SUB V1061 V1063
0x1145: REVERT V1063 V1064
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1146
[0x1146:0x1151]
---
Predecessors: [0x10c0]
Successors: [0x1284]
---
0x1146 JUMPDEST
0x1147 PUSH2 0x1152
0x114a DUP3
0x114b PUSH1 0x0
0x114d DUP4
0x114e PUSH2 0x1284
0x1151 JUMP
---
0x1146: JUMPDEST 
0x1147: V1065 = 0x1152
0x114b: V1066 = 0x0
0x114e: V1067 = 0x1284
0x1151: JUMP 0x1284
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x1152, S1, 0x0, S0]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x1152, S1, 0x0, S0]

================================

Block 0x1152
[0x1152:0x11bc]
---
Predecessors: [0x1284]
Successors: [0x1000]
---
0x1152 JUMPDEST
0x1153 PUSH2 0x11bd
0x1156 DUP2
0x1157 PUSH1 0x40
0x1159 MLOAD
0x115a DUP1
0x115b PUSH1 0x60
0x115d ADD
0x115e PUSH1 0x40
0x1160 MSTORE
0x1161 DUP1
0x1162 PUSH1 0x22
0x1164 DUP2
0x1165 MSTORE
0x1166 PUSH1 0x20
0x1168 ADD
0x1169 PUSH2 0x12f7
0x116c PUSH1 0x22
0x116e SWAP2
0x116f CODECOPY
0x1170 PUSH1 0x0
0x1172 DUP1
0x1173 DUP7
0x1174 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1189 AND
0x118a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x119f AND
0x11a0 DUP2
0x11a1 MSTORE
0x11a2 PUSH1 0x20
0x11a4 ADD
0x11a5 SWAP1
0x11a6 DUP2
0x11a7 MSTORE
0x11a8 PUSH1 0x20
0x11aa ADD
0x11ab PUSH1 0x0
0x11ad SHA3
0x11ae SLOAD
0x11af PUSH2 0x1000
0x11b2 SWAP1
0x11b3 SWAP3
0x11b4 SWAP2
0x11b5 SWAP1
0x11b6 PUSH4 0xffffffff
0x11bb AND
0x11bc JUMP
---
0x1152: JUMPDEST 
0x1153: V1068 = 0x11bd
0x1157: V1069 = 0x40
0x1159: V1070 = M[0x40]
0x115b: V1071 = 0x60
0x115d: V1072 = ADD 0x60 V1070
0x115e: V1073 = 0x40
0x1160: M[0x40] = V1072
0x1162: V1074 = 0x22
0x1165: M[V1070] = 0x22
0x1166: V1075 = 0x20
0x1168: V1076 = ADD 0x20 V1070
0x1169: V1077 = 0x12f7
0x116c: V1078 = 0x22
0x116f: CODECOPY V1076 0x12f7 0x22
0x1170: V1079 = 0x0
0x1174: V1080 = 0xffffffffffffffffffffffffffffffffffffffff
0x1189: V1081 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x118a: V1082 = 0xffffffffffffffffffffffffffffffffffffffff
0x119f: V1083 = AND 0xffffffffffffffffffffffffffffffffffffffff V1081
0x11a1: M[0x0] = V1083
0x11a2: V1084 = 0x20
0x11a4: V1085 = ADD 0x20 0x0
0x11a7: M[0x20] = 0x0
0x11a8: V1086 = 0x20
0x11aa: V1087 = ADD 0x20 0x20
0x11ab: V1088 = 0x0
0x11ad: V1089 = SHA3 0x0 0x40
0x11ae: V1090 = S[V1089]
0x11af: V1091 = 0x1000
0x11b6: V1092 = 0xffffffff
0x11bb: V1093 = AND 0xffffffff 0x1000
0x11bc: JUMP 0x1000
---
Entry stack: [V13, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x11bd, V1090, S0, V1070]
Exit stack: [V13, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x11bd, V1090, S0, V1070]

================================

Block 0x11bd
[0x11bd:0x1213]
---
Predecessors: [0x10ad]
Successors: [0x1289]
---
0x11bd JUMPDEST
0x11be PUSH1 0x0
0x11c0 DUP1
0x11c1 DUP5
0x11c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11d7 AND
0x11d8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11ed AND
0x11ee DUP2
0x11ef MSTORE
0x11f0 PUSH1 0x20
0x11f2 ADD
0x11f3 SWAP1
0x11f4 DUP2
0x11f5 MSTORE
0x11f6 PUSH1 0x20
0x11f8 ADD
0x11f9 PUSH1 0x0
0x11fb SHA3
0x11fc DUP2
0x11fd SWAP1
0x11fe SSTORE
0x11ff POP
0x1200 PUSH2 0x1214
0x1203 DUP2
0x1204 PUSH1 0x2
0x1206 SLOAD
0x1207 PUSH2 0x1289
0x120a SWAP1
0x120b SWAP2
0x120c SWAP1
0x120d PUSH4 0xffffffff
0x1212 AND
0x1213 JUMP
---
0x11bd: JUMPDEST 
0x11be: V1094 = 0x0
0x11c2: V1095 = 0xffffffffffffffffffffffffffffffffffffffff
0x11d7: V1096 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x11d8: V1097 = 0xffffffffffffffffffffffffffffffffffffffff
0x11ed: V1098 = AND 0xffffffffffffffffffffffffffffffffffffffff V1096
0x11ef: M[0x0] = V1098
0x11f0: V1099 = 0x20
0x11f2: V1100 = ADD 0x20 0x0
0x11f5: M[0x20] = 0x0
0x11f6: V1101 = 0x20
0x11f8: V1102 = ADD 0x20 0x20
0x11f9: V1103 = 0x0
0x11fb: V1104 = SHA3 0x0 0x40
0x11fe: S[V1104] = V1038
0x1200: V1105 = 0x1214
0x1204: V1106 = 0x2
0x1206: V1107 = S[0x2]
0x1207: V1108 = 0x1289
0x120d: V1109 = 0xffffffff
0x1212: V1110 = AND 0xffffffff 0x1289
0x1213: JUMP 0x1289
---
Entry stack: [V13, 0x3b4, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1038]
Stack pops: 3
Stack additions: [S2, S1, 0x1214, V1107, S1]
Exit stack: [V13, 0x3b4, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1214, V1107, S1]

================================

Block 0x1214
[0x1214:0x1283]
---
Predecessors: [0x12cb]
Successors: [0x3b4, 0x485, 0x4e9, 0x7f7, 0x89f]
---
0x1214 JUMPDEST
0x1215 PUSH1 0x2
0x1217 DUP2
0x1218 SWAP1
0x1219 SSTORE
0x121a POP
0x121b PUSH1 0x0
0x121d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1232 AND
0x1233 DUP3
0x1234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1249 AND
0x124a PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x126b DUP4
0x126c PUSH1 0x40
0x126e MLOAD
0x126f DUP1
0x1270 DUP3
0x1271 DUP2
0x1272 MSTORE
0x1273 PUSH1 0x20
0x1275 ADD
0x1276 SWAP2
0x1277 POP
0x1278 POP
0x1279 PUSH1 0x40
0x127b MLOAD
0x127c DUP1
0x127d SWAP2
0x127e SUB
0x127f SWAP1
0x1280 LOG3
0x1281 POP
0x1282 POP
0x1283 JUMP
---
0x1214: JUMPDEST 
0x1215: V1111 = 0x2
0x1219: S[0x2] = V1038
0x121b: V1112 = 0x0
0x121d: V1113 = 0xffffffffffffffffffffffffffffffffffffffff
0x1232: V1114 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x1234: V1115 = 0xffffffffffffffffffffffffffffffffffffffff
0x1249: V1116 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x124a: V1117 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x126c: V1118 = 0x40
0x126e: V1119 = M[0x40]
0x1272: M[V1119] = S1
0x1273: V1120 = 0x20
0x1275: V1121 = ADD 0x20 V1119
0x1279: V1122 = 0x40
0x127b: V1123 = M[0x40]
0x127e: V1124 = SUB V1121 V1123
0x1280: LOG V1123 V1124 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1116 0x0
0x1283: JUMP S3
---
Entry stack: [V13, 0x3b4, S6, S5, S4, S3, S2, S1, V1038]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x3b4, S6, S5, S4]

================================

Block 0x1284
[0x1284:0x1288]
---
Predecessors: [0xe4b, 0x1146]
Successors: [0xe56, 0x1152]
---
0x1284 JUMPDEST
0x1285 POP
0x1286 POP
0x1287 POP
0x1288 JUMP
---
0x1284: JUMPDEST 
0x1288: JUMP {0xe56, 0x1152}
---
Entry stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4, {0xe56, 0x1152}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0x1289
[0x1289:0x12ca]
---
Predecessors: [0x11bd]
Successors: [0x1000]
---
0x1289 JUMPDEST
0x128a PUSH1 0x0
0x128c PUSH2 0x12cb
0x128f DUP4
0x1290 DUP4
0x1291 PUSH1 0x40
0x1293 MLOAD
0x1294 DUP1
0x1295 PUSH1 0x40
0x1297 ADD
0x1298 PUSH1 0x40
0x129a MSTORE
0x129b DUP1
0x129c PUSH1 0x1e
0x129e DUP2
0x129f MSTORE
0x12a0 PUSH1 0x20
0x12a2 ADD
0x12a3 PUSH32 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000
0x12c4 DUP2
0x12c5 MSTORE
0x12c6 POP
0x12c7 PUSH2 0x1000
0x12ca JUMP
---
0x1289: JUMPDEST 
0x128a: V1125 = 0x0
0x128c: V1126 = 0x12cb
0x1291: V1127 = 0x40
0x1293: V1128 = M[0x40]
0x1295: V1129 = 0x40
0x1297: V1130 = ADD 0x40 V1128
0x1298: V1131 = 0x40
0x129a: M[0x40] = V1130
0x129c: V1132 = 0x1e
0x129f: M[V1128] = 0x1e
0x12a0: V1133 = 0x20
0x12a2: V1134 = ADD 0x20 V1128
0x12a3: V1135 = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000
0x12c5: M[V1134] = 0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000
0x12c7: V1136 = 0x1000
0x12ca: JUMP 0x1000
---
Entry stack: [V13, 0x3b4, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1214, V1107, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x12cb, S1, S0, V1128]
Exit stack: [V13, 0x3b4, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x1214, V1107, S0, 0x0, 0x12cb, V1107, S0, V1128]

================================

Block 0x12cb
[0x12cb:0x12d2]
---
Predecessors: [0x10ad]
Successors: [0x3b4, 0x650, 0xa27, 0x1214]
---
0x12cb JUMPDEST
0x12cc SWAP1
0x12cd POP
0x12ce SWAP3
0x12cf SWAP2
0x12d0 POP
0x12d1 POP
0x12d2 JUMP
---
0x12cb: JUMPDEST 
0x12d2: JUMP S4
---
Entry stack: [V13, 0x3b4, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1038]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, 0x3b4, S10, S9, S8, S7, S6, S5, V1038]

================================

Block 0x12d3
[0x12d3:0x1470]
---
Predecessors: []
Successors: []
---
0x12d3 INVALID
0x12d4 GASLIMIT
0x12d5 MSTORE
0x12d6 NUMBER
0x12d7 ORIGIN
0x12d8 ADDRESS
0x12d9 GASPRICE
0x12da SHA3
0x12db PUSH21 0x72616e7366657220746f20746865207a65726f2061
0x12f1 PUSH5 0x6472657373
0x12f7 GASLIMIT
0x12f8 MSTORE
0x12f9 NUMBER
0x12fa ORIGIN
0x12fb ADDRESS
0x12fc GASPRICE
0x12fd SHA3
0x12fe PUSH3 0x75726e
0x1302 SHA3
0x1303 PUSH2 0x6d6f
0x1306 PUSH22 0x6e7420657863656564732062616c616e636545524332
0x131d ADDRESS
0x131e GASPRICE
0x131f SHA3
0x1320 PUSH2 0x7070
0x1323 PUSH19 0x6f766520746f20746865207a65726f20616464
0x1337 PUSH19 0x65737345524332303a207472616e7366657220
0x134b PUSH2 0x6d6f
0x134e PUSH22 0x6e7420657863656564732062616c616e636545524332
0x1365 ADDRESS
0x1366 GASPRICE
0x1367 SHA3
0x1368 PUSH21 0x72616e7366657220616d6f756e7420657863656564
0x137e PUSH20 0x20616c6c6f77616e636545524332303a20627572
0x1393 PUSH15 0x20616d6f756e742065786365656473
0x13a3 SHA3
0x13a4 PUSH2 0x6c6c
0x13a7 PUSH16 0x77616e636545524332303a206275726e
0x13b8 SHA3
0x13b9 PUSH7 0x726f6d20746865
0x13c1 SHA3
0x13c2 PUSH27 0x65726f206164647265737345524332303a207472616e7366657220
0x13de PUSH7 0x726f6d20746865
0x13e6 SHA3
0x13e7 PUSH27 0x65726f206164647265737345524332303a20617070726f76652066
0x1403 PUSH19 0x6f6d20746865207a65726f2061646472657373
0x1417 GASLIMIT
0x1418 MSTORE
0x1419 NUMBER
0x141a ORIGIN
0x141b ADDRESS
0x141c GASPRICE
0x141d SHA3
0x141e PUSH5 0x6563726561
0x1424 PUSH20 0x656420616c6c6f77616e63652062656c6f77207a
0x1439 PUSH6 0x726fa2646970
0x1440 PUSH7 0x73582212205357
0x1448 SWAP10
0x1449 SWAP7
0x144a PUSH14 0xbf051f27649a6bd9d38d8a1241b8
0x1459 MISSING 0xb7
0x145a PUSH15 0xdf2a7d01ec93f28045883d64736f6c
0x146a PUSH4 0x4300060c
0x146f STOP
0x1470 CALLER
---
0x12d3: INVALID 
0x12d4: V1137 = GASLIMIT
0x12d5: M[V1137] = S0
0x12d6: V1138 = NUMBER
0x12d7: V1139 = ORIGIN
0x12d8: V1140 = ADDRESS
0x12d9: V1141 = GASPRICE
0x12da: V1142 = SHA3 V1141 V1140
0x12db: V1143 = 0x72616e7366657220746f20746865207a65726f2061
0x12f1: V1144 = 0x6472657373
0x12f7: V1145 = GASLIMIT
0x12f8: M[V1145] = 0x6472657373
0x12f9: V1146 = NUMBER
0x12fa: V1147 = ORIGIN
0x12fb: V1148 = ADDRESS
0x12fc: V1149 = GASPRICE
0x12fd: V1150 = SHA3 V1149 V1148
0x12fe: V1151 = 0x75726e
0x1302: V1152 = SHA3 0x75726e V1150
0x1303: V1153 = 0x6d6f
0x1306: V1154 = 0x6e7420657863656564732062616c616e636545524332
0x131d: V1155 = ADDRESS
0x131e: V1156 = GASPRICE
0x131f: V1157 = SHA3 V1156 V1155
0x1320: V1158 = 0x7070
0x1323: V1159 = 0x6f766520746f20746865207a65726f20616464
0x1337: V1160 = 0x65737345524332303a207472616e7366657220
0x134b: V1161 = 0x6d6f
0x134e: V1162 = 0x6e7420657863656564732062616c616e636545524332
0x1365: V1163 = ADDRESS
0x1366: V1164 = GASPRICE
0x1367: V1165 = SHA3 V1164 V1163
0x1368: V1166 = 0x72616e7366657220616d6f756e7420657863656564
0x137e: V1167 = 0x20616c6c6f77616e636545524332303a20627572
0x1393: V1168 = 0x20616d6f756e742065786365656473
0x13a3: V1169 = SHA3 0x20616d6f756e742065786365656473 0x20616c6c6f77616e636545524332303a20627572
0x13a4: V1170 = 0x6c6c
0x13a7: V1171 = 0x77616e636545524332303a206275726e
0x13b8: V1172 = SHA3 0x77616e636545524332303a206275726e 0x6c6c
0x13b9: V1173 = 0x726f6d20746865
0x13c1: V1174 = SHA3 0x726f6d20746865 V1172
0x13c2: V1175 = 0x65726f206164647265737345524332303a207472616e7366657220
0x13de: V1176 = 0x726f6d20746865
0x13e6: V1177 = SHA3 0x726f6d20746865 0x65726f206164647265737345524332303a207472616e7366657220
0x13e7: V1178 = 0x65726f206164647265737345524332303a20617070726f76652066
0x1403: V1179 = 0x6f6d20746865207a65726f2061646472657373
0x1417: V1180 = GASLIMIT
0x1418: M[V1180] = 0x6f6d20746865207a65726f2061646472657373
0x1419: V1181 = NUMBER
0x141a: V1182 = ORIGIN
0x141b: V1183 = ADDRESS
0x141c: V1184 = GASPRICE
0x141d: V1185 = SHA3 V1184 V1183
0x141e: V1186 = 0x6563726561
0x1424: V1187 = 0x656420616c6c6f77616e63652062656c6f77207a
0x1439: V1188 = 0x726fa2646970
0x1440: V1189 = 0x73582212205357
0x144a: V1190 = 0xbf051f27649a6bd9d38d8a1241b8
0x1459: MISSING 0xb7
0x145a: V1191 = 0xdf2a7d01ec93f28045883d64736f6c
0x146a: V1192 = 0x4300060c
0x146f: STOP 
0x1470: V1193 = CALLER
---
Entry stack: []
Stack pops: 0
Stack additions: [0xbf051f27649a6bd9d38d8a1241b8, 0x65726f206164647265737345524332303a20617070726f76652066, 0x726fa2646970, 0x656420616c6c6f77616e63652062656c6f77207a, 0x6563726561, V1185, V1182, V1181, V1169, V1177, V1174, 0x73582212205357, 0x72616e7366657220616d6f756e7420657863656564, V1165, 0x6e7420657863656564732062616c616e636545524332, 0x6d6f, 0x65737345524332303a207472616e7366657220, 0x6f766520746f20746865207a65726f20616464, 0x7070, V1157, 0x6e7420657863656564732062616c616e636545524332, 0x6d6f, V1152, V1147, V1146, 0x72616e7366657220746f20746865207a65726f2061, V1142, V1139, V1138, 0x4300060c, 0xdf2a7d01ec93f28045883d64736f6c, V1193]
Exit stack: []

================================

Function 0:
Private function
Entry block: 0xb40
Exit block: 0xb40
Body: 0x650, 0x650, 0x65c, 0x6c2, 0x70c, 0x751, 0x7d7, 0x881, 0x88f, 0x895, 0x97d, 0xa04, 0xab8, 0xb36, 0xb40, 0xb48, 0xbce, 0xc54, 0xec1, 0xf54, 0x1000, 0x10ad, 0x10c0, 0x1146, 0x1152, 0x11bd, 0x1289, 0x12cb

Function 1:
Private function
Entry block: 0x1000
Exit block: 0x10ad
Body: 0x628, 0x650, 0x650, 0x65c, 0x6c2, 0x70c, 0x740, 0x751, 0x7d7, 0x7f1, 0x86d, 0x872, 0x881, 0x88f, 0x895, 0x953, 0x97d, 0xa04, 0xa20, 0xa31, 0xab8, 0xb36, 0xb40, 0xb48, 0xbce, 0xc54, 0xd3f, 0xdc5, 0xe4b, 0xe56, 0xec1, 0xf54, 0x1000, 0x10ad, 0x10c0, 0x1146, 0x1152, 0x11bd, 0x1289, 0x12cb

