Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xfe]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xfe
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xfe
0xc: JUMPI 0xfe V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x1d]
---
Predecessors: [0x0]
Successors: [0x1e, 0x95]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH1 0xe0
0x12 SHR
0x13 DUP1
0x14 PUSH4 0x81f4f399
0x19 GT
0x1a PUSH2 0x95
0x1d JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0xe0
0x12: V9 = SHR 0xe0 V7
0x14: V10 = 0x81f4f399
0x19: V11 = GT 0x81f4f399 V9
0x1a: V12 = 0x95
0x1d: JUMPI 0x95 V11
---
Entry stack: []
Stack pops: 0
Stack additions: [V9]
Exit stack: [V9]

================================

Block 0x1e
[0x1e:0x28]
---
Predecessors: [0xd]
Successors: [0x29, 0x64]
---
0x1e DUP1
0x1f PUSH4 0xc04365a9
0x24 GT
0x25 PUSH2 0x64
0x28 JUMPI
---
0x1f: V13 = 0xc04365a9
0x24: V14 = GT 0xc04365a9 V9
0x25: V15 = 0x64
0x28: JUMPI 0x64 V14
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x29
[0x29:0x33]
---
Predecessors: [0x1e]
Successors: [0x34, 0x37b]
---
0x29 DUP1
0x2a PUSH4 0xc04365a9
0x2f EQ
0x30 PUSH2 0x37b
0x33 JUMPI
---
0x2a: V16 = 0xc04365a9
0x2f: V17 = EQ 0xc04365a9 V9
0x30: V18 = 0x37b
0x33: JUMPI 0x37b V17
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x34
[0x34:0x3e]
---
Predecessors: [0x29]
Successors: [0x3f, 0x390]
---
0x34 DUP1
0x35 PUSH4 0xcae9ca51
0x3a EQ
0x3b PUSH2 0x390
0x3e JUMPI
---
0x35: V19 = 0xcae9ca51
0x3a: V20 = EQ 0xcae9ca51 V9
0x3b: V21 = 0x390
0x3e: JUMPI 0x390 V20
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0x34]
Successors: [0x4a, 0x458]
---
0x3f DUP1
0x40 PUSH4 0xd4ee1d90
0x45 EQ
0x46 PUSH2 0x458
0x49 JUMPI
---
0x40: V22 = 0xd4ee1d90
0x45: V23 = EQ 0xd4ee1d90 V9
0x46: V24 = 0x458
0x49: JUMPI 0x458 V23
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x46d]
---
0x4a DUP1
0x4b PUSH4 0xdd62ed3e
0x50 EQ
0x51 PUSH2 0x46d
0x54 JUMPI
---
0x4b: V25 = 0xdd62ed3e
0x50: V26 = EQ 0xdd62ed3e V9
0x51: V27 = 0x46d
0x54: JUMPI 0x46d V26
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x4a8]
---
0x55 DUP1
0x56 PUSH4 0xf2fde38b
0x5b EQ
0x5c PUSH2 0x4a8
0x5f JUMPI
---
0x56: V28 = 0xf2fde38b
0x5b: V29 = EQ 0xf2fde38b V9
0x5c: V30 = 0x4a8
0x5f: JUMPI 0x4a8 V29
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x60
[0x60:0x63]
---
Predecessors: [0x55]
Successors: [0xfe]
---
0x60 PUSH2 0xfe
0x63 JUMP
---
0x60: V31 = 0xfe
0x63: JUMP 0xfe
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x64
[0x64:0x6f]
---
Predecessors: [0x1e]
Successors: [0x70, 0x2e5]
---
0x64 JUMPDEST
0x65 DUP1
0x66 PUSH4 0x81f4f399
0x6b EQ
0x6c PUSH2 0x2e5
0x6f JUMPI
---
0x64: JUMPDEST 
0x66: V32 = 0x81f4f399
0x6b: V33 = EQ 0x81f4f399 V9
0x6c: V34 = 0x2e5
0x6f: JUMPI 0x2e5 V33
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x70
[0x70:0x7a]
---
Predecessors: [0x64]
Successors: [0x7b, 0x318]
---
0x70 DUP1
0x71 PUSH4 0x8da5cb5b
0x76 EQ
0x77 PUSH2 0x318
0x7a JUMPI
---
0x71: V35 = 0x8da5cb5b
0x76: V36 = EQ 0x8da5cb5b V9
0x77: V37 = 0x318
0x7a: JUMPI 0x318 V36
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x7b
[0x7b:0x85]
---
Predecessors: [0x70]
Successors: [0x86, 0x32d]
---
0x7b DUP1
0x7c PUSH4 0x95d89b41
0x81 EQ
0x82 PUSH2 0x32d
0x85 JUMPI
---
0x7c: V38 = 0x95d89b41
0x81: V39 = EQ 0x95d89b41 V9
0x82: V40 = 0x32d
0x85: JUMPI 0x32d V39
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x86
[0x86:0x90]
---
Predecessors: [0x7b]
Successors: [0x91, 0x342]
---
0x86 DUP1
0x87 PUSH4 0xa9059cbb
0x8c EQ
0x8d PUSH2 0x342
0x90 JUMPI
---
0x87: V41 = 0xa9059cbb
0x8c: V42 = EQ 0xa9059cbb V9
0x8d: V43 = 0x342
0x90: JUMPI 0x342 V42
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0x91
[0x91:0x94]
---
Predecessors: [0x86]
Successors: [0xfe]
---
0x91 PUSH2 0xfe
0x94 JUMP
---
0x91: V44 = 0xfe
0x94: JUMP 0xfe
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x95
[0x95:0xa0]
---
Predecessors: [0xd]
Successors: [0xa1, 0xd1]
---
0x95 JUMPDEST
0x96 DUP1
0x97 PUSH4 0x23b872dd
0x9c GT
0x9d PUSH2 0xd1
0xa0 JUMPI
---
0x95: JUMPDEST 
0x97: V45 = 0x23b872dd
0x9c: V46 = GT 0x23b872dd V9
0x9d: V47 = 0xd1
0xa0: JUMPI 0xd1 V46
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x95]
Successors: [0xac, 0x22f]
---
0xa1 DUP1
0xa2 PUSH4 0x23b872dd
0xa7 EQ
0xa8 PUSH2 0x22f
0xab JUMPI
---
0xa2: V48 = 0x23b872dd
0xa7: V49 = EQ 0x23b872dd V9
0xa8: V50 = 0x22f
0xab: JUMPI 0x22f V49
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x272]
---
0xac DUP1
0xad PUSH4 0x313ce567
0xb2 EQ
0xb3 PUSH2 0x272
0xb6 JUMPI
---
0xad: V51 = 0x313ce567
0xb2: V52 = EQ 0x313ce567 V9
0xb3: V53 = 0x272
0xb6: JUMPI 0x272 V52
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x29d]
---
0xb7 DUP1
0xb8 PUSH4 0x70a08231
0xbd EQ
0xbe PUSH2 0x29d
0xc1 JUMPI
---
0xb8: V54 = 0x70a08231
0xbd: V55 = EQ 0x70a08231 V9
0xbe: V56 = 0x29d
0xc1: JUMPI 0x29d V55
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x2d0]
---
0xc2 DUP1
0xc3 PUSH4 0x79ba5097
0xc8 EQ
0xc9 PUSH2 0x2d0
0xcc JUMPI
---
0xc3: V57 = 0x79ba5097
0xc8: V58 = EQ 0x79ba5097 V9
0xc9: V59 = 0x2d0
0xcc: JUMPI 0x2d0 V58
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xcd
[0xcd:0xd0]
---
Predecessors: [0xc2]
Successors: [0xfe]
---
0xcd PUSH2 0xfe
0xd0 JUMP
---
0xcd: V60 = 0xfe
0xd0: JUMP 0xfe
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0xd1
[0xd1:0xdc]
---
Predecessors: [0x95]
Successors: [0xdd, 0x100]
---
0xd1 JUMPDEST
0xd2 DUP1
0xd3 PUSH4 0x6fdde03
0xd8 EQ
0xd9 PUSH2 0x100
0xdc JUMPI
---
0xd1: JUMPDEST 
0xd3: V61 = 0x6fdde03
0xd8: V62 = EQ 0x6fdde03 V9
0xd9: V63 = 0x100
0xdc: JUMPI 0x100 V62
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xdd
[0xdd:0xe7]
---
Predecessors: [0xd1]
Successors: [0xe8, 0x18a]
---
0xdd DUP1
0xde PUSH4 0x95ea7b3
0xe3 EQ
0xe4 PUSH2 0x18a
0xe7 JUMPI
---
0xde: V64 = 0x95ea7b3
0xe3: V65 = EQ 0x95ea7b3 V9
0xe4: V66 = 0x18a
0xe7: JUMPI 0x18a V65
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xe8
[0xe8:0xf2]
---
Predecessors: [0xdd]
Successors: [0xf3, 0x1d7]
---
0xe8 DUP1
0xe9 PUSH4 0x18160ddd
0xee EQ
0xef PUSH2 0x1d7
0xf2 JUMPI
---
0xe9: V67 = 0x18160ddd
0xee: V68 = EQ 0x18160ddd V9
0xef: V69 = 0x1d7
0xf2: JUMPI 0x1d7 V68
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xf3
[0xf3:0xfd]
---
Predecessors: [0xe8]
Successors: [0xfe, 0x1fe]
---
0xf3 DUP1
0xf4 PUSH4 0x1ee59f20
0xf9 EQ
0xfa PUSH2 0x1fe
0xfd JUMPI
---
0xf4: V70 = 0x1ee59f20
0xf9: V71 = EQ 0x1ee59f20 V9
0xfa: V72 = 0x1fe
0xfd: JUMPI 0x1fe V71
---
Entry stack: [V9]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9]

================================

Block 0xfe
[0xfe:0xff]
---
Predecessors: [0x0, 0x60, 0x91, 0xcd, 0xf3, 0x801, 0x87c, 0xbeb]
Successors: []
---
0xfe JUMPDEST
0xff STOP
---
0xfe: JUMPDEST 
0xff: STOP 
---
Entry stack: [V9]
Stack pops: 0
Stack additions: []
Exit stack: [V9]

================================

Block 0x100
[0x100:0x107]
---
Predecessors: [0xd1]
Successors: [0x108, 0x10c]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 DUP1
0x103 ISZERO
0x104 PUSH2 0x10c
0x107 JUMPI
---
0x100: JUMPDEST 
0x101: V73 = CALLVALUE
0x103: V74 = ISZERO V73
0x104: V75 = 0x10c
0x107: JUMPI 0x10c V74
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V73]
Exit stack: [V9, V73]

================================

Block 0x108
[0x108:0x10b]
---
Predecessors: [0x100]
Successors: []
---
0x108 PUSH1 0x0
0x10a DUP1
0x10b REVERT
---
0x108: V76 = 0x0
0x10b: REVERT 0x0 0x0
---
Entry stack: [V9, V73]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V73]

================================

Block 0x10c
[0x10c:0x114]
---
Predecessors: [0x100]
Successors: [0x4db]
---
0x10c JUMPDEST
0x10d POP
0x10e PUSH2 0x115
0x111 PUSH2 0x4db
0x114 JUMP
---
0x10c: JUMPDEST 
0x10e: V77 = 0x115
0x111: V78 = 0x4db
0x114: JUMP 0x4db
---
Entry stack: [V9, V73]
Stack pops: 1
Stack additions: [0x115]
Exit stack: [V9, 0x115]

================================

Block 0x115
[0x115:0x136]
---
Predecessors: [0x561]
Successors: [0x137]
---
0x115 JUMPDEST
0x116 PUSH1 0x40
0x118 DUP1
0x119 MLOAD
0x11a PUSH1 0x20
0x11c DUP1
0x11d DUP3
0x11e MSTORE
0x11f DUP4
0x120 MLOAD
0x121 DUP2
0x122 DUP4
0x123 ADD
0x124 MSTORE
0x125 DUP4
0x126 MLOAD
0x127 SWAP2
0x128 SWAP3
0x129 DUP4
0x12a SWAP3
0x12b SWAP1
0x12c DUP4
0x12d ADD
0x12e SWAP2
0x12f DUP6
0x130 ADD
0x131 SWAP1
0x132 DUP1
0x133 DUP4
0x134 DUP4
0x135 PUSH1 0x0
---
0x115: JUMPDEST 
0x116: V79 = 0x40
0x119: V80 = M[0x40]
0x11a: V81 = 0x20
0x11e: M[V80] = 0x20
0x120: V82 = M[S0]
0x123: V83 = ADD V80 0x20
0x124: M[V83] = V82
0x126: V84 = M[S0]
0x12d: V85 = ADD V80 0x40
0x130: V86 = ADD S0 0x20
0x135: V87 = 0x0
---
Entry stack: [V9, 0x115, S0]
Stack pops: 1
Stack additions: [S0, V80, V80, V85, V86, V84, V84, V85, V86, 0x0]
Exit stack: [V9, 0x115, S0, V80, V80, V85, V86, V84, V84, V85, V86, 0x0]

================================

Block 0x137
[0x137:0x13f]
---
Predecessors: [0x115, 0x140]
Successors: [0x140, 0x14f]
---
0x137 JUMPDEST
0x138 DUP4
0x139 DUP2
0x13a LT
0x13b ISZERO
0x13c PUSH2 0x14f
0x13f JUMPI
---
0x137: JUMPDEST 
0x13a: V88 = LT S0 V84
0x13b: V89 = ISZERO V88
0x13c: V90 = 0x14f
0x13f: JUMPI 0x14f V89
---
Entry stack: [V9, 0x115, S9, V80, V80, V85, V86, V84, V84, V85, V86, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V9, 0x115, S9, V80, V80, V85, V86, V84, V84, V85, V86, S0]

================================

Block 0x140
[0x140:0x14e]
---
Predecessors: [0x137]
Successors: [0x137]
---
0x140 DUP2
0x141 DUP2
0x142 ADD
0x143 MLOAD
0x144 DUP4
0x145 DUP3
0x146 ADD
0x147 MSTORE
0x148 PUSH1 0x20
0x14a ADD
0x14b PUSH2 0x137
0x14e JUMP
---
0x142: V91 = ADD S0 V86
0x143: V92 = M[V91]
0x146: V93 = ADD S0 V85
0x147: M[V93] = V92
0x148: V94 = 0x20
0x14a: V95 = ADD 0x20 S0
0x14b: V96 = 0x137
0x14e: JUMP 0x137
---
Entry stack: [V9, 0x115, S9, V80, V80, V85, V86, V84, V84, V85, V86, S0]
Stack pops: 3
Stack additions: [S2, S1, V95]
Exit stack: [V9, 0x115, S9, V80, V80, V85, V86, V84, V84, V85, V86, V95]

================================

Block 0x14f
[0x14f:0x162]
---
Predecessors: [0x137]
Successors: [0x163, 0x17c]
---
0x14f JUMPDEST
0x150 POP
0x151 POP
0x152 POP
0x153 POP
0x154 SWAP1
0x155 POP
0x156 SWAP1
0x157 DUP2
0x158 ADD
0x159 SWAP1
0x15a PUSH1 0x1f
0x15c AND
0x15d DUP1
0x15e ISZERO
0x15f PUSH2 0x17c
0x162 JUMPI
---
0x14f: JUMPDEST 
0x158: V97 = ADD V84 V85
0x15a: V98 = 0x1f
0x15c: V99 = AND 0x1f V84
0x15e: V100 = ISZERO V99
0x15f: V101 = 0x17c
0x162: JUMPI 0x17c V100
---
Entry stack: [V9, 0x115, S9, V80, V80, V85, V86, V84, V84, V85, V86, S0]
Stack pops: 7
Stack additions: [V97, V99]
Exit stack: [V9, 0x115, S9, V80, V80, V97, V99]

================================

Block 0x163
[0x163:0x17b]
---
Predecessors: [0x14f]
Successors: [0x17c]
---
0x163 DUP1
0x164 DUP3
0x165 SUB
0x166 DUP1
0x167 MLOAD
0x168 PUSH1 0x1
0x16a DUP4
0x16b PUSH1 0x20
0x16d SUB
0x16e PUSH2 0x100
0x171 EXP
0x172 SUB
0x173 NOT
0x174 AND
0x175 DUP2
0x176 MSTORE
0x177 PUSH1 0x20
0x179 ADD
0x17a SWAP2
0x17b POP
---
0x165: V102 = SUB V97 V99
0x167: V103 = M[V102]
0x168: V104 = 0x1
0x16b: V105 = 0x20
0x16d: V106 = SUB 0x20 V99
0x16e: V107 = 0x100
0x171: V108 = EXP 0x100 V106
0x172: V109 = SUB V108 0x1
0x173: V110 = NOT V109
0x174: V111 = AND V110 V103
0x176: M[V102] = V111
0x177: V112 = 0x20
0x179: V113 = ADD 0x20 V102
---
Entry stack: [V9, 0x115, S4, V80, V80, V97, V99]
Stack pops: 2
Stack additions: [V113, S0]
Exit stack: [V9, 0x115, S4, V80, V80, V113, V99]

================================

Block 0x17c
[0x17c:0x189]
---
Predecessors: [0x14f, 0x163]
Successors: []
---
0x17c JUMPDEST
0x17d POP
0x17e SWAP3
0x17f POP
0x180 POP
0x181 POP
0x182 PUSH1 0x40
0x184 MLOAD
0x185 DUP1
0x186 SWAP2
0x187 SUB
0x188 SWAP1
0x189 RETURN
---
0x17c: JUMPDEST 
0x182: V114 = 0x40
0x184: V115 = M[0x40]
0x187: V116 = SUB S1 V115
0x189: RETURN V115 V116
---
Entry stack: [V9, 0x115, S4, V80, V80, S1, V99]
Stack pops: 5
Stack additions: []
Exit stack: [V9, 0x115]

================================

Block 0x18a
[0x18a:0x191]
---
Predecessors: [0xdd]
Successors: [0x192, 0x196]
---
0x18a JUMPDEST
0x18b CALLVALUE
0x18c DUP1
0x18d ISZERO
0x18e PUSH2 0x196
0x191 JUMPI
---
0x18a: JUMPDEST 
0x18b: V117 = CALLVALUE
0x18d: V118 = ISZERO V117
0x18e: V119 = 0x196
0x191: JUMPI 0x196 V118
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V117]
Exit stack: [V9, V117]

================================

Block 0x192
[0x192:0x195]
---
Predecessors: [0x18a]
Successors: []
---
0x192 PUSH1 0x0
0x194 DUP1
0x195 REVERT
---
0x192: V120 = 0x0
0x195: REVERT 0x0 0x0
---
Entry stack: [V9, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V117]

================================

Block 0x196
[0x196:0x1a8]
---
Predecessors: [0x18a]
Successors: [0x1a9, 0x1ad]
---
0x196 JUMPDEST
0x197 POP
0x198 PUSH2 0x1c3
0x19b PUSH1 0x4
0x19d DUP1
0x19e CALLDATASIZE
0x19f SUB
0x1a0 PUSH1 0x40
0x1a2 DUP2
0x1a3 LT
0x1a4 ISZERO
0x1a5 PUSH2 0x1ad
0x1a8 JUMPI
---
0x196: JUMPDEST 
0x198: V121 = 0x1c3
0x19b: V122 = 0x4
0x19e: V123 = CALLDATASIZE
0x19f: V124 = SUB V123 0x4
0x1a0: V125 = 0x40
0x1a3: V126 = LT V124 0x40
0x1a4: V127 = ISZERO V126
0x1a5: V128 = 0x1ad
0x1a8: JUMPI 0x1ad V127
---
Entry stack: [V9, V117]
Stack pops: 1
Stack additions: [0x1c3, 0x4, V124]
Exit stack: [V9, 0x1c3, 0x4, V124]

================================

Block 0x1a9
[0x1a9:0x1ac]
---
Predecessors: [0x196]
Successors: []
---
0x1a9 PUSH1 0x0
0x1ab DUP1
0x1ac REVERT
---
0x1a9: V129 = 0x0
0x1ac: REVERT 0x0 0x0
---
Entry stack: [V9, 0x1c3, 0x4, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x1c3, 0x4, V124]

================================

Block 0x1ad
[0x1ad:0x1c2]
---
Predecessors: [0x196]
Successors: [0x569]
---
0x1ad JUMPDEST
0x1ae POP
0x1af PUSH1 0x1
0x1b1 PUSH1 0x1
0x1b3 PUSH1 0xa0
0x1b5 SHL
0x1b6 SUB
0x1b7 DUP2
0x1b8 CALLDATALOAD
0x1b9 AND
0x1ba SWAP1
0x1bb PUSH1 0x20
0x1bd ADD
0x1be CALLDATALOAD
0x1bf PUSH2 0x569
0x1c2 JUMP
---
0x1ad: JUMPDEST 
0x1af: V130 = 0x1
0x1b1: V131 = 0x1
0x1b3: V132 = 0xa0
0x1b5: V133 = SHL 0xa0 0x1
0x1b6: V134 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b8: V135 = CALLDATALOAD 0x4
0x1b9: V136 = AND V135 0xffffffffffffffffffffffffffffffffffffffff
0x1bb: V137 = 0x20
0x1bd: V138 = ADD 0x20 0x4
0x1be: V139 = CALLDATALOAD 0x24
0x1bf: V140 = 0x569
0x1c2: JUMP 0x569
---
Entry stack: [V9, 0x1c3, 0x4, V124]
Stack pops: 2
Stack additions: [V136, V139]
Exit stack: [V9, 0x1c3, V136, V139]

================================

Block 0x1c3
[0x1c3:0x1d6]
---
Predecessors: [0x5ca, 0x765, 0x9ab, 0xb8c]
Successors: []
---
0x1c3 JUMPDEST
0x1c4 PUSH1 0x40
0x1c6 DUP1
0x1c7 MLOAD
0x1c8 SWAP2
0x1c9 ISZERO
0x1ca ISZERO
0x1cb DUP3
0x1cc MSTORE
0x1cd MLOAD
0x1ce SWAP1
0x1cf DUP2
0x1d0 SWAP1
0x1d1 SUB
0x1d2 PUSH1 0x20
0x1d4 ADD
0x1d5 SWAP1
0x1d6 RETURN
---
0x1c3: JUMPDEST 
0x1c4: V141 = 0x40
0x1c7: V142 = M[0x40]
0x1c9: V143 = ISZERO S0
0x1ca: V144 = ISZERO V143
0x1cc: M[V142] = V144
0x1cd: V145 = M[0x40]
0x1d1: V146 = SUB V142 V145
0x1d2: V147 = 0x20
0x1d4: V148 = ADD 0x20 V146
0x1d6: RETURN V145 V148
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S5, S4, S3, S2, S1]

================================

Block 0x1d7
[0x1d7:0x1de]
---
Predecessors: [0xe8]
Successors: [0x1df, 0x1e3]
---
0x1d7 JUMPDEST
0x1d8 CALLVALUE
0x1d9 DUP1
0x1da ISZERO
0x1db PUSH2 0x1e3
0x1de JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V149 = CALLVALUE
0x1da: V150 = ISZERO V149
0x1db: V151 = 0x1e3
0x1de: JUMPI 0x1e3 V150
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V149]
Exit stack: [V9, V149]

================================

Block 0x1df
[0x1df:0x1e2]
---
Predecessors: [0x1d7]
Successors: []
---
0x1df PUSH1 0x0
0x1e1 DUP1
0x1e2 REVERT
---
0x1df: V152 = 0x0
0x1e2: REVERT 0x0 0x0
---
Entry stack: [V9, V149]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V149]

================================

Block 0x1e3
[0x1e3:0x1eb]
---
Predecessors: [0x1d7]
Successors: [0x5d0]
---
0x1e3 JUMPDEST
0x1e4 POP
0x1e5 PUSH2 0x1ec
0x1e8 PUSH2 0x5d0
0x1eb JUMP
---
0x1e3: JUMPDEST 
0x1e5: V153 = 0x1ec
0x1e8: V154 = 0x5d0
0x1eb: JUMP 0x5d0
---
Entry stack: [V9, V149]
Stack pops: 1
Stack additions: [0x1ec]
Exit stack: [V9, 0x1ec]

================================

Block 0x1ec
[0x1ec:0x1fd]
---
Predecessors: [0x60e, 0x7cf, 0xba9]
Successors: []
---
0x1ec JUMPDEST
0x1ed PUSH1 0x40
0x1ef DUP1
0x1f0 MLOAD
0x1f1 SWAP2
0x1f2 DUP3
0x1f3 MSTORE
0x1f4 MLOAD
0x1f5 SWAP1
0x1f6 DUP2
0x1f7 SWAP1
0x1f8 SUB
0x1f9 PUSH1 0x20
0x1fb ADD
0x1fc SWAP1
0x1fd RETURN
---
0x1ec: JUMPDEST 
0x1ed: V155 = 0x40
0x1f0: V156 = M[0x40]
0x1f3: M[V156] = S0
0x1f4: V157 = M[0x40]
0x1f8: V158 = SUB V156 V157
0x1f9: V159 = 0x20
0x1fb: V160 = ADD 0x20 V158
0x1fd: RETURN V157 V160
---
Entry stack: [V9, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, S3, S2, S1]

================================

Block 0x1fe
[0x1fe:0x205]
---
Predecessors: [0xf3]
Successors: [0x206, 0x20a]
---
0x1fe JUMPDEST
0x1ff CALLVALUE
0x200 DUP1
0x201 ISZERO
0x202 PUSH2 0x20a
0x205 JUMPI
---
0x1fe: JUMPDEST 
0x1ff: V161 = CALLVALUE
0x201: V162 = ISZERO V161
0x202: V163 = 0x20a
0x205: JUMPI 0x20a V162
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V161]
Exit stack: [V9, V161]

================================

Block 0x206
[0x206:0x209]
---
Predecessors: [0x1fe]
Successors: []
---
0x206 PUSH1 0x0
0x208 DUP1
0x209 REVERT
---
0x206: V164 = 0x0
0x209: REVERT 0x0 0x0
---
Entry stack: [V9, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V161]

================================

Block 0x20a
[0x20a:0x212]
---
Predecessors: [0x1fe]
Successors: [0x613]
---
0x20a JUMPDEST
0x20b POP
0x20c PUSH2 0x213
0x20f PUSH2 0x613
0x212 JUMP
---
0x20a: JUMPDEST 
0x20c: V165 = 0x213
0x20f: V166 = 0x613
0x212: JUMP 0x613
---
Entry stack: [V9, V161]
Stack pops: 1
Stack additions: [0x213]
Exit stack: [V9, 0x213]

================================

Block 0x213
[0x213:0x22e]
---
Predecessors: [0x613, 0x89e, 0xb9a]
Successors: []
---
0x213 JUMPDEST
0x214 PUSH1 0x40
0x216 DUP1
0x217 MLOAD
0x218 PUSH1 0x1
0x21a PUSH1 0x1
0x21c PUSH1 0xa0
0x21e SHL
0x21f SUB
0x220 SWAP1
0x221 SWAP3
0x222 AND
0x223 DUP3
0x224 MSTORE
0x225 MLOAD
0x226 SWAP1
0x227 DUP2
0x228 SWAP1
0x229 SUB
0x22a PUSH1 0x20
0x22c ADD
0x22d SWAP1
0x22e RETURN
---
0x213: JUMPDEST 
0x214: V167 = 0x40
0x217: V168 = M[0x40]
0x218: V169 = 0x1
0x21a: V170 = 0x1
0x21c: V171 = 0xa0
0x21e: V172 = SHL 0xa0 0x1
0x21f: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x222: V174 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x224: M[V168] = V174
0x225: V175 = M[0x40]
0x229: V176 = SUB V168 V175
0x22a: V177 = 0x20
0x22c: V178 = ADD 0x20 V176
0x22e: RETURN V175 V178
---
Entry stack: [V9, 0x213, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x213]

================================

Block 0x22f
[0x22f:0x236]
---
Predecessors: [0xa1]
Successors: [0x237, 0x23b]
---
0x22f JUMPDEST
0x230 CALLVALUE
0x231 DUP1
0x232 ISZERO
0x233 PUSH2 0x23b
0x236 JUMPI
---
0x22f: JUMPDEST 
0x230: V179 = CALLVALUE
0x232: V180 = ISZERO V179
0x233: V181 = 0x23b
0x236: JUMPI 0x23b V180
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V179]
Exit stack: [V9, V179]

================================

Block 0x237
[0x237:0x23a]
---
Predecessors: [0x22f]
Successors: []
---
0x237 PUSH1 0x0
0x239 DUP1
0x23a REVERT
---
0x237: V182 = 0x0
0x23a: REVERT 0x0 0x0
---
Entry stack: [V9, V179]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V179]

================================

Block 0x23b
[0x23b:0x24d]
---
Predecessors: [0x22f]
Successors: [0x24e, 0x252]
---
0x23b JUMPDEST
0x23c POP
0x23d PUSH2 0x1c3
0x240 PUSH1 0x4
0x242 DUP1
0x243 CALLDATASIZE
0x244 SUB
0x245 PUSH1 0x60
0x247 DUP2
0x248 LT
0x249 ISZERO
0x24a PUSH2 0x252
0x24d JUMPI
---
0x23b: JUMPDEST 
0x23d: V183 = 0x1c3
0x240: V184 = 0x4
0x243: V185 = CALLDATASIZE
0x244: V186 = SUB V185 0x4
0x245: V187 = 0x60
0x248: V188 = LT V186 0x60
0x249: V189 = ISZERO V188
0x24a: V190 = 0x252
0x24d: JUMPI 0x252 V189
---
Entry stack: [V9, V179]
Stack pops: 1
Stack additions: [0x1c3, 0x4, V186]
Exit stack: [V9, 0x1c3, 0x4, V186]

================================

Block 0x24e
[0x24e:0x251]
---
Predecessors: [0x23b]
Successors: []
---
0x24e PUSH1 0x0
0x250 DUP1
0x251 REVERT
---
0x24e: V191 = 0x0
0x251: REVERT 0x0 0x0
---
Entry stack: [V9, 0x1c3, 0x4, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x1c3, 0x4, V186]

================================

Block 0x252
[0x252:0x271]
---
Predecessors: [0x23b]
Successors: [0x622]
---
0x252 JUMPDEST
0x253 POP
0x254 PUSH1 0x1
0x256 PUSH1 0x1
0x258 PUSH1 0xa0
0x25a SHL
0x25b SUB
0x25c DUP2
0x25d CALLDATALOAD
0x25e DUP2
0x25f AND
0x260 SWAP2
0x261 PUSH1 0x20
0x263 DUP2
0x264 ADD
0x265 CALLDATALOAD
0x266 SWAP1
0x267 SWAP2
0x268 AND
0x269 SWAP1
0x26a PUSH1 0x40
0x26c ADD
0x26d CALLDATALOAD
0x26e PUSH2 0x622
0x271 JUMP
---
0x252: JUMPDEST 
0x254: V192 = 0x1
0x256: V193 = 0x1
0x258: V194 = 0xa0
0x25a: V195 = SHL 0xa0 0x1
0x25b: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x25d: V197 = CALLDATALOAD 0x4
0x25f: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V197
0x261: V199 = 0x20
0x264: V200 = ADD 0x4 0x20
0x265: V201 = CALLDATALOAD 0x24
0x268: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x26a: V203 = 0x40
0x26c: V204 = ADD 0x40 0x4
0x26d: V205 = CALLDATALOAD 0x44
0x26e: V206 = 0x622
0x271: JUMP 0x622
---
Entry stack: [V9, 0x1c3, 0x4, V186]
Stack pops: 2
Stack additions: [V198, V202, V205]
Exit stack: [V9, 0x1c3, V198, V202, V205]

================================

Block 0x272
[0x272:0x279]
---
Predecessors: [0xac]
Successors: [0x27a, 0x27e]
---
0x272 JUMPDEST
0x273 CALLVALUE
0x274 DUP1
0x275 ISZERO
0x276 PUSH2 0x27e
0x279 JUMPI
---
0x272: JUMPDEST 
0x273: V207 = CALLVALUE
0x275: V208 = ISZERO V207
0x276: V209 = 0x27e
0x279: JUMPI 0x27e V208
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V207]
Exit stack: [V9, V207]

================================

Block 0x27a
[0x27a:0x27d]
---
Predecessors: [0x272]
Successors: []
---
0x27a PUSH1 0x0
0x27c DUP1
0x27d REVERT
---
0x27a: V210 = 0x0
0x27d: REVERT 0x0 0x0
---
Entry stack: [V9, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V207]

================================

Block 0x27e
[0x27e:0x286]
---
Predecessors: [0x272]
Successors: [0x7c6]
---
0x27e JUMPDEST
0x27f POP
0x280 PUSH2 0x287
0x283 PUSH2 0x7c6
0x286 JUMP
---
0x27e: JUMPDEST 
0x280: V211 = 0x287
0x283: V212 = 0x7c6
0x286: JUMP 0x7c6
---
Entry stack: [V9, V207]
Stack pops: 1
Stack additions: [0x287]
Exit stack: [V9, 0x287]

================================

Block 0x287
[0x287:0x29c]
---
Predecessors: [0x7c6]
Successors: []
---
0x287 JUMPDEST
0x288 PUSH1 0x40
0x28a DUP1
0x28b MLOAD
0x28c PUSH1 0xff
0x28e SWAP1
0x28f SWAP3
0x290 AND
0x291 DUP3
0x292 MSTORE
0x293 MLOAD
0x294 SWAP1
0x295 DUP2
0x296 SWAP1
0x297 SUB
0x298 PUSH1 0x20
0x29a ADD
0x29b SWAP1
0x29c RETURN
---
0x287: JUMPDEST 
0x288: V213 = 0x40
0x28b: V214 = M[0x40]
0x28c: V215 = 0xff
0x290: V216 = AND V670 0xff
0x292: M[V214] = V216
0x293: V217 = M[0x40]
0x297: V218 = SUB V214 V217
0x298: V219 = 0x20
0x29a: V220 = ADD 0x20 V218
0x29c: RETURN V217 V220
---
Entry stack: [V9, 0x287, V670]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x287]

================================

Block 0x29d
[0x29d:0x2a4]
---
Predecessors: [0xb7]
Successors: [0x2a5, 0x2a9]
---
0x29d JUMPDEST
0x29e CALLVALUE
0x29f DUP1
0x2a0 ISZERO
0x2a1 PUSH2 0x2a9
0x2a4 JUMPI
---
0x29d: JUMPDEST 
0x29e: V221 = CALLVALUE
0x2a0: V222 = ISZERO V221
0x2a1: V223 = 0x2a9
0x2a4: JUMPI 0x2a9 V222
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V221]
Exit stack: [V9, V221]

================================

Block 0x2a5
[0x2a5:0x2a8]
---
Predecessors: [0x29d]
Successors: []
---
0x2a5 PUSH1 0x0
0x2a7 DUP1
0x2a8 REVERT
---
0x2a5: V224 = 0x0
0x2a8: REVERT 0x0 0x0
---
Entry stack: [V9, V221]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V221]

================================

Block 0x2a9
[0x2a9:0x2bb]
---
Predecessors: [0x29d]
Successors: [0x2bc, 0x2c0]
---
0x2a9 JUMPDEST
0x2aa POP
0x2ab PUSH2 0x1ec
0x2ae PUSH1 0x4
0x2b0 DUP1
0x2b1 CALLDATASIZE
0x2b2 SUB
0x2b3 PUSH1 0x20
0x2b5 DUP2
0x2b6 LT
0x2b7 ISZERO
0x2b8 PUSH2 0x2c0
0x2bb JUMPI
---
0x2a9: JUMPDEST 
0x2ab: V225 = 0x1ec
0x2ae: V226 = 0x4
0x2b1: V227 = CALLDATASIZE
0x2b2: V228 = SUB V227 0x4
0x2b3: V229 = 0x20
0x2b6: V230 = LT V228 0x20
0x2b7: V231 = ISZERO V230
0x2b8: V232 = 0x2c0
0x2bb: JUMPI 0x2c0 V231
---
Entry stack: [V9, V221]
Stack pops: 1
Stack additions: [0x1ec, 0x4, V228]
Exit stack: [V9, 0x1ec, 0x4, V228]

================================

Block 0x2bc
[0x2bc:0x2bf]
---
Predecessors: [0x2a9]
Successors: []
---
0x2bc PUSH1 0x0
0x2be DUP1
0x2bf REVERT
---
0x2bc: V233 = 0x0
0x2bf: REVERT 0x0 0x0
---
Entry stack: [V9, 0x1ec, 0x4, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x1ec, 0x4, V228]

================================

Block 0x2c0
[0x2c0:0x2cf]
---
Predecessors: [0x2a9]
Successors: [0x7cf]
---
0x2c0 JUMPDEST
0x2c1 POP
0x2c2 CALLDATALOAD
0x2c3 PUSH1 0x1
0x2c5 PUSH1 0x1
0x2c7 PUSH1 0xa0
0x2c9 SHL
0x2ca SUB
0x2cb AND
0x2cc PUSH2 0x7cf
0x2cf JUMP
---
0x2c0: JUMPDEST 
0x2c2: V234 = CALLDATALOAD 0x4
0x2c3: V235 = 0x1
0x2c5: V236 = 0x1
0x2c7: V237 = 0xa0
0x2c9: V238 = SHL 0xa0 0x1
0x2ca: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cb: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x2cc: V241 = 0x7cf
0x2cf: JUMP 0x7cf
---
Entry stack: [V9, 0x1ec, 0x4, V228]
Stack pops: 2
Stack additions: [V240]
Exit stack: [V9, 0x1ec, V240]

================================

Block 0x2d0
[0x2d0:0x2d7]
---
Predecessors: [0xc2]
Successors: [0x2d8, 0x2dc]
---
0x2d0 JUMPDEST
0x2d1 CALLVALUE
0x2d2 DUP1
0x2d3 ISZERO
0x2d4 PUSH2 0x2dc
0x2d7 JUMPI
---
0x2d0: JUMPDEST 
0x2d1: V242 = CALLVALUE
0x2d3: V243 = ISZERO V242
0x2d4: V244 = 0x2dc
0x2d7: JUMPI 0x2dc V243
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V242]
Exit stack: [V9, V242]

================================

Block 0x2d8
[0x2d8:0x2db]
---
Predecessors: [0x2d0]
Successors: []
---
0x2d8 PUSH1 0x0
0x2da DUP1
0x2db REVERT
---
0x2d8: V245 = 0x0
0x2db: REVERT 0x0 0x0
---
Entry stack: [V9, V242]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V242]

================================

Block 0x2dc
[0x2dc:0x2e4]
---
Predecessors: [0x2d0]
Successors: [0x7ea]
---
0x2dc JUMPDEST
0x2dd POP
0x2de PUSH2 0xfe
0x2e1 PUSH2 0x7ea
0x2e4 JUMP
---
0x2dc: JUMPDEST 
0x2de: V246 = 0xfe
0x2e1: V247 = 0x7ea
0x2e4: JUMP 0x7ea
---
Entry stack: [V9, V242]
Stack pops: 1
Stack additions: [0xfe]
Exit stack: [V9, 0xfe]

================================

Block 0x2e5
[0x2e5:0x2ec]
---
Predecessors: [0x64]
Successors: [0x2ed, 0x2f1]
---
0x2e5 JUMPDEST
0x2e6 CALLVALUE
0x2e7 DUP1
0x2e8 ISZERO
0x2e9 PUSH2 0x2f1
0x2ec JUMPI
---
0x2e5: JUMPDEST 
0x2e6: V248 = CALLVALUE
0x2e8: V249 = ISZERO V248
0x2e9: V250 = 0x2f1
0x2ec: JUMPI 0x2f1 V249
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V248]
Exit stack: [V9, V248]

================================

Block 0x2ed
[0x2ed:0x2f0]
---
Predecessors: [0x2e5]
Successors: []
---
0x2ed PUSH1 0x0
0x2ef DUP1
0x2f0 REVERT
---
0x2ed: V251 = 0x0
0x2f0: REVERT 0x0 0x0
---
Entry stack: [V9, V248]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V248]

================================

Block 0x2f1
[0x2f1:0x303]
---
Predecessors: [0x2e5]
Successors: [0x304, 0x308]
---
0x2f1 JUMPDEST
0x2f2 POP
0x2f3 PUSH2 0xfe
0x2f6 PUSH1 0x4
0x2f8 DUP1
0x2f9 CALLDATASIZE
0x2fa SUB
0x2fb PUSH1 0x20
0x2fd DUP2
0x2fe LT
0x2ff ISZERO
0x300 PUSH2 0x308
0x303 JUMPI
---
0x2f1: JUMPDEST 
0x2f3: V252 = 0xfe
0x2f6: V253 = 0x4
0x2f9: V254 = CALLDATASIZE
0x2fa: V255 = SUB V254 0x4
0x2fb: V256 = 0x20
0x2fe: V257 = LT V255 0x20
0x2ff: V258 = ISZERO V257
0x300: V259 = 0x308
0x303: JUMPI 0x308 V258
---
Entry stack: [V9, V248]
Stack pops: 1
Stack additions: [0xfe, 0x4, V255]
Exit stack: [V9, 0xfe, 0x4, V255]

================================

Block 0x304
[0x304:0x307]
---
Predecessors: [0x2f1]
Successors: []
---
0x304 PUSH1 0x0
0x306 DUP1
0x307 REVERT
---
0x304: V260 = 0x0
0x307: REVERT 0x0 0x0
---
Entry stack: [V9, 0xfe, 0x4, V255]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xfe, 0x4, V255]

================================

Block 0x308
[0x308:0x317]
---
Predecessors: [0x2f1]
Successors: [0x865]
---
0x308 JUMPDEST
0x309 POP
0x30a CALLDATALOAD
0x30b PUSH1 0x1
0x30d PUSH1 0x1
0x30f PUSH1 0xa0
0x311 SHL
0x312 SUB
0x313 AND
0x314 PUSH2 0x865
0x317 JUMP
---
0x308: JUMPDEST 
0x30a: V261 = CALLDATALOAD 0x4
0x30b: V262 = 0x1
0x30d: V263 = 0x1
0x30f: V264 = 0xa0
0x311: V265 = SHL 0xa0 0x1
0x312: V266 = SUB 0x10000000000000000000000000000000000000000 0x1
0x313: V267 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x314: V268 = 0x865
0x317: JUMP 0x865
---
Entry stack: [V9, 0xfe, 0x4, V255]
Stack pops: 2
Stack additions: [V267]
Exit stack: [V9, 0xfe, V267]

================================

Block 0x318
[0x318:0x31f]
---
Predecessors: [0x70]
Successors: [0x320, 0x324]
---
0x318 JUMPDEST
0x319 CALLVALUE
0x31a DUP1
0x31b ISZERO
0x31c PUSH2 0x324
0x31f JUMPI
---
0x318: JUMPDEST 
0x319: V269 = CALLVALUE
0x31b: V270 = ISZERO V269
0x31c: V271 = 0x324
0x31f: JUMPI 0x324 V270
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V269]
Exit stack: [V9, V269]

================================

Block 0x320
[0x320:0x323]
---
Predecessors: [0x318]
Successors: []
---
0x320 PUSH1 0x0
0x322 DUP1
0x323 REVERT
---
0x320: V272 = 0x0
0x323: REVERT 0x0 0x0
---
Entry stack: [V9, V269]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V269]

================================

Block 0x324
[0x324:0x32c]
---
Predecessors: [0x318]
Successors: [0x89e]
---
0x324 JUMPDEST
0x325 POP
0x326 PUSH2 0x213
0x329 PUSH2 0x89e
0x32c JUMP
---
0x324: JUMPDEST 
0x326: V273 = 0x213
0x329: V274 = 0x89e
0x32c: JUMP 0x89e
---
Entry stack: [V9, V269]
Stack pops: 1
Stack additions: [0x213]
Exit stack: [V9, 0x213]

================================

Block 0x32d
[0x32d:0x334]
---
Predecessors: [0x7b]
Successors: [0x335, 0x339]
---
0x32d JUMPDEST
0x32e CALLVALUE
0x32f DUP1
0x330 ISZERO
0x331 PUSH2 0x339
0x334 JUMPI
---
0x32d: JUMPDEST 
0x32e: V275 = CALLVALUE
0x330: V276 = ISZERO V275
0x331: V277 = 0x339
0x334: JUMPI 0x339 V276
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V275]
Exit stack: [V9, V275]

================================

Block 0x335
[0x335:0x338]
---
Predecessors: [0x32d]
Successors: []
---
0x335 PUSH1 0x0
0x337 DUP1
0x338 REVERT
---
0x335: V278 = 0x0
0x338: REVERT 0x0 0x0
---
Entry stack: [V9, V275]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V275]

================================

Block 0x339
[0x339:0x341]
---
Predecessors: [0x32d]
Successors: [0x8ad]
---
0x339 JUMPDEST
0x33a POP
0x33b PUSH2 0x115
0x33e PUSH2 0x8ad
0x341 JUMP
---
0x339: JUMPDEST 
0x33b: V279 = 0x115
0x33e: V280 = 0x8ad
0x341: JUMP 0x8ad
---
Entry stack: [V9, V275]
Stack pops: 1
Stack additions: [0x115]
Exit stack: [V9, 0x115]

================================

Block 0x342
[0x342:0x349]
---
Predecessors: [0x86]
Successors: [0x34a, 0x34e]
---
0x342 JUMPDEST
0x343 CALLVALUE
0x344 DUP1
0x345 ISZERO
0x346 PUSH2 0x34e
0x349 JUMPI
---
0x342: JUMPDEST 
0x343: V281 = CALLVALUE
0x345: V282 = ISZERO V281
0x346: V283 = 0x34e
0x349: JUMPI 0x34e V282
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V281]
Exit stack: [V9, V281]

================================

Block 0x34a
[0x34a:0x34d]
---
Predecessors: [0x342]
Successors: []
---
0x34a PUSH1 0x0
0x34c DUP1
0x34d REVERT
---
0x34a: V284 = 0x0
0x34d: REVERT 0x0 0x0
---
Entry stack: [V9, V281]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V281]

================================

Block 0x34e
[0x34e:0x360]
---
Predecessors: [0x342]
Successors: [0x361, 0x365]
---
0x34e JUMPDEST
0x34f POP
0x350 PUSH2 0x1c3
0x353 PUSH1 0x4
0x355 DUP1
0x356 CALLDATASIZE
0x357 SUB
0x358 PUSH1 0x40
0x35a DUP2
0x35b LT
0x35c ISZERO
0x35d PUSH2 0x365
0x360 JUMPI
---
0x34e: JUMPDEST 
0x350: V285 = 0x1c3
0x353: V286 = 0x4
0x356: V287 = CALLDATASIZE
0x357: V288 = SUB V287 0x4
0x358: V289 = 0x40
0x35b: V290 = LT V288 0x40
0x35c: V291 = ISZERO V290
0x35d: V292 = 0x365
0x360: JUMPI 0x365 V291
---
Entry stack: [V9, V281]
Stack pops: 1
Stack additions: [0x1c3, 0x4, V288]
Exit stack: [V9, 0x1c3, 0x4, V288]

================================

Block 0x361
[0x361:0x364]
---
Predecessors: [0x34e]
Successors: []
---
0x361 PUSH1 0x0
0x363 DUP1
0x364 REVERT
---
0x361: V293 = 0x0
0x364: REVERT 0x0 0x0
---
Entry stack: [V9, 0x1c3, 0x4, V288]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x1c3, 0x4, V288]

================================

Block 0x365
[0x365:0x37a]
---
Predecessors: [0x34e]
Successors: [0x905]
---
0x365 JUMPDEST
0x366 POP
0x367 PUSH1 0x1
0x369 PUSH1 0x1
0x36b PUSH1 0xa0
0x36d SHL
0x36e SUB
0x36f DUP2
0x370 CALLDATALOAD
0x371 AND
0x372 SWAP1
0x373 PUSH1 0x20
0x375 ADD
0x376 CALLDATALOAD
0x377 PUSH2 0x905
0x37a JUMP
---
0x365: JUMPDEST 
0x367: V294 = 0x1
0x369: V295 = 0x1
0x36b: V296 = 0xa0
0x36d: V297 = SHL 0xa0 0x1
0x36e: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x370: V299 = CALLDATALOAD 0x4
0x371: V300 = AND V299 0xffffffffffffffffffffffffffffffffffffffff
0x373: V301 = 0x20
0x375: V302 = ADD 0x20 0x4
0x376: V303 = CALLDATALOAD 0x24
0x377: V304 = 0x905
0x37a: JUMP 0x905
---
Entry stack: [V9, 0x1c3, 0x4, V288]
Stack pops: 2
Stack additions: [V300, V303]
Exit stack: [V9, 0x1c3, V300, V303]

================================

Block 0x37b
[0x37b:0x382]
---
Predecessors: [0x29]
Successors: [0x383, 0x387]
---
0x37b JUMPDEST
0x37c CALLVALUE
0x37d DUP1
0x37e ISZERO
0x37f PUSH2 0x387
0x382 JUMPI
---
0x37b: JUMPDEST 
0x37c: V305 = CALLVALUE
0x37e: V306 = ISZERO V305
0x37f: V307 = 0x387
0x382: JUMPI 0x387 V306
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V305]
Exit stack: [V9, V305]

================================

Block 0x383
[0x383:0x386]
---
Predecessors: [0x37b]
Successors: []
---
0x383 PUSH1 0x0
0x385 DUP1
0x386 REVERT
---
0x383: V308 = 0x0
0x386: REVERT 0x0 0x0
---
Entry stack: [V9, V305]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V305]

================================

Block 0x387
[0x387:0x38f]
---
Predecessors: [0x37b]
Successors: [0xa09]
---
0x387 JUMPDEST
0x388 POP
0x389 PUSH2 0xfe
0x38c PUSH2 0xa09
0x38f JUMP
---
0x387: JUMPDEST 
0x389: V309 = 0xfe
0x38c: V310 = 0xa09
0x38f: JUMP 0xa09
---
Entry stack: [V9, V305]
Stack pops: 1
Stack additions: [0xfe]
Exit stack: [V9, 0xfe]

================================

Block 0x390
[0x390:0x397]
---
Predecessors: [0x34]
Successors: [0x398, 0x39c]
---
0x390 JUMPDEST
0x391 CALLVALUE
0x392 DUP1
0x393 ISZERO
0x394 PUSH2 0x39c
0x397 JUMPI
---
0x390: JUMPDEST 
0x391: V311 = CALLVALUE
0x393: V312 = ISZERO V311
0x394: V313 = 0x39c
0x397: JUMPI 0x39c V312
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V311]
Exit stack: [V9, V311]

================================

Block 0x398
[0x398:0x39b]
---
Predecessors: [0x390]
Successors: []
---
0x398 PUSH1 0x0
0x39a DUP1
0x39b REVERT
---
0x398: V314 = 0x0
0x39b: REVERT 0x0 0x0
---
Entry stack: [V9, V311]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V311]

================================

Block 0x39c
[0x39c:0x3ae]
---
Predecessors: [0x390]
Successors: [0x3af, 0x3b3]
---
0x39c JUMPDEST
0x39d POP
0x39e PUSH2 0x1c3
0x3a1 PUSH1 0x4
0x3a3 DUP1
0x3a4 CALLDATASIZE
0x3a5 SUB
0x3a6 PUSH1 0x60
0x3a8 DUP2
0x3a9 LT
0x3aa ISZERO
0x3ab PUSH2 0x3b3
0x3ae JUMPI
---
0x39c: JUMPDEST 
0x39e: V315 = 0x1c3
0x3a1: V316 = 0x4
0x3a4: V317 = CALLDATASIZE
0x3a5: V318 = SUB V317 0x4
0x3a6: V319 = 0x60
0x3a9: V320 = LT V318 0x60
0x3aa: V321 = ISZERO V320
0x3ab: V322 = 0x3b3
0x3ae: JUMPI 0x3b3 V321
---
Entry stack: [V9, V311]
Stack pops: 1
Stack additions: [0x1c3, 0x4, V318]
Exit stack: [V9, 0x1c3, 0x4, V318]

================================

Block 0x3af
[0x3af:0x3b2]
---
Predecessors: [0x39c]
Successors: []
---
0x3af PUSH1 0x0
0x3b1 DUP1
0x3b2 REVERT
---
0x3af: V323 = 0x0
0x3b2: REVERT 0x0 0x0
---
Entry stack: [V9, 0x1c3, 0x4, V318]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x1c3, 0x4, V318]

================================

Block 0x3b3
[0x3b3:0x3de]
---
Predecessors: [0x39c]
Successors: [0x3df, 0x3e3]
---
0x3b3 JUMPDEST
0x3b4 PUSH1 0x1
0x3b6 PUSH1 0x1
0x3b8 PUSH1 0xa0
0x3ba SHL
0x3bb SUB
0x3bc DUP3
0x3bd CALLDATALOAD
0x3be AND
0x3bf SWAP2
0x3c0 PUSH1 0x20
0x3c2 DUP2
0x3c3 ADD
0x3c4 CALLDATALOAD
0x3c5 SWAP2
0x3c6 DUP2
0x3c7 ADD
0x3c8 SWAP1
0x3c9 PUSH1 0x60
0x3cb DUP2
0x3cc ADD
0x3cd PUSH1 0x40
0x3cf DUP3
0x3d0 ADD
0x3d1 CALLDATALOAD
0x3d2 PUSH5 0x100000000
0x3d8 DUP2
0x3d9 GT
0x3da ISZERO
0x3db PUSH2 0x3e3
0x3de JUMPI
---
0x3b3: JUMPDEST 
0x3b4: V324 = 0x1
0x3b6: V325 = 0x1
0x3b8: V326 = 0xa0
0x3ba: V327 = SHL 0xa0 0x1
0x3bb: V328 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bd: V329 = CALLDATALOAD 0x4
0x3be: V330 = AND V329 0xffffffffffffffffffffffffffffffffffffffff
0x3c0: V331 = 0x20
0x3c3: V332 = ADD 0x4 0x20
0x3c4: V333 = CALLDATALOAD 0x24
0x3c7: V334 = ADD 0x4 V318
0x3c9: V335 = 0x60
0x3cc: V336 = ADD 0x4 0x60
0x3cd: V337 = 0x40
0x3d0: V338 = ADD 0x4 0x40
0x3d1: V339 = CALLDATALOAD 0x44
0x3d2: V340 = 0x100000000
0x3d9: V341 = GT V339 0x100000000
0x3da: V342 = ISZERO V341
0x3db: V343 = 0x3e3
0x3de: JUMPI 0x3e3 V342
---
Entry stack: [V9, 0x1c3, 0x4, V318]
Stack pops: 2
Stack additions: [V330, V333, V334, S1, 0x64, V339]
Exit stack: [V9, 0x1c3, V330, V333, V334, 0x4, 0x64, V339]

================================

Block 0x3df
[0x3df:0x3e2]
---
Predecessors: [0x3b3]
Successors: []
---
0x3df PUSH1 0x0
0x3e1 DUP1
0x3e2 REVERT
---
0x3df: V344 = 0x0
0x3e2: REVERT 0x0 0x0
---
Entry stack: [V9, 0x1c3, V330, V333, V334, 0x4, 0x64, V339]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x1c3, V330, V333, V334, 0x4, 0x64, V339]

================================

Block 0x3e3
[0x3e3:0x3f0]
---
Predecessors: [0x3b3]
Successors: [0x3f1, 0x3f5]
---
0x3e3 JUMPDEST
0x3e4 DUP3
0x3e5 ADD
0x3e6 DUP4
0x3e7 PUSH1 0x20
0x3e9 DUP3
0x3ea ADD
0x3eb GT
0x3ec ISZERO
0x3ed PUSH2 0x3f5
0x3f0 JUMPI
---
0x3e3: JUMPDEST 
0x3e5: V345 = ADD 0x4 V339
0x3e7: V346 = 0x20
0x3ea: V347 = ADD V345 0x20
0x3eb: V348 = GT V347 V334
0x3ec: V349 = ISZERO V348
0x3ed: V350 = 0x3f5
0x3f0: JUMPI 0x3f5 V349
---
Entry stack: [V9, 0x1c3, V330, V333, V334, 0x4, 0x64, V339]
Stack pops: 4
Stack additions: [S3, S2, S1, V345]
Exit stack: [V9, 0x1c3, V330, V333, V334, 0x4, 0x64, V345]

================================

Block 0x3f1
[0x3f1:0x3f4]
---
Predecessors: [0x3e3]
Successors: []
---
0x3f1 PUSH1 0x0
0x3f3 DUP1
0x3f4 REVERT
---
0x3f1: V351 = 0x0
0x3f4: REVERT 0x0 0x0
---
Entry stack: [V9, 0x1c3, V330, V333, V334, 0x4, 0x64, V345]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x1c3, V330, V333, V334, 0x4, 0x64, V345]

================================

Block 0x3f5
[0x3f5:0x412]
---
Predecessors: [0x3e3]
Successors: [0x413, 0x417]
---
0x3f5 JUMPDEST
0x3f6 DUP1
0x3f7 CALLDATALOAD
0x3f8 SWAP1
0x3f9 PUSH1 0x20
0x3fb ADD
0x3fc SWAP2
0x3fd DUP5
0x3fe PUSH1 0x1
0x400 DUP4
0x401 MUL
0x402 DUP5
0x403 ADD
0x404 GT
0x405 PUSH5 0x100000000
0x40b DUP4
0x40c GT
0x40d OR
0x40e ISZERO
0x40f PUSH2 0x417
0x412 JUMPI
---
0x3f5: JUMPDEST 
0x3f7: V352 = CALLDATALOAD V345
0x3f9: V353 = 0x20
0x3fb: V354 = ADD 0x20 V345
0x3fe: V355 = 0x1
0x401: V356 = MUL V352 0x1
0x403: V357 = ADD V354 V356
0x404: V358 = GT V357 V334
0x405: V359 = 0x100000000
0x40c: V360 = GT V352 0x100000000
0x40d: V361 = OR V360 V358
0x40e: V362 = ISZERO V361
0x40f: V363 = 0x417
0x412: JUMPI 0x417 V362
---
Entry stack: [V9, 0x1c3, V330, V333, V334, 0x4, 0x64, V345]
Stack pops: 4
Stack additions: [S3, S2, V354, V352, S1]
Exit stack: [V9, 0x1c3, V330, V333, V334, 0x4, V354, V352, 0x64]

================================

Block 0x413
[0x413:0x416]
---
Predecessors: [0x3f5]
Successors: []
---
0x413 PUSH1 0x0
0x415 DUP1
0x416 REVERT
---
0x413: V364 = 0x0
0x416: REVERT 0x0 0x0
---
Entry stack: [V9, 0x1c3, V330, V333, V334, 0x4, V354, V352, 0x64]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x1c3, V330, V333, V334, 0x4, V354, V352, 0x64]

================================

Block 0x417
[0x417:0x457]
---
Predecessors: [0x3f5]
Successors: [0xa52]
---
0x417 JUMPDEST
0x418 SWAP2
0x419 SWAP1
0x41a DUP1
0x41b DUP1
0x41c PUSH1 0x1f
0x41e ADD
0x41f PUSH1 0x20
0x421 DUP1
0x422 SWAP2
0x423 DIV
0x424 MUL
0x425 PUSH1 0x20
0x427 ADD
0x428 PUSH1 0x40
0x42a MLOAD
0x42b SWAP1
0x42c DUP2
0x42d ADD
0x42e PUSH1 0x40
0x430 MSTORE
0x431 DUP1
0x432 SWAP4
0x433 SWAP3
0x434 SWAP2
0x435 SWAP1
0x436 DUP2
0x437 DUP2
0x438 MSTORE
0x439 PUSH1 0x20
0x43b ADD
0x43c DUP4
0x43d DUP4
0x43e DUP1
0x43f DUP3
0x440 DUP5
0x441 CALLDATACOPY
0x442 PUSH1 0x0
0x444 SWAP3
0x445 ADD
0x446 SWAP2
0x447 SWAP1
0x448 SWAP2
0x449 MSTORE
0x44a POP
0x44b SWAP3
0x44c SWAP6
0x44d POP
0x44e PUSH2 0xa52
0x451 SWAP5
0x452 POP
0x453 POP
0x454 POP
0x455 POP
0x456 POP
0x457 JUMP
---
0x417: JUMPDEST 
0x41c: V365 = 0x1f
0x41e: V366 = ADD 0x1f V352
0x41f: V367 = 0x20
0x423: V368 = DIV V366 0x20
0x424: V369 = MUL V368 0x20
0x425: V370 = 0x20
0x427: V371 = ADD 0x20 V369
0x428: V372 = 0x40
0x42a: V373 = M[0x40]
0x42d: V374 = ADD V373 V371
0x42e: V375 = 0x40
0x430: M[0x40] = V374
0x438: M[V373] = V352
0x439: V376 = 0x20
0x43b: V377 = ADD 0x20 V373
0x441: CALLDATACOPY V377 V354 V352
0x442: V378 = 0x0
0x445: V379 = ADD V377 V352
0x449: M[V379] = 0x0
0x44e: V380 = 0xa52
0x457: JUMP 0xa52
---
Entry stack: [V9, 0x1c3, V330, V333, V334, 0x4, V354, V352, 0x64]
Stack pops: 5
Stack additions: [V373]
Exit stack: [V9, 0x1c3, V330, V333, V373]

================================

Block 0x458
[0x458:0x45f]
---
Predecessors: [0x3f]
Successors: [0x460, 0x464]
---
0x458 JUMPDEST
0x459 CALLVALUE
0x45a DUP1
0x45b ISZERO
0x45c PUSH2 0x464
0x45f JUMPI
---
0x458: JUMPDEST 
0x459: V381 = CALLVALUE
0x45b: V382 = ISZERO V381
0x45c: V383 = 0x464
0x45f: JUMPI 0x464 V382
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V381]
Exit stack: [V9, V381]

================================

Block 0x460
[0x460:0x463]
---
Predecessors: [0x458]
Successors: []
---
0x460 PUSH1 0x0
0x462 DUP1
0x463 REVERT
---
0x460: V384 = 0x0
0x463: REVERT 0x0 0x0
---
Entry stack: [V9, V381]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V381]

================================

Block 0x464
[0x464:0x46c]
---
Predecessors: [0x458]
Successors: [0xb9a]
---
0x464 JUMPDEST
0x465 POP
0x466 PUSH2 0x213
0x469 PUSH2 0xb9a
0x46c JUMP
---
0x464: JUMPDEST 
0x466: V385 = 0x213
0x469: V386 = 0xb9a
0x46c: JUMP 0xb9a
---
Entry stack: [V9, V381]
Stack pops: 1
Stack additions: [0x213]
Exit stack: [V9, 0x213]

================================

Block 0x46d
[0x46d:0x474]
---
Predecessors: [0x4a]
Successors: [0x475, 0x479]
---
0x46d JUMPDEST
0x46e CALLVALUE
0x46f DUP1
0x470 ISZERO
0x471 PUSH2 0x479
0x474 JUMPI
---
0x46d: JUMPDEST 
0x46e: V387 = CALLVALUE
0x470: V388 = ISZERO V387
0x471: V389 = 0x479
0x474: JUMPI 0x479 V388
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V387]
Exit stack: [V9, V387]

================================

Block 0x475
[0x475:0x478]
---
Predecessors: [0x46d]
Successors: []
---
0x475 PUSH1 0x0
0x477 DUP1
0x478 REVERT
---
0x475: V390 = 0x0
0x478: REVERT 0x0 0x0
---
Entry stack: [V9, V387]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V387]

================================

Block 0x479
[0x479:0x48b]
---
Predecessors: [0x46d]
Successors: [0x48c, 0x490]
---
0x479 JUMPDEST
0x47a POP
0x47b PUSH2 0x1ec
0x47e PUSH1 0x4
0x480 DUP1
0x481 CALLDATASIZE
0x482 SUB
0x483 PUSH1 0x40
0x485 DUP2
0x486 LT
0x487 ISZERO
0x488 PUSH2 0x490
0x48b JUMPI
---
0x479: JUMPDEST 
0x47b: V391 = 0x1ec
0x47e: V392 = 0x4
0x481: V393 = CALLDATASIZE
0x482: V394 = SUB V393 0x4
0x483: V395 = 0x40
0x486: V396 = LT V394 0x40
0x487: V397 = ISZERO V396
0x488: V398 = 0x490
0x48b: JUMPI 0x490 V397
---
Entry stack: [V9, V387]
Stack pops: 1
Stack additions: [0x1ec, 0x4, V394]
Exit stack: [V9, 0x1ec, 0x4, V394]

================================

Block 0x48c
[0x48c:0x48f]
---
Predecessors: [0x479]
Successors: []
---
0x48c PUSH1 0x0
0x48e DUP1
0x48f REVERT
---
0x48c: V399 = 0x0
0x48f: REVERT 0x0 0x0
---
Entry stack: [V9, 0x1ec, 0x4, V394]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x1ec, 0x4, V394]

================================

Block 0x490
[0x490:0x4a7]
---
Predecessors: [0x479]
Successors: [0xba9]
---
0x490 JUMPDEST
0x491 POP
0x492 PUSH1 0x1
0x494 PUSH1 0x1
0x496 PUSH1 0xa0
0x498 SHL
0x499 SUB
0x49a DUP2
0x49b CALLDATALOAD
0x49c DUP2
0x49d AND
0x49e SWAP2
0x49f PUSH1 0x20
0x4a1 ADD
0x4a2 CALLDATALOAD
0x4a3 AND
0x4a4 PUSH2 0xba9
0x4a7 JUMP
---
0x490: JUMPDEST 
0x492: V400 = 0x1
0x494: V401 = 0x1
0x496: V402 = 0xa0
0x498: V403 = SHL 0xa0 0x1
0x499: V404 = SUB 0x10000000000000000000000000000000000000000 0x1
0x49b: V405 = CALLDATALOAD 0x4
0x49d: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V405
0x49f: V407 = 0x20
0x4a1: V408 = ADD 0x20 0x4
0x4a2: V409 = CALLDATALOAD 0x24
0x4a3: V410 = AND V409 0xffffffffffffffffffffffffffffffffffffffff
0x4a4: V411 = 0xba9
0x4a7: JUMP 0xba9
---
Entry stack: [V9, 0x1ec, 0x4, V394]
Stack pops: 2
Stack additions: [V406, V410]
Exit stack: [V9, 0x1ec, V406, V410]

================================

Block 0x4a8
[0x4a8:0x4af]
---
Predecessors: [0x55]
Successors: [0x4b0, 0x4b4]
---
0x4a8 JUMPDEST
0x4a9 CALLVALUE
0x4aa DUP1
0x4ab ISZERO
0x4ac PUSH2 0x4b4
0x4af JUMPI
---
0x4a8: JUMPDEST 
0x4a9: V412 = CALLVALUE
0x4ab: V413 = ISZERO V412
0x4ac: V414 = 0x4b4
0x4af: JUMPI 0x4b4 V413
---
Entry stack: [V9]
Stack pops: 0
Stack additions: [V412]
Exit stack: [V9, V412]

================================

Block 0x4b0
[0x4b0:0x4b3]
---
Predecessors: [0x4a8]
Successors: []
---
0x4b0 PUSH1 0x0
0x4b2 DUP1
0x4b3 REVERT
---
0x4b0: V415 = 0x0
0x4b3: REVERT 0x0 0x0
---
Entry stack: [V9, V412]
Stack pops: 0
Stack additions: []
Exit stack: [V9, V412]

================================

Block 0x4b4
[0x4b4:0x4c6]
---
Predecessors: [0x4a8]
Successors: [0x4c7, 0x4cb]
---
0x4b4 JUMPDEST
0x4b5 POP
0x4b6 PUSH2 0xfe
0x4b9 PUSH1 0x4
0x4bb DUP1
0x4bc CALLDATASIZE
0x4bd SUB
0x4be PUSH1 0x20
0x4c0 DUP2
0x4c1 LT
0x4c2 ISZERO
0x4c3 PUSH2 0x4cb
0x4c6 JUMPI
---
0x4b4: JUMPDEST 
0x4b6: V416 = 0xfe
0x4b9: V417 = 0x4
0x4bc: V418 = CALLDATASIZE
0x4bd: V419 = SUB V418 0x4
0x4be: V420 = 0x20
0x4c1: V421 = LT V419 0x20
0x4c2: V422 = ISZERO V421
0x4c3: V423 = 0x4cb
0x4c6: JUMPI 0x4cb V422
---
Entry stack: [V9, V412]
Stack pops: 1
Stack additions: [0xfe, 0x4, V419]
Exit stack: [V9, 0xfe, 0x4, V419]

================================

Block 0x4c7
[0x4c7:0x4ca]
---
Predecessors: [0x4b4]
Successors: []
---
0x4c7 PUSH1 0x0
0x4c9 DUP1
0x4ca REVERT
---
0x4c7: V424 = 0x0
0x4ca: REVERT 0x0 0x0
---
Entry stack: [V9, 0xfe, 0x4, V419]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xfe, 0x4, V419]

================================

Block 0x4cb
[0x4cb:0x4da]
---
Predecessors: [0x4b4]
Successors: [0xbd4]
---
0x4cb JUMPDEST
0x4cc POP
0x4cd CALLDATALOAD
0x4ce PUSH1 0x1
0x4d0 PUSH1 0x1
0x4d2 PUSH1 0xa0
0x4d4 SHL
0x4d5 SUB
0x4d6 AND
0x4d7 PUSH2 0xbd4
0x4da JUMP
---
0x4cb: JUMPDEST 
0x4cd: V425 = CALLDATALOAD 0x4
0x4ce: V426 = 0x1
0x4d0: V427 = 0x1
0x4d2: V428 = 0xa0
0x4d4: V429 = SHL 0xa0 0x1
0x4d5: V430 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d6: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x4d7: V432 = 0xbd4
0x4da: JUMP 0xbd4
---
Entry stack: [V9, 0xfe, 0x4, V419]
Stack pops: 2
Stack additions: [V431]
Exit stack: [V9, 0xfe, V431]

================================

Block 0x4db
[0x4db:0x51a]
---
Predecessors: [0x10c]
Successors: [0x51b, 0x561]
---
0x4db JUMPDEST
0x4dc PUSH1 0x3
0x4de DUP1
0x4df SLOAD
0x4e0 PUSH1 0x40
0x4e2 DUP1
0x4e3 MLOAD
0x4e4 PUSH1 0x20
0x4e6 PUSH1 0x2
0x4e8 PUSH1 0x1
0x4ea DUP6
0x4eb AND
0x4ec ISZERO
0x4ed PUSH2 0x100
0x4f0 MUL
0x4f1 PUSH1 0x0
0x4f3 NOT
0x4f4 ADD
0x4f5 SWAP1
0x4f6 SWAP5
0x4f7 AND
0x4f8 SWAP4
0x4f9 SWAP1
0x4fa SWAP4
0x4fb DIV
0x4fc PUSH1 0x1f
0x4fe DUP2
0x4ff ADD
0x500 DUP5
0x501 SWAP1
0x502 DIV
0x503 DUP5
0x504 MUL
0x505 DUP3
0x506 ADD
0x507 DUP5
0x508 ADD
0x509 SWAP1
0x50a SWAP3
0x50b MSTORE
0x50c DUP2
0x50d DUP2
0x50e MSTORE
0x50f SWAP3
0x510 SWAP2
0x511 DUP4
0x512 ADD
0x513 DUP3
0x514 DUP3
0x515 DUP1
0x516 ISZERO
0x517 PUSH2 0x561
0x51a JUMPI
---
0x4db: JUMPDEST 
0x4dc: V433 = 0x3
0x4df: V434 = S[0x3]
0x4e0: V435 = 0x40
0x4e3: V436 = M[0x40]
0x4e4: V437 = 0x20
0x4e6: V438 = 0x2
0x4e8: V439 = 0x1
0x4eb: V440 = AND V434 0x1
0x4ec: V441 = ISZERO V440
0x4ed: V442 = 0x100
0x4f0: V443 = MUL 0x100 V441
0x4f1: V444 = 0x0
0x4f3: V445 = NOT 0x0
0x4f4: V446 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V443
0x4f7: V447 = AND V434 V446
0x4fb: V448 = DIV V447 0x2
0x4fc: V449 = 0x1f
0x4ff: V450 = ADD V448 0x1f
0x502: V451 = DIV V450 0x20
0x504: V452 = MUL 0x20 V451
0x506: V453 = ADD V436 V452
0x508: V454 = ADD 0x20 V453
0x50b: M[0x40] = V454
0x50e: M[V436] = V448
0x512: V455 = ADD V436 0x20
0x516: V456 = ISZERO V448
0x517: V457 = 0x561
0x51a: JUMPI 0x561 V456
---
Entry stack: [V9, 0x115]
Stack pops: 0
Stack additions: [V436, 0x3, V448, V455, 0x3, V448]
Exit stack: [V9, 0x115, V436, 0x3, V448, V455, 0x3, V448]

================================

Block 0x51b
[0x51b:0x522]
---
Predecessors: [0x4db]
Successors: [0x523, 0x536]
---
0x51b DUP1
0x51c PUSH1 0x1f
0x51e LT
0x51f PUSH2 0x536
0x522 JUMPI
---
0x51c: V458 = 0x1f
0x51e: V459 = LT 0x1f V448
0x51f: V460 = 0x536
0x522: JUMPI 0x536 V459
---
Entry stack: [V9, 0x115, V436, 0x3, V448, V455, 0x3, V448]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9, 0x115, V436, 0x3, V448, V455, 0x3, V448]

================================

Block 0x523
[0x523:0x535]
---
Predecessors: [0x51b]
Successors: [0x561]
---
0x523 PUSH2 0x100
0x526 DUP1
0x527 DUP4
0x528 SLOAD
0x529 DIV
0x52a MUL
0x52b DUP4
0x52c MSTORE
0x52d SWAP2
0x52e PUSH1 0x20
0x530 ADD
0x531 SWAP2
0x532 PUSH2 0x561
0x535 JUMP
---
0x523: V461 = 0x100
0x528: V462 = S[0x3]
0x529: V463 = DIV V462 0x100
0x52a: V464 = MUL V463 0x100
0x52c: M[V455] = V464
0x52e: V465 = 0x20
0x530: V466 = ADD 0x20 V455
0x532: V467 = 0x561
0x535: JUMP 0x561
---
Entry stack: [V9, 0x115, V436, 0x3, V448, V455, 0x3, V448]
Stack pops: 3
Stack additions: [V466, S1, S0]
Exit stack: [V9, 0x115, V436, 0x3, V448, V466, 0x3, V448]

================================

Block 0x536
[0x536:0x543]
---
Predecessors: [0x51b, 0x8ea]
Successors: [0x544]
---
0x536 JUMPDEST
0x537 DUP3
0x538 ADD
0x539 SWAP2
0x53a SWAP1
0x53b PUSH1 0x0
0x53d MSTORE
0x53e PUSH1 0x20
0x540 PUSH1 0x0
0x542 SHA3
0x543 SWAP1
---
0x536: JUMPDEST 
0x538: V468 = ADD S2 S0
0x53b: V469 = 0x0
0x53d: M[0x0] = {0x2, 0x3}
0x53e: V470 = 0x20
0x540: V471 = 0x0
0x542: V472 = SHA3 0x0 0x20
---
Entry stack: [V9, 0x115, S5, {0x2, 0x3}, S3, S2, {0x2, 0x3}, S0]
Stack pops: 3
Stack additions: [V468, V472, S2]
Exit stack: [V9, 0x115, S5, {0x2, 0x3}, S3, V468, V472, S2]

================================

Block 0x544
[0x544:0x557]
---
Predecessors: [0x536, 0x544]
Successors: [0x544, 0x558]
---
0x544 JUMPDEST
0x545 DUP2
0x546 SLOAD
0x547 DUP2
0x548 MSTORE
0x549 SWAP1
0x54a PUSH1 0x1
0x54c ADD
0x54d SWAP1
0x54e PUSH1 0x20
0x550 ADD
0x551 DUP1
0x552 DUP4
0x553 GT
0x554 PUSH2 0x544
0x557 JUMPI
---
0x544: JUMPDEST 
0x546: V473 = S[S1]
0x548: M[S0] = V473
0x54a: V474 = 0x1
0x54c: V475 = ADD 0x1 S1
0x54e: V476 = 0x20
0x550: V477 = ADD 0x20 S0
0x553: V478 = GT V468 V477
0x554: V479 = 0x544
0x557: JUMPI 0x544 V478
---
Entry stack: [V9, 0x115, S5, {0x2, 0x3}, S3, V468, S1, S0]
Stack pops: 3
Stack additions: [S2, V475, V477]
Exit stack: [V9, 0x115, S5, {0x2, 0x3}, S3, V468, V475, V477]

================================

Block 0x558
[0x558:0x560]
---
Predecessors: [0x544]
Successors: [0x561]
---
0x558 DUP3
0x559 SWAP1
0x55a SUB
0x55b PUSH1 0x1f
0x55d AND
0x55e DUP3
0x55f ADD
0x560 SWAP2
---
0x55a: V480 = SUB V477 V468
0x55b: V481 = 0x1f
0x55d: V482 = AND 0x1f V480
0x55f: V483 = ADD V468 V482
---
Entry stack: [V9, 0x115, S5, {0x2, 0x3}, S3, V468, V475, V477]
Stack pops: 3
Stack additions: [V483, S1, S2]
Exit stack: [V9, 0x115, S5, {0x2, 0x3}, S3, V483, V475, V468]

================================

Block 0x561
[0x561:0x568]
---
Predecessors: [0x4db, 0x523, 0x558, 0x8ad, 0x8f2]
Successors: [0x115]
---
0x561 JUMPDEST
0x562 POP
0x563 POP
0x564 POP
0x565 POP
0x566 POP
0x567 DUP2
0x568 JUMP
---
0x561: JUMPDEST 
0x568: JUMP 0x115
---
Entry stack: [V9, 0x115, S5, {0x2, 0x3}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V9, 0x115, S5]

================================

Block 0x569
[0x569:0x5c9]
---
Predecessors: [0x1ad]
Successors: [0x5ca]
---
0x569 JUMPDEST
0x56a CALLER
0x56b PUSH1 0x0
0x56d DUP2
0x56e DUP2
0x56f MSTORE
0x570 PUSH1 0x8
0x572 PUSH1 0x20
0x574 SWAP1
0x575 DUP2
0x576 MSTORE
0x577 PUSH1 0x40
0x579 DUP1
0x57a DUP4
0x57b SHA3
0x57c PUSH1 0x1
0x57e PUSH1 0x1
0x580 PUSH1 0xa0
0x582 SHL
0x583 SUB
0x584 DUP8
0x585 AND
0x586 DUP1
0x587 DUP6
0x588 MSTORE
0x589 SWAP1
0x58a DUP4
0x58b MSTORE
0x58c DUP2
0x58d DUP5
0x58e SHA3
0x58f DUP7
0x590 SWAP1
0x591 SSTORE
0x592 DUP2
0x593 MLOAD
0x594 DUP7
0x595 DUP2
0x596 MSTORE
0x597 SWAP2
0x598 MLOAD
0x599 SWAP4
0x59a SWAP5
0x59b SWAP1
0x59c SWAP4
0x59d SWAP1
0x59e SWAP3
0x59f PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5c0 SWAP3
0x5c1 DUP3
0x5c2 SWAP1
0x5c3 SUB
0x5c4 ADD
0x5c5 SWAP1
0x5c6 LOG3
0x5c7 POP
0x5c8 PUSH1 0x1
---
0x569: JUMPDEST 
0x56a: V484 = CALLER
0x56b: V485 = 0x0
0x56f: M[0x0] = V484
0x570: V486 = 0x8
0x572: V487 = 0x20
0x576: M[0x20] = 0x8
0x577: V488 = 0x40
0x57b: V489 = SHA3 0x0 0x40
0x57c: V490 = 0x1
0x57e: V491 = 0x1
0x580: V492 = 0xa0
0x582: V493 = SHL 0xa0 0x1
0x583: V494 = SUB 0x10000000000000000000000000000000000000000 0x1
0x585: V495 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x588: M[0x0] = V495
0x58b: M[0x20] = V489
0x58e: V496 = SHA3 0x0 0x40
0x591: S[V496] = V139
0x593: V497 = M[0x40]
0x596: M[V497] = V139
0x598: V498 = M[0x40]
0x59f: V499 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5c3: V500 = SUB V497 V498
0x5c4: V501 = ADD V500 0x20
0x5c6: LOG V498 V501 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V484 V495
0x5c8: V502 = 0x1
---
Entry stack: [V9, 0x1c3, V136, V139]
Stack pops: 2
Stack additions: [S1, S0, 0x1]
Exit stack: [V9, 0x1c3, V136, V139, 0x1]

================================

Block 0x5ca
[0x5ca:0x5cf]
---
Predecessors: [0x569, 0xc22]
Successors: [0x1c3, 0x765, 0x9ab]
---
0x5ca JUMPDEST
0x5cb SWAP3
0x5cc SWAP2
0x5cd POP
0x5ce POP
0x5cf JUMP
---
0x5ca: JUMPDEST 
0x5cf: JUMP {0x1c3, 0x765, 0x9ab}
---
Entry stack: [V9, S8, S7, S6, S5, S4, {0x1c3, 0x765, 0x9ab}, S2, S1, S0]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V9, S8, S7, S6, S5, S4, S0]

================================

Block 0x5d0
[0x5d0:0x60d]
---
Predecessors: [0x1e3]
Successors: [0xc0d]
---
0x5d0 JUMPDEST
0x5d1 PUSH1 0x0
0x5d3 DUP1
0x5d4 DUP1
0x5d5 MSTORE
0x5d6 PUSH1 0x7
0x5d8 PUSH1 0x20
0x5da MSTORE
0x5db PUSH32 0x6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df
0x5fc SLOAD
0x5fd PUSH1 0x5
0x5ff SLOAD
0x600 PUSH2 0x60e
0x603 SWAP2
0x604 PUSH4 0xffffffff
0x609 PUSH2 0xc0d
0x60c AND
0x60d JUMP
---
0x5d0: JUMPDEST 
0x5d1: V503 = 0x0
0x5d5: M[0x0] = 0x0
0x5d6: V504 = 0x7
0x5d8: V505 = 0x20
0x5da: M[0x20] = 0x7
0x5db: V506 = 0x6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df
0x5fc: V507 = S[0x6d5257204ebe7d88fd91ae87941cb2dd9d8062b64ae5a2bd2d28ec40b9fbf6df]
0x5fd: V508 = 0x5
0x5ff: V509 = S[0x5]
0x600: V510 = 0x60e
0x604: V511 = 0xffffffff
0x609: V512 = 0xc0d
0x60c: V513 = AND 0xc0d 0xffffffff
0x60d: JUMP 0xc0d
---
Entry stack: [V9, 0x1ec]
Stack pops: 0
Stack additions: [0x0, 0x60e, V509, V507]
Exit stack: [V9, 0x1ec, 0x0, 0x60e, V509, V507]

================================

Block 0x60e
[0x60e:0x612]
---
Predecessors: [0xc1c]
Successors: [0x1ec]
---
0x60e JUMPDEST
0x60f SWAP1
0x610 POP
0x611 SWAP1
0x612 JUMP
---
0x60e: JUMPDEST 
0x612: JUMP S2
---
Entry stack: [V9, S5, S4, S3, S2, 0x0, V1056]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V9, S5, S4, S3, V1056]

================================

Block 0x613
[0x613:0x621]
---
Predecessors: [0x20a]
Successors: [0x213]
---
0x613 JUMPDEST
0x614 PUSH1 0x6
0x616 SLOAD
0x617 PUSH1 0x1
0x619 PUSH1 0x1
0x61b PUSH1 0xa0
0x61d SHL
0x61e SUB
0x61f AND
0x620 DUP2
0x621 JUMP
---
0x613: JUMPDEST 
0x614: V514 = 0x6
0x616: V515 = S[0x6]
0x617: V516 = 0x1
0x619: V517 = 0x1
0x61b: V518 = 0xa0
0x61d: V519 = SHL 0xa0 0x1
0x61e: V520 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61f: V521 = AND 0xffffffffffffffffffffffffffffffffffffffff V515
0x621: JUMP 0x213
---
Entry stack: [V9, 0x213]
Stack pops: 1
Stack additions: [S0, V521]
Exit stack: [V9, 0x213, V521]

================================

Block 0x622
[0x622:0x636]
---
Predecessors: [0x252]
Successors: [0x637, 0x645]
---
0x622 JUMPDEST
0x623 PUSH1 0x0
0x625 PUSH1 0x1
0x627 PUSH1 0x1
0x629 PUSH1 0xa0
0x62b SHL
0x62c SUB
0x62d DUP5
0x62e AND
0x62f ISZERO
0x630 DUP1
0x631 ISZERO
0x632 SWAP1
0x633 PUSH2 0x645
0x636 JUMPI
---
0x622: JUMPDEST 
0x623: V522 = 0x0
0x625: V523 = 0x1
0x627: V524 = 0x1
0x629: V525 = 0xa0
0x62b: V526 = SHL 0xa0 0x1
0x62c: V527 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62e: V528 = AND V198 0xffffffffffffffffffffffffffffffffffffffff
0x62f: V529 = ISZERO V528
0x631: V530 = ISZERO V529
0x633: V531 = 0x645
0x636: JUMPI 0x645 V529
---
Entry stack: [V9, 0x1c3, V198, V202, V205]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V530]
Exit stack: [V9, 0x1c3, V198, V202, V205, 0x0, V530]

================================

Block 0x637
[0x637:0x644]
---
Predecessors: [0x622]
Successors: [0x645]
---
0x637 POP
0x638 PUSH1 0x6
0x63a SLOAD
0x63b PUSH1 0x1
0x63d PUSH1 0x1
0x63f PUSH1 0xa0
0x641 SHL
0x642 SUB
0x643 AND
0x644 ISZERO
---
0x638: V532 = 0x6
0x63a: V533 = S[0x6]
0x63b: V534 = 0x1
0x63d: V535 = 0x1
0x63f: V536 = 0xa0
0x641: V537 = SHL 0xa0 0x1
0x642: V538 = SUB 0x10000000000000000000000000000000000000000 0x1
0x643: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V533
0x644: V540 = ISZERO V539
---
Entry stack: [V9, 0x1c3, V198, V202, V205, 0x0, V530]
Stack pops: 1
Stack additions: [V540]
Exit stack: [V9, 0x1c3, V198, V202, V205, 0x0, V540]

================================

Block 0x645
[0x645:0x64a]
---
Predecessors: [0x622, 0x637]
Successors: [0x64b, 0x66a]
---
0x645 JUMPDEST
0x646 ISZERO
0x647 PUSH2 0x66a
0x64a JUMPI
---
0x645: JUMPDEST 
0x646: V541 = ISZERO S0
0x647: V542 = 0x66a
0x64a: JUMPI 0x66a V541
---
Entry stack: [V9, 0x1c3, V198, V202, V205, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V9, 0x1c3, V198, V202, V205, 0x0]

================================

Block 0x64b
[0x64b:0x669]
---
Predecessors: [0x645]
Successors: [0x6bb]
---
0x64b PUSH1 0x6
0x64d DUP1
0x64e SLOAD
0x64f PUSH1 0x1
0x651 PUSH1 0x1
0x653 PUSH1 0xa0
0x655 SHL
0x656 SUB
0x657 NOT
0x658 AND
0x659 PUSH1 0x1
0x65b PUSH1 0x1
0x65d PUSH1 0xa0
0x65f SHL
0x660 SUB
0x661 DUP6
0x662 AND
0x663 OR
0x664 SWAP1
0x665 SSTORE
0x666 PUSH2 0x6bb
0x669 JUMP
---
0x64b: V543 = 0x6
0x64e: V544 = S[0x6]
0x64f: V545 = 0x1
0x651: V546 = 0x1
0x653: V547 = 0xa0
0x655: V548 = SHL 0xa0 0x1
0x656: V549 = SUB 0x10000000000000000000000000000000000000000 0x1
0x657: V550 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x658: V551 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V544
0x659: V552 = 0x1
0x65b: V553 = 0x1
0x65d: V554 = 0xa0
0x65f: V555 = SHL 0xa0 0x1
0x660: V556 = SUB 0x10000000000000000000000000000000000000000 0x1
0x662: V557 = AND V202 0xffffffffffffffffffffffffffffffffffffffff
0x663: V558 = OR V557 V551
0x665: S[0x6] = V558
0x666: V559 = 0x6bb
0x669: JUMP 0x6bb
---
Entry stack: [V9, 0x1c3, V198, V202, V205, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V9, 0x1c3, V198, V202, V205, 0x0]

================================

Block 0x66a
[0x66a:0x680]
---
Predecessors: [0x645]
Successors: [0x681, 0x6bb]
---
0x66a JUMPDEST
0x66b PUSH1 0x6
0x66d SLOAD
0x66e PUSH1 0x1
0x670 PUSH1 0x1
0x672 PUSH1 0xa0
0x674 SHL
0x675 SUB
0x676 DUP5
0x677 DUP2
0x678 AND
0x679 SWAP2
0x67a AND
0x67b EQ
0x67c ISZERO
0x67d PUSH2 0x6bb
0x680 JUMPI
---
0x66a: JUMPDEST 
0x66b: V560 = 0x6
0x66d: V561 = S[0x6]
0x66e: V562 = 0x1
0x670: V563 = 0x1
0x672: V564 = 0xa0
0x674: V565 = SHL 0xa0 0x1
0x675: V566 = SUB 0x10000000000000000000000000000000000000000 0x1
0x678: V567 = AND 0xffffffffffffffffffffffffffffffffffffffff V202
0x67a: V568 = AND V561 0xffffffffffffffffffffffffffffffffffffffff
0x67b: V569 = EQ V568 V567
0x67c: V570 = ISZERO V569
0x67d: V571 = 0x6bb
0x680: JUMPI 0x6bb V570
---
Entry stack: [V9, 0x1c3, V198, V202, V205, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V9, 0x1c3, V198, V202, V205, 0x0]

================================

Block 0x681
[0x681:0x6ba]
---
Predecessors: [0x66a]
Successors: []
---
0x681 PUSH1 0x40
0x683 DUP1
0x684 MLOAD
0x685 PUSH3 0x461bcd
0x689 PUSH1 0xe5
0x68b SHL
0x68c DUP2
0x68d MSTORE
0x68e PUSH1 0x20
0x690 PUSH1 0x4
0x692 DUP3
0x693 ADD
0x694 MSTORE
0x695 PUSH1 0xb
0x697 PUSH1 0x24
0x699 DUP3
0x69a ADD
0x69b MSTORE
0x69c PUSH11 0x1c1b19585cd9481dd85a5d
0x6a8 PUSH1 0xaa
0x6aa SHL
0x6ab PUSH1 0x44
0x6ad DUP3
0x6ae ADD
0x6af MSTORE
0x6b0 SWAP1
0x6b1 MLOAD
0x6b2 SWAP1
0x6b3 DUP2
0x6b4 SWAP1
0x6b5 SUB
0x6b6 PUSH1 0x64
0x6b8 ADD
0x6b9 SWAP1
0x6ba REVERT
---
0x681: V572 = 0x40
0x684: V573 = M[0x40]
0x685: V574 = 0x461bcd
0x689: V575 = 0xe5
0x68b: V576 = SHL 0xe5 0x461bcd
0x68d: M[V573] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x68e: V577 = 0x20
0x690: V578 = 0x4
0x693: V579 = ADD V573 0x4
0x694: M[V579] = 0x20
0x695: V580 = 0xb
0x697: V581 = 0x24
0x69a: V582 = ADD V573 0x24
0x69b: M[V582] = 0xb
0x69c: V583 = 0x1c1b19585cd9481dd85a5d
0x6a8: V584 = 0xaa
0x6aa: V585 = SHL 0xaa 0x1c1b19585cd9481dd85a5d
0x6ab: V586 = 0x44
0x6ae: V587 = ADD V573 0x44
0x6af: M[V587] = 0x706c656173652077616974000000000000000000000000000000000000000000
0x6b1: V588 = M[0x40]
0x6b5: V589 = SUB V573 V588
0x6b6: V590 = 0x64
0x6b8: V591 = ADD 0x64 V589
0x6ba: REVERT V588 V591
---
Entry stack: [V9, 0x1c3, V198, V202, V205, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x1c3, V198, V202, V205, 0x0]

================================

Block 0x6bb
[0x6bb:0x6e3]
---
Predecessors: [0x64b, 0x66a]
Successors: [0xc0d]
---
0x6bb JUMPDEST
0x6bc PUSH1 0x1
0x6be PUSH1 0x1
0x6c0 PUSH1 0xa0
0x6c2 SHL
0x6c3 SUB
0x6c4 DUP5
0x6c5 AND
0x6c6 PUSH1 0x0
0x6c8 SWAP1
0x6c9 DUP2
0x6ca MSTORE
0x6cb PUSH1 0x7
0x6cd PUSH1 0x20
0x6cf MSTORE
0x6d0 PUSH1 0x40
0x6d2 SWAP1
0x6d3 SHA3
0x6d4 SLOAD
0x6d5 PUSH2 0x6e4
0x6d8 SWAP1
0x6d9 DUP4
0x6da PUSH4 0xffffffff
0x6df PUSH2 0xc0d
0x6e2 AND
0x6e3 JUMP
---
0x6bb: JUMPDEST 
0x6bc: V592 = 0x1
0x6be: V593 = 0x1
0x6c0: V594 = 0xa0
0x6c2: V595 = SHL 0xa0 0x1
0x6c3: V596 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c5: V597 = AND V198 0xffffffffffffffffffffffffffffffffffffffff
0x6c6: V598 = 0x0
0x6ca: M[0x0] = V597
0x6cb: V599 = 0x7
0x6cd: V600 = 0x20
0x6cf: M[0x20] = 0x7
0x6d0: V601 = 0x40
0x6d3: V602 = SHA3 0x0 0x40
0x6d4: V603 = S[V602]
0x6d5: V604 = 0x6e4
0x6da: V605 = 0xffffffff
0x6df: V606 = 0xc0d
0x6e2: V607 = AND 0xc0d 0xffffffff
0x6e3: JUMP 0xc0d
---
Entry stack: [V9, 0x1c3, V198, V202, V205, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x6e4, V603, S1]
Exit stack: [V9, 0x1c3, V198, V202, V205, 0x0, 0x6e4, V603, V205]

================================

Block 0x6e4
[0x6e4:0x720]
---
Predecessors: [0xc1c]
Successors: [0xc0d]
---
0x6e4 JUMPDEST
0x6e5 PUSH1 0x1
0x6e7 PUSH1 0x1
0x6e9 PUSH1 0xa0
0x6eb SHL
0x6ec SUB
0x6ed DUP6
0x6ee AND
0x6ef PUSH1 0x0
0x6f1 SWAP1
0x6f2 DUP2
0x6f3 MSTORE
0x6f4 PUSH1 0x7
0x6f6 PUSH1 0x20
0x6f8 SWAP1
0x6f9 DUP2
0x6fa MSTORE
0x6fb PUSH1 0x40
0x6fd DUP1
0x6fe DUP4
0x6ff SHA3
0x700 SWAP4
0x701 SWAP1
0x702 SWAP4
0x703 SSTORE
0x704 PUSH1 0x8
0x706 DUP2
0x707 MSTORE
0x708 DUP3
0x709 DUP3
0x70a SHA3
0x70b CALLER
0x70c DUP4
0x70d MSTORE
0x70e SWAP1
0x70f MSTORE
0x710 SHA3
0x711 SLOAD
0x712 PUSH2 0x721
0x715 SWAP1
0x716 DUP4
0x717 PUSH4 0xffffffff
0x71c PUSH2 0xc0d
0x71f AND
0x720 JUMP
---
0x6e4: JUMPDEST 
0x6e5: V608 = 0x1
0x6e7: V609 = 0x1
0x6e9: V610 = 0xa0
0x6eb: V611 = SHL 0xa0 0x1
0x6ec: V612 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ee: V613 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x6ef: V614 = 0x0
0x6f3: M[0x0] = V613
0x6f4: V615 = 0x7
0x6f6: V616 = 0x20
0x6fa: M[0x20] = 0x7
0x6fb: V617 = 0x40
0x6ff: V618 = SHA3 0x0 0x40
0x703: S[V618] = V1056
0x704: V619 = 0x8
0x707: M[0x20] = 0x8
0x70a: V620 = SHA3 0x0 0x40
0x70b: V621 = CALLER
0x70d: M[0x0] = V621
0x70f: M[0x20] = V620
0x710: V622 = SHA3 0x0 0x40
0x711: V623 = S[V622]
0x712: V624 = 0x721
0x717: V625 = 0xffffffff
0x71c: V626 = 0xc0d
0x71f: V627 = AND 0xc0d 0xffffffff
0x720: JUMP 0xc0d
---
Entry stack: [V9, S5, S4, S3, S2, 0x0, V1056]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x721, V623, S2]
Exit stack: [V9, S5, S4, S3, S2, 0x0, 0x721, V623, S2]

================================

Block 0x721
[0x721:0x764]
---
Predecessors: [0xc1c]
Successors: [0xc22]
---
0x721 JUMPDEST
0x722 PUSH1 0x1
0x724 PUSH1 0x1
0x726 PUSH1 0xa0
0x728 SHL
0x729 SUB
0x72a DUP1
0x72b DUP7
0x72c AND
0x72d PUSH1 0x0
0x72f SWAP1
0x730 DUP2
0x731 MSTORE
0x732 PUSH1 0x8
0x734 PUSH1 0x20
0x736 SWAP1
0x737 DUP2
0x738 MSTORE
0x739 PUSH1 0x40
0x73b DUP1
0x73c DUP4
0x73d SHA3
0x73e CALLER
0x73f DUP5
0x740 MSTORE
0x741 DUP3
0x742 MSTORE
0x743 DUP1
0x744 DUP4
0x745 SHA3
0x746 SWAP5
0x747 SWAP1
0x748 SWAP5
0x749 SSTORE
0x74a SWAP2
0x74b DUP7
0x74c AND
0x74d DUP2
0x74e MSTORE
0x74f PUSH1 0x7
0x751 SWAP1
0x752 SWAP2
0x753 MSTORE
0x754 SHA3
0x755 SLOAD
0x756 PUSH2 0x765
0x759 SWAP1
0x75a DUP4
0x75b PUSH4 0xffffffff
0x760 PUSH2 0xc22
0x763 AND
0x764 JUMP
---
0x721: JUMPDEST 
0x722: V628 = 0x1
0x724: V629 = 0x1
0x726: V630 = 0xa0
0x728: V631 = SHL 0xa0 0x1
0x729: V632 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72c: V633 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x72d: V634 = 0x0
0x731: M[0x0] = V633
0x732: V635 = 0x8
0x734: V636 = 0x20
0x738: M[0x20] = 0x8
0x739: V637 = 0x40
0x73d: V638 = SHA3 0x0 0x40
0x73e: V639 = CALLER
0x740: M[0x0] = V639
0x742: M[0x20] = V638
0x745: V640 = SHA3 0x0 0x40
0x749: S[V640] = V1056
0x74c: V641 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x74e: M[0x0] = V641
0x74f: V642 = 0x7
0x753: M[0x20] = 0x7
0x754: V643 = SHA3 0x0 0x40
0x755: V644 = S[V643]
0x756: V645 = 0x765
0x75b: V646 = 0xffffffff
0x760: V647 = 0xc22
0x763: V648 = AND 0xc22 0xffffffff
0x764: JUMP 0xc22
---
Entry stack: [V9, S5, S4, S3, S2, 0x0, V1056]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x765, V644, S2]
Exit stack: [V9, S5, S4, S3, S2, 0x0, 0x765, V644, S2]

================================

Block 0x765
[0x765:0x7c5]
---
Predecessors: [0x5ca]
Successors: [0x1c3]
---
0x765 JUMPDEST
0x766 PUSH1 0x1
0x768 PUSH1 0x1
0x76a PUSH1 0xa0
0x76c SHL
0x76d SUB
0x76e DUP1
0x76f DUP6
0x770 AND
0x771 PUSH1 0x0
0x773 DUP2
0x774 DUP2
0x775 MSTORE
0x776 PUSH1 0x7
0x778 PUSH1 0x20
0x77a SWAP1
0x77b DUP2
0x77c MSTORE
0x77d PUSH1 0x40
0x77f SWAP2
0x780 DUP3
0x781 SWAP1
0x782 SHA3
0x783 SWAP5
0x784 SWAP1
0x785 SWAP5
0x786 SSTORE
0x787 DUP1
0x788 MLOAD
0x789 DUP7
0x78a DUP2
0x78b MSTORE
0x78c SWAP1
0x78d MLOAD
0x78e SWAP2
0x78f SWAP4
0x790 SWAP3
0x791 DUP9
0x792 AND
0x793 SWAP3
0x794 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x7b5 SWAP3
0x7b6 SWAP2
0x7b7 DUP3
0x7b8 SWAP1
0x7b9 SUB
0x7ba ADD
0x7bb SWAP1
0x7bc LOG3
0x7bd POP
0x7be PUSH1 0x1
0x7c0 SWAP4
0x7c1 SWAP3
0x7c2 POP
0x7c3 POP
0x7c4 POP
0x7c5 JUMP
---
0x765: JUMPDEST 
0x766: V649 = 0x1
0x768: V650 = 0x1
0x76a: V651 = 0xa0
0x76c: V652 = SHL 0xa0 0x1
0x76d: V653 = SUB 0x10000000000000000000000000000000000000000 0x1
0x770: V654 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x771: V655 = 0x0
0x775: M[0x0] = V654
0x776: V656 = 0x7
0x778: V657 = 0x20
0x77c: M[0x20] = 0x7
0x77d: V658 = 0x40
0x782: V659 = SHA3 0x0 0x40
0x786: S[V659] = S0
0x788: V660 = M[0x40]
0x78b: M[V660] = S2
0x78d: V661 = M[0x40]
0x792: V662 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x794: V663 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x7b9: V664 = SUB V660 V661
0x7ba: V665 = ADD V664 0x20
0x7bc: LOG V661 V665 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V662 V654
0x7be: V666 = 0x1
0x7c5: JUMP S5
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V9, 0x1]

================================

Block 0x7c6
[0x7c6:0x7ce]
---
Predecessors: [0x27e]
Successors: [0x287]
---
0x7c6 JUMPDEST
0x7c7 PUSH1 0x4
0x7c9 SLOAD
0x7ca PUSH1 0xff
0x7cc AND
0x7cd DUP2
0x7ce JUMP
---
0x7c6: JUMPDEST 
0x7c7: V667 = 0x4
0x7c9: V668 = S[0x4]
0x7ca: V669 = 0xff
0x7cc: V670 = AND 0xff V668
0x7ce: JUMP 0x287
---
Entry stack: [V9, 0x287]
Stack pops: 1
Stack additions: [S0, V670]
Exit stack: [V9, 0x287, V670]

================================

Block 0x7cf
[0x7cf:0x7e9]
---
Predecessors: [0x2c0]
Successors: [0x1ec]
---
0x7cf JUMPDEST
0x7d0 PUSH1 0x1
0x7d2 PUSH1 0x1
0x7d4 PUSH1 0xa0
0x7d6 SHL
0x7d7 SUB
0x7d8 AND
0x7d9 PUSH1 0x0
0x7db SWAP1
0x7dc DUP2
0x7dd MSTORE
0x7de PUSH1 0x7
0x7e0 PUSH1 0x20
0x7e2 MSTORE
0x7e3 PUSH1 0x40
0x7e5 SWAP1
0x7e6 SHA3
0x7e7 SLOAD
0x7e8 SWAP1
0x7e9 JUMP
---
0x7cf: JUMPDEST 
0x7d0: V671 = 0x1
0x7d2: V672 = 0x1
0x7d4: V673 = 0xa0
0x7d6: V674 = SHL 0xa0 0x1
0x7d7: V675 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d8: V676 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x7d9: V677 = 0x0
0x7dd: M[0x0] = V676
0x7de: V678 = 0x7
0x7e0: V679 = 0x20
0x7e2: M[0x20] = 0x7
0x7e3: V680 = 0x40
0x7e6: V681 = SHA3 0x0 0x40
0x7e7: V682 = S[V681]
0x7e9: JUMP 0x1ec
---
Entry stack: [V9, 0x1ec, V240]
Stack pops: 2
Stack additions: [V682]
Exit stack: [V9, V682]

================================

Block 0x7ea
[0x7ea:0x7fc]
---
Predecessors: [0x2dc]
Successors: [0x7fd, 0x801]
---
0x7ea JUMPDEST
0x7eb PUSH1 0x1
0x7ed SLOAD
0x7ee PUSH1 0x1
0x7f0 PUSH1 0x1
0x7f2 PUSH1 0xa0
0x7f4 SHL
0x7f5 SUB
0x7f6 AND
0x7f7 CALLER
0x7f8 EQ
0x7f9 PUSH2 0x801
0x7fc JUMPI
---
0x7ea: JUMPDEST 
0x7eb: V683 = 0x1
0x7ed: V684 = S[0x1]
0x7ee: V685 = 0x1
0x7f0: V686 = 0x1
0x7f2: V687 = 0xa0
0x7f4: V688 = SHL 0xa0 0x1
0x7f5: V689 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7f6: V690 = AND 0xffffffffffffffffffffffffffffffffffffffff V684
0x7f7: V691 = CALLER
0x7f8: V692 = EQ V691 V690
0x7f9: V693 = 0x801
0x7fc: JUMPI 0x801 V692
---
Entry stack: [V9, 0xfe]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xfe]

================================

Block 0x7fd
[0x7fd:0x800]
---
Predecessors: [0x7ea]
Successors: []
---
0x7fd PUSH1 0x0
0x7ff DUP1
0x800 REVERT
---
0x7fd: V694 = 0x0
0x800: REVERT 0x0 0x0
---
Entry stack: [V9, 0xfe]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xfe]

================================

Block 0x801
[0x801:0x864]
---
Predecessors: [0x7ea]
Successors: [0xfe]
---
0x801 JUMPDEST
0x802 PUSH1 0x1
0x804 SLOAD
0x805 PUSH1 0x0
0x807 DUP1
0x808 SLOAD
0x809 PUSH1 0x40
0x80b MLOAD
0x80c PUSH1 0x1
0x80e PUSH1 0x1
0x810 PUSH1 0xa0
0x812 SHL
0x813 SUB
0x814 SWAP4
0x815 DUP5
0x816 AND
0x817 SWAP4
0x818 SWAP1
0x819 SWAP2
0x81a AND
0x81b SWAP2
0x81c PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x83d SWAP2
0x83e LOG3
0x83f PUSH1 0x1
0x841 DUP1
0x842 SLOAD
0x843 PUSH1 0x0
0x845 DUP1
0x846 SLOAD
0x847 PUSH1 0x1
0x849 PUSH1 0x1
0x84b PUSH1 0xa0
0x84d SHL
0x84e SUB
0x84f NOT
0x850 SWAP1
0x851 DUP2
0x852 AND
0x853 PUSH1 0x1
0x855 PUSH1 0x1
0x857 PUSH1 0xa0
0x859 SHL
0x85a SUB
0x85b DUP5
0x85c AND
0x85d OR
0x85e SWAP1
0x85f SWAP2
0x860 SSTORE
0x861 AND
0x862 SWAP1
0x863 SSTORE
0x864 JUMP
---
0x801: JUMPDEST 
0x802: V695 = 0x1
0x804: V696 = S[0x1]
0x805: V697 = 0x0
0x808: V698 = S[0x0]
0x809: V699 = 0x40
0x80b: V700 = M[0x40]
0x80c: V701 = 0x1
0x80e: V702 = 0x1
0x810: V703 = 0xa0
0x812: V704 = SHL 0xa0 0x1
0x813: V705 = SUB 0x10000000000000000000000000000000000000000 0x1
0x816: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff V696
0x81a: V707 = AND V698 0xffffffffffffffffffffffffffffffffffffffff
0x81c: V708 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0x83e: LOG V700 0x0 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V707 V706
0x83f: V709 = 0x1
0x842: V710 = S[0x1]
0x843: V711 = 0x0
0x846: V712 = S[0x0]
0x847: V713 = 0x1
0x849: V714 = 0x1
0x84b: V715 = 0xa0
0x84d: V716 = SHL 0xa0 0x1
0x84e: V717 = SUB 0x10000000000000000000000000000000000000000 0x1
0x84f: V718 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x852: V719 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V712
0x853: V720 = 0x1
0x855: V721 = 0x1
0x857: V722 = 0xa0
0x859: V723 = SHL 0xa0 0x1
0x85a: V724 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85c: V725 = AND V710 0xffffffffffffffffffffffffffffffffffffffff
0x85d: V726 = OR V725 V719
0x860: S[0x0] = V726
0x861: V727 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V710
0x863: S[0x1] = V727
0x864: JUMP 0xfe
---
Entry stack: [V9, 0xfe]
Stack pops: 1
Stack additions: []
Exit stack: [V9]

================================

Block 0x865
[0x865:0x877]
---
Predecessors: [0x308]
Successors: [0x878, 0x87c]
---
0x865 JUMPDEST
0x866 PUSH1 0x0
0x868 SLOAD
0x869 PUSH1 0x1
0x86b PUSH1 0x1
0x86d PUSH1 0xa0
0x86f SHL
0x870 SUB
0x871 AND
0x872 CALLER
0x873 EQ
0x874 PUSH2 0x87c
0x877 JUMPI
---
0x865: JUMPDEST 
0x866: V728 = 0x0
0x868: V729 = S[0x0]
0x869: V730 = 0x1
0x86b: V731 = 0x1
0x86d: V732 = 0xa0
0x86f: V733 = SHL 0xa0 0x1
0x870: V734 = SUB 0x10000000000000000000000000000000000000000 0x1
0x871: V735 = AND 0xffffffffffffffffffffffffffffffffffffffff V729
0x872: V736 = CALLER
0x873: V737 = EQ V736 V735
0x874: V738 = 0x87c
0x877: JUMPI 0x87c V737
---
Entry stack: [V9, 0xfe, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xfe, V267]

================================

Block 0x878
[0x878:0x87b]
---
Predecessors: [0x865]
Successors: []
---
0x878 PUSH1 0x0
0x87a DUP1
0x87b REVERT
---
0x878: V739 = 0x0
0x87b: REVERT 0x0 0x0
---
Entry stack: [V9, 0xfe, V267]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xfe, V267]

================================

Block 0x87c
[0x87c:0x89d]
---
Predecessors: [0x865]
Successors: [0xfe]
---
0x87c JUMPDEST
0x87d PUSH1 0x6
0x87f DUP1
0x880 SLOAD
0x881 PUSH1 0x1
0x883 PUSH1 0x1
0x885 PUSH1 0xa0
0x887 SHL
0x888 SUB
0x889 NOT
0x88a AND
0x88b PUSH1 0x1
0x88d PUSH1 0x1
0x88f PUSH1 0xa0
0x891 SHL
0x892 SUB
0x893 SWAP3
0x894 SWAP1
0x895 SWAP3
0x896 AND
0x897 SWAP2
0x898 SWAP1
0x899 SWAP2
0x89a OR
0x89b SWAP1
0x89c SSTORE
0x89d JUMP
---
0x87c: JUMPDEST 
0x87d: V740 = 0x6
0x880: V741 = S[0x6]
0x881: V742 = 0x1
0x883: V743 = 0x1
0x885: V744 = 0xa0
0x887: V745 = SHL 0xa0 0x1
0x888: V746 = SUB 0x10000000000000000000000000000000000000000 0x1
0x889: V747 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x88a: V748 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V741
0x88b: V749 = 0x1
0x88d: V750 = 0x1
0x88f: V751 = 0xa0
0x891: V752 = SHL 0xa0 0x1
0x892: V753 = SUB 0x10000000000000000000000000000000000000000 0x1
0x896: V754 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x89a: V755 = OR V754 V748
0x89c: S[0x6] = V755
0x89d: JUMP 0xfe
---
Entry stack: [V9, 0xfe, V267]
Stack pops: 2
Stack additions: []
Exit stack: [V9]

================================

Block 0x89e
[0x89e:0x8ac]
---
Predecessors: [0x324]
Successors: [0x213]
---
0x89e JUMPDEST
0x89f PUSH1 0x0
0x8a1 SLOAD
0x8a2 PUSH1 0x1
0x8a4 PUSH1 0x1
0x8a6 PUSH1 0xa0
0x8a8 SHL
0x8a9 SUB
0x8aa AND
0x8ab DUP2
0x8ac JUMP
---
0x89e: JUMPDEST 
0x89f: V756 = 0x0
0x8a1: V757 = S[0x0]
0x8a2: V758 = 0x1
0x8a4: V759 = 0x1
0x8a6: V760 = 0xa0
0x8a8: V761 = SHL 0xa0 0x1
0x8a9: V762 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8aa: V763 = AND 0xffffffffffffffffffffffffffffffffffffffff V757
0x8ac: JUMP 0x213
---
Entry stack: [V9, 0x213]
Stack pops: 1
Stack additions: [S0, V763]
Exit stack: [V9, 0x213, V763]

================================

Block 0x8ad
[0x8ad:0x8e9]
---
Predecessors: [0x339]
Successors: [0x561, 0x8ea]
---
0x8ad JUMPDEST
0x8ae PUSH1 0x2
0x8b0 DUP1
0x8b1 SLOAD
0x8b2 PUSH1 0x40
0x8b4 DUP1
0x8b5 MLOAD
0x8b6 PUSH1 0x20
0x8b8 PUSH1 0x1
0x8ba DUP5
0x8bb AND
0x8bc ISZERO
0x8bd PUSH2 0x100
0x8c0 MUL
0x8c1 PUSH1 0x0
0x8c3 NOT
0x8c4 ADD
0x8c5 SWAP1
0x8c6 SWAP4
0x8c7 AND
0x8c8 DUP5
0x8c9 SWAP1
0x8ca DIV
0x8cb PUSH1 0x1f
0x8cd DUP2
0x8ce ADD
0x8cf DUP5
0x8d0 SWAP1
0x8d1 DIV
0x8d2 DUP5
0x8d3 MUL
0x8d4 DUP3
0x8d5 ADD
0x8d6 DUP5
0x8d7 ADD
0x8d8 SWAP1
0x8d9 SWAP3
0x8da MSTORE
0x8db DUP2
0x8dc DUP2
0x8dd MSTORE
0x8de SWAP3
0x8df SWAP2
0x8e0 DUP4
0x8e1 ADD
0x8e2 DUP3
0x8e3 DUP3
0x8e4 DUP1
0x8e5 ISZERO
0x8e6 PUSH2 0x561
0x8e9 JUMPI
---
0x8ad: JUMPDEST 
0x8ae: V764 = 0x2
0x8b1: V765 = S[0x2]
0x8b2: V766 = 0x40
0x8b5: V767 = M[0x40]
0x8b6: V768 = 0x20
0x8b8: V769 = 0x1
0x8bb: V770 = AND V765 0x1
0x8bc: V771 = ISZERO V770
0x8bd: V772 = 0x100
0x8c0: V773 = MUL 0x100 V771
0x8c1: V774 = 0x0
0x8c3: V775 = NOT 0x0
0x8c4: V776 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V773
0x8c7: V777 = AND V765 V776
0x8ca: V778 = DIV V777 0x2
0x8cb: V779 = 0x1f
0x8ce: V780 = ADD V778 0x1f
0x8d1: V781 = DIV V780 0x20
0x8d3: V782 = MUL 0x20 V781
0x8d5: V783 = ADD V767 V782
0x8d7: V784 = ADD 0x20 V783
0x8da: M[0x40] = V784
0x8dd: M[V767] = V778
0x8e1: V785 = ADD V767 0x20
0x8e5: V786 = ISZERO V778
0x8e6: V787 = 0x561
0x8e9: JUMPI 0x561 V786
---
Entry stack: [V9, 0x115]
Stack pops: 0
Stack additions: [V767, 0x2, V778, V785, 0x2, V778]
Exit stack: [V9, 0x115, V767, 0x2, V778, V785, 0x2, V778]

================================

Block 0x8ea
[0x8ea:0x8f1]
---
Predecessors: [0x8ad]
Successors: [0x536, 0x8f2]
---
0x8ea DUP1
0x8eb PUSH1 0x1f
0x8ed LT
0x8ee PUSH2 0x536
0x8f1 JUMPI
---
0x8eb: V788 = 0x1f
0x8ed: V789 = LT 0x1f V778
0x8ee: V790 = 0x536
0x8f1: JUMPI 0x536 V789
---
Entry stack: [V9, 0x115, V767, 0x2, V778, V785, 0x2, V778]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V9, 0x115, V767, 0x2, V778, V785, 0x2, V778]

================================

Block 0x8f2
[0x8f2:0x904]
---
Predecessors: [0x8ea]
Successors: [0x561]
---
0x8f2 PUSH2 0x100
0x8f5 DUP1
0x8f6 DUP4
0x8f7 SLOAD
0x8f8 DIV
0x8f9 MUL
0x8fa DUP4
0x8fb MSTORE
0x8fc SWAP2
0x8fd PUSH1 0x20
0x8ff ADD
0x900 SWAP2
0x901 PUSH2 0x561
0x904 JUMP
---
0x8f2: V791 = 0x100
0x8f7: V792 = S[0x2]
0x8f8: V793 = DIV V792 0x100
0x8f9: V794 = MUL V793 0x100
0x8fb: M[V785] = V794
0x8fd: V795 = 0x20
0x8ff: V796 = ADD 0x20 V785
0x901: V797 = 0x561
0x904: JUMP 0x561
---
Entry stack: [V9, 0x115, V767, 0x2, V778, V785, 0x2, V778]
Stack pops: 3
Stack additions: [V796, S1, S0]
Exit stack: [V9, 0x115, V767, 0x2, V778, V796, 0x2, V778]

================================

Block 0x905
[0x905:0x91e]
---
Predecessors: [0x365]
Successors: [0x91f, 0x959]
---
0x905 JUMPDEST
0x906 PUSH1 0x6
0x908 SLOAD
0x909 PUSH1 0x0
0x90b SWAP1
0x90c PUSH1 0x1
0x90e PUSH1 0x1
0x910 PUSH1 0xa0
0x912 SHL
0x913 SUB
0x914 DUP5
0x915 DUP2
0x916 AND
0x917 SWAP2
0x918 AND
0x919 EQ
0x91a ISZERO
0x91b PUSH2 0x959
0x91e JUMPI
---
0x905: JUMPDEST 
0x906: V798 = 0x6
0x908: V799 = S[0x6]
0x909: V800 = 0x0
0x90c: V801 = 0x1
0x90e: V802 = 0x1
0x910: V803 = 0xa0
0x912: V804 = SHL 0xa0 0x1
0x913: V805 = SUB 0x10000000000000000000000000000000000000000 0x1
0x916: V806 = AND 0xffffffffffffffffffffffffffffffffffffffff V300
0x918: V807 = AND V799 0xffffffffffffffffffffffffffffffffffffffff
0x919: V808 = EQ V807 V806
0x91a: V809 = ISZERO V808
0x91b: V810 = 0x959
0x91e: JUMPI 0x959 V809
---
Entry stack: [V9, 0x1c3, V300, V303]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V9, 0x1c3, V300, V303, 0x0]

================================

Block 0x91f
[0x91f:0x958]
---
Predecessors: [0x905]
Successors: []
---
0x91f PUSH1 0x40
0x921 DUP1
0x922 MLOAD
0x923 PUSH3 0x461bcd
0x927 PUSH1 0xe5
0x929 SHL
0x92a DUP2
0x92b MSTORE
0x92c PUSH1 0x20
0x92e PUSH1 0x4
0x930 DUP3
0x931 ADD
0x932 MSTORE
0x933 PUSH1 0xb
0x935 PUSH1 0x24
0x937 DUP3
0x938 ADD
0x939 MSTORE
0x93a PUSH11 0x1c1b19585cd9481dd85a5d
0x946 PUSH1 0xaa
0x948 SHL
0x949 PUSH1 0x44
0x94b DUP3
0x94c ADD
0x94d MSTORE
0x94e SWAP1
0x94f MLOAD
0x950 SWAP1
0x951 DUP2
0x952 SWAP1
0x953 SUB
0x954 PUSH1 0x64
0x956 ADD
0x957 SWAP1
0x958 REVERT
---
0x91f: V811 = 0x40
0x922: V812 = M[0x40]
0x923: V813 = 0x461bcd
0x927: V814 = 0xe5
0x929: V815 = SHL 0xe5 0x461bcd
0x92b: M[V812] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x92c: V816 = 0x20
0x92e: V817 = 0x4
0x931: V818 = ADD V812 0x4
0x932: M[V818] = 0x20
0x933: V819 = 0xb
0x935: V820 = 0x24
0x938: V821 = ADD V812 0x24
0x939: M[V821] = 0xb
0x93a: V822 = 0x1c1b19585cd9481dd85a5d
0x946: V823 = 0xaa
0x948: V824 = SHL 0xaa 0x1c1b19585cd9481dd85a5d
0x949: V825 = 0x44
0x94c: V826 = ADD V812 0x44
0x94d: M[V826] = 0x706c656173652077616974000000000000000000000000000000000000000000
0x94f: V827 = M[0x40]
0x953: V828 = SUB V812 V827
0x954: V829 = 0x64
0x956: V830 = ADD 0x64 V828
0x958: REVERT V827 V830
---
Entry stack: [V9, 0x1c3, V300, V303, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x1c3, V300, V303, 0x0]

================================

Block 0x959
[0x959:0x978]
---
Predecessors: [0x905]
Successors: [0xc0d]
---
0x959 JUMPDEST
0x95a CALLER
0x95b PUSH1 0x0
0x95d SWAP1
0x95e DUP2
0x95f MSTORE
0x960 PUSH1 0x7
0x962 PUSH1 0x20
0x964 MSTORE
0x965 PUSH1 0x40
0x967 SWAP1
0x968 SHA3
0x969 SLOAD
0x96a PUSH2 0x979
0x96d SWAP1
0x96e DUP4
0x96f PUSH4 0xffffffff
0x974 PUSH2 0xc0d
0x977 AND
0x978 JUMP
---
0x959: JUMPDEST 
0x95a: V831 = CALLER
0x95b: V832 = 0x0
0x95f: M[0x0] = V831
0x960: V833 = 0x7
0x962: V834 = 0x20
0x964: M[0x20] = 0x7
0x965: V835 = 0x40
0x968: V836 = SHA3 0x0 0x40
0x969: V837 = S[V836]
0x96a: V838 = 0x979
0x96f: V839 = 0xffffffff
0x974: V840 = 0xc0d
0x977: V841 = AND 0xc0d 0xffffffff
0x978: JUMP 0xc0d
---
Entry stack: [V9, 0x1c3, V300, V303, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x979, V837, S1]
Exit stack: [V9, 0x1c3, V300, V303, 0x0, 0x979, V837, V303]

================================

Block 0x979
[0x979:0x9aa]
---
Predecessors: [0xc1c]
Successors: [0xc22]
---
0x979 JUMPDEST
0x97a CALLER
0x97b PUSH1 0x0
0x97d SWAP1
0x97e DUP2
0x97f MSTORE
0x980 PUSH1 0x7
0x982 PUSH1 0x20
0x984 MSTORE
0x985 PUSH1 0x40
0x987 DUP1
0x988 DUP3
0x989 SHA3
0x98a SWAP3
0x98b SWAP1
0x98c SWAP3
0x98d SSTORE
0x98e PUSH1 0x1
0x990 PUSH1 0x1
0x992 PUSH1 0xa0
0x994 SHL
0x995 SUB
0x996 DUP6
0x997 AND
0x998 DUP2
0x999 MSTORE
0x99a SHA3
0x99b SLOAD
0x99c PUSH2 0x9ab
0x99f SWAP1
0x9a0 DUP4
0x9a1 PUSH4 0xffffffff
0x9a6 PUSH2 0xc22
0x9a9 AND
0x9aa JUMP
---
0x979: JUMPDEST 
0x97a: V842 = CALLER
0x97b: V843 = 0x0
0x97f: M[0x0] = V842
0x980: V844 = 0x7
0x982: V845 = 0x20
0x984: M[0x20] = 0x7
0x985: V846 = 0x40
0x989: V847 = SHA3 0x0 0x40
0x98d: S[V847] = V1056
0x98e: V848 = 0x1
0x990: V849 = 0x1
0x992: V850 = 0xa0
0x994: V851 = SHL 0xa0 0x1
0x995: V852 = SUB 0x10000000000000000000000000000000000000000 0x1
0x997: V853 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x999: M[0x0] = V853
0x99a: V854 = SHA3 0x0 0x40
0x99b: V855 = S[V854]
0x99c: V856 = 0x9ab
0x9a1: V857 = 0xffffffff
0x9a6: V858 = 0xc22
0x9a9: V859 = AND 0xc22 0xffffffff
0x9aa: JUMP 0xc22
---
Entry stack: [V9, S5, S4, S3, S2, 0x0, V1056]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x9ab, V855, S2]
Exit stack: [V9, S5, S4, S3, S2, 0x0, 0x9ab, V855, S2]

================================

Block 0x9ab
[0x9ab:0xa08]
---
Predecessors: [0x5ca]
Successors: [0x1c3]
---
0x9ab JUMPDEST
0x9ac PUSH1 0x1
0x9ae PUSH1 0x1
0x9b0 PUSH1 0xa0
0x9b2 SHL
0x9b3 SUB
0x9b4 DUP5
0x9b5 AND
0x9b6 PUSH1 0x0
0x9b8 DUP2
0x9b9 DUP2
0x9ba MSTORE
0x9bb PUSH1 0x7
0x9bd PUSH1 0x20
0x9bf SWAP1
0x9c0 DUP2
0x9c1 MSTORE
0x9c2 PUSH1 0x40
0x9c4 SWAP2
0x9c5 DUP3
0x9c6 SWAP1
0x9c7 SHA3
0x9c8 SWAP4
0x9c9 SWAP1
0x9ca SWAP4
0x9cb SSTORE
0x9cc DUP1
0x9cd MLOAD
0x9ce DUP6
0x9cf DUP2
0x9d0 MSTORE
0x9d1 SWAP1
0x9d2 MLOAD
0x9d3 SWAP2
0x9d4 SWAP3
0x9d5 CALLER
0x9d6 SWAP3
0x9d7 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x9f8 SWAP3
0x9f9 DUP2
0x9fa SWAP1
0x9fb SUB
0x9fc SWAP1
0x9fd SWAP2
0x9fe ADD
0x9ff SWAP1
0xa00 LOG3
0xa01 POP
0xa02 PUSH1 0x1
0xa04 SWAP3
0xa05 SWAP2
0xa06 POP
0xa07 POP
0xa08 JUMP
---
0x9ab: JUMPDEST 
0x9ac: V860 = 0x1
0x9ae: V861 = 0x1
0x9b0: V862 = 0xa0
0x9b2: V863 = SHL 0xa0 0x1
0x9b3: V864 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b5: V865 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0x9b6: V866 = 0x0
0x9ba: M[0x0] = V865
0x9bb: V867 = 0x7
0x9bd: V868 = 0x20
0x9c1: M[0x20] = 0x7
0x9c2: V869 = 0x40
0x9c7: V870 = SHA3 0x0 0x40
0x9cb: S[V870] = S0
0x9cd: V871 = M[0x40]
0x9d0: M[V871] = S2
0x9d2: V872 = M[0x40]
0x9d5: V873 = CALLER
0x9d7: V874 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x9fb: V875 = SUB V871 V872
0x9fe: V876 = ADD 0x20 V875
0xa00: LOG V872 V876 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V873 V865
0xa02: V877 = 0x1
0xa08: JUMP S4
---
Entry stack: [V9, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V9, S5, 0x1]

================================

Block 0xa09
[0xa09:0xa1b]
---
Predecessors: [0x387]
Successors: [0xa1c, 0xa20]
---
0xa09 JUMPDEST
0xa0a PUSH1 0x0
0xa0c SLOAD
0xa0d PUSH1 0x1
0xa0f PUSH1 0x1
0xa11 PUSH1 0xa0
0xa13 SHL
0xa14 SUB
0xa15 AND
0xa16 CALLER
0xa17 EQ
0xa18 PUSH2 0xa20
0xa1b JUMPI
---
0xa09: JUMPDEST 
0xa0a: V878 = 0x0
0xa0c: V879 = S[0x0]
0xa0d: V880 = 0x1
0xa0f: V881 = 0x1
0xa11: V882 = 0xa0
0xa13: V883 = SHL 0xa0 0x1
0xa14: V884 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa15: V885 = AND 0xffffffffffffffffffffffffffffffffffffffff V879
0xa16: V886 = CALLER
0xa17: V887 = EQ V886 V885
0xa18: V888 = 0xa20
0xa1b: JUMPI 0xa20 V887
---
Entry stack: [V9, 0xfe]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xfe]

================================

Block 0xa1c
[0xa1c:0xa1f]
---
Predecessors: [0xa09]
Successors: []
---
0xa1c PUSH1 0x0
0xa1e DUP1
0xa1f REVERT
---
0xa1c: V889 = 0x0
0xa1f: REVERT 0x0 0x0
---
Entry stack: [V9, 0xfe]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xfe]

================================

Block 0xa20
[0xa20:0xa28]
---
Predecessors: [0xa09]
Successors: []
---
0xa20 JUMPDEST
0xa21 PUSH1 0x40
0xa23 MLOAD
0xa24 CALLER
0xa25 SWAP1
0xa26 DUP2
0xa27 SWAP1
0xa28 MISSING 0x47
---
0xa20: JUMPDEST 
0xa21: V890 = 0x40
0xa23: V891 = M[0x40]
0xa24: V892 = CALLER
0xa28: MISSING 0x47
---
Entry stack: [V9, 0xfe]
Stack pops: 0
Stack additions: [V892, V892, V891]
Exit stack: [V9, 0xfe, V892, V892, V891]

================================

Block 0xa29
[0xa29:0xa44]
---
Predecessors: []
Successors: [0xa45, 0xa4e]
---
0xa29 DUP1
0xa2a ISZERO
0xa2b PUSH2 0x8fc
0xa2e MUL
0xa2f SWAP2
0xa30 PUSH1 0x0
0xa32 DUP2
0xa33 DUP2
0xa34 DUP2
0xa35 DUP6
0xa36 DUP9
0xa37 DUP9
0xa38 CALL
0xa39 SWAP4
0xa3a POP
0xa3b POP
0xa3c POP
0xa3d POP
0xa3e ISZERO
0xa3f DUP1
0xa40 ISZERO
0xa41 PUSH2 0xa4e
0xa44 JUMPI
---
0xa2a: V893 = ISZERO S0
0xa2b: V894 = 0x8fc
0xa2e: V895 = MUL 0x8fc V893
0xa30: V896 = 0x0
0xa38: V897 = CALL V895 S2 S0 S1 0x0 S1 0x0
0xa3e: V898 = ISZERO V897
0xa40: V899 = ISZERO V898
0xa41: V900 = 0xa4e
0xa44: JUMPI 0xa4e V899
---
Entry stack: []
Stack pops: 3
Stack additions: [V898]
Exit stack: [V898]

================================

Block 0xa45
[0xa45:0xa4d]
---
Predecessors: [0xa29]
Successors: []
---
0xa45 RETURNDATASIZE
0xa46 PUSH1 0x0
0xa48 DUP1
0xa49 RETURNDATACOPY
0xa4a RETURNDATASIZE
0xa4b PUSH1 0x0
0xa4d REVERT
---
0xa45: V901 = RETURNDATASIZE
0xa46: V902 = 0x0
0xa49: RETURNDATACOPY 0x0 0x0 V901
0xa4a: V903 = RETURNDATASIZE
0xa4b: V904 = 0x0
0xa4d: REVERT 0x0 V903
---
Entry stack: [V898]
Stack pops: 0
Stack additions: []
Exit stack: [V898]

================================

Block 0xa4e
[0xa4e:0xa51]
---
Predecessors: [0xa29]
Successors: []
Has unresolved jump.
---
0xa4e JUMPDEST
0xa4f POP
0xa50 POP
0xa51 JUMP
---
0xa4e: JUMPDEST 
0xa51: JUMP S2
---
Entry stack: [V898]
Stack pops: 3
Stack additions: []
Exit stack: []

================================

Block 0xa52
[0xa52:0xb10]
---
Predecessors: [0x417]
Successors: [0xb11]
---
0xa52 JUMPDEST
0xa53 CALLER
0xa54 PUSH1 0x0
0xa56 DUP2
0xa57 DUP2
0xa58 MSTORE
0xa59 PUSH1 0x8
0xa5b PUSH1 0x20
0xa5d SWAP1
0xa5e DUP2
0xa5f MSTORE
0xa60 PUSH1 0x40
0xa62 DUP1
0xa63 DUP4
0xa64 SHA3
0xa65 PUSH1 0x1
0xa67 PUSH1 0x1
0xa69 PUSH1 0xa0
0xa6b SHL
0xa6c SUB
0xa6d DUP9
0xa6e AND
0xa6f DUP1
0xa70 DUP6
0xa71 MSTORE
0xa72 SWAP1
0xa73 DUP4
0xa74 MSTORE
0xa75 DUP2
0xa76 DUP5
0xa77 SHA3
0xa78 DUP8
0xa79 SWAP1
0xa7a SSTORE
0xa7b DUP2
0xa7c MLOAD
0xa7d DUP8
0xa7e DUP2
0xa7f MSTORE
0xa80 SWAP2
0xa81 MLOAD
0xa82 SWAP4
0xa83 SWAP5
0xa84 SWAP1
0xa85 SWAP4
0xa86 SWAP1
0xa87 SWAP3
0xa88 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xaa9 SWAP3
0xaaa DUP3
0xaab SWAP1
0xaac SUB
0xaad ADD
0xaae SWAP1
0xaaf LOG3
0xab0 PUSH1 0x40
0xab2 MLOAD
0xab3 PUSH4 0x8f4ffcb1
0xab8 PUSH1 0xe0
0xaba SHL
0xabb DUP2
0xabc MSTORE
0xabd CALLER
0xabe PUSH1 0x4
0xac0 DUP3
0xac1 ADD
0xac2 DUP2
0xac3 DUP2
0xac4 MSTORE
0xac5 PUSH1 0x24
0xac7 DUP4
0xac8 ADD
0xac9 DUP7
0xaca SWAP1
0xacb MSTORE
0xacc ADDRESS
0xacd PUSH1 0x44
0xacf DUP5
0xad0 ADD
0xad1 DUP2
0xad2 SWAP1
0xad3 MSTORE
0xad4 PUSH1 0x80
0xad6 PUSH1 0x64
0xad8 DUP6
0xad9 ADD
0xada SWAP1
0xadb DUP2
0xadc MSTORE
0xadd DUP7
0xade MLOAD
0xadf PUSH1 0x84
0xae1 DUP7
0xae2 ADD
0xae3 MSTORE
0xae4 DUP7
0xae5 MLOAD
0xae6 PUSH1 0x1
0xae8 PUSH1 0x1
0xaea PUSH1 0xa0
0xaec SHL
0xaed SUB
0xaee DUP11
0xaef AND
0xaf0 SWAP6
0xaf1 PUSH4 0x8f4ffcb1
0xaf6 SWAP6
0xaf7 SWAP5
0xaf8 DUP11
0xaf9 SWAP5
0xafa SWAP4
0xafb DUP11
0xafc SWAP4
0xafd SWAP2
0xafe SWAP3
0xaff SWAP1
0xb00 SWAP2
0xb01 PUSH1 0xa4
0xb03 SWAP1
0xb04 SWAP2
0xb05 ADD
0xb06 SWAP1
0xb07 PUSH1 0x20
0xb09 DUP6
0xb0a ADD
0xb0b SWAP1
0xb0c DUP1
0xb0d DUP4
0xb0e DUP4
0xb0f PUSH1 0x0
---
0xa52: JUMPDEST 
0xa53: V905 = CALLER
0xa54: V906 = 0x0
0xa58: M[0x0] = V905
0xa59: V907 = 0x8
0xa5b: V908 = 0x20
0xa5f: M[0x20] = 0x8
0xa60: V909 = 0x40
0xa64: V910 = SHA3 0x0 0x40
0xa65: V911 = 0x1
0xa67: V912 = 0x1
0xa69: V913 = 0xa0
0xa6b: V914 = SHL 0xa0 0x1
0xa6c: V915 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa6e: V916 = AND V330 0xffffffffffffffffffffffffffffffffffffffff
0xa71: M[0x0] = V916
0xa74: M[0x20] = V910
0xa77: V917 = SHA3 0x0 0x40
0xa7a: S[V917] = V333
0xa7c: V918 = M[0x40]
0xa7f: M[V918] = V333
0xa81: V919 = M[0x40]
0xa88: V920 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xaac: V921 = SUB V918 V919
0xaad: V922 = ADD V921 0x20
0xaaf: LOG V919 V922 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V905 V916
0xab0: V923 = 0x40
0xab2: V924 = M[0x40]
0xab3: V925 = 0x8f4ffcb1
0xab8: V926 = 0xe0
0xaba: V927 = SHL 0xe0 0x8f4ffcb1
0xabc: M[V924] = 0x8f4ffcb100000000000000000000000000000000000000000000000000000000
0xabd: V928 = CALLER
0xabe: V929 = 0x4
0xac1: V930 = ADD V924 0x4
0xac4: M[V930] = V928
0xac5: V931 = 0x24
0xac8: V932 = ADD V924 0x24
0xacb: M[V932] = V333
0xacc: V933 = ADDRESS
0xacd: V934 = 0x44
0xad0: V935 = ADD V924 0x44
0xad3: M[V935] = V933
0xad4: V936 = 0x80
0xad6: V937 = 0x64
0xad9: V938 = ADD V924 0x64
0xadc: M[V938] = 0x80
0xade: V939 = M[V373]
0xadf: V940 = 0x84
0xae2: V941 = ADD V924 0x84
0xae3: M[V941] = V939
0xae5: V942 = M[V373]
0xae6: V943 = 0x1
0xae8: V944 = 0x1
0xaea: V945 = 0xa0
0xaec: V946 = SHL 0xa0 0x1
0xaed: V947 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaef: V948 = AND V330 0xffffffffffffffffffffffffffffffffffffffff
0xaf1: V949 = 0x8f4ffcb1
0xb01: V950 = 0xa4
0xb05: V951 = ADD V924 0xa4
0xb07: V952 = 0x20
0xb0a: V953 = ADD V373 0x20
0xb0f: V954 = 0x0
---
Entry stack: [V9, 0x1c3, V330, V333, V373]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V948, 0x8f4ffcb1, V928, S1, V933, S0, V930, V938, V951, V953, V942, V942, V951, V953, 0x0]
Exit stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, V928, V333, V933, V373, V930, V938, V951, V953, V942, V942, V951, V953, 0x0]

================================

Block 0xb11
[0xb11:0xb19]
---
Predecessors: [0xa52, 0xb1a]
Successors: [0xb1a, 0xb29]
---
0xb11 JUMPDEST
0xb12 DUP4
0xb13 DUP2
0xb14 LT
0xb15 ISZERO
0xb16 PUSH2 0xb29
0xb19 JUMPI
---
0xb11: JUMPDEST 
0xb14: V955 = LT S0 V942
0xb15: V956 = ISZERO V955
0xb16: V957 = 0xb29
0xb19: JUMPI 0xb29 V956
---
Entry stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, V928, V333, V933, V373, V930, V938, V951, V953, V942, V942, V951, V953, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, V928, V333, V933, V373, V930, V938, V951, V953, V942, V942, V951, V953, S0]

================================

Block 0xb1a
[0xb1a:0xb28]
---
Predecessors: [0xb11]
Successors: [0xb11]
---
0xb1a DUP2
0xb1b DUP2
0xb1c ADD
0xb1d MLOAD
0xb1e DUP4
0xb1f DUP3
0xb20 ADD
0xb21 MSTORE
0xb22 PUSH1 0x20
0xb24 ADD
0xb25 PUSH2 0xb11
0xb28 JUMP
---
0xb1c: V958 = ADD S0 V953
0xb1d: V959 = M[V958]
0xb20: V960 = ADD S0 V951
0xb21: M[V960] = V959
0xb22: V961 = 0x20
0xb24: V962 = ADD 0x20 S0
0xb25: V963 = 0xb11
0xb28: JUMP 0xb11
---
Entry stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, V928, V333, V933, V373, V930, V938, V951, V953, V942, V942, V951, V953, S0]
Stack pops: 3
Stack additions: [S2, S1, V962]
Exit stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, V928, V333, V933, V373, V930, V938, V951, V953, V942, V942, V951, V953, V962]

================================

Block 0xb29
[0xb29:0xb3c]
---
Predecessors: [0xb11]
Successors: [0xb3d, 0xb56]
---
0xb29 JUMPDEST
0xb2a POP
0xb2b POP
0xb2c POP
0xb2d POP
0xb2e SWAP1
0xb2f POP
0xb30 SWAP1
0xb31 DUP2
0xb32 ADD
0xb33 SWAP1
0xb34 PUSH1 0x1f
0xb36 AND
0xb37 DUP1
0xb38 ISZERO
0xb39 PUSH2 0xb56
0xb3c JUMPI
---
0xb29: JUMPDEST 
0xb32: V964 = ADD V942 V951
0xb34: V965 = 0x1f
0xb36: V966 = AND 0x1f V942
0xb38: V967 = ISZERO V966
0xb39: V968 = 0xb56
0xb3c: JUMPI 0xb56 V967
---
Entry stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, V928, V333, V933, V373, V930, V938, V951, V953, V942, V942, V951, V953, S0]
Stack pops: 7
Stack additions: [V964, V966]
Exit stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, V928, V333, V933, V373, V930, V938, V964, V966]

================================

Block 0xb3d
[0xb3d:0xb55]
---
Predecessors: [0xb29]
Successors: [0xb56]
---
0xb3d DUP1
0xb3e DUP3
0xb3f SUB
0xb40 DUP1
0xb41 MLOAD
0xb42 PUSH1 0x1
0xb44 DUP4
0xb45 PUSH1 0x20
0xb47 SUB
0xb48 PUSH2 0x100
0xb4b EXP
0xb4c SUB
0xb4d NOT
0xb4e AND
0xb4f DUP2
0xb50 MSTORE
0xb51 PUSH1 0x20
0xb53 ADD
0xb54 SWAP2
0xb55 POP
---
0xb3f: V969 = SUB V964 V966
0xb41: V970 = M[V969]
0xb42: V971 = 0x1
0xb45: V972 = 0x20
0xb47: V973 = SUB 0x20 V966
0xb48: V974 = 0x100
0xb4b: V975 = EXP 0x100 V973
0xb4c: V976 = SUB V975 0x1
0xb4d: V977 = NOT V976
0xb4e: V978 = AND V977 V970
0xb50: M[V969] = V978
0xb51: V979 = 0x20
0xb53: V980 = ADD 0x20 V969
---
Entry stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, V928, V333, V933, V373, V930, V938, V964, V966]
Stack pops: 2
Stack additions: [V980, S0]
Exit stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, V928, V333, V933, V373, V930, V938, V980, V966]

================================

Block 0xb56
[0xb56:0xb73]
---
Predecessors: [0xb29, 0xb3d]
Successors: [0xb74, 0xb78]
---
0xb56 JUMPDEST
0xb57 POP
0xb58 SWAP6
0xb59 POP
0xb5a POP
0xb5b POP
0xb5c POP
0xb5d POP
0xb5e POP
0xb5f PUSH1 0x0
0xb61 PUSH1 0x40
0xb63 MLOAD
0xb64 DUP1
0xb65 DUP4
0xb66 SUB
0xb67 DUP2
0xb68 PUSH1 0x0
0xb6a DUP8
0xb6b DUP1
0xb6c EXTCODESIZE
0xb6d ISZERO
0xb6e DUP1
0xb6f ISZERO
0xb70 PUSH2 0xb78
0xb73 JUMPI
---
0xb56: JUMPDEST 
0xb5f: V981 = 0x0
0xb61: V982 = 0x40
0xb63: V983 = M[0x40]
0xb66: V984 = SUB S1 V983
0xb68: V985 = 0x0
0xb6c: V986 = EXTCODESIZE V948
0xb6d: V987 = ISZERO V986
0xb6f: V988 = ISZERO V987
0xb70: V989 = 0xb78
0xb73: JUMPI 0xb78 V988
---
Entry stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, V928, V333, V933, V373, V930, V938, S1, V966]
Stack pops: 10
Stack additions: [S9, S8, S1, 0x0, V983, V984, V983, 0x0, S9, V987]
Exit stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, S1, 0x0, V983, V984, V983, 0x0, V948, V987]

================================

Block 0xb74
[0xb74:0xb77]
---
Predecessors: [0xb56]
Successors: []
---
0xb74 PUSH1 0x0
0xb76 DUP1
0xb77 REVERT
---
0xb74: V990 = 0x0
0xb77: REVERT 0x0 0x0
---
Entry stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, S7, 0x0, V983, V984, V983, 0x0, V948, V987]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, S7, 0x0, V983, V984, V983, 0x0, V948, V987]

================================

Block 0xb78
[0xb78:0xb82]
---
Predecessors: [0xb56]
Successors: [0xb83, 0xb8c]
---
0xb78 JUMPDEST
0xb79 POP
0xb7a GAS
0xb7b CALL
0xb7c ISZERO
0xb7d DUP1
0xb7e ISZERO
0xb7f PUSH2 0xb8c
0xb82 JUMPI
---
0xb78: JUMPDEST 
0xb7a: V991 = GAS
0xb7b: V992 = CALL V991 V948 0x0 V983 V984 V983 0x0
0xb7c: V993 = ISZERO V992
0xb7e: V994 = ISZERO V993
0xb7f: V995 = 0xb8c
0xb82: JUMPI 0xb8c V994
---
Entry stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, S7, 0x0, V983, V984, V983, 0x0, V948, V987]
Stack pops: 7
Stack additions: [V993]
Exit stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, S7, V993]

================================

Block 0xb83
[0xb83:0xb8b]
---
Predecessors: [0xb78]
Successors: []
---
0xb83 RETURNDATASIZE
0xb84 PUSH1 0x0
0xb86 DUP1
0xb87 RETURNDATACOPY
0xb88 RETURNDATASIZE
0xb89 PUSH1 0x0
0xb8b REVERT
---
0xb83: V996 = RETURNDATASIZE
0xb84: V997 = 0x0
0xb87: RETURNDATACOPY 0x0 0x0 V996
0xb88: V998 = RETURNDATASIZE
0xb89: V999 = 0x0
0xb8b: REVERT 0x0 V998
---
Entry stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, S1, V993]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, S1, V993]

================================

Block 0xb8c
[0xb8c:0xb99]
---
Predecessors: [0xb78]
Successors: [0x1c3]
---
0xb8c JUMPDEST
0xb8d POP
0xb8e PUSH1 0x1
0xb90 SWAP8
0xb91 SWAP7
0xb92 POP
0xb93 POP
0xb94 POP
0xb95 POP
0xb96 POP
0xb97 POP
0xb98 POP
0xb99 JUMP
---
0xb8c: JUMPDEST 
0xb8e: V1000 = 0x1
0xb99: JUMP 0x1c3
---
Entry stack: [V9, 0x1c3, V330, V333, V373, 0x0, V948, 0x8f4ffcb1, S1, V993]
Stack pops: 9
Stack additions: [0x1]
Exit stack: [V9, 0x1]

================================

Block 0xb9a
[0xb9a:0xba8]
---
Predecessors: [0x464]
Successors: [0x213]
---
0xb9a JUMPDEST
0xb9b PUSH1 0x1
0xb9d SLOAD
0xb9e PUSH1 0x1
0xba0 PUSH1 0x1
0xba2 PUSH1 0xa0
0xba4 SHL
0xba5 SUB
0xba6 AND
0xba7 DUP2
0xba8 JUMP
---
0xb9a: JUMPDEST 
0xb9b: V1001 = 0x1
0xb9d: V1002 = S[0x1]
0xb9e: V1003 = 0x1
0xba0: V1004 = 0x1
0xba2: V1005 = 0xa0
0xba4: V1006 = SHL 0xa0 0x1
0xba5: V1007 = SUB 0x10000000000000000000000000000000000000000 0x1
0xba6: V1008 = AND 0xffffffffffffffffffffffffffffffffffffffff V1002
0xba8: JUMP 0x213
---
Entry stack: [V9, 0x213]
Stack pops: 1
Stack additions: [S0, V1008]
Exit stack: [V9, 0x213, V1008]

================================

Block 0xba9
[0xba9:0xbd3]
---
Predecessors: [0x490]
Successors: [0x1ec]
---
0xba9 JUMPDEST
0xbaa PUSH1 0x1
0xbac PUSH1 0x1
0xbae PUSH1 0xa0
0xbb0 SHL
0xbb1 SUB
0xbb2 SWAP2
0xbb3 DUP3
0xbb4 AND
0xbb5 PUSH1 0x0
0xbb7 SWAP1
0xbb8 DUP2
0xbb9 MSTORE
0xbba PUSH1 0x8
0xbbc PUSH1 0x20
0xbbe SWAP1
0xbbf DUP2
0xbc0 MSTORE
0xbc1 PUSH1 0x40
0xbc3 DUP1
0xbc4 DUP4
0xbc5 SHA3
0xbc6 SWAP4
0xbc7 SWAP1
0xbc8 SWAP5
0xbc9 AND
0xbca DUP3
0xbcb MSTORE
0xbcc SWAP2
0xbcd SWAP1
0xbce SWAP2
0xbcf MSTORE
0xbd0 SHA3
0xbd1 SLOAD
0xbd2 SWAP1
0xbd3 JUMP
---
0xba9: JUMPDEST 
0xbaa: V1009 = 0x1
0xbac: V1010 = 0x1
0xbae: V1011 = 0xa0
0xbb0: V1012 = SHL 0xa0 0x1
0xbb1: V1013 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb4: V1014 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0xbb5: V1015 = 0x0
0xbb9: M[0x0] = V1014
0xbba: V1016 = 0x8
0xbbc: V1017 = 0x20
0xbc0: M[0x20] = 0x8
0xbc1: V1018 = 0x40
0xbc5: V1019 = SHA3 0x0 0x40
0xbc9: V1020 = AND 0xffffffffffffffffffffffffffffffffffffffff V410
0xbcb: M[0x0] = V1020
0xbcf: M[0x20] = V1019
0xbd0: V1021 = SHA3 0x0 0x40
0xbd1: V1022 = S[V1021]
0xbd3: JUMP 0x1ec
---
Entry stack: [V9, 0x1ec, V406, V410]
Stack pops: 3
Stack additions: [V1022]
Exit stack: [V9, V1022]

================================

Block 0xbd4
[0xbd4:0xbe6]
---
Predecessors: [0x4cb]
Successors: [0xbe7, 0xbeb]
---
0xbd4 JUMPDEST
0xbd5 PUSH1 0x0
0xbd7 SLOAD
0xbd8 PUSH1 0x1
0xbda PUSH1 0x1
0xbdc PUSH1 0xa0
0xbde SHL
0xbdf SUB
0xbe0 AND
0xbe1 CALLER
0xbe2 EQ
0xbe3 PUSH2 0xbeb
0xbe6 JUMPI
---
0xbd4: JUMPDEST 
0xbd5: V1023 = 0x0
0xbd7: V1024 = S[0x0]
0xbd8: V1025 = 0x1
0xbda: V1026 = 0x1
0xbdc: V1027 = 0xa0
0xbde: V1028 = SHL 0xa0 0x1
0xbdf: V1029 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe0: V1030 = AND 0xffffffffffffffffffffffffffffffffffffffff V1024
0xbe1: V1031 = CALLER
0xbe2: V1032 = EQ V1031 V1030
0xbe3: V1033 = 0xbeb
0xbe6: JUMPI 0xbeb V1032
---
Entry stack: [V9, 0xfe, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xfe, V431]

================================

Block 0xbe7
[0xbe7:0xbea]
---
Predecessors: [0xbd4]
Successors: []
---
0xbe7 PUSH1 0x0
0xbe9 DUP1
0xbea REVERT
---
0xbe7: V1034 = 0x0
0xbea: REVERT 0x0 0x0
---
Entry stack: [V9, 0xfe, V431]
Stack pops: 0
Stack additions: []
Exit stack: [V9, 0xfe, V431]

================================

Block 0xbeb
[0xbeb:0xc0c]
---
Predecessors: [0xbd4]
Successors: [0xfe]
---
0xbeb JUMPDEST
0xbec PUSH1 0x1
0xbee DUP1
0xbef SLOAD
0xbf0 PUSH1 0x1
0xbf2 PUSH1 0x1
0xbf4 PUSH1 0xa0
0xbf6 SHL
0xbf7 SUB
0xbf8 NOT
0xbf9 AND
0xbfa PUSH1 0x1
0xbfc PUSH1 0x1
0xbfe PUSH1 0xa0
0xc00 SHL
0xc01 SUB
0xc02 SWAP3
0xc03 SWAP1
0xc04 SWAP3
0xc05 AND
0xc06 SWAP2
0xc07 SWAP1
0xc08 SWAP2
0xc09 OR
0xc0a SWAP1
0xc0b SSTORE
0xc0c JUMP
---
0xbeb: JUMPDEST 
0xbec: V1035 = 0x1
0xbef: V1036 = S[0x1]
0xbf0: V1037 = 0x1
0xbf2: V1038 = 0x1
0xbf4: V1039 = 0xa0
0xbf6: V1040 = SHL 0xa0 0x1
0xbf7: V1041 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf8: V1042 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xbf9: V1043 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1036
0xbfa: V1044 = 0x1
0xbfc: V1045 = 0x1
0xbfe: V1046 = 0xa0
0xc00: V1047 = SHL 0xa0 0x1
0xc01: V1048 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc05: V1049 = AND 0xffffffffffffffffffffffffffffffffffffffff V431
0xc09: V1050 = OR V1049 V1043
0xc0b: S[0x1] = V1050
0xc0c: JUMP 0xfe
---
Entry stack: [V9, 0xfe, V431]
Stack pops: 2
Stack additions: []
Exit stack: [V9]

================================

Block 0xc0d
[0xc0d:0xc17]
---
Predecessors: [0x5d0, 0x6bb, 0x6e4, 0x959]
Successors: [0xc18, 0xc1c]
---
0xc0d JUMPDEST
0xc0e PUSH1 0x0
0xc10 DUP3
0xc11 DUP3
0xc12 GT
0xc13 ISZERO
0xc14 PUSH2 0xc1c
0xc17 JUMPI
---
0xc0d: JUMPDEST 
0xc0e: V1051 = 0x0
0xc12: V1052 = GT S0 S1
0xc13: V1053 = ISZERO V1052
0xc14: V1054 = 0xc1c
0xc17: JUMPI 0xc1c V1053
---
Entry stack: [V9, S7, S6, S5, S4, 0x0, {0x60e, 0x6e4, 0x721, 0x979}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V9, S7, S6, S5, S4, 0x0, {0x60e, 0x6e4, 0x721, 0x979}, S1, S0, 0x0]

================================

Block 0xc18
[0xc18:0xc1b]
---
Predecessors: [0xc0d]
Successors: []
---
0xc18 PUSH1 0x0
0xc1a DUP1
0xc1b REVERT
---
0xc18: V1055 = 0x0
0xc1b: REVERT 0x0 0x0
---
Entry stack: [V9, S8, S7, S6, S5, 0x0, {0x60e, 0x6e4, 0x721, 0x979}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S8, S7, S6, S5, 0x0, {0x60e, 0x6e4, 0x721, 0x979}, S2, S1, 0x0]

================================

Block 0xc1c
[0xc1c:0xc21]
---
Predecessors: [0xc0d]
Successors: [0x60e, 0x6e4, 0x721, 0x979]
---
0xc1c JUMPDEST
0xc1d POP
0xc1e SWAP1
0xc1f SUB
0xc20 SWAP1
0xc21 JUMP
---
0xc1c: JUMPDEST 
0xc1f: V1056 = SUB S2 S1
0xc21: JUMP {0x60e, 0x6e4, 0x721, 0x979}
---
Entry stack: [V9, S8, S7, S6, S5, 0x0, {0x60e, 0x6e4, 0x721, 0x979}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V1056]
Exit stack: [V9, S8, S7, S6, S5, 0x0, V1056]

================================

Block 0xc22
[0xc22:0xc2d]
---
Predecessors: [0x721, 0x979]
Successors: [0x5ca, 0xc2e]
---
0xc22 JUMPDEST
0xc23 DUP2
0xc24 DUP2
0xc25 ADD
0xc26 DUP3
0xc27 DUP2
0xc28 LT
0xc29 ISZERO
0xc2a PUSH2 0x5ca
0xc2d JUMPI
---
0xc22: JUMPDEST 
0xc25: V1057 = ADD S0 S1
0xc28: V1058 = LT V1057 S1
0xc29: V1059 = ISZERO V1058
0xc2a: V1060 = 0x5ca
0xc2d: JUMPI 0x5ca V1059
---
Entry stack: [V9, S7, S6, S5, S4, 0x0, {0x765, 0x9ab}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V1057]
Exit stack: [V9, S7, S6, S5, S4, 0x0, {0x765, 0x9ab}, S1, S0, V1057]

================================

Block 0xc2e
[0xc2e:0xc31]
---
Predecessors: [0xc22]
Successors: []
---
0xc2e PUSH1 0x0
0xc30 DUP1
0xc31 REVERT
---
0xc2e: V1061 = 0x0
0xc31: REVERT 0x0 0x0
---
Entry stack: [V9, S8, S7, S6, S5, 0x0, {0x765, 0x9ab}, S2, S1, V1057]
Stack pops: 0
Stack additions: []
Exit stack: [V9, S8, S7, S6, S5, 0x0, {0x765, 0x9ab}, S2, S1, V1057]

================================

Block 0xc32
[0xc32:0xc66]
---
Predecessors: []
Successors: []
---
0xc32 INVALID
0xc33 LOG2
0xc34 PUSH6 0x627a7a723158
0xc3b SHA3
0xc3c MISSING 0x21
0xc3d PUSH25 0x97c749efd75df3a499fd7d3e603b735bc4c1c4a332b0645c73
0xc57 DUP16
0xc58 PUSH10 0xce02fd64736f6c634300
0xc63 SDIV
0xc64 GT
0xc65 STOP
0xc66 ORIGIN
---
0xc32: INVALID 
0xc33: LOG S0 S1 S2 S3
0xc34: V1062 = 0x627a7a723158
0xc3b: V1063 = SHA3 0x627a7a723158 S4
0xc3c: MISSING 0x21
0xc3d: V1064 = 0x97c749efd75df3a499fd7d3e603b735bc4c1c4a332b0645c73
0xc58: V1065 = 0xce02fd64736f6c634300
0xc63: V1066 = SDIV 0xce02fd64736f6c634300 S14
0xc64: V1067 = GT V1066 0x97c749efd75df3a499fd7d3e603b735bc4c1c4a332b0645c73
0xc65: STOP 
0xc66: V1068 = ORIGIN
---
Entry stack: []
Stack pops: 0
Stack additions: [V1063, V1067, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V1068]
Exit stack: []

================================

Function 0:
Private function
Entry block: 0xc22
Exit block: 0x5ca
Body: 0x5ca, 0xc22

Function 1:
Private function
Entry block: 0xc0d
Exit block: 0xc1c
Body: 0xc0d, 0xc1c

