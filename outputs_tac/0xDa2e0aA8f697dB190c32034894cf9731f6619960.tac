Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xba]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xba
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xba
0xc: JUMPI 0xba V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0xbf]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0xbf
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0xbf
0x40: JUMPI 0xbf V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x14f]
---
0x41 DUP1
0x42 PUSH4 0x1608f18f
0x47 EQ
0x48 PUSH2 0x14f
0x4b JUMPI
---
0x42: V15 = 0x1608f18f
0x47: V16 = EQ 0x1608f18f V11
0x48: V17 = 0x14f
0x4b: JUMPI 0x14f V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x17e]
---
0x4c DUP1
0x4d PUSH4 0x18160ddd
0x52 EQ
0x53 PUSH2 0x17e
0x56 JUMPI
---
0x4d: V18 = 0x18160ddd
0x52: V19 = EQ 0x18160ddd V11
0x53: V20 = 0x17e
0x56: JUMPI 0x17e V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x1a9]
---
0x57 DUP1
0x58 PUSH4 0x18af7611
0x5d EQ
0x5e PUSH2 0x1a9
0x61 JUMPI
---
0x58: V21 = 0x18af7611
0x5d: V22 = EQ 0x18af7611 V11
0x5e: V23 = 0x1a9
0x61: JUMPI 0x1a9 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x200]
---
0x62 DUP1
0x63 PUSH4 0x313ce567
0x68 EQ
0x69 PUSH2 0x200
0x6c JUMPI
---
0x63: V24 = 0x313ce567
0x68: V25 = EQ 0x313ce567 V11
0x69: V26 = 0x200
0x6c: JUMPI 0x200 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x231]
---
0x6d DUP1
0x6e PUSH4 0x5c658165
0x73 EQ
0x74 PUSH2 0x231
0x77 JUMPI
---
0x6e: V27 = 0x5c658165
0x73: V28 = EQ 0x5c658165 V11
0x74: V29 = 0x231
0x77: JUMPI 0x231 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x2a8]
---
0x78 DUP1
0x79 PUSH4 0x70a08231
0x7e EQ
0x7f PUSH2 0x2a8
0x82 JUMPI
---
0x79: V30 = 0x70a08231
0x7e: V31 = EQ 0x70a08231 V11
0x7f: V32 = 0x2a8
0x82: JUMPI 0x2a8 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x2ff]
---
0x83 DUP1
0x84 PUSH4 0x8da5cb5b
0x89 EQ
0x8a PUSH2 0x2ff
0x8d JUMPI
---
0x84: V33 = 0x8da5cb5b
0x89: V34 = EQ 0x8da5cb5b V11
0x8a: V35 = 0x2ff
0x8d: JUMPI 0x2ff V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x356]
---
0x8e DUP1
0x8f PUSH4 0x95d89b41
0x94 EQ
0x95 PUSH2 0x356
0x98 JUMPI
---
0x8f: V36 = 0x95d89b41
0x94: V37 = EQ 0x95d89b41 V11
0x95: V38 = 0x356
0x98: JUMPI 0x356 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x3e6]
---
0x99 DUP1
0x9a PUSH4 0xa9059cbb
0x9f EQ
0xa0 PUSH2 0x3e6
0xa3 JUMPI
---
0x9a: V39 = 0xa9059cbb
0x9f: V40 = EQ 0xa9059cbb V11
0xa0: V41 = 0x3e6
0xa3: JUMPI 0x3e6 V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x44b]
---
0xa4 DUP1
0xa5 PUSH4 0xbef97c87
0xaa EQ
0xab PUSH2 0x44b
0xae JUMPI
---
0xa5: V42 = 0xbef97c87
0xaa: V43 = EQ 0xbef97c87 V11
0xab: V44 = 0x44b
0xae: JUMPI 0x44b V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x47a]
---
0xaf DUP1
0xb0 PUSH4 0xf2fde38b
0xb5 EQ
0xb6 PUSH2 0x47a
0xb9 JUMPI
---
0xb0: V45 = 0xf2fde38b
0xb5: V46 = EQ 0xf2fde38b V11
0xb6: V47 = 0x47a
0xb9: JUMPI 0x47a V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xbe]
---
Predecessors: [0x0, 0xaf]
Successors: []
---
0xba JUMPDEST
0xbb PUSH1 0x0
0xbd DUP1
0xbe REVERT
---
0xba: JUMPDEST 
0xbb: V48 = 0x0
0xbe: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbf
[0xbf:0xc6]
---
Predecessors: [0xd]
Successors: [0xc7, 0xcb]
---
0xbf JUMPDEST
0xc0 CALLVALUE
0xc1 DUP1
0xc2 ISZERO
0xc3 PUSH2 0xcb
0xc6 JUMPI
---
0xbf: JUMPDEST 
0xc0: V49 = CALLVALUE
0xc2: V50 = ISZERO V49
0xc3: V51 = 0xcb
0xc6: JUMPI 0xcb V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V49]
Exit stack: [V11, V49]

================================

Block 0xc7
[0xc7:0xca]
---
Predecessors: [0xbf]
Successors: []
---
0xc7 PUSH1 0x0
0xc9 DUP1
0xca REVERT
---
0xc7: V52 = 0x0
0xca: REVERT 0x0 0x0
---
Entry stack: [V11, V49]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V49]

================================

Block 0xcb
[0xcb:0xd3]
---
Predecessors: [0xbf]
Successors: [0x4bd]
---
0xcb JUMPDEST
0xcc POP
0xcd PUSH2 0xd4
0xd0 PUSH2 0x4bd
0xd3 JUMP
---
0xcb: JUMPDEST 
0xcd: V53 = 0xd4
0xd0: V54 = 0x4bd
0xd3: JUMP 0x4bd
---
Entry stack: [V11, V49]
Stack pops: 1
Stack additions: [0xd4]
Exit stack: [V11, 0xd4]

================================

Block 0xd4
[0xd4:0xf8]
---
Predecessors: [0x4bd]
Successors: [0xf9]
---
0xd4 JUMPDEST
0xd5 PUSH1 0x40
0xd7 MLOAD
0xd8 DUP1
0xd9 DUP1
0xda PUSH1 0x20
0xdc ADD
0xdd DUP3
0xde DUP2
0xdf SUB
0xe0 DUP3
0xe1 MSTORE
0xe2 DUP4
0xe3 DUP2
0xe4 DUP2
0xe5 MLOAD
0xe6 DUP2
0xe7 MSTORE
0xe8 PUSH1 0x20
0xea ADD
0xeb SWAP2
0xec POP
0xed DUP1
0xee MLOAD
0xef SWAP1
0xf0 PUSH1 0x20
0xf2 ADD
0xf3 SWAP1
0xf4 DUP1
0xf5 DUP4
0xf6 DUP4
0xf7 PUSH1 0x0
---
0xd4: JUMPDEST 
0xd5: V55 = 0x40
0xd7: V56 = M[0x40]
0xda: V57 = 0x20
0xdc: V58 = ADD 0x20 V56
0xdf: V59 = SUB V58 V56
0xe1: M[V56] = V59
0xe5: V60 = M[V333]
0xe7: M[V58] = V60
0xe8: V61 = 0x20
0xea: V62 = ADD 0x20 V58
0xee: V63 = M[V333]
0xf0: V64 = 0x20
0xf2: V65 = ADD 0x20 V333
0xf7: V66 = 0x0
---
Entry stack: [V11, 0xd4, V333]
Stack pops: 1
Stack additions: [S0, V56, V56, V62, V65, V63, V63, V62, V65, 0x0]
Exit stack: [V11, 0xd4, V333, V56, V56, V62, V65, V63, V63, V62, V65, 0x0]

================================

Block 0xf9
[0xf9:0x101]
---
Predecessors: [0xd4, 0x102]
Successors: [0x102, 0x114]
---
0xf9 JUMPDEST
0xfa DUP4
0xfb DUP2
0xfc LT
0xfd ISZERO
0xfe PUSH2 0x114
0x101 JUMPI
---
0xf9: JUMPDEST 
0xfc: V67 = LT S0 V63
0xfd: V68 = ISZERO V67
0xfe: V69 = 0x114
0x101: JUMPI 0x114 V68
---
Entry stack: [V11, 0xd4, V333, V56, V56, V62, V65, V63, V63, V62, V65, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0xd4, V333, V56, V56, V62, V65, V63, V63, V62, V65, S0]

================================

Block 0x102
[0x102:0x113]
---
Predecessors: [0xf9]
Successors: [0xf9]
---
0x102 DUP1
0x103 DUP3
0x104 ADD
0x105 MLOAD
0x106 DUP2
0x107 DUP5
0x108 ADD
0x109 MSTORE
0x10a PUSH1 0x20
0x10c DUP2
0x10d ADD
0x10e SWAP1
0x10f POP
0x110 PUSH2 0xf9
0x113 JUMP
---
0x104: V70 = ADD V65 S0
0x105: V71 = M[V70]
0x108: V72 = ADD V62 S0
0x109: M[V72] = V71
0x10a: V73 = 0x20
0x10d: V74 = ADD S0 0x20
0x110: V75 = 0xf9
0x113: JUMP 0xf9
---
Entry stack: [V11, 0xd4, V333, V56, V56, V62, V65, V63, V63, V62, V65, S0]
Stack pops: 3
Stack additions: [S2, S1, V74]
Exit stack: [V11, 0xd4, V333, V56, V56, V62, V65, V63, V63, V62, V65, V74]

================================

Block 0x114
[0x114:0x127]
---
Predecessors: [0xf9]
Successors: [0x128, 0x141]
---
0x114 JUMPDEST
0x115 POP
0x116 POP
0x117 POP
0x118 POP
0x119 SWAP1
0x11a POP
0x11b SWAP1
0x11c DUP2
0x11d ADD
0x11e SWAP1
0x11f PUSH1 0x1f
0x121 AND
0x122 DUP1
0x123 ISZERO
0x124 PUSH2 0x141
0x127 JUMPI
---
0x114: JUMPDEST 
0x11d: V76 = ADD V63 V62
0x11f: V77 = 0x1f
0x121: V78 = AND 0x1f V63
0x123: V79 = ISZERO V78
0x124: V80 = 0x141
0x127: JUMPI 0x141 V79
---
Entry stack: [V11, 0xd4, V333, V56, V56, V62, V65, V63, V63, V62, V65, S0]
Stack pops: 7
Stack additions: [V76, V78]
Exit stack: [V11, 0xd4, V333, V56, V56, V76, V78]

================================

Block 0x128
[0x128:0x140]
---
Predecessors: [0x114]
Successors: [0x141]
---
0x128 DUP1
0x129 DUP3
0x12a SUB
0x12b DUP1
0x12c MLOAD
0x12d PUSH1 0x1
0x12f DUP4
0x130 PUSH1 0x20
0x132 SUB
0x133 PUSH2 0x100
0x136 EXP
0x137 SUB
0x138 NOT
0x139 AND
0x13a DUP2
0x13b MSTORE
0x13c PUSH1 0x20
0x13e ADD
0x13f SWAP2
0x140 POP
---
0x12a: V81 = SUB V76 V78
0x12c: V82 = M[V81]
0x12d: V83 = 0x1
0x130: V84 = 0x20
0x132: V85 = SUB 0x20 V78
0x133: V86 = 0x100
0x136: V87 = EXP 0x100 V85
0x137: V88 = SUB V87 0x1
0x138: V89 = NOT V88
0x139: V90 = AND V89 V82
0x13b: M[V81] = V90
0x13c: V91 = 0x20
0x13e: V92 = ADD 0x20 V81
---
Entry stack: [V11, 0xd4, V333, V56, V56, V76, V78]
Stack pops: 2
Stack additions: [V92, S0]
Exit stack: [V11, 0xd4, V333, V56, V56, V92, V78]

================================

Block 0x141
[0x141:0x14e]
---
Predecessors: [0x114, 0x128]
Successors: []
---
0x141 JUMPDEST
0x142 POP
0x143 SWAP3
0x144 POP
0x145 POP
0x146 POP
0x147 PUSH1 0x40
0x149 MLOAD
0x14a DUP1
0x14b SWAP2
0x14c SUB
0x14d SWAP1
0x14e RETURN
---
0x141: JUMPDEST 
0x147: V93 = 0x40
0x149: V94 = M[0x40]
0x14c: V95 = SUB S1 V94
0x14e: RETURN V94 V95
---
Entry stack: [V11, 0xd4, V333, V56, V56, S1, V78]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0xd4]

================================

Block 0x14f
[0x14f:0x156]
---
Predecessors: [0x41]
Successors: [0x157, 0x15b]
---
0x14f JUMPDEST
0x150 CALLVALUE
0x151 DUP1
0x152 ISZERO
0x153 PUSH2 0x15b
0x156 JUMPI
---
0x14f: JUMPDEST 
0x150: V96 = CALLVALUE
0x152: V97 = ISZERO V96
0x153: V98 = 0x15b
0x156: JUMPI 0x15b V97
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V96]
Exit stack: [V11, V96]

================================

Block 0x157
[0x157:0x15a]
---
Predecessors: [0x14f]
Successors: []
---
0x157 PUSH1 0x0
0x159 DUP1
0x15a REVERT
---
0x157: V99 = 0x0
0x15a: REVERT 0x0 0x0
---
Entry stack: [V11, V96]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V96]

================================

Block 0x15b
[0x15b:0x17b]
---
Predecessors: [0x14f]
Successors: [0x4f6]
---
0x15b JUMPDEST
0x15c POP
0x15d PUSH2 0x17c
0x160 PUSH1 0x4
0x162 DUP1
0x163 CALLDATASIZE
0x164 SUB
0x165 DUP2
0x166 ADD
0x167 SWAP1
0x168 DUP1
0x169 DUP1
0x16a CALLDATALOAD
0x16b ISZERO
0x16c ISZERO
0x16d SWAP1
0x16e PUSH1 0x20
0x170 ADD
0x171 SWAP1
0x172 SWAP3
0x173 SWAP2
0x174 SWAP1
0x175 POP
0x176 POP
0x177 POP
0x178 PUSH2 0x4f6
0x17b JUMP
---
0x15b: JUMPDEST 
0x15d: V100 = 0x17c
0x160: V101 = 0x4
0x163: V102 = CALLDATASIZE
0x164: V103 = SUB V102 0x4
0x166: V104 = ADD 0x4 V103
0x16a: V105 = CALLDATALOAD 0x4
0x16b: V106 = ISZERO V105
0x16c: V107 = ISZERO V106
0x16e: V108 = 0x20
0x170: V109 = ADD 0x20 0x4
0x178: V110 = 0x4f6
0x17b: JUMP 0x4f6
---
Entry stack: [V11, V96]
Stack pops: 1
Stack additions: [0x17c, V107]
Exit stack: [V11, 0x17c, V107]

================================

Block 0x17c
[0x17c:0x17d]
---
Predecessors: [0x551]
Successors: []
---
0x17c JUMPDEST
0x17d STOP
---
0x17c: JUMPDEST 
0x17d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x17e
[0x17e:0x185]
---
Predecessors: [0x4c]
Successors: [0x186, 0x18a]
---
0x17e JUMPDEST
0x17f CALLVALUE
0x180 DUP1
0x181 ISZERO
0x182 PUSH2 0x18a
0x185 JUMPI
---
0x17e: JUMPDEST 
0x17f: V111 = CALLVALUE
0x181: V112 = ISZERO V111
0x182: V113 = 0x18a
0x185: JUMPI 0x18a V112
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V111]
Exit stack: [V11, V111]

================================

Block 0x186
[0x186:0x189]
---
Predecessors: [0x17e]
Successors: []
---
0x186 PUSH1 0x0
0x188 DUP1
0x189 REVERT
---
0x186: V114 = 0x0
0x189: REVERT 0x0 0x0
---
Entry stack: [V11, V111]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V111]

================================

Block 0x18a
[0x18a:0x192]
---
Predecessors: [0x17e]
Successors: [0x56f]
---
0x18a JUMPDEST
0x18b POP
0x18c PUSH2 0x193
0x18f PUSH2 0x56f
0x192 JUMP
---
0x18a: JUMPDEST 
0x18c: V115 = 0x193
0x18f: V116 = 0x56f
0x192: JUMP 0x56f
---
Entry stack: [V11, V111]
Stack pops: 1
Stack additions: [0x193]
Exit stack: [V11, 0x193]

================================

Block 0x193
[0x193:0x1a8]
---
Predecessors: [0x56f]
Successors: []
---
0x193 JUMPDEST
0x194 PUSH1 0x40
0x196 MLOAD
0x197 DUP1
0x198 DUP3
0x199 DUP2
0x19a MSTORE
0x19b PUSH1 0x20
0x19d ADD
0x19e SWAP2
0x19f POP
0x1a0 POP
0x1a1 PUSH1 0x40
0x1a3 MLOAD
0x1a4 DUP1
0x1a5 SWAP2
0x1a6 SUB
0x1a7 SWAP1
0x1a8 RETURN
---
0x193: JUMPDEST 
0x194: V117 = 0x40
0x196: V118 = M[0x40]
0x19a: M[V118] = V372
0x19b: V119 = 0x20
0x19d: V120 = ADD 0x20 V118
0x1a1: V121 = 0x40
0x1a3: V122 = M[0x40]
0x1a6: V123 = SUB V120 V122
0x1a8: RETURN V122 V123
---
Entry stack: [V11, 0x193, V372]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x193]

================================

Block 0x1a9
[0x1a9:0x1b0]
---
Predecessors: [0x57]
Successors: [0x1b1, 0x1b5]
---
0x1a9 JUMPDEST
0x1aa CALLVALUE
0x1ab DUP1
0x1ac ISZERO
0x1ad PUSH2 0x1b5
0x1b0 JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V124 = CALLVALUE
0x1ac: V125 = ISZERO V124
0x1ad: V126 = 0x1b5
0x1b0: JUMPI 0x1b5 V125
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V124]
Exit stack: [V11, V124]

================================

Block 0x1b1
[0x1b1:0x1b4]
---
Predecessors: [0x1a9]
Successors: []
---
0x1b1 PUSH1 0x0
0x1b3 DUP1
0x1b4 REVERT
---
0x1b1: V127 = 0x0
0x1b4: REVERT 0x0 0x0
---
Entry stack: [V11, V124]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V124]

================================

Block 0x1b5
[0x1b5:0x1bd]
---
Predecessors: [0x1a9]
Successors: [0x575]
---
0x1b5 JUMPDEST
0x1b6 POP
0x1b7 PUSH2 0x1be
0x1ba PUSH2 0x575
0x1bd JUMP
---
0x1b5: JUMPDEST 
0x1b7: V128 = 0x1be
0x1ba: V129 = 0x575
0x1bd: JUMP 0x575
---
Entry stack: [V11, V124]
Stack pops: 1
Stack additions: [0x1be]
Exit stack: [V11, 0x1be]

================================

Block 0x1be
[0x1be:0x1ff]
---
Predecessors: [0x575]
Successors: []
---
0x1be JUMPDEST
0x1bf PUSH1 0x40
0x1c1 MLOAD
0x1c2 DUP1
0x1c3 DUP3
0x1c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d9 AND
0x1da PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ef AND
0x1f0 DUP2
0x1f1 MSTORE
0x1f2 PUSH1 0x20
0x1f4 ADD
0x1f5 SWAP2
0x1f6 POP
0x1f7 POP
0x1f8 PUSH1 0x40
0x1fa MLOAD
0x1fb DUP1
0x1fc SWAP2
0x1fd SUB
0x1fe SWAP1
0x1ff RETURN
---
0x1be: JUMPDEST 
0x1bf: V130 = 0x40
0x1c1: V131 = M[0x40]
0x1c4: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d9: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xafd390d55d2e02fdf715e77df120b8e9cee52f30
0x1da: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ef: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff 0xafd390d55d2e02fdf715e77df120b8e9cee52f30
0x1f1: M[V131] = 0xafd390d55d2e02fdf715e77df120b8e9cee52f30
0x1f2: V136 = 0x20
0x1f4: V137 = ADD 0x20 V131
0x1f8: V138 = 0x40
0x1fa: V139 = M[0x40]
0x1fd: V140 = SUB V137 V139
0x1ff: RETURN V139 V140
---
Entry stack: [V11, 0x1be, 0xafd390d55d2e02fdf715e77df120b8e9cee52f30]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1be]

================================

Block 0x200
[0x200:0x207]
---
Predecessors: [0x62]
Successors: [0x208, 0x20c]
---
0x200 JUMPDEST
0x201 CALLVALUE
0x202 DUP1
0x203 ISZERO
0x204 PUSH2 0x20c
0x207 JUMPI
---
0x200: JUMPDEST 
0x201: V141 = CALLVALUE
0x203: V142 = ISZERO V141
0x204: V143 = 0x20c
0x207: JUMPI 0x20c V142
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V141]
Exit stack: [V11, V141]

================================

Block 0x208
[0x208:0x20b]
---
Predecessors: [0x200]
Successors: []
---
0x208 PUSH1 0x0
0x20a DUP1
0x20b REVERT
---
0x208: V144 = 0x0
0x20b: REVERT 0x0 0x0
---
Entry stack: [V11, V141]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V141]

================================

Block 0x20c
[0x20c:0x214]
---
Predecessors: [0x200]
Successors: [0x58d]
---
0x20c JUMPDEST
0x20d POP
0x20e PUSH2 0x215
0x211 PUSH2 0x58d
0x214 JUMP
---
0x20c: JUMPDEST 
0x20e: V145 = 0x215
0x211: V146 = 0x58d
0x214: JUMP 0x58d
---
Entry stack: [V11, V141]
Stack pops: 1
Stack additions: [0x215]
Exit stack: [V11, 0x215]

================================

Block 0x215
[0x215:0x230]
---
Predecessors: [0x58d]
Successors: []
---
0x215 JUMPDEST
0x216 PUSH1 0x40
0x218 MLOAD
0x219 DUP1
0x21a DUP3
0x21b PUSH1 0xff
0x21d AND
0x21e PUSH1 0xff
0x220 AND
0x221 DUP2
0x222 MSTORE
0x223 PUSH1 0x20
0x225 ADD
0x226 SWAP2
0x227 POP
0x228 POP
0x229 PUSH1 0x40
0x22b MLOAD
0x22c DUP1
0x22d SWAP2
0x22e SUB
0x22f SWAP1
0x230 RETURN
---
0x215: JUMPDEST 
0x216: V147 = 0x40
0x218: V148 = M[0x40]
0x21b: V149 = 0xff
0x21d: V150 = AND 0xff 0x12
0x21e: V151 = 0xff
0x220: V152 = AND 0xff 0x12
0x222: M[V148] = 0x12
0x223: V153 = 0x20
0x225: V154 = ADD 0x20 V148
0x229: V155 = 0x40
0x22b: V156 = M[0x40]
0x22e: V157 = SUB V154 V156
0x230: RETURN V156 V157
---
Entry stack: [V11, 0x215, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x215]

================================

Block 0x231
[0x231:0x238]
---
Predecessors: [0x6d]
Successors: [0x239, 0x23d]
---
0x231 JUMPDEST
0x232 CALLVALUE
0x233 DUP1
0x234 ISZERO
0x235 PUSH2 0x23d
0x238 JUMPI
---
0x231: JUMPDEST 
0x232: V158 = CALLVALUE
0x234: V159 = ISZERO V158
0x235: V160 = 0x23d
0x238: JUMPI 0x23d V159
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V158]
Exit stack: [V11, V158]

================================

Block 0x239
[0x239:0x23c]
---
Predecessors: [0x231]
Successors: []
---
0x239 PUSH1 0x0
0x23b DUP1
0x23c REVERT
---
0x239: V161 = 0x0
0x23c: REVERT 0x0 0x0
---
Entry stack: [V11, V158]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V158]

================================

Block 0x23d
[0x23d:0x291]
---
Predecessors: [0x231]
Successors: [0x592]
---
0x23d JUMPDEST
0x23e POP
0x23f PUSH2 0x292
0x242 PUSH1 0x4
0x244 DUP1
0x245 CALLDATASIZE
0x246 SUB
0x247 DUP2
0x248 ADD
0x249 SWAP1
0x24a DUP1
0x24b DUP1
0x24c CALLDATALOAD
0x24d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x262 AND
0x263 SWAP1
0x264 PUSH1 0x20
0x266 ADD
0x267 SWAP1
0x268 SWAP3
0x269 SWAP2
0x26a SWAP1
0x26b DUP1
0x26c CALLDATALOAD
0x26d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x282 AND
0x283 SWAP1
0x284 PUSH1 0x20
0x286 ADD
0x287 SWAP1
0x288 SWAP3
0x289 SWAP2
0x28a SWAP1
0x28b POP
0x28c POP
0x28d POP
0x28e PUSH2 0x592
0x291 JUMP
---
0x23d: JUMPDEST 
0x23f: V162 = 0x292
0x242: V163 = 0x4
0x245: V164 = CALLDATASIZE
0x246: V165 = SUB V164 0x4
0x248: V166 = ADD 0x4 V165
0x24c: V167 = CALLDATALOAD 0x4
0x24d: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x262: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x264: V170 = 0x20
0x266: V171 = ADD 0x20 0x4
0x26c: V172 = CALLDATALOAD 0x24
0x26d: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x282: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x284: V175 = 0x20
0x286: V176 = ADD 0x20 0x24
0x28e: V177 = 0x592
0x291: JUMP 0x592
---
Entry stack: [V11, V158]
Stack pops: 1
Stack additions: [0x292, V169, V174]
Exit stack: [V11, 0x292, V169, V174]

================================

Block 0x292
[0x292:0x2a7]
---
Predecessors: [0x592]
Successors: []
---
0x292 JUMPDEST
0x293 PUSH1 0x40
0x295 MLOAD
0x296 DUP1
0x297 DUP3
0x298 DUP2
0x299 MSTORE
0x29a PUSH1 0x20
0x29c ADD
0x29d SWAP2
0x29e POP
0x29f POP
0x2a0 PUSH1 0x40
0x2a2 MLOAD
0x2a3 DUP1
0x2a4 SWAP2
0x2a5 SUB
0x2a6 SWAP1
0x2a7 RETURN
---
0x292: JUMPDEST 
0x293: V178 = 0x40
0x295: V179 = M[0x40]
0x299: M[V179] = V387
0x29a: V180 = 0x20
0x29c: V181 = ADD 0x20 V179
0x2a0: V182 = 0x40
0x2a2: V183 = M[0x40]
0x2a5: V184 = SUB V181 V183
0x2a7: RETURN V183 V184
---
Entry stack: [V11, 0x292, V387]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x292]

================================

Block 0x2a8
[0x2a8:0x2af]
---
Predecessors: [0x78]
Successors: [0x2b0, 0x2b4]
---
0x2a8 JUMPDEST
0x2a9 CALLVALUE
0x2aa DUP1
0x2ab ISZERO
0x2ac PUSH2 0x2b4
0x2af JUMPI
---
0x2a8: JUMPDEST 
0x2a9: V185 = CALLVALUE
0x2ab: V186 = ISZERO V185
0x2ac: V187 = 0x2b4
0x2af: JUMPI 0x2b4 V186
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V185]
Exit stack: [V11, V185]

================================

Block 0x2b0
[0x2b0:0x2b3]
---
Predecessors: [0x2a8]
Successors: []
---
0x2b0 PUSH1 0x0
0x2b2 DUP1
0x2b3 REVERT
---
0x2b0: V188 = 0x0
0x2b3: REVERT 0x0 0x0
---
Entry stack: [V11, V185]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V185]

================================

Block 0x2b4
[0x2b4:0x2e8]
---
Predecessors: [0x2a8]
Successors: [0x5b7]
---
0x2b4 JUMPDEST
0x2b5 POP
0x2b6 PUSH2 0x2e9
0x2b9 PUSH1 0x4
0x2bb DUP1
0x2bc CALLDATASIZE
0x2bd SUB
0x2be DUP2
0x2bf ADD
0x2c0 SWAP1
0x2c1 DUP1
0x2c2 DUP1
0x2c3 CALLDATALOAD
0x2c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d9 AND
0x2da SWAP1
0x2db PUSH1 0x20
0x2dd ADD
0x2de SWAP1
0x2df SWAP3
0x2e0 SWAP2
0x2e1 SWAP1
0x2e2 POP
0x2e3 POP
0x2e4 POP
0x2e5 PUSH2 0x5b7
0x2e8 JUMP
---
0x2b4: JUMPDEST 
0x2b6: V189 = 0x2e9
0x2b9: V190 = 0x4
0x2bc: V191 = CALLDATASIZE
0x2bd: V192 = SUB V191 0x4
0x2bf: V193 = ADD 0x4 V192
0x2c3: V194 = CALLDATALOAD 0x4
0x2c4: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d9: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V194
0x2db: V197 = 0x20
0x2dd: V198 = ADD 0x20 0x4
0x2e5: V199 = 0x5b7
0x2e8: JUMP 0x5b7
---
Entry stack: [V11, V185]
Stack pops: 1
Stack additions: [0x2e9, V196]
Exit stack: [V11, 0x2e9, V196]

================================

Block 0x2e9
[0x2e9:0x2fe]
---
Predecessors: [0x5f6]
Successors: []
---
0x2e9 JUMPDEST
0x2ea PUSH1 0x40
0x2ec MLOAD
0x2ed DUP1
0x2ee DUP3
0x2ef DUP2
0x2f0 MSTORE
0x2f1 PUSH1 0x20
0x2f3 ADD
0x2f4 SWAP2
0x2f5 POP
0x2f6 POP
0x2f7 PUSH1 0x40
0x2f9 MLOAD
0x2fa DUP1
0x2fb SWAP2
0x2fc SUB
0x2fd SWAP1
0x2fe RETURN
---
0x2e9: JUMPDEST 
0x2ea: V200 = 0x40
0x2ec: V201 = M[0x40]
0x2f0: M[V201] = V412
0x2f1: V202 = 0x20
0x2f3: V203 = ADD 0x20 V201
0x2f7: V204 = 0x40
0x2f9: V205 = M[0x40]
0x2fc: V206 = SUB V203 V205
0x2fe: RETURN V205 V206
---
Entry stack: [V11, V412]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2ff
[0x2ff:0x306]
---
Predecessors: [0x83]
Successors: [0x307, 0x30b]
---
0x2ff JUMPDEST
0x300 CALLVALUE
0x301 DUP1
0x302 ISZERO
0x303 PUSH2 0x30b
0x306 JUMPI
---
0x2ff: JUMPDEST 
0x300: V207 = CALLVALUE
0x302: V208 = ISZERO V207
0x303: V209 = 0x30b
0x306: JUMPI 0x30b V208
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V207]
Exit stack: [V11, V207]

================================

Block 0x307
[0x307:0x30a]
---
Predecessors: [0x2ff]
Successors: []
---
0x307 PUSH1 0x0
0x309 DUP1
0x30a REVERT
---
0x307: V210 = 0x0
0x30a: REVERT 0x0 0x0
---
Entry stack: [V11, V207]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V207]

================================

Block 0x30b
[0x30b:0x313]
---
Predecessors: [0x2ff]
Successors: [0x63e]
---
0x30b JUMPDEST
0x30c POP
0x30d PUSH2 0x314
0x310 PUSH2 0x63e
0x313 JUMP
---
0x30b: JUMPDEST 
0x30d: V211 = 0x314
0x310: V212 = 0x63e
0x313: JUMP 0x63e
---
Entry stack: [V11, V207]
Stack pops: 1
Stack additions: [0x314]
Exit stack: [V11, 0x314]

================================

Block 0x314
[0x314:0x355]
---
Predecessors: [0x63e]
Successors: []
---
0x314 JUMPDEST
0x315 PUSH1 0x40
0x317 MLOAD
0x318 DUP1
0x319 DUP3
0x31a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x32f AND
0x330 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x345 AND
0x346 DUP2
0x347 MSTORE
0x348 PUSH1 0x20
0x34a ADD
0x34b SWAP2
0x34c POP
0x34d POP
0x34e PUSH1 0x40
0x350 MLOAD
0x351 DUP1
0x352 SWAP2
0x353 SUB
0x354 SWAP1
0x355 RETURN
---
0x314: JUMPDEST 
0x315: V213 = 0x40
0x317: V214 = M[0x40]
0x31a: V215 = 0xffffffffffffffffffffffffffffffffffffffff
0x32f: V216 = AND 0xffffffffffffffffffffffffffffffffffffffff V419
0x330: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x345: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x347: M[V214] = V218
0x348: V219 = 0x20
0x34a: V220 = ADD 0x20 V214
0x34e: V221 = 0x40
0x350: V222 = M[0x40]
0x353: V223 = SUB V220 V222
0x355: RETURN V222 V223
---
Entry stack: [V11, 0x314, V419]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x314]

================================

Block 0x356
[0x356:0x35d]
---
Predecessors: [0x8e]
Successors: [0x35e, 0x362]
---
0x356 JUMPDEST
0x357 CALLVALUE
0x358 DUP1
0x359 ISZERO
0x35a PUSH2 0x362
0x35d JUMPI
---
0x356: JUMPDEST 
0x357: V224 = CALLVALUE
0x359: V225 = ISZERO V224
0x35a: V226 = 0x362
0x35d: JUMPI 0x362 V225
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V224]
Exit stack: [V11, V224]

================================

Block 0x35e
[0x35e:0x361]
---
Predecessors: [0x356]
Successors: []
---
0x35e PUSH1 0x0
0x360 DUP1
0x361 REVERT
---
0x35e: V227 = 0x0
0x361: REVERT 0x0 0x0
---
Entry stack: [V11, V224]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V224]

================================

Block 0x362
[0x362:0x36a]
---
Predecessors: [0x356]
Successors: [0x663]
---
0x362 JUMPDEST
0x363 POP
0x364 PUSH2 0x36b
0x367 PUSH2 0x663
0x36a JUMP
---
0x362: JUMPDEST 
0x364: V228 = 0x36b
0x367: V229 = 0x663
0x36a: JUMP 0x663
---
Entry stack: [V11, V224]
Stack pops: 1
Stack additions: [0x36b]
Exit stack: [V11, 0x36b]

================================

Block 0x36b
[0x36b:0x38f]
---
Predecessors: [0x663]
Successors: [0x390]
---
0x36b JUMPDEST
0x36c PUSH1 0x40
0x36e MLOAD
0x36f DUP1
0x370 DUP1
0x371 PUSH1 0x20
0x373 ADD
0x374 DUP3
0x375 DUP2
0x376 SUB
0x377 DUP3
0x378 MSTORE
0x379 DUP4
0x37a DUP2
0x37b DUP2
0x37c MLOAD
0x37d DUP2
0x37e MSTORE
0x37f PUSH1 0x20
0x381 ADD
0x382 SWAP2
0x383 POP
0x384 DUP1
0x385 MLOAD
0x386 SWAP1
0x387 PUSH1 0x20
0x389 ADD
0x38a SWAP1
0x38b DUP1
0x38c DUP4
0x38d DUP4
0x38e PUSH1 0x0
---
0x36b: JUMPDEST 
0x36c: V230 = 0x40
0x36e: V231 = M[0x40]
0x371: V232 = 0x20
0x373: V233 = ADD 0x20 V231
0x376: V234 = SUB V233 V231
0x378: M[V231] = V234
0x37c: V235 = M[V421]
0x37e: M[V233] = V235
0x37f: V236 = 0x20
0x381: V237 = ADD 0x20 V233
0x385: V238 = M[V421]
0x387: V239 = 0x20
0x389: V240 = ADD 0x20 V421
0x38e: V241 = 0x0
---
Entry stack: [V11, 0x36b, V421]
Stack pops: 1
Stack additions: [S0, V231, V231, V237, V240, V238, V238, V237, V240, 0x0]
Exit stack: [V11, 0x36b, V421, V231, V231, V237, V240, V238, V238, V237, V240, 0x0]

================================

Block 0x390
[0x390:0x398]
---
Predecessors: [0x36b, 0x399]
Successors: [0x399, 0x3ab]
---
0x390 JUMPDEST
0x391 DUP4
0x392 DUP2
0x393 LT
0x394 ISZERO
0x395 PUSH2 0x3ab
0x398 JUMPI
---
0x390: JUMPDEST 
0x393: V242 = LT S0 V238
0x394: V243 = ISZERO V242
0x395: V244 = 0x3ab
0x398: JUMPI 0x3ab V243
---
Entry stack: [V11, 0x36b, V421, V231, V231, V237, V240, V238, V238, V237, V240, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x36b, V421, V231, V231, V237, V240, V238, V238, V237, V240, S0]

================================

Block 0x399
[0x399:0x3aa]
---
Predecessors: [0x390]
Successors: [0x390]
---
0x399 DUP1
0x39a DUP3
0x39b ADD
0x39c MLOAD
0x39d DUP2
0x39e DUP5
0x39f ADD
0x3a0 MSTORE
0x3a1 PUSH1 0x20
0x3a3 DUP2
0x3a4 ADD
0x3a5 SWAP1
0x3a6 POP
0x3a7 PUSH2 0x390
0x3aa JUMP
---
0x39b: V245 = ADD V240 S0
0x39c: V246 = M[V245]
0x39f: V247 = ADD V237 S0
0x3a0: M[V247] = V246
0x3a1: V248 = 0x20
0x3a4: V249 = ADD S0 0x20
0x3a7: V250 = 0x390
0x3aa: JUMP 0x390
---
Entry stack: [V11, 0x36b, V421, V231, V231, V237, V240, V238, V238, V237, V240, S0]
Stack pops: 3
Stack additions: [S2, S1, V249]
Exit stack: [V11, 0x36b, V421, V231, V231, V237, V240, V238, V238, V237, V240, V249]

================================

Block 0x3ab
[0x3ab:0x3be]
---
Predecessors: [0x390]
Successors: [0x3bf, 0x3d8]
---
0x3ab JUMPDEST
0x3ac POP
0x3ad POP
0x3ae POP
0x3af POP
0x3b0 SWAP1
0x3b1 POP
0x3b2 SWAP1
0x3b3 DUP2
0x3b4 ADD
0x3b5 SWAP1
0x3b6 PUSH1 0x1f
0x3b8 AND
0x3b9 DUP1
0x3ba ISZERO
0x3bb PUSH2 0x3d8
0x3be JUMPI
---
0x3ab: JUMPDEST 
0x3b4: V251 = ADD V238 V237
0x3b6: V252 = 0x1f
0x3b8: V253 = AND 0x1f V238
0x3ba: V254 = ISZERO V253
0x3bb: V255 = 0x3d8
0x3be: JUMPI 0x3d8 V254
---
Entry stack: [V11, 0x36b, V421, V231, V231, V237, V240, V238, V238, V237, V240, S0]
Stack pops: 7
Stack additions: [V251, V253]
Exit stack: [V11, 0x36b, V421, V231, V231, V251, V253]

================================

Block 0x3bf
[0x3bf:0x3d7]
---
Predecessors: [0x3ab]
Successors: [0x3d8]
---
0x3bf DUP1
0x3c0 DUP3
0x3c1 SUB
0x3c2 DUP1
0x3c3 MLOAD
0x3c4 PUSH1 0x1
0x3c6 DUP4
0x3c7 PUSH1 0x20
0x3c9 SUB
0x3ca PUSH2 0x100
0x3cd EXP
0x3ce SUB
0x3cf NOT
0x3d0 AND
0x3d1 DUP2
0x3d2 MSTORE
0x3d3 PUSH1 0x20
0x3d5 ADD
0x3d6 SWAP2
0x3d7 POP
---
0x3c1: V256 = SUB V251 V253
0x3c3: V257 = M[V256]
0x3c4: V258 = 0x1
0x3c7: V259 = 0x20
0x3c9: V260 = SUB 0x20 V253
0x3ca: V261 = 0x100
0x3cd: V262 = EXP 0x100 V260
0x3ce: V263 = SUB V262 0x1
0x3cf: V264 = NOT V263
0x3d0: V265 = AND V264 V257
0x3d2: M[V256] = V265
0x3d3: V266 = 0x20
0x3d5: V267 = ADD 0x20 V256
---
Entry stack: [V11, 0x36b, V421, V231, V231, V251, V253]
Stack pops: 2
Stack additions: [V267, S0]
Exit stack: [V11, 0x36b, V421, V231, V231, V267, V253]

================================

Block 0x3d8
[0x3d8:0x3e5]
---
Predecessors: [0x3ab, 0x3bf]
Successors: []
---
0x3d8 JUMPDEST
0x3d9 POP
0x3da SWAP3
0x3db POP
0x3dc POP
0x3dd POP
0x3de PUSH1 0x40
0x3e0 MLOAD
0x3e1 DUP1
0x3e2 SWAP2
0x3e3 SUB
0x3e4 SWAP1
0x3e5 RETURN
---
0x3d8: JUMPDEST 
0x3de: V268 = 0x40
0x3e0: V269 = M[0x40]
0x3e3: V270 = SUB S1 V269
0x3e5: RETURN V269 V270
---
Entry stack: [V11, 0x36b, V421, V231, V231, S1, V253]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x36b]

================================

Block 0x3e6
[0x3e6:0x3ed]
---
Predecessors: [0x99]
Successors: [0x3ee, 0x3f2]
---
0x3e6 JUMPDEST
0x3e7 CALLVALUE
0x3e8 DUP1
0x3e9 ISZERO
0x3ea PUSH2 0x3f2
0x3ed JUMPI
---
0x3e6: JUMPDEST 
0x3e7: V271 = CALLVALUE
0x3e9: V272 = ISZERO V271
0x3ea: V273 = 0x3f2
0x3ed: JUMPI 0x3f2 V272
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V271]
Exit stack: [V11, V271]

================================

Block 0x3ee
[0x3ee:0x3f1]
---
Predecessors: [0x3e6]
Successors: []
---
0x3ee PUSH1 0x0
0x3f0 DUP1
0x3f1 REVERT
---
0x3ee: V274 = 0x0
0x3f1: REVERT 0x0 0x0
---
Entry stack: [V11, V271]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V271]

================================

Block 0x3f2
[0x3f2:0x430]
---
Predecessors: [0x3e6]
Successors: [0x69c]
---
0x3f2 JUMPDEST
0x3f3 POP
0x3f4 PUSH2 0x431
0x3f7 PUSH1 0x4
0x3f9 DUP1
0x3fa CALLDATASIZE
0x3fb SUB
0x3fc DUP2
0x3fd ADD
0x3fe SWAP1
0x3ff DUP1
0x400 DUP1
0x401 CALLDATALOAD
0x402 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x417 AND
0x418 SWAP1
0x419 PUSH1 0x20
0x41b ADD
0x41c SWAP1
0x41d SWAP3
0x41e SWAP2
0x41f SWAP1
0x420 DUP1
0x421 CALLDATALOAD
0x422 SWAP1
0x423 PUSH1 0x20
0x425 ADD
0x426 SWAP1
0x427 SWAP3
0x428 SWAP2
0x429 SWAP1
0x42a POP
0x42b POP
0x42c POP
0x42d PUSH2 0x69c
0x430 JUMP
---
0x3f2: JUMPDEST 
0x3f4: V275 = 0x431
0x3f7: V276 = 0x4
0x3fa: V277 = CALLDATASIZE
0x3fb: V278 = SUB V277 0x4
0x3fd: V279 = ADD 0x4 V278
0x401: V280 = CALLDATALOAD 0x4
0x402: V281 = 0xffffffffffffffffffffffffffffffffffffffff
0x417: V282 = AND 0xffffffffffffffffffffffffffffffffffffffff V280
0x419: V283 = 0x20
0x41b: V284 = ADD 0x20 0x4
0x421: V285 = CALLDATALOAD 0x24
0x423: V286 = 0x20
0x425: V287 = ADD 0x20 0x24
0x42d: V288 = 0x69c
0x430: JUMP 0x69c
---
Entry stack: [V11, V271]
Stack pops: 1
Stack additions: [0x431, V282, V285]
Exit stack: [V11, 0x431, V282, V285]

================================

Block 0x431
[0x431:0x44a]
---
Predecessors: [0x8a1]
Successors: []
---
0x431 JUMPDEST
0x432 PUSH1 0x40
0x434 MLOAD
0x435 DUP1
0x436 DUP3
0x437 ISZERO
0x438 ISZERO
0x439 ISZERO
0x43a ISZERO
0x43b DUP2
0x43c MSTORE
0x43d PUSH1 0x20
0x43f ADD
0x440 SWAP2
0x441 POP
0x442 POP
0x443 PUSH1 0x40
0x445 MLOAD
0x446 DUP1
0x447 SWAP2
0x448 SUB
0x449 SWAP1
0x44a RETURN
---
0x431: JUMPDEST 
0x432: V289 = 0x40
0x434: V290 = M[0x40]
0x437: V291 = ISZERO 0x1
0x438: V292 = ISZERO 0x0
0x439: V293 = ISZERO 0x1
0x43a: V294 = ISZERO 0x0
0x43c: M[V290] = 0x1
0x43d: V295 = 0x20
0x43f: V296 = ADD 0x20 V290
0x443: V297 = 0x40
0x445: V298 = M[0x40]
0x448: V299 = SUB V296 V298
0x44a: RETURN V298 V299
---
Entry stack: [V11, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x44b
[0x44b:0x452]
---
Predecessors: [0xa4]
Successors: [0x453, 0x457]
---
0x44b JUMPDEST
0x44c CALLVALUE
0x44d DUP1
0x44e ISZERO
0x44f PUSH2 0x457
0x452 JUMPI
---
0x44b: JUMPDEST 
0x44c: V300 = CALLVALUE
0x44e: V301 = ISZERO V300
0x44f: V302 = 0x457
0x452: JUMPI 0x457 V301
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V300]
Exit stack: [V11, V300]

================================

Block 0x453
[0x453:0x456]
---
Predecessors: [0x44b]
Successors: []
---
0x453 PUSH1 0x0
0x455 DUP1
0x456 REVERT
---
0x453: V303 = 0x0
0x456: REVERT 0x0 0x0
---
Entry stack: [V11, V300]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V300]

================================

Block 0x457
[0x457:0x45f]
---
Predecessors: [0x44b]
Successors: [0x954]
---
0x457 JUMPDEST
0x458 POP
0x459 PUSH2 0x460
0x45c PUSH2 0x954
0x45f JUMP
---
0x457: JUMPDEST 
0x459: V304 = 0x460
0x45c: V305 = 0x954
0x45f: JUMP 0x954
---
Entry stack: [V11, V300]
Stack pops: 1
Stack additions: [0x460]
Exit stack: [V11, 0x460]

================================

Block 0x460
[0x460:0x479]
---
Predecessors: [0x954]
Successors: []
---
0x460 JUMPDEST
0x461 PUSH1 0x40
0x463 MLOAD
0x464 DUP1
0x465 DUP3
0x466 ISZERO
0x467 ISZERO
0x468 ISZERO
0x469 ISZERO
0x46a DUP2
0x46b MSTORE
0x46c PUSH1 0x20
0x46e ADD
0x46f SWAP2
0x470 POP
0x471 POP
0x472 PUSH1 0x40
0x474 MLOAD
0x475 DUP1
0x476 SWAP2
0x477 SUB
0x478 SWAP1
0x479 RETURN
---
0x460: JUMPDEST 
0x461: V306 = 0x40
0x463: V307 = M[0x40]
0x466: V308 = ISZERO V578
0x467: V309 = ISZERO V308
0x468: V310 = ISZERO V309
0x469: V311 = ISZERO V310
0x46b: M[V307] = V311
0x46c: V312 = 0x20
0x46e: V313 = ADD 0x20 V307
0x472: V314 = 0x40
0x474: V315 = M[0x40]
0x477: V316 = SUB V313 V315
0x479: RETURN V315 V316
---
Entry stack: [V11, 0x460, V578]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x460]

================================

Block 0x47a
[0x47a:0x481]
---
Predecessors: [0xaf]
Successors: [0x482, 0x486]
---
0x47a JUMPDEST
0x47b CALLVALUE
0x47c DUP1
0x47d ISZERO
0x47e PUSH2 0x486
0x481 JUMPI
---
0x47a: JUMPDEST 
0x47b: V317 = CALLVALUE
0x47d: V318 = ISZERO V317
0x47e: V319 = 0x486
0x481: JUMPI 0x486 V318
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V317]
Exit stack: [V11, V317]

================================

Block 0x482
[0x482:0x485]
---
Predecessors: [0x47a]
Successors: []
---
0x482 PUSH1 0x0
0x484 DUP1
0x485 REVERT
---
0x482: V320 = 0x0
0x485: REVERT 0x0 0x0
---
Entry stack: [V11, V317]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V317]

================================

Block 0x486
[0x486:0x4ba]
---
Predecessors: [0x47a]
Successors: [0x967]
---
0x486 JUMPDEST
0x487 POP
0x488 PUSH2 0x4bb
0x48b PUSH1 0x4
0x48d DUP1
0x48e CALLDATASIZE
0x48f SUB
0x490 DUP2
0x491 ADD
0x492 SWAP1
0x493 DUP1
0x494 DUP1
0x495 CALLDATALOAD
0x496 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ab AND
0x4ac SWAP1
0x4ad PUSH1 0x20
0x4af ADD
0x4b0 SWAP1
0x4b1 SWAP3
0x4b2 SWAP2
0x4b3 SWAP1
0x4b4 POP
0x4b5 POP
0x4b6 POP
0x4b7 PUSH2 0x967
0x4ba JUMP
---
0x486: JUMPDEST 
0x488: V321 = 0x4bb
0x48b: V322 = 0x4
0x48e: V323 = CALLDATASIZE
0x48f: V324 = SUB V323 0x4
0x491: V325 = ADD 0x4 V324
0x495: V326 = CALLDATALOAD 0x4
0x496: V327 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ab: V328 = AND 0xffffffffffffffffffffffffffffffffffffffff V326
0x4ad: V329 = 0x20
0x4af: V330 = ADD 0x20 0x4
0x4b7: V331 = 0x967
0x4ba: JUMP 0x967
---
Entry stack: [V11, V317]
Stack pops: 1
Stack additions: [0x4bb, V328]
Exit stack: [V11, 0x4bb, V328]

================================

Block 0x4bb
[0x4bb:0x4bc]
---
Predecessors: [0x9fe]
Successors: []
---
0x4bb JUMPDEST
0x4bc STOP
---
0x4bb: JUMPDEST 
0x4bc: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4bd
[0x4bd:0x4f5]
---
Predecessors: [0xcb]
Successors: [0xd4]
---
0x4bd JUMPDEST
0x4be PUSH1 0x40
0x4c0 DUP1
0x4c1 MLOAD
0x4c2 SWAP1
0x4c3 DUP2
0x4c4 ADD
0x4c5 PUSH1 0x40
0x4c7 MSTORE
0x4c8 DUP1
0x4c9 PUSH1 0xf
0x4cb DUP2
0x4cc MSTORE
0x4cd PUSH1 0x20
0x4cf ADD
0x4d0 PUSH32 0x5769736520426c6f636b636861696e0000000000000000000000000000000000
0x4f1 DUP2
0x4f2 MSTORE
0x4f3 POP
0x4f4 DUP2
0x4f5 JUMP
---
0x4bd: JUMPDEST 
0x4be: V332 = 0x40
0x4c1: V333 = M[0x40]
0x4c4: V334 = ADD V333 0x40
0x4c5: V335 = 0x40
0x4c7: M[0x40] = V334
0x4c9: V336 = 0xf
0x4cc: M[V333] = 0xf
0x4cd: V337 = 0x20
0x4cf: V338 = ADD 0x20 V333
0x4d0: V339 = 0x5769736520426c6f636b636861696e0000000000000000000000000000000000
0x4f2: M[V338] = 0x5769736520426c6f636b636861696e0000000000000000000000000000000000
0x4f5: JUMP 0xd4
---
Entry stack: [V11, 0xd4]
Stack pops: 1
Stack additions: [S0, V333]
Exit stack: [V11, 0xd4, V333]

================================

Block 0x4f6
[0x4f6:0x54c]
---
Predecessors: [0x15b]
Successors: [0x54d, 0x551]
---
0x4f6 JUMPDEST
0x4f7 PUSH1 0x0
0x4f9 DUP1
0x4fa SWAP1
0x4fb SLOAD
0x4fc SWAP1
0x4fd PUSH2 0x100
0x500 EXP
0x501 SWAP1
0x502 DIV
0x503 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x518 AND
0x519 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x52e AND
0x52f CALLER
0x530 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x545 AND
0x546 EQ
0x547 ISZERO
0x548 ISZERO
0x549 PUSH2 0x551
0x54c JUMPI
---
0x4f6: JUMPDEST 
0x4f7: V340 = 0x0
0x4fb: V341 = S[0x0]
0x4fd: V342 = 0x100
0x500: V343 = EXP 0x100 0x0
0x502: V344 = DIV V341 0x1
0x503: V345 = 0xffffffffffffffffffffffffffffffffffffffff
0x518: V346 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x519: V347 = 0xffffffffffffffffffffffffffffffffffffffff
0x52e: V348 = AND 0xffffffffffffffffffffffffffffffffffffffff V346
0x52f: V349 = CALLER
0x530: V350 = 0xffffffffffffffffffffffffffffffffffffffff
0x545: V351 = AND 0xffffffffffffffffffffffffffffffffffffffff V349
0x546: V352 = EQ V351 V348
0x547: V353 = ISZERO V352
0x548: V354 = ISZERO V353
0x549: V355 = 0x551
0x54c: JUMPI 0x551 V354
---
Entry stack: [V11, 0x17c, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17c, V107]

================================

Block 0x54d
[0x54d:0x550]
---
Predecessors: [0x4f6]
Successors: []
---
0x54d PUSH1 0x0
0x54f DUP1
0x550 REVERT
---
0x54d: V356 = 0x0
0x550: REVERT 0x0 0x0
---
Entry stack: [V11, 0x17c, V107]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17c, V107]

================================

Block 0x551
[0x551:0x56e]
---
Predecessors: [0x4f6]
Successors: [0x17c]
---
0x551 JUMPDEST
0x552 DUP1
0x553 ISZERO
0x554 PUSH1 0x0
0x556 PUSH1 0x14
0x558 PUSH2 0x100
0x55b EXP
0x55c DUP2
0x55d SLOAD
0x55e DUP2
0x55f PUSH1 0xff
0x561 MUL
0x562 NOT
0x563 AND
0x564 SWAP1
0x565 DUP4
0x566 ISZERO
0x567 ISZERO
0x568 MUL
0x569 OR
0x56a SWAP1
0x56b SSTORE
0x56c POP
0x56d POP
0x56e JUMP
---
0x551: JUMPDEST 
0x553: V357 = ISZERO V107
0x554: V358 = 0x0
0x556: V359 = 0x14
0x558: V360 = 0x100
0x55b: V361 = EXP 0x100 0x14
0x55d: V362 = S[0x0]
0x55f: V363 = 0xff
0x561: V364 = MUL 0xff 0x10000000000000000000000000000000000000000
0x562: V365 = NOT 0xff0000000000000000000000000000000000000000
0x563: V366 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V362
0x566: V367 = ISZERO V357
0x567: V368 = ISZERO V367
0x568: V369 = MUL V368 0x10000000000000000000000000000000000000000
0x569: V370 = OR V369 V366
0x56b: S[0x0] = V370
0x56e: JUMP 0x17c
---
Entry stack: [V11, 0x17c, V107]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x56f
[0x56f:0x574]
---
Predecessors: [0x18a]
Successors: [0x193]
---
0x56f JUMPDEST
0x570 PUSH1 0x3
0x572 SLOAD
0x573 DUP2
0x574 JUMP
---
0x56f: JUMPDEST 
0x570: V371 = 0x3
0x572: V372 = S[0x3]
0x574: JUMP 0x193
---
Entry stack: [V11, 0x193]
Stack pops: 1
Stack additions: [S0, V372]
Exit stack: [V11, 0x193, V372]

================================

Block 0x575
[0x575:0x58c]
---
Predecessors: [0x1b5]
Successors: [0x1be]
---
0x575 JUMPDEST
0x576 PUSH20 0xafd390d55d2e02fdf715e77df120b8e9cee52f30
0x58b DUP2
0x58c JUMP
---
0x575: JUMPDEST 
0x576: V373 = 0xafd390d55d2e02fdf715e77df120b8e9cee52f30
0x58c: JUMP 0x1be
---
Entry stack: [V11, 0x1be]
Stack pops: 1
Stack additions: [S0, 0xafd390d55d2e02fdf715e77df120b8e9cee52f30]
Exit stack: [V11, 0x1be, 0xafd390d55d2e02fdf715e77df120b8e9cee52f30]

================================

Block 0x58d
[0x58d:0x591]
---
Predecessors: [0x20c]
Successors: [0x215]
---
0x58d JUMPDEST
0x58e PUSH1 0x12
0x590 DUP2
0x591 JUMP
---
0x58d: JUMPDEST 
0x58e: V374 = 0x12
0x591: JUMP 0x215
---
Entry stack: [V11, 0x215]
Stack pops: 1
Stack additions: [S0, 0x12]
Exit stack: [V11, 0x215, 0x12]

================================

Block 0x592
[0x592:0x5b6]
---
Predecessors: [0x23d]
Successors: [0x292]
---
0x592 JUMPDEST
0x593 PUSH1 0x2
0x595 PUSH1 0x20
0x597 MSTORE
0x598 DUP2
0x599 PUSH1 0x0
0x59b MSTORE
0x59c PUSH1 0x40
0x59e PUSH1 0x0
0x5a0 SHA3
0x5a1 PUSH1 0x20
0x5a3 MSTORE
0x5a4 DUP1
0x5a5 PUSH1 0x0
0x5a7 MSTORE
0x5a8 PUSH1 0x40
0x5aa PUSH1 0x0
0x5ac SHA3
0x5ad PUSH1 0x0
0x5af SWAP2
0x5b0 POP
0x5b1 SWAP2
0x5b2 POP
0x5b3 POP
0x5b4 SLOAD
0x5b5 DUP2
0x5b6 JUMP
---
0x592: JUMPDEST 
0x593: V375 = 0x2
0x595: V376 = 0x20
0x597: M[0x20] = 0x2
0x599: V377 = 0x0
0x59b: M[0x0] = V169
0x59c: V378 = 0x40
0x59e: V379 = 0x0
0x5a0: V380 = SHA3 0x0 0x40
0x5a1: V381 = 0x20
0x5a3: M[0x20] = V380
0x5a5: V382 = 0x0
0x5a7: M[0x0] = V174
0x5a8: V383 = 0x40
0x5aa: V384 = 0x0
0x5ac: V385 = SHA3 0x0 0x40
0x5ad: V386 = 0x0
0x5b4: V387 = S[V385]
0x5b6: JUMP 0x292
---
Entry stack: [V11, 0x292, V169, V174]
Stack pops: 3
Stack additions: [S2, V387]
Exit stack: [V11, 0x292, V387]

================================

Block 0x5b7
[0x5b7:0x5f1]
---
Predecessors: [0x2b4]
Successors: [0x5f2, 0x5f6]
---
0x5b7 JUMPDEST
0x5b8 PUSH1 0x0
0x5ba DUP2
0x5bb PUSH1 0x0
0x5bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5d2 AND
0x5d3 DUP2
0x5d4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e9 AND
0x5ea EQ
0x5eb ISZERO
0x5ec ISZERO
0x5ed ISZERO
0x5ee PUSH2 0x5f6
0x5f1 JUMPI
---
0x5b7: JUMPDEST 
0x5b8: V388 = 0x0
0x5bb: V389 = 0x0
0x5bd: V390 = 0xffffffffffffffffffffffffffffffffffffffff
0x5d2: V391 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x5d4: V392 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e9: V393 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x5ea: V394 = EQ V393 0x0
0x5eb: V395 = ISZERO V394
0x5ec: V396 = ISZERO V395
0x5ed: V397 = ISZERO V396
0x5ee: V398 = 0x5f6
0x5f1: JUMPI 0x5f6 V397
---
Entry stack: [V11, 0x2e9, V196]
Stack pops: 1
Stack additions: [S0, 0x0, S0]
Exit stack: [V11, 0x2e9, V196, 0x0, V196]

================================

Block 0x5f2
[0x5f2:0x5f5]
---
Predecessors: [0x5b7]
Successors: []
---
0x5f2 PUSH1 0x0
0x5f4 DUP1
0x5f5 REVERT
---
0x5f2: V399 = 0x0
0x5f5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x2e9, V196, 0x0, V196]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x2e9, V196, 0x0, V196]

================================

Block 0x5f6
[0x5f6:0x63d]
---
Predecessors: [0x5b7]
Successors: [0x2e9]
---
0x5f6 JUMPDEST
0x5f7 PUSH1 0x1
0x5f9 PUSH1 0x0
0x5fb DUP5
0x5fc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x611 AND
0x612 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x627 AND
0x628 DUP2
0x629 MSTORE
0x62a PUSH1 0x20
0x62c ADD
0x62d SWAP1
0x62e DUP2
0x62f MSTORE
0x630 PUSH1 0x20
0x632 ADD
0x633 PUSH1 0x0
0x635 SHA3
0x636 SLOAD
0x637 SWAP2
0x638 POP
0x639 POP
0x63a SWAP2
0x63b SWAP1
0x63c POP
0x63d JUMP
---
0x5f6: JUMPDEST 
0x5f7: V400 = 0x1
0x5f9: V401 = 0x0
0x5fc: V402 = 0xffffffffffffffffffffffffffffffffffffffff
0x611: V403 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x612: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x627: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V403
0x629: M[0x0] = V405
0x62a: V406 = 0x20
0x62c: V407 = ADD 0x20 0x0
0x62f: M[0x20] = 0x1
0x630: V408 = 0x20
0x632: V409 = ADD 0x20 0x20
0x633: V410 = 0x0
0x635: V411 = SHA3 0x0 0x40
0x636: V412 = S[V411]
0x63d: JUMP 0x2e9
---
Entry stack: [V11, 0x2e9, V196, 0x0, V196]
Stack pops: 4
Stack additions: [V412]
Exit stack: [V11, V412]

================================

Block 0x63e
[0x63e:0x662]
---
Predecessors: [0x30b]
Successors: [0x314]
---
0x63e JUMPDEST
0x63f PUSH1 0x0
0x641 DUP1
0x642 SWAP1
0x643 SLOAD
0x644 SWAP1
0x645 PUSH2 0x100
0x648 EXP
0x649 SWAP1
0x64a DIV
0x64b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x660 AND
0x661 DUP2
0x662 JUMP
---
0x63e: JUMPDEST 
0x63f: V413 = 0x0
0x643: V414 = S[0x0]
0x645: V415 = 0x100
0x648: V416 = EXP 0x100 0x0
0x64a: V417 = DIV V414 0x1
0x64b: V418 = 0xffffffffffffffffffffffffffffffffffffffff
0x660: V419 = AND 0xffffffffffffffffffffffffffffffffffffffff V417
0x662: JUMP 0x314
---
Entry stack: [V11, 0x314]
Stack pops: 1
Stack additions: [S0, V419]
Exit stack: [V11, 0x314, V419]

================================

Block 0x663
[0x663:0x69b]
---
Predecessors: [0x362]
Successors: [0x36b]
---
0x663 JUMPDEST
0x664 PUSH1 0x40
0x666 DUP1
0x667 MLOAD
0x668 SWAP1
0x669 DUP2
0x66a ADD
0x66b PUSH1 0x40
0x66d MSTORE
0x66e DUP1
0x66f PUSH1 0x2
0x671 DUP2
0x672 MSTORE
0x673 PUSH1 0x20
0x675 ADD
0x676 PUSH32 0x5742000000000000000000000000000000000000000000000000000000000000
0x697 DUP2
0x698 MSTORE
0x699 POP
0x69a DUP2
0x69b JUMP
---
0x663: JUMPDEST 
0x664: V420 = 0x40
0x667: V421 = M[0x40]
0x66a: V422 = ADD V421 0x40
0x66b: V423 = 0x40
0x66d: M[0x40] = V422
0x66f: V424 = 0x2
0x672: M[V421] = 0x2
0x673: V425 = 0x20
0x675: V426 = ADD 0x20 V421
0x676: V427 = 0x5742000000000000000000000000000000000000000000000000000000000000
0x698: M[V426] = 0x5742000000000000000000000000000000000000000000000000000000000000
0x69b: JUMP 0x36b
---
Entry stack: [V11, 0x36b]
Stack pops: 1
Stack additions: [S0, V421]
Exit stack: [V11, 0x36b, V421]

================================

Block 0x69c
[0x69c:0x6d6]
---
Predecessors: [0x3f2]
Successors: [0x6d7, 0x6db]
---
0x69c JUMPDEST
0x69d PUSH1 0x0
0x69f DUP3
0x6a0 PUSH1 0x0
0x6a2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b7 AND
0x6b8 DUP2
0x6b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6ce AND
0x6cf EQ
0x6d0 ISZERO
0x6d1 ISZERO
0x6d2 ISZERO
0x6d3 PUSH2 0x6db
0x6d6 JUMPI
---
0x69c: JUMPDEST 
0x69d: V428 = 0x0
0x6a0: V429 = 0x0
0x6a2: V430 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b7: V431 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x6b9: V432 = 0xffffffffffffffffffffffffffffffffffffffff
0x6ce: V433 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x6cf: V434 = EQ V433 0x0
0x6d0: V435 = ISZERO V434
0x6d1: V436 = ISZERO V435
0x6d2: V437 = ISZERO V436
0x6d3: V438 = 0x6db
0x6d6: JUMPI 0x6db V437
---
Entry stack: [V11, 0x431, V282, V285]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1]
Exit stack: [V11, 0x431, V282, V285, 0x0, V282]

================================

Block 0x6d7
[0x6d7:0x6da]
---
Predecessors: [0x69c]
Successors: []
---
0x6d7 PUSH1 0x0
0x6d9 DUP1
0x6da REVERT
---
0x6d7: V439 = 0x0
0x6da: REVERT 0x0 0x0
---
Entry stack: [V11, 0x431, V282, V285, 0x0, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x431, V282, V285, 0x0, V282]

================================

Block 0x6db
[0x6db:0x6f1]
---
Predecessors: [0x69c]
Successors: [0x6f2, 0x6f3]
---
0x6db JUMPDEST
0x6dc PUSH1 0x0
0x6de PUSH1 0x14
0x6e0 SWAP1
0x6e1 SLOAD
0x6e2 SWAP1
0x6e3 PUSH2 0x100
0x6e6 EXP
0x6e7 SWAP1
0x6e8 DIV
0x6e9 PUSH1 0xff
0x6eb AND
0x6ec ISZERO
0x6ed ISZERO
0x6ee PUSH2 0x6f3
0x6f1 JUMPI
---
0x6db: JUMPDEST 
0x6dc: V440 = 0x0
0x6de: V441 = 0x14
0x6e1: V442 = S[0x0]
0x6e3: V443 = 0x100
0x6e6: V444 = EXP 0x100 0x14
0x6e8: V445 = DIV V442 0x10000000000000000000000000000000000000000
0x6e9: V446 = 0xff
0x6eb: V447 = AND 0xff V445
0x6ec: V448 = ISZERO V447
0x6ed: V449 = ISZERO V448
0x6ee: V450 = 0x6f3
0x6f1: JUMPI 0x6f3 V449
---
Entry stack: [V11, 0x431, V282, V285, 0x0, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x431, V282, V285, 0x0, V282]

================================

Block 0x6f2
[0x6f2:0x6f2]
---
Predecessors: [0x6db]
Successors: []
---
0x6f2 INVALID
---
0x6f2: INVALID 
---
Entry stack: [V11, 0x431, V282, V285, 0x0, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x431, V282, V285, 0x0, V282]

================================

Block 0x6f3
[0x6f3:0x73c]
---
Predecessors: [0x6db]
Successors: [0x73d, 0x7c1]
---
0x6f3 JUMPDEST
0x6f4 DUP3
0x6f5 PUSH1 0x1
0x6f7 PUSH1 0x0
0x6f9 CALLER
0x6fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x70f AND
0x710 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x725 AND
0x726 DUP2
0x727 MSTORE
0x728 PUSH1 0x20
0x72a ADD
0x72b SWAP1
0x72c DUP2
0x72d MSTORE
0x72e PUSH1 0x20
0x730 ADD
0x731 PUSH1 0x0
0x733 SHA3
0x734 SLOAD
0x735 LT
0x736 ISZERO
0x737 DUP1
0x738 ISZERO
0x739 PUSH2 0x7c1
0x73c JUMPI
---
0x6f3: JUMPDEST 
0x6f5: V451 = 0x1
0x6f7: V452 = 0x0
0x6f9: V453 = CALLER
0x6fa: V454 = 0xffffffffffffffffffffffffffffffffffffffff
0x70f: V455 = AND 0xffffffffffffffffffffffffffffffffffffffff V453
0x710: V456 = 0xffffffffffffffffffffffffffffffffffffffff
0x725: V457 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x727: M[0x0] = V457
0x728: V458 = 0x20
0x72a: V459 = ADD 0x20 0x0
0x72d: M[0x20] = 0x1
0x72e: V460 = 0x20
0x730: V461 = ADD 0x20 0x20
0x731: V462 = 0x0
0x733: V463 = SHA3 0x0 0x40
0x734: V464 = S[V463]
0x735: V465 = LT V464 V285
0x736: V466 = ISZERO V465
0x738: V467 = ISZERO V466
0x739: V468 = 0x7c1
0x73c: JUMPI 0x7c1 V467
---
Entry stack: [V11, 0x431, V282, V285, 0x0, V282]
Stack pops: 3
Stack additions: [S2, S1, S0, V466]
Exit stack: [V11, 0x431, V282, V285, 0x0, V282, V466]

================================

Block 0x73d
[0x73d:0x7c0]
---
Predecessors: [0x6f3]
Successors: [0x7c1]
---
0x73d POP
0x73e PUSH1 0x1
0x740 PUSH1 0x0
0x742 DUP6
0x743 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x758 AND
0x759 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x76e AND
0x76f DUP2
0x770 MSTORE
0x771 PUSH1 0x20
0x773 ADD
0x774 SWAP1
0x775 DUP2
0x776 MSTORE
0x777 PUSH1 0x20
0x779 ADD
0x77a PUSH1 0x0
0x77c SHA3
0x77d SLOAD
0x77e DUP4
0x77f PUSH1 0x1
0x781 PUSH1 0x0
0x783 DUP8
0x784 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x799 AND
0x79a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7af AND
0x7b0 DUP2
0x7b1 MSTORE
0x7b2 PUSH1 0x20
0x7b4 ADD
0x7b5 SWAP1
0x7b6 DUP2
0x7b7 MSTORE
0x7b8 PUSH1 0x20
0x7ba ADD
0x7bb PUSH1 0x0
0x7bd SHA3
0x7be SLOAD
0x7bf ADD
0x7c0 GT
---
0x73e: V469 = 0x1
0x740: V470 = 0x0
0x743: V471 = 0xffffffffffffffffffffffffffffffffffffffff
0x758: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x759: V473 = 0xffffffffffffffffffffffffffffffffffffffff
0x76e: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V472
0x770: M[0x0] = V474
0x771: V475 = 0x20
0x773: V476 = ADD 0x20 0x0
0x776: M[0x20] = 0x1
0x777: V477 = 0x20
0x779: V478 = ADD 0x20 0x20
0x77a: V479 = 0x0
0x77c: V480 = SHA3 0x0 0x40
0x77d: V481 = S[V480]
0x77f: V482 = 0x1
0x781: V483 = 0x0
0x784: V484 = 0xffffffffffffffffffffffffffffffffffffffff
0x799: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x79a: V486 = 0xffffffffffffffffffffffffffffffffffffffff
0x7af: V487 = AND 0xffffffffffffffffffffffffffffffffffffffff V485
0x7b1: M[0x0] = V487
0x7b2: V488 = 0x20
0x7b4: V489 = ADD 0x20 0x0
0x7b7: M[0x20] = 0x1
0x7b8: V490 = 0x20
0x7ba: V491 = ADD 0x20 0x20
0x7bb: V492 = 0x0
0x7bd: V493 = SHA3 0x0 0x40
0x7be: V494 = S[V493]
0x7bf: V495 = ADD V494 V285
0x7c0: V496 = GT V495 V481
---
Entry stack: [V11, 0x431, V282, V285, 0x0, V282, V466]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V496]
Exit stack: [V11, 0x431, V282, V285, 0x0, V282, V496]

================================

Block 0x7c1
[0x7c1:0x7c7]
---
Predecessors: [0x6f3, 0x73d]
Successors: [0x7c8, 0x7cc]
---
0x7c1 JUMPDEST
0x7c2 ISZERO
0x7c3 ISZERO
0x7c4 PUSH2 0x7cc
0x7c7 JUMPI
---
0x7c1: JUMPDEST 
0x7c2: V497 = ISZERO S0
0x7c3: V498 = ISZERO V497
0x7c4: V499 = 0x7cc
0x7c7: JUMPI 0x7cc V498
---
Entry stack: [V11, 0x431, V282, V285, 0x0, V282, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x431, V282, V285, 0x0, V282]

================================

Block 0x7c8
[0x7c8:0x7cb]
---
Predecessors: [0x7c1]
Successors: []
---
0x7c8 PUSH1 0x0
0x7ca DUP1
0x7cb REVERT
---
0x7c8: V500 = 0x0
0x7cb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x431, V282, V285, 0x0, V282]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x431, V282, V285, 0x0, V282]

================================

Block 0x7cc
[0x7cc:0x814]
---
Predecessors: [0x7c1]
Successors: [0xa41]
---
0x7cc JUMPDEST
0x7cd PUSH2 0x815
0x7d0 PUSH1 0x1
0x7d2 PUSH1 0x0
0x7d4 CALLER
0x7d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7ea AND
0x7eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x800 AND
0x801 DUP2
0x802 MSTORE
0x803 PUSH1 0x20
0x805 ADD
0x806 SWAP1
0x807 DUP2
0x808 MSTORE
0x809 PUSH1 0x20
0x80b ADD
0x80c PUSH1 0x0
0x80e SHA3
0x80f SLOAD
0x810 DUP5
0x811 PUSH2 0xa41
0x814 JUMP
---
0x7cc: JUMPDEST 
0x7cd: V501 = 0x815
0x7d0: V502 = 0x1
0x7d2: V503 = 0x0
0x7d4: V504 = CALLER
0x7d5: V505 = 0xffffffffffffffffffffffffffffffffffffffff
0x7ea: V506 = AND 0xffffffffffffffffffffffffffffffffffffffff V504
0x7eb: V507 = 0xffffffffffffffffffffffffffffffffffffffff
0x800: V508 = AND 0xffffffffffffffffffffffffffffffffffffffff V506
0x802: M[0x0] = V508
0x803: V509 = 0x20
0x805: V510 = ADD 0x20 0x0
0x808: M[0x20] = 0x1
0x809: V511 = 0x20
0x80b: V512 = ADD 0x20 0x20
0x80c: V513 = 0x0
0x80e: V514 = SHA3 0x0 0x40
0x80f: V515 = S[V514]
0x811: V516 = 0xa41
0x814: JUMP 0xa41
---
Entry stack: [V11, 0x431, V282, V285, 0x0, V282]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x815, V515, S2]
Exit stack: [V11, 0x431, V282, V285, 0x0, V282, 0x815, V515, V285]

================================

Block 0x815
[0x815:0x8a0]
---
Predecessors: [0xa4f]
Successors: [0xa5a]
---
0x815 JUMPDEST
0x816 PUSH1 0x1
0x818 PUSH1 0x0
0x81a CALLER
0x81b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x830 AND
0x831 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x846 AND
0x847 DUP2
0x848 MSTORE
0x849 PUSH1 0x20
0x84b ADD
0x84c SWAP1
0x84d DUP2
0x84e MSTORE
0x84f PUSH1 0x20
0x851 ADD
0x852 PUSH1 0x0
0x854 SHA3
0x855 DUP2
0x856 SWAP1
0x857 SSTORE
0x858 POP
0x859 PUSH2 0x8a1
0x85c PUSH1 0x1
0x85e PUSH1 0x0
0x860 DUP7
0x861 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x876 AND
0x877 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x88c AND
0x88d DUP2
0x88e MSTORE
0x88f PUSH1 0x20
0x891 ADD
0x892 SWAP1
0x893 DUP2
0x894 MSTORE
0x895 PUSH1 0x20
0x897 ADD
0x898 PUSH1 0x0
0x89a SHA3
0x89b SLOAD
0x89c DUP5
0x89d PUSH2 0xa5a
0x8a0 JUMP
---
0x815: JUMPDEST 
0x816: V517 = 0x1
0x818: V518 = 0x0
0x81a: V519 = CALLER
0x81b: V520 = 0xffffffffffffffffffffffffffffffffffffffff
0x830: V521 = AND 0xffffffffffffffffffffffffffffffffffffffff V519
0x831: V522 = 0xffffffffffffffffffffffffffffffffffffffff
0x846: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
0x848: M[0x0] = V523
0x849: V524 = 0x20
0x84b: V525 = ADD 0x20 0x0
0x84e: M[0x20] = 0x1
0x84f: V526 = 0x20
0x851: V527 = ADD 0x20 0x20
0x852: V528 = 0x0
0x854: V529 = SHA3 0x0 0x40
0x857: S[V529] = V625
0x859: V530 = 0x8a1
0x85c: V531 = 0x1
0x85e: V532 = 0x0
0x861: V533 = 0xffffffffffffffffffffffffffffffffffffffff
0x876: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x877: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x88c: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x88e: M[0x0] = V536
0x88f: V537 = 0x20
0x891: V538 = ADD 0x20 0x0
0x894: M[0x20] = 0x1
0x895: V539 = 0x20
0x897: V540 = ADD 0x20 0x20
0x898: V541 = 0x0
0x89a: V542 = SHA3 0x0 0x40
0x89b: V543 = S[V542]
0x89d: V544 = 0xa5a
0x8a0: JUMP 0xa5a
---
Entry stack: [V11, 0x431, V282, V285, 0x0, V282, V625]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x8a1, V543, S3]
Exit stack: [V11, 0x431, V282, V285, 0x0, V282, 0x8a1, V543, V285]

================================

Block 0x8a1
[0x8a1:0x953]
---
Predecessors: [0xa6e]
Successors: [0x431]
---
0x8a1 JUMPDEST
0x8a2 PUSH1 0x1
0x8a4 PUSH1 0x0
0x8a6 DUP7
0x8a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8bc AND
0x8bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8d2 AND
0x8d3 DUP2
0x8d4 MSTORE
0x8d5 PUSH1 0x20
0x8d7 ADD
0x8d8 SWAP1
0x8d9 DUP2
0x8da MSTORE
0x8db PUSH1 0x20
0x8dd ADD
0x8de PUSH1 0x0
0x8e0 SHA3
0x8e1 DUP2
0x8e2 SWAP1
0x8e3 SSTORE
0x8e4 POP
0x8e5 DUP4
0x8e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8fb AND
0x8fc CALLER
0x8fd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x912 AND
0x913 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x934 DUP6
0x935 PUSH1 0x40
0x937 MLOAD
0x938 DUP1
0x939 DUP3
0x93a DUP2
0x93b MSTORE
0x93c PUSH1 0x20
0x93e ADD
0x93f SWAP2
0x940 POP
0x941 POP
0x942 PUSH1 0x40
0x944 MLOAD
0x945 DUP1
0x946 SWAP2
0x947 SUB
0x948 SWAP1
0x949 LOG3
0x94a PUSH1 0x1
0x94c SWAP2
0x94d POP
0x94e POP
0x94f SWAP3
0x950 SWAP2
0x951 POP
0x952 POP
0x953 JUMP
---
0x8a1: JUMPDEST 
0x8a2: V545 = 0x1
0x8a4: V546 = 0x0
0x8a7: V547 = 0xffffffffffffffffffffffffffffffffffffffff
0x8bc: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x8bd: V549 = 0xffffffffffffffffffffffffffffffffffffffff
0x8d2: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x8d4: M[0x0] = V550
0x8d5: V551 = 0x20
0x8d7: V552 = ADD 0x20 0x0
0x8da: M[0x20] = 0x1
0x8db: V553 = 0x20
0x8dd: V554 = ADD 0x20 0x20
0x8de: V555 = 0x0
0x8e0: V556 = SHA3 0x0 0x40
0x8e3: S[V556] = V627
0x8e6: V557 = 0xffffffffffffffffffffffffffffffffffffffff
0x8fb: V558 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x8fc: V559 = CALLER
0x8fd: V560 = 0xffffffffffffffffffffffffffffffffffffffff
0x912: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V559
0x913: V562 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x935: V563 = 0x40
0x937: V564 = M[0x40]
0x93b: M[V564] = V285
0x93c: V565 = 0x20
0x93e: V566 = ADD 0x20 V564
0x942: V567 = 0x40
0x944: V568 = M[0x40]
0x947: V569 = SUB V566 V568
0x949: LOG V568 V569 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V561 V558
0x94a: V570 = 0x1
0x953: JUMP 0x431
---
Entry stack: [V11, 0x431, V282, V285, 0x0, V282, V627]
Stack pops: 6
Stack additions: [0x1]
Exit stack: [V11, 0x1]

================================

Block 0x954
[0x954:0x966]
---
Predecessors: [0x457]
Successors: [0x460]
---
0x954 JUMPDEST
0x955 PUSH1 0x0
0x957 PUSH1 0x14
0x959 SWAP1
0x95a SLOAD
0x95b SWAP1
0x95c PUSH2 0x100
0x95f EXP
0x960 SWAP1
0x961 DIV
0x962 PUSH1 0xff
0x964 AND
0x965 DUP2
0x966 JUMP
---
0x954: JUMPDEST 
0x955: V571 = 0x0
0x957: V572 = 0x14
0x95a: V573 = S[0x0]
0x95c: V574 = 0x100
0x95f: V575 = EXP 0x100 0x14
0x961: V576 = DIV V573 0x10000000000000000000000000000000000000000
0x962: V577 = 0xff
0x964: V578 = AND 0xff V576
0x966: JUMP 0x460
---
Entry stack: [V11, 0x460]
Stack pops: 1
Stack additions: [S0, V578]
Exit stack: [V11, 0x460, V578]

================================

Block 0x967
[0x967:0x9bd]
---
Predecessors: [0x486]
Successors: [0x9be, 0x9c2]
---
0x967 JUMPDEST
0x968 PUSH1 0x0
0x96a DUP1
0x96b SWAP1
0x96c SLOAD
0x96d SWAP1
0x96e PUSH2 0x100
0x971 EXP
0x972 SWAP1
0x973 DIV
0x974 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x989 AND
0x98a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99f AND
0x9a0 CALLER
0x9a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b6 AND
0x9b7 EQ
0x9b8 ISZERO
0x9b9 ISZERO
0x9ba PUSH2 0x9c2
0x9bd JUMPI
---
0x967: JUMPDEST 
0x968: V579 = 0x0
0x96c: V580 = S[0x0]
0x96e: V581 = 0x100
0x971: V582 = EXP 0x100 0x0
0x973: V583 = DIV V580 0x1
0x974: V584 = 0xffffffffffffffffffffffffffffffffffffffff
0x989: V585 = AND 0xffffffffffffffffffffffffffffffffffffffff V583
0x98a: V586 = 0xffffffffffffffffffffffffffffffffffffffff
0x99f: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V585
0x9a0: V588 = CALLER
0x9a1: V589 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b6: V590 = AND 0xffffffffffffffffffffffffffffffffffffffff V588
0x9b7: V591 = EQ V590 V587
0x9b8: V592 = ISZERO V591
0x9b9: V593 = ISZERO V592
0x9ba: V594 = 0x9c2
0x9bd: JUMPI 0x9c2 V593
---
Entry stack: [V11, 0x4bb, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4bb, V328]

================================

Block 0x9be
[0x9be:0x9c1]
---
Predecessors: [0x967]
Successors: []
---
0x9be PUSH1 0x0
0x9c0 DUP1
0x9c1 REVERT
---
0x9be: V595 = 0x0
0x9c1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4bb, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4bb, V328]

================================

Block 0x9c2
[0x9c2:0x9f9]
---
Predecessors: [0x967]
Successors: [0x9fa, 0x9fe]
---
0x9c2 JUMPDEST
0x9c3 PUSH1 0x0
0x9c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9da AND
0x9db DUP2
0x9dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f1 AND
0x9f2 EQ
0x9f3 ISZERO
0x9f4 ISZERO
0x9f5 ISZERO
0x9f6 PUSH2 0x9fe
0x9f9 JUMPI
---
0x9c2: JUMPDEST 
0x9c3: V596 = 0x0
0x9c5: V597 = 0xffffffffffffffffffffffffffffffffffffffff
0x9da: V598 = AND 0xffffffffffffffffffffffffffffffffffffffff 0x0
0x9dc: V599 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f1: V600 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x9f2: V601 = EQ V600 0x0
0x9f3: V602 = ISZERO V601
0x9f4: V603 = ISZERO V602
0x9f5: V604 = ISZERO V603
0x9f6: V605 = 0x9fe
0x9f9: JUMPI 0x9fe V604
---
Entry stack: [V11, 0x4bb, V328]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x4bb, V328]

================================

Block 0x9fa
[0x9fa:0x9fd]
---
Predecessors: [0x9c2]
Successors: []
---
0x9fa PUSH1 0x0
0x9fc DUP1
0x9fd REVERT
---
0x9fa: V606 = 0x0
0x9fd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x4bb, V328]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x4bb, V328]

================================

Block 0x9fe
[0x9fe:0xa40]
---
Predecessors: [0x9c2]
Successors: [0x4bb]
---
0x9fe JUMPDEST
0x9ff DUP1
0xa00 PUSH1 0x0
0xa02 DUP1
0xa03 PUSH2 0x100
0xa06 EXP
0xa07 DUP2
0xa08 SLOAD
0xa09 DUP2
0xa0a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa1f MUL
0xa20 NOT
0xa21 AND
0xa22 SWAP1
0xa23 DUP4
0xa24 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa39 AND
0xa3a MUL
0xa3b OR
0xa3c SWAP1
0xa3d SSTORE
0xa3e POP
0xa3f POP
0xa40 JUMP
---
0x9fe: JUMPDEST 
0xa00: V607 = 0x0
0xa03: V608 = 0x100
0xa06: V609 = EXP 0x100 0x0
0xa08: V610 = S[0x0]
0xa0a: V611 = 0xffffffffffffffffffffffffffffffffffffffff
0xa1f: V612 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0xa20: V613 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa21: V614 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V610
0xa24: V615 = 0xffffffffffffffffffffffffffffffffffffffff
0xa39: V616 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0xa3a: V617 = MUL V616 0x1
0xa3b: V618 = OR V617 V614
0xa3d: S[0x0] = V618
0xa40: JUMP 0x4bb
---
Entry stack: [V11, 0x4bb, V328]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0xa41
[0xa41:0xa4d]
---
Predecessors: [0x7cc]
Successors: [0xa4e, 0xa4f]
---
0xa41 JUMPDEST
0xa42 PUSH1 0x0
0xa44 DUP2
0xa45 DUP4
0xa46 LT
0xa47 ISZERO
0xa48 ISZERO
0xa49 ISZERO
0xa4a PUSH2 0xa4f
0xa4d JUMPI
---
0xa41: JUMPDEST 
0xa42: V619 = 0x0
0xa46: V620 = LT V515 V285
0xa47: V621 = ISZERO V620
0xa48: V622 = ISZERO V621
0xa49: V623 = ISZERO V622
0xa4a: V624 = 0xa4f
0xa4d: JUMPI 0xa4f V623
---
Entry stack: [V11, 0x431, V282, V285, 0x0, V282, 0x815, V515, V285]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V11, 0x431, V282, V285, 0x0, V282, 0x815, V515, V285, 0x0]

================================

Block 0xa4e
[0xa4e:0xa4e]
---
Predecessors: [0xa41]
Successors: []
---
0xa4e INVALID
---
0xa4e: INVALID 
---
Entry stack: [V11, 0x431, V282, V285, 0x0, V282, 0x815, V515, V285, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x431, V282, V285, 0x0, V282, 0x815, V515, V285, 0x0]

================================

Block 0xa4f
[0xa4f:0xa59]
---
Predecessors: [0xa41]
Successors: [0x815]
---
0xa4f JUMPDEST
0xa50 DUP2
0xa51 DUP4
0xa52 SUB
0xa53 SWAP1
0xa54 POP
0xa55 SWAP3
0xa56 SWAP2
0xa57 POP
0xa58 POP
0xa59 JUMP
---
0xa4f: JUMPDEST 
0xa52: V625 = SUB V515 V285
0xa59: JUMP 0x815
---
Entry stack: [V11, 0x431, V282, V285, 0x0, V282, 0x815, V515, V285, 0x0]
Stack pops: 4
Stack additions: [V625]
Exit stack: [V11, 0x431, V282, V285, 0x0, V282, V625]

================================

Block 0xa5a
[0xa5a:0xa6c]
---
Predecessors: [0x815]
Successors: [0xa6d, 0xa6e]
---
0xa5a JUMPDEST
0xa5b PUSH1 0x0
0xa5d DUP1
0xa5e DUP3
0xa5f DUP5
0xa60 ADD
0xa61 SWAP1
0xa62 POP
0xa63 DUP4
0xa64 DUP2
0xa65 LT
0xa66 ISZERO
0xa67 ISZERO
0xa68 ISZERO
0xa69 PUSH2 0xa6e
0xa6c JUMPI
---
0xa5a: JUMPDEST 
0xa5b: V626 = 0x0
0xa60: V627 = ADD V543 V285
0xa65: V628 = LT V627 V543
0xa66: V629 = ISZERO V628
0xa67: V630 = ISZERO V629
0xa68: V631 = ISZERO V630
0xa69: V632 = 0xa6e
0xa6c: JUMPI 0xa6e V631
---
Entry stack: [V11, 0x431, V282, V285, 0x0, V282, 0x8a1, V543, V285]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V627]
Exit stack: [V11, 0x431, V282, V285, 0x0, V282, 0x8a1, V543, V285, 0x0, V627]

================================

Block 0xa6d
[0xa6d:0xa6d]
---
Predecessors: [0xa5a]
Successors: []
---
0xa6d INVALID
---
0xa6d: INVALID 
---
Entry stack: [V11, 0x431, V282, V285, 0x0, V282, 0x8a1, V543, V285, 0x0, V627]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x431, V282, V285, 0x0, V282, 0x8a1, V543, V285, 0x0, V627]

================================

Block 0xa6e
[0xa6e:0xa77]
---
Predecessors: [0xa5a]
Successors: [0x8a1]
---
0xa6e JUMPDEST
0xa6f DUP1
0xa70 SWAP2
0xa71 POP
0xa72 POP
0xa73 SWAP3
0xa74 SWAP2
0xa75 POP
0xa76 POP
0xa77 JUMP
---
0xa6e: JUMPDEST 
0xa77: JUMP 0x8a1
---
Entry stack: [V11, 0x431, V282, V285, 0x0, V282, 0x8a1, V543, V285, 0x0, V627]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V11, 0x431, V282, V285, 0x0, V282, V627]

================================

Block 0xa78
[0xa78:0xaa3]
---
Predecessors: []
Successors: []
---
0xa78 STOP
0xa79 LOG1
0xa7a PUSH6 0x627a7a723058
0xa81 SHA3
0xa82 MLOAD
0xa83 MISSING 0xd4
0xa84 SMOD
0xa85 STOP
0xa86 DIV
0xa87 DIFFICULTY
0xa88 MISSING 0xf7
0xa89 AND
0xa8a SHL
0xa8b MISSING 0xf9
0xa8c RETURNDATACOPY
0xa8d SAR
0xa8e PUSH17 0xd7bdf7d0492c56f475f8a69261f3bbd6a8
0xaa0 SWAP10
0xaa1 MISSING 0x28
0xaa2 STOP
0xaa3 MISSING 0x29
---
0xa78: STOP 
0xa79: LOG S0 S1 S2
0xa7a: V633 = 0x627a7a723058
0xa81: V634 = SHA3 0x627a7a723058 S3
0xa82: V635 = M[V634]
0xa83: MISSING 0xd4
0xa84: V636 = SMOD S0 S1
0xa85: STOP 
0xa86: V637 = DIV S0 S1
0xa87: V638 = DIFFICULTY
0xa88: MISSING 0xf7
0xa89: V639 = AND S0 S1
0xa8a: V640 = SHL V639 S2
0xa8b: MISSING 0xf9
0xa8c: RETURNDATACOPY S0 S1 S2
0xa8d: V641 = SAR S3 S4
0xa8e: V642 = 0xd7bdf7d0492c56f475f8a69261f3bbd6a8
0xaa1: MISSING 0x28
0xaa2: STOP 
0xaa3: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V635, V636, V638, V637, V640, S13, V641, S5, S6, S7, S8, S9, S10, S11, S12, 0xd7bdf7d0492c56f475f8a69261f3bbd6a8]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0xbf
Exit block: 0x141
Body: 0xbf, 0xc7, 0xcb, 0xd4, 0xf9, 0x102, 0x114, 0x128, 0x141, 0x4bd

Function 1:
Public function signature: 0x1608f18f
Entry block: 0x14f
Exit block: 0x17c
Body: 0x14f, 0x157, 0x15b, 0x17c, 0x4f6, 0x54d, 0x551

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x17e
Exit block: 0x193
Body: 0x17e, 0x186, 0x18a, 0x193, 0x56f

Function 3:
Public function signature: 0x18af7611
Entry block: 0x1a9
Exit block: 0x1be
Body: 0x1a9, 0x1b1, 0x1b5, 0x1be, 0x575

Function 4:
Public function signature: 0x313ce567
Entry block: 0x200
Exit block: 0x215
Body: 0x200, 0x208, 0x20c, 0x215, 0x58d

Function 5:
Public function signature: 0x5c658165
Entry block: 0x231
Exit block: 0x292
Body: 0x231, 0x239, 0x23d, 0x292, 0x592

Function 6:
Public function signature: 0x70a08231
Entry block: 0x2a8
Exit block: 0x2e9
Body: 0x2a8, 0x2b0, 0x2b4, 0x2e9, 0x5b7, 0x5f2, 0x5f6

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x2ff
Exit block: 0x314
Body: 0x2ff, 0x307, 0x30b, 0x314, 0x63e

Function 8:
Public function signature: 0x95d89b41
Entry block: 0x356
Exit block: 0x3d8
Body: 0x356, 0x35e, 0x362, 0x36b, 0x390, 0x399, 0x3ab, 0x3bf, 0x3d8, 0x663

Function 9:
Public function signature: 0xa9059cbb
Entry block: 0x3e6
Exit block: 0x431
Body: 0x3e6, 0x3ee, 0x3f2, 0x431, 0x69c, 0x6d7, 0x6db, 0x6f2, 0x6f3, 0x73d, 0x7c1, 0x7c8, 0x7cc, 0x815, 0x8a1, 0xa41, 0xa4e, 0xa4f, 0xa5a, 0xa6d, 0xa6e

Function 10:
Public function signature: 0xbef97c87
Entry block: 0x44b
Exit block: 0x460
Body: 0x44b, 0x453, 0x457, 0x460, 0x954

Function 11:
Public function signature: 0xf2fde38b
Entry block: 0x47a
Exit block: 0x4bb
Body: 0x47a, 0x482, 0x486, 0x4bb, 0x967, 0x9be, 0x9c2, 0x9fa, 0x9fe

Function 12:
Public fallback function
Entry block: 0xba
Exit block: 0xba
Body: 0xba

