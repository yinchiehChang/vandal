Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xb1976a02
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xb1976a02
0x3b: V13 = EQ V11 0xb1976a02
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x6b]
---
0x40 DUP1
0x41 PUSH4 0xc35789cc
0x46 EQ
0x47 PUSH2 0x6b
0x4a JUMPI
---
0x41: V15 = 0xc35789cc
0x46: V16 = EQ 0xc35789cc V11
0x47: V17 = 0x6b
0x4a: JUMPI 0x6b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x80]
---
0x4b DUP1
0x4c PUSH4 0xe5b5fe72
0x51 EQ
0x52 PUSH2 0x80
0x55 JUMPI
---
0x4c: V18 = 0xe5b5fe72
0x51: V19 = EQ 0xe5b5fe72 V11
0x52: V20 = 0x80
0x55: JUMPI 0x80 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x94]
---
0x56 DUP1
0x57 PUSH4 0xf4d0b67f
0x5c EQ
0x5d PUSH2 0x94
0x60 JUMPI
---
0x57: V21 = 0xf4d0b67f
0x5c: V22 = EQ 0xf4d0b67f V11
0x5d: V23 = 0x94
0x60: JUMPI 0x94 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x10d, 0x127, 0x169, 0x1c8]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0xd]
Successors: [0xac]
---
0x63 JUMPDEST
0x64 PUSH2 0x61
0x67 PUSH2 0xac
0x6a JUMP
---
0x63: JUMPDEST 
0x64: V24 = 0x61
0x67: V25 = 0xac
0x6a: JUMP 0xac
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x6b
[0x6b:0x72]
---
Predecessors: [0x40]
Successors: [0x73, 0x77]
---
0x6b JUMPDEST
0x6c CALLVALUE
0x6d DUP1
0x6e ISZERO
0x6f PUSH2 0x77
0x72 JUMPI
---
0x6b: JUMPDEST 
0x6c: V26 = CALLVALUE
0x6e: V27 = ISZERO V26
0x6f: V28 = 0x77
0x72: JUMPI 0x77 V27
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V26]
Exit stack: [V11, V26]

================================

Block 0x73
[0x73:0x76]
---
Predecessors: [0x6b]
Successors: []
---
0x73 PUSH1 0x0
0x75 DUP1
0x76 REVERT
---
0x73: V29 = 0x0
0x76: REVERT 0x0 0x0
---
Entry stack: [V11, V26]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V26]

================================

Block 0x77
[0x77:0x7f]
---
Predecessors: [0x6b]
Successors: [0x10f]
---
0x77 JUMPDEST
0x78 POP
0x79 PUSH2 0x61
0x7c PUSH2 0x10f
0x7f JUMP
---
0x77: JUMPDEST 
0x79: V30 = 0x61
0x7c: V31 = 0x10f
0x7f: JUMP 0x10f
---
Entry stack: [V11, V26]
Stack pops: 1
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x80
[0x80:0x93]
---
Predecessors: [0x4b]
Successors: [0x135]
---
0x80 JUMPDEST
0x81 PUSH2 0x61
0x84 PUSH1 0x1
0x86 PUSH1 0xa0
0x88 PUSH1 0x2
0x8a EXP
0x8b SUB
0x8c PUSH1 0x4
0x8e CALLDATALOAD
0x8f AND
0x90 PUSH2 0x135
0x93 JUMP
---
0x80: JUMPDEST 
0x81: V32 = 0x61
0x84: V33 = 0x1
0x86: V34 = 0xa0
0x88: V35 = 0x2
0x8a: V36 = EXP 0x2 0xa0
0x8b: V37 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c: V38 = 0x4
0x8e: V39 = CALLDATALOAD 0x4
0x8f: V40 = AND V39 0xffffffffffffffffffffffffffffffffffffffff
0x90: V41 = 0x135
0x93: JUMP 0x135
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, V40]
Exit stack: [V11, 0x61, V40]

================================

Block 0x94
[0x94:0x9b]
---
Predecessors: [0x56]
Successors: [0x9c, 0xa0]
---
0x94 JUMPDEST
0x95 CALLVALUE
0x96 DUP1
0x97 ISZERO
0x98 PUSH2 0xa0
0x9b JUMPI
---
0x94: JUMPDEST 
0x95: V42 = CALLVALUE
0x97: V43 = ISZERO V42
0x98: V44 = 0xa0
0x9b: JUMPI 0xa0 V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V42]
Exit stack: [V11, V42]

================================

Block 0x9c
[0x9c:0x9f]
---
Predecessors: [0x94]
Successors: []
---
0x9c PUSH1 0x0
0x9e DUP1
0x9f REVERT
---
0x9c: V45 = 0x0
0x9f: REVERT 0x0 0x0
---
Entry stack: [V11, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V42]

================================

Block 0xa0
[0xa0:0xab]
---
Predecessors: [0x94]
Successors: [0x1b0]
---
0xa0 JUMPDEST
0xa1 POP
0xa2 PUSH2 0x61
0xa5 PUSH1 0x4
0xa7 CALLDATALOAD
0xa8 PUSH2 0x1b0
0xab JUMP
---
0xa0: JUMPDEST 
0xa2: V46 = 0x61
0xa5: V47 = 0x4
0xa7: V48 = CALLDATALOAD 0x4
0xa8: V49 = 0x1b0
0xab: JUMP 0x1b0
---
Entry stack: [V11, V42]
Stack pops: 1
Stack additions: [0x61, V48]
Exit stack: [V11, 0x61, V48]

================================

Block 0xac
[0xac:0xc4]
---
Predecessors: [0x63]
Successors: [0xc5, 0xcc]
---
0xac JUMPDEST
0xad PUSH1 0x3
0xaf SLOAD
0xb0 CALLER
0xb1 PUSH1 0x1
0xb3 PUSH1 0xa0
0xb5 PUSH1 0x2
0xb7 EXP
0xb8 SUB
0xb9 SWAP1
0xba DUP2
0xbb AND
0xbc SWAP2
0xbd AND
0xbe EQ
0xbf DUP1
0xc0 ISZERO
0xc1 PUSH2 0xcc
0xc4 JUMPI
---
0xac: JUMPDEST 
0xad: V50 = 0x3
0xaf: V51 = S[0x3]
0xb0: V52 = CALLER
0xb1: V53 = 0x1
0xb3: V54 = 0xa0
0xb5: V55 = 0x2
0xb7: V56 = EXP 0x2 0xa0
0xb8: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xbd: V59 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0xbe: V60 = EQ V59 V58
0xc0: V61 = ISZERO V60
0xc1: V62 = 0xcc
0xc4: JUMPI 0xcc V61
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V60]
Exit stack: [V11, 0x61, V60]

================================

Block 0xc5
[0xc5:0xcb]
---
Predecessors: [0xac]
Successors: [0xcc]
---
0xc5 POP
0xc6 PUSH1 0x1
0xc8 SLOAD
0xc9 TIMESTAMP
0xca LT
0xcb ISZERO
---
0xc6: V63 = 0x1
0xc8: V64 = S[0x1]
0xc9: V65 = TIMESTAMP
0xca: V66 = LT V65 V64
0xcb: V67 = ISZERO V66
---
Entry stack: [V11, 0x61, V60]
Stack pops: 1
Stack additions: [V67]
Exit stack: [V11, 0x61, V67]

================================

Block 0xcc
[0xcc:0xd1]
---
Predecessors: [0xac, 0xc5]
Successors: [0xd2, 0x10d]
---
0xcc JUMPDEST
0xcd ISZERO
0xce PUSH2 0x10d
0xd1 JUMPI
---
0xcc: JUMPDEST 
0xcd: V68 = ISZERO S0
0xce: V69 = 0x10d
0xd1: JUMPI 0x10d V68
---
Entry stack: [V11, 0x61, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0xd2
[0xd2:0x101]
---
Predecessors: [0xcc]
Successors: [0x102, 0x10b]
---
0xd2 PUSH1 0x40
0xd4 MLOAD
0xd5 PUSH1 0x1
0xd7 PUSH1 0xa0
0xd9 PUSH1 0x2
0xdb EXP
0xdc SUB
0xdd CALLER
0xde DUP2
0xdf AND
0xe0 SWAP2
0xe1 ADDRESS
0xe2 SWAP1
0xe3 SWAP2
0xe4 AND
0xe5 BALANCE
0xe6 DUP1
0xe7 ISZERO
0xe8 PUSH2 0x8fc
0xeb MUL
0xec SWAP2
0xed PUSH1 0x0
0xef DUP2
0xf0 DUP2
0xf1 DUP2
0xf2 DUP6
0xf3 DUP9
0xf4 DUP9
0xf5 CALL
0xf6 SWAP4
0xf7 POP
0xf8 POP
0xf9 POP
0xfa POP
0xfb ISZERO
0xfc DUP1
0xfd ISZERO
0xfe PUSH2 0x10b
0x101 JUMPI
---
0xd2: V70 = 0x40
0xd4: V71 = M[0x40]
0xd5: V72 = 0x1
0xd7: V73 = 0xa0
0xd9: V74 = 0x2
0xdb: V75 = EXP 0x2 0xa0
0xdc: V76 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd: V77 = CALLER
0xdf: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0xe1: V79 = ADDRESS
0xe4: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0xe5: V81 = BALANCE V80
0xe7: V82 = ISZERO V81
0xe8: V83 = 0x8fc
0xeb: V84 = MUL 0x8fc V82
0xed: V85 = 0x0
0xf5: V86 = CALL V84 V78 V81 V71 0x0 V71 0x0
0xfb: V87 = ISZERO V86
0xfd: V88 = ISZERO V87
0xfe: V89 = 0x10b
0x101: JUMPI 0x10b V88
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V87]
Exit stack: [V11, 0x61, V87]

================================

Block 0x102
[0x102:0x10a]
---
Predecessors: [0xd2]
Successors: []
---
0x102 RETURNDATASIZE
0x103 PUSH1 0x0
0x105 DUP1
0x106 RETURNDATACOPY
0x107 RETURNDATASIZE
0x108 PUSH1 0x0
0x10a REVERT
---
0x102: V90 = RETURNDATASIZE
0x103: V91 = 0x0
0x106: RETURNDATACOPY 0x0 0x0 V90
0x107: V92 = RETURNDATASIZE
0x108: V93 = 0x0
0x10a: REVERT 0x0 V92
---
Entry stack: [V11, 0x61, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V87]

================================

Block 0x10b
[0x10b:0x10c]
---
Predecessors: [0xd2, 0x163, 0x1b0]
Successors: [0x10d]
---
0x10b JUMPDEST
0x10c POP
---
0x10b: JUMPDEST 
---
Entry stack: [V11, 0x61, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x10d
[0x10d:0x10e]
---
Predecessors: [0xcc, 0x10b, 0x10f]
Successors: [0x61]
---
0x10d JUMPDEST
0x10e JUMP
---
0x10d: JUMPDEST 
0x10e: JUMP 0x61
---
Entry stack: [V11, 0x61]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x10f
[0x10f:0x126]
---
Predecessors: [0x77]
Successors: [0x10d, 0x127]
---
0x10f JUMPDEST
0x110 PUSH1 0x2
0x112 SLOAD
0x113 CALLER
0x114 PUSH1 0x1
0x116 PUSH1 0xa0
0x118 PUSH1 0x2
0x11a EXP
0x11b SUB
0x11c SWAP1
0x11d DUP2
0x11e AND
0x11f SWAP2
0x120 AND
0x121 EQ
0x122 ISZERO
0x123 PUSH2 0x10d
0x126 JUMPI
---
0x10f: JUMPDEST 
0x110: V94 = 0x2
0x112: V95 = S[0x2]
0x113: V96 = CALLER
0x114: V97 = 0x1
0x116: V98 = 0xa0
0x118: V99 = 0x2
0x11a: V100 = EXP 0x2 0xa0
0x11b: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11e: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x120: V103 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0x121: V104 = EQ V103 V102
0x122: V105 = ISZERO V104
0x123: V106 = 0x10d
0x126: JUMPI 0x10d V105
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x127
[0x127:0x134]
---
Predecessors: [0x10f]
Successors: [0x61]
---
0x127 PUSH1 0x0
0x129 DUP1
0x12a SLOAD
0x12b PUSH1 0xff
0x12d NOT
0x12e AND
0x12f PUSH1 0x1
0x131 OR
0x132 SWAP1
0x133 SSTORE
0x134 JUMP
---
0x127: V107 = 0x0
0x12a: V108 = S[0x0]
0x12b: V109 = 0xff
0x12d: V110 = NOT 0xff
0x12e: V111 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V108
0x12f: V112 = 0x1
0x131: V113 = OR 0x1 V111
0x133: S[0x0] = V113
0x134: JUMP 0x61
---
Entry stack: [V11, 0x61]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x135
[0x135:0x142]
---
Predecessors: [0x80]
Successors: [0x143, 0x14f]
---
0x135 JUMPDEST
0x136 PUSH1 0x0
0x138 SLOAD
0x139 PUSH1 0xff
0x13b AND
0x13c ISZERO
0x13d DUP1
0x13e ISZERO
0x13f PUSH2 0x14f
0x142 JUMPI
---
0x135: JUMPDEST 
0x136: V114 = 0x0
0x138: V115 = S[0x0]
0x139: V116 = 0xff
0x13b: V117 = AND 0xff V115
0x13c: V118 = ISZERO V117
0x13e: V119 = ISZERO V118
0x13f: V120 = 0x14f
0x142: JUMPI 0x14f V119
---
Entry stack: [V11, 0x61, V40]
Stack pops: 0
Stack additions: [V118]
Exit stack: [V11, 0x61, V40, V118]

================================

Block 0x143
[0x143:0x14e]
---
Predecessors: [0x135]
Successors: [0x14f]
---
0x143 POP
0x144 PUSH8 0x6f05b59d3b20000
0x14d CALLVALUE
0x14e GT
---
0x144: V121 = 0x6f05b59d3b20000
0x14d: V122 = CALLVALUE
0x14e: V123 = GT V122 0x6f05b59d3b20000
---
Entry stack: [V11, 0x61, V40, V118]
Stack pops: 1
Stack additions: [V123]
Exit stack: [V11, 0x61, V40, V123]

================================

Block 0x14f
[0x14f:0x154]
---
Predecessors: [0x135, 0x143]
Successors: [0x155, 0x163]
---
0x14f JUMPDEST
0x150 DUP1
0x151 PUSH2 0x163
0x154 JUMPI
---
0x14f: JUMPDEST 
0x151: V124 = 0x163
0x154: JUMPI 0x163 S0
---
Entry stack: [V11, 0x61, V40, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x61, V40, S0]

================================

Block 0x155
[0x155:0x162]
---
Predecessors: [0x14f]
Successors: [0x163]
---
0x155 POP
0x156 PUSH1 0x2
0x158 SLOAD
0x159 PUSH1 0x1
0x15b PUSH1 0xa0
0x15d PUSH1 0x2
0x15f EXP
0x160 SUB
0x161 AND
0x162 ISZERO
---
0x156: V125 = 0x2
0x158: V126 = S[0x2]
0x159: V127 = 0x1
0x15b: V128 = 0xa0
0x15d: V129 = 0x2
0x15f: V130 = EXP 0x2 0xa0
0x160: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x161: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x162: V133 = ISZERO V132
---
Entry stack: [V11, 0x61, V40, S0]
Stack pops: 1
Stack additions: [V133]
Exit stack: [V11, 0x61, V40, V133]

================================

Block 0x163
[0x163:0x168]
---
Predecessors: [0x14f, 0x155]
Successors: [0x10b, 0x169]
---
0x163 JUMPDEST
0x164 ISZERO
0x165 PUSH2 0x10b
0x168 JUMPI
---
0x163: JUMPDEST 
0x164: V134 = ISZERO S0
0x165: V135 = 0x10b
0x168: JUMPI 0x10b V134
---
Entry stack: [V11, 0x61, V40, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x61, V40]

================================

Block 0x169
[0x169:0x1af]
---
Predecessors: [0x163]
Successors: [0x61]
---
0x169 PUSH1 0x2
0x16b DUP1
0x16c SLOAD
0x16d PUSH1 0x1
0x16f PUSH1 0xa0
0x171 PUSH1 0x2
0x173 EXP
0x174 SUB
0x175 CALLER
0x176 DUP2
0x177 AND
0x178 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18d NOT
0x18e SWAP3
0x18f DUP4
0x190 AND
0x191 OR
0x192 SWAP1
0x193 SWAP3
0x194 SSTORE
0x195 PUSH1 0x3
0x197 DUP1
0x198 SLOAD
0x199 SWAP3
0x19a DUP5
0x19b AND
0x19c SWAP3
0x19d SWAP1
0x19e SWAP2
0x19f AND
0x1a0 SWAP2
0x1a1 SWAP1
0x1a2 SWAP2
0x1a3 OR
0x1a4 SWAP1
0x1a5 SSTORE
0x1a6 PUSH1 0x1
0x1a8 DUP1
0x1a9 SLOAD
0x1aa TIMESTAMP
0x1ab ADD
0x1ac SWAP1
0x1ad SSTORE
0x1ae POP
0x1af JUMP
---
0x169: V136 = 0x2
0x16c: V137 = S[0x2]
0x16d: V138 = 0x1
0x16f: V139 = 0xa0
0x171: V140 = 0x2
0x173: V141 = EXP 0x2 0xa0
0x174: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x175: V143 = CALLER
0x177: V144 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x178: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x18d: V146 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x190: V147 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V137
0x191: V148 = OR V147 V144
0x194: S[0x2] = V148
0x195: V149 = 0x3
0x198: V150 = S[0x3]
0x19b: V151 = AND V40 0xffffffffffffffffffffffffffffffffffffffff
0x19f: V152 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V150
0x1a3: V153 = OR V152 V151
0x1a5: S[0x3] = V153
0x1a6: V154 = 0x1
0x1a9: V155 = S[0x1]
0x1aa: V156 = TIMESTAMP
0x1ab: V157 = ADD V156 V155
0x1ad: S[0x1] = V157
0x1af: JUMP 0x61
---
Entry stack: [V11, 0x61, V40]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b0
[0x1b0:0x1c7]
---
Predecessors: [0xa0]
Successors: [0x10b, 0x1c8]
---
0x1b0 JUMPDEST
0x1b1 PUSH1 0x2
0x1b3 SLOAD
0x1b4 CALLER
0x1b5 PUSH1 0x1
0x1b7 PUSH1 0xa0
0x1b9 PUSH1 0x2
0x1bb EXP
0x1bc SUB
0x1bd SWAP1
0x1be DUP2
0x1bf AND
0x1c0 SWAP2
0x1c1 AND
0x1c2 EQ
0x1c3 ISZERO
0x1c4 PUSH2 0x10b
0x1c7 JUMPI
---
0x1b0: JUMPDEST 
0x1b1: V158 = 0x2
0x1b3: V159 = S[0x2]
0x1b4: V160 = CALLER
0x1b5: V161 = 0x1
0x1b7: V162 = 0xa0
0x1b9: V163 = 0x2
0x1bb: V164 = EXP 0x2 0xa0
0x1bc: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1bf: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x1c1: V167 = AND V159 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V168 = EQ V167 V166
0x1c3: V169 = ISZERO V168
0x1c4: V170 = 0x10b
0x1c7: JUMPI 0x10b V169
---
Entry stack: [V11, 0x61, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V48]

================================

Block 0x1c8
[0x1c8:0x1cb]
---
Predecessors: [0x1b0]
Successors: [0x61]
---
0x1c8 PUSH1 0x1
0x1ca SSTORE
0x1cb JUMP
---
0x1c8: V171 = 0x1
0x1ca: S[0x1] = V48
0x1cb: JUMP 0x61
---
Entry stack: [V11, 0x61, V48]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1cc
[0x1cc:0x1f7]
---
Predecessors: []
Successors: []
---
0x1cc STOP
0x1cd LOG1
0x1ce PUSH6 0x627a7a723058
0x1d5 SHA3
0x1d6 SWAP12
0x1d7 CALL
0x1d8 MISSING 0xe1
0x1d9 PUSH13 0x15b574a949b3e93d0ad05b9d5b
0x1e7 DUP4
0x1e8 SWAP9
0x1e9 MISSING 0xdc
0x1ea MISSING 0xeb
0x1eb MSTORE
0x1ec GASLIMIT
0x1ed MISSING 0xcf
0x1ee ADD
0x1ef PUSH4 0xe65e5ce3
0x1f4 DUP4
0x1f5 MISSING 0xd7
0x1f6 STOP
0x1f7 MISSING 0x29
---
0x1cc: STOP 
0x1cd: LOG S0 S1 S2
0x1ce: V172 = 0x627a7a723058
0x1d5: V173 = SHA3 0x627a7a723058 S3
0x1d7: V174 = CALL S15 S4 S5 S6 S7 S8 S9
0x1d8: MISSING 0xe1
0x1d9: V175 = 0x15b574a949b3e93d0ad05b9d5b
0x1e9: MISSING 0xdc
0x1ea: MISSING 0xeb
0x1eb: M[S0] = S1
0x1ec: V176 = GASLIMIT
0x1ed: MISSING 0xcf
0x1ee: V177 = ADD S0 S1
0x1ef: V178 = 0xe65e5ce3
0x1f5: MISSING 0xd7
0x1f6: STOP 
0x1f7: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V174, S10, S11, S12, S13, S14, V173, S7, 0x15b574a949b3e93d0ad05b9d5b, S0, S1, S2, S3, S4, S5, S6, S2, V176, S3, 0xe65e5ce3, V177, S2, S3]
Exit stack: []

================================

Function 0:
Public function signature: 0xb1976a02
Entry block: 0x63
Exit block: 0x61
Body: 0x61, 0x63, 0xac, 0xc5, 0xcc, 0xd2, 0x102, 0x10b, 0x10d

Function 1:
Public function signature: 0xc35789cc
Entry block: 0x6b
Exit block: 0x61
Body: 0x61, 0x6b, 0x73, 0x77, 0x10d, 0x10f, 0x127

Function 2:
Public function signature: 0xe5b5fe72
Entry block: 0x80
Exit block: 0x61
Body: 0x61, 0x80, 0x10b, 0x10d, 0x135, 0x143, 0x14f, 0x155, 0x163, 0x169

Function 3:
Public function signature: 0xf4d0b67f
Entry block: 0x94
Exit block: 0x61
Body: 0x61, 0x94, 0x9c, 0xa0, 0x10b, 0x10d, 0x1b0, 0x1c8

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

