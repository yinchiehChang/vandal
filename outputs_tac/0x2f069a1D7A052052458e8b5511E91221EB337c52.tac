Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x12333b32
0x3c EQ
0x3d PUSH2 0x7a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x12333b32
0x3c: V13 = EQ 0x12333b32 V11
0x3d: V14 = 0x7a
0x40: JUMPI 0x7a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x92]
---
0x41 DUP1
0x42 PUSH4 0x9619367d
0x47 EQ
0x48 PUSH2 0x92
0x4b JUMPI
---
0x42: V15 = 0x9619367d
0x47: V16 = EQ 0x9619367d V11
0x48: V17 = 0x92
0x4b: JUMPI 0x92 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xbb]
---
0x4c DUP1
0x4d PUSH4 0xe8147a25
0x52 EQ
0x53 PUSH2 0xbb
0x56 JUMPI
---
0x4d: V18 = 0xe8147a25
0x52: V19 = EQ 0xe8147a25 V11
0x53: V20 = 0xbb
0x56: JUMPI 0xbb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xde]
---
0x57 DUP1
0x58 PUSH4 0xea92dd1d
0x5d EQ
0x5e PUSH2 0xde
0x61 JUMPI
---
0x58: V21 = 0xea92dd1d
0x5d: V22 = EQ 0xea92dd1d V11
0x5e: V23 = 0xde
0x61: JUMPI 0xde V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x101]
---
0x62 DUP1
0x63 PUSH4 0xf3ac3df5
0x68 EQ
0x69 PUSH2 0x101
0x6c JUMPI
---
0x63: V24 = 0xf3ac3df5
0x68: V25 = EQ 0xf3ac3df5 V11
0x69: V26 = 0x101
0x6c: JUMPI 0x101 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x12a]
---
0x6d DUP1
0x6e PUSH4 0xf82c50f1
0x73 EQ
0x74 PUSH2 0x12a
0x77 JUMPI
---
0x6e: V27 = 0xf82c50f1
0x73: V28 = EQ 0xf82c50f1 V11
0x74: V29 = 0x12a
0x77: JUMPI 0x12a V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x8f]
---
Predecessors: [0xd]
Successors: [0x194]
---
0x7a JUMPDEST
0x7b PUSH2 0x90
0x7e PUSH1 0x4
0x80 DUP1
0x81 DUP1
0x82 CALLDATALOAD
0x83 SWAP1
0x84 PUSH1 0x20
0x86 ADD
0x87 SWAP1
0x88 SWAP2
0x89 SWAP1
0x8a POP
0x8b POP
0x8c PUSH2 0x194
0x8f JUMP
---
0x7a: JUMPDEST 
0x7b: V30 = 0x90
0x7e: V31 = 0x4
0x82: V32 = CALLDATALOAD 0x4
0x84: V33 = 0x20
0x86: V34 = ADD 0x20 0x4
0x8c: V35 = 0x194
0x8f: JUMP 0x194
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x90, V32]
Exit stack: [V11, 0x90, V32]

================================

Block 0x90
[0x90:0x91]
---
Predecessors: [0x348]
Successors: []
---
0x90 JUMPDEST
0x91 STOP
---
0x90: JUMPDEST 
0x91: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x92
[0x92:0x98]
---
Predecessors: [0x41]
Successors: [0x99, 0x9d]
---
0x92 JUMPDEST
0x93 CALLVALUE
0x94 ISZERO
0x95 PUSH2 0x9d
0x98 JUMPI
---
0x92: JUMPDEST 
0x93: V36 = CALLVALUE
0x94: V37 = ISZERO V36
0x95: V38 = 0x9d
0x98: JUMPI 0x9d V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x99
[0x99:0x9c]
---
Predecessors: [0x92]
Successors: []
---
0x99 PUSH1 0x0
0x9b DUP1
0x9c REVERT
---
0x99: V39 = 0x0
0x9c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9d
[0x9d:0xa4]
---
Predecessors: [0x92]
Successors: [0x34c]
---
0x9d JUMPDEST
0x9e PUSH2 0xa5
0xa1 PUSH2 0x34c
0xa4 JUMP
---
0x9d: JUMPDEST 
0x9e: V40 = 0xa5
0xa1: V41 = 0x34c
0xa4: JUMP 0x34c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa5]
Exit stack: [V11, 0xa5]

================================

Block 0xa5
[0xa5:0xba]
---
Predecessors: [0x34c]
Successors: []
---
0xa5 JUMPDEST
0xa6 PUSH1 0x40
0xa8 MLOAD
0xa9 DUP1
0xaa DUP3
0xab DUP2
0xac MSTORE
0xad PUSH1 0x20
0xaf ADD
0xb0 SWAP2
0xb1 POP
0xb2 POP
0xb3 PUSH1 0x40
0xb5 MLOAD
0xb6 DUP1
0xb7 SWAP2
0xb8 SUB
0xb9 SWAP1
0xba RETURN
---
0xa5: JUMPDEST 
0xa6: V42 = 0x40
0xa8: V43 = M[0x40]
0xac: M[V43] = V228
0xad: V44 = 0x20
0xaf: V45 = ADD 0x20 V43
0xb3: V46 = 0x40
0xb5: V47 = M[0x40]
0xb8: V48 = SUB V45 V47
0xba: RETURN V47 V48
---
Entry stack: [V11, 0xa5, V228]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa5]

================================

Block 0xbb
[0xbb:0xc1]
---
Predecessors: [0x4c]
Successors: [0xc2, 0xc6]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd ISZERO
0xbe PUSH2 0xc6
0xc1 JUMPI
---
0xbb: JUMPDEST 
0xbc: V49 = CALLVALUE
0xbd: V50 = ISZERO V49
0xbe: V51 = 0xc6
0xc1: JUMPI 0xc6 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc2
[0xc2:0xc5]
---
Predecessors: [0xbb]
Successors: []
---
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 REVERT
---
0xc2: V52 = 0x0
0xc5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc6
[0xc6:0xdb]
---
Predecessors: [0xbb]
Successors: [0x352]
---
0xc6 JUMPDEST
0xc7 PUSH2 0xdc
0xca PUSH1 0x4
0xcc DUP1
0xcd DUP1
0xce CALLDATALOAD
0xcf SWAP1
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 SWAP1
0xd4 SWAP2
0xd5 SWAP1
0xd6 POP
0xd7 POP
0xd8 PUSH2 0x352
0xdb JUMP
---
0xc6: JUMPDEST 
0xc7: V53 = 0xdc
0xca: V54 = 0x4
0xce: V55 = CALLDATALOAD 0x4
0xd0: V56 = 0x20
0xd2: V57 = ADD 0x20 0x4
0xd8: V58 = 0x352
0xdb: JUMP 0x352
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xdc, V55]
Exit stack: [V11, 0xdc, V55]

================================

Block 0xdc
[0xdc:0xdd]
---
Predecessors: [0x3ae]
Successors: []
---
0xdc JUMPDEST
0xdd STOP
---
0xdc: JUMPDEST 
0xdd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xe4]
---
Predecessors: [0x57]
Successors: [0xe5, 0xe9]
---
0xde JUMPDEST
0xdf CALLVALUE
0xe0 ISZERO
0xe1 PUSH2 0xe9
0xe4 JUMPI
---
0xde: JUMPDEST 
0xdf: V59 = CALLVALUE
0xe0: V60 = ISZERO V59
0xe1: V61 = 0xe9
0xe4: JUMPI 0xe9 V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xe8]
---
Predecessors: [0xde]
Successors: []
---
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 REVERT
---
0xe5: V62 = 0x0
0xe8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe9
[0xe9:0xfe]
---
Predecessors: [0xde]
Successors: [0x3b8]
---
0xe9 JUMPDEST
0xea PUSH2 0xff
0xed PUSH1 0x4
0xef DUP1
0xf0 DUP1
0xf1 CALLDATALOAD
0xf2 SWAP1
0xf3 PUSH1 0x20
0xf5 ADD
0xf6 SWAP1
0xf7 SWAP2
0xf8 SWAP1
0xf9 POP
0xfa POP
0xfb PUSH2 0x3b8
0xfe JUMP
---
0xe9: JUMPDEST 
0xea: V63 = 0xff
0xed: V64 = 0x4
0xf1: V65 = CALLDATALOAD 0x4
0xf3: V66 = 0x20
0xf5: V67 = ADD 0x20 0x4
0xfb: V68 = 0x3b8
0xfe: JUMP 0x3b8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xff, V65]
Exit stack: [V11, 0xff, V65]

================================

Block 0xff
[0xff:0x100]
---
Predecessors: [0x476]
Successors: []
---
0xff JUMPDEST
0x100 STOP
---
0xff: JUMPDEST 
0x100: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x101
[0x101:0x107]
---
Predecessors: [0x62]
Successors: [0x108, 0x10c]
---
0x101 JUMPDEST
0x102 CALLVALUE
0x103 ISZERO
0x104 PUSH2 0x10c
0x107 JUMPI
---
0x101: JUMPDEST 
0x102: V69 = CALLVALUE
0x103: V70 = ISZERO V69
0x104: V71 = 0x10c
0x107: JUMPI 0x10c V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x108
[0x108:0x10b]
---
Predecessors: [0x101]
Successors: []
---
0x108 PUSH1 0x0
0x10a DUP1
0x10b REVERT
---
0x108: V72 = 0x0
0x10b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10c
[0x10c:0x113]
---
Predecessors: [0x101]
Successors: [0x479]
---
0x10c JUMPDEST
0x10d PUSH2 0x114
0x110 PUSH2 0x479
0x113 JUMP
---
0x10c: JUMPDEST 
0x10d: V73 = 0x114
0x110: V74 = 0x479
0x113: JUMP 0x479
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x114]
Exit stack: [V11, 0x114]

================================

Block 0x114
[0x114:0x129]
---
Predecessors: [0x479]
Successors: []
---
0x114 JUMPDEST
0x115 PUSH1 0x40
0x117 MLOAD
0x118 DUP1
0x119 DUP3
0x11a DUP2
0x11b MSTORE
0x11c PUSH1 0x20
0x11e ADD
0x11f SWAP2
0x120 POP
0x121 POP
0x122 PUSH1 0x40
0x124 MLOAD
0x125 DUP1
0x126 SWAP2
0x127 SUB
0x128 SWAP1
0x129 RETURN
---
0x114: JUMPDEST 
0x115: V75 = 0x40
0x117: V76 = M[0x40]
0x11b: M[V76] = V291
0x11c: V77 = 0x20
0x11e: V78 = ADD 0x20 V76
0x122: V79 = 0x40
0x124: V80 = M[0x40]
0x127: V81 = SUB V78 V80
0x129: RETURN V80 V81
---
Entry stack: [V11, 0x114, V291]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x114]

================================

Block 0x12a
[0x12a:0x130]
---
Predecessors: [0x6d]
Successors: [0x131, 0x135]
---
0x12a JUMPDEST
0x12b CALLVALUE
0x12c ISZERO
0x12d PUSH2 0x135
0x130 JUMPI
---
0x12a: JUMPDEST 
0x12b: V82 = CALLVALUE
0x12c: V83 = ISZERO V82
0x12d: V84 = 0x135
0x130: JUMPI 0x135 V83
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x131
[0x131:0x134]
---
Predecessors: [0x12a]
Successors: []
---
0x131 PUSH1 0x0
0x133 DUP1
0x134 REVERT
---
0x131: V85 = 0x0
0x134: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x135
[0x135:0x14a]
---
Predecessors: [0x12a]
Successors: [0x47f]
---
0x135 JUMPDEST
0x136 PUSH2 0x14b
0x139 PUSH1 0x4
0x13b DUP1
0x13c DUP1
0x13d CALLDATALOAD
0x13e SWAP1
0x13f PUSH1 0x20
0x141 ADD
0x142 SWAP1
0x143 SWAP2
0x144 SWAP1
0x145 POP
0x146 POP
0x147 PUSH2 0x47f
0x14a JUMP
---
0x135: JUMPDEST 
0x136: V86 = 0x14b
0x139: V87 = 0x4
0x13d: V88 = CALLDATALOAD 0x4
0x13f: V89 = 0x20
0x141: V90 = ADD 0x20 0x4
0x147: V91 = 0x47f
0x14a: JUMP 0x47f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14b, V88]
Exit stack: [V11, 0x14b, V88]

================================

Block 0x14b
[0x14b:0x193]
---
Predecessors: [0x48e]
Successors: []
---
0x14b JUMPDEST
0x14c PUSH1 0x40
0x14e MLOAD
0x14f DUP1
0x150 DUP4
0x151 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x166 AND
0x167 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17c AND
0x17d DUP2
0x17e MSTORE
0x17f PUSH1 0x20
0x181 ADD
0x182 DUP3
0x183 DUP2
0x184 MSTORE
0x185 PUSH1 0x20
0x187 ADD
0x188 SWAP3
0x189 POP
0x18a POP
0x18b POP
0x18c PUSH1 0x40
0x18e MLOAD
0x18f DUP1
0x190 SWAP2
0x191 SUB
0x192 SWAP1
0x193 RETURN
---
0x14b: JUMPDEST 
0x14c: V92 = 0x40
0x14e: V93 = M[0x40]
0x151: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x166: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x167: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x17c: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x17e: M[V93] = V97
0x17f: V98 = 0x20
0x181: V99 = ADD 0x20 V93
0x184: M[V99] = V317
0x185: V100 = 0x20
0x187: V101 = ADD 0x20 V99
0x18c: V102 = 0x40
0x18e: V103 = M[0x40]
0x191: V104 = SUB V101 V103
0x193: RETURN V103 V104
---
Entry stack: [V11, 0x14b, V314, V317]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x14b]

================================

Block 0x194
[0x194:0x1a2]
---
Predecessors: [0x7a]
Successors: [0x1a3, 0x1a9]
---
0x194 JUMPDEST
0x195 PUSH1 0x0
0x197 PUSH1 0x2
0x199 SLOAD
0x19a CALLVALUE
0x19b LT
0x19c ISZERO
0x19d DUP1
0x19e ISZERO
0x19f PUSH2 0x1a9
0x1a2 JUMPI
---
0x194: JUMPDEST 
0x195: V105 = 0x0
0x197: V106 = 0x2
0x199: V107 = S[0x2]
0x19a: V108 = CALLVALUE
0x19b: V109 = LT V108 V107
0x19c: V110 = ISZERO V109
0x19e: V111 = ISZERO V110
0x19f: V112 = 0x1a9
0x1a2: JUMPI 0x1a9 V111
---
Entry stack: [V11, 0x90, V32]
Stack pops: 0
Stack additions: [0x0, V110]
Exit stack: [V11, 0x90, V32, 0x0, V110]

================================

Block 0x1a3
[0x1a3:0x1a8]
---
Predecessors: [0x194]
Successors: [0x1a9]
---
0x1a3 POP
0x1a4 PUSH1 0xa
0x1a6 DUP3
0x1a7 GT
0x1a8 ISZERO
---
0x1a4: V113 = 0xa
0x1a7: V114 = GT V32 0xa
0x1a8: V115 = ISZERO V114
---
Entry stack: [V11, 0x90, V32, 0x0, V110]
Stack pops: 3
Stack additions: [S2, S1, V115]
Exit stack: [V11, 0x90, V32, 0x0, V115]

================================

Block 0x1a9
[0x1a9:0x1ae]
---
Predecessors: [0x194, 0x1a3]
Successors: [0x1af, 0x348]
---
0x1a9 JUMPDEST
0x1aa ISZERO
0x1ab PUSH2 0x348
0x1ae JUMPI
---
0x1a9: JUMPDEST 
0x1aa: V116 = ISZERO S0
0x1ab: V117 = 0x348
0x1ae: JUMPI 0x348 V116
---
Entry stack: [V11, 0x90, V32, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x90, V32, 0x0]

================================

Block 0x1af
[0x1af:0x20d]
---
Predecessors: [0x1a9]
Successors: [0x4d2]
---
0x1af CALLER
0x1b0 DUP2
0x1b1 PUSH1 0x0
0x1b3 ADD
0x1b4 PUSH1 0x0
0x1b6 PUSH2 0x100
0x1b9 EXP
0x1ba DUP2
0x1bb SLOAD
0x1bc DUP2
0x1bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d2 MUL
0x1d3 NOT
0x1d4 AND
0x1d5 SWAP1
0x1d6 DUP4
0x1d7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ec AND
0x1ed MUL
0x1ee OR
0x1ef SWAP1
0x1f0 SSTORE
0x1f1 POP
0x1f2 DUP2
0x1f3 DUP2
0x1f4 PUSH1 0x1
0x1f6 ADD
0x1f7 DUP2
0x1f8 SWAP1
0x1f9 SSTORE
0x1fa POP
0x1fb PUSH1 0x4
0x1fd DUP1
0x1fe SLOAD
0x1ff DUP1
0x200 PUSH1 0x1
0x202 ADD
0x203 DUP3
0x204 DUP2
0x205 PUSH2 0x20e
0x208 SWAP2
0x209 SWAP1
0x20a PUSH2 0x4d2
0x20d JUMP
---
0x1af: V118 = CALLER
0x1b1: V119 = 0x0
0x1b3: V120 = ADD 0x0 0x0
0x1b4: V121 = 0x0
0x1b6: V122 = 0x100
0x1b9: V123 = EXP 0x100 0x0
0x1bb: V124 = S[0x0]
0x1bd: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d2: V126 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1d3: V127 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1d4: V128 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V124
0x1d7: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ec: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x1ed: V131 = MUL V130 0x1
0x1ee: V132 = OR V131 V128
0x1f0: S[0x0] = V132
0x1f4: V133 = 0x1
0x1f6: V134 = ADD 0x1 0x0
0x1f9: S[0x1] = V32
0x1fb: V135 = 0x4
0x1fe: V136 = S[0x4]
0x200: V137 = 0x1
0x202: V138 = ADD 0x1 V136
0x205: V139 = 0x20e
0x20a: V140 = 0x4d2
0x20d: JUMP 0x4d2
---
Entry stack: [V11, 0x90, V32, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x4, V136, V138, 0x20e, 0x4, V138]
Exit stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138]

================================

Block 0x20e
[0x20e:0x2a2]
---
Predecessors: [0x4ff]
Successors: [0x2a3, 0x2fa]
---
0x20e JUMPDEST
0x20f SWAP2
0x210 PUSH1 0x0
0x212 MSTORE
0x213 PUSH1 0x20
0x215 PUSH1 0x0
0x217 SHA3
0x218 SWAP1
0x219 PUSH1 0x2
0x21b MUL
0x21c ADD
0x21d PUSH1 0x0
0x21f DUP4
0x220 SWAP1
0x221 SWAP2
0x222 SWAP1
0x223 SWAP2
0x224 POP
0x225 PUSH1 0x0
0x227 DUP3
0x228 ADD
0x229 PUSH1 0x0
0x22b SWAP1
0x22c SLOAD
0x22d SWAP1
0x22e PUSH2 0x100
0x231 EXP
0x232 SWAP1
0x233 DIV
0x234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x249 AND
0x24a DUP2
0x24b PUSH1 0x0
0x24d ADD
0x24e PUSH1 0x0
0x250 PUSH2 0x100
0x253 EXP
0x254 DUP2
0x255 SLOAD
0x256 DUP2
0x257 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26c MUL
0x26d NOT
0x26e AND
0x26f SWAP1
0x270 DUP4
0x271 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x286 AND
0x287 MUL
0x288 OR
0x289 SWAP1
0x28a SSTORE
0x28b POP
0x28c PUSH1 0x1
0x28e DUP3
0x28f ADD
0x290 SLOAD
0x291 DUP2
0x292 PUSH1 0x1
0x294 ADD
0x295 SSTORE
0x296 POP
0x297 POP
0x298 POP
0x299 PUSH1 0x0
0x29b SLOAD
0x29c DUP3
0x29d EQ
0x29e ISZERO
0x29f PUSH2 0x2fa
0x2a2 JUMPI
---
0x20e: JUMPDEST 
0x210: V141 = 0x0
0x212: M[0x0] = 0x4
0x213: V142 = 0x20
0x215: V143 = 0x0
0x217: V144 = SHA3 0x0 0x20
0x219: V145 = 0x2
0x21b: V146 = MUL 0x2 V136
0x21c: V147 = ADD V146 V144
0x21d: V148 = 0x0
0x225: V149 = 0x0
0x228: V150 = ADD 0x0 0x0
0x229: V151 = 0x0
0x22c: V152 = S[0x0]
0x22e: V153 = 0x100
0x231: V154 = EXP 0x100 0x0
0x233: V155 = DIV V152 0x1
0x234: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x249: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x24b: V158 = 0x0
0x24d: V159 = ADD 0x0 V147
0x24e: V160 = 0x0
0x250: V161 = 0x100
0x253: V162 = EXP 0x100 0x0
0x255: V163 = S[V159]
0x257: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V165 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x26d: V166 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x26e: V167 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V163
0x271: V168 = 0xffffffffffffffffffffffffffffffffffffffff
0x286: V169 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x287: V170 = MUL V169 0x1
0x288: V171 = OR V170 V167
0x28a: S[V159] = V171
0x28c: V172 = 0x1
0x28f: V173 = ADD 0x0 0x1
0x290: V174 = S[0x1]
0x292: V175 = 0x1
0x294: V176 = ADD 0x1 V147
0x295: S[V176] = V174
0x299: V177 = 0x0
0x29b: V178 = S[0x0]
0x29d: V179 = EQ V32 V178
0x29e: V180 = ISZERO V179
0x29f: V181 = 0x2fa
0x2a2: JUMPI 0x2fa V180
---
Entry stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V11, 0x90, V32, 0x0]

================================

Block 0x2a3
[0x2a3:0x2f4]
---
Predecessors: [0x20e]
Successors: [0x2f5, 0x2f9]
---
0x2a3 CALLER
0x2a4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b9 AND
0x2ba PUSH2 0x8fc
0x2bd ADDRESS
0x2be PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d3 AND
0x2d4 BALANCE
0x2d5 SWAP1
0x2d6 DUP2
0x2d7 ISZERO
0x2d8 MUL
0x2d9 SWAP1
0x2da PUSH1 0x40
0x2dc MLOAD
0x2dd PUSH1 0x0
0x2df PUSH1 0x40
0x2e1 MLOAD
0x2e2 DUP1
0x2e3 DUP4
0x2e4 SUB
0x2e5 DUP2
0x2e6 DUP6
0x2e7 DUP9
0x2e8 DUP9
0x2e9 CALL
0x2ea SWAP4
0x2eb POP
0x2ec POP
0x2ed POP
0x2ee POP
0x2ef ISZERO
0x2f0 ISZERO
0x2f1 PUSH2 0x2f9
0x2f4 JUMPI
---
0x2a3: V182 = CALLER
0x2a4: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b9: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x2ba: V185 = 0x8fc
0x2bd: V186 = ADDRESS
0x2be: V187 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V188 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0x2d4: V189 = BALANCE V188
0x2d7: V190 = ISZERO V189
0x2d8: V191 = MUL V190 0x8fc
0x2da: V192 = 0x40
0x2dc: V193 = M[0x40]
0x2dd: V194 = 0x0
0x2df: V195 = 0x40
0x2e1: V196 = M[0x40]
0x2e4: V197 = SUB V193 V196
0x2e9: V198 = CALL V191 V184 V189 V196 V197 V196 0x0
0x2ef: V199 = ISZERO V198
0x2f0: V200 = ISZERO V199
0x2f1: V201 = 0x2f9
0x2f4: JUMPI 0x2f9 V200
---
Entry stack: [V11, 0x90, V32, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V32, 0x0]

================================

Block 0x2f5
[0x2f5:0x2f8]
---
Predecessors: [0x2a3]
Successors: []
---
0x2f5 PUSH1 0x0
0x2f7 DUP1
0x2f8 REVERT
---
0x2f5: V202 = 0x0
0x2f8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x90, V32, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V32, 0x0]

================================

Block 0x2f9
[0x2f9:0x2f9]
---
Predecessors: [0x2a3]
Successors: [0x2fa]
---
0x2f9 JUMPDEST
---
0x2f9: JUMPDEST 
---
Entry stack: [V11, 0x90, V32, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V32, 0x0]

================================

Block 0x2fa
[0x2fa:0x31f]
---
Predecessors: [0x20e, 0x2f9]
Successors: [0x320, 0x321]
---
0x2fa JUMPDEST
0x2fb PUSH1 0x1
0x2fd PUSH1 0xa
0x2ff TIMESTAMP
0x300 PUSH1 0x40
0x302 MLOAD
0x303 DUP1
0x304 DUP3
0x305 DUP2
0x306 MSTORE
0x307 PUSH1 0x20
0x309 ADD
0x30a SWAP2
0x30b POP
0x30c POP
0x30d PUSH1 0x40
0x30f MLOAD
0x310 DUP1
0x311 SWAP2
0x312 SUB
0x313 SWAP1
0x314 SHA3
0x315 PUSH1 0x1
0x317 SWAP1
0x318 DIV
0x319 DUP2
0x31a ISZERO
0x31b ISZERO
0x31c PUSH2 0x321
0x31f JUMPI
---
0x2fa: JUMPDEST 
0x2fb: V203 = 0x1
0x2fd: V204 = 0xa
0x2ff: V205 = TIMESTAMP
0x300: V206 = 0x40
0x302: V207 = M[0x40]
0x306: M[V207] = V205
0x307: V208 = 0x20
0x309: V209 = ADD 0x20 V207
0x30d: V210 = 0x40
0x30f: V211 = M[0x40]
0x312: V212 = SUB V209 V211
0x314: V213 = SHA3 V211 V212
0x315: V214 = 0x1
0x318: V215 = DIV V213 0x1
0x31a: V216 = ISZERO 0xa
0x31b: V217 = ISZERO 0x0
0x31c: V218 = 0x321
0x31f: JUMPI 0x321 0x1
---
Entry stack: [V11, 0x90, V32, 0x0]
Stack pops: 0
Stack additions: [0x1, 0xa, V215]
Exit stack: [V11, 0x90, V32, 0x0, 0x1, 0xa, V215]

================================

Block 0x320
[0x320:0x320]
---
Predecessors: [0x2fa]
Successors: []
---
0x320 INVALID
---
0x320: INVALID 
---
Entry stack: [V11, 0x90, V32, 0x0, 0x1, 0xa, V215]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V32, 0x0, 0x1, 0xa, V215]

================================

Block 0x321
[0x321:0x347]
---
Predecessors: [0x2fa]
Successors: [0x348]
---
0x321 JUMPDEST
0x322 MOD
0x323 ADD
0x324 PUSH1 0x0
0x326 DUP2
0x327 SWAP1
0x328 SSTORE
0x329 POP
0x32a ADDRESS
0x32b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x340 AND
0x341 BALANCE
0x342 PUSH1 0x1
0x344 DUP2
0x345 SWAP1
0x346 SSTORE
0x347 POP
---
0x321: JUMPDEST 
0x322: V219 = MOD V215 0xa
0x323: V220 = ADD V219 0x1
0x324: V221 = 0x0
0x328: S[0x0] = V220
0x32a: V222 = ADDRESS
0x32b: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x340: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x341: V225 = BALANCE V224
0x342: V226 = 0x1
0x346: S[0x1] = V225
---
Entry stack: [V11, 0x90, V32, 0x0, 0x1, 0xa, V215]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x90, V32, 0x0]

================================

Block 0x348
[0x348:0x34b]
---
Predecessors: [0x1a9, 0x321]
Successors: [0x90]
---
0x348 JUMPDEST
0x349 POP
0x34a POP
0x34b JUMP
---
0x348: JUMPDEST 
0x34b: JUMP 0x90
---
Entry stack: [V11, 0x90, V32, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x34c
[0x34c:0x351]
---
Predecessors: [0x9d]
Successors: [0xa5]
---
0x34c JUMPDEST
0x34d PUSH1 0x2
0x34f SLOAD
0x350 DUP2
0x351 JUMP
---
0x34c: JUMPDEST 
0x34d: V227 = 0x2
0x34f: V228 = S[0x2]
0x351: JUMP 0xa5
---
Entry stack: [V11, 0xa5]
Stack pops: 1
Stack additions: [S0, V228]
Exit stack: [V11, 0xa5, V228]

================================

Block 0x352
[0x352:0x3a9]
---
Predecessors: [0xc6]
Successors: [0x3aa, 0x3ae]
---
0x352 JUMPDEST
0x353 PUSH1 0x3
0x355 PUSH1 0x0
0x357 SWAP1
0x358 SLOAD
0x359 SWAP1
0x35a PUSH2 0x100
0x35d EXP
0x35e SWAP1
0x35f DIV
0x360 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x375 AND
0x376 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38b AND
0x38c CALLER
0x38d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a2 AND
0x3a3 EQ
0x3a4 ISZERO
0x3a5 ISZERO
0x3a6 PUSH2 0x3ae
0x3a9 JUMPI
---
0x352: JUMPDEST 
0x353: V229 = 0x3
0x355: V230 = 0x0
0x358: V231 = S[0x3]
0x35a: V232 = 0x100
0x35d: V233 = EXP 0x100 0x0
0x35f: V234 = DIV V231 0x1
0x360: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x375: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x376: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x38b: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x38c: V239 = CALLER
0x38d: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x3a3: V242 = EQ V241 V238
0x3a4: V243 = ISZERO V242
0x3a5: V244 = ISZERO V243
0x3a6: V245 = 0x3ae
0x3a9: JUMPI 0x3ae V244
---
Entry stack: [V11, 0xdc, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdc, V55]

================================

Block 0x3aa
[0x3aa:0x3ad]
---
Predecessors: [0x352]
Successors: []
---
0x3aa PUSH1 0x0
0x3ac DUP1
0x3ad REVERT
---
0x3aa: V246 = 0x0
0x3ad: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdc, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdc, V55]

================================

Block 0x3ae
[0x3ae:0x3b7]
---
Predecessors: [0x352]
Successors: [0xdc]
---
0x3ae JUMPDEST
0x3af DUP1
0x3b0 PUSH1 0x2
0x3b2 DUP2
0x3b3 SWAP1
0x3b4 SSTORE
0x3b5 POP
0x3b6 POP
0x3b7 JUMP
---
0x3ae: JUMPDEST 
0x3b0: V247 = 0x2
0x3b4: S[0x2] = V55
0x3b7: JUMP 0xdc
---
Entry stack: [V11, 0xdc, V55]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3b8
[0x3b8:0x40f]
---
Predecessors: [0xe9]
Successors: [0x410, 0x414]
---
0x3b8 JUMPDEST
0x3b9 PUSH1 0x3
0x3bb PUSH1 0x0
0x3bd SWAP1
0x3be SLOAD
0x3bf SWAP1
0x3c0 PUSH2 0x100
0x3c3 EXP
0x3c4 SWAP1
0x3c5 DIV
0x3c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3db AND
0x3dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f1 AND
0x3f2 CALLER
0x3f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x408 AND
0x409 EQ
0x40a ISZERO
0x40b ISZERO
0x40c PUSH2 0x414
0x40f JUMPI
---
0x3b8: JUMPDEST 
0x3b9: V248 = 0x3
0x3bb: V249 = 0x0
0x3be: V250 = S[0x3]
0x3c0: V251 = 0x100
0x3c3: V252 = EXP 0x100 0x0
0x3c5: V253 = DIV V250 0x1
0x3c6: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x3db: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x3dc: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f1: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x3f2: V258 = CALLER
0x3f3: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x408: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x409: V261 = EQ V260 V257
0x40a: V262 = ISZERO V261
0x40b: V263 = ISZERO V262
0x40c: V264 = 0x414
0x40f: JUMPI 0x414 V263
---
Entry stack: [V11, 0xff, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xff, V65]

================================

Block 0x410
[0x410:0x413]
---
Predecessors: [0x3b8]
Successors: []
---
0x410 PUSH1 0x0
0x412 DUP1
0x413 REVERT
---
0x410: V265 = 0x0
0x413: REVERT 0x0 0x0
---
Entry stack: [V11, 0xff, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xff, V65]

================================

Block 0x414
[0x414:0x471]
---
Predecessors: [0x3b8]
Successors: [0x472, 0x476]
---
0x414 JUMPDEST
0x415 PUSH1 0x3
0x417 PUSH1 0x0
0x419 SWAP1
0x41a SLOAD
0x41b SWAP1
0x41c PUSH2 0x100
0x41f EXP
0x420 SWAP1
0x421 DIV
0x422 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x437 AND
0x438 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44d AND
0x44e PUSH2 0x8fc
0x451 DUP3
0x452 SWAP1
0x453 DUP2
0x454 ISZERO
0x455 MUL
0x456 SWAP1
0x457 PUSH1 0x40
0x459 MLOAD
0x45a PUSH1 0x0
0x45c PUSH1 0x40
0x45e MLOAD
0x45f DUP1
0x460 DUP4
0x461 SUB
0x462 DUP2
0x463 DUP6
0x464 DUP9
0x465 DUP9
0x466 CALL
0x467 SWAP4
0x468 POP
0x469 POP
0x46a POP
0x46b POP
0x46c ISZERO
0x46d ISZERO
0x46e PUSH2 0x476
0x471 JUMPI
---
0x414: JUMPDEST 
0x415: V266 = 0x3
0x417: V267 = 0x0
0x41a: V268 = S[0x3]
0x41c: V269 = 0x100
0x41f: V270 = EXP 0x100 0x0
0x421: V271 = DIV V268 0x1
0x422: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x437: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x438: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x44d: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x44e: V276 = 0x8fc
0x454: V277 = ISZERO V65
0x455: V278 = MUL V277 0x8fc
0x457: V279 = 0x40
0x459: V280 = M[0x40]
0x45a: V281 = 0x0
0x45c: V282 = 0x40
0x45e: V283 = M[0x40]
0x461: V284 = SUB V280 V283
0x466: V285 = CALL V278 V275 V65 V283 V284 V283 0x0
0x46c: V286 = ISZERO V285
0x46d: V287 = ISZERO V286
0x46e: V288 = 0x476
0x471: JUMPI 0x476 V287
---
Entry stack: [V11, 0xff, V65]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xff, V65]

================================

Block 0x472
[0x472:0x475]
---
Predecessors: [0x414]
Successors: []
---
0x472 PUSH1 0x0
0x474 DUP1
0x475 REVERT
---
0x472: V289 = 0x0
0x475: REVERT 0x0 0x0
---
Entry stack: [V11, 0xff, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xff, V65]

================================

Block 0x476
[0x476:0x478]
---
Predecessors: [0x414]
Successors: [0xff]
---
0x476 JUMPDEST
0x477 POP
0x478 JUMP
---
0x476: JUMPDEST 
0x478: JUMP 0xff
---
Entry stack: [V11, 0xff, V65]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x479
[0x479:0x47e]
---
Predecessors: [0x10c]
Successors: [0x114]
---
0x479 JUMPDEST
0x47a PUSH1 0x1
0x47c SLOAD
0x47d DUP2
0x47e JUMP
---
0x479: JUMPDEST 
0x47a: V290 = 0x1
0x47c: V291 = S[0x1]
0x47e: JUMP 0x114
---
Entry stack: [V11, 0x114]
Stack pops: 1
Stack additions: [S0, V291]
Exit stack: [V11, 0x114, V291]

================================

Block 0x47f
[0x47f:0x48c]
---
Predecessors: [0x135]
Successors: [0x48d, 0x48e]
---
0x47f JUMPDEST
0x480 PUSH1 0x4
0x482 DUP2
0x483 DUP2
0x484 SLOAD
0x485 DUP2
0x486 LT
0x487 ISZERO
0x488 ISZERO
0x489 PUSH2 0x48e
0x48c JUMPI
---
0x47f: JUMPDEST 
0x480: V292 = 0x4
0x484: V293 = S[0x4]
0x486: V294 = LT V88 V293
0x487: V295 = ISZERO V294
0x488: V296 = ISZERO V295
0x489: V297 = 0x48e
0x48c: JUMPI 0x48e V296
---
Entry stack: [V11, 0x14b, V88]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V11, 0x14b, V88, 0x4, V88]

================================

Block 0x48d
[0x48d:0x48d]
---
Predecessors: [0x47f]
Successors: []
---
0x48d INVALID
---
0x48d: INVALID 
---
Entry stack: [V11, 0x14b, V88, 0x4, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14b, V88, 0x4, V88]

================================

Block 0x48e
[0x48e:0x4d1]
---
Predecessors: [0x47f]
Successors: [0x14b]
---
0x48e JUMPDEST
0x48f SWAP1
0x490 PUSH1 0x0
0x492 MSTORE
0x493 PUSH1 0x20
0x495 PUSH1 0x0
0x497 SHA3
0x498 SWAP1
0x499 PUSH1 0x2
0x49b MUL
0x49c ADD
0x49d PUSH1 0x0
0x49f SWAP2
0x4a0 POP
0x4a1 SWAP1
0x4a2 POP
0x4a3 DUP1
0x4a4 PUSH1 0x0
0x4a6 ADD
0x4a7 PUSH1 0x0
0x4a9 SWAP1
0x4aa SLOAD
0x4ab SWAP1
0x4ac PUSH2 0x100
0x4af EXP
0x4b0 SWAP1
0x4b1 DIV
0x4b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c7 AND
0x4c8 SWAP1
0x4c9 DUP1
0x4ca PUSH1 0x1
0x4cc ADD
0x4cd SLOAD
0x4ce SWAP1
0x4cf POP
0x4d0 DUP3
0x4d1 JUMP
---
0x48e: JUMPDEST 
0x490: V298 = 0x0
0x492: M[0x0] = 0x4
0x493: V299 = 0x20
0x495: V300 = 0x0
0x497: V301 = SHA3 0x0 0x20
0x499: V302 = 0x2
0x49b: V303 = MUL 0x2 V88
0x49c: V304 = ADD V303 V301
0x49d: V305 = 0x0
0x4a4: V306 = 0x0
0x4a6: V307 = ADD 0x0 V304
0x4a7: V308 = 0x0
0x4aa: V309 = S[V307]
0x4ac: V310 = 0x100
0x4af: V311 = EXP 0x100 0x0
0x4b1: V312 = DIV V309 0x1
0x4b2: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c7: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x4ca: V315 = 0x1
0x4cc: V316 = ADD 0x1 V304
0x4cd: V317 = S[V316]
0x4d1: JUMP 0x14b
---
Entry stack: [V11, 0x14b, V88, 0x4, V88]
Stack pops: 4
Stack additions: [S3, V314, V317]
Exit stack: [V11, 0x14b, V314, V317]

================================

Block 0x4d2
[0x4d2:0x4df]
---
Predecessors: [0x1af]
Successors: [0x4e0, 0x4ff]
---
0x4d2 JUMPDEST
0x4d3 DUP2
0x4d4 SLOAD
0x4d5 DUP2
0x4d6 DUP4
0x4d7 SSTORE
0x4d8 DUP2
0x4d9 DUP2
0x4da ISZERO
0x4db GT
0x4dc PUSH2 0x4ff
0x4df JUMPI
---
0x4d2: JUMPDEST 
0x4d4: V318 = S[0x4]
0x4d7: S[0x4] = V138
0x4da: V319 = ISZERO V318
0x4db: V320 = GT V319 V138
0x4dc: V321 = 0x4ff
0x4df: JUMPI 0x4ff V320
---
Entry stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138]
Stack pops: 2
Stack additions: [S1, S0, V318]
Exit stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138, V318]

================================

Block 0x4e0
[0x4e0:0x4fd]
---
Predecessors: [0x4d2]
Successors: [0x504]
---
0x4e0 PUSH1 0x2
0x4e2 MUL
0x4e3 DUP2
0x4e4 PUSH1 0x2
0x4e6 MUL
0x4e7 DUP4
0x4e8 PUSH1 0x0
0x4ea MSTORE
0x4eb PUSH1 0x20
0x4ed PUSH1 0x0
0x4ef SHA3
0x4f0 SWAP2
0x4f1 DUP3
0x4f2 ADD
0x4f3 SWAP2
0x4f4 ADD
0x4f5 PUSH2 0x4fe
0x4f8 SWAP2
0x4f9 SWAP1
0x4fa PUSH2 0x504
0x4fd JUMP
---
0x4e0: V322 = 0x2
0x4e2: V323 = MUL 0x2 V318
0x4e4: V324 = 0x2
0x4e6: V325 = MUL 0x2 V138
0x4e8: V326 = 0x0
0x4ea: M[0x0] = 0x4
0x4eb: V327 = 0x20
0x4ed: V328 = 0x0
0x4ef: V329 = SHA3 0x0 0x20
0x4f2: V330 = ADD V329 V323
0x4f4: V331 = ADD V329 V325
0x4f5: V332 = 0x4fe
0x4fa: V333 = 0x504
0x4fd: JUMP 0x504
---
Entry stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138, V318]
Stack pops: 3
Stack additions: [S2, S1, 0x4fe, V330, V331]
Exit stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138, 0x4fe, V330, V331]

================================

Block 0x4fe
[0x4fe:0x4fe]
---
Predecessors: [0x54f]
Successors: [0x4ff]
---
0x4fe JUMPDEST
---
0x4fe: JUMPDEST 
---
Entry stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138, V330]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138, V330]

================================

Block 0x4ff
[0x4ff:0x503]
---
Predecessors: [0x4d2, 0x4fe]
Successors: [0x20e]
---
0x4ff JUMPDEST
0x500 POP
0x501 POP
0x502 POP
0x503 JUMP
---
0x4ff: JUMPDEST 
0x503: JUMP 0x20e
---
Entry stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138]

================================

Block 0x504
[0x504:0x509]
---
Predecessors: [0x4e0]
Successors: [0x50a]
---
0x504 JUMPDEST
0x505 PUSH2 0x54f
0x508 SWAP2
0x509 SWAP1
---
0x504: JUMPDEST 
0x505: V334 = 0x54f
---
Entry stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138, 0x4fe, V330, V331]
Stack pops: 2
Stack additions: [0x54f, S1, S0]
Exit stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138, 0x4fe, 0x54f, V330, V331]

================================

Block 0x50a
[0x50a:0x512]
---
Predecessors: [0x504, 0x513]
Successors: [0x513, 0x54b]
---
0x50a JUMPDEST
0x50b DUP1
0x50c DUP3
0x50d GT
0x50e ISZERO
0x50f PUSH2 0x54b
0x512 JUMPI
---
0x50a: JUMPDEST 
0x50d: V335 = GT V330 S0
0x50e: V336 = ISZERO V335
0x50f: V337 = 0x54b
0x512: JUMPI 0x54b V336
---
Entry stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138, 0x4fe, 0x54f, V330, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138, 0x4fe, 0x54f, V330, S0]

================================

Block 0x513
[0x513:0x54a]
---
Predecessors: [0x50a]
Successors: [0x50a]
---
0x513 PUSH1 0x0
0x515 DUP1
0x516 DUP3
0x517 ADD
0x518 PUSH1 0x0
0x51a PUSH2 0x100
0x51d EXP
0x51e DUP2
0x51f SLOAD
0x520 SWAP1
0x521 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x536 MUL
0x537 NOT
0x538 AND
0x539 SWAP1
0x53a SSTORE
0x53b PUSH1 0x1
0x53d DUP3
0x53e ADD
0x53f PUSH1 0x0
0x541 SWAP1
0x542 SSTORE
0x543 POP
0x544 PUSH1 0x2
0x546 ADD
0x547 PUSH2 0x50a
0x54a JUMP
---
0x513: V338 = 0x0
0x517: V339 = ADD S0 0x0
0x518: V340 = 0x0
0x51a: V341 = 0x100
0x51d: V342 = EXP 0x100 0x0
0x51f: V343 = S[V339]
0x521: V344 = 0xffffffffffffffffffffffffffffffffffffffff
0x536: V345 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x537: V346 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x538: V347 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V343
0x53a: S[V339] = V347
0x53b: V348 = 0x1
0x53e: V349 = ADD S0 0x1
0x53f: V350 = 0x0
0x542: S[V349] = 0x0
0x544: V351 = 0x2
0x546: V352 = ADD 0x2 S0
0x547: V353 = 0x50a
0x54a: JUMP 0x50a
---
Entry stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138, 0x4fe, 0x54f, V330, S0]
Stack pops: 1
Stack additions: [V352]
Exit stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138, 0x4fe, 0x54f, V330, V352]

================================

Block 0x54b
[0x54b:0x54e]
---
Predecessors: [0x50a]
Successors: [0x54f]
---
0x54b JUMPDEST
0x54c POP
0x54d SWAP1
0x54e JUMP
---
0x54b: JUMPDEST 
0x54e: JUMP 0x54f
---
Entry stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138, 0x4fe, 0x54f, V330, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138, 0x4fe, V330]

================================

Block 0x54f
[0x54f:0x551]
---
Predecessors: [0x54b]
Successors: [0x4fe]
---
0x54f JUMPDEST
0x550 SWAP1
0x551 JUMP
---
0x54f: JUMPDEST 
0x551: JUMP 0x4fe
---
Entry stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138, 0x4fe, V330]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x90, V32, 0x0, 0x4, V136, V138, 0x20e, 0x4, V138, V330]

================================

Block 0x552
[0x552:0x57d]
---
Predecessors: []
Successors: []
---
0x552 STOP
0x553 LOG1
0x554 PUSH6 0x627a7a723058
0x55b SHA3
0x55c RETURN
0x55d REVERT
0x55e PUSH26 0x558fdbf8f117234269f2ed2c260879c33a6344547a7fe1b4c851
0x579 MISSING 0x4f
0x57a DUP15
0x57b MISSING 0xce
0x57c STOP
0x57d MISSING 0x29
---
0x552: STOP 
0x553: LOG S0 S1 S2
0x554: V354 = 0x627a7a723058
0x55b: V355 = SHA3 0x627a7a723058 S3
0x55c: RETURN V355 S4
0x55d: REVERT S0 S1
0x55e: V356 = 0x558fdbf8f117234269f2ed2c260879c33a6344547a7fe1b4c851
0x579: MISSING 0x4f
0x57b: MISSING 0xce
0x57c: STOP 
0x57d: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x558fdbf8f117234269f2ed2c260879c33a6344547a7fe1b4c851, S14, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14]
Exit stack: []

================================

Function 0:
Public function signature: 0x12333b32
Entry block: 0x7a
Exit block: 0x320
Body: 0x7a, 0x90, 0x194, 0x1a3, 0x1a9, 0x1af, 0x20e, 0x2a3, 0x2f5, 0x2f9, 0x2fa, 0x320, 0x321, 0x348, 0x4d2, 0x4e0, 0x4fe, 0x4ff, 0x504, 0x50a, 0x513, 0x54b, 0x54f

Function 1:
Public function signature: 0x9619367d
Entry block: 0x92
Exit block: 0xa5
Body: 0x92, 0x99, 0x9d, 0xa5, 0x34c

Function 2:
Public function signature: 0xe8147a25
Entry block: 0xbb
Exit block: 0xdc
Body: 0xbb, 0xc2, 0xc6, 0xdc, 0x352, 0x3aa, 0x3ae

Function 3:
Public function signature: 0xea92dd1d
Entry block: 0xde
Exit block: 0xff
Body: 0xde, 0xe5, 0xe9, 0xff, 0x3b8, 0x410, 0x414, 0x472, 0x476

Function 4:
Public function signature: 0xf3ac3df5
Entry block: 0x101
Exit block: 0x114
Body: 0x101, 0x108, 0x10c, 0x114, 0x479

Function 5:
Public function signature: 0xf82c50f1
Entry block: 0x12a
Exit block: 0x14b
Body: 0x12a, 0x131, 0x135, 0x14b, 0x47f, 0x48d, 0x48e

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

