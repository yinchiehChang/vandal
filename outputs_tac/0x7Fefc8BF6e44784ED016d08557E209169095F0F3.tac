Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x79]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0xa6fbb05
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x79
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0xa6fbb05
0x3b: V13 = EQ V11 0xa6fbb05
0x3c: V14 = 0x79
0x3f: JUMPI 0x79 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x84]
---
0x40 DUP1
0x41 PUSH4 0x181ffc5f
0x46 EQ
0x47 PUSH2 0x84
0x4a JUMPI
---
0x41: V15 = 0x181ffc5f
0x46: V16 = EQ 0x181ffc5f V11
0x47: V17 = 0x84
0x4a: JUMPI 0x84 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x97]
---
0x4b DUP1
0x4c PUSH4 0x31fd725a
0x51 EQ
0x52 PUSH2 0x97
0x55 JUMPI
---
0x4c: V18 = 0x31fd725a
0x51: V19 = EQ 0x31fd725a V11
0x52: V20 = 0x97
0x55: JUMPI 0x97 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xad]
---
0x56 DUP1
0x57 PUSH4 0x410c8005
0x5c EQ
0x5d PUSH2 0xad
0x60 JUMPI
---
0x57: V21 = 0x410c8005
0x5c: V22 = EQ 0x410c8005 V11
0x5d: V23 = 0xad
0x60: JUMPI 0xad V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xcc]
---
0x61 DUP1
0x62 PUSH4 0xb456ecc5
0x67 EQ
0x68 PUSH2 0xcc
0x6b JUMPI
---
0x62: V24 = 0xb456ecc5
0x67: V25 = EQ 0xb456ecc5 V11
0x68: V26 = 0xcc
0x6b: JUMPI 0xcc V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x12f]
---
0x6c DUP1
0x6d PUSH4 0xbea948c8
0x72 EQ
0x73 PUSH2 0x12f
0x76 JUMPI
---
0x6d: V27 = 0xbea948c8
0x72: V28 = EQ 0xbea948c8 V11
0x73: V29 = 0x12f
0x76: JUMPI 0x12f V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x0, 0x6c, 0x194, 0x1fb, 0x229, 0x254, 0x339]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x83]
---
Predecessors: [0xd]
Successors: [0x137]
---
0x79 JUMPDEST
0x7a PUSH2 0x77
0x7d PUSH1 0x4
0x7f CALLDATALOAD
0x80 PUSH2 0x137
0x83 JUMP
---
0x79: JUMPDEST 
0x7a: V30 = 0x77
0x7d: V31 = 0x4
0x7f: V32 = CALLDATALOAD 0x4
0x80: V33 = 0x137
0x83: JUMP 0x137
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V32]
Exit stack: [V11, 0x77, V32]

================================

Block 0x84
[0x84:0x96]
---
Predecessors: [0x40]
Successors: [0x197]
---
0x84 JUMPDEST
0x85 PUSH2 0x77
0x88 PUSH1 0x4
0x8a DUP1
0x8b CALLDATALOAD
0x8c PUSH1 0x24
0x8e DUP2
0x8f ADD
0x90 SWAP2
0x91 ADD
0x92 CALLDATALOAD
0x93 PUSH2 0x197
0x96 JUMP
---
0x84: JUMPDEST 
0x85: V34 = 0x77
0x88: V35 = 0x4
0x8b: V36 = CALLDATALOAD 0x4
0x8c: V37 = 0x24
0x8f: V38 = ADD V36 0x24
0x91: V39 = ADD 0x4 V36
0x92: V40 = CALLDATALOAD V39
0x93: V41 = 0x197
0x96: JUMP 0x197
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V38, V40]
Exit stack: [V11, 0x77, V38, V40]

================================

Block 0x97
[0x97:0x9d]
---
Predecessors: [0x4b]
Successors: [0x9e, 0xa2]
---
0x97 JUMPDEST
0x98 CALLVALUE
0x99 ISZERO
0x9a PUSH2 0xa2
0x9d JUMPI
---
0x97: JUMPDEST 
0x98: V42 = CALLVALUE
0x99: V43 = ISZERO V42
0x9a: V44 = 0xa2
0x9d: JUMPI 0xa2 V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9e
[0x9e:0xa1]
---
Predecessors: [0x97]
Successors: []
---
0x9e PUSH1 0x0
0xa0 DUP1
0xa1 REVERT
---
0x9e: V45 = 0x0
0xa1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0x1ff]
---
0xa2 JUMPDEST
0xa3 PUSH2 0x77
0xa6 PUSH1 0x4
0xa8 CALLDATALOAD
0xa9 PUSH2 0x1ff
0xac JUMP
---
0xa2: JUMPDEST 
0xa3: V46 = 0x77
0xa6: V47 = 0x4
0xa8: V48 = CALLDATALOAD 0x4
0xa9: V49 = 0x1ff
0xac: JUMP 0x1ff
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V48]
Exit stack: [V11, 0x77, V48]

================================

Block 0xad
[0xad:0xb3]
---
Predecessors: [0x56]
Successors: [0xb4, 0xb8]
---
0xad JUMPDEST
0xae CALLVALUE
0xaf ISZERO
0xb0 PUSH2 0xb8
0xb3 JUMPI
---
0xad: JUMPDEST 
0xae: V50 = CALLVALUE
0xaf: V51 = ISZERO V50
0xb0: V52 = 0xb8
0xb3: JUMPI 0xb8 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb4
[0xb4:0xb7]
---
Predecessors: [0xad]
Successors: []
---
0xb4 PUSH1 0x0
0xb6 DUP1
0xb7 REVERT
---
0xb4: V53 = 0x0
0xb7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xcb]
---
Predecessors: [0xad]
Successors: [0x237]
---
0xb8 JUMPDEST
0xb9 PUSH2 0x77
0xbc PUSH1 0x1
0xbe PUSH1 0xa0
0xc0 PUSH1 0x2
0xc2 EXP
0xc3 SUB
0xc4 PUSH1 0x4
0xc6 CALLDATALOAD
0xc7 AND
0xc8 PUSH2 0x237
0xcb JUMP
---
0xb8: JUMPDEST 
0xb9: V54 = 0x77
0xbc: V55 = 0x1
0xbe: V56 = 0xa0
0xc0: V57 = 0x2
0xc2: V58 = EXP 0x2 0xa0
0xc3: V59 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc4: V60 = 0x4
0xc6: V61 = CALLDATALOAD 0x4
0xc7: V62 = AND V61 0xffffffffffffffffffffffffffffffffffffffff
0xc8: V63 = 0x237
0xcb: JUMP 0x237
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77, V62]
Exit stack: [V11, 0x77, V62]

================================

Block 0xcc
[0xcc:0xd2]
---
Predecessors: [0x61]
Successors: [0xd3, 0xd7]
---
0xcc JUMPDEST
0xcd CALLVALUE
0xce ISZERO
0xcf PUSH2 0xd7
0xd2 JUMPI
---
0xcc: JUMPDEST 
0xcd: V64 = CALLVALUE
0xce: V65 = ISZERO V64
0xcf: V66 = 0xd7
0xd2: JUMPI 0xd7 V65
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd3
[0xd3:0xd6]
---
Predecessors: [0xcc]
Successors: []
---
0xd3 PUSH1 0x0
0xd5 DUP1
0xd6 REVERT
---
0xd3: V67 = 0x0
0xd6: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd7
[0xd7:0x11c]
---
Predecessors: [0xcc]
Successors: [0x280]
---
0xd7 JUMPDEST
0xd8 PUSH2 0x11d
0xdb PUSH1 0x4
0xdd PUSH1 0x24
0xdf DUP2
0xe0 CALLDATALOAD
0xe1 DUP2
0xe2 DUP2
0xe3 ADD
0xe4 SWAP1
0xe5 DUP4
0xe6 ADD
0xe7 CALLDATALOAD
0xe8 DUP1
0xe9 PUSH1 0x20
0xeb PUSH1 0x1f
0xed DUP3
0xee ADD
0xef DUP2
0xf0 SWAP1
0xf1 DIV
0xf2 DUP2
0xf3 MUL
0xf4 ADD
0xf5 PUSH1 0x40
0xf7 MLOAD
0xf8 SWAP1
0xf9 DUP2
0xfa ADD
0xfb PUSH1 0x40
0xfd MSTORE
0xfe DUP2
0xff DUP2
0x100 MSTORE
0x101 SWAP3
0x102 SWAP2
0x103 SWAP1
0x104 PUSH1 0x20
0x106 DUP5
0x107 ADD
0x108 DUP4
0x109 DUP4
0x10a DUP1
0x10b DUP3
0x10c DUP5
0x10d CALLDATACOPY
0x10e POP
0x10f SWAP5
0x110 SWAP7
0x111 POP
0x112 PUSH2 0x280
0x115 SWAP6
0x116 POP
0x117 POP
0x118 POP
0x119 POP
0x11a POP
0x11b POP
0x11c JUMP
---
0xd7: JUMPDEST 
0xd8: V68 = 0x11d
0xdb: V69 = 0x4
0xdd: V70 = 0x24
0xe0: V71 = CALLDATALOAD 0x4
0xe3: V72 = ADD V71 0x24
0xe6: V73 = ADD 0x4 V71
0xe7: V74 = CALLDATALOAD V73
0xe9: V75 = 0x20
0xeb: V76 = 0x1f
0xee: V77 = ADD V74 0x1f
0xf1: V78 = DIV V77 0x20
0xf3: V79 = MUL 0x20 V78
0xf4: V80 = ADD V79 0x20
0xf5: V81 = 0x40
0xf7: V82 = M[0x40]
0xfa: V83 = ADD V82 V80
0xfb: V84 = 0x40
0xfd: M[0x40] = V83
0x100: M[V82] = V74
0x104: V85 = 0x20
0x107: V86 = ADD V82 0x20
0x10d: CALLDATACOPY V86 V72 V74
0x112: V87 = 0x280
0x11c: JUMP 0x280
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x11d, V82]
Exit stack: [V11, 0x11d, V82]

================================

Block 0x11d
[0x11d:0x12e]
---
Predecessors: [0x2b2]
Successors: []
---
0x11d JUMPDEST
0x11e PUSH1 0x40
0x120 MLOAD
0x121 SWAP1
0x122 DUP2
0x123 MSTORE
0x124 PUSH1 0x20
0x126 ADD
0x127 PUSH1 0x40
0x129 MLOAD
0x12a DUP1
0x12b SWAP2
0x12c SUB
0x12d SWAP1
0x12e RETURN
---
0x11d: JUMPDEST 
0x11e: V88 = 0x40
0x120: V89 = M[0x40]
0x123: M[V89] = V256
0x124: V90 = 0x20
0x126: V91 = ADD 0x20 V89
0x127: V92 = 0x40
0x129: V93 = M[0x40]
0x12c: V94 = SUB V91 V93
0x12e: RETURN V93 V94
---
Entry stack: [V11, V256]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x12f
[0x12f:0x136]
---
Predecessors: [0x6c]
Successors: [0x2e5]
---
0x12f JUMPDEST
0x130 PUSH2 0x77
0x133 PUSH2 0x2e5
0x136 JUMP
---
0x12f: JUMPDEST 
0x130: V95 = 0x77
0x133: V96 = 0x2e5
0x136: JUMP 0x2e5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x137
[0x137:0x144]
---
Predecessors: [0x79]
Successors: [0x145, 0x151]
---
0x137 JUMPDEST
0x138 PUSH1 0x1
0x13a SLOAD
0x13b PUSH1 0xff
0x13d AND
0x13e ISZERO
0x13f DUP1
0x140 ISZERO
0x141 PUSH2 0x151
0x144 JUMPI
---
0x137: JUMPDEST 
0x138: V97 = 0x1
0x13a: V98 = S[0x1]
0x13b: V99 = 0xff
0x13d: V100 = AND 0xff V98
0x13e: V101 = ISZERO V100
0x140: V102 = ISZERO V101
0x141: V103 = 0x151
0x144: JUMPI 0x151 V102
---
Entry stack: [V11, 0x77, V32]
Stack pops: 0
Stack additions: [V101]
Exit stack: [V11, 0x77, V32, V101]

================================

Block 0x145
[0x145:0x150]
---
Predecessors: [0x137]
Successors: [0x151]
---
0x145 POP
0x146 PUSH8 0xde0b6b3a7640000
0x14f CALLVALUE
0x150 GT
---
0x146: V104 = 0xde0b6b3a7640000
0x14f: V105 = CALLVALUE
0x150: V106 = GT V105 0xde0b6b3a7640000
---
Entry stack: [V11, 0x77, V32, V101]
Stack pops: 1
Stack additions: [V106]
Exit stack: [V11, 0x77, V32, V106]

================================

Block 0x151
[0x151:0x156]
---
Predecessors: [0x137, 0x145]
Successors: [0x157, 0x15c]
---
0x151 JUMPDEST
0x152 DUP1
0x153 PUSH2 0x15c
0x156 JUMPI
---
0x151: JUMPDEST 
0x153: V107 = 0x15c
0x156: JUMPI 0x15c S0
---
Entry stack: [V11, 0x77, V32, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x77, V32, S0]

================================

Block 0x157
[0x157:0x15b]
---
Predecessors: [0x151]
Successors: [0x15c]
---
0x157 POP
0x158 PUSH1 0x0
0x15a SLOAD
0x15b ISZERO
---
0x158: V108 = 0x0
0x15a: V109 = S[0x0]
0x15b: V110 = ISZERO V109
---
Entry stack: [V11, 0x77, V32, S0]
Stack pops: 1
Stack additions: [V110]
Exit stack: [V11, 0x77, V32, V110]

================================

Block 0x15c
[0x15c:0x161]
---
Predecessors: [0x151, 0x157]
Successors: [0x162, 0x194]
---
0x15c JUMPDEST
0x15d ISZERO
0x15e PUSH2 0x194
0x161 JUMPI
---
0x15c: JUMPDEST 
0x15d: V111 = ISZERO S0
0x15e: V112 = 0x194
0x161: JUMPI 0x194 V111
---
Entry stack: [V11, 0x77, V32, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V32]

================================

Block 0x162
[0x162:0x193]
---
Predecessors: [0x15c]
Successors: [0x194]
---
0x162 PUSH1 0x0
0x164 DUP2
0x165 SWAP1
0x166 SSTORE
0x167 PUSH1 0x1
0x169 DUP1
0x16a SLOAD
0x16b PUSH21 0xffffffffffffffffffffffffffffffffffffffff00
0x181 NOT
0x182 AND
0x183 PUSH2 0x100
0x186 CALLER
0x187 PUSH1 0x1
0x189 PUSH1 0xa0
0x18b PUSH1 0x2
0x18d EXP
0x18e SUB
0x18f AND
0x190 MUL
0x191 OR
0x192 SWAP1
0x193 SSTORE
---
0x162: V113 = 0x0
0x166: S[0x0] = V32
0x167: V114 = 0x1
0x16a: V115 = S[0x1]
0x16b: V116 = 0xffffffffffffffffffffffffffffffffffffffff00
0x181: V117 = NOT 0xffffffffffffffffffffffffffffffffffffffff00
0x182: V118 = AND 0xffffffffffffffffffffff0000000000000000000000000000000000000000ff V115
0x183: V119 = 0x100
0x186: V120 = CALLER
0x187: V121 = 0x1
0x189: V122 = 0xa0
0x18b: V123 = 0x2
0x18d: V124 = EXP 0x2 0xa0
0x18e: V125 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18f: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x190: V127 = MUL V126 0x100
0x191: V128 = OR V127 V118
0x193: S[0x1] = V128
---
Entry stack: [V11, 0x77, V32]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x77, V32]

================================

Block 0x194
[0x194:0x196]
---
Predecessors: [0x15c, 0x162, 0x223, 0x237]
Successors: [0x77]
---
0x194 JUMPDEST
0x195 POP
0x196 JUMP
---
0x194: JUMPDEST 
0x196: JUMP 0x77
---
Entry stack: [V11, 0x77, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x197
[0x197:0x1be]
---
Predecessors: [0x84]
Successors: [0x1bf, 0x1fb]
---
0x197 JUMPDEST
0x198 DUP2
0x199 DUP2
0x19a PUSH1 0x40
0x19c MLOAD
0x19d DUP1
0x19e DUP4
0x19f DUP4
0x1a0 DUP1
0x1a1 DUP3
0x1a2 DUP5
0x1a3 CALLDATACOPY
0x1a4 DUP3
0x1a5 ADD
0x1a6 SWAP2
0x1a7 POP
0x1a8 POP
0x1a9 SWAP3
0x1aa POP
0x1ab POP
0x1ac POP
0x1ad PUSH1 0x40
0x1af MLOAD
0x1b0 SWAP1
0x1b1 DUP2
0x1b2 SWAP1
0x1b3 SUB
0x1b4 SWAP1
0x1b5 SHA3
0x1b6 PUSH1 0x0
0x1b8 SLOAD
0x1b9 EQ
0x1ba ISZERO
0x1bb PUSH2 0x1fb
0x1be JUMPI
---
0x197: JUMPDEST 
0x19a: V129 = 0x40
0x19c: V130 = M[0x40]
0x1a3: CALLDATACOPY V130 V38 V40
0x1a5: V131 = ADD V130 V40
0x1ad: V132 = 0x40
0x1af: V133 = M[0x40]
0x1b3: V134 = SUB V131 V133
0x1b5: V135 = SHA3 V133 V134
0x1b6: V136 = 0x0
0x1b8: V137 = S[0x0]
0x1b9: V138 = EQ V137 V135
0x1ba: V139 = ISZERO V138
0x1bb: V140 = 0x1fb
0x1be: JUMPI 0x1fb V139
---
Entry stack: [V11, 0x77, V38, V40]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x77, V38, V40]

================================

Block 0x1bf
[0x1bf:0x1f6]
---
Predecessors: [0x197]
Successors: [0x1f7, 0x1fb]
---
0x1bf CALLER
0x1c0 PUSH1 0x1
0x1c2 PUSH1 0xa0
0x1c4 PUSH1 0x2
0x1c6 EXP
0x1c7 SUB
0x1c8 AND
0x1c9 PUSH2 0x8fc
0x1cc ADDRESS
0x1cd PUSH1 0x1
0x1cf PUSH1 0xa0
0x1d1 PUSH1 0x2
0x1d3 EXP
0x1d4 SUB
0x1d5 AND
0x1d6 BALANCE
0x1d7 SWAP1
0x1d8 DUP2
0x1d9 ISZERO
0x1da MUL
0x1db SWAP1
0x1dc PUSH1 0x40
0x1de MLOAD
0x1df PUSH1 0x0
0x1e1 PUSH1 0x40
0x1e3 MLOAD
0x1e4 DUP1
0x1e5 DUP4
0x1e6 SUB
0x1e7 DUP2
0x1e8 DUP6
0x1e9 DUP9
0x1ea DUP9
0x1eb CALL
0x1ec SWAP4
0x1ed POP
0x1ee POP
0x1ef POP
0x1f0 POP
0x1f1 ISZERO
0x1f2 ISZERO
0x1f3 PUSH2 0x1fb
0x1f6 JUMPI
---
0x1bf: V141 = CALLER
0x1c0: V142 = 0x1
0x1c2: V143 = 0xa0
0x1c4: V144 = 0x2
0x1c6: V145 = EXP 0x2 0xa0
0x1c7: V146 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c8: V147 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x1c9: V148 = 0x8fc
0x1cc: V149 = ADDRESS
0x1cd: V150 = 0x1
0x1cf: V151 = 0xa0
0x1d1: V152 = 0x2
0x1d3: V153 = EXP 0x2 0xa0
0x1d4: V154 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d5: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x1d6: V156 = BALANCE V155
0x1d9: V157 = ISZERO V156
0x1da: V158 = MUL V157 0x8fc
0x1dc: V159 = 0x40
0x1de: V160 = M[0x40]
0x1df: V161 = 0x0
0x1e1: V162 = 0x40
0x1e3: V163 = M[0x40]
0x1e6: V164 = SUB V160 V163
0x1eb: V165 = CALL V158 V147 V156 V163 V164 V163 0x0
0x1f1: V166 = ISZERO V165
0x1f2: V167 = ISZERO V166
0x1f3: V168 = 0x1fb
0x1f6: JUMPI 0x1fb V167
---
Entry stack: [V11, 0x77, V38, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V38, V40]

================================

Block 0x1f7
[0x1f7:0x1fa]
---
Predecessors: [0x1bf]
Successors: []
---
0x1f7 PUSH1 0x0
0x1f9 DUP1
0x1fa REVERT
---
0x1f7: V169 = 0x0
0x1fa: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77, V38, V40]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V38, V40]

================================

Block 0x1fb
[0x1fb:0x1fe]
---
Predecessors: [0x197, 0x1bf]
Successors: [0x77]
---
0x1fb JUMPDEST
0x1fc POP
0x1fd POP
0x1fe JUMP
---
0x1fb: JUMPDEST 
0x1fe: JUMP 0x77
---
Entry stack: [V11, 0x77, V38, V40]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ff
[0x1ff:0x20a]
---
Predecessors: [0xa2]
Successors: [0x20b, 0x223]
---
0x1ff JUMPDEST
0x200 PUSH1 0x0
0x202 SLOAD
0x203 DUP2
0x204 EQ
0x205 DUP1
0x206 ISZERO
0x207 PUSH2 0x223
0x20a JUMPI
---
0x1ff: JUMPDEST 
0x200: V170 = 0x0
0x202: V171 = S[0x0]
0x204: V172 = EQ V48 V171
0x206: V173 = ISZERO V172
0x207: V174 = 0x223
0x20a: JUMPI 0x223 V173
---
Entry stack: [V11, 0x77, V48]
Stack pops: 1
Stack additions: [S0, V172]
Exit stack: [V11, 0x77, V48, V172]

================================

Block 0x20b
[0x20b:0x222]
---
Predecessors: [0x1ff]
Successors: [0x223]
---
0x20b POP
0x20c PUSH1 0x1
0x20e SLOAD
0x20f CALLER
0x210 PUSH1 0x1
0x212 PUSH1 0xa0
0x214 PUSH1 0x2
0x216 EXP
0x217 SUB
0x218 SWAP1
0x219 DUP2
0x21a AND
0x21b PUSH2 0x100
0x21e SWAP1
0x21f SWAP3
0x220 DIV
0x221 AND
0x222 EQ
---
0x20c: V175 = 0x1
0x20e: V176 = S[0x1]
0x20f: V177 = CALLER
0x210: V178 = 0x1
0x212: V179 = 0xa0
0x214: V180 = 0x2
0x216: V181 = EXP 0x2 0xa0
0x217: V182 = SUB 0x10000000000000000000000000000000000000000 0x1
0x21a: V183 = AND 0xffffffffffffffffffffffffffffffffffffffff V177
0x21b: V184 = 0x100
0x220: V185 = DIV V176 0x100
0x221: V186 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x222: V187 = EQ V186 V183
---
Entry stack: [V11, 0x77, V48, V172]
Stack pops: 1
Stack additions: [V187]
Exit stack: [V11, 0x77, V48, V187]

================================

Block 0x223
[0x223:0x228]
---
Predecessors: [0x1ff, 0x20b]
Successors: [0x194, 0x229]
---
0x223 JUMPDEST
0x224 ISZERO
0x225 PUSH2 0x194
0x228 JUMPI
---
0x223: JUMPDEST 
0x224: V188 = ISZERO S0
0x225: V189 = 0x194
0x228: JUMPI 0x194 V188
---
Entry stack: [V11, 0x77, V48, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77, V48]

================================

Block 0x229
[0x229:0x236]
---
Predecessors: [0x223]
Successors: [0x77]
---
0x229 PUSH1 0x1
0x22b DUP1
0x22c SLOAD
0x22d PUSH1 0xff
0x22f NOT
0x230 AND
0x231 DUP2
0x232 OR
0x233 SWAP1
0x234 SSTORE
0x235 POP
0x236 JUMP
---
0x229: V190 = 0x1
0x22c: V191 = S[0x1]
0x22d: V192 = 0xff
0x22f: V193 = NOT 0xff
0x230: V194 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V191
0x232: V195 = OR 0x1 V194
0x234: S[0x1] = V195
0x236: JUMP 0x77
---
Entry stack: [V11, 0x77, V48]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x237
[0x237:0x253]
---
Predecessors: [0xb8]
Successors: [0x194, 0x254]
---
0x237 JUMPDEST
0x238 PUSH1 0x1
0x23a SLOAD
0x23b CALLER
0x23c PUSH1 0x1
0x23e PUSH1 0xa0
0x240 PUSH1 0x2
0x242 EXP
0x243 SUB
0x244 SWAP1
0x245 DUP2
0x246 AND
0x247 PUSH2 0x100
0x24a SWAP1
0x24b SWAP3
0x24c DIV
0x24d AND
0x24e EQ
0x24f ISZERO
0x250 PUSH2 0x194
0x253 JUMPI
---
0x237: JUMPDEST 
0x238: V196 = 0x1
0x23a: V197 = S[0x1]
0x23b: V198 = CALLER
0x23c: V199 = 0x1
0x23e: V200 = 0xa0
0x240: V201 = 0x2
0x242: V202 = EXP 0x2 0xa0
0x243: V203 = SUB 0x10000000000000000000000000000000000000000 0x1
0x246: V204 = AND 0xffffffffffffffffffffffffffffffffffffffff V198
0x247: V205 = 0x100
0x24c: V206 = DIV V197 0x100
0x24d: V207 = AND V206 0xffffffffffffffffffffffffffffffffffffffff
0x24e: V208 = EQ V207 V204
0x24f: V209 = ISZERO V208
0x250: V210 = 0x194
0x253: JUMPI 0x194 V209
---
Entry stack: [V11, 0x77, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77, V62]

================================

Block 0x254
[0x254:0x27f]
---
Predecessors: [0x237]
Successors: [0x77]
---
0x254 PUSH1 0x2
0x256 DUP1
0x257 SLOAD
0x258 PUSH1 0x1
0x25a PUSH1 0xa0
0x25c PUSH1 0x2
0x25e EXP
0x25f SUB
0x260 DUP4
0x261 AND
0x262 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x277 NOT
0x278 SWAP1
0x279 SWAP2
0x27a AND
0x27b OR
0x27c SWAP1
0x27d SSTORE
0x27e POP
0x27f JUMP
---
0x254: V211 = 0x2
0x257: V212 = S[0x2]
0x258: V213 = 0x1
0x25a: V214 = 0xa0
0x25c: V215 = 0x2
0x25e: V216 = EXP 0x2 0xa0
0x25f: V217 = SUB 0x10000000000000000000000000000000000000000 0x1
0x261: V218 = AND V62 0xffffffffffffffffffffffffffffffffffffffff
0x262: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x277: V220 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x27a: V221 = AND V212 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x27b: V222 = OR V221 V218
0x27d: S[0x2] = V222
0x27f: JUMP 0x77
---
Entry stack: [V11, 0x77, V62]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x280
[0x280:0x292]
---
Predecessors: [0xd7]
Successors: [0x293]
---
0x280 JUMPDEST
0x281 PUSH1 0x0
0x283 DUP2
0x284 PUSH1 0x40
0x286 MLOAD
0x287 DUP1
0x288 DUP3
0x289 DUP1
0x28a MLOAD
0x28b SWAP1
0x28c PUSH1 0x20
0x28e ADD
0x28f SWAP1
0x290 DUP1
0x291 DUP4
0x292 DUP4
---
0x280: JUMPDEST 
0x281: V223 = 0x0
0x284: V224 = 0x40
0x286: V225 = M[0x40]
0x28a: V226 = M[V82]
0x28c: V227 = 0x20
0x28e: V228 = ADD 0x20 V82
---
Entry stack: [V11, 0x11d, V82]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V225, V225, V228, V226, V226, V225, V228]
Exit stack: [V11, 0x11d, V82, 0x0, V82, V225, V225, V228, V226, V226, V225, V228]

================================

Block 0x293
[0x293:0x29b]
---
Predecessors: [0x280, 0x29c]
Successors: [0x29c, 0x2b2]
---
0x293 JUMPDEST
0x294 PUSH1 0x20
0x296 DUP4
0x297 LT
0x298 PUSH2 0x2b2
0x29b JUMPI
---
0x293: JUMPDEST 
0x294: V229 = 0x20
0x297: V230 = LT S2 0x20
0x298: V231 = 0x2b2
0x29b: JUMPI 0x2b2 V230
---
Entry stack: [V11, 0x11d, V82, 0x0, V82, V225, V225, V228, V226, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x11d, V82, 0x0, V82, V225, V225, V228, V226, S2, S1, S0]

================================

Block 0x29c
[0x29c:0x2b1]
---
Predecessors: [0x293]
Successors: [0x293]
---
0x29c DUP1
0x29d MLOAD
0x29e DUP3
0x29f MSTORE
0x2a0 PUSH1 0x1f
0x2a2 NOT
0x2a3 SWAP1
0x2a4 SWAP3
0x2a5 ADD
0x2a6 SWAP2
0x2a7 PUSH1 0x20
0x2a9 SWAP2
0x2aa DUP3
0x2ab ADD
0x2ac SWAP2
0x2ad ADD
0x2ae PUSH2 0x293
0x2b1 JUMP
---
0x29d: V232 = M[S0]
0x29f: M[S1] = V232
0x2a0: V233 = 0x1f
0x2a2: V234 = NOT 0x1f
0x2a5: V235 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x2a7: V236 = 0x20
0x2ab: V237 = ADD 0x20 S1
0x2ad: V238 = ADD 0x20 S0
0x2ae: V239 = 0x293
0x2b1: JUMP 0x293
---
Entry stack: [V11, 0x11d, V82, 0x0, V82, V225, V225, V228, V226, S2, S1, S0]
Stack pops: 3
Stack additions: [V235, V237, V238]
Exit stack: [V11, 0x11d, V82, 0x0, V82, V225, V225, V228, V226, V235, V237, V238]

================================

Block 0x2b2
[0x2b2:0x2e4]
---
Predecessors: [0x293]
Successors: [0x11d]
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x1
0x2b5 DUP4
0x2b6 PUSH1 0x20
0x2b8 SUB
0x2b9 PUSH2 0x100
0x2bc EXP
0x2bd SUB
0x2be DUP1
0x2bf NOT
0x2c0 DUP3
0x2c1 MLOAD
0x2c2 AND
0x2c3 DUP2
0x2c4 DUP5
0x2c5 MLOAD
0x2c6 AND
0x2c7 OR
0x2c8 SWAP1
0x2c9 SWAP3
0x2ca MSTORE
0x2cb POP
0x2cc POP
0x2cd POP
0x2ce SWAP2
0x2cf SWAP1
0x2d0 SWAP2
0x2d1 ADD
0x2d2 SWAP3
0x2d3 POP
0x2d4 PUSH1 0x40
0x2d6 SWAP2
0x2d7 POP
0x2d8 POP
0x2d9 MLOAD
0x2da DUP1
0x2db SWAP2
0x2dc SUB
0x2dd SWAP1
0x2de SHA3
0x2df SWAP1
0x2e0 POP
0x2e1 SWAP2
0x2e2 SWAP1
0x2e3 POP
0x2e4 JUMP
---
0x2b2: JUMPDEST 
0x2b3: V240 = 0x1
0x2b6: V241 = 0x20
0x2b8: V242 = SUB 0x20 S2
0x2b9: V243 = 0x100
0x2bc: V244 = EXP 0x100 V242
0x2bd: V245 = SUB V244 0x1
0x2bf: V246 = NOT V245
0x2c1: V247 = M[S0]
0x2c2: V248 = AND V247 V246
0x2c5: V249 = M[S1]
0x2c6: V250 = AND V249 V245
0x2c7: V251 = OR V250 V248
0x2ca: M[S1] = V251
0x2d1: V252 = ADD V226 V225
0x2d4: V253 = 0x40
0x2d9: V254 = M[0x40]
0x2dc: V255 = SUB V252 V254
0x2de: V256 = SHA3 V254 V255
0x2e4: JUMP 0x11d
---
Entry stack: [V11, 0x11d, V82, 0x0, V82, V225, V225, V228, V226, S2, S1, S0]
Stack pops: 11
Stack additions: [V256]
Exit stack: [V11, V256]

================================

Block 0x2e5
[0x2e5:0x2fc]
---
Predecessors: [0x12f]
Successors: [0x2fd, 0x339]
---
0x2e5 JUMPDEST
0x2e6 PUSH1 0x2
0x2e8 SLOAD
0x2e9 CALLER
0x2ea PUSH1 0x1
0x2ec PUSH1 0xa0
0x2ee PUSH1 0x2
0x2f0 EXP
0x2f1 SUB
0x2f2 SWAP1
0x2f3 DUP2
0x2f4 AND
0x2f5 SWAP2
0x2f6 AND
0x2f7 EQ
0x2f8 ISZERO
0x2f9 PUSH2 0x339
0x2fc JUMPI
---
0x2e5: JUMPDEST 
0x2e6: V257 = 0x2
0x2e8: V258 = S[0x2]
0x2e9: V259 = CALLER
0x2ea: V260 = 0x1
0x2ec: V261 = 0xa0
0x2ee: V262 = 0x2
0x2f0: V263 = EXP 0x2 0xa0
0x2f1: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f4: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x2f6: V266 = AND V258 0xffffffffffffffffffffffffffffffffffffffff
0x2f7: V267 = EQ V266 V265
0x2f8: V268 = ISZERO V267
0x2f9: V269 = 0x339
0x2fc: JUMPI 0x339 V268
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x2fd
[0x2fd:0x334]
---
Predecessors: [0x2e5]
Successors: [0x335, 0x339]
---
0x2fd CALLER
0x2fe PUSH1 0x1
0x300 PUSH1 0xa0
0x302 PUSH1 0x2
0x304 EXP
0x305 SUB
0x306 AND
0x307 PUSH2 0x8fc
0x30a ADDRESS
0x30b PUSH1 0x1
0x30d PUSH1 0xa0
0x30f PUSH1 0x2
0x311 EXP
0x312 SUB
0x313 AND
0x314 BALANCE
0x315 SWAP1
0x316 DUP2
0x317 ISZERO
0x318 MUL
0x319 SWAP1
0x31a PUSH1 0x40
0x31c MLOAD
0x31d PUSH1 0x0
0x31f PUSH1 0x40
0x321 MLOAD
0x322 DUP1
0x323 DUP4
0x324 SUB
0x325 DUP2
0x326 DUP6
0x327 DUP9
0x328 DUP9
0x329 CALL
0x32a SWAP4
0x32b POP
0x32c POP
0x32d POP
0x32e POP
0x32f ISZERO
0x330 ISZERO
0x331 PUSH2 0x339
0x334 JUMPI
---
0x2fd: V270 = CALLER
0x2fe: V271 = 0x1
0x300: V272 = 0xa0
0x302: V273 = 0x2
0x304: V274 = EXP 0x2 0xa0
0x305: V275 = SUB 0x10000000000000000000000000000000000000000 0x1
0x306: V276 = AND 0xffffffffffffffffffffffffffffffffffffffff V270
0x307: V277 = 0x8fc
0x30a: V278 = ADDRESS
0x30b: V279 = 0x1
0x30d: V280 = 0xa0
0x30f: V281 = 0x2
0x311: V282 = EXP 0x2 0xa0
0x312: V283 = SUB 0x10000000000000000000000000000000000000000 0x1
0x313: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V278
0x314: V285 = BALANCE V284
0x317: V286 = ISZERO V285
0x318: V287 = MUL V286 0x8fc
0x31a: V288 = 0x40
0x31c: V289 = M[0x40]
0x31d: V290 = 0x0
0x31f: V291 = 0x40
0x321: V292 = M[0x40]
0x324: V293 = SUB V289 V292
0x329: V294 = CALL V287 V276 V285 V292 V293 V292 0x0
0x32f: V295 = ISZERO V294
0x330: V296 = ISZERO V295
0x331: V297 = 0x339
0x334: JUMPI 0x339 V296
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x335
[0x335:0x338]
---
Predecessors: [0x2fd]
Successors: []
---
0x335 PUSH1 0x0
0x337 DUP1
0x338 REVERT
---
0x335: V298 = 0x0
0x338: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x339
[0x339:0x33a]
---
Predecessors: [0x2e5, 0x2fd]
Successors: [0x77]
---
0x339 JUMPDEST
0x33a JUMP
---
0x339: JUMPDEST 
0x33a: JUMP 0x77
---
Entry stack: [V11, 0x77]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x33b
[0x33b:0x366]
---
Predecessors: []
Successors: []
---
0x33b STOP
0x33c LOG1
0x33d PUSH6 0x627a7a723058
0x344 SHA3
0x345 SWAP11
0x346 DUP1
0x347 MISSING 0x48
0x348 MISSING 0x27
0x349 PUSH6 0xca1171cd272f
0x350 EXTCODEHASH
0x351 DUP11
0x352 DUP1
0x353 MISSING 0xdd
0x354 LOG2
0x355 MSTORE
0x356 MISSING 0xa9
0x357 MISSING 0xe7
0x358 MISSING 0xc9
0x359 MISSING 0xf6
0x35a MISSING 0xb6
0x35b MISSING 0x25
0x35c MISSING 0xcb
0x35d PUSH7 0x47c96154bc56ed
0x365 STOP
0x366 MISSING 0x29
---
0x33b: STOP 
0x33c: LOG S0 S1 S2
0x33d: V299 = 0x627a7a723058
0x344: V300 = SHA3 0x627a7a723058 S3
0x347: MISSING 0x48
0x348: MISSING 0x27
0x349: V301 = 0xca1171cd272f
0x350: V302 = EXTCODEHASH 0xca1171cd272f
0x353: MISSING 0xdd
0x354: LOG S0 S1 S2 S3
0x355: M[S4] = S5
0x356: MISSING 0xa9
0x357: MISSING 0xe7
0x358: MISSING 0xc9
0x359: MISSING 0xf6
0x35a: MISSING 0xb6
0x35b: MISSING 0x25
0x35c: MISSING 0xcb
0x35d: V303 = 0x47c96154bc56ed
0x365: STOP 
0x366: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S14, S14, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, V300, S9, S9, V302, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, 0x47c96154bc56ed]
Exit stack: []

================================

Function 0:
Public function signature: 0xa6fbb05
Entry block: 0x79
Exit block: 0x77
Body: 0x77, 0x79, 0x137, 0x145, 0x151, 0x157, 0x15c, 0x162, 0x194

Function 1:
Public function signature: 0x181ffc5f
Entry block: 0x84
Exit block: 0x77
Body: 0x77, 0x84, 0x197, 0x1bf, 0x1f7, 0x1fb

Function 2:
Public function signature: 0x31fd725a
Entry block: 0x97
Exit block: 0x77
Body: 0x77, 0x97, 0x9e, 0xa2, 0x194, 0x1ff, 0x20b, 0x223, 0x229

Function 3:
Public function signature: 0x410c8005
Entry block: 0xad
Exit block: 0x77
Body: 0x77, 0xad, 0xb4, 0xb8, 0x194, 0x237, 0x254

Function 4:
Public function signature: 0xb456ecc5
Entry block: 0xcc
Exit block: 0x11d
Body: 0xcc, 0xd3, 0xd7, 0x11d, 0x280, 0x293, 0x29c, 0x2b2

Function 5:
Public function signature: 0xbea948c8
Entry block: 0x12f
Exit block: 0x335
Body: 0x77, 0x12f, 0x2e5, 0x2fd, 0x335, 0x339

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x77
Body: 0x77

