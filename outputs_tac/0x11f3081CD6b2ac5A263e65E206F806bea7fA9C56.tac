Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x67]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x18c0e04f
0x3c EQ
0x3d PUSH2 0x67
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x18c0e04f
0x3c: V13 = EQ 0x18c0e04f V11
0x3d: V14 = 0x67
0x40: JUMPI 0x67 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x71]
---
0x41 DUP1
0x42 PUSH4 0x3ccfd60b
0x47 EQ
0x48 PUSH2 0x71
0x4b JUMPI
---
0x42: V15 = 0x3ccfd60b
0x47: V16 = EQ 0x3ccfd60b V11
0x48: V17 = 0x71
0x4b: JUMPI 0x71 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x88]
---
0x4c DUP1
0x4d PUSH4 0x4c8cab79
0x52 EQ
0x53 PUSH2 0x88
0x56 JUMPI
---
0x4d: V18 = 0x4c8cab79
0x52: V19 = EQ 0x4c8cab79 V11
0x53: V20 = 0x88
0x56: JUMPI 0x88 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xb3]
---
0x57 DUP1
0x58 PUSH4 0x8da5cb5b
0x5d EQ
0x5e PUSH2 0xb3
0x61 JUMPI
---
0x58: V21 = 0x8da5cb5b
0x5d: V22 = EQ 0x8da5cb5b V11
0x5e: V23 = 0xb3
0x61: JUMPI 0xb3 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x66]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 REVERT
---
0x62: JUMPDEST 
0x63: V24 = 0x0
0x66: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x67
[0x67:0x6e]
---
Predecessors: [0xd]
Successors: [0x10a]
---
0x67 JUMPDEST
0x68 PUSH2 0x6f
0x6b PUSH2 0x10a
0x6e JUMP
---
0x67: JUMPDEST 
0x68: V25 = 0x6f
0x6b: V26 = 0x10a
0x6e: JUMP 0x10a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6f]
Exit stack: [V11, 0x6f]

================================

Block 0x6f
[0x6f:0x70]
---
Predecessors: [0x15d]
Successors: []
---
0x6f JUMPDEST
0x70 STOP
---
0x6f: JUMPDEST 
0x70: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x71
[0x71:0x78]
---
Predecessors: [0x41]
Successors: [0x79, 0x7d]
---
0x71 JUMPDEST
0x72 CALLVALUE
0x73 DUP1
0x74 ISZERO
0x75 PUSH2 0x7d
0x78 JUMPI
---
0x71: JUMPDEST 
0x72: V27 = CALLVALUE
0x74: V28 = ISZERO V27
0x75: V29 = 0x7d
0x78: JUMPI 0x7d V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V27]
Exit stack: [V11, V27]

================================

Block 0x79
[0x79:0x7c]
---
Predecessors: [0x71]
Successors: []
---
0x79 PUSH1 0x0
0x7b DUP1
0x7c REVERT
---
0x79: V30 = 0x0
0x7c: REVERT 0x0 0x0
---
Entry stack: [V11, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V27]

================================

Block 0x7d
[0x7d:0x85]
---
Predecessors: [0x71]
Successors: [0x15f]
---
0x7d JUMPDEST
0x7e POP
0x7f PUSH2 0x86
0x82 PUSH2 0x15f
0x85 JUMP
---
0x7d: JUMPDEST 
0x7f: V31 = 0x86
0x82: V32 = 0x15f
0x85: JUMP 0x15f
---
Entry stack: [V11, V27]
Stack pops: 1
Stack additions: [0x86]
Exit stack: [V11, 0x86]

================================

Block 0x86
[0x86:0x87]
---
Predecessors: [0x217]
Successors: []
---
0x86 JUMPDEST
0x87 STOP
---
0x86: JUMPDEST 
0x87: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x88
[0x88:0x8f]
---
Predecessors: [0x4c]
Successors: [0x90, 0x94]
---
0x88 JUMPDEST
0x89 CALLVALUE
0x8a DUP1
0x8b ISZERO
0x8c PUSH2 0x94
0x8f JUMPI
---
0x88: JUMPDEST 
0x89: V33 = CALLVALUE
0x8b: V34 = ISZERO V33
0x8c: V35 = 0x94
0x8f: JUMPI 0x94 V34
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V33]
Exit stack: [V11, V33]

================================

Block 0x90
[0x90:0x93]
---
Predecessors: [0x88]
Successors: []
---
0x90 PUSH1 0x0
0x92 DUP1
0x93 REVERT
---
0x90: V36 = 0x0
0x93: REVERT 0x0 0x0
---
Entry stack: [V11, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V33]

================================

Block 0x94
[0x94:0x9c]
---
Predecessors: [0x88]
Successors: [0x21a]
---
0x94 JUMPDEST
0x95 POP
0x96 PUSH2 0x9d
0x99 PUSH2 0x21a
0x9c JUMP
---
0x94: JUMPDEST 
0x96: V37 = 0x9d
0x99: V38 = 0x21a
0x9c: JUMP 0x21a
---
Entry stack: [V11, V33]
Stack pops: 1
Stack additions: [0x9d]
Exit stack: [V11, 0x9d]

================================

Block 0x9d
[0x9d:0xb2]
---
Predecessors: [0x21a]
Successors: []
---
0x9d JUMPDEST
0x9e PUSH1 0x40
0xa0 MLOAD
0xa1 DUP1
0xa2 DUP3
0xa3 DUP2
0xa4 MSTORE
0xa5 PUSH1 0x20
0xa7 ADD
0xa8 SWAP2
0xa9 POP
0xaa POP
0xab PUSH1 0x40
0xad MLOAD
0xae DUP1
0xaf SWAP2
0xb0 SUB
0xb1 SWAP1
0xb2 RETURN
---
0x9d: JUMPDEST 
0x9e: V39 = 0x40
0xa0: V40 = M[0x40]
0xa4: M[V40] = V127
0xa5: V41 = 0x20
0xa7: V42 = ADD 0x20 V40
0xab: V43 = 0x40
0xad: V44 = M[0x40]
0xb0: V45 = SUB V42 V44
0xb2: RETURN V44 V45
---
Entry stack: [V11, 0x9d, V127]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x9d]

================================

Block 0xb3
[0xb3:0xba]
---
Predecessors: [0x57]
Successors: [0xbb, 0xbf]
---
0xb3 JUMPDEST
0xb4 CALLVALUE
0xb5 DUP1
0xb6 ISZERO
0xb7 PUSH2 0xbf
0xba JUMPI
---
0xb3: JUMPDEST 
0xb4: V46 = CALLVALUE
0xb6: V47 = ISZERO V46
0xb7: V48 = 0xbf
0xba: JUMPI 0xbf V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V46]
Exit stack: [V11, V46]

================================

Block 0xbb
[0xbb:0xbe]
---
Predecessors: [0xb3]
Successors: []
---
0xbb PUSH1 0x0
0xbd DUP1
0xbe REVERT
---
0xbb: V49 = 0x0
0xbe: REVERT 0x0 0x0
---
Entry stack: [V11, V46]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V46]

================================

Block 0xbf
[0xbf:0xc7]
---
Predecessors: [0xb3]
Successors: [0x220]
---
0xbf JUMPDEST
0xc0 POP
0xc1 PUSH2 0xc8
0xc4 PUSH2 0x220
0xc7 JUMP
---
0xbf: JUMPDEST 
0xc1: V50 = 0xc8
0xc4: V51 = 0x220
0xc7: JUMP 0x220
---
Entry stack: [V11, V46]
Stack pops: 1
Stack additions: [0xc8]
Exit stack: [V11, 0xc8]

================================

Block 0xc8
[0xc8:0x109]
---
Predecessors: [0x220]
Successors: []
---
0xc8 JUMPDEST
0xc9 PUSH1 0x40
0xcb MLOAD
0xcc DUP1
0xcd DUP3
0xce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3 AND
0xe4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf9 AND
0xfa DUP2
0xfb MSTORE
0xfc PUSH1 0x20
0xfe ADD
0xff SWAP2
0x100 POP
0x101 POP
0x102 PUSH1 0x40
0x104 MLOAD
0x105 DUP1
0x106 SWAP2
0x107 SUB
0x108 SWAP1
0x109 RETURN
---
0xc8: JUMPDEST 
0xc9: V52 = 0x40
0xcb: V53 = M[0x40]
0xce: V54 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3: V55 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0xe4: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xf9: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xfb: M[V53] = V57
0xfc: V58 = 0x20
0xfe: V59 = ADD 0x20 V53
0x102: V60 = 0x40
0x104: V61 = M[0x40]
0x107: V62 = SUB V59 V61
0x109: RETURN V61 V62
---
Entry stack: [V11, 0xc8, V135]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc8]

================================

Block 0x10a
[0x10a:0x114]
---
Predecessors: [0x67]
Successors: [0x115, 0x15d]
---
0x10a JUMPDEST
0x10b PUSH1 0x2
0x10d SLOAD
0x10e CALLVALUE
0x10f GT
0x110 ISZERO
0x111 PUSH2 0x15d
0x114 JUMPI
---
0x10a: JUMPDEST 
0x10b: V63 = 0x2
0x10d: V64 = S[0x2]
0x10e: V65 = CALLVALUE
0x10f: V66 = GT V65 V64
0x110: V67 = ISZERO V66
0x111: V68 = 0x15d
0x114: JUMPI 0x15d V67
---
Entry stack: [V11, 0x6f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0x115
[0x115:0x15c]
---
Predecessors: [0x10a]
Successors: [0x15d]
---
0x115 CALLER
0x116 PUSH1 0x1
0x118 PUSH1 0x0
0x11a PUSH2 0x100
0x11d EXP
0x11e DUP2
0x11f SLOAD
0x120 DUP2
0x121 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x136 MUL
0x137 NOT
0x138 AND
0x139 SWAP1
0x13a DUP4
0x13b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x150 AND
0x151 MUL
0x152 OR
0x153 SWAP1
0x154 SSTORE
0x155 POP
0x156 CALLVALUE
0x157 PUSH1 0x2
0x159 DUP2
0x15a SWAP1
0x15b SSTORE
0x15c POP
---
0x115: V69 = CALLER
0x116: V70 = 0x1
0x118: V71 = 0x0
0x11a: V72 = 0x100
0x11d: V73 = EXP 0x100 0x0
0x11f: V74 = S[0x1]
0x121: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x136: V76 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x137: V77 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x138: V78 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V74
0x13b: V79 = 0xffffffffffffffffffffffffffffffffffffffff
0x150: V80 = AND 0xffffffffffffffffffffffffffffffffffffffff V69
0x151: V81 = MUL V80 0x1
0x152: V82 = OR V81 V78
0x154: S[0x1] = V82
0x156: V83 = CALLVALUE
0x157: V84 = 0x2
0x15b: S[0x2] = V83
---
Entry stack: [V11, 0x6f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6f]

================================

Block 0x15d
[0x15d:0x15e]
---
Predecessors: [0x10a, 0x115]
Successors: [0x6f]
---
0x15d JUMPDEST
0x15e JUMP
---
0x15d: JUMPDEST 
0x15e: JUMP 0x6f
---
Entry stack: [V11, 0x6f]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x15f
[0x15f:0x1b5]
---
Predecessors: [0x7d]
Successors: [0x1b6, 0x1ba]
---
0x15f JUMPDEST
0x160 PUSH1 0x0
0x162 DUP1
0x163 SWAP1
0x164 SLOAD
0x165 SWAP1
0x166 PUSH2 0x100
0x169 EXP
0x16a SWAP1
0x16b DIV
0x16c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x181 AND
0x182 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x197 AND
0x198 CALLER
0x199 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ae AND
0x1af EQ
0x1b0 ISZERO
0x1b1 ISZERO
0x1b2 PUSH2 0x1ba
0x1b5 JUMPI
---
0x15f: JUMPDEST 
0x160: V85 = 0x0
0x164: V86 = S[0x0]
0x166: V87 = 0x100
0x169: V88 = EXP 0x100 0x0
0x16b: V89 = DIV V86 0x1
0x16c: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x181: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x182: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x197: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x198: V94 = CALLER
0x199: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ae: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x1af: V97 = EQ V96 V93
0x1b0: V98 = ISZERO V97
0x1b1: V99 = ISZERO V98
0x1b2: V100 = 0x1ba
0x1b5: JUMPI 0x1ba V99
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86]

================================

Block 0x1b6
[0x1b6:0x1b9]
---
Predecessors: [0x15f]
Successors: []
---
0x1b6 PUSH1 0x0
0x1b8 DUP1
0x1b9 REVERT
---
0x1b6: V101 = 0x0
0x1b9: REVERT 0x0 0x0
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86]

================================

Block 0x1ba
[0x1ba:0x20d]
---
Predecessors: [0x15f]
Successors: [0x20e, 0x217]
---
0x1ba JUMPDEST
0x1bb CALLER
0x1bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d1 AND
0x1d2 PUSH2 0x8fc
0x1d5 ADDRESS
0x1d6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1eb AND
0x1ec BALANCE
0x1ed SWAP1
0x1ee DUP2
0x1ef ISZERO
0x1f0 MUL
0x1f1 SWAP1
0x1f2 PUSH1 0x40
0x1f4 MLOAD
0x1f5 PUSH1 0x0
0x1f7 PUSH1 0x40
0x1f9 MLOAD
0x1fa DUP1
0x1fb DUP4
0x1fc SUB
0x1fd DUP2
0x1fe DUP6
0x1ff DUP9
0x200 DUP9
0x201 CALL
0x202 SWAP4
0x203 POP
0x204 POP
0x205 POP
0x206 POP
0x207 ISZERO
0x208 DUP1
0x209 ISZERO
0x20a PUSH2 0x217
0x20d JUMPI
---
0x1ba: JUMPDEST 
0x1bb: V102 = CALLER
0x1bc: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d1: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1d2: V105 = 0x8fc
0x1d5: V106 = ADDRESS
0x1d6: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1eb: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1ec: V109 = BALANCE V108
0x1ef: V110 = ISZERO V109
0x1f0: V111 = MUL V110 0x8fc
0x1f2: V112 = 0x40
0x1f4: V113 = M[0x40]
0x1f5: V114 = 0x0
0x1f7: V115 = 0x40
0x1f9: V116 = M[0x40]
0x1fc: V117 = SUB V113 V116
0x201: V118 = CALL V111 V104 V109 V116 V117 V116 0x0
0x207: V119 = ISZERO V118
0x209: V120 = ISZERO V119
0x20a: V121 = 0x217
0x20d: JUMPI 0x217 V120
---
Entry stack: [V11, 0x86]
Stack pops: 0
Stack additions: [V119]
Exit stack: [V11, 0x86, V119]

================================

Block 0x20e
[0x20e:0x216]
---
Predecessors: [0x1ba]
Successors: []
---
0x20e RETURNDATASIZE
0x20f PUSH1 0x0
0x211 DUP1
0x212 RETURNDATACOPY
0x213 RETURNDATASIZE
0x214 PUSH1 0x0
0x216 REVERT
---
0x20e: V122 = RETURNDATASIZE
0x20f: V123 = 0x0
0x212: RETURNDATACOPY 0x0 0x0 V122
0x213: V124 = RETURNDATASIZE
0x214: V125 = 0x0
0x216: REVERT 0x0 V124
---
Entry stack: [V11, 0x86, V119]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x86, V119]

================================

Block 0x217
[0x217:0x219]
---
Predecessors: [0x1ba]
Successors: [0x86]
---
0x217 JUMPDEST
0x218 POP
0x219 JUMP
---
0x217: JUMPDEST 
0x219: JUMP 0x86
---
Entry stack: [V11, 0x86, V119]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x21a
[0x21a:0x21f]
---
Predecessors: [0x94]
Successors: [0x9d]
---
0x21a JUMPDEST
0x21b PUSH1 0x2
0x21d SLOAD
0x21e DUP2
0x21f JUMP
---
0x21a: JUMPDEST 
0x21b: V126 = 0x2
0x21d: V127 = S[0x2]
0x21f: JUMP 0x9d
---
Entry stack: [V11, 0x9d]
Stack pops: 1
Stack additions: [S0, V127]
Exit stack: [V11, 0x9d, V127]

================================

Block 0x220
[0x220:0x245]
---
Predecessors: [0xbf]
Successors: [0xc8]
---
0x220 JUMPDEST
0x221 PUSH1 0x1
0x223 PUSH1 0x0
0x225 SWAP1
0x226 SLOAD
0x227 SWAP1
0x228 PUSH2 0x100
0x22b EXP
0x22c SWAP1
0x22d DIV
0x22e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x243 AND
0x244 DUP2
0x245 JUMP
---
0x220: JUMPDEST 
0x221: V128 = 0x1
0x223: V129 = 0x0
0x226: V130 = S[0x1]
0x228: V131 = 0x100
0x22b: V132 = EXP 0x100 0x0
0x22d: V133 = DIV V130 0x1
0x22e: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x243: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x245: JUMP 0xc8
---
Entry stack: [V11, 0xc8]
Stack pops: 1
Stack additions: [S0, V135]
Exit stack: [V11, 0xc8, V135]

================================

Block 0x246
[0x246:0x275]
---
Predecessors: []
Successors: []
---
0x246 STOP
0x247 LOG1
0x248 PUSH6 0x627a7a723058
0x24f SHA3
0x250 MISSING 0xf9
0x251 MISSING 0xef
0x252 DUP6
0x253 RETURNDATASIZE
0x254 SGT
0x255 MISSING 0x28
0x256 MISSING 0x4f
0x257 STOP
0x258 MISSING 0x2a
0x259 MISSING 0xcd
0x25a MISSING 0xb3
0x25b MISSING 0xc6
0x25c MISSING 0xca
0x25d MISSING 0xe
0x25e PUSH8 0x8c2d64a0e0513971
0x267 MISSING 0xf8
0x268 MISSING 0x2b
0x269 MISSING 0xb7
0x26a MISSING 0xcb
0x26b MISSING 0xa8
0x26c SWAP6
0x26d DUP13
0x26e MISSING 0xe
0x26f PUSH6 0x29
---
0x246: STOP 
0x247: LOG S0 S1 S2
0x248: V136 = 0x627a7a723058
0x24f: V137 = SHA3 0x627a7a723058 S3
0x250: MISSING 0xf9
0x251: MISSING 0xef
0x253: V138 = RETURNDATASIZE
0x254: V139 = SGT V138 S5
0x255: MISSING 0x28
0x256: MISSING 0x4f
0x257: STOP 
0x258: MISSING 0x2a
0x259: MISSING 0xcd
0x25a: MISSING 0xb3
0x25b: MISSING 0xc6
0x25c: MISSING 0xca
0x25d: MISSING 0xe
0x25e: V140 = 0x8c2d64a0e0513971
0x267: MISSING 0xf8
0x268: MISSING 0x2b
0x269: MISSING 0xb7
0x26a: MISSING 0xcb
0x26b: MISSING 0xa8
0x26e: MISSING 0xe
0x26f: V141 = 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V137, V139, S0, S1, S2, S3, S4, S5, 0x8c2d64a0e0513971, S12, S6, S1, S2, S3, S4, S5, S0, S7, S8, S9, S10, S11, S12, 0x29]
Exit stack: []

================================

Function 0:
Public function signature: 0x18c0e04f
Entry block: 0x67
Exit block: 0x6f
Body: 0x67, 0x6f, 0x10a, 0x115, 0x15d

Function 1:
Public function signature: 0x3ccfd60b
Entry block: 0x71
Exit block: 0x86
Body: 0x71, 0x79, 0x7d, 0x86, 0x15f, 0x1b6, 0x1ba, 0x20e, 0x217

Function 2:
Public function signature: 0x4c8cab79
Entry block: 0x88
Exit block: 0x9d
Body: 0x88, 0x90, 0x94, 0x9d, 0x21a

Function 3:
Public function signature: 0x8da5cb5b
Entry block: 0xb3
Exit block: 0xc8
Body: 0xb3, 0xbb, 0xbf, 0xc8, 0x220

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

