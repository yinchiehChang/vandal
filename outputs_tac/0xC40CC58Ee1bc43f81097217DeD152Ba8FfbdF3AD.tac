Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xb6]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xb6
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xb6
0xc: JUMPI 0xb6 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0xbb]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x320d4534
0x21 DUP2
0x22 EQ
0x23 PUSH2 0xbb
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x320d4534
0x22: V15 = EQ V13 0x320d4534
0x23: V16 = 0xbb
0x26: JUMPI 0xbb V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0xd3]
---
0x27 DUP1
0x28 PUSH4 0x3bfecbf0
0x2d EQ
0x2e PUSH2 0xd3
0x31 JUMPI
---
0x28: V17 = 0x3bfecbf0
0x2d: V18 = EQ 0x3bfecbf0 V13
0x2e: V19 = 0xd3
0x31: JUMPI 0xd3 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xf2]
---
0x32 DUP1
0x33 PUSH4 0x41c0e1b5
0x38 EQ
0x39 PUSH2 0xf2
0x3c JUMPI
---
0x33: V20 = 0x41c0e1b5
0x38: V21 = EQ 0x41c0e1b5 V13
0x39: V22 = 0xf2
0x3c: JUMPI 0xf2 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x105]
---
0x3d DUP1
0x3e PUSH4 0x4dd60ff9
0x43 EQ
0x44 PUSH2 0x105
0x47 JUMPI
---
0x3e: V23 = 0x4dd60ff9
0x43: V24 = EQ 0x4dd60ff9 V13
0x44: V25 = 0x105
0x47: JUMPI 0x105 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x11f]
---
0x48 DUP1
0x49 PUSH4 0x51cff8d9
0x4e EQ
0x4f PUSH2 0x11f
0x52 JUMPI
---
0x49: V26 = 0x51cff8d9
0x4e: V27 = EQ 0x51cff8d9 V13
0x4f: V28 = 0x11f
0x52: JUMPI 0x11f V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x13e]
---
0x53 DUP1
0x54 PUSH4 0x68034902
0x59 EQ
0x5a PUSH2 0x13e
0x5d JUMPI
---
0x54: V29 = 0x68034902
0x59: V30 = EQ 0x68034902 V13
0x5a: V31 = 0x13e
0x5d: JUMPI 0x13e V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x179]
---
0x5e DUP1
0x5f PUSH4 0x7362377b
0x64 EQ
0x65 PUSH2 0x179
0x68 JUMPI
---
0x5f: V32 = 0x7362377b
0x64: V33 = EQ 0x7362377b V13
0x65: V34 = 0x179
0x68: JUMPI 0x179 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x18c]
---
0x69 DUP1
0x6a PUSH4 0x8da5cb5b
0x6f EQ
0x70 PUSH2 0x18c
0x73 JUMPI
---
0x6a: V35 = 0x8da5cb5b
0x6f: V36 = EQ 0x8da5cb5b V13
0x70: V37 = 0x18c
0x73: JUMPI 0x18c V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x1bb]
---
0x74 DUP1
0x75 PUSH4 0x8f4ffcb1
0x7a EQ
0x7b PUSH2 0x1bb
0x7e JUMPI
---
0x75: V38 = 0x8f4ffcb1
0x7a: V39 = EQ 0x8f4ffcb1 V13
0x7b: V40 = 0x1bb
0x7e: JUMPI 0x1bb V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x89]
---
Predecessors: [0x74]
Successors: [0x8a, 0x1f1]
---
0x7f DUP1
0x80 PUSH4 0xcee73630
0x85 EQ
0x86 PUSH2 0x1f1
0x89 JUMPI
---
0x80: V41 = 0xcee73630
0x85: V42 = EQ 0xcee73630 V13
0x86: V43 = 0x1f1
0x89: JUMPI 0x1f1 V42
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x8a
[0x8a:0x94]
---
Predecessors: [0x7f]
Successors: [0x95, 0x20b]
---
0x8a DUP1
0x8b PUSH4 0xd0aff67d
0x90 EQ
0x91 PUSH2 0x20b
0x94 JUMPI
---
0x8b: V44 = 0xd0aff67d
0x90: V45 = EQ 0xd0aff67d V13
0x91: V46 = 0x20b
0x94: JUMPI 0x20b V45
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x95
[0x95:0x9f]
---
Predecessors: [0x8a]
Successors: [0xa0, 0x22a]
---
0x95 DUP1
0x96 PUSH4 0xe960f8d0
0x9b EQ
0x9c PUSH2 0x22a
0x9f JUMPI
---
0x96: V47 = 0xe960f8d0
0x9b: V48 = EQ 0xe960f8d0 V13
0x9c: V49 = 0x22a
0x9f: JUMPI 0x22a V48
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa0
[0xa0:0xaa]
---
Predecessors: [0x95]
Successors: [0xab, 0x25e]
---
0xa0 DUP1
0xa1 PUSH4 0xeaaf88c1
0xa6 EQ
0xa7 PUSH2 0x25e
0xaa JUMPI
---
0xa1: V50 = 0xeaaf88c1
0xa6: V51 = EQ 0xeaaf88c1 V13
0xa7: V52 = 0x25e
0xaa: JUMPI 0x25e V51
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xab
[0xab:0xb5]
---
Predecessors: [0xa0]
Successors: [0xb6, 0x27d]
---
0xab DUP1
0xac PUSH4 0xf2fde38b
0xb1 EQ
0xb2 PUSH2 0x27d
0xb5 JUMPI
---
0xac: V53 = 0xf2fde38b
0xb1: V54 = EQ 0xf2fde38b V13
0xb2: V55 = 0x27d
0xb5: JUMPI 0x27d V54
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb6
[0xb6:0xba]
---
Predecessors: [0x0, 0xab]
Successors: []
---
0xb6 JUMPDEST
0xb7 PUSH1 0x0
0xb9 DUP1
0xba REVERT
---
0xb6: JUMPDEST 
0xb7: V56 = 0x0
0xba: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xbb
[0xbb:0xc1]
---
Predecessors: [0xd]
Successors: [0xc2, 0xc6]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd ISZERO
0xbe PUSH2 0xc6
0xc1 JUMPI
---
0xbb: JUMPDEST 
0xbc: V57 = CALLVALUE
0xbd: V58 = ISZERO V57
0xbe: V59 = 0xc6
0xc1: JUMPI 0xc6 V58
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc2
[0xc2:0xc5]
---
Predecessors: [0xbb]
Successors: []
---
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 REVERT
---
0xc2: V60 = 0x0
0xc5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xc6
[0xc6:0xd0]
---
Predecessors: [0xbb]
Successors: [0x29c]
---
0xc6 JUMPDEST
0xc7 PUSH2 0xd1
0xca PUSH1 0x4
0xcc CALLDATALOAD
0xcd PUSH2 0x29c
0xd0 JUMP
---
0xc6: JUMPDEST 
0xc7: V61 = 0xd1
0xca: V62 = 0x4
0xcc: V63 = CALLDATALOAD 0x4
0xcd: V64 = 0x29c
0xd0: JUMP 0x29c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd1, V63]
Exit stack: [V13, 0xd1, V63]

================================

Block 0xd1
[0xd1:0xd2]
---
Predecessors: [0x2b7, 0x2d7, 0x625, 0x780, 0xa1f, 0xadc, 0xb3f, 0xc6e, 0xce3, 0xd46, 0xda5]
Successors: []
---
0xd1 JUMPDEST
0xd2 STOP
---
0xd1: JUMPDEST 
0xd2: STOP 
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xd3
[0xd3:0xd9]
---
Predecessors: [0x27]
Successors: [0xda, 0xde]
---
0xd3 JUMPDEST
0xd4 CALLVALUE
0xd5 ISZERO
0xd6 PUSH2 0xde
0xd9 JUMPI
---
0xd3: JUMPDEST 
0xd4: V65 = CALLVALUE
0xd5: V66 = ISZERO V65
0xd6: V67 = 0xde
0xd9: JUMPI 0xde V66
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xda
[0xda:0xdd]
---
Predecessors: [0xd3]
Successors: []
---
0xda PUSH1 0x0
0xdc DUP1
0xdd REVERT
---
0xda: V68 = 0x0
0xdd: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xde
[0xde:0xf1]
---
Predecessors: [0xd3]
Successors: [0x2bc]
---
0xde JUMPDEST
0xdf PUSH2 0xd1
0xe2 PUSH1 0x1
0xe4 PUSH1 0xa0
0xe6 PUSH1 0x2
0xe8 EXP
0xe9 SUB
0xea PUSH1 0x4
0xec CALLDATALOAD
0xed AND
0xee PUSH2 0x2bc
0xf1 JUMP
---
0xde: JUMPDEST 
0xdf: V69 = 0xd1
0xe2: V70 = 0x1
0xe4: V71 = 0xa0
0xe6: V72 = 0x2
0xe8: V73 = EXP 0x2 0xa0
0xe9: V74 = SUB 0x10000000000000000000000000000000000000000 0x1
0xea: V75 = 0x4
0xec: V76 = CALLDATALOAD 0x4
0xed: V77 = AND V76 0xffffffffffffffffffffffffffffffffffffffff
0xee: V78 = 0x2bc
0xf1: JUMP 0x2bc
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd1, V77]
Exit stack: [V13, 0xd1, V77]

================================

Block 0xf2
[0xf2:0xf8]
---
Predecessors: [0x32]
Successors: [0xf9, 0xfd]
---
0xf2 JUMPDEST
0xf3 CALLVALUE
0xf4 ISZERO
0xf5 PUSH2 0xfd
0xf8 JUMPI
---
0xf2: JUMPDEST 
0xf3: V79 = CALLVALUE
0xf4: V80 = ISZERO V79
0xf5: V81 = 0xfd
0xf8: JUMPI 0xfd V80
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xf9
[0xf9:0xfc]
---
Predecessors: [0xf2]
Successors: []
---
0xf9 PUSH1 0x0
0xfb DUP1
0xfc REVERT
---
0xf9: V82 = 0x0
0xfc: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xfd
[0xfd:0x104]
---
Predecessors: [0xf2]
Successors: [0x306]
---
0xfd JUMPDEST
0xfe PUSH2 0xd1
0x101 PUSH2 0x306
0x104 JUMP
---
0xfd: JUMPDEST 
0xfe: V83 = 0xd1
0x101: V84 = 0x306
0x104: JUMP 0x306
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V13, 0xd1]

================================

Block 0x105
[0x105:0x11e]
---
Predecessors: [0x3d]
Successors: [0x4fd]
---
0x105 JUMPDEST
0x106 PUSH2 0xd1
0x109 PUSH1 0x4
0x10b CALLDATALOAD
0x10c PUSH1 0x24
0x10e CALLDATALOAD
0x10f PUSH1 0xff
0x111 PUSH1 0x44
0x113 CALLDATALOAD
0x114 AND
0x115 PUSH1 0x64
0x117 CALLDATALOAD
0x118 PUSH1 0x84
0x11a CALLDATALOAD
0x11b PUSH2 0x4fd
0x11e JUMP
---
0x105: JUMPDEST 
0x106: V85 = 0xd1
0x109: V86 = 0x4
0x10b: V87 = CALLDATALOAD 0x4
0x10c: V88 = 0x24
0x10e: V89 = CALLDATALOAD 0x24
0x10f: V90 = 0xff
0x111: V91 = 0x44
0x113: V92 = CALLDATALOAD 0x44
0x114: V93 = AND V92 0xff
0x115: V94 = 0x64
0x117: V95 = CALLDATALOAD 0x64
0x118: V96 = 0x84
0x11a: V97 = CALLDATALOAD 0x84
0x11b: V98 = 0x4fd
0x11e: JUMP 0x4fd
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd1, V87, V89, V93, V95, V97]
Exit stack: [V13, 0xd1, V87, V89, V93, V95, V97]

================================

Block 0x11f
[0x11f:0x125]
---
Predecessors: [0x48]
Successors: [0x126, 0x12a]
---
0x11f JUMPDEST
0x120 CALLVALUE
0x121 ISZERO
0x122 PUSH2 0x12a
0x125 JUMPI
---
0x11f: JUMPDEST 
0x120: V99 = CALLVALUE
0x121: V100 = ISZERO V99
0x122: V101 = 0x12a
0x125: JUMPI 0x12a V100
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x126
[0x126:0x129]
---
Predecessors: [0x11f]
Successors: []
---
0x126 PUSH1 0x0
0x128 DUP1
0x129 REVERT
---
0x126: V102 = 0x0
0x129: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x12a
[0x12a:0x13d]
---
Predecessors: [0x11f]
Successors: [0x67f]
---
0x12a JUMPDEST
0x12b PUSH2 0xd1
0x12e PUSH1 0x1
0x130 PUSH1 0xa0
0x132 PUSH1 0x2
0x134 EXP
0x135 SUB
0x136 PUSH1 0x4
0x138 CALLDATALOAD
0x139 AND
0x13a PUSH2 0x67f
0x13d JUMP
---
0x12a: JUMPDEST 
0x12b: V103 = 0xd1
0x12e: V104 = 0x1
0x130: V105 = 0xa0
0x132: V106 = 0x2
0x134: V107 = EXP 0x2 0xa0
0x135: V108 = SUB 0x10000000000000000000000000000000000000000 0x1
0x136: V109 = 0x4
0x138: V110 = CALLDATALOAD 0x4
0x139: V111 = AND V110 0xffffffffffffffffffffffffffffffffffffffff
0x13a: V112 = 0x67f
0x13d: JUMP 0x67f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd1, V111]
Exit stack: [V13, 0xd1, V111]

================================

Block 0x13e
[0x13e:0x144]
---
Predecessors: [0x53]
Successors: [0x145, 0x149]
---
0x13e JUMPDEST
0x13f CALLVALUE
0x140 ISZERO
0x141 PUSH2 0x149
0x144 JUMPI
---
0x13e: JUMPDEST 
0x13f: V113 = CALLVALUE
0x140: V114 = ISZERO V113
0x141: V115 = 0x149
0x144: JUMPI 0x149 V114
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x145
[0x145:0x148]
---
Predecessors: [0x13e]
Successors: []
---
0x145 PUSH1 0x0
0x147 DUP1
0x148 REVERT
---
0x145: V116 = 0x0
0x148: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x149
[0x149:0x178]
---
Predecessors: [0x13e]
Successors: [0x785]
---
0x149 JUMPDEST
0x14a PUSH2 0xd1
0x14d PUSH1 0x1
0x14f PUSH1 0xa0
0x151 PUSH1 0x2
0x153 EXP
0x154 SUB
0x155 PUSH1 0x4
0x157 CALLDATALOAD
0x158 DUP2
0x159 AND
0x15a SWAP1
0x15b PUSH1 0x24
0x15d CALLDATALOAD
0x15e SWAP1
0x15f PUSH1 0x44
0x161 CALLDATALOAD
0x162 AND
0x163 PUSH1 0x64
0x165 CALLDATALOAD
0x166 PUSH1 0x84
0x168 CALLDATALOAD
0x169 PUSH1 0xff
0x16b PUSH1 0xa4
0x16d CALLDATALOAD
0x16e AND
0x16f PUSH1 0xc4
0x171 CALLDATALOAD
0x172 PUSH1 0xe4
0x174 CALLDATALOAD
0x175 PUSH2 0x785
0x178 JUMP
---
0x149: JUMPDEST 
0x14a: V117 = 0xd1
0x14d: V118 = 0x1
0x14f: V119 = 0xa0
0x151: V120 = 0x2
0x153: V121 = EXP 0x2 0xa0
0x154: V122 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V123 = 0x4
0x157: V124 = CALLDATALOAD 0x4
0x159: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x15b: V126 = 0x24
0x15d: V127 = CALLDATALOAD 0x24
0x15f: V128 = 0x44
0x161: V129 = CALLDATALOAD 0x44
0x162: V130 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x163: V131 = 0x64
0x165: V132 = CALLDATALOAD 0x64
0x166: V133 = 0x84
0x168: V134 = CALLDATALOAD 0x84
0x169: V135 = 0xff
0x16b: V136 = 0xa4
0x16d: V137 = CALLDATALOAD 0xa4
0x16e: V138 = AND V137 0xff
0x16f: V139 = 0xc4
0x171: V140 = CALLDATALOAD 0xc4
0x172: V141 = 0xe4
0x174: V142 = CALLDATALOAD 0xe4
0x175: V143 = 0x785
0x178: JUMP 0x785
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd1, V125, V127, V130, V132, V134, V138, V140, V142]
Exit stack: [V13, 0xd1, V125, V127, V130, V132, V134, V138, V140, V142]

================================

Block 0x179
[0x179:0x17f]
---
Predecessors: [0x5e]
Successors: [0x180, 0x184]
---
0x179 JUMPDEST
0x17a CALLVALUE
0x17b ISZERO
0x17c PUSH2 0x184
0x17f JUMPI
---
0x179: JUMPDEST 
0x17a: V144 = CALLVALUE
0x17b: V145 = ISZERO V144
0x17c: V146 = 0x184
0x17f: JUMPI 0x184 V145
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x180
[0x180:0x183]
---
Predecessors: [0x179]
Successors: []
---
0x180 PUSH1 0x0
0x182 DUP1
0x183 REVERT
---
0x180: V147 = 0x0
0x183: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x184
[0x184:0x18b]
---
Predecessors: [0x179]
Successors: [0xa88]
---
0x184 JUMPDEST
0x185 PUSH2 0xd1
0x188 PUSH2 0xa88
0x18b JUMP
---
0x184: JUMPDEST 
0x185: V148 = 0xd1
0x188: V149 = 0xa88
0x18b: JUMP 0xa88
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd1]
Exit stack: [V13, 0xd1]

================================

Block 0x18c
[0x18c:0x192]
---
Predecessors: [0x69]
Successors: [0x193, 0x197]
---
0x18c JUMPDEST
0x18d CALLVALUE
0x18e ISZERO
0x18f PUSH2 0x197
0x192 JUMPI
---
0x18c: JUMPDEST 
0x18d: V150 = CALLVALUE
0x18e: V151 = ISZERO V150
0x18f: V152 = 0x197
0x192: JUMPI 0x197 V151
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x193
[0x193:0x196]
---
Predecessors: [0x18c]
Successors: []
---
0x193 PUSH1 0x0
0x195 DUP1
0x196 REVERT
---
0x193: V153 = 0x0
0x196: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x197
[0x197:0x19e]
---
Predecessors: [0x18c]
Successors: [0xade]
---
0x197 JUMPDEST
0x198 PUSH2 0x19f
0x19b PUSH2 0xade
0x19e JUMP
---
0x197: JUMPDEST 
0x198: V154 = 0x19f
0x19b: V155 = 0xade
0x19e: JUMP 0xade
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x19f]
Exit stack: [V13, 0x19f]

================================

Block 0x19f
[0x19f:0x1ba]
---
Predecessors: [0xade]
Successors: []
---
0x19f JUMPDEST
0x1a0 PUSH1 0x40
0x1a2 MLOAD
0x1a3 PUSH1 0x1
0x1a5 PUSH1 0xa0
0x1a7 PUSH1 0x2
0x1a9 EXP
0x1aa SUB
0x1ab SWAP1
0x1ac SWAP2
0x1ad AND
0x1ae DUP2
0x1af MSTORE
0x1b0 PUSH1 0x20
0x1b2 ADD
0x1b3 PUSH1 0x40
0x1b5 MLOAD
0x1b6 DUP1
0x1b7 SWAP2
0x1b8 SUB
0x1b9 SWAP1
0x1ba RETURN
---
0x19f: JUMPDEST 
0x1a0: V156 = 0x40
0x1a2: V157 = M[0x40]
0x1a3: V158 = 0x1
0x1a5: V159 = 0xa0
0x1a7: V160 = 0x2
0x1a9: V161 = EXP 0x2 0xa0
0x1aa: V162 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ad: V163 = AND V1108 0xffffffffffffffffffffffffffffffffffffffff
0x1af: M[V157] = V163
0x1b0: V164 = 0x20
0x1b2: V165 = ADD 0x20 V157
0x1b3: V166 = 0x40
0x1b5: V167 = M[0x40]
0x1b8: V168 = SUB V165 V167
0x1ba: RETURN V167 V168
---
Entry stack: [V13, 0x19f, V1108]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x19f]

================================

Block 0x1bb
[0x1bb:0x1c1]
---
Predecessors: [0x74]
Successors: [0x1c2, 0x1c6]
---
0x1bb JUMPDEST
0x1bc CALLVALUE
0x1bd ISZERO
0x1be PUSH2 0x1c6
0x1c1 JUMPI
---
0x1bb: JUMPDEST 
0x1bc: V169 = CALLVALUE
0x1bd: V170 = ISZERO V169
0x1be: V171 = 0x1c6
0x1c1: JUMPI 0x1c6 V170
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c2
[0x1c2:0x1c5]
---
Predecessors: [0x1bb]
Successors: []
---
0x1c2 PUSH1 0x0
0x1c4 DUP1
0x1c5 REVERT
---
0x1c2: V172 = 0x0
0x1c5: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1c6
[0x1c6:0x1f0]
---
Predecessors: [0x1bb]
Successors: [0xaed]
---
0x1c6 JUMPDEST
0x1c7 PUSH2 0xd1
0x1ca PUSH1 0x4
0x1cc DUP1
0x1cd CALLDATALOAD
0x1ce PUSH1 0x1
0x1d0 PUSH1 0xa0
0x1d2 PUSH1 0x2
0x1d4 EXP
0x1d5 SUB
0x1d6 SWAP1
0x1d7 DUP2
0x1d8 AND
0x1d9 SWAP2
0x1da PUSH1 0x24
0x1dc DUP1
0x1dd CALLDATALOAD
0x1de SWAP3
0x1df PUSH1 0x44
0x1e1 CALLDATALOAD
0x1e2 AND
0x1e3 SWAP2
0x1e4 PUSH1 0x64
0x1e6 CALLDATALOAD
0x1e7 SWAP2
0x1e8 DUP3
0x1e9 ADD
0x1ea SWAP2
0x1eb ADD
0x1ec CALLDATALOAD
0x1ed PUSH2 0xaed
0x1f0 JUMP
---
0x1c6: JUMPDEST 
0x1c7: V173 = 0xd1
0x1ca: V174 = 0x4
0x1cd: V175 = CALLDATALOAD 0x4
0x1ce: V176 = 0x1
0x1d0: V177 = 0xa0
0x1d2: V178 = 0x2
0x1d4: V179 = EXP 0x2 0xa0
0x1d5: V180 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d8: V181 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x1da: V182 = 0x24
0x1dd: V183 = CALLDATALOAD 0x24
0x1df: V184 = 0x44
0x1e1: V185 = CALLDATALOAD 0x44
0x1e2: V186 = AND V185 0xffffffffffffffffffffffffffffffffffffffff
0x1e4: V187 = 0x64
0x1e6: V188 = CALLDATALOAD 0x64
0x1e9: V189 = ADD V188 0x24
0x1eb: V190 = ADD V188 0x4
0x1ec: V191 = CALLDATALOAD V190
0x1ed: V192 = 0xaed
0x1f0: JUMP 0xaed
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd1, V181, V183, V186, V189, V191]
Exit stack: [V13, 0xd1, V181, V183, V186, V189, V191]

================================

Block 0x1f1
[0x1f1:0x20a]
---
Predecessors: [0x7f]
Successors: [0xb46]
---
0x1f1 JUMPDEST
0x1f2 PUSH2 0xd1
0x1f5 PUSH1 0x4
0x1f7 CALLDATALOAD
0x1f8 PUSH1 0x24
0x1fa CALLDATALOAD
0x1fb PUSH1 0xff
0x1fd PUSH1 0x44
0x1ff CALLDATALOAD
0x200 AND
0x201 PUSH1 0x64
0x203 CALLDATALOAD
0x204 PUSH1 0x84
0x206 CALLDATALOAD
0x207 PUSH2 0xb46
0x20a JUMP
---
0x1f1: JUMPDEST 
0x1f2: V193 = 0xd1
0x1f5: V194 = 0x4
0x1f7: V195 = CALLDATALOAD 0x4
0x1f8: V196 = 0x24
0x1fa: V197 = CALLDATALOAD 0x24
0x1fb: V198 = 0xff
0x1fd: V199 = 0x44
0x1ff: V200 = CALLDATALOAD 0x44
0x200: V201 = AND V200 0xff
0x201: V202 = 0x64
0x203: V203 = CALLDATALOAD 0x64
0x204: V204 = 0x84
0x206: V205 = CALLDATALOAD 0x84
0x207: V206 = 0xb46
0x20a: JUMP 0xb46
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd1, V195, V197, V201, V203, V205]
Exit stack: [V13, 0xd1, V195, V197, V201, V203, V205]

================================

Block 0x20b
[0x20b:0x211]
---
Predecessors: [0x8a]
Successors: [0x212, 0x216]
---
0x20b JUMPDEST
0x20c CALLVALUE
0x20d ISZERO
0x20e PUSH2 0x216
0x211 JUMPI
---
0x20b: JUMPDEST 
0x20c: V207 = CALLVALUE
0x20d: V208 = ISZERO V207
0x20e: V209 = 0x216
0x211: JUMPI 0x216 V208
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x212
[0x212:0x215]
---
Predecessors: [0x20b]
Successors: []
---
0x212 PUSH1 0x0
0x214 DUP1
0x215 REVERT
---
0x212: V210 = 0x0
0x215: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x216
[0x216:0x229]
---
Predecessors: [0x20b]
Successors: [0xcc8]
---
0x216 JUMPDEST
0x217 PUSH2 0xd1
0x21a PUSH1 0x1
0x21c PUSH1 0xa0
0x21e PUSH1 0x2
0x220 EXP
0x221 SUB
0x222 PUSH1 0x4
0x224 CALLDATALOAD
0x225 AND
0x226 PUSH2 0xcc8
0x229 JUMP
---
0x216: JUMPDEST 
0x217: V211 = 0xd1
0x21a: V212 = 0x1
0x21c: V213 = 0xa0
0x21e: V214 = 0x2
0x220: V215 = EXP 0x2 0xa0
0x221: V216 = SUB 0x10000000000000000000000000000000000000000 0x1
0x222: V217 = 0x4
0x224: V218 = CALLDATALOAD 0x4
0x225: V219 = AND V218 0xffffffffffffffffffffffffffffffffffffffff
0x226: V220 = 0xcc8
0x229: JUMP 0xcc8
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd1, V219]
Exit stack: [V13, 0xd1, V219]

================================

Block 0x22a
[0x22a:0x230]
---
Predecessors: [0x95]
Successors: [0x231, 0x235]
---
0x22a JUMPDEST
0x22b CALLVALUE
0x22c ISZERO
0x22d PUSH2 0x235
0x230 JUMPI
---
0x22a: JUMPDEST 
0x22b: V221 = CALLVALUE
0x22c: V222 = ISZERO V221
0x22d: V223 = 0x235
0x230: JUMPI 0x235 V222
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x231
[0x231:0x234]
---
Predecessors: [0x22a]
Successors: []
---
0x231 PUSH1 0x0
0x233 DUP1
0x234 REVERT
---
0x231: V224 = 0x0
0x234: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x235
[0x235:0x25d]
---
Predecessors: [0x22a]
Successors: [0xd12]
---
0x235 JUMPDEST
0x236 PUSH2 0xd1
0x239 PUSH1 0x4
0x23b CALLDATALOAD
0x23c PUSH1 0x1
0x23e PUSH1 0xa0
0x240 PUSH1 0x2
0x242 EXP
0x243 SUB
0x244 PUSH1 0x24
0x246 CALLDATALOAD
0x247 AND
0x248 PUSH1 0x44
0x24a CALLDATALOAD
0x24b PUSH1 0x64
0x24d CALLDATALOAD
0x24e PUSH1 0xff
0x250 PUSH1 0x84
0x252 CALLDATALOAD
0x253 AND
0x254 PUSH1 0xa4
0x256 CALLDATALOAD
0x257 PUSH1 0xc4
0x259 CALLDATALOAD
0x25a PUSH2 0xd12
0x25d JUMP
---
0x235: JUMPDEST 
0x236: V225 = 0xd1
0x239: V226 = 0x4
0x23b: V227 = CALLDATALOAD 0x4
0x23c: V228 = 0x1
0x23e: V229 = 0xa0
0x240: V230 = 0x2
0x242: V231 = EXP 0x2 0xa0
0x243: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x244: V233 = 0x24
0x246: V234 = CALLDATALOAD 0x24
0x247: V235 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x248: V236 = 0x44
0x24a: V237 = CALLDATALOAD 0x44
0x24b: V238 = 0x64
0x24d: V239 = CALLDATALOAD 0x64
0x24e: V240 = 0xff
0x250: V241 = 0x84
0x252: V242 = CALLDATALOAD 0x84
0x253: V243 = AND V242 0xff
0x254: V244 = 0xa4
0x256: V245 = CALLDATALOAD 0xa4
0x257: V246 = 0xc4
0x259: V247 = CALLDATALOAD 0xc4
0x25a: V248 = 0xd12
0x25d: JUMP 0xd12
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd1, V227, V235, V237, V239, V243, V245, V247]
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, V247]

================================

Block 0x25e
[0x25e:0x264]
---
Predecessors: [0xa0]
Successors: [0x265, 0x269]
---
0x25e JUMPDEST
0x25f CALLVALUE
0x260 ISZERO
0x261 PUSH2 0x269
0x264 JUMPI
---
0x25e: JUMPDEST 
0x25f: V249 = CALLVALUE
0x260: V250 = ISZERO V249
0x261: V251 = 0x269
0x264: JUMPI 0x269 V250
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x265
[0x265:0x268]
---
Predecessors: [0x25e]
Successors: []
---
0x265 PUSH1 0x0
0x267 DUP1
0x268 REVERT
---
0x265: V252 = 0x0
0x268: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x269
[0x269:0x27c]
---
Predecessors: [0x25e]
Successors: [0xd2b]
---
0x269 JUMPDEST
0x26a PUSH2 0xd1
0x26d PUSH1 0x1
0x26f PUSH1 0xa0
0x271 PUSH1 0x2
0x273 EXP
0x274 SUB
0x275 PUSH1 0x4
0x277 CALLDATALOAD
0x278 AND
0x279 PUSH2 0xd2b
0x27c JUMP
---
0x269: JUMPDEST 
0x26a: V253 = 0xd1
0x26d: V254 = 0x1
0x26f: V255 = 0xa0
0x271: V256 = 0x2
0x273: V257 = EXP 0x2 0xa0
0x274: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x275: V259 = 0x4
0x277: V260 = CALLDATALOAD 0x4
0x278: V261 = AND V260 0xffffffffffffffffffffffffffffffffffffffff
0x279: V262 = 0xd2b
0x27c: JUMP 0xd2b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd1, V261]
Exit stack: [V13, 0xd1, V261]

================================

Block 0x27d
[0x27d:0x283]
---
Predecessors: [0xab]
Successors: [0x284, 0x288]
---
0x27d JUMPDEST
0x27e CALLVALUE
0x27f ISZERO
0x280 PUSH2 0x288
0x283 JUMPI
---
0x27d: JUMPDEST 
0x27e: V263 = CALLVALUE
0x27f: V264 = ISZERO V263
0x280: V265 = 0x288
0x283: JUMPI 0x288 V264
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x284
[0x284:0x287]
---
Predecessors: [0x27d]
Successors: []
---
0x284 PUSH1 0x0
0x286 DUP1
0x287 REVERT
---
0x284: V266 = 0x0
0x287: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x288
[0x288:0x29b]
---
Predecessors: [0x27d]
Successors: [0xd75]
---
0x288 JUMPDEST
0x289 PUSH2 0xd1
0x28c PUSH1 0x1
0x28e PUSH1 0xa0
0x290 PUSH1 0x2
0x292 EXP
0x293 SUB
0x294 PUSH1 0x4
0x296 CALLDATALOAD
0x297 AND
0x298 PUSH2 0xd75
0x29b JUMP
---
0x288: JUMPDEST 
0x289: V267 = 0xd1
0x28c: V268 = 0x1
0x28e: V269 = 0xa0
0x290: V270 = 0x2
0x292: V271 = EXP 0x2 0xa0
0x293: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x294: V273 = 0x4
0x296: V274 = CALLDATALOAD 0x4
0x297: V275 = AND V274 0xffffffffffffffffffffffffffffffffffffffff
0x298: V276 = 0xd75
0x29b: JUMP 0xd75
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xd1, V275]
Exit stack: [V13, 0xd1, V275]

================================

Block 0x29c
[0x29c:0x2b2]
---
Predecessors: [0xc6]
Successors: [0x2b3, 0x2b7]
---
0x29c JUMPDEST
0x29d PUSH1 0x0
0x29f SLOAD
0x2a0 CALLER
0x2a1 PUSH1 0x1
0x2a3 PUSH1 0xa0
0x2a5 PUSH1 0x2
0x2a7 EXP
0x2a8 SUB
0x2a9 SWAP1
0x2aa DUP2
0x2ab AND
0x2ac SWAP2
0x2ad AND
0x2ae EQ
0x2af PUSH2 0x2b7
0x2b2 JUMPI
---
0x29c: JUMPDEST 
0x29d: V277 = 0x0
0x29f: V278 = S[0x0]
0x2a0: V279 = CALLER
0x2a1: V280 = 0x1
0x2a3: V281 = 0xa0
0x2a5: V282 = 0x2
0x2a7: V283 = EXP 0x2 0xa0
0x2a8: V284 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ab: V285 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x2ad: V286 = AND V278 0xffffffffffffffffffffffffffffffffffffffff
0x2ae: V287 = EQ V286 V285
0x2af: V288 = 0x2b7
0x2b2: JUMPI 0x2b7 V287
---
Entry stack: [V13, 0xd1, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V63]

================================

Block 0x2b3
[0x2b3:0x2b6]
---
Predecessors: [0x29c]
Successors: []
---
0x2b3 PUSH1 0x0
0x2b5 DUP1
0x2b6 REVERT
---
0x2b3: V289 = 0x0
0x2b6: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V63]

================================

Block 0x2b7
[0x2b7:0x2bb]
---
Predecessors: [0x29c]
Successors: [0xd1]
---
0x2b7 JUMPDEST
0x2b8 PUSH1 0x4
0x2ba SSTORE
0x2bb JUMP
---
0x2b7: JUMPDEST 
0x2b8: V290 = 0x4
0x2ba: S[0x4] = V63
0x2bb: JUMP 0xd1
---
Entry stack: [V13, 0xd1, V63]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x2bc
[0x2bc:0x2d2]
---
Predecessors: [0xde]
Successors: [0x2d3, 0x2d7]
---
0x2bc JUMPDEST
0x2bd PUSH1 0x0
0x2bf SLOAD
0x2c0 CALLER
0x2c1 PUSH1 0x1
0x2c3 PUSH1 0xa0
0x2c5 PUSH1 0x2
0x2c7 EXP
0x2c8 SUB
0x2c9 SWAP1
0x2ca DUP2
0x2cb AND
0x2cc SWAP2
0x2cd AND
0x2ce EQ
0x2cf PUSH2 0x2d7
0x2d2 JUMPI
---
0x2bc: JUMPDEST 
0x2bd: V291 = 0x0
0x2bf: V292 = S[0x0]
0x2c0: V293 = CALLER
0x2c1: V294 = 0x1
0x2c3: V295 = 0xa0
0x2c5: V296 = 0x2
0x2c7: V297 = EXP 0x2 0xa0
0x2c8: V298 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cb: V299 = AND 0xffffffffffffffffffffffffffffffffffffffff V293
0x2cd: V300 = AND V292 0xffffffffffffffffffffffffffffffffffffffff
0x2ce: V301 = EQ V300 V299
0x2cf: V302 = 0x2d7
0x2d2: JUMPI 0x2d7 V301
---
Entry stack: [V13, 0xd1, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V77]

================================

Block 0x2d3
[0x2d3:0x2d6]
---
Predecessors: [0x2bc]
Successors: []
---
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 REVERT
---
0x2d3: V303 = 0x0
0x2d6: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V77]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V77]

================================

Block 0x2d7
[0x2d7:0x305]
---
Predecessors: [0x2bc]
Successors: [0xd1]
---
0x2d7 JUMPDEST
0x2d8 PUSH1 0x3
0x2da DUP1
0x2db SLOAD
0x2dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f1 NOT
0x2f2 AND
0x2f3 PUSH1 0x1
0x2f5 PUSH1 0xa0
0x2f7 PUSH1 0x2
0x2f9 EXP
0x2fa SUB
0x2fb SWAP3
0x2fc SWAP1
0x2fd SWAP3
0x2fe AND
0x2ff SWAP2
0x300 SWAP1
0x301 SWAP2
0x302 OR
0x303 SWAP1
0x304 SSTORE
0x305 JUMP
---
0x2d7: JUMPDEST 
0x2d8: V304 = 0x3
0x2db: V305 = S[0x3]
0x2dc: V306 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f1: V307 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2f2: V308 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V305
0x2f3: V309 = 0x1
0x2f5: V310 = 0xa0
0x2f7: V311 = 0x2
0x2f9: V312 = EXP 0x2 0xa0
0x2fa: V313 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2fe: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0x302: V315 = OR V314 V308
0x304: S[0x3] = V315
0x305: JUMP 0xd1
---
Entry stack: [V13, 0xd1, V77]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x306
[0x306:0x31f]
---
Predecessors: [0xfd]
Successors: [0x320, 0x324]
---
0x306 JUMPDEST
0x307 PUSH1 0x0
0x309 DUP1
0x30a SLOAD
0x30b DUP2
0x30c SWAP1
0x30d CALLER
0x30e PUSH1 0x1
0x310 PUSH1 0xa0
0x312 PUSH1 0x2
0x314 EXP
0x315 SUB
0x316 SWAP1
0x317 DUP2
0x318 AND
0x319 SWAP2
0x31a AND
0x31b EQ
0x31c PUSH2 0x324
0x31f JUMPI
---
0x306: JUMPDEST 
0x307: V316 = 0x0
0x30a: V317 = S[0x0]
0x30d: V318 = CALLER
0x30e: V319 = 0x1
0x310: V320 = 0xa0
0x312: V321 = 0x2
0x314: V322 = EXP 0x2 0xa0
0x315: V323 = SUB 0x10000000000000000000000000000000000000000 0x1
0x318: V324 = AND 0xffffffffffffffffffffffffffffffffffffffff V318
0x31a: V325 = AND V317 0xffffffffffffffffffffffffffffffffffffffff
0x31b: V326 = EQ V325 V324
0x31c: V327 = 0x324
0x31f: JUMPI 0x324 V326
---
Entry stack: [V13, 0xd1]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0xd1, 0x0, 0x0]

================================

Block 0x320
[0x320:0x323]
---
Predecessors: [0x306]
Successors: []
---
0x320 PUSH1 0x0
0x322 DUP1
0x323 REVERT
---
0x320: V328 = 0x0
0x323: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, 0x0, 0x0]

================================

Block 0x324
[0x324:0x36f]
---
Predecessors: [0x306]
Successors: [0x370, 0x374]
---
0x324 JUMPDEST
0x325 PUSH1 0x1
0x327 SLOAD
0x328 PUSH1 0x1
0x32a PUSH1 0xa0
0x32c PUSH1 0x2
0x32e EXP
0x32f SUB
0x330 AND
0x331 PUSH4 0x70a08231
0x336 ADDRESS
0x337 PUSH1 0x40
0x339 MLOAD
0x33a PUSH1 0xe0
0x33c PUSH1 0x2
0x33e EXP
0x33f PUSH4 0xffffffff
0x344 DUP5
0x345 AND
0x346 MUL
0x347 DUP2
0x348 MSTORE
0x349 PUSH1 0x1
0x34b PUSH1 0xa0
0x34d PUSH1 0x2
0x34f EXP
0x350 SUB
0x351 SWAP1
0x352 SWAP2
0x353 AND
0x354 PUSH1 0x4
0x356 DUP3
0x357 ADD
0x358 MSTORE
0x359 PUSH1 0x24
0x35b ADD
0x35c PUSH1 0x20
0x35e PUSH1 0x40
0x360 MLOAD
0x361 DUP1
0x362 DUP4
0x363 SUB
0x364 DUP2
0x365 PUSH1 0x0
0x367 DUP8
0x368 DUP1
0x369 EXTCODESIZE
0x36a ISZERO
0x36b ISZERO
0x36c PUSH2 0x374
0x36f JUMPI
---
0x324: JUMPDEST 
0x325: V329 = 0x1
0x327: V330 = S[0x1]
0x328: V331 = 0x1
0x32a: V332 = 0xa0
0x32c: V333 = 0x2
0x32e: V334 = EXP 0x2 0xa0
0x32f: V335 = SUB 0x10000000000000000000000000000000000000000 0x1
0x330: V336 = AND 0xffffffffffffffffffffffffffffffffffffffff V330
0x331: V337 = 0x70a08231
0x336: V338 = ADDRESS
0x337: V339 = 0x40
0x339: V340 = M[0x40]
0x33a: V341 = 0xe0
0x33c: V342 = 0x2
0x33e: V343 = EXP 0x2 0xe0
0x33f: V344 = 0xffffffff
0x345: V345 = AND 0x70a08231 0xffffffff
0x346: V346 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x348: M[V340] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x349: V347 = 0x1
0x34b: V348 = 0xa0
0x34d: V349 = 0x2
0x34f: V350 = EXP 0x2 0xa0
0x350: V351 = SUB 0x10000000000000000000000000000000000000000 0x1
0x353: V352 = AND V338 0xffffffffffffffffffffffffffffffffffffffff
0x354: V353 = 0x4
0x357: V354 = ADD V340 0x4
0x358: M[V354] = V352
0x359: V355 = 0x24
0x35b: V356 = ADD 0x24 V340
0x35c: V357 = 0x20
0x35e: V358 = 0x40
0x360: V359 = M[0x40]
0x363: V360 = SUB V356 V359
0x365: V361 = 0x0
0x369: V362 = EXTCODESIZE V336
0x36a: V363 = ISZERO V362
0x36b: V364 = ISZERO V363
0x36c: V365 = 0x374
0x36f: JUMPI 0x374 V364
---
Entry stack: [V13, 0xd1, 0x0, 0x0]
Stack pops: 0
Stack additions: [V336, 0x70a08231, V356, 0x20, V359, V360, V359, 0x0, V336]
Exit stack: [V13, 0xd1, 0x0, 0x0, V336, 0x70a08231, V356, 0x20, V359, V360, V359, 0x0, V336]

================================

Block 0x370
[0x370:0x373]
---
Predecessors: [0x324]
Successors: []
---
0x370 PUSH1 0x0
0x372 DUP1
0x373 REVERT
---
0x370: V366 = 0x0
0x373: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, 0x0, 0x0, V336, 0x70a08231, V356, 0x20, V359, V360, V359, 0x0, V336]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, 0x0, 0x0, V336, 0x70a08231, V356, 0x20, V359, V360, V359, 0x0, V336]

================================

Block 0x374
[0x374:0x37c]
---
Predecessors: [0x324]
Successors: [0x37d, 0x381]
---
0x374 JUMPDEST
0x375 GAS
0x376 CALL
0x377 ISZERO
0x378 ISZERO
0x379 PUSH2 0x381
0x37c JUMPI
---
0x374: JUMPDEST 
0x375: V367 = GAS
0x376: V368 = CALL V367 V336 0x0 V359 V360 V359 0x20
0x377: V369 = ISZERO V368
0x378: V370 = ISZERO V369
0x379: V371 = 0x381
0x37c: JUMPI 0x381 V370
---
Entry stack: [V13, 0xd1, 0x0, 0x0, V336, 0x70a08231, V356, 0x20, V359, V360, V359, 0x0, V336]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xd1, 0x0, 0x0, V336, 0x70a08231, V356]

================================

Block 0x37d
[0x37d:0x380]
---
Predecessors: [0x374]
Successors: []
---
0x37d PUSH1 0x0
0x37f DUP1
0x380 REVERT
---
0x37d: V372 = 0x0
0x380: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, 0x0, 0x0, V336, 0x70a08231, V356]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, 0x0, 0x0, V336, 0x70a08231, V356]

================================

Block 0x381
[0x381:0x3d9]
---
Predecessors: [0x374]
Successors: [0x3da, 0x3de]
---
0x381 JUMPDEST
0x382 POP
0x383 POP
0x384 POP
0x385 PUSH1 0x40
0x387 MLOAD
0x388 DUP1
0x389 MLOAD
0x38a PUSH1 0x2
0x38c SLOAD
0x38d SWAP1
0x38e SWAP4
0x38f POP
0x390 PUSH1 0x1
0x392 PUSH1 0xa0
0x394 PUSH1 0x2
0x396 EXP
0x397 SUB
0x398 AND
0x399 SWAP1
0x39a POP
0x39b PUSH4 0x70a08231
0x3a0 ADDRESS
0x3a1 PUSH1 0x40
0x3a3 MLOAD
0x3a4 PUSH1 0xe0
0x3a6 PUSH1 0x2
0x3a8 EXP
0x3a9 PUSH4 0xffffffff
0x3ae DUP5
0x3af AND
0x3b0 MUL
0x3b1 DUP2
0x3b2 MSTORE
0x3b3 PUSH1 0x1
0x3b5 PUSH1 0xa0
0x3b7 PUSH1 0x2
0x3b9 EXP
0x3ba SUB
0x3bb SWAP1
0x3bc SWAP2
0x3bd AND
0x3be PUSH1 0x4
0x3c0 DUP3
0x3c1 ADD
0x3c2 MSTORE
0x3c3 PUSH1 0x24
0x3c5 ADD
0x3c6 PUSH1 0x20
0x3c8 PUSH1 0x40
0x3ca MLOAD
0x3cb DUP1
0x3cc DUP4
0x3cd SUB
0x3ce DUP2
0x3cf PUSH1 0x0
0x3d1 DUP8
0x3d2 DUP1
0x3d3 EXTCODESIZE
0x3d4 ISZERO
0x3d5 ISZERO
0x3d6 PUSH2 0x3de
0x3d9 JUMPI
---
0x381: JUMPDEST 
0x385: V373 = 0x40
0x387: V374 = M[0x40]
0x389: V375 = M[V374]
0x38a: V376 = 0x2
0x38c: V377 = S[0x2]
0x390: V378 = 0x1
0x392: V379 = 0xa0
0x394: V380 = 0x2
0x396: V381 = EXP 0x2 0xa0
0x397: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x398: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x39b: V384 = 0x70a08231
0x3a0: V385 = ADDRESS
0x3a1: V386 = 0x40
0x3a3: V387 = M[0x40]
0x3a4: V388 = 0xe0
0x3a6: V389 = 0x2
0x3a8: V390 = EXP 0x2 0xe0
0x3a9: V391 = 0xffffffff
0x3af: V392 = AND 0x70a08231 0xffffffff
0x3b0: V393 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x3b2: M[V387] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x3b3: V394 = 0x1
0x3b5: V395 = 0xa0
0x3b7: V396 = 0x2
0x3b9: V397 = EXP 0x2 0xa0
0x3ba: V398 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3bd: V399 = AND V385 0xffffffffffffffffffffffffffffffffffffffff
0x3be: V400 = 0x4
0x3c1: V401 = ADD V387 0x4
0x3c2: M[V401] = V399
0x3c3: V402 = 0x24
0x3c5: V403 = ADD 0x24 V387
0x3c6: V404 = 0x20
0x3c8: V405 = 0x40
0x3ca: V406 = M[0x40]
0x3cd: V407 = SUB V403 V406
0x3cf: V408 = 0x0
0x3d3: V409 = EXTCODESIZE V383
0x3d4: V410 = ISZERO V409
0x3d5: V411 = ISZERO V410
0x3d6: V412 = 0x3de
0x3d9: JUMPI 0x3de V411
---
Entry stack: [V13, 0xd1, 0x0, 0x0, V336, 0x70a08231, V356]
Stack pops: 5
Stack additions: [V375, S3, V383, 0x70a08231, V403, 0x20, V406, V407, V406, 0x0, V383]
Exit stack: [V13, 0xd1, V375, 0x0, V383, 0x70a08231, V403, 0x20, V406, V407, V406, 0x0, V383]

================================

Block 0x3da
[0x3da:0x3dd]
---
Predecessors: [0x381]
Successors: []
---
0x3da PUSH1 0x0
0x3dc DUP1
0x3dd REVERT
---
0x3da: V413 = 0x0
0x3dd: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V375, 0x0, V383, 0x70a08231, V403, 0x20, V406, V407, V406, 0x0, V383]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V375, 0x0, V383, 0x70a08231, V403, 0x20, V406, V407, V406, 0x0, V383]

================================

Block 0x3de
[0x3de:0x3e6]
---
Predecessors: [0x381]
Successors: [0x3e7, 0x3eb]
---
0x3de JUMPDEST
0x3df GAS
0x3e0 CALL
0x3e1 ISZERO
0x3e2 ISZERO
0x3e3 PUSH2 0x3eb
0x3e6 JUMPI
---
0x3de: JUMPDEST 
0x3df: V414 = GAS
0x3e0: V415 = CALL V414 V383 0x0 V406 V407 V406 0x20
0x3e1: V416 = ISZERO V415
0x3e2: V417 = ISZERO V416
0x3e3: V418 = 0x3eb
0x3e6: JUMPI 0x3eb V417
---
Entry stack: [V13, 0xd1, V375, 0x0, V383, 0x70a08231, V403, 0x20, V406, V407, V406, 0x0, V383]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xd1, V375, 0x0, V383, 0x70a08231, V403]

================================

Block 0x3e7
[0x3e7:0x3ea]
---
Predecessors: [0x3de]
Successors: []
---
0x3e7 PUSH1 0x0
0x3e9 DUP1
0x3ea REVERT
---
0x3e7: V419 = 0x0
0x3ea: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V375, 0x0, V383, 0x70a08231, V403]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V375, 0x0, V383, 0x70a08231, V403]

================================

Block 0x3eb
[0x3eb:0x44f]
---
Predecessors: [0x3de]
Successors: [0x450, 0x454]
---
0x3eb JUMPDEST
0x3ec POP
0x3ed POP
0x3ee POP
0x3ef PUSH1 0x40
0x3f1 MLOAD
0x3f2 DUP1
0x3f3 MLOAD
0x3f4 PUSH1 0x1
0x3f6 SLOAD
0x3f7 PUSH1 0x0
0x3f9 SLOAD
0x3fa SWAP2
0x3fb SWAP4
0x3fc POP
0x3fd PUSH1 0x1
0x3ff PUSH1 0xa0
0x401 PUSH1 0x2
0x403 EXP
0x404 SUB
0x405 SWAP1
0x406 DUP2
0x407 AND
0x408 SWAP3
0x409 POP
0x40a PUSH4 0xa9059cbb
0x40f SWAP2
0x410 AND
0x411 DUP5
0x412 PUSH1 0x40
0x414 MLOAD
0x415 PUSH1 0xe0
0x417 PUSH1 0x2
0x419 EXP
0x41a PUSH4 0xffffffff
0x41f DUP6
0x420 AND
0x421 MUL
0x422 DUP2
0x423 MSTORE
0x424 PUSH1 0x1
0x426 PUSH1 0xa0
0x428 PUSH1 0x2
0x42a EXP
0x42b SUB
0x42c SWAP1
0x42d SWAP3
0x42e AND
0x42f PUSH1 0x4
0x431 DUP4
0x432 ADD
0x433 MSTORE
0x434 PUSH1 0x24
0x436 DUP3
0x437 ADD
0x438 MSTORE
0x439 PUSH1 0x44
0x43b ADD
0x43c PUSH1 0x20
0x43e PUSH1 0x40
0x440 MLOAD
0x441 DUP1
0x442 DUP4
0x443 SUB
0x444 DUP2
0x445 PUSH1 0x0
0x447 DUP8
0x448 DUP1
0x449 EXTCODESIZE
0x44a ISZERO
0x44b ISZERO
0x44c PUSH2 0x454
0x44f JUMPI
---
0x3eb: JUMPDEST 
0x3ef: V420 = 0x40
0x3f1: V421 = M[0x40]
0x3f3: V422 = M[V421]
0x3f4: V423 = 0x1
0x3f6: V424 = S[0x1]
0x3f7: V425 = 0x0
0x3f9: V426 = S[0x0]
0x3fd: V427 = 0x1
0x3ff: V428 = 0xa0
0x401: V429 = 0x2
0x403: V430 = EXP 0x2 0xa0
0x404: V431 = SUB 0x10000000000000000000000000000000000000000 0x1
0x407: V432 = AND 0xffffffffffffffffffffffffffffffffffffffff V424
0x40a: V433 = 0xa9059cbb
0x410: V434 = AND V426 0xffffffffffffffffffffffffffffffffffffffff
0x412: V435 = 0x40
0x414: V436 = M[0x40]
0x415: V437 = 0xe0
0x417: V438 = 0x2
0x419: V439 = EXP 0x2 0xe0
0x41a: V440 = 0xffffffff
0x420: V441 = AND 0xa9059cbb 0xffffffff
0x421: V442 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x423: M[V436] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x424: V443 = 0x1
0x426: V444 = 0xa0
0x428: V445 = 0x2
0x42a: V446 = EXP 0x2 0xa0
0x42b: V447 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42e: V448 = AND V434 0xffffffffffffffffffffffffffffffffffffffff
0x42f: V449 = 0x4
0x432: V450 = ADD V436 0x4
0x433: M[V450] = V448
0x434: V451 = 0x24
0x437: V452 = ADD V436 0x24
0x438: M[V452] = V375
0x439: V453 = 0x44
0x43b: V454 = ADD 0x44 V436
0x43c: V455 = 0x20
0x43e: V456 = 0x40
0x440: V457 = M[0x40]
0x443: V458 = SUB V454 V457
0x445: V459 = 0x0
0x449: V460 = EXTCODESIZE V432
0x44a: V461 = ISZERO V460
0x44b: V462 = ISZERO V461
0x44c: V463 = 0x454
0x44f: JUMPI 0x454 V462
---
Entry stack: [V13, 0xd1, V375, 0x0, V383, 0x70a08231, V403]
Stack pops: 5
Stack additions: [S4, V422, V432, 0xa9059cbb, V454, 0x20, V457, V458, V457, 0x0, V432]
Exit stack: [V13, 0xd1, V375, V422, V432, 0xa9059cbb, V454, 0x20, V457, V458, V457, 0x0, V432]

================================

Block 0x450
[0x450:0x453]
---
Predecessors: [0x3eb]
Successors: []
---
0x450 PUSH1 0x0
0x452 DUP1
0x453 REVERT
---
0x450: V464 = 0x0
0x453: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V375, V422, V432, 0xa9059cbb, V454, 0x20, V457, V458, V457, 0x0, V432]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V375, V422, V432, 0xa9059cbb, V454, 0x20, V457, V458, V457, 0x0, V432]

================================

Block 0x454
[0x454:0x45c]
---
Predecessors: [0x3eb]
Successors: [0x45d, 0x461]
---
0x454 JUMPDEST
0x455 GAS
0x456 CALL
0x457 ISZERO
0x458 ISZERO
0x459 PUSH2 0x461
0x45c JUMPI
---
0x454: JUMPDEST 
0x455: V465 = GAS
0x456: V466 = CALL V465 V432 0x0 V457 V458 V457 0x20
0x457: V467 = ISZERO V466
0x458: V468 = ISZERO V467
0x459: V469 = 0x461
0x45c: JUMPI 0x461 V468
---
Entry stack: [V13, 0xd1, V375, V422, V432, 0xa9059cbb, V454, 0x20, V457, V458, V457, 0x0, V432]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xd1, V375, V422, V432, 0xa9059cbb, V454]

================================

Block 0x45d
[0x45d:0x460]
---
Predecessors: [0x454]
Successors: []
---
0x45d PUSH1 0x0
0x45f DUP1
0x460 REVERT
---
0x45d: V470 = 0x0
0x460: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V375, V422, V432, 0xa9059cbb, V454]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V375, V422, V432, 0xa9059cbb, V454]

================================

Block 0x461
[0x461:0x471]
---
Predecessors: [0x454]
Successors: [0x472, 0x4e7]
---
0x461 JUMPDEST
0x462 POP
0x463 POP
0x464 POP
0x465 PUSH1 0x40
0x467 MLOAD
0x468 DUP1
0x469 MLOAD
0x46a SWAP1
0x46b POP
0x46c DUP1
0x46d ISZERO
0x46e PUSH2 0x4e7
0x471 JUMPI
---
0x461: JUMPDEST 
0x465: V471 = 0x40
0x467: V472 = M[0x40]
0x469: V473 = M[V472]
0x46d: V474 = ISZERO V473
0x46e: V475 = 0x4e7
0x471: JUMPI 0x4e7 V474
---
Entry stack: [V13, 0xd1, V375, V422, V432, 0xa9059cbb, V454]
Stack pops: 3
Stack additions: [V473]
Exit stack: [V13, 0xd1, V375, V422, V473]

================================

Block 0x472
[0x472:0x4ca]
---
Predecessors: [0x461]
Successors: [0x4cb, 0x4cf]
---
0x472 POP
0x473 PUSH1 0x2
0x475 SLOAD
0x476 PUSH1 0x0
0x478 SLOAD
0x479 PUSH1 0x1
0x47b PUSH1 0xa0
0x47d PUSH1 0x2
0x47f EXP
0x480 SUB
0x481 SWAP2
0x482 DUP3
0x483 AND
0x484 SWAP2
0x485 PUSH4 0xa9059cbb
0x48a SWAP2
0x48b AND
0x48c DUP4
0x48d PUSH1 0x40
0x48f MLOAD
0x490 PUSH1 0xe0
0x492 PUSH1 0x2
0x494 EXP
0x495 PUSH4 0xffffffff
0x49a DUP6
0x49b AND
0x49c MUL
0x49d DUP2
0x49e MSTORE
0x49f PUSH1 0x1
0x4a1 PUSH1 0xa0
0x4a3 PUSH1 0x2
0x4a5 EXP
0x4a6 SUB
0x4a7 SWAP1
0x4a8 SWAP3
0x4a9 AND
0x4aa PUSH1 0x4
0x4ac DUP4
0x4ad ADD
0x4ae MSTORE
0x4af PUSH1 0x24
0x4b1 DUP3
0x4b2 ADD
0x4b3 MSTORE
0x4b4 PUSH1 0x44
0x4b6 ADD
0x4b7 PUSH1 0x20
0x4b9 PUSH1 0x40
0x4bb MLOAD
0x4bc DUP1
0x4bd DUP4
0x4be SUB
0x4bf DUP2
0x4c0 PUSH1 0x0
0x4c2 DUP8
0x4c3 DUP1
0x4c4 EXTCODESIZE
0x4c5 ISZERO
0x4c6 ISZERO
0x4c7 PUSH2 0x4cf
0x4ca JUMPI
---
0x473: V476 = 0x2
0x475: V477 = S[0x2]
0x476: V478 = 0x0
0x478: V479 = S[0x0]
0x479: V480 = 0x1
0x47b: V481 = 0xa0
0x47d: V482 = 0x2
0x47f: V483 = EXP 0x2 0xa0
0x480: V484 = SUB 0x10000000000000000000000000000000000000000 0x1
0x483: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V477
0x485: V486 = 0xa9059cbb
0x48b: V487 = AND V479 0xffffffffffffffffffffffffffffffffffffffff
0x48d: V488 = 0x40
0x48f: V489 = M[0x40]
0x490: V490 = 0xe0
0x492: V491 = 0x2
0x494: V492 = EXP 0x2 0xe0
0x495: V493 = 0xffffffff
0x49b: V494 = AND 0xa9059cbb 0xffffffff
0x49c: V495 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x49e: M[V489] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x49f: V496 = 0x1
0x4a1: V497 = 0xa0
0x4a3: V498 = 0x2
0x4a5: V499 = EXP 0x2 0xa0
0x4a6: V500 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4a9: V501 = AND V487 0xffffffffffffffffffffffffffffffffffffffff
0x4aa: V502 = 0x4
0x4ad: V503 = ADD V489 0x4
0x4ae: M[V503] = V501
0x4af: V504 = 0x24
0x4b2: V505 = ADD V489 0x24
0x4b3: M[V505] = V422
0x4b4: V506 = 0x44
0x4b6: V507 = ADD 0x44 V489
0x4b7: V508 = 0x20
0x4b9: V509 = 0x40
0x4bb: V510 = M[0x40]
0x4be: V511 = SUB V507 V510
0x4c0: V512 = 0x0
0x4c4: V513 = EXTCODESIZE V485
0x4c5: V514 = ISZERO V513
0x4c6: V515 = ISZERO V514
0x4c7: V516 = 0x4cf
0x4ca: JUMPI 0x4cf V515
---
Entry stack: [V13, 0xd1, V375, V422, V473]
Stack pops: 2
Stack additions: [S1, V485, 0xa9059cbb, V507, 0x20, V510, V511, V510, 0x0, V485]
Exit stack: [V13, 0xd1, V375, V422, V485, 0xa9059cbb, V507, 0x20, V510, V511, V510, 0x0, V485]

================================

Block 0x4cb
[0x4cb:0x4ce]
---
Predecessors: [0x472]
Successors: []
---
0x4cb PUSH1 0x0
0x4cd DUP1
0x4ce REVERT
---
0x4cb: V517 = 0x0
0x4ce: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V375, V422, V485, 0xa9059cbb, V507, 0x20, V510, V511, V510, 0x0, V485]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V375, V422, V485, 0xa9059cbb, V507, 0x20, V510, V511, V510, 0x0, V485]

================================

Block 0x4cf
[0x4cf:0x4d7]
---
Predecessors: [0x472]
Successors: [0x4d8, 0x4dc]
---
0x4cf JUMPDEST
0x4d0 GAS
0x4d1 CALL
0x4d2 ISZERO
0x4d3 ISZERO
0x4d4 PUSH2 0x4dc
0x4d7 JUMPI
---
0x4cf: JUMPDEST 
0x4d0: V518 = GAS
0x4d1: V519 = CALL V518 V485 0x0 V510 V511 V510 0x20
0x4d2: V520 = ISZERO V519
0x4d3: V521 = ISZERO V520
0x4d4: V522 = 0x4dc
0x4d7: JUMPI 0x4dc V521
---
Entry stack: [V13, 0xd1, V375, V422, V485, 0xa9059cbb, V507, 0x20, V510, V511, V510, 0x0, V485]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xd1, V375, V422, V485, 0xa9059cbb, V507]

================================

Block 0x4d8
[0x4d8:0x4db]
---
Predecessors: [0x4cf]
Successors: []
---
0x4d8 PUSH1 0x0
0x4da DUP1
0x4db REVERT
---
0x4d8: V523 = 0x0
0x4db: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V375, V422, V485, 0xa9059cbb, V507]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V375, V422, V485, 0xa9059cbb, V507]

================================

Block 0x4dc
[0x4dc:0x4e6]
---
Predecessors: [0x4cf]
Successors: [0x4e7]
---
0x4dc JUMPDEST
0x4dd POP
0x4de POP
0x4df POP
0x4e0 PUSH1 0x40
0x4e2 MLOAD
0x4e3 DUP1
0x4e4 MLOAD
0x4e5 SWAP1
0x4e6 POP
---
0x4dc: JUMPDEST 
0x4e0: V524 = 0x40
0x4e2: V525 = M[0x40]
0x4e4: V526 = M[V525]
---
Entry stack: [V13, 0xd1, V375, V422, V485, 0xa9059cbb, V507]
Stack pops: 3
Stack additions: [V526]
Exit stack: [V13, 0xd1, V375, V422, V526]

================================

Block 0x4e7
[0x4e7:0x4ed]
---
Predecessors: [0x461, 0x4dc]
Successors: [0x4ee, 0x4ef]
---
0x4e7 JUMPDEST
0x4e8 ISZERO
0x4e9 ISZERO
0x4ea PUSH2 0x4ef
0x4ed JUMPI
---
0x4e7: JUMPDEST 
0x4e8: V527 = ISZERO S0
0x4e9: V528 = ISZERO V527
0x4ea: V529 = 0x4ef
0x4ed: JUMPI 0x4ef V528
---
Entry stack: [V13, 0xd1, V375, V422, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0xd1, V375, V422]

================================

Block 0x4ee
[0x4ee:0x4ee]
---
Predecessors: [0x4e7]
Successors: []
---
0x4ee INVALID
---
0x4ee: INVALID 
---
Entry stack: [V13, 0xd1, V375, V422]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V375, V422]

================================

Block 0x4ef
[0x4ef:0x4fc]
---
Predecessors: [0x4e7]
Successors: []
---
0x4ef JUMPDEST
0x4f0 PUSH1 0x0
0x4f2 SLOAD
0x4f3 PUSH1 0x1
0x4f5 PUSH1 0xa0
0x4f7 PUSH1 0x2
0x4f9 EXP
0x4fa SUB
0x4fb AND
0x4fc SELFDESTRUCT
---
0x4ef: JUMPDEST 
0x4f0: V530 = 0x0
0x4f2: V531 = S[0x0]
0x4f3: V532 = 0x1
0x4f5: V533 = 0xa0
0x4f7: V534 = 0x2
0x4f9: V535 = EXP 0x2 0xa0
0x4fa: V536 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fb: V537 = AND 0xffffffffffffffffffffffffffffffffffffffff V531
0x4fc: SELFDESTRUCT V537
---
Entry stack: [V13, 0xd1, V375, V422]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V375, V422]

================================

Block 0x4fd
[0x4fd:0x508]
---
Predecessors: [0x105]
Successors: [0x509, 0x50d]
---
0x4fd JUMPDEST
0x4fe PUSH1 0x0
0x500 DUP1
0x501 TIMESTAMP
0x502 DUP7
0x503 LT
0x504 ISZERO
0x505 PUSH2 0x50d
0x508 JUMPI
---
0x4fd: JUMPDEST 
0x4fe: V538 = 0x0
0x501: V539 = TIMESTAMP
0x503: V540 = LT V89 V539
0x504: V541 = ISZERO V540
0x505: V542 = 0x50d
0x508: JUMPI 0x50d V541
---
Entry stack: [V13, 0xd1, V87, V89, V93, V95, V97]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, 0x0]
Exit stack: [V13, 0xd1, V87, V89, V93, V95, V97, 0x0, 0x0]

================================

Block 0x509
[0x509:0x50c]
---
Predecessors: [0x4fd]
Successors: []
---
0x509 PUSH1 0x0
0x50b DUP1
0x50c REVERT
---
0x509: V543 = 0x0
0x50c: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V87, V89, V93, V95, V97, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V87, V89, V93, V95, V97, 0x0, 0x0]

================================

Block 0x50d
[0x50d:0x578]
---
Predecessors: [0x4fd]
Successors: [0x579, 0x57d]
---
0x50d JUMPDEST
0x50e PUSH1 0x1
0x510 DUP8
0x511 DUP8
0x512 PUSH1 0x40
0x514 MLOAD
0x515 SWAP2
0x516 DUP3
0x517 MSTORE
0x518 PUSH1 0x20
0x51a DUP3
0x51b ADD
0x51c MSTORE
0x51d PUSH1 0x40
0x51f SWAP1
0x520 DUP2
0x521 ADD
0x522 SWAP1
0x523 MLOAD
0x524 DUP1
0x525 SWAP2
0x526 SUB
0x527 SWAP1
0x528 SHA3
0x529 DUP7
0x52a DUP7
0x52b DUP7
0x52c PUSH1 0x40
0x52e MLOAD
0x52f PUSH1 0x0
0x531 DUP2
0x532 MSTORE
0x533 PUSH1 0x20
0x535 ADD
0x536 PUSH1 0x40
0x538 MSTORE
0x539 PUSH1 0x40
0x53b MLOAD
0x53c SWAP4
0x53d DUP5
0x53e MSTORE
0x53f PUSH1 0xff
0x541 SWAP1
0x542 SWAP3
0x543 AND
0x544 PUSH1 0x20
0x546 DUP1
0x547 DUP6
0x548 ADD
0x549 SWAP2
0x54a SWAP1
0x54b SWAP2
0x54c MSTORE
0x54d PUSH1 0x40
0x54f DUP1
0x550 DUP6
0x551 ADD
0x552 SWAP3
0x553 SWAP1
0x554 SWAP3
0x555 MSTORE
0x556 PUSH1 0x60
0x558 DUP5
0x559 ADD
0x55a SWAP3
0x55b SWAP1
0x55c SWAP3
0x55d MSTORE
0x55e PUSH1 0x80
0x560 SWAP1
0x561 SWAP3
0x562 ADD
0x563 SWAP2
0x564 MLOAD
0x565 PUSH1 0x20
0x567 DUP2
0x568 SUB
0x569 SWAP1
0x56a DUP1
0x56b DUP5
0x56c SUB
0x56d SWAP1
0x56e PUSH1 0x0
0x570 DUP7
0x571 GAS
0x572 CALL
0x573 ISZERO
0x574 ISZERO
0x575 PUSH2 0x57d
0x578 JUMPI
---
0x50d: JUMPDEST 
0x50e: V544 = 0x1
0x512: V545 = 0x40
0x514: V546 = M[0x40]
0x517: M[V546] = V87
0x518: V547 = 0x20
0x51b: V548 = ADD V546 0x20
0x51c: M[V548] = V89
0x51d: V549 = 0x40
0x521: V550 = ADD 0x40 V546
0x523: V551 = M[0x40]
0x526: V552 = SUB V550 V551
0x528: V553 = SHA3 V551 V552
0x52c: V554 = 0x40
0x52e: V555 = M[0x40]
0x52f: V556 = 0x0
0x532: M[V555] = 0x0
0x533: V557 = 0x20
0x535: V558 = ADD 0x20 V555
0x536: V559 = 0x40
0x538: M[0x40] = V558
0x539: V560 = 0x40
0x53b: V561 = M[0x40]
0x53e: M[V561] = V553
0x53f: V562 = 0xff
0x543: V563 = AND V93 0xff
0x544: V564 = 0x20
0x548: V565 = ADD V561 0x20
0x54c: M[V565] = V563
0x54d: V566 = 0x40
0x551: V567 = ADD V561 0x40
0x555: M[V567] = V95
0x556: V568 = 0x60
0x559: V569 = ADD V561 0x60
0x55d: M[V569] = V97
0x55e: V570 = 0x80
0x562: V571 = ADD V561 0x80
0x564: V572 = M[0x40]
0x565: V573 = 0x20
0x568: V574 = SUB V572 0x20
0x56c: V575 = SUB V571 V572
0x56e: V576 = 0x0
0x571: V577 = GAS
0x572: V578 = CALL V577 0x1 0x0 V572 V575 V574 0x20
0x573: V579 = ISZERO V578
0x574: V580 = ISZERO V579
0x575: V581 = 0x57d
0x578: JUMPI 0x57d V580
---
Entry stack: [V13, 0xd1, V87, V89, V93, V95, V97, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x1, V571]
Exit stack: [V13, 0xd1, V87, V89, V93, V95, V97, 0x0, 0x0, 0x1, V571]

================================

Block 0x579
[0x579:0x57c]
---
Predecessors: [0x50d]
Successors: []
---
0x579 PUSH1 0x0
0x57b DUP1
0x57c REVERT
---
0x579: V582 = 0x0
0x57c: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V87, V89, V93, V95, V97, 0x0, 0x0, 0x1, V571]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V87, V89, V93, V95, V97, 0x0, 0x0, 0x1, V571]

================================

Block 0x57d
[0x57d:0x59e]
---
Predecessors: [0x50d]
Successors: [0x59f, 0x5a3]
---
0x57d JUMPDEST
0x57e POP
0x57f POP
0x580 PUSH1 0x20
0x582 PUSH1 0x40
0x584 MLOAD
0x585 SUB
0x586 MLOAD
0x587 PUSH1 0x3
0x589 SLOAD
0x58a SWAP1
0x58b SWAP3
0x58c POP
0x58d PUSH1 0x1
0x58f PUSH1 0xa0
0x591 PUSH1 0x2
0x593 EXP
0x594 SUB
0x595 DUP1
0x596 DUP5
0x597 AND
0x598 SWAP2
0x599 AND
0x59a EQ
0x59b PUSH2 0x5a3
0x59e JUMPI
---
0x57d: JUMPDEST 
0x580: V583 = 0x20
0x582: V584 = 0x40
0x584: V585 = M[0x40]
0x585: V586 = SUB V585 0x20
0x586: V587 = M[V586]
0x587: V588 = 0x3
0x589: V589 = S[0x3]
0x58d: V590 = 0x1
0x58f: V591 = 0xa0
0x591: V592 = 0x2
0x593: V593 = EXP 0x2 0xa0
0x594: V594 = SUB 0x10000000000000000000000000000000000000000 0x1
0x597: V595 = AND V587 0xffffffffffffffffffffffffffffffffffffffff
0x599: V596 = AND V589 0xffffffffffffffffffffffffffffffffffffffff
0x59a: V597 = EQ V596 V595
0x59b: V598 = 0x5a3
0x59e: JUMPI 0x5a3 V597
---
Entry stack: [V13, 0xd1, V87, V89, V93, V95, V97, 0x0, 0x0, 0x1, V571]
Stack pops: 4
Stack additions: [V587, S2]
Exit stack: [V13, 0xd1, V87, V89, V93, V95, V97, V587, 0x0]

================================

Block 0x59f
[0x59f:0x5a2]
---
Predecessors: [0x57d]
Successors: []
---
0x59f PUSH1 0x0
0x5a1 DUP1
0x5a2 REVERT
---
0x59f: V599 = 0x0
0x5a2: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V87, V89, V93, V95, V97, V587, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V87, V89, V93, V95, V97, V587, 0x0]

================================

Block 0x5a3
[0x5a3:0x5ac]
---
Predecessors: [0x57d]
Successors: [0xe10]
---
0x5a3 JUMPDEST
0x5a4 PUSH2 0x5ad
0x5a7 CALLVALUE
0x5a8 DUP9
0x5a9 PUSH2 0xe10
0x5ac JUMP
---
0x5a3: JUMPDEST 
0x5a4: V600 = 0x5ad
0x5a7: V601 = CALLVALUE
0x5a9: V602 = 0xe10
0x5ac: JUMP 0xe10
---
Entry stack: [V13, 0xd1, V87, V89, V93, V95, V97, V587, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x5ad, V601, S6]
Exit stack: [V13, 0xd1, V87, V89, V93, V95, V97, V587, 0x0, 0x5ad, V601, V87]

================================

Block 0x5ad
[0x5ad:0x601]
---
Predecessors: [0xe1d]
Successors: [0x602, 0x606]
---
0x5ad JUMPDEST
0x5ae PUSH1 0x1
0x5b0 SLOAD
0x5b1 SWAP1
0x5b2 SWAP2
0x5b3 POP
0x5b4 PUSH1 0x1
0x5b6 PUSH1 0xa0
0x5b8 PUSH1 0x2
0x5ba EXP
0x5bb SUB
0x5bc AND
0x5bd PUSH4 0xa9059cbb
0x5c2 CALLER
0x5c3 DUP4
0x5c4 PUSH1 0x40
0x5c6 MLOAD
0x5c7 PUSH1 0xe0
0x5c9 PUSH1 0x2
0x5cb EXP
0x5cc PUSH4 0xffffffff
0x5d1 DUP6
0x5d2 AND
0x5d3 MUL
0x5d4 DUP2
0x5d5 MSTORE
0x5d6 PUSH1 0x1
0x5d8 PUSH1 0xa0
0x5da PUSH1 0x2
0x5dc EXP
0x5dd SUB
0x5de SWAP1
0x5df SWAP3
0x5e0 AND
0x5e1 PUSH1 0x4
0x5e3 DUP4
0x5e4 ADD
0x5e5 MSTORE
0x5e6 PUSH1 0x24
0x5e8 DUP3
0x5e9 ADD
0x5ea MSTORE
0x5eb PUSH1 0x44
0x5ed ADD
0x5ee PUSH1 0x20
0x5f0 PUSH1 0x40
0x5f2 MLOAD
0x5f3 DUP1
0x5f4 DUP4
0x5f5 SUB
0x5f6 DUP2
0x5f7 PUSH1 0x0
0x5f9 DUP8
0x5fa DUP1
0x5fb EXTCODESIZE
0x5fc ISZERO
0x5fd ISZERO
0x5fe PUSH2 0x606
0x601 JUMPI
---
0x5ad: JUMPDEST 
0x5ae: V603 = 0x1
0x5b0: V604 = S[0x1]
0x5b4: V605 = 0x1
0x5b6: V606 = 0xa0
0x5b8: V607 = 0x2
0x5ba: V608 = EXP 0x2 0xa0
0x5bb: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bc: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V604
0x5bd: V611 = 0xa9059cbb
0x5c2: V612 = CALLER
0x5c4: V613 = 0x40
0x5c6: V614 = M[0x40]
0x5c7: V615 = 0xe0
0x5c9: V616 = 0x2
0x5cb: V617 = EXP 0x2 0xe0
0x5cc: V618 = 0xffffffff
0x5d2: V619 = AND 0xa9059cbb 0xffffffff
0x5d3: V620 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x5d5: M[V614] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x5d6: V621 = 0x1
0x5d8: V622 = 0xa0
0x5da: V623 = 0x2
0x5dc: V624 = EXP 0x2 0xa0
0x5dd: V625 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e0: V626 = AND V612 0xffffffffffffffffffffffffffffffffffffffff
0x5e1: V627 = 0x4
0x5e4: V628 = ADD V614 0x4
0x5e5: M[V628] = V626
0x5e6: V629 = 0x24
0x5e9: V630 = ADD V614 0x24
0x5ea: M[V630] = V1385
0x5eb: V631 = 0x44
0x5ed: V632 = ADD 0x44 V614
0x5ee: V633 = 0x20
0x5f0: V634 = 0x40
0x5f2: V635 = M[0x40]
0x5f5: V636 = SUB V632 V635
0x5f7: V637 = 0x0
0x5fb: V638 = EXTCODESIZE V610
0x5fc: V639 = ISZERO V638
0x5fd: V640 = ISZERO V639
0x5fe: V641 = 0x606
0x601: JUMPI 0x606 V640
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1385]
Stack pops: 2
Stack additions: [S0, V610, 0xa9059cbb, V632, 0x20, V635, V636, V635, 0x0, V610]
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1385, V610, 0xa9059cbb, V632, 0x20, V635, V636, V635, 0x0, V610]

================================

Block 0x602
[0x602:0x605]
---
Predecessors: [0x5ad]
Successors: []
---
0x602 PUSH1 0x0
0x604 DUP1
0x605 REVERT
---
0x602: V642 = 0x0
0x605: REVERT 0x0 0x0
---
Entry stack: [V13, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V1385, V610, 0xa9059cbb, V632, 0x20, V635, V636, V635, 0x0, V610]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V1385, V610, 0xa9059cbb, V632, 0x20, V635, V636, V635, 0x0, V610]

================================

Block 0x606
[0x606:0x60e]
---
Predecessors: [0x5ad]
Successors: [0x60f, 0x613]
---
0x606 JUMPDEST
0x607 GAS
0x608 CALL
0x609 ISZERO
0x60a ISZERO
0x60b PUSH2 0x613
0x60e JUMPI
---
0x606: JUMPDEST 
0x607: V643 = GAS
0x608: V644 = CALL V643 V610 0x0 V635 V636 V635 0x20
0x609: V645 = ISZERO V644
0x60a: V646 = ISZERO V645
0x60b: V647 = 0x613
0x60e: JUMPI 0x613 V646
---
Entry stack: [V13, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V1385, V610, 0xa9059cbb, V632, 0x20, V635, V636, V635, 0x0, V610]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V1385, V610, 0xa9059cbb, V632]

================================

Block 0x60f
[0x60f:0x612]
---
Predecessors: [0x606]
Successors: []
---
0x60f PUSH1 0x0
0x611 DUP1
0x612 REVERT
---
0x60f: V648 = 0x0
0x612: REVERT 0x0 0x0
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1385, V610, 0xa9059cbb, V632]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1385, V610, 0xa9059cbb, V632]

================================

Block 0x613
[0x613:0x623]
---
Predecessors: [0x606]
Successors: [0x624, 0x625]
---
0x613 JUMPDEST
0x614 POP
0x615 POP
0x616 POP
0x617 PUSH1 0x40
0x619 MLOAD
0x61a DUP1
0x61b MLOAD
0x61c SWAP1
0x61d POP
0x61e ISZERO
0x61f ISZERO
0x620 PUSH2 0x625
0x623 JUMPI
---
0x613: JUMPDEST 
0x617: V649 = 0x40
0x619: V650 = M[0x40]
0x61b: V651 = M[V650]
0x61e: V652 = ISZERO V651
0x61f: V653 = ISZERO V652
0x620: V654 = 0x625
0x623: JUMPI 0x625 V653
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1385, V610, 0xa9059cbb, V632]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1385]

================================

Block 0x624
[0x624:0x624]
---
Predecessors: [0x613]
Successors: []
---
0x624 INVALID
---
0x624: INVALID 
---
Entry stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1385]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1385]

================================

Block 0x625
[0x625:0x67e]
---
Predecessors: [0x613]
Successors: [0xd1]
---
0x625 JUMPDEST
0x626 CALLER
0x627 PUSH1 0x1
0x629 PUSH1 0xa0
0x62b PUSH1 0x2
0x62d EXP
0x62e SUB
0x62f AND
0x630 PUSH32 0xd7637a5688f07535ecc8e0d6b5b99681e4f5d57fb5bc9a78bf59bbffeb0b3028
0x651 DUP9
0x652 CALLVALUE
0x653 DUP5
0x654 PUSH1 0x40
0x656 MLOAD
0x657 DUP1
0x658 DUP5
0x659 DUP2
0x65a MSTORE
0x65b PUSH1 0x20
0x65d ADD
0x65e DUP4
0x65f DUP2
0x660 MSTORE
0x661 PUSH1 0x20
0x663 ADD
0x664 DUP3
0x665 DUP2
0x666 MSTORE
0x667 PUSH1 0x20
0x669 ADD
0x66a SWAP4
0x66b POP
0x66c POP
0x66d POP
0x66e POP
0x66f PUSH1 0x40
0x671 MLOAD
0x672 DUP1
0x673 SWAP2
0x674 SUB
0x675 SWAP1
0x676 LOG2
0x677 POP
0x678 POP
0x679 POP
0x67a POP
0x67b POP
0x67c POP
0x67d POP
0x67e JUMP
---
0x625: JUMPDEST 
0x626: V655 = CALLER
0x627: V656 = 0x1
0x629: V657 = 0xa0
0x62b: V658 = 0x2
0x62d: V659 = EXP 0x2 0xa0
0x62e: V660 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62f: V661 = AND 0xffffffffffffffffffffffffffffffffffffffff V655
0x630: V662 = 0xd7637a5688f07535ecc8e0d6b5b99681e4f5d57fb5bc9a78bf59bbffeb0b3028
0x652: V663 = CALLVALUE
0x654: V664 = 0x40
0x656: V665 = M[0x40]
0x65a: M[V665] = S6
0x65b: V666 = 0x20
0x65d: V667 = ADD 0x20 V665
0x660: M[V667] = V663
0x661: V668 = 0x20
0x663: V669 = ADD 0x20 V667
0x666: M[V669] = V1385
0x667: V670 = 0x20
0x669: V671 = ADD 0x20 V669
0x66f: V672 = 0x40
0x671: V673 = M[0x40]
0x674: V674 = SUB V671 V673
0x676: LOG V673 V674 0xd7637a5688f07535ecc8e0d6b5b99681e4f5d57fb5bc9a78bf59bbffeb0b3028 V661
0x67e: JUMP S7
---
Entry stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1385]
Stack pops: 8
Stack additions: []
Exit stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8]

================================

Block 0x67f
[0x67f:0x698]
---
Predecessors: [0x12a]
Successors: [0x699, 0x69d]
---
0x67f JUMPDEST
0x680 PUSH1 0x0
0x682 DUP1
0x683 SLOAD
0x684 DUP2
0x685 SWAP1
0x686 CALLER
0x687 PUSH1 0x1
0x689 PUSH1 0xa0
0x68b PUSH1 0x2
0x68d EXP
0x68e SUB
0x68f SWAP1
0x690 DUP2
0x691 AND
0x692 SWAP2
0x693 AND
0x694 EQ
0x695 PUSH2 0x69d
0x698 JUMPI
---
0x67f: JUMPDEST 
0x680: V675 = 0x0
0x683: V676 = S[0x0]
0x686: V677 = CALLER
0x687: V678 = 0x1
0x689: V679 = 0xa0
0x68b: V680 = 0x2
0x68d: V681 = EXP 0x2 0xa0
0x68e: V682 = SUB 0x10000000000000000000000000000000000000000 0x1
0x691: V683 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0x693: V684 = AND V676 0xffffffffffffffffffffffffffffffffffffffff
0x694: V685 = EQ V684 V683
0x695: V686 = 0x69d
0x698: JUMPI 0x69d V685
---
Entry stack: [V13, 0xd1, V111]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V13, 0xd1, V111, 0x0, 0x0]

================================

Block 0x699
[0x699:0x69c]
---
Predecessors: [0x67f]
Successors: []
---
0x699 PUSH1 0x0
0x69b DUP1
0x69c REVERT
---
0x699: V687 = 0x0
0x69c: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V111, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V111, 0x0, 0x0]

================================

Block 0x69d
[0x69d:0x6e9]
---
Predecessors: [0x67f]
Successors: [0x6ea, 0x6ee]
---
0x69d JUMPDEST
0x69e DUP3
0x69f SWAP2
0x6a0 POP
0x6a1 DUP2
0x6a2 PUSH1 0x1
0x6a4 PUSH1 0xa0
0x6a6 PUSH1 0x2
0x6a8 EXP
0x6a9 SUB
0x6aa AND
0x6ab PUSH4 0x70a08231
0x6b0 ADDRESS
0x6b1 PUSH1 0x40
0x6b3 MLOAD
0x6b4 PUSH1 0xe0
0x6b6 PUSH1 0x2
0x6b8 EXP
0x6b9 PUSH4 0xffffffff
0x6be DUP5
0x6bf AND
0x6c0 MUL
0x6c1 DUP2
0x6c2 MSTORE
0x6c3 PUSH1 0x1
0x6c5 PUSH1 0xa0
0x6c7 PUSH1 0x2
0x6c9 EXP
0x6ca SUB
0x6cb SWAP1
0x6cc SWAP2
0x6cd AND
0x6ce PUSH1 0x4
0x6d0 DUP3
0x6d1 ADD
0x6d2 MSTORE
0x6d3 PUSH1 0x24
0x6d5 ADD
0x6d6 PUSH1 0x20
0x6d8 PUSH1 0x40
0x6da MLOAD
0x6db DUP1
0x6dc DUP4
0x6dd SUB
0x6de DUP2
0x6df PUSH1 0x0
0x6e1 DUP8
0x6e2 DUP1
0x6e3 EXTCODESIZE
0x6e4 ISZERO
0x6e5 ISZERO
0x6e6 PUSH2 0x6ee
0x6e9 JUMPI
---
0x69d: JUMPDEST 
0x6a2: V688 = 0x1
0x6a4: V689 = 0xa0
0x6a6: V690 = 0x2
0x6a8: V691 = EXP 0x2 0xa0
0x6a9: V692 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6aa: V693 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x6ab: V694 = 0x70a08231
0x6b0: V695 = ADDRESS
0x6b1: V696 = 0x40
0x6b3: V697 = M[0x40]
0x6b4: V698 = 0xe0
0x6b6: V699 = 0x2
0x6b8: V700 = EXP 0x2 0xe0
0x6b9: V701 = 0xffffffff
0x6bf: V702 = AND 0x70a08231 0xffffffff
0x6c0: V703 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x6c2: M[V697] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x6c3: V704 = 0x1
0x6c5: V705 = 0xa0
0x6c7: V706 = 0x2
0x6c9: V707 = EXP 0x2 0xa0
0x6ca: V708 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cd: V709 = AND V695 0xffffffffffffffffffffffffffffffffffffffff
0x6ce: V710 = 0x4
0x6d1: V711 = ADD V697 0x4
0x6d2: M[V711] = V709
0x6d3: V712 = 0x24
0x6d5: V713 = ADD 0x24 V697
0x6d6: V714 = 0x20
0x6d8: V715 = 0x40
0x6da: V716 = M[0x40]
0x6dd: V717 = SUB V713 V716
0x6df: V718 = 0x0
0x6e3: V719 = EXTCODESIZE V693
0x6e4: V720 = ISZERO V719
0x6e5: V721 = ISZERO V720
0x6e6: V722 = 0x6ee
0x6e9: JUMPI 0x6ee V721
---
Entry stack: [V13, 0xd1, V111, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S2, S0, V693, 0x70a08231, V713, 0x20, V716, V717, V716, 0x0, V693]
Exit stack: [V13, 0xd1, V111, V111, 0x0, V693, 0x70a08231, V713, 0x20, V716, V717, V716, 0x0, V693]

================================

Block 0x6ea
[0x6ea:0x6ed]
---
Predecessors: [0x69d]
Successors: []
---
0x6ea PUSH1 0x0
0x6ec DUP1
0x6ed REVERT
---
0x6ea: V723 = 0x0
0x6ed: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V111, V111, 0x0, V693, 0x70a08231, V713, 0x20, V716, V717, V716, 0x0, V693]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V111, V111, 0x0, V693, 0x70a08231, V713, 0x20, V716, V717, V716, 0x0, V693]

================================

Block 0x6ee
[0x6ee:0x6f6]
---
Predecessors: [0x69d]
Successors: [0x6f7, 0x6fb]
---
0x6ee JUMPDEST
0x6ef GAS
0x6f0 CALL
0x6f1 ISZERO
0x6f2 ISZERO
0x6f3 PUSH2 0x6fb
0x6f6 JUMPI
---
0x6ee: JUMPDEST 
0x6ef: V724 = GAS
0x6f0: V725 = CALL V724 V693 0x0 V716 V717 V716 0x20
0x6f1: V726 = ISZERO V725
0x6f2: V727 = ISZERO V726
0x6f3: V728 = 0x6fb
0x6f6: JUMPI 0x6fb V727
---
Entry stack: [V13, 0xd1, V111, V111, 0x0, V693, 0x70a08231, V713, 0x20, V716, V717, V716, 0x0, V693]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xd1, V111, V111, 0x0, V693, 0x70a08231, V713]

================================

Block 0x6f7
[0x6f7:0x6fa]
---
Predecessors: [0x6ee]
Successors: []
---
0x6f7 PUSH1 0x0
0x6f9 DUP1
0x6fa REVERT
---
0x6f7: V729 = 0x0
0x6fa: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V111, V111, 0x0, V693, 0x70a08231, V713]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V111, V111, 0x0, V693, 0x70a08231, V713]

================================

Block 0x6fb
[0x6fb:0x75c]
---
Predecessors: [0x6ee]
Successors: [0x75d, 0x761]
---
0x6fb JUMPDEST
0x6fc POP
0x6fd POP
0x6fe POP
0x6ff PUSH1 0x40
0x701 MLOAD
0x702 DUP1
0x703 MLOAD
0x704 PUSH1 0x0
0x706 SLOAD
0x707 SWAP1
0x708 SWAP3
0x709 POP
0x70a PUSH1 0x1
0x70c PUSH1 0xa0
0x70e PUSH1 0x2
0x710 EXP
0x711 SUB
0x712 DUP1
0x713 DUP6
0x714 AND
0x715 SWAP3
0x716 POP
0x717 PUSH4 0xa9059cbb
0x71c SWAP2
0x71d AND
0x71e DUP4
0x71f PUSH1 0x40
0x721 MLOAD
0x722 PUSH1 0xe0
0x724 PUSH1 0x2
0x726 EXP
0x727 PUSH4 0xffffffff
0x72c DUP6
0x72d AND
0x72e MUL
0x72f DUP2
0x730 MSTORE
0x731 PUSH1 0x1
0x733 PUSH1 0xa0
0x735 PUSH1 0x2
0x737 EXP
0x738 SUB
0x739 SWAP1
0x73a SWAP3
0x73b AND
0x73c PUSH1 0x4
0x73e DUP4
0x73f ADD
0x740 MSTORE
0x741 PUSH1 0x24
0x743 DUP3
0x744 ADD
0x745 MSTORE
0x746 PUSH1 0x44
0x748 ADD
0x749 PUSH1 0x20
0x74b PUSH1 0x40
0x74d MLOAD
0x74e DUP1
0x74f DUP4
0x750 SUB
0x751 DUP2
0x752 PUSH1 0x0
0x754 DUP8
0x755 DUP1
0x756 EXTCODESIZE
0x757 ISZERO
0x758 ISZERO
0x759 PUSH2 0x761
0x75c JUMPI
---
0x6fb: JUMPDEST 
0x6ff: V730 = 0x40
0x701: V731 = M[0x40]
0x703: V732 = M[V731]
0x704: V733 = 0x0
0x706: V734 = S[0x0]
0x70a: V735 = 0x1
0x70c: V736 = 0xa0
0x70e: V737 = 0x2
0x710: V738 = EXP 0x2 0xa0
0x711: V739 = SUB 0x10000000000000000000000000000000000000000 0x1
0x714: V740 = AND V111 0xffffffffffffffffffffffffffffffffffffffff
0x717: V741 = 0xa9059cbb
0x71d: V742 = AND V734 0xffffffffffffffffffffffffffffffffffffffff
0x71f: V743 = 0x40
0x721: V744 = M[0x40]
0x722: V745 = 0xe0
0x724: V746 = 0x2
0x726: V747 = EXP 0x2 0xe0
0x727: V748 = 0xffffffff
0x72d: V749 = AND 0xa9059cbb 0xffffffff
0x72e: V750 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x730: M[V744] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x731: V751 = 0x1
0x733: V752 = 0xa0
0x735: V753 = 0x2
0x737: V754 = EXP 0x2 0xa0
0x738: V755 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73b: V756 = AND V742 0xffffffffffffffffffffffffffffffffffffffff
0x73c: V757 = 0x4
0x73f: V758 = ADD V744 0x4
0x740: M[V758] = V756
0x741: V759 = 0x24
0x744: V760 = ADD V744 0x24
0x745: M[V760] = V732
0x746: V761 = 0x44
0x748: V762 = ADD 0x44 V744
0x749: V763 = 0x20
0x74b: V764 = 0x40
0x74d: V765 = M[0x40]
0x750: V766 = SUB V762 V765
0x752: V767 = 0x0
0x756: V768 = EXTCODESIZE V740
0x757: V769 = ISZERO V768
0x758: V770 = ISZERO V769
0x759: V771 = 0x761
0x75c: JUMPI 0x761 V770
---
Entry stack: [V13, 0xd1, V111, V111, 0x0, V693, 0x70a08231, V713]
Stack pops: 5
Stack additions: [S4, V732, V740, 0xa9059cbb, V762, 0x20, V765, V766, V765, 0x0, V740]
Exit stack: [V13, 0xd1, V111, V111, V732, V740, 0xa9059cbb, V762, 0x20, V765, V766, V765, 0x0, V740]

================================

Block 0x75d
[0x75d:0x760]
---
Predecessors: [0x6fb]
Successors: []
---
0x75d PUSH1 0x0
0x75f DUP1
0x760 REVERT
---
0x75d: V772 = 0x0
0x760: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V111, V111, V732, V740, 0xa9059cbb, V762, 0x20, V765, V766, V765, 0x0, V740]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V111, V111, V732, V740, 0xa9059cbb, V762, 0x20, V765, V766, V765, 0x0, V740]

================================

Block 0x761
[0x761:0x769]
---
Predecessors: [0x6fb]
Successors: [0x76a, 0x76e]
---
0x761 JUMPDEST
0x762 GAS
0x763 CALL
0x764 ISZERO
0x765 ISZERO
0x766 PUSH2 0x76e
0x769 JUMPI
---
0x761: JUMPDEST 
0x762: V773 = GAS
0x763: V774 = CALL V773 V740 0x0 V765 V766 V765 0x20
0x764: V775 = ISZERO V774
0x765: V776 = ISZERO V775
0x766: V777 = 0x76e
0x769: JUMPI 0x76e V776
---
Entry stack: [V13, 0xd1, V111, V111, V732, V740, 0xa9059cbb, V762, 0x20, V765, V766, V765, 0x0, V740]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xd1, V111, V111, V732, V740, 0xa9059cbb, V762]

================================

Block 0x76a
[0x76a:0x76d]
---
Predecessors: [0x761]
Successors: []
---
0x76a PUSH1 0x0
0x76c DUP1
0x76d REVERT
---
0x76a: V778 = 0x0
0x76d: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V111, V111, V732, V740, 0xa9059cbb, V762]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V111, V111, V732, V740, 0xa9059cbb, V762]

================================

Block 0x76e
[0x76e:0x77e]
---
Predecessors: [0x761]
Successors: [0x77f, 0x780]
---
0x76e JUMPDEST
0x76f POP
0x770 POP
0x771 POP
0x772 PUSH1 0x40
0x774 MLOAD
0x775 DUP1
0x776 MLOAD
0x777 SWAP1
0x778 POP
0x779 ISZERO
0x77a ISZERO
0x77b PUSH2 0x780
0x77e JUMPI
---
0x76e: JUMPDEST 
0x772: V779 = 0x40
0x774: V780 = M[0x40]
0x776: V781 = M[V780]
0x779: V782 = ISZERO V781
0x77a: V783 = ISZERO V782
0x77b: V784 = 0x780
0x77e: JUMPI 0x780 V783
---
Entry stack: [V13, 0xd1, V111, V111, V732, V740, 0xa9059cbb, V762]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0xd1, V111, V111, V732]

================================

Block 0x77f
[0x77f:0x77f]
---
Predecessors: [0x76e]
Successors: []
---
0x77f INVALID
---
0x77f: INVALID 
---
Entry stack: [V13, 0xd1, V111, V111, V732]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V111, V111, V732]

================================

Block 0x780
[0x780:0x784]
---
Predecessors: [0x76e]
Successors: [0xd1]
---
0x780 JUMPDEST
0x781 POP
0x782 POP
0x783 POP
0x784 JUMP
---
0x780: JUMPDEST 
0x784: JUMP 0xd1
---
Entry stack: [V13, 0xd1, V111, V111, V732]
Stack pops: 4
Stack additions: []
Exit stack: [V13]

================================

Block 0x785
[0x785:0x792]
---
Predecessors: [0x149, 0xd12]
Successors: [0x793, 0x797]
---
0x785 JUMPDEST
0x786 PUSH1 0x0
0x788 DUP1
0x789 DUP1
0x78a DUP1
0x78b TIMESTAMP
0x78c DUP9
0x78d LT
0x78e ISZERO
0x78f PUSH2 0x797
0x792 JUMPI
---
0x785: JUMPDEST 
0x786: V785 = 0x0
0x78b: V786 = TIMESTAMP
0x78d: V787 = LT S3 V786
0x78e: V788 = ISZERO V787
0x78f: V789 = 0x797
0x792: JUMPI 0x797 V788
---
Entry stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S9, {0xd1, 0xd22}, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S9, {0xd1, 0xd22}, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x793
[0x793:0x796]
---
Predecessors: [0x785]
Successors: []
---
0x793 PUSH1 0x0
0x795 DUP1
0x796 REVERT
---
0x793: V790 = 0x0
0x796: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S13, {0xd1, 0xd22}, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S13, {0xd1, 0xd22}, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x797
[0x797:0x83d]
---
Predecessors: [0x785]
Successors: [0x83e, 0x842]
---
0x797 JUMPDEST
0x798 PUSH1 0x1
0x79a DUP13
0x79b DUP13
0x79c DUP13
0x79d DUP13
0x79e DUP13
0x79f PUSH1 0x40
0x7a1 MLOAD
0x7a2 PUSH13 0x1000000000000000000000000
0x7b0 PUSH1 0x1
0x7b2 PUSH1 0xa0
0x7b4 PUSH1 0x2
0x7b6 EXP
0x7b7 SUB
0x7b8 SWAP7
0x7b9 DUP8
0x7ba AND
0x7bb DUP2
0x7bc MUL
0x7bd DUP3
0x7be MSTORE
0x7bf PUSH1 0x14
0x7c1 DUP3
0x7c2 ADD
0x7c3 SWAP6
0x7c4 SWAP1
0x7c5 SWAP6
0x7c6 MSTORE
0x7c7 SWAP3
0x7c8 SWAP1
0x7c9 SWAP5
0x7ca AND
0x7cb SWAP1
0x7cc SWAP3
0x7cd MUL
0x7ce PUSH1 0x34
0x7d0 DUP3
0x7d1 ADD
0x7d2 MSTORE
0x7d3 PUSH1 0x48
0x7d5 DUP2
0x7d6 ADD
0x7d7 SWAP2
0x7d8 SWAP1
0x7d9 SWAP2
0x7da MSTORE
0x7db PUSH1 0x68
0x7dd DUP2
0x7de ADD
0x7df SWAP2
0x7e0 SWAP1
0x7e1 SWAP2
0x7e2 MSTORE
0x7e3 PUSH1 0x88
0x7e5 ADD
0x7e6 PUSH1 0x40
0x7e8 MLOAD
0x7e9 DUP1
0x7ea SWAP2
0x7eb SUB
0x7ec SWAP1
0x7ed SHA3
0x7ee DUP9
0x7ef DUP9
0x7f0 DUP9
0x7f1 PUSH1 0x40
0x7f3 MLOAD
0x7f4 PUSH1 0x0
0x7f6 DUP2
0x7f7 MSTORE
0x7f8 PUSH1 0x20
0x7fa ADD
0x7fb PUSH1 0x40
0x7fd MSTORE
0x7fe PUSH1 0x40
0x800 MLOAD
0x801 SWAP4
0x802 DUP5
0x803 MSTORE
0x804 PUSH1 0xff
0x806 SWAP1
0x807 SWAP3
0x808 AND
0x809 PUSH1 0x20
0x80b DUP1
0x80c DUP6
0x80d ADD
0x80e SWAP2
0x80f SWAP1
0x810 SWAP2
0x811 MSTORE
0x812 PUSH1 0x40
0x814 DUP1
0x815 DUP6
0x816 ADD
0x817 SWAP3
0x818 SWAP1
0x819 SWAP3
0x81a MSTORE
0x81b PUSH1 0x60
0x81d DUP5
0x81e ADD
0x81f SWAP3
0x820 SWAP1
0x821 SWAP3
0x822 MSTORE
0x823 PUSH1 0x80
0x825 SWAP1
0x826 SWAP3
0x827 ADD
0x828 SWAP2
0x829 MLOAD
0x82a PUSH1 0x20
0x82c DUP2
0x82d SUB
0x82e SWAP1
0x82f DUP1
0x830 DUP5
0x831 SUB
0x832 SWAP1
0x833 PUSH1 0x0
0x835 DUP7
0x836 GAS
0x837 CALL
0x838 ISZERO
0x839 ISZERO
0x83a PUSH2 0x842
0x83d JUMPI
---
0x797: JUMPDEST 
0x798: V791 = 0x1
0x79f: V792 = 0x40
0x7a1: V793 = M[0x40]
0x7a2: V794 = 0x1000000000000000000000000
0x7b0: V795 = 0x1
0x7b2: V796 = 0xa0
0x7b4: V797 = 0x2
0x7b6: V798 = EXP 0x2 0xa0
0x7b7: V799 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ba: V800 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x7bc: V801 = MUL 0x1000000000000000000000000 V800
0x7be: M[V793] = V801
0x7bf: V802 = 0x14
0x7c2: V803 = ADD V793 0x14
0x7c6: M[V803] = S10
0x7ca: V804 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x7cd: V805 = MUL 0x1000000000000000000000000 V804
0x7ce: V806 = 0x34
0x7d1: V807 = ADD V793 0x34
0x7d2: M[V807] = V805
0x7d3: V808 = 0x48
0x7d6: V809 = ADD V793 0x48
0x7da: M[V809] = S8
0x7db: V810 = 0x68
0x7de: V811 = ADD V793 0x68
0x7e2: M[V811] = S7
0x7e3: V812 = 0x88
0x7e5: V813 = ADD 0x88 V793
0x7e6: V814 = 0x40
0x7e8: V815 = M[0x40]
0x7eb: V816 = SUB V813 V815
0x7ed: V817 = SHA3 V815 V816
0x7f1: V818 = 0x40
0x7f3: V819 = M[0x40]
0x7f4: V820 = 0x0
0x7f7: M[V819] = 0x0
0x7f8: V821 = 0x20
0x7fa: V822 = ADD 0x20 V819
0x7fb: V823 = 0x40
0x7fd: M[0x40] = V822
0x7fe: V824 = 0x40
0x800: V825 = M[0x40]
0x803: M[V825] = V817
0x804: V826 = 0xff
0x808: V827 = AND S6 0xff
0x809: V828 = 0x20
0x80d: V829 = ADD V825 0x20
0x811: M[V829] = V827
0x812: V830 = 0x40
0x816: V831 = ADD V825 0x40
0x81a: M[V831] = S5
0x81b: V832 = 0x60
0x81e: V833 = ADD V825 0x60
0x822: M[V833] = S4
0x823: V834 = 0x80
0x827: V835 = ADD V825 0x80
0x829: V836 = M[0x40]
0x82a: V837 = 0x20
0x82d: V838 = SUB V836 0x20
0x831: V839 = SUB V835 V836
0x833: V840 = 0x0
0x836: V841 = GAS
0x837: V842 = CALL V841 0x1 0x0 V836 V839 V838 0x20
0x838: V843 = ISZERO V842
0x839: V844 = ISZERO V843
0x83a: V845 = 0x842
0x83d: JUMPI 0x842 V844
---
Entry stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S13, {0xd1, 0xd22}, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, 0x0, 0x0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x1, V835]
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S13, {0xd1, 0xd22}, S11, S10, S9, S8, S7, S6, S5, S4, 0x0, 0x0, 0x0, 0x0, 0x1, V835]

================================

Block 0x83e
[0x83e:0x841]
---
Predecessors: [0x797]
Successors: []
---
0x83e PUSH1 0x0
0x840 DUP1
0x841 REVERT
---
0x83e: V846 = 0x0
0x841: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S15, {0xd1, 0xd22}, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0x0, 0x0, 0x0, 0x1, V835]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S15, {0xd1, 0xd22}, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0x0, 0x0, 0x0, 0x1, V835]

================================

Block 0x842
[0x842:0x863]
---
Predecessors: [0x797]
Successors: [0x864, 0x868]
---
0x842 JUMPDEST
0x843 POP
0x844 POP
0x845 PUSH1 0x20
0x847 PUSH1 0x40
0x849 MLOAD
0x84a SUB
0x84b MLOAD
0x84c PUSH1 0x3
0x84e SLOAD
0x84f SWAP1
0x850 SWAP5
0x851 POP
0x852 PUSH1 0x1
0x854 PUSH1 0xa0
0x856 PUSH1 0x2
0x858 EXP
0x859 SUB
0x85a DUP1
0x85b DUP7
0x85c AND
0x85d SWAP2
0x85e AND
0x85f EQ
0x860 PUSH2 0x868
0x863 JUMPI
---
0x842: JUMPDEST 
0x845: V847 = 0x20
0x847: V848 = 0x40
0x849: V849 = M[0x40]
0x84a: V850 = SUB V849 0x20
0x84b: V851 = M[V850]
0x84c: V852 = 0x3
0x84e: V853 = S[0x3]
0x852: V854 = 0x1
0x854: V855 = 0xa0
0x856: V856 = 0x2
0x858: V857 = EXP 0x2 0xa0
0x859: V858 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85c: V859 = AND V851 0xffffffffffffffffffffffffffffffffffffffff
0x85e: V860 = AND V853 0xffffffffffffffffffffffffffffffffffffffff
0x85f: V861 = EQ V860 V859
0x860: V862 = 0x868
0x863: JUMPI 0x868 V861
---
Entry stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S15, {0xd1, 0xd22}, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, 0x0, 0x0, 0x0, 0x1, V835]
Stack pops: 6
Stack additions: [V851, S4, S3, S2]
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S15, {0xd1, 0xd22}, S13, S12, S11, S10, S9, S8, S7, S6, V851, 0x0, 0x0, 0x0]

================================

Block 0x864
[0x864:0x867]
---
Predecessors: [0x842]
Successors: []
---
0x864 PUSH1 0x0
0x866 DUP1
0x867 REVERT
---
0x864: V863 = 0x0
0x867: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S13, {0xd1, 0xd22}, S11, S10, S9, S8, S7, S6, S5, S4, V851, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S13, {0xd1, 0xd22}, S11, S10, S9, S8, S7, S6, S5, S4, V851, 0x0, 0x0, 0x0]

================================

Block 0x868
[0x868:0x872]
---
Predecessors: [0x842]
Successors: [0x873, 0x877]
---
0x868 JUMPDEST
0x869 PUSH1 0x4
0x86b SLOAD
0x86c DUP10
0x86d LT
0x86e ISZERO
0x86f PUSH2 0x877
0x872 JUMPI
---
0x868: JUMPDEST 
0x869: V864 = 0x4
0x86b: V865 = S[0x4]
0x86d: V866 = LT S8 V865
0x86e: V867 = ISZERO V866
0x86f: V868 = 0x877
0x872: JUMPI 0x877 V867
---
Entry stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S13, {0xd1, 0xd22}, S11, S10, S9, S8, S7, S6, S5, S4, V851, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S13, {0xd1, 0xd22}, S11, S10, S9, S8, S7, S6, S5, S4, V851, 0x0, 0x0, 0x0]

================================

Block 0x873
[0x873:0x876]
---
Predecessors: [0x868]
Successors: []
---
0x873 PUSH1 0x0
0x875 DUP1
0x876 REVERT
---
0x873: V869 = 0x0
0x876: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S13, {0xd1, 0xd22}, S11, S10, S9, S8, S7, S6, S5, S4, V851, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S13, {0xd1, 0xd22}, S11, S10, S9, S8, S7, S6, S5, S4, V851, 0x0, 0x0, 0x0]

================================

Block 0x877
[0x877:0x8b2]
---
Predecessors: [0x868]
Successors: [0x8b3, 0x8b7]
---
0x877 JUMPDEST
0x878 DUP10
0x879 SWAP3
0x87a POP
0x87b DUP3
0x87c PUSH1 0x1
0x87e PUSH1 0xa0
0x880 PUSH1 0x2
0x882 EXP
0x883 SUB
0x884 AND
0x885 PUSH4 0x313ce567
0x88a PUSH1 0x40
0x88c MLOAD
0x88d DUP2
0x88e PUSH4 0xffffffff
0x893 AND
0x894 PUSH1 0xe0
0x896 PUSH1 0x2
0x898 EXP
0x899 MUL
0x89a DUP2
0x89b MSTORE
0x89c PUSH1 0x4
0x89e ADD
0x89f PUSH1 0x20
0x8a1 PUSH1 0x40
0x8a3 MLOAD
0x8a4 DUP1
0x8a5 DUP4
0x8a6 SUB
0x8a7 DUP2
0x8a8 PUSH1 0x0
0x8aa DUP8
0x8ab DUP1
0x8ac EXTCODESIZE
0x8ad ISZERO
0x8ae ISZERO
0x8af PUSH2 0x8b7
0x8b2 JUMPI
---
0x877: JUMPDEST 
0x87c: V870 = 0x1
0x87e: V871 = 0xa0
0x880: V872 = 0x2
0x882: V873 = EXP 0x2 0xa0
0x883: V874 = SUB 0x10000000000000000000000000000000000000000 0x1
0x884: V875 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0x885: V876 = 0x313ce567
0x88a: V877 = 0x40
0x88c: V878 = M[0x40]
0x88e: V879 = 0xffffffff
0x893: V880 = AND 0xffffffff 0x313ce567
0x894: V881 = 0xe0
0x896: V882 = 0x2
0x898: V883 = EXP 0x2 0xe0
0x899: V884 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x313ce567
0x89b: M[V878] = 0x313ce56700000000000000000000000000000000000000000000000000000000
0x89c: V885 = 0x4
0x89e: V886 = ADD 0x4 V878
0x89f: V887 = 0x20
0x8a1: V888 = 0x40
0x8a3: V889 = M[0x40]
0x8a6: V890 = SUB V886 V889
0x8a8: V891 = 0x0
0x8ac: V892 = EXTCODESIZE V875
0x8ad: V893 = ISZERO V892
0x8ae: V894 = ISZERO V893
0x8af: V895 = 0x8b7
0x8b2: JUMPI 0x8b7 V894
---
Entry stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S13, {0xd1, 0xd22}, S11, S10, S9, S8, S7, S6, S5, S4, V851, 0x0, 0x0, 0x0]
Stack pops: 10
Stack additions: [S9, S8, S7, S6, S5, S4, S3, S9, S1, S0, V875, 0x313ce567, V886, 0x20, V889, V890, V889, 0x0, V875]
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S13, {0xd1, 0xd22}, S11, S10, S9, S8, S7, S6, S5, S4, V851, S9, 0x0, 0x0, V875, 0x313ce567, V886, 0x20, V889, V890, V889, 0x0, V875]

================================

Block 0x8b3
[0x8b3:0x8b6]
---
Predecessors: [0x877]
Successors: []
---
0x8b3 PUSH1 0x0
0x8b5 DUP1
0x8b6 REVERT
---
0x8b3: V896 = 0x0
0x8b6: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S22, {0xd1, 0xd22}, S20, S19, S18, S17, S16, S15, S14, S13, V851, S11, 0x0, 0x0, V875, 0x313ce567, V886, 0x20, V889, V890, V889, 0x0, V875]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S22, {0xd1, 0xd22}, S20, S19, S18, S17, S16, S15, S14, S13, V851, S11, 0x0, 0x0, V875, 0x313ce567, V886, 0x20, V889, V890, V889, 0x0, V875]

================================

Block 0x8b7
[0x8b7:0x8bf]
---
Predecessors: [0x877]
Successors: [0x8c0, 0x8c4]
---
0x8b7 JUMPDEST
0x8b8 GAS
0x8b9 CALL
0x8ba ISZERO
0x8bb ISZERO
0x8bc PUSH2 0x8c4
0x8bf JUMPI
---
0x8b7: JUMPDEST 
0x8b8: V897 = GAS
0x8b9: V898 = CALL V897 V875 0x0 V889 V890 V889 0x20
0x8ba: V899 = ISZERO V898
0x8bb: V900 = ISZERO V899
0x8bc: V901 = 0x8c4
0x8bf: JUMPI 0x8c4 V900
---
Entry stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S22, {0xd1, 0xd22}, S20, S19, S18, S17, S16, S15, S14, S13, V851, S11, 0x0, 0x0, V875, 0x313ce567, V886, 0x20, V889, V890, V889, 0x0, V875]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S22, {0xd1, 0xd22}, S20, S19, S18, S17, S16, S15, S14, S13, V851, S11, 0x0, 0x0, V875, 0x313ce567, V886]

================================

Block 0x8c0
[0x8c0:0x8c3]
---
Predecessors: [0x8b7]
Successors: []
---
0x8c0 PUSH1 0x0
0x8c2 DUP1
0x8c3 REVERT
---
0x8c0: V902 = 0x0
0x8c3: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S16, {0xd1, 0xd22}, S14, S13, S12, S11, S10, S9, S8, S7, V851, S5, 0x0, 0x0, V875, 0x313ce567, V886]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S16, {0xd1, 0xd22}, S14, S13, S12, S11, S10, S9, S8, S7, V851, S5, 0x0, 0x0, V875, 0x313ce567, V886]

================================

Block 0x8c4
[0x8c4:0x8da]
---
Predecessors: [0x8b7]
Successors: [0x8db, 0x908]
---
0x8c4 JUMPDEST
0x8c5 POP
0x8c6 POP
0x8c7 POP
0x8c8 PUSH1 0x40
0x8ca MLOAD
0x8cb DUP1
0x8cc MLOAD
0x8cd SWAP2
0x8ce POP
0x8cf POP
0x8d0 PUSH1 0x12
0x8d2 PUSH1 0xff
0x8d4 DUP3
0x8d5 AND
0x8d6 GT
0x8d7 PUSH2 0x908
0x8da JUMPI
---
0x8c4: JUMPDEST 
0x8c8: V903 = 0x40
0x8ca: V904 = M[0x40]
0x8cc: V905 = M[V904]
0x8d0: V906 = 0x12
0x8d2: V907 = 0xff
0x8d5: V908 = AND V905 0xff
0x8d6: V909 = GT V908 0x12
0x8d7: V910 = 0x908
0x8da: JUMPI 0x908 V909
---
Entry stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S16, {0xd1, 0xd22}, S14, S13, S12, S11, S10, S9, S8, S7, V851, S5, 0x0, 0x0, V875, 0x313ce567, V886]
Stack pops: 4
Stack additions: [V905]
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S16, {0xd1, 0xd22}, S14, S13, S12, S11, S10, S9, S8, S7, V851, S5, 0x0, V905]

================================

Block 0x8db
[0x8db:0x8e9]
---
Predecessors: [0x8c4]
Successors: [0xe25]
---
0x8db PUSH2 0x901
0x8de PUSH2 0x8f2
0x8e1 PUSH2 0x8ea
0x8e4 DUP12
0x8e5 DUP15
0x8e6 PUSH2 0xe25
0x8e9 JUMP
---
0x8db: V911 = 0x901
0x8de: V912 = 0x8f2
0x8e1: V913 = 0x8ea
0x8e6: V914 = 0xe25
0x8e9: JUMP 0xe25
---
Entry stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S13, {0xd1, 0xd22}, S11, S10, S9, S8, S7, S6, S5, S4, V851, S2, 0x0, V905]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x901, 0x8f2, 0x8ea, S8, S10]
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S13, {0xd1, 0xd22}, S11, S10, S9, S8, S7, S6, S5, S4, V851, S2, 0x0, V905, 0x901, 0x8f2, 0x8ea, S8, S10]

================================

Block 0x8ea
[0x8ea:0x8f1]
---
Predecessors: [0xe1d, 0xe54]
Successors: [0xe10]
---
0x8ea JUMPDEST
0x8eb PUSH2 0x3e8
0x8ee PUSH2 0xe10
0x8f1 JUMP
---
0x8ea: JUMPDEST 
0x8eb: V915 = 0x3e8
0x8ee: V916 = 0xe10
0x8f1: JUMP 0xe10
---
Entry stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x3e8]
Exit stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x3e8]

================================

Block 0x8f2
[0x8f2:0x900]
---
Predecessors: [0xe1d, 0xe54]
Successors: [0xe10]
---
0x8f2 JUMPDEST
0x8f3 DUP3
0x8f4 PUSH1 0x12
0x8f6 SUB
0x8f7 PUSH1 0xff
0x8f9 AND
0x8fa PUSH1 0xa
0x8fc EXP
0x8fd PUSH2 0xe10
0x900 JUMP
---
0x8f2: JUMPDEST 
0x8f4: V917 = 0x12
0x8f6: V918 = SUB 0x12 S2
0x8f7: V919 = 0xff
0x8f9: V920 = AND 0xff V918
0x8fa: V921 = 0xa
0x8fc: V922 = EXP 0xa V920
0x8fd: V923 = 0xe10
0x900: JUMP 0xe10
---
Entry stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V922]
Exit stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V922]

================================

Block 0x901
[0x901:0x907]
---
Predecessors: [0xe1d, 0xe54]
Successors: [0x92a]
---
0x901 JUMPDEST
0x902 SWAP2
0x903 POP
0x904 PUSH2 0x92a
0x907 JUMP
---
0x901: JUMPDEST 
0x904: V924 = 0x92a
0x907: JUMP 0x92a
---
Entry stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, S1]

================================

Block 0x908
[0x908:0x917]
---
Predecessors: [0x8c4]
Successors: [0xe25]
---
0x908 JUMPDEST
0x909 PUSH2 0x927
0x90c PUSH2 0x8ea
0x90f PUSH2 0x918
0x912 DUP12
0x913 DUP15
0x914 PUSH2 0xe25
0x917 JUMP
---
0x908: JUMPDEST 
0x909: V925 = 0x927
0x90c: V926 = 0x8ea
0x90f: V927 = 0x918
0x914: V928 = 0xe25
0x917: JUMP 0xe25
---
Entry stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S13, {0xd1, 0xd22}, S11, S10, S9, S8, S7, S6, S5, S4, V851, S2, 0x0, V905]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x927, 0x8ea, 0x918, S8, S10]
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, S13, {0xd1, 0xd22}, S11, S10, S9, S8, S7, S6, S5, S4, V851, S2, 0x0, V905, 0x927, 0x8ea, 0x918, S8, S10]

================================

Block 0x918
[0x918:0x926]
---
Predecessors: [0xe54]
Successors: [0xe25]
---
0x918 JUMPDEST
0x919 PUSH1 0x12
0x91b DUP5
0x91c SUB
0x91d PUSH1 0xff
0x91f AND
0x920 PUSH1 0xa
0x922 EXP
0x923 PUSH2 0xe25
0x926 JUMP
---
0x918: JUMPDEST 
0x919: V929 = 0x12
0x91c: V930 = SUB S3 0x12
0x91d: V931 = 0xff
0x91f: V932 = AND 0xff V930
0x920: V933 = 0xa
0x922: V934 = EXP 0xa V932
0x923: V935 = 0xe25
0x926: JUMP 0xe25
---
Entry stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, V934]
Exit stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V934]

================================

Block 0x927
[0x927:0x929]
---
Predecessors: [0xe1d, 0xe54]
Successors: [0x92a]
---
0x927 JUMPDEST
0x928 SWAP2
0x929 POP
---
0x927: JUMPDEST 
---
Entry stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, S1]

================================

Block 0x92a
[0x92a:0x988]
---
Predecessors: [0x901, 0x927]
Successors: [0x989, 0x98d]
---
0x92a JUMPDEST
0x92b PUSH1 0x1
0x92d SLOAD
0x92e PUSH1 0x1
0x930 PUSH1 0xa0
0x932 PUSH1 0x2
0x934 EXP
0x935 SUB
0x936 AND
0x937 PUSH4 0x23b872dd
0x93c DUP14
0x93d ADDRESS
0x93e DUP13
0x93f PUSH1 0x40
0x941 MLOAD
0x942 PUSH1 0xe0
0x944 PUSH1 0x2
0x946 EXP
0x947 PUSH4 0xffffffff
0x94c DUP7
0x94d AND
0x94e MUL
0x94f DUP2
0x950 MSTORE
0x951 PUSH1 0x1
0x953 PUSH1 0xa0
0x955 PUSH1 0x2
0x957 EXP
0x958 SUB
0x959 SWAP4
0x95a DUP5
0x95b AND
0x95c PUSH1 0x4
0x95e DUP3
0x95f ADD
0x960 MSTORE
0x961 SWAP2
0x962 SWAP1
0x963 SWAP3
0x964 AND
0x965 PUSH1 0x24
0x967 DUP3
0x968 ADD
0x969 MSTORE
0x96a PUSH1 0x44
0x96c DUP2
0x96d ADD
0x96e SWAP2
0x96f SWAP1
0x970 SWAP2
0x971 MSTORE
0x972 PUSH1 0x64
0x974 ADD
0x975 PUSH1 0x20
0x977 PUSH1 0x40
0x979 MLOAD
0x97a DUP1
0x97b DUP4
0x97c SUB
0x97d DUP2
0x97e PUSH1 0x0
0x980 DUP8
0x981 DUP1
0x982 EXTCODESIZE
0x983 ISZERO
0x984 ISZERO
0x985 PUSH2 0x98d
0x988 JUMPI
---
0x92a: JUMPDEST 
0x92b: V936 = 0x1
0x92d: V937 = S[0x1]
0x92e: V938 = 0x1
0x930: V939 = 0xa0
0x932: V940 = 0x2
0x934: V941 = EXP 0x2 0xa0
0x935: V942 = SUB 0x10000000000000000000000000000000000000000 0x1
0x936: V943 = AND 0xffffffffffffffffffffffffffffffffffffffff V937
0x937: V944 = 0x23b872dd
0x93d: V945 = ADDRESS
0x93f: V946 = 0x40
0x941: V947 = M[0x40]
0x942: V948 = 0xe0
0x944: V949 = 0x2
0x946: V950 = EXP 0x2 0xe0
0x947: V951 = 0xffffffff
0x94d: V952 = AND 0x23b872dd 0xffffffff
0x94e: V953 = MUL 0x23b872dd 0x100000000000000000000000000000000000000000000000000000000
0x950: M[V947] = 0x23b872dd00000000000000000000000000000000000000000000000000000000
0x951: V954 = 0x1
0x953: V955 = 0xa0
0x955: V956 = 0x2
0x957: V957 = EXP 0x2 0xa0
0x958: V958 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95b: V959 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x95c: V960 = 0x4
0x95f: V961 = ADD V947 0x4
0x960: M[V961] = V959
0x964: V962 = AND 0xffffffffffffffffffffffffffffffffffffffff V945
0x965: V963 = 0x24
0x968: V964 = ADD V947 0x24
0x969: M[V964] = V962
0x96a: V965 = 0x44
0x96d: V966 = ADD V947 0x44
0x971: M[V966] = S8
0x972: V967 = 0x64
0x974: V968 = ADD 0x64 V947
0x975: V969 = 0x20
0x977: V970 = 0x40
0x979: V971 = M[0x40]
0x97c: V972 = SUB V968 V971
0x97e: V973 = 0x0
0x982: V974 = EXTCODESIZE V943
0x983: V975 = ISZERO V974
0x984: V976 = ISZERO V975
0x985: V977 = 0x98d
0x988: JUMPI 0x98d V976
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V943, 0x23b872dd, V968, 0x20, V971, V972, V971, 0x0, V943]
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, V943, 0x23b872dd, V968, 0x20, V971, V972, V971, 0x0, V943]

================================

Block 0x989
[0x989:0x98c]
---
Predecessors: [0x92a]
Successors: []
---
0x989 PUSH1 0x0
0x98b DUP1
0x98c REVERT
---
0x989: V978 = 0x0
0x98c: REVERT 0x0 0x0
---
Entry stack: [V13, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V943, 0x23b872dd, V968, 0x20, V971, V972, V971, 0x0, V943]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V943, 0x23b872dd, V968, 0x20, V971, V972, V971, 0x0, V943]

================================

Block 0x98d
[0x98d:0x995]
---
Predecessors: [0x92a]
Successors: [0x996, 0x99a]
---
0x98d JUMPDEST
0x98e GAS
0x98f CALL
0x990 ISZERO
0x991 ISZERO
0x992 PUSH2 0x99a
0x995 JUMPI
---
0x98d: JUMPDEST 
0x98e: V979 = GAS
0x98f: V980 = CALL V979 V943 0x0 V971 V972 V971 0x20
0x990: V981 = ISZERO V980
0x991: V982 = ISZERO V981
0x992: V983 = 0x99a
0x995: JUMPI 0x99a V982
---
Entry stack: [V13, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V943, 0x23b872dd, V968, 0x20, V971, V972, V971, 0x0, V943]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V943, 0x23b872dd, V968]

================================

Block 0x996
[0x996:0x999]
---
Predecessors: [0x98d]
Successors: []
---
0x996 PUSH1 0x0
0x998 DUP1
0x999 REVERT
---
0x996: V984 = 0x0
0x999: REVERT 0x0 0x0
---
Entry stack: [V13, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x23b872dd, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x23b872dd, S0]

================================

Block 0x99a
[0x99a:0x9aa]
---
Predecessors: [0x98d]
Successors: [0x9ab, 0xa17]
---
0x99a JUMPDEST
0x99b POP
0x99c POP
0x99d POP
0x99e PUSH1 0x40
0x9a0 MLOAD
0x9a1 DUP1
0x9a2 MLOAD
0x9a3 SWAP1
0x9a4 POP
0x9a5 DUP1
0x9a6 ISZERO
0x9a7 PUSH2 0xa17
0x9aa JUMPI
---
0x99a: JUMPDEST 
0x99e: V985 = 0x40
0x9a0: V986 = M[0x40]
0x9a2: V987 = M[V986]
0x9a6: V988 = ISZERO V987
0x9a7: V989 = 0xa17
0x9aa: JUMPI 0xa17 V988
---
Entry stack: [V13, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x23b872dd, S0]
Stack pops: 3
Stack additions: [V987]
Exit stack: [V13, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V987]

================================

Block 0x9ab
[0x9ab:0x9fa]
---
Predecessors: [0x99a]
Successors: [0x9fb, 0x9ff]
---
0x9ab POP
0x9ac DUP3
0x9ad PUSH1 0x1
0x9af PUSH1 0xa0
0x9b1 PUSH1 0x2
0x9b3 EXP
0x9b4 SUB
0x9b5 AND
0x9b6 PUSH4 0xa9059cbb
0x9bb DUP14
0x9bc DUP5
0x9bd PUSH1 0x40
0x9bf MLOAD
0x9c0 PUSH1 0xe0
0x9c2 PUSH1 0x2
0x9c4 EXP
0x9c5 PUSH4 0xffffffff
0x9ca DUP6
0x9cb AND
0x9cc MUL
0x9cd DUP2
0x9ce MSTORE
0x9cf PUSH1 0x1
0x9d1 PUSH1 0xa0
0x9d3 PUSH1 0x2
0x9d5 EXP
0x9d6 SUB
0x9d7 SWAP1
0x9d8 SWAP3
0x9d9 AND
0x9da PUSH1 0x4
0x9dc DUP4
0x9dd ADD
0x9de MSTORE
0x9df PUSH1 0x24
0x9e1 DUP3
0x9e2 ADD
0x9e3 MSTORE
0x9e4 PUSH1 0x44
0x9e6 ADD
0x9e7 PUSH1 0x20
0x9e9 PUSH1 0x40
0x9eb MLOAD
0x9ec DUP1
0x9ed DUP4
0x9ee SUB
0x9ef DUP2
0x9f0 PUSH1 0x0
0x9f2 DUP8
0x9f3 DUP1
0x9f4 EXTCODESIZE
0x9f5 ISZERO
0x9f6 ISZERO
0x9f7 PUSH2 0x9ff
0x9fa JUMPI
---
0x9ad: V990 = 0x1
0x9af: V991 = 0xa0
0x9b1: V992 = 0x2
0x9b3: V993 = EXP 0x2 0xa0
0x9b4: V994 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9b5: V995 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x9b6: V996 = 0xa9059cbb
0x9bd: V997 = 0x40
0x9bf: V998 = M[0x40]
0x9c0: V999 = 0xe0
0x9c2: V1000 = 0x2
0x9c4: V1001 = EXP 0x2 0xe0
0x9c5: V1002 = 0xffffffff
0x9cb: V1003 = AND 0xa9059cbb 0xffffffff
0x9cc: V1004 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x9ce: M[V998] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x9cf: V1005 = 0x1
0x9d1: V1006 = 0xa0
0x9d3: V1007 = 0x2
0x9d5: V1008 = EXP 0x2 0xa0
0x9d6: V1009 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d9: V1010 = AND S12 0xffffffffffffffffffffffffffffffffffffffff
0x9da: V1011 = 0x4
0x9dd: V1012 = ADD V998 0x4
0x9de: M[V1012] = V1010
0x9df: V1013 = 0x24
0x9e2: V1014 = ADD V998 0x24
0x9e3: M[V1014] = S2
0x9e4: V1015 = 0x44
0x9e6: V1016 = ADD 0x44 V998
0x9e7: V1017 = 0x20
0x9e9: V1018 = 0x40
0x9eb: V1019 = M[0x40]
0x9ee: V1020 = SUB V1016 V1019
0x9f0: V1021 = 0x0
0x9f4: V1022 = EXTCODESIZE V995
0x9f5: V1023 = ISZERO V1022
0x9f6: V1024 = ISZERO V1023
0x9f7: V1025 = 0x9ff
0x9fa: JUMPI 0x9ff V1024
---
Entry stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V987]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V995, 0xa9059cbb, V1016, 0x20, V1019, V1020, V1019, 0x0, V995]
Exit stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V995, 0xa9059cbb, V1016, 0x20, V1019, V1020, V1019, 0x0, V995]

================================

Block 0x9fb
[0x9fb:0x9fe]
---
Predecessors: [0x9ab]
Successors: []
---
0x9fb PUSH1 0x0
0x9fd DUP1
0x9fe REVERT
---
0x9fb: V1026 = 0x0
0x9fe: REVERT 0x0 0x0
---
Entry stack: [V13, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V995, 0xa9059cbb, V1016, 0x20, V1019, V1020, V1019, 0x0, V995]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V995, 0xa9059cbb, V1016, 0x20, V1019, V1020, V1019, 0x0, V995]

================================

Block 0x9ff
[0x9ff:0xa07]
---
Predecessors: [0x9ab]
Successors: [0xa08, 0xa0c]
---
0x9ff JUMPDEST
0xa00 GAS
0xa01 CALL
0xa02 ISZERO
0xa03 ISZERO
0xa04 PUSH2 0xa0c
0xa07 JUMPI
---
0x9ff: JUMPDEST 
0xa00: V1027 = GAS
0xa01: V1028 = CALL V1027 V995 0x0 V1019 V1020 V1019 0x20
0xa02: V1029 = ISZERO V1028
0xa03: V1030 = ISZERO V1029
0xa04: V1031 = 0xa0c
0xa07: JUMPI 0xa0c V1030
---
Entry stack: [V13, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V995, 0xa9059cbb, V1016, 0x20, V1019, V1020, V1019, 0x0, V995]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S31, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, V995, 0xa9059cbb, V1016]

================================

Block 0xa08
[0xa08:0xa0b]
---
Predecessors: [0x9ff]
Successors: []
---
0xa08 PUSH1 0x0
0xa0a DUP1
0xa0b REVERT
---
0xa08: V1032 = 0x0
0xa0b: REVERT 0x0 0x0
---
Entry stack: [V13, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]

================================

Block 0xa0c
[0xa0c:0xa16]
---
Predecessors: [0x9ff]
Successors: [0xa17]
---
0xa0c JUMPDEST
0xa0d POP
0xa0e POP
0xa0f POP
0xa10 PUSH1 0x40
0xa12 MLOAD
0xa13 DUP1
0xa14 MLOAD
0xa15 SWAP1
0xa16 POP
---
0xa0c: JUMPDEST 
0xa10: V1033 = 0x40
0xa12: V1034 = M[0x40]
0xa14: V1035 = M[V1034]
---
Entry stack: [V13, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0xa9059cbb, S0]
Stack pops: 3
Stack additions: [V1035]
Exit stack: [V13, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V1035]

================================

Block 0xa17
[0xa17:0xa1d]
---
Predecessors: [0x99a, 0xa0c]
Successors: [0xa1e, 0xa1f]
---
0xa17 JUMPDEST
0xa18 ISZERO
0xa19 ISZERO
0xa1a PUSH2 0xa1f
0xa1d JUMPI
---
0xa17: JUMPDEST 
0xa18: V1036 = ISZERO S0
0xa19: V1037 = ISZERO V1036
0xa1a: V1038 = 0xa1f
0xa1d: JUMPI 0xa1f V1037
---
Entry stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xa1e
[0xa1e:0xa1e]
---
Predecessors: [0xa17]
Successors: []
---
0xa1e INVALID
---
0xa1e: INVALID 
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xa1f
[0xa1f:0xa87]
---
Predecessors: [0xa17]
Successors: [0xd1]
---
0xa1f JUMPDEST
0xa20 DUP10
0xa21 PUSH1 0x1
0xa23 PUSH1 0xa0
0xa25 PUSH1 0x2
0xa27 EXP
0xa28 SUB
0xa29 AND
0xa2a DUP13
0xa2b PUSH1 0x1
0xa2d PUSH1 0xa0
0xa2f PUSH1 0x2
0xa31 EXP
0xa32 SUB
0xa33 AND
0xa34 PUSH32 0x9734819749a91fc3be03ea83205f924ee08479bd3f0da48efc91d94d050cac1e
0xa55 DUP14
0xa56 DUP13
0xa57 DUP7
0xa58 PUSH1 0x40
0xa5a MLOAD
0xa5b DUP1
0xa5c DUP5
0xa5d DUP2
0xa5e MSTORE
0xa5f PUSH1 0x20
0xa61 ADD
0xa62 DUP4
0xa63 DUP2
0xa64 MSTORE
0xa65 PUSH1 0x20
0xa67 ADD
0xa68 DUP3
0xa69 DUP2
0xa6a MSTORE
0xa6b PUSH1 0x20
0xa6d ADD
0xa6e SWAP4
0xa6f POP
0xa70 POP
0xa71 POP
0xa72 POP
0xa73 PUSH1 0x40
0xa75 MLOAD
0xa76 DUP1
0xa77 SWAP2
0xa78 SUB
0xa79 SWAP1
0xa7a LOG3
0xa7b POP
0xa7c POP
0xa7d POP
0xa7e POP
0xa7f POP
0xa80 POP
0xa81 POP
0xa82 POP
0xa83 POP
0xa84 POP
0xa85 POP
0xa86 POP
0xa87 JUMP
---
0xa1f: JUMPDEST 
0xa21: V1039 = 0x1
0xa23: V1040 = 0xa0
0xa25: V1041 = 0x2
0xa27: V1042 = EXP 0x2 0xa0
0xa28: V1043 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa29: V1044 = AND 0xffffffffffffffffffffffffffffffffffffffff S9
0xa2b: V1045 = 0x1
0xa2d: V1046 = 0xa0
0xa2f: V1047 = 0x2
0xa31: V1048 = EXP 0x2 0xa0
0xa32: V1049 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa33: V1050 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0xa34: V1051 = 0x9734819749a91fc3be03ea83205f924ee08479bd3f0da48efc91d94d050cac1e
0xa58: V1052 = 0x40
0xa5a: V1053 = M[0x40]
0xa5e: M[V1053] = S10
0xa5f: V1054 = 0x20
0xa61: V1055 = ADD 0x20 V1053
0xa64: M[V1055] = S8
0xa65: V1056 = 0x20
0xa67: V1057 = ADD 0x20 V1055
0xa6a: M[V1057] = S1
0xa6b: V1058 = 0x20
0xa6d: V1059 = ADD 0x20 V1057
0xa73: V1060 = 0x40
0xa75: V1061 = M[0x40]
0xa78: V1062 = SUB V1059 V1061
0xa7a: LOG V1061 V1062 0x9734819749a91fc3be03ea83205f924ee08479bd3f0da48efc91d94d050cac1e V1050 V1044
0xa87: JUMP S12
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 13
Stack additions: []
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13]

================================

Block 0xa88
[0xa88:0xa9e]
---
Predecessors: [0x184]
Successors: [0xa9f, 0xaa3]
---
0xa88 JUMPDEST
0xa89 PUSH1 0x0
0xa8b SLOAD
0xa8c CALLER
0xa8d PUSH1 0x1
0xa8f PUSH1 0xa0
0xa91 PUSH1 0x2
0xa93 EXP
0xa94 SUB
0xa95 SWAP1
0xa96 DUP2
0xa97 AND
0xa98 SWAP2
0xa99 AND
0xa9a EQ
0xa9b PUSH2 0xaa3
0xa9e JUMPI
---
0xa88: JUMPDEST 
0xa89: V1063 = 0x0
0xa8b: V1064 = S[0x0]
0xa8c: V1065 = CALLER
0xa8d: V1066 = 0x1
0xa8f: V1067 = 0xa0
0xa91: V1068 = 0x2
0xa93: V1069 = EXP 0x2 0xa0
0xa94: V1070 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa97: V1071 = AND 0xffffffffffffffffffffffffffffffffffffffff V1065
0xa99: V1072 = AND V1064 0xffffffffffffffffffffffffffffffffffffffff
0xa9a: V1073 = EQ V1072 V1071
0xa9b: V1074 = 0xaa3
0xa9e: JUMPI 0xaa3 V1073
---
Entry stack: [V13, 0xd1]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1]

================================

Block 0xa9f
[0xa9f:0xaa2]
---
Predecessors: [0xa88]
Successors: []
---
0xa9f PUSH1 0x0
0xaa1 DUP1
0xaa2 REVERT
---
0xa9f: V1075 = 0x0
0xaa2: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1]

================================

Block 0xaa3
[0xaa3:0xad7]
---
Predecessors: [0xa88]
Successors: [0xad8, 0xadc]
---
0xaa3 JUMPDEST
0xaa4 PUSH1 0x0
0xaa6 SLOAD
0xaa7 PUSH1 0x1
0xaa9 PUSH1 0xa0
0xaab PUSH1 0x2
0xaad EXP
0xaae SUB
0xaaf SWAP1
0xab0 DUP2
0xab1 AND
0xab2 SWAP1
0xab3 ADDRESS
0xab4 AND
0xab5 BALANCE
0xab6 DUP1
0xab7 ISZERO
0xab8 PUSH2 0x8fc
0xabb MUL
0xabc SWAP1
0xabd PUSH1 0x40
0xabf MLOAD
0xac0 PUSH1 0x0
0xac2 PUSH1 0x40
0xac4 MLOAD
0xac5 DUP1
0xac6 DUP4
0xac7 SUB
0xac8 DUP2
0xac9 DUP6
0xaca DUP9
0xacb DUP9
0xacc CALL
0xacd SWAP4
0xace POP
0xacf POP
0xad0 POP
0xad1 POP
0xad2 ISZERO
0xad3 ISZERO
0xad4 PUSH2 0xadc
0xad7 JUMPI
---
0xaa3: JUMPDEST 
0xaa4: V1076 = 0x0
0xaa6: V1077 = S[0x0]
0xaa7: V1078 = 0x1
0xaa9: V1079 = 0xa0
0xaab: V1080 = 0x2
0xaad: V1081 = EXP 0x2 0xa0
0xaae: V1082 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab1: V1083 = AND 0xffffffffffffffffffffffffffffffffffffffff V1077
0xab3: V1084 = ADDRESS
0xab4: V1085 = AND V1084 0xffffffffffffffffffffffffffffffffffffffff
0xab5: V1086 = BALANCE V1085
0xab7: V1087 = ISZERO V1086
0xab8: V1088 = 0x8fc
0xabb: V1089 = MUL 0x8fc V1087
0xabd: V1090 = 0x40
0xabf: V1091 = M[0x40]
0xac0: V1092 = 0x0
0xac2: V1093 = 0x40
0xac4: V1094 = M[0x40]
0xac7: V1095 = SUB V1091 V1094
0xacc: V1096 = CALL V1089 V1083 V1086 V1094 V1095 V1094 0x0
0xad2: V1097 = ISZERO V1096
0xad3: V1098 = ISZERO V1097
0xad4: V1099 = 0xadc
0xad7: JUMPI 0xadc V1098
---
Entry stack: [V13, 0xd1]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1]

================================

Block 0xad8
[0xad8:0xadb]
---
Predecessors: [0xaa3]
Successors: []
---
0xad8 PUSH1 0x0
0xada DUP1
0xadb REVERT
---
0xad8: V1100 = 0x0
0xadb: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1]

================================

Block 0xadc
[0xadc:0xadd]
---
Predecessors: [0xaa3]
Successors: [0xd1]
---
0xadc JUMPDEST
0xadd JUMP
---
0xadc: JUMPDEST 
0xadd: JUMP 0xd1
---
Entry stack: [V13, 0xd1]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0xade
[0xade:0xaec]
---
Predecessors: [0x197]
Successors: [0x19f]
---
0xade JUMPDEST
0xadf PUSH1 0x0
0xae1 SLOAD
0xae2 PUSH1 0x1
0xae4 PUSH1 0xa0
0xae6 PUSH1 0x2
0xae8 EXP
0xae9 SUB
0xaea AND
0xaeb DUP2
0xaec JUMP
---
0xade: JUMPDEST 
0xadf: V1101 = 0x0
0xae1: V1102 = S[0x0]
0xae2: V1103 = 0x1
0xae4: V1104 = 0xa0
0xae6: V1105 = 0x2
0xae8: V1106 = EXP 0x2 0xa0
0xae9: V1107 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaea: V1108 = AND 0xffffffffffffffffffffffffffffffffffffffff V1102
0xaec: JUMP 0x19f
---
Entry stack: [V13, 0x19f]
Stack pops: 1
Stack additions: [S0, V1108]
Exit stack: [V13, 0x19f, V1108]

================================

Block 0xaed
[0xaed:0xb02]
---
Predecessors: [0x1c6]
Successors: [0xb03, 0xb07]
---
0xaed JUMPDEST
0xaee PUSH1 0x1
0xaf0 SLOAD
0xaf1 PUSH1 0x1
0xaf3 PUSH1 0xa0
0xaf5 PUSH1 0x2
0xaf7 EXP
0xaf8 SUB
0xaf9 DUP5
0xafa DUP2
0xafb AND
0xafc SWAP2
0xafd AND
0xafe EQ
0xaff PUSH2 0xb07
0xb02 JUMPI
---
0xaed: JUMPDEST 
0xaee: V1109 = 0x1
0xaf0: V1110 = S[0x1]
0xaf1: V1111 = 0x1
0xaf3: V1112 = 0xa0
0xaf5: V1113 = 0x2
0xaf7: V1114 = EXP 0x2 0xa0
0xaf8: V1115 = SUB 0x10000000000000000000000000000000000000000 0x1
0xafb: V1116 = AND 0xffffffffffffffffffffffffffffffffffffffff V186
0xafd: V1117 = AND V1110 0xffffffffffffffffffffffffffffffffffffffff
0xafe: V1118 = EQ V1117 V1116
0xaff: V1119 = 0xb07
0xb02: JUMPI 0xb07 V1118
---
Entry stack: [V13, 0xd1, V181, V183, V186, V189, V191]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0xd1, V181, V183, V186, V189, V191]

================================

Block 0xb03
[0xb03:0xb06]
---
Predecessors: [0xaed]
Successors: []
---
0xb03 PUSH1 0x0
0xb05 DUP1
0xb06 REVERT
---
0xb03: V1120 = 0x0
0xb06: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V181, V183, V186, V189, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V181, V183, V186, V189, V191]

================================

Block 0xb07
[0xb07:0xb3d]
---
Predecessors: [0xaed]
Successors: [0xb3e, 0xb3f]
---
0xb07 JUMPDEST
0xb08 ADDRESS
0xb09 PUSH1 0x1
0xb0b PUSH1 0xa0
0xb0d PUSH1 0x2
0xb0f EXP
0xb10 SUB
0xb11 AND
0xb12 DUP3
0xb13 DUP3
0xb14 PUSH1 0x40
0xb16 MLOAD
0xb17 DUP1
0xb18 DUP4
0xb19 DUP4
0xb1a DUP1
0xb1b DUP3
0xb1c DUP5
0xb1d CALLDATACOPY
0xb1e DUP3
0xb1f ADD
0xb20 SWAP2
0xb21 POP
0xb22 POP
0xb23 SWAP3
0xb24 POP
0xb25 POP
0xb26 POP
0xb27 PUSH1 0x0
0xb29 PUSH1 0x40
0xb2b MLOAD
0xb2c DUP1
0xb2d DUP4
0xb2e SUB
0xb2f DUP2
0xb30 PUSH1 0x0
0xb32 DUP7
0xb33 GAS
0xb34 CALL
0xb35 SWAP2
0xb36 POP
0xb37 POP
0xb38 ISZERO
0xb39 ISZERO
0xb3a PUSH2 0xb3f
0xb3d JUMPI
---
0xb07: JUMPDEST 
0xb08: V1121 = ADDRESS
0xb09: V1122 = 0x1
0xb0b: V1123 = 0xa0
0xb0d: V1124 = 0x2
0xb0f: V1125 = EXP 0x2 0xa0
0xb10: V1126 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb11: V1127 = AND 0xffffffffffffffffffffffffffffffffffffffff V1121
0xb14: V1128 = 0x40
0xb16: V1129 = M[0x40]
0xb1d: CALLDATACOPY V1129 V189 V191
0xb1f: V1130 = ADD V1129 V191
0xb27: V1131 = 0x0
0xb29: V1132 = 0x40
0xb2b: V1133 = M[0x40]
0xb2e: V1134 = SUB V1130 V1133
0xb30: V1135 = 0x0
0xb33: V1136 = GAS
0xb34: V1137 = CALL V1136 V1127 0x0 V1133 V1134 V1133 0x0
0xb38: V1138 = ISZERO V1137
0xb39: V1139 = ISZERO V1138
0xb3a: V1140 = 0xb3f
0xb3d: JUMPI 0xb3f V1139
---
Entry stack: [V13, 0xd1, V181, V183, V186, V189, V191]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0xd1, V181, V183, V186, V189, V191]

================================

Block 0xb3e
[0xb3e:0xb3e]
---
Predecessors: [0xb07]
Successors: []
---
0xb3e INVALID
---
0xb3e: INVALID 
---
Entry stack: [V13, 0xd1, V181, V183, V186, V189, V191]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V181, V183, V186, V189, V191]

================================

Block 0xb3f
[0xb3f:0xb45]
---
Predecessors: [0xb07]
Successors: [0xd1]
---
0xb3f JUMPDEST
0xb40 POP
0xb41 POP
0xb42 POP
0xb43 POP
0xb44 POP
0xb45 JUMP
---
0xb3f: JUMPDEST 
0xb45: JUMP 0xd1
---
Entry stack: [V13, 0xd1, V181, V183, V186, V189, V191]
Stack pops: 6
Stack additions: []
Exit stack: [V13]

================================

Block 0xb46
[0xb46:0xb51]
---
Predecessors: [0x1f1]
Successors: [0xb52, 0xb56]
---
0xb46 JUMPDEST
0xb47 PUSH1 0x0
0xb49 DUP1
0xb4a TIMESTAMP
0xb4b DUP7
0xb4c LT
0xb4d ISZERO
0xb4e PUSH2 0xb56
0xb51 JUMPI
---
0xb46: JUMPDEST 
0xb47: V1141 = 0x0
0xb4a: V1142 = TIMESTAMP
0xb4c: V1143 = LT V197 V1142
0xb4d: V1144 = ISZERO V1143
0xb4e: V1145 = 0xb56
0xb51: JUMPI 0xb56 V1144
---
Entry stack: [V13, 0xd1, V195, V197, V201, V203, V205]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, 0x0]
Exit stack: [V13, 0xd1, V195, V197, V201, V203, V205, 0x0, 0x0]

================================

Block 0xb52
[0xb52:0xb55]
---
Predecessors: [0xb46]
Successors: []
---
0xb52 PUSH1 0x0
0xb54 DUP1
0xb55 REVERT
---
0xb52: V1146 = 0x0
0xb55: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V195, V197, V201, V203, V205, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V195, V197, V201, V203, V205, 0x0, 0x0]

================================

Block 0xb56
[0xb56:0xbc1]
---
Predecessors: [0xb46]
Successors: [0xbc2, 0xbc6]
---
0xb56 JUMPDEST
0xb57 PUSH1 0x1
0xb59 DUP8
0xb5a DUP8
0xb5b PUSH1 0x40
0xb5d MLOAD
0xb5e SWAP2
0xb5f DUP3
0xb60 MSTORE
0xb61 PUSH1 0x20
0xb63 DUP3
0xb64 ADD
0xb65 MSTORE
0xb66 PUSH1 0x40
0xb68 SWAP1
0xb69 DUP2
0xb6a ADD
0xb6b SWAP1
0xb6c MLOAD
0xb6d DUP1
0xb6e SWAP2
0xb6f SUB
0xb70 SWAP1
0xb71 SHA3
0xb72 DUP7
0xb73 DUP7
0xb74 DUP7
0xb75 PUSH1 0x40
0xb77 MLOAD
0xb78 PUSH1 0x0
0xb7a DUP2
0xb7b MSTORE
0xb7c PUSH1 0x20
0xb7e ADD
0xb7f PUSH1 0x40
0xb81 MSTORE
0xb82 PUSH1 0x40
0xb84 MLOAD
0xb85 SWAP4
0xb86 DUP5
0xb87 MSTORE
0xb88 PUSH1 0xff
0xb8a SWAP1
0xb8b SWAP3
0xb8c AND
0xb8d PUSH1 0x20
0xb8f DUP1
0xb90 DUP6
0xb91 ADD
0xb92 SWAP2
0xb93 SWAP1
0xb94 SWAP2
0xb95 MSTORE
0xb96 PUSH1 0x40
0xb98 DUP1
0xb99 DUP6
0xb9a ADD
0xb9b SWAP3
0xb9c SWAP1
0xb9d SWAP3
0xb9e MSTORE
0xb9f PUSH1 0x60
0xba1 DUP5
0xba2 ADD
0xba3 SWAP3
0xba4 SWAP1
0xba5 SWAP3
0xba6 MSTORE
0xba7 PUSH1 0x80
0xba9 SWAP1
0xbaa SWAP3
0xbab ADD
0xbac SWAP2
0xbad MLOAD
0xbae PUSH1 0x20
0xbb0 DUP2
0xbb1 SUB
0xbb2 SWAP1
0xbb3 DUP1
0xbb4 DUP5
0xbb5 SUB
0xbb6 SWAP1
0xbb7 PUSH1 0x0
0xbb9 DUP7
0xbba GAS
0xbbb CALL
0xbbc ISZERO
0xbbd ISZERO
0xbbe PUSH2 0xbc6
0xbc1 JUMPI
---
0xb56: JUMPDEST 
0xb57: V1147 = 0x1
0xb5b: V1148 = 0x40
0xb5d: V1149 = M[0x40]
0xb60: M[V1149] = V195
0xb61: V1150 = 0x20
0xb64: V1151 = ADD V1149 0x20
0xb65: M[V1151] = V197
0xb66: V1152 = 0x40
0xb6a: V1153 = ADD 0x40 V1149
0xb6c: V1154 = M[0x40]
0xb6f: V1155 = SUB V1153 V1154
0xb71: V1156 = SHA3 V1154 V1155
0xb75: V1157 = 0x40
0xb77: V1158 = M[0x40]
0xb78: V1159 = 0x0
0xb7b: M[V1158] = 0x0
0xb7c: V1160 = 0x20
0xb7e: V1161 = ADD 0x20 V1158
0xb7f: V1162 = 0x40
0xb81: M[0x40] = V1161
0xb82: V1163 = 0x40
0xb84: V1164 = M[0x40]
0xb87: M[V1164] = V1156
0xb88: V1165 = 0xff
0xb8c: V1166 = AND V201 0xff
0xb8d: V1167 = 0x20
0xb91: V1168 = ADD V1164 0x20
0xb95: M[V1168] = V1166
0xb96: V1169 = 0x40
0xb9a: V1170 = ADD V1164 0x40
0xb9e: M[V1170] = V203
0xb9f: V1171 = 0x60
0xba2: V1172 = ADD V1164 0x60
0xba6: M[V1172] = V205
0xba7: V1173 = 0x80
0xbab: V1174 = ADD V1164 0x80
0xbad: V1175 = M[0x40]
0xbae: V1176 = 0x20
0xbb1: V1177 = SUB V1175 0x20
0xbb5: V1178 = SUB V1174 V1175
0xbb7: V1179 = 0x0
0xbba: V1180 = GAS
0xbbb: V1181 = CALL V1180 0x1 0x0 V1175 V1178 V1177 0x20
0xbbc: V1182 = ISZERO V1181
0xbbd: V1183 = ISZERO V1182
0xbbe: V1184 = 0xbc6
0xbc1: JUMPI 0xbc6 V1183
---
Entry stack: [V13, 0xd1, V195, V197, V201, V203, V205, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x1, V1174]
Exit stack: [V13, 0xd1, V195, V197, V201, V203, V205, 0x0, 0x0, 0x1, V1174]

================================

Block 0xbc2
[0xbc2:0xbc5]
---
Predecessors: [0xb56]
Successors: []
---
0xbc2 PUSH1 0x0
0xbc4 DUP1
0xbc5 REVERT
---
0xbc2: V1185 = 0x0
0xbc5: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V195, V197, V201, V203, V205, 0x0, 0x0, 0x1, V1174]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V195, V197, V201, V203, V205, 0x0, 0x0, 0x1, V1174]

================================

Block 0xbc6
[0xbc6:0xbe7]
---
Predecessors: [0xb56]
Successors: [0xbe8, 0xbec]
---
0xbc6 JUMPDEST
0xbc7 POP
0xbc8 POP
0xbc9 PUSH1 0x20
0xbcb PUSH1 0x40
0xbcd MLOAD
0xbce SUB
0xbcf MLOAD
0xbd0 PUSH1 0x3
0xbd2 SLOAD
0xbd3 SWAP1
0xbd4 SWAP3
0xbd5 POP
0xbd6 PUSH1 0x1
0xbd8 PUSH1 0xa0
0xbda PUSH1 0x2
0xbdc EXP
0xbdd SUB
0xbde DUP1
0xbdf DUP5
0xbe0 AND
0xbe1 SWAP2
0xbe2 AND
0xbe3 EQ
0xbe4 PUSH2 0xbec
0xbe7 JUMPI
---
0xbc6: JUMPDEST 
0xbc9: V1186 = 0x20
0xbcb: V1187 = 0x40
0xbcd: V1188 = M[0x40]
0xbce: V1189 = SUB V1188 0x20
0xbcf: V1190 = M[V1189]
0xbd0: V1191 = 0x3
0xbd2: V1192 = S[0x3]
0xbd6: V1193 = 0x1
0xbd8: V1194 = 0xa0
0xbda: V1195 = 0x2
0xbdc: V1196 = EXP 0x2 0xa0
0xbdd: V1197 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbe0: V1198 = AND V1190 0xffffffffffffffffffffffffffffffffffffffff
0xbe2: V1199 = AND V1192 0xffffffffffffffffffffffffffffffffffffffff
0xbe3: V1200 = EQ V1199 V1198
0xbe4: V1201 = 0xbec
0xbe7: JUMPI 0xbec V1200
---
Entry stack: [V13, 0xd1, V195, V197, V201, V203, V205, 0x0, 0x0, 0x1, V1174]
Stack pops: 4
Stack additions: [V1190, S2]
Exit stack: [V13, 0xd1, V195, V197, V201, V203, V205, V1190, 0x0]

================================

Block 0xbe8
[0xbe8:0xbeb]
---
Predecessors: [0xbc6]
Successors: []
---
0xbe8 PUSH1 0x0
0xbea DUP1
0xbeb REVERT
---
0xbe8: V1202 = 0x0
0xbeb: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V195, V197, V201, V203, V205, V1190, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V195, V197, V201, V203, V205, V1190, 0x0]

================================

Block 0xbec
[0xbec:0xbf5]
---
Predecessors: [0xbc6]
Successors: [0xe10]
---
0xbec JUMPDEST
0xbed PUSH2 0xbf6
0xbf0 CALLVALUE
0xbf1 DUP9
0xbf2 PUSH2 0xe10
0xbf5 JUMP
---
0xbec: JUMPDEST 
0xbed: V1203 = 0xbf6
0xbf0: V1204 = CALLVALUE
0xbf2: V1205 = 0xe10
0xbf5: JUMP 0xe10
---
Entry stack: [V13, 0xd1, V195, V197, V201, V203, V205, V1190, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0xbf6, V1204, S6]
Exit stack: [V13, 0xd1, V195, V197, V201, V203, V205, V1190, 0x0, 0xbf6, V1204, V195]

================================

Block 0xbf6
[0xbf6:0xc4a]
---
Predecessors: [0xe1d]
Successors: [0xc4b, 0xc4f]
---
0xbf6 JUMPDEST
0xbf7 PUSH1 0x2
0xbf9 SLOAD
0xbfa SWAP1
0xbfb SWAP2
0xbfc POP
0xbfd PUSH1 0x1
0xbff PUSH1 0xa0
0xc01 PUSH1 0x2
0xc03 EXP
0xc04 SUB
0xc05 AND
0xc06 PUSH4 0xa9059cbb
0xc0b CALLER
0xc0c DUP4
0xc0d PUSH1 0x40
0xc0f MLOAD
0xc10 PUSH1 0xe0
0xc12 PUSH1 0x2
0xc14 EXP
0xc15 PUSH4 0xffffffff
0xc1a DUP6
0xc1b AND
0xc1c MUL
0xc1d DUP2
0xc1e MSTORE
0xc1f PUSH1 0x1
0xc21 PUSH1 0xa0
0xc23 PUSH1 0x2
0xc25 EXP
0xc26 SUB
0xc27 SWAP1
0xc28 SWAP3
0xc29 AND
0xc2a PUSH1 0x4
0xc2c DUP4
0xc2d ADD
0xc2e MSTORE
0xc2f PUSH1 0x24
0xc31 DUP3
0xc32 ADD
0xc33 MSTORE
0xc34 PUSH1 0x44
0xc36 ADD
0xc37 PUSH1 0x20
0xc39 PUSH1 0x40
0xc3b MLOAD
0xc3c DUP1
0xc3d DUP4
0xc3e SUB
0xc3f DUP2
0xc40 PUSH1 0x0
0xc42 DUP8
0xc43 DUP1
0xc44 EXTCODESIZE
0xc45 ISZERO
0xc46 ISZERO
0xc47 PUSH2 0xc4f
0xc4a JUMPI
---
0xbf6: JUMPDEST 
0xbf7: V1206 = 0x2
0xbf9: V1207 = S[0x2]
0xbfd: V1208 = 0x1
0xbff: V1209 = 0xa0
0xc01: V1210 = 0x2
0xc03: V1211 = EXP 0x2 0xa0
0xc04: V1212 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc05: V1213 = AND 0xffffffffffffffffffffffffffffffffffffffff V1207
0xc06: V1214 = 0xa9059cbb
0xc0b: V1215 = CALLER
0xc0d: V1216 = 0x40
0xc0f: V1217 = M[0x40]
0xc10: V1218 = 0xe0
0xc12: V1219 = 0x2
0xc14: V1220 = EXP 0x2 0xe0
0xc15: V1221 = 0xffffffff
0xc1b: V1222 = AND 0xa9059cbb 0xffffffff
0xc1c: V1223 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xc1e: M[V1217] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xc1f: V1224 = 0x1
0xc21: V1225 = 0xa0
0xc23: V1226 = 0x2
0xc25: V1227 = EXP 0x2 0xa0
0xc26: V1228 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc29: V1229 = AND V1215 0xffffffffffffffffffffffffffffffffffffffff
0xc2a: V1230 = 0x4
0xc2d: V1231 = ADD V1217 0x4
0xc2e: M[V1231] = V1229
0xc2f: V1232 = 0x24
0xc32: V1233 = ADD V1217 0x24
0xc33: M[V1233] = V1385
0xc34: V1234 = 0x44
0xc36: V1235 = ADD 0x44 V1217
0xc37: V1236 = 0x20
0xc39: V1237 = 0x40
0xc3b: V1238 = M[0x40]
0xc3e: V1239 = SUB V1235 V1238
0xc40: V1240 = 0x0
0xc44: V1241 = EXTCODESIZE V1213
0xc45: V1242 = ISZERO V1241
0xc46: V1243 = ISZERO V1242
0xc47: V1244 = 0xc4f
0xc4a: JUMPI 0xc4f V1243
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1385]
Stack pops: 2
Stack additions: [S0, V1213, 0xa9059cbb, V1235, 0x20, V1238, V1239, V1238, 0x0, V1213]
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V1385, V1213, 0xa9059cbb, V1235, 0x20, V1238, V1239, V1238, 0x0, V1213]

================================

Block 0xc4b
[0xc4b:0xc4e]
---
Predecessors: [0xbf6]
Successors: []
---
0xc4b PUSH1 0x0
0xc4d DUP1
0xc4e REVERT
---
0xc4b: V1245 = 0x0
0xc4e: REVERT 0x0 0x0
---
Entry stack: [V13, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V1385, V1213, 0xa9059cbb, V1235, 0x20, V1238, V1239, V1238, 0x0, V1213]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V1385, V1213, 0xa9059cbb, V1235, 0x20, V1238, V1239, V1238, 0x0, V1213]

================================

Block 0xc4f
[0xc4f:0xc57]
---
Predecessors: [0xbf6]
Successors: [0xc58, 0xc5c]
---
0xc4f JUMPDEST
0xc50 GAS
0xc51 CALL
0xc52 ISZERO
0xc53 ISZERO
0xc54 PUSH2 0xc5c
0xc57 JUMPI
---
0xc4f: JUMPDEST 
0xc50: V1246 = GAS
0xc51: V1247 = CALL V1246 V1213 0x0 V1238 V1239 V1238 0x20
0xc52: V1248 = ISZERO V1247
0xc53: V1249 = ISZERO V1248
0xc54: V1250 = 0xc5c
0xc57: JUMPI 0xc5c V1249
---
Entry stack: [V13, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V1385, V1213, 0xa9059cbb, V1235, 0x20, V1238, V1239, V1238, 0x0, V1213]
Stack pops: 6
Stack additions: []
Exit stack: [V13, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, V1385, V1213, 0xa9059cbb, V1235]

================================

Block 0xc58
[0xc58:0xc5b]
---
Predecessors: [0xc4f]
Successors: []
---
0xc58 PUSH1 0x0
0xc5a DUP1
0xc5b REVERT
---
0xc58: V1251 = 0x0
0xc5b: REVERT 0x0 0x0
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1385, V1213, 0xa9059cbb, V1235]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1385, V1213, 0xa9059cbb, V1235]

================================

Block 0xc5c
[0xc5c:0xc6c]
---
Predecessors: [0xc4f]
Successors: [0xc6d, 0xc6e]
---
0xc5c JUMPDEST
0xc5d POP
0xc5e POP
0xc5f POP
0xc60 PUSH1 0x40
0xc62 MLOAD
0xc63 DUP1
0xc64 MLOAD
0xc65 SWAP1
0xc66 POP
0xc67 ISZERO
0xc68 ISZERO
0xc69 PUSH2 0xc6e
0xc6c JUMPI
---
0xc5c: JUMPDEST 
0xc60: V1252 = 0x40
0xc62: V1253 = M[0x40]
0xc64: V1254 = M[V1253]
0xc67: V1255 = ISZERO V1254
0xc68: V1256 = ISZERO V1255
0xc69: V1257 = 0xc6e
0xc6c: JUMPI 0xc6e V1256
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1385, V1213, 0xa9059cbb, V1235]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V1385]

================================

Block 0xc6d
[0xc6d:0xc6d]
---
Predecessors: [0xc5c]
Successors: []
---
0xc6d INVALID
---
0xc6d: INVALID 
---
Entry stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1385]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1385]

================================

Block 0xc6e
[0xc6e:0xcc7]
---
Predecessors: [0xc5c]
Successors: [0xd1]
---
0xc6e JUMPDEST
0xc6f CALLER
0xc70 PUSH1 0x1
0xc72 PUSH1 0xa0
0xc74 PUSH1 0x2
0xc76 EXP
0xc77 SUB
0xc78 AND
0xc79 PUSH32 0xd5e80abb89df6b98de87bf7e6a4fca0a791e755db3e390bb334955e982a560ad
0xc9a DUP9
0xc9b CALLVALUE
0xc9c DUP5
0xc9d PUSH1 0x40
0xc9f MLOAD
0xca0 DUP1
0xca1 DUP5
0xca2 DUP2
0xca3 MSTORE
0xca4 PUSH1 0x20
0xca6 ADD
0xca7 DUP4
0xca8 DUP2
0xca9 MSTORE
0xcaa PUSH1 0x20
0xcac ADD
0xcad DUP3
0xcae DUP2
0xcaf MSTORE
0xcb0 PUSH1 0x20
0xcb2 ADD
0xcb3 SWAP4
0xcb4 POP
0xcb5 POP
0xcb6 POP
0xcb7 POP
0xcb8 PUSH1 0x40
0xcba MLOAD
0xcbb DUP1
0xcbc SWAP2
0xcbd SUB
0xcbe SWAP1
0xcbf LOG2
0xcc0 POP
0xcc1 POP
0xcc2 POP
0xcc3 POP
0xcc4 POP
0xcc5 POP
0xcc6 POP
0xcc7 JUMP
---
0xc6e: JUMPDEST 
0xc6f: V1258 = CALLER
0xc70: V1259 = 0x1
0xc72: V1260 = 0xa0
0xc74: V1261 = 0x2
0xc76: V1262 = EXP 0x2 0xa0
0xc77: V1263 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc78: V1264 = AND 0xffffffffffffffffffffffffffffffffffffffff V1258
0xc79: V1265 = 0xd5e80abb89df6b98de87bf7e6a4fca0a791e755db3e390bb334955e982a560ad
0xc9b: V1266 = CALLVALUE
0xc9d: V1267 = 0x40
0xc9f: V1268 = M[0x40]
0xca3: M[V1268] = S6
0xca4: V1269 = 0x20
0xca6: V1270 = ADD 0x20 V1268
0xca9: M[V1270] = V1266
0xcaa: V1271 = 0x20
0xcac: V1272 = ADD 0x20 V1270
0xcaf: M[V1272] = V1385
0xcb0: V1273 = 0x20
0xcb2: V1274 = ADD 0x20 V1272
0xcb8: V1275 = 0x40
0xcba: V1276 = M[0x40]
0xcbd: V1277 = SUB V1274 V1276
0xcbf: LOG V1276 V1277 0xd5e80abb89df6b98de87bf7e6a4fca0a791e755db3e390bb334955e982a560ad V1264
0xcc7: JUMP S7
---
Entry stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1385]
Stack pops: 8
Stack additions: []
Exit stack: [V13, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8]

================================

Block 0xcc8
[0xcc8:0xcde]
---
Predecessors: [0x216]
Successors: [0xcdf, 0xce3]
---
0xcc8 JUMPDEST
0xcc9 PUSH1 0x0
0xccb SLOAD
0xccc CALLER
0xccd PUSH1 0x1
0xccf PUSH1 0xa0
0xcd1 PUSH1 0x2
0xcd3 EXP
0xcd4 SUB
0xcd5 SWAP1
0xcd6 DUP2
0xcd7 AND
0xcd8 SWAP2
0xcd9 AND
0xcda EQ
0xcdb PUSH2 0xce3
0xcde JUMPI
---
0xcc8: JUMPDEST 
0xcc9: V1278 = 0x0
0xccb: V1279 = S[0x0]
0xccc: V1280 = CALLER
0xccd: V1281 = 0x1
0xccf: V1282 = 0xa0
0xcd1: V1283 = 0x2
0xcd3: V1284 = EXP 0x2 0xa0
0xcd4: V1285 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcd7: V1286 = AND 0xffffffffffffffffffffffffffffffffffffffff V1280
0xcd9: V1287 = AND V1279 0xffffffffffffffffffffffffffffffffffffffff
0xcda: V1288 = EQ V1287 V1286
0xcdb: V1289 = 0xce3
0xcde: JUMPI 0xce3 V1288
---
Entry stack: [V13, 0xd1, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V219]

================================

Block 0xcdf
[0xcdf:0xce2]
---
Predecessors: [0xcc8]
Successors: []
---
0xcdf PUSH1 0x0
0xce1 DUP1
0xce2 REVERT
---
0xcdf: V1290 = 0x0
0xce2: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V219]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V219]

================================

Block 0xce3
[0xce3:0xd11]
---
Predecessors: [0xcc8]
Successors: [0xd1]
---
0xce3 JUMPDEST
0xce4 PUSH1 0x1
0xce6 DUP1
0xce7 SLOAD
0xce8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcfd NOT
0xcfe AND
0xcff PUSH1 0x1
0xd01 PUSH1 0xa0
0xd03 PUSH1 0x2
0xd05 EXP
0xd06 SUB
0xd07 SWAP3
0xd08 SWAP1
0xd09 SWAP3
0xd0a AND
0xd0b SWAP2
0xd0c SWAP1
0xd0d SWAP2
0xd0e OR
0xd0f SWAP1
0xd10 SSTORE
0xd11 JUMP
---
0xce3: JUMPDEST 
0xce4: V1291 = 0x1
0xce7: V1292 = S[0x1]
0xce8: V1293 = 0xffffffffffffffffffffffffffffffffffffffff
0xcfd: V1294 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xcfe: V1295 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1292
0xcff: V1296 = 0x1
0xd01: V1297 = 0xa0
0xd03: V1298 = 0x2
0xd05: V1299 = EXP 0x2 0xa0
0xd06: V1300 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd0a: V1301 = AND 0xffffffffffffffffffffffffffffffffffffffff V219
0xd0e: V1302 = OR V1301 V1295
0xd10: S[0x1] = V1302
0xd11: JUMP 0xd1
---
Entry stack: [V13, 0xd1, V219]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xd12
[0xd12:0xd21]
---
Predecessors: [0x235]
Successors: [0x785]
---
0xd12 JUMPDEST
0xd13 PUSH2 0xd22
0xd16 CALLER
0xd17 DUP9
0xd18 DUP9
0xd19 DUP9
0xd1a DUP9
0xd1b DUP9
0xd1c DUP9
0xd1d DUP9
0xd1e PUSH2 0x785
0xd21 JUMP
---
0xd12: JUMPDEST 
0xd13: V1303 = 0xd22
0xd16: V1304 = CALLER
0xd1e: V1305 = 0x785
0xd21: JUMP 0x785
---
Entry stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, V247]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0xd22, V1304, S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0xd1, V227, V235, V237, V239, V243, V245, V247, 0xd22, V1304, V227, V235, V237, V239, V243, V245, V247]

================================

Block 0xd22
[0xd22:0xd2a]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0xd22 JUMPDEST
0xd23 POP
0xd24 POP
0xd25 POP
0xd26 POP
0xd27 POP
0xd28 POP
0xd29 POP
0xd2a JUMP
---
0xd22: JUMPDEST 
0xd2a: JUMP S7
---
Entry stack: []
Stack pops: 8
Stack additions: []
Exit stack: []

================================

Block 0xd2b
[0xd2b:0xd41]
---
Predecessors: [0x269]
Successors: [0xd42, 0xd46]
---
0xd2b JUMPDEST
0xd2c PUSH1 0x0
0xd2e SLOAD
0xd2f CALLER
0xd30 PUSH1 0x1
0xd32 PUSH1 0xa0
0xd34 PUSH1 0x2
0xd36 EXP
0xd37 SUB
0xd38 SWAP1
0xd39 DUP2
0xd3a AND
0xd3b SWAP2
0xd3c AND
0xd3d EQ
0xd3e PUSH2 0xd46
0xd41 JUMPI
---
0xd2b: JUMPDEST 
0xd2c: V1306 = 0x0
0xd2e: V1307 = S[0x0]
0xd2f: V1308 = CALLER
0xd30: V1309 = 0x1
0xd32: V1310 = 0xa0
0xd34: V1311 = 0x2
0xd36: V1312 = EXP 0x2 0xa0
0xd37: V1313 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd3a: V1314 = AND 0xffffffffffffffffffffffffffffffffffffffff V1308
0xd3c: V1315 = AND V1307 0xffffffffffffffffffffffffffffffffffffffff
0xd3d: V1316 = EQ V1315 V1314
0xd3e: V1317 = 0xd46
0xd41: JUMPI 0xd46 V1316
---
Entry stack: [V13, 0xd1, V261]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V261]

================================

Block 0xd42
[0xd42:0xd45]
---
Predecessors: [0xd2b]
Successors: []
---
0xd42 PUSH1 0x0
0xd44 DUP1
0xd45 REVERT
---
0xd42: V1318 = 0x0
0xd45: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V261]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V261]

================================

Block 0xd46
[0xd46:0xd74]
---
Predecessors: [0xd2b]
Successors: [0xd1]
---
0xd46 JUMPDEST
0xd47 PUSH1 0x2
0xd49 DUP1
0xd4a SLOAD
0xd4b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd60 NOT
0xd61 AND
0xd62 PUSH1 0x1
0xd64 PUSH1 0xa0
0xd66 PUSH1 0x2
0xd68 EXP
0xd69 SUB
0xd6a SWAP3
0xd6b SWAP1
0xd6c SWAP3
0xd6d AND
0xd6e SWAP2
0xd6f SWAP1
0xd70 SWAP2
0xd71 OR
0xd72 SWAP1
0xd73 SSTORE
0xd74 JUMP
---
0xd46: JUMPDEST 
0xd47: V1319 = 0x2
0xd4a: V1320 = S[0x2]
0xd4b: V1321 = 0xffffffffffffffffffffffffffffffffffffffff
0xd60: V1322 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xd61: V1323 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1320
0xd62: V1324 = 0x1
0xd64: V1325 = 0xa0
0xd66: V1326 = 0x2
0xd68: V1327 = EXP 0x2 0xa0
0xd69: V1328 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd6d: V1329 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0xd71: V1330 = OR V1329 V1323
0xd73: S[0x2] = V1330
0xd74: JUMP 0xd1
---
Entry stack: [V13, 0xd1, V261]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xd75
[0xd75:0xd8b]
---
Predecessors: [0x288]
Successors: [0xd8c, 0xd90]
---
0xd75 JUMPDEST
0xd76 PUSH1 0x0
0xd78 SLOAD
0xd79 CALLER
0xd7a PUSH1 0x1
0xd7c PUSH1 0xa0
0xd7e PUSH1 0x2
0xd80 EXP
0xd81 SUB
0xd82 SWAP1
0xd83 DUP2
0xd84 AND
0xd85 SWAP2
0xd86 AND
0xd87 EQ
0xd88 PUSH2 0xd90
0xd8b JUMPI
---
0xd75: JUMPDEST 
0xd76: V1331 = 0x0
0xd78: V1332 = S[0x0]
0xd79: V1333 = CALLER
0xd7a: V1334 = 0x1
0xd7c: V1335 = 0xa0
0xd7e: V1336 = 0x2
0xd80: V1337 = EXP 0x2 0xa0
0xd81: V1338 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd84: V1339 = AND 0xffffffffffffffffffffffffffffffffffffffff V1333
0xd86: V1340 = AND V1332 0xffffffffffffffffffffffffffffffffffffffff
0xd87: V1341 = EQ V1340 V1339
0xd88: V1342 = 0xd90
0xd8b: JUMPI 0xd90 V1341
---
Entry stack: [V13, 0xd1, V275]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V275]

================================

Block 0xd8c
[0xd8c:0xd8f]
---
Predecessors: [0xd75]
Successors: []
---
0xd8c PUSH1 0x0
0xd8e DUP1
0xd8f REVERT
---
0xd8c: V1343 = 0x0
0xd8f: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V275]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V275]

================================

Block 0xd90
[0xd90:0xda0]
---
Predecessors: [0xd75]
Successors: [0xda1, 0xda5]
---
0xd90 JUMPDEST
0xd91 PUSH1 0x1
0xd93 PUSH1 0xa0
0xd95 PUSH1 0x2
0xd97 EXP
0xd98 SUB
0xd99 DUP2
0xd9a AND
0xd9b ISZERO
0xd9c ISZERO
0xd9d PUSH2 0xda5
0xda0 JUMPI
---
0xd90: JUMPDEST 
0xd91: V1344 = 0x1
0xd93: V1345 = 0xa0
0xd95: V1346 = 0x2
0xd97: V1347 = EXP 0x2 0xa0
0xd98: V1348 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd9a: V1349 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0xd9b: V1350 = ISZERO V1349
0xd9c: V1351 = ISZERO V1350
0xd9d: V1352 = 0xda5
0xda0: JUMPI 0xda5 V1351
---
Entry stack: [V13, 0xd1, V275]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0xd1, V275]

================================

Block 0xda1
[0xda1:0xda4]
---
Predecessors: [0xd90]
Successors: []
---
0xda1 PUSH1 0x0
0xda3 DUP1
0xda4 REVERT
---
0xda1: V1353 = 0x0
0xda4: REVERT 0x0 0x0
---
Entry stack: [V13, 0xd1, V275]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0xd1, V275]

================================

Block 0xda5
[0xda5:0xe0f]
---
Predecessors: [0xd90]
Successors: [0xd1]
---
0xda5 JUMPDEST
0xda6 PUSH1 0x0
0xda8 SLOAD
0xda9 PUSH1 0x1
0xdab PUSH1 0xa0
0xdad PUSH1 0x2
0xdaf EXP
0xdb0 SUB
0xdb1 DUP1
0xdb2 DUP4
0xdb3 AND
0xdb4 SWAP2
0xdb5 AND
0xdb6 PUSH32 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xdd7 PUSH1 0x40
0xdd9 MLOAD
0xdda PUSH1 0x40
0xddc MLOAD
0xddd DUP1
0xdde SWAP2
0xddf SUB
0xde0 SWAP1
0xde1 LOG3
0xde2 PUSH1 0x0
0xde4 DUP1
0xde5 SLOAD
0xde6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdfb NOT
0xdfc AND
0xdfd PUSH1 0x1
0xdff PUSH1 0xa0
0xe01 PUSH1 0x2
0xe03 EXP
0xe04 SUB
0xe05 SWAP3
0xe06 SWAP1
0xe07 SWAP3
0xe08 AND
0xe09 SWAP2
0xe0a SWAP1
0xe0b SWAP2
0xe0c OR
0xe0d SWAP1
0xe0e SSTORE
0xe0f JUMP
---
0xda5: JUMPDEST 
0xda6: V1354 = 0x0
0xda8: V1355 = S[0x0]
0xda9: V1356 = 0x1
0xdab: V1357 = 0xa0
0xdad: V1358 = 0x2
0xdaf: V1359 = EXP 0x2 0xa0
0xdb0: V1360 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdb3: V1361 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0xdb5: V1362 = AND V1355 0xffffffffffffffffffffffffffffffffffffffff
0xdb6: V1363 = 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0
0xdd7: V1364 = 0x40
0xdd9: V1365 = M[0x40]
0xdda: V1366 = 0x40
0xddc: V1367 = M[0x40]
0xddf: V1368 = SUB V1365 V1367
0xde1: LOG V1367 V1368 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0 V1362 V1361
0xde2: V1369 = 0x0
0xde5: V1370 = S[0x0]
0xde6: V1371 = 0xffffffffffffffffffffffffffffffffffffffff
0xdfb: V1372 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xdfc: V1373 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1370
0xdfd: V1374 = 0x1
0xdff: V1375 = 0xa0
0xe01: V1376 = 0x2
0xe03: V1377 = EXP 0x2 0xa0
0xe04: V1378 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe08: V1379 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0xe0c: V1380 = OR V1379 V1373
0xe0e: S[0x0] = V1380
0xe0f: JUMP 0xd1
---
Entry stack: [V13, 0xd1, V275]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xe10
[0xe10:0xe1b]
---
Predecessors: [0x5a3, 0x8ea, 0x8f2, 0xbec]
Successors: [0xe1c, 0xe1d]
---
0xe10 JUMPDEST
0xe11 PUSH1 0x0
0xe13 DUP2
0xe14 DUP4
0xe15 DUP2
0xe16 ISZERO
0xe17 ISZERO
0xe18 PUSH2 0xe1d
0xe1b JUMPI
---
0xe10: JUMPDEST 
0xe11: V1381 = 0x0
0xe16: V1382 = ISZERO S0
0xe17: V1383 = ISZERO V1382
0xe18: V1384 = 0xe1d
0xe1b: JUMPI 0xe1d V1383
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S0, S1]
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, S0, S1]

================================

Block 0xe1c
[0xe1c:0xe1c]
---
Predecessors: [0xe10]
Successors: []
---
0xe1c INVALID
---
0xe1c: INVALID 
---
Entry stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, S1, S0]

================================

Block 0xe1d
[0xe1d:0xe24]
---
Predecessors: [0xe10]
Successors: [0x5ad, 0x8ea, 0x8f2, 0x901, 0x927, 0xbf6]
---
0xe1d JUMPDEST
0xe1e DIV
0xe1f SWAP4
0xe20 SWAP3
0xe21 POP
0xe22 POP
0xe23 POP
0xe24 JUMP
---
0xe1d: JUMPDEST 
0xe1e: V1385 = DIV S0 S1
0xe24: JUMP S5
---
Entry stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, 0x0, S1, S0]
Stack pops: 6
Stack additions: [V1385]
Exit stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V1385]

================================

Block 0xe25
[0xe25:0xe2f]
---
Predecessors: [0x8db, 0x908, 0x918]
Successors: [0xe30, 0xe38]
---
0xe25 JUMPDEST
0xe26 PUSH1 0x0
0xe28 DUP1
0xe29 DUP4
0xe2a ISZERO
0xe2b ISZERO
0xe2c PUSH2 0xe38
0xe2f JUMPI
---
0xe25: JUMPDEST 
0xe26: V1386 = 0x0
0xe2a: V1387 = ISZERO S1
0xe2b: V1388 = ISZERO V1387
0xe2c: V1389 = 0xe38
0xe2f: JUMPI 0xe38 V1388
---
Entry stack: [V13, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V13, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, 0x0]

================================

Block 0xe30
[0xe30:0xe37]
---
Predecessors: [0xe25]
Successors: [0xe54]
---
0xe30 PUSH1 0x0
0xe32 SWAP2
0xe33 POP
0xe34 PUSH2 0xe54
0xe37 JUMP
---
0xe30: V1390 = 0x0
0xe34: V1391 = 0xe54
0xe37: JUMP 0xe54
---
Entry stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 2
Stack additions: [0x0, S0]
Exit stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]

================================

Block 0xe38
[0xe38:0xe46]
---
Predecessors: [0xe25]
Successors: [0xe47, 0xe48]
---
0xe38 JUMPDEST
0xe39 POP
0xe3a DUP3
0xe3b DUP3
0xe3c MUL
0xe3d DUP3
0xe3e DUP5
0xe3f DUP3
0xe40 DUP2
0xe41 ISZERO
0xe42 ISZERO
0xe43 PUSH2 0xe48
0xe46 JUMPI
---
0xe38: JUMPDEST 
0xe3c: V1392 = MUL S2 S3
0xe41: V1393 = ISZERO S3
0xe42: V1394 = ISZERO V1393
0xe43: V1395 = 0xe48
0xe46: JUMPI 0xe48 V1394
---
Entry stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, V1392, S2, S3, V1392]
Exit stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V1392, S2, S3, V1392]

================================

Block 0xe47
[0xe47:0xe47]
---
Predecessors: [0xe38]
Successors: []
---
0xe47 INVALID
---
0xe47: INVALID 
---
Entry stack: [V13, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V1392, S2, S1, V1392]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V1392, S2, S1, V1392]

================================

Block 0xe48
[0xe48:0xe4e]
---
Predecessors: [0xe38]
Successors: [0xe4f, 0xe50]
---
0xe48 JUMPDEST
0xe49 DIV
0xe4a EQ
0xe4b PUSH2 0xe50
0xe4e JUMPI
---
0xe48: JUMPDEST 
0xe49: V1396 = DIV V1392 S1
0xe4a: V1397 = EQ V1396 S2
0xe4b: V1398 = 0xe50
0xe4e: JUMPI 0xe50 V1397
---
Entry stack: [V13, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V1392, S2, S1, V1392]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S30, S29, S28, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V1392]

================================

Block 0xe4f
[0xe4f:0xe4f]
---
Predecessors: [0xe48]
Successors: []
---
0xe4f INVALID
---
0xe4f: INVALID 
---
Entry stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]

================================

Block 0xe50
[0xe50:0xe53]
---
Predecessors: [0xe48]
Successors: [0xe54]
---
0xe50 JUMPDEST
0xe51 DUP1
0xe52 SWAP2
0xe53 POP
---
0xe50: JUMPDEST 
---
Entry stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0, S0]

================================

Block 0xe54
[0xe54:0xe5a]
---
Predecessors: [0xe30, 0xe50]
Successors: [0x8ea, 0x8f2, 0x901, 0x918, 0x927]
---
0xe54 JUMPDEST
0xe55 POP
0xe56 SWAP3
0xe57 SWAP2
0xe58 POP
0xe59 POP
0xe5a JUMP
---
0xe54: JUMPDEST 
0xe5a: JUMP S4
---
Entry stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S1]

================================

Block 0xe5b
[0xe5b:0xe8e]
---
Predecessors: []
Successors: []
---
0xe5b STOP
0xe5c LOG1
0xe5d PUSH6 0x627a7a723058
0xe64 SHA3
0xe65 GT
0xe66 MISSING 0xcd
0xe67 SWAP8
0xe68 DUP2
0xe69 LT
0xe6a MISSING 0xde
0xe6b MISSING 0xe3
0xe6c MISSING 0xc7
0xe6d MISSING 0xbd
0xe6e DUP5
0xe6f MISSING 0xec
0xe70 MISSING 0xef
0xe71 MISSING 0xc8
0xe72 PUSH28 0x4a6d36f99e6ee23fe2b88d5d7eb6cb35ab3d0029
---
0xe5b: STOP 
0xe5c: LOG S0 S1 S2
0xe5d: V1399 = 0x627a7a723058
0xe64: V1400 = SHA3 0x627a7a723058 S3
0xe65: V1401 = GT V1400 S4
0xe66: MISSING 0xcd
0xe69: V1402 = LT S1 S8
0xe6a: MISSING 0xde
0xe6b: MISSING 0xe3
0xe6c: MISSING 0xc7
0xe6d: MISSING 0xbd
0xe6f: MISSING 0xec
0xe70: MISSING 0xef
0xe71: MISSING 0xc8
0xe72: V1403 = 0x4a6d36f99e6ee23fe2b88d5d7eb6cb35ab3d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V1401, V1402, S1, S2, S3, S4, S5, S6, S7, S0, S4, S0, S1, S2, S3, S4, 0x4a6d36f99e6ee23fe2b88d5d7eb6cb35ab3d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x320d4534
Entry block: 0xbb
Exit block: 0xd1
Body: 0xbb, 0xc2, 0xc6, 0xd1, 0x29c, 0x2b3, 0x2b7

Function 1:
Public function signature: 0x3bfecbf0
Entry block: 0xd3
Exit block: 0xd1
Body: 0xd1, 0xd3, 0xda, 0xde, 0x2bc, 0x2d3, 0x2d7

Function 2:
Public function signature: 0x41c0e1b5
Entry block: 0xf2
Exit block: 0x4d8
Body: 0xf2, 0xf9, 0xfd, 0x306, 0x320, 0x324, 0x370, 0x374, 0x37d, 0x381, 0x3da, 0x3de, 0x3e7, 0x3eb, 0x450, 0x454, 0x45d, 0x461, 0x472, 0x4cb, 0x4cf, 0x4d8, 0x4dc, 0x4e7, 0x4ee, 0x4ef

Function 3:
Public function signature: 0x4dd60ff9
Entry block: 0x105
Exit block: 0xd1
Body: 0xd1, 0x105, 0x4fd, 0x509, 0x50d, 0x579, 0x57d, 0x59f, 0x5a3, 0x5ad, 0x602, 0x606, 0x60f, 0x613, 0x624, 0x625

Function 4:
Public function signature: 0x51cff8d9
Entry block: 0x11f
Exit block: 0xd1
Body: 0xd1, 0x11f, 0x126, 0x12a, 0x67f, 0x699, 0x69d, 0x6ea, 0x6ee, 0x6f7, 0x6fb, 0x75d, 0x761, 0x76a, 0x76e, 0x77f, 0x780

Function 5:
Public function signature: 0x68034902
Entry block: 0x13e
Exit block: 0xa08
Body: 0xd1, 0x13e, 0x145, 0x149, 0x785, 0x793, 0x797, 0x83e, 0x842, 0x864, 0x868, 0x873, 0x877, 0x8b3, 0x8b7, 0x8c0, 0x8c4, 0x8db, 0x8ea, 0x908, 0x918, 0x927, 0x92a, 0x989, 0x98d, 0x996, 0x99a, 0x9ab, 0x9fb, 0x9ff, 0xa08, 0xa0c, 0xa17, 0xa1e, 0xa1f

Function 6:
Public function signature: 0x7362377b
Entry block: 0x179
Exit block: 0xd1
Body: 0xd1, 0x179, 0x180, 0x184, 0xa88, 0xa9f, 0xaa3, 0xad8, 0xadc

Function 7:
Public function signature: 0x8da5cb5b
Entry block: 0x18c
Exit block: 0x19f
Body: 0x18c, 0x193, 0x197, 0x19f, 0xade

Function 8:
Public function signature: 0x8f4ffcb1
Entry block: 0x1bb
Exit block: 0xd1
Body: 0xd1, 0x1bb, 0x1c2, 0x1c6, 0xaed, 0xb03, 0xb07, 0xb3e, 0xb3f

Function 9:
Public function signature: 0xcee73630
Entry block: 0x1f1
Exit block: 0xd1
Body: 0xd1, 0x1f1, 0xb46, 0xb52, 0xb56, 0xbc2, 0xbc6, 0xbe8, 0xbec, 0xbf6, 0xc4b, 0xc4f, 0xc58, 0xc5c, 0xc6d, 0xc6e

Function 10:
Public function signature: 0xd0aff67d
Entry block: 0x20b
Exit block: 0xd1
Body: 0xd1, 0x20b, 0x212, 0x216, 0xcc8, 0xcdf, 0xce3

Function 11:
Public function signature: 0xe960f8d0
Entry block: 0x22a
Exit block: 0xa08
Body: 0xd1, 0x22a, 0x231, 0x235, 0x785, 0x793, 0x797, 0x83e, 0x842, 0x864, 0x868, 0x873, 0x877, 0x8b3, 0x8b7, 0x8c0, 0x8c4, 0x8db, 0x8ea, 0x908, 0x918, 0x927, 0x92a, 0x989, 0x98d, 0x996, 0x99a, 0x9ab, 0x9fb, 0x9ff, 0xa08, 0xa0c, 0xa17, 0xa1e, 0xa1f, 0xd12

Function 12:
Public function signature: 0xeaaf88c1
Entry block: 0x25e
Exit block: 0xd1
Body: 0xd1, 0x25e, 0x265, 0x269, 0xd2b, 0xd42, 0xd46

Function 13:
Public function signature: 0xf2fde38b
Entry block: 0x27d
Exit block: 0xd1
Body: 0xd1, 0x27d, 0x284, 0x288, 0xd75, 0xd8c, 0xd90, 0xda1, 0xda5

Function 14:
Public fallback function
Entry block: 0xb6
Exit block: 0xb6
Body: 0xb6

Function 15:
Private function
Entry block: 0xe10
Exit block: 0xe1d
Body: 0x8ea, 0x8f2, 0xe10, 0xe1d

Function 16:
Private function
Entry block: 0xe25
Exit block: 0xe54
Body: 0x8f2, 0xe10, 0xe1d, 0xe25, 0xe30, 0xe38, 0xe48, 0xe50, 0xe54

