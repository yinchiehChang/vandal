Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x10]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLVALUE
0x6 DUP1
0x7 ISZERO
0x8 PUSH2 0x10
0xb JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = CALLVALUE
0x7: V3 = ISZERO V2
0x8: V4 = 0x10
0xb: JUMPI 0x10 V3
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0xc
[0xc:0xf]
---
Predecessors: [0x0]
Successors: []
---
0xc PUSH1 0x0
0xe DUP1
0xf REVERT
---
0xc: V5 = 0x0
0xf: REVERT 0x0 0x0
---
Entry stack: [V2]
Stack pops: 0
Stack additions: []
Exit stack: [V2]

================================

Block 0x10
[0x10:0x19]
---
Predecessors: [0x0]
Successors: [0x1a, 0x100]
---
0x10 JUMPDEST
0x11 POP
0x12 PUSH1 0x4
0x14 CALLDATASIZE
0x15 LT
0x16 PUSH2 0x100
0x19 JUMPI
---
0x10: JUMPDEST 
0x12: V6 = 0x4
0x14: V7 = CALLDATASIZE
0x15: V8 = LT V7 0x4
0x16: V9 = 0x100
0x19: JUMPI 0x100 V8
---
Entry stack: [V2]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a
[0x1a:0x2a]
---
Predecessors: [0x10]
Successors: [0x2b, 0x97]
---
0x1a PUSH1 0x0
0x1c CALLDATALOAD
0x1d PUSH1 0xe0
0x1f SHR
0x20 DUP1
0x21 PUSH4 0x70a08231
0x26 GT
0x27 PUSH2 0x97
0x2a JUMPI
---
0x1a: V10 = 0x0
0x1c: V11 = CALLDATALOAD 0x0
0x1d: V12 = 0xe0
0x1f: V13 = SHR 0xe0 V11
0x21: V14 = 0x70a08231
0x26: V15 = GT 0x70a08231 V13
0x27: V16 = 0x97
0x2a: JUMPI 0x97 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x2b
[0x2b:0x35]
---
Predecessors: [0x1a]
Successors: [0x36, 0x66]
---
0x2b DUP1
0x2c PUSH4 0xa9059cbb
0x31 GT
0x32 PUSH2 0x66
0x35 JUMPI
---
0x2c: V17 = 0xa9059cbb
0x31: V18 = GT 0xa9059cbb V13
0x32: V19 = 0x66
0x35: JUMPI 0x66 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x36
[0x36:0x40]
---
Predecessors: [0x2b]
Successors: [0x41, 0x49a]
---
0x36 DUP1
0x37 PUSH4 0xa9059cbb
0x3c EQ
0x3d PUSH2 0x49a
0x40 JUMPI
---
0x37: V20 = 0xa9059cbb
0x3c: V21 = EQ 0xa9059cbb V13
0x3d: V22 = 0x49a
0x40: JUMPI 0x49a V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0x36]
Successors: [0x4c, 0x4c6]
---
0x41 DUP1
0x42 PUSH4 0xb2bdfa7b
0x47 EQ
0x48 PUSH2 0x4c6
0x4b JUMPI
---
0x42: V23 = 0xb2bdfa7b
0x47: V24 = EQ 0xb2bdfa7b V13
0x48: V25 = 0x4c6
0x4b: JUMPI 0x4c6 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x4ea]
---
0x4c DUP1
0x4d PUSH4 0xdd62ed3e
0x52 EQ
0x53 PUSH2 0x4ea
0x56 JUMPI
---
0x4d: V26 = 0xdd62ed3e
0x52: V27 = EQ 0xdd62ed3e V13
0x53: V28 = 0x4ea
0x56: JUMPI 0x4ea V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x518]
---
0x57 DUP1
0x58 PUSH4 0xe1268115
0x5d EQ
0x5e PUSH2 0x518
0x61 JUMPI
---
0x58: V29 = 0xe1268115
0x5d: V30 = EQ 0xe1268115 V13
0x5e: V31 = 0x518
0x61: JUMPI 0x518 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x62
[0x62:0x65]
---
Predecessors: [0x57]
Successors: [0x100]
---
0x62 PUSH2 0x100
0x65 JUMP
---
0x62: V32 = 0x100
0x65: JUMP 0x100
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x66
[0x66:0x71]
---
Predecessors: [0x2b]
Successors: [0x72, 0x429]
---
0x66 JUMPDEST
0x67 DUP1
0x68 PUSH4 0x70a08231
0x6d EQ
0x6e PUSH2 0x429
0x71 JUMPI
---
0x66: JUMPDEST 
0x68: V33 = 0x70a08231
0x6d: V34 = EQ 0x70a08231 V13
0x6e: V35 = 0x429
0x71: JUMPI 0x429 V34
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x66]
Successors: [0x7d, 0x44f]
---
0x72 DUP1
0x73 PUSH4 0x80b2122e
0x78 EQ
0x79 PUSH2 0x44f
0x7c JUMPI
---
0x73: V36 = 0x80b2122e
0x78: V37 = EQ 0x80b2122e V13
0x79: V38 = 0x44f
0x7c: JUMPI 0x44f V37
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x475]
---
0x7d DUP1
0x7e PUSH4 0x95d89b41
0x83 EQ
0x84 PUSH2 0x475
0x87 JUMPI
---
0x7e: V39 = 0x95d89b41
0x83: V40 = EQ 0x95d89b41 V13
0x84: V41 = 0x475
0x87: JUMPI 0x475 V40
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x47d]
---
0x88 DUP1
0x89 PUSH4 0x9b1f9e74
0x8e EQ
0x8f PUSH2 0x47d
0x92 JUMPI
---
0x89: V42 = 0x9b1f9e74
0x8e: V43 = EQ 0x9b1f9e74 V13
0x8f: V44 = 0x47d
0x92: JUMPI 0x47d V43
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x93
[0x93:0x96]
---
Predecessors: [0x88]
Successors: [0x100]
---
0x93 PUSH2 0x100
0x96 JUMP
---
0x93: V45 = 0x100
0x96: JUMP 0x100
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x97
[0x97:0xa2]
---
Predecessors: [0x1a]
Successors: [0xa3, 0xd3]
---
0x97 JUMPDEST
0x98 DUP1
0x99 PUSH4 0x23b872dd
0x9e GT
0x9f PUSH2 0xd3
0xa2 JUMPI
---
0x97: JUMPDEST 
0x99: V46 = 0x23b872dd
0x9e: V47 = GT 0x23b872dd V13
0x9f: V48 = 0xd3
0xa2: JUMPI 0xd3 V47
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x97]
Successors: [0xae, 0x27f]
---
0xa3 DUP1
0xa4 PUSH4 0x23b872dd
0xa9 EQ
0xaa PUSH2 0x27f
0xad JUMPI
---
0xa4: V49 = 0x23b872dd
0xa9: V50 = EQ 0x23b872dd V13
0xaa: V51 = 0x27f
0xad: JUMPI 0x27f V50
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x2b5]
---
0xae DUP1
0xaf PUSH4 0x313ce567
0xb4 EQ
0xb5 PUSH2 0x2b5
0xb8 JUMPI
---
0xaf: V52 = 0x313ce567
0xb4: V53 = EQ 0x313ce567 V13
0xb5: V54 = 0x2b5
0xb8: JUMPI 0x2b5 V53
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x2d3]
---
0xb9 DUP1
0xba PUSH4 0x4e6ec247
0xbf EQ
0xc0 PUSH2 0x2d3
0xc3 JUMPI
---
0xba: V55 = 0x4e6ec247
0xbf: V56 = EQ 0x4e6ec247 V13
0xc0: V57 = 0x2d3
0xc3: JUMPI 0x2d3 V56
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x2ff]
---
0xc4 DUP1
0xc5 PUSH4 0x52b0f196
0xca EQ
0xcb PUSH2 0x2ff
0xce JUMPI
---
0xc5: V58 = 0x52b0f196
0xca: V59 = EQ 0x52b0f196 V13
0xcb: V60 = 0x2ff
0xce: JUMPI 0x2ff V59
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcf
[0xcf:0xd2]
---
Predecessors: [0xc4]
Successors: [0x100]
---
0xcf PUSH2 0x100
0xd2 JUMP
---
0xcf: V61 = 0x100
0xd2: JUMP 0x100
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd3
[0xd3:0xde]
---
Predecessors: [0x97]
Successors: [0xdf, 0x105]
---
0xd3 JUMPDEST
0xd4 DUP1
0xd5 PUSH4 0x43fa39e
0xda EQ
0xdb PUSH2 0x105
0xde JUMPI
---
0xd3: JUMPDEST 
0xd5: V62 = 0x43fa39e
0xda: V63 = EQ 0x43fa39e V13
0xdb: V64 = 0x105
0xde: JUMPI 0x105 V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xdf
[0xdf:0xe9]
---
Predecessors: [0xd3]
Successors: [0xea, 0x1a8]
---
0xdf DUP1
0xe0 PUSH4 0x6fdde03
0xe5 EQ
0xe6 PUSH2 0x1a8
0xe9 JUMPI
---
0xe0: V65 = 0x6fdde03
0xe5: V66 = EQ 0x6fdde03 V13
0xe6: V67 = 0x1a8
0xe9: JUMPI 0x1a8 V66
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xea
[0xea:0xf4]
---
Predecessors: [0xdf]
Successors: [0xf5, 0x225]
---
0xea DUP1
0xeb PUSH4 0x95ea7b3
0xf0 EQ
0xf1 PUSH2 0x225
0xf4 JUMPI
---
0xeb: V68 = 0x95ea7b3
0xf0: V69 = EQ 0x95ea7b3 V13
0xf1: V70 = 0x225
0xf4: JUMPI 0x225 V69
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xf5
[0xf5:0xff]
---
Predecessors: [0xea]
Successors: [0x100, 0x265]
---
0xf5 DUP1
0xf6 PUSH4 0x18160ddd
0xfb EQ
0xfc PUSH2 0x265
0xff JUMPI
---
0xf6: V71 = 0x18160ddd
0xfb: V72 = EQ 0x18160ddd V13
0xfc: V73 = 0x265
0xff: JUMPI 0x265 V72
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x100
[0x100:0x104]
---
Predecessors: [0x10, 0x62, 0x93, 0xcf, 0xf5]
Successors: []
---
0x100 JUMPDEST
0x101 PUSH1 0x0
0x103 DUP1
0x104 REVERT
---
0x100: JUMPDEST 
0x101: V74 = 0x0
0x104: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x105
[0x105:0x116]
---
Predecessors: [0xd3]
Successors: [0x117, 0x11b]
---
0x105 JUMPDEST
0x106 PUSH2 0x1a6
0x109 PUSH1 0x4
0x10b DUP1
0x10c CALLDATASIZE
0x10d SUB
0x10e PUSH1 0x20
0x110 DUP2
0x111 LT
0x112 ISZERO
0x113 PUSH2 0x11b
0x116 JUMPI
---
0x105: JUMPDEST 
0x106: V75 = 0x1a6
0x109: V76 = 0x4
0x10c: V77 = CALLDATASIZE
0x10d: V78 = SUB V77 0x4
0x10e: V79 = 0x20
0x111: V80 = LT V78 0x20
0x112: V81 = ISZERO V80
0x113: V82 = 0x11b
0x116: JUMPI 0x11b V81
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1a6, 0x4, V78]
Exit stack: [V13, 0x1a6, 0x4, V78]

================================

Block 0x117
[0x117:0x11a]
---
Predecessors: [0x105]
Successors: []
---
0x117 PUSH1 0x0
0x119 DUP1
0x11a REVERT
---
0x117: V83 = 0x0
0x11a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, 0x4, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, 0x4, V78]

================================

Block 0x11b
[0x11b:0x130]
---
Predecessors: [0x105]
Successors: [0x131, 0x135]
---
0x11b JUMPDEST
0x11c DUP2
0x11d ADD
0x11e SWAP1
0x11f PUSH1 0x20
0x121 DUP2
0x122 ADD
0x123 DUP2
0x124 CALLDATALOAD
0x125 PUSH1 0x1
0x127 PUSH1 0x20
0x129 SHL
0x12a DUP2
0x12b GT
0x12c ISZERO
0x12d PUSH2 0x135
0x130 JUMPI
---
0x11b: JUMPDEST 
0x11d: V84 = ADD 0x4 V78
0x11f: V85 = 0x20
0x122: V86 = ADD 0x4 0x20
0x124: V87 = CALLDATALOAD 0x4
0x125: V88 = 0x1
0x127: V89 = 0x20
0x129: V90 = SHL 0x20 0x1
0x12b: V91 = GT V87 0x100000000
0x12c: V92 = ISZERO V91
0x12d: V93 = 0x135
0x130: JUMPI 0x135 V92
---
Entry stack: [V13, 0x1a6, 0x4, V78]
Stack pops: 2
Stack additions: [V84, S1, 0x24, V87]
Exit stack: [V13, 0x1a6, V84, 0x4, 0x24, V87]

================================

Block 0x131
[0x131:0x134]
---
Predecessors: [0x11b]
Successors: []
---
0x131 PUSH1 0x0
0x133 DUP1
0x134 REVERT
---
0x131: V94 = 0x0
0x134: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, V84, 0x4, 0x24, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V84, 0x4, 0x24, V87]

================================

Block 0x135
[0x135:0x142]
---
Predecessors: [0x11b]
Successors: [0x143, 0x147]
---
0x135 JUMPDEST
0x136 DUP3
0x137 ADD
0x138 DUP4
0x139 PUSH1 0x20
0x13b DUP3
0x13c ADD
0x13d GT
0x13e ISZERO
0x13f PUSH2 0x147
0x142 JUMPI
---
0x135: JUMPDEST 
0x137: V95 = ADD 0x4 V87
0x139: V96 = 0x20
0x13c: V97 = ADD V95 0x20
0x13d: V98 = GT V97 V84
0x13e: V99 = ISZERO V98
0x13f: V100 = 0x147
0x142: JUMPI 0x147 V99
---
Entry stack: [V13, 0x1a6, V84, 0x4, 0x24, V87]
Stack pops: 4
Stack additions: [S3, S2, S1, V95]
Exit stack: [V13, 0x1a6, V84, 0x4, 0x24, V95]

================================

Block 0x143
[0x143:0x146]
---
Predecessors: [0x135]
Successors: []
---
0x143 PUSH1 0x0
0x145 DUP1
0x146 REVERT
---
0x143: V101 = 0x0
0x146: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, V84, 0x4, 0x24, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V84, 0x4, 0x24, V95]

================================

Block 0x147
[0x147:0x163]
---
Predecessors: [0x135]
Successors: [0x164, 0x168]
---
0x147 JUMPDEST
0x148 DUP1
0x149 CALLDATALOAD
0x14a SWAP1
0x14b PUSH1 0x20
0x14d ADD
0x14e SWAP2
0x14f DUP5
0x150 PUSH1 0x20
0x152 DUP4
0x153 MUL
0x154 DUP5
0x155 ADD
0x156 GT
0x157 PUSH1 0x1
0x159 PUSH1 0x20
0x15b SHL
0x15c DUP4
0x15d GT
0x15e OR
0x15f ISZERO
0x160 PUSH2 0x168
0x163 JUMPI
---
0x147: JUMPDEST 
0x149: V102 = CALLDATALOAD V95
0x14b: V103 = 0x20
0x14d: V104 = ADD 0x20 V95
0x150: V105 = 0x20
0x153: V106 = MUL V102 0x20
0x155: V107 = ADD V104 V106
0x156: V108 = GT V107 V84
0x157: V109 = 0x1
0x159: V110 = 0x20
0x15b: V111 = SHL 0x20 0x1
0x15d: V112 = GT V102 0x100000000
0x15e: V113 = OR V112 V108
0x15f: V114 = ISZERO V113
0x160: V115 = 0x168
0x163: JUMPI 0x168 V114
---
Entry stack: [V13, 0x1a6, V84, 0x4, 0x24, V95]
Stack pops: 4
Stack additions: [S3, S2, V104, V102, S1]
Exit stack: [V13, 0x1a6, V84, 0x4, V104, V102, 0x24]

================================

Block 0x164
[0x164:0x167]
---
Predecessors: [0x147]
Successors: []
---
0x164 PUSH1 0x0
0x166 DUP1
0x167 REVERT
---
0x164: V116 = 0x0
0x167: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, V84, 0x4, V104, V102, 0x24]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V84, 0x4, V104, V102, 0x24]

================================

Block 0x168
[0x168:0x1a5]
---
Predecessors: [0x147]
Successors: [0x5b9]
---
0x168 JUMPDEST
0x169 SWAP2
0x16a SWAP1
0x16b DUP1
0x16c DUP1
0x16d PUSH1 0x20
0x16f MUL
0x170 PUSH1 0x20
0x172 ADD
0x173 PUSH1 0x40
0x175 MLOAD
0x176 SWAP1
0x177 DUP2
0x178 ADD
0x179 PUSH1 0x40
0x17b MSTORE
0x17c DUP1
0x17d SWAP4
0x17e SWAP3
0x17f SWAP2
0x180 SWAP1
0x181 DUP2
0x182 DUP2
0x183 MSTORE
0x184 PUSH1 0x20
0x186 ADD
0x187 DUP4
0x188 DUP4
0x189 PUSH1 0x20
0x18b MUL
0x18c DUP1
0x18d DUP3
0x18e DUP5
0x18f CALLDATACOPY
0x190 PUSH1 0x0
0x192 SWAP3
0x193 ADD
0x194 SWAP2
0x195 SWAP1
0x196 SWAP2
0x197 MSTORE
0x198 POP
0x199 SWAP3
0x19a SWAP6
0x19b POP
0x19c PUSH2 0x5b9
0x19f SWAP5
0x1a0 POP
0x1a1 POP
0x1a2 POP
0x1a3 POP
0x1a4 POP
0x1a5 JUMP
---
0x168: JUMPDEST 
0x16d: V117 = 0x20
0x16f: V118 = MUL 0x20 V102
0x170: V119 = 0x20
0x172: V120 = ADD 0x20 V118
0x173: V121 = 0x40
0x175: V122 = M[0x40]
0x178: V123 = ADD V122 V120
0x179: V124 = 0x40
0x17b: M[0x40] = V123
0x183: M[V122] = V102
0x184: V125 = 0x20
0x186: V126 = ADD 0x20 V122
0x189: V127 = 0x20
0x18b: V128 = MUL 0x20 V102
0x18f: CALLDATACOPY V126 V104 V128
0x190: V129 = 0x0
0x193: V130 = ADD V126 V128
0x197: M[V130] = 0x0
0x19c: V131 = 0x5b9
0x1a5: JUMP 0x5b9
---
Entry stack: [V13, 0x1a6, V84, 0x4, V104, V102, 0x24]
Stack pops: 5
Stack additions: [V122]
Exit stack: [V13, 0x1a6, V122]

================================

Block 0x1a6
[0x1a6:0x1a7]
---
Predecessors: [0x6aa, 0x7e4, 0x88b, 0x9e8, 0xa51, 0xb55]
Successors: []
---
0x1a6 JUMPDEST
0x1a7 STOP
---
0x1a6: JUMPDEST 
0x1a7: STOP 
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x758, 0x774}, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x0, 0x758, 0x774}, S3, S2, S1, S0]

================================

Block 0x1a8
[0x1a8:0x1af]
---
Predecessors: [0xdf]
Successors: [0x6ae]
---
0x1a8 JUMPDEST
0x1a9 PUSH2 0x1b0
0x1ac PUSH2 0x6ae
0x1af JUMP
---
0x1a8: JUMPDEST 
0x1a9: V132 = 0x1b0
0x1ac: V133 = 0x6ae
0x1af: JUMP 0x6ae
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1b0]
Exit stack: [V13, 0x1b0]

================================

Block 0x1b0
[0x1b0:0x1d1]
---
Predecessors: [0x73a]
Successors: [0x1d2]
---
0x1b0 JUMPDEST
0x1b1 PUSH1 0x40
0x1b3 DUP1
0x1b4 MLOAD
0x1b5 PUSH1 0x20
0x1b7 DUP1
0x1b8 DUP3
0x1b9 MSTORE
0x1ba DUP4
0x1bb MLOAD
0x1bc DUP2
0x1bd DUP4
0x1be ADD
0x1bf MSTORE
0x1c0 DUP4
0x1c1 MLOAD
0x1c2 SWAP2
0x1c3 SWAP3
0x1c4 DUP4
0x1c5 SWAP3
0x1c6 SWAP1
0x1c7 DUP4
0x1c8 ADD
0x1c9 SWAP2
0x1ca DUP6
0x1cb ADD
0x1cc SWAP1
0x1cd DUP1
0x1ce DUP4
0x1cf DUP4
0x1d0 PUSH1 0x0
---
0x1b0: JUMPDEST 
0x1b1: V134 = 0x40
0x1b4: V135 = M[0x40]
0x1b5: V136 = 0x20
0x1b9: M[V135] = 0x20
0x1bb: V137 = M[S0]
0x1be: V138 = ADD V135 0x20
0x1bf: M[V138] = V137
0x1c1: V139 = M[S0]
0x1c8: V140 = ADD V135 0x40
0x1cb: V141 = ADD S0 0x20
0x1d0: V142 = 0x0
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: [S0, V135, V135, V140, V141, V139, V139, V140, V141, 0x0]
Exit stack: [V13, S0, V135, V135, V140, V141, V139, V139, V140, V141, 0x0]

================================

Block 0x1d2
[0x1d2:0x1da]
---
Predecessors: [0x1b0, 0x1db]
Successors: [0x1db, 0x1ea]
---
0x1d2 JUMPDEST
0x1d3 DUP4
0x1d4 DUP2
0x1d5 LT
0x1d6 ISZERO
0x1d7 PUSH2 0x1ea
0x1da JUMPI
---
0x1d2: JUMPDEST 
0x1d5: V143 = LT S0 V139
0x1d6: V144 = ISZERO V143
0x1d7: V145 = 0x1ea
0x1da: JUMPI 0x1ea V144
---
Entry stack: [V13, S9, V135, V135, V140, V141, V139, V139, V140, V141, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S9, V135, V135, V140, V141, V139, V139, V140, V141, S0]

================================

Block 0x1db
[0x1db:0x1e9]
---
Predecessors: [0x1d2]
Successors: [0x1d2]
---
0x1db DUP2
0x1dc DUP2
0x1dd ADD
0x1de MLOAD
0x1df DUP4
0x1e0 DUP3
0x1e1 ADD
0x1e2 MSTORE
0x1e3 PUSH1 0x20
0x1e5 ADD
0x1e6 PUSH2 0x1d2
0x1e9 JUMP
---
0x1dd: V146 = ADD S0 V141
0x1de: V147 = M[V146]
0x1e1: V148 = ADD S0 V140
0x1e2: M[V148] = V147
0x1e3: V149 = 0x20
0x1e5: V150 = ADD 0x20 S0
0x1e6: V151 = 0x1d2
0x1e9: JUMP 0x1d2
---
Entry stack: [V13, S9, V135, V135, V140, V141, V139, V139, V140, V141, S0]
Stack pops: 3
Stack additions: [S2, S1, V150]
Exit stack: [V13, S9, V135, V135, V140, V141, V139, V139, V140, V141, V150]

================================

Block 0x1ea
[0x1ea:0x1fd]
---
Predecessors: [0x1d2]
Successors: [0x1fe, 0x217]
---
0x1ea JUMPDEST
0x1eb POP
0x1ec POP
0x1ed POP
0x1ee POP
0x1ef SWAP1
0x1f0 POP
0x1f1 SWAP1
0x1f2 DUP2
0x1f3 ADD
0x1f4 SWAP1
0x1f5 PUSH1 0x1f
0x1f7 AND
0x1f8 DUP1
0x1f9 ISZERO
0x1fa PUSH2 0x217
0x1fd JUMPI
---
0x1ea: JUMPDEST 
0x1f3: V152 = ADD V139 V140
0x1f5: V153 = 0x1f
0x1f7: V154 = AND 0x1f V139
0x1f9: V155 = ISZERO V154
0x1fa: V156 = 0x217
0x1fd: JUMPI 0x217 V155
---
Entry stack: [V13, S9, V135, V135, V140, V141, V139, V139, V140, V141, S0]
Stack pops: 7
Stack additions: [V152, V154]
Exit stack: [V13, S9, V135, V135, V152, V154]

================================

Block 0x1fe
[0x1fe:0x216]
---
Predecessors: [0x1ea]
Successors: [0x217]
---
0x1fe DUP1
0x1ff DUP3
0x200 SUB
0x201 DUP1
0x202 MLOAD
0x203 PUSH1 0x1
0x205 DUP4
0x206 PUSH1 0x20
0x208 SUB
0x209 PUSH2 0x100
0x20c EXP
0x20d SUB
0x20e NOT
0x20f AND
0x210 DUP2
0x211 MSTORE
0x212 PUSH1 0x20
0x214 ADD
0x215 SWAP2
0x216 POP
---
0x200: V157 = SUB V152 V154
0x202: V158 = M[V157]
0x203: V159 = 0x1
0x206: V160 = 0x20
0x208: V161 = SUB 0x20 V154
0x209: V162 = 0x100
0x20c: V163 = EXP 0x100 V161
0x20d: V164 = SUB V163 0x1
0x20e: V165 = NOT V164
0x20f: V166 = AND V165 V158
0x211: M[V157] = V166
0x212: V167 = 0x20
0x214: V168 = ADD 0x20 V157
---
Entry stack: [V13, S4, V135, V135, V152, V154]
Stack pops: 2
Stack additions: [V168, S0]
Exit stack: [V13, S4, V135, V135, V168, V154]

================================

Block 0x217
[0x217:0x224]
---
Predecessors: [0x1ea, 0x1fe]
Successors: []
---
0x217 JUMPDEST
0x218 POP
0x219 SWAP3
0x21a POP
0x21b POP
0x21c POP
0x21d PUSH1 0x40
0x21f MLOAD
0x220 DUP1
0x221 SWAP2
0x222 SUB
0x223 SWAP1
0x224 RETURN
---
0x217: JUMPDEST 
0x21d: V169 = 0x40
0x21f: V170 = M[0x40]
0x222: V171 = SUB S1 V170
0x224: RETURN V170 V171
---
Entry stack: [V13, S4, V135, V135, S1, V154]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x225
[0x225:0x236]
---
Predecessors: [0xea]
Successors: [0x237, 0x23b]
---
0x225 JUMPDEST
0x226 PUSH2 0x251
0x229 PUSH1 0x4
0x22b DUP1
0x22c CALLDATASIZE
0x22d SUB
0x22e PUSH1 0x40
0x230 DUP2
0x231 LT
0x232 ISZERO
0x233 PUSH2 0x23b
0x236 JUMPI
---
0x225: JUMPDEST 
0x226: V172 = 0x251
0x229: V173 = 0x4
0x22c: V174 = CALLDATASIZE
0x22d: V175 = SUB V174 0x4
0x22e: V176 = 0x40
0x231: V177 = LT V175 0x40
0x232: V178 = ISZERO V177
0x233: V179 = 0x23b
0x236: JUMPI 0x23b V178
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x251, 0x4, V175]
Exit stack: [V13, 0x251, 0x4, V175]

================================

Block 0x237
[0x237:0x23a]
---
Predecessors: [0x225]
Successors: []
---
0x237 PUSH1 0x0
0x239 DUP1
0x23a REVERT
---
0x237: V180 = 0x0
0x23a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x251, 0x4, V175]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x251, 0x4, V175]

================================

Block 0x23b
[0x23b:0x250]
---
Predecessors: [0x225]
Successors: [0x744]
---
0x23b JUMPDEST
0x23c POP
0x23d PUSH1 0x1
0x23f PUSH1 0x1
0x241 PUSH1 0xa0
0x243 SHL
0x244 SUB
0x245 DUP2
0x246 CALLDATALOAD
0x247 AND
0x248 SWAP1
0x249 PUSH1 0x20
0x24b ADD
0x24c CALLDATALOAD
0x24d PUSH2 0x744
0x250 JUMP
---
0x23b: JUMPDEST 
0x23d: V181 = 0x1
0x23f: V182 = 0x1
0x241: V183 = 0xa0
0x243: V184 = SHL 0xa0 0x1
0x244: V185 = SUB 0x10000000000000000000000000000000000000000 0x1
0x246: V186 = CALLDATALOAD 0x4
0x247: V187 = AND V186 0xffffffffffffffffffffffffffffffffffffffff
0x249: V188 = 0x20
0x24b: V189 = ADD 0x20 0x4
0x24c: V190 = CALLDATALOAD 0x24
0x24d: V191 = 0x744
0x250: JUMP 0x744
---
Entry stack: [V13, 0x251, 0x4, V175]
Stack pops: 2
Stack additions: [V187, V190]
Exit stack: [V13, 0x251, V187, V190]

================================

Block 0x251
[0x251:0x264]
---
Predecessors: [0x758, 0x7e4, 0x9e8]
Successors: []
---
0x251 JUMPDEST
0x252 PUSH1 0x40
0x254 DUP1
0x255 MLOAD
0x256 SWAP2
0x257 ISZERO
0x258 ISZERO
0x259 DUP3
0x25a MSTORE
0x25b MLOAD
0x25c SWAP1
0x25d DUP2
0x25e SWAP1
0x25f SUB
0x260 PUSH1 0x20
0x262 ADD
0x263 SWAP1
0x264 RETURN
---
0x251: JUMPDEST 
0x252: V192 = 0x40
0x255: V193 = M[0x40]
0x257: V194 = ISZERO 0x1
0x258: V195 = ISZERO 0x0
0x25a: M[V193] = 0x1
0x25b: V196 = M[0x40]
0x25f: V197 = SUB V193 V196
0x260: V198 = 0x20
0x262: V199 = ADD 0x20 V197
0x264: RETURN V196 V199
---
Entry stack: [V13, S5, S4, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S5, S4, S3, S2, S1]

================================

Block 0x265
[0x265:0x26c]
---
Predecessors: [0xf5]
Successors: [0x761]
---
0x265 JUMPDEST
0x266 PUSH2 0x26d
0x269 PUSH2 0x761
0x26c JUMP
---
0x265: JUMPDEST 
0x266: V200 = 0x26d
0x269: V201 = 0x761
0x26c: JUMP 0x761
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x26d]
Exit stack: [V13, 0x26d]

================================

Block 0x26d
[0x26d:0x27e]
---
Predecessors: [0x761, 0x9ee, 0xbcf]
Successors: []
---
0x26d JUMPDEST
0x26e PUSH1 0x40
0x270 DUP1
0x271 MLOAD
0x272 SWAP2
0x273 DUP3
0x274 MSTORE
0x275 MLOAD
0x276 SWAP1
0x277 DUP2
0x278 SWAP1
0x279 SUB
0x27a PUSH1 0x20
0x27c ADD
0x27d SWAP1
0x27e RETURN
---
0x26d: JUMPDEST 
0x26e: V202 = 0x40
0x271: V203 = M[0x40]
0x274: M[V203] = S0
0x275: V204 = M[0x40]
0x279: V205 = SUB V203 V204
0x27a: V206 = 0x20
0x27c: V207 = ADD 0x20 V205
0x27e: RETURN V204 V207
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x27f
[0x27f:0x290]
---
Predecessors: [0xa3]
Successors: [0x291, 0x295]
---
0x27f JUMPDEST
0x280 PUSH2 0x251
0x283 PUSH1 0x4
0x285 DUP1
0x286 CALLDATASIZE
0x287 SUB
0x288 PUSH1 0x60
0x28a DUP2
0x28b LT
0x28c ISZERO
0x28d PUSH2 0x295
0x290 JUMPI
---
0x27f: JUMPDEST 
0x280: V208 = 0x251
0x283: V209 = 0x4
0x286: V210 = CALLDATASIZE
0x287: V211 = SUB V210 0x4
0x288: V212 = 0x60
0x28b: V213 = LT V211 0x60
0x28c: V214 = ISZERO V213
0x28d: V215 = 0x295
0x290: JUMPI 0x295 V214
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x251, 0x4, V211]
Exit stack: [V13, 0x251, 0x4, V211]

================================

Block 0x291
[0x291:0x294]
---
Predecessors: [0x27f]
Successors: []
---
0x291 PUSH1 0x0
0x293 DUP1
0x294 REVERT
---
0x291: V216 = 0x0
0x294: REVERT 0x0 0x0
---
Entry stack: [V13, 0x251, 0x4, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x251, 0x4, V211]

================================

Block 0x295
[0x295:0x2b4]
---
Predecessors: [0x27f]
Successors: [0x767]
---
0x295 JUMPDEST
0x296 POP
0x297 PUSH1 0x1
0x299 PUSH1 0x1
0x29b PUSH1 0xa0
0x29d SHL
0x29e SUB
0x29f DUP2
0x2a0 CALLDATALOAD
0x2a1 DUP2
0x2a2 AND
0x2a3 SWAP2
0x2a4 PUSH1 0x20
0x2a6 DUP2
0x2a7 ADD
0x2a8 CALLDATALOAD
0x2a9 SWAP1
0x2aa SWAP2
0x2ab AND
0x2ac SWAP1
0x2ad PUSH1 0x40
0x2af ADD
0x2b0 CALLDATALOAD
0x2b1 PUSH2 0x767
0x2b4 JUMP
---
0x295: JUMPDEST 
0x297: V217 = 0x1
0x299: V218 = 0x1
0x29b: V219 = 0xa0
0x29d: V220 = SHL 0xa0 0x1
0x29e: V221 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a0: V222 = CALLDATALOAD 0x4
0x2a2: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x2a4: V224 = 0x20
0x2a7: V225 = ADD 0x4 0x20
0x2a8: V226 = CALLDATALOAD 0x24
0x2ab: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V226
0x2ad: V228 = 0x40
0x2af: V229 = ADD 0x40 0x4
0x2b0: V230 = CALLDATALOAD 0x44
0x2b1: V231 = 0x767
0x2b4: JUMP 0x767
---
Entry stack: [V13, 0x251, 0x4, V211]
Stack pops: 2
Stack additions: [V223, V227, V230]
Exit stack: [V13, 0x251, V223, V227, V230]

================================

Block 0x2b5
[0x2b5:0x2bc]
---
Predecessors: [0xae]
Successors: [0x7ee]
---
0x2b5 JUMPDEST
0x2b6 PUSH2 0x2bd
0x2b9 PUSH2 0x7ee
0x2bc JUMP
---
0x2b5: JUMPDEST 
0x2b6: V232 = 0x2bd
0x2b9: V233 = 0x7ee
0x2bc: JUMP 0x7ee
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x2bd]
Exit stack: [V13, 0x2bd]

================================

Block 0x2bd
[0x2bd:0x2d2]
---
Predecessors: [0x7ee]
Successors: []
---
0x2bd JUMPDEST
0x2be PUSH1 0x40
0x2c0 DUP1
0x2c1 MLOAD
0x2c2 PUSH1 0xff
0x2c4 SWAP1
0x2c5 SWAP3
0x2c6 AND
0x2c7 DUP3
0x2c8 MSTORE
0x2c9 MLOAD
0x2ca SWAP1
0x2cb DUP2
0x2cc SWAP1
0x2cd SUB
0x2ce PUSH1 0x20
0x2d0 ADD
0x2d1 SWAP1
0x2d2 RETURN
---
0x2bd: JUMPDEST 
0x2be: V234 = 0x40
0x2c1: V235 = M[0x40]
0x2c2: V236 = 0xff
0x2c6: V237 = AND V746 0xff
0x2c8: M[V235] = V237
0x2c9: V238 = M[0x40]
0x2cd: V239 = SUB V235 V238
0x2ce: V240 = 0x20
0x2d0: V241 = ADD 0x20 V239
0x2d2: RETURN V238 V241
---
Entry stack: [V13, V746]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x2d3
[0x2d3:0x2e4]
---
Predecessors: [0xb9]
Successors: [0x2e5, 0x2e9]
---
0x2d3 JUMPDEST
0x2d4 PUSH2 0x1a6
0x2d7 PUSH1 0x4
0x2d9 DUP1
0x2da CALLDATASIZE
0x2db SUB
0x2dc PUSH1 0x40
0x2de DUP2
0x2df LT
0x2e0 ISZERO
0x2e1 PUSH2 0x2e9
0x2e4 JUMPI
---
0x2d3: JUMPDEST 
0x2d4: V242 = 0x1a6
0x2d7: V243 = 0x4
0x2da: V244 = CALLDATASIZE
0x2db: V245 = SUB V244 0x4
0x2dc: V246 = 0x40
0x2df: V247 = LT V245 0x40
0x2e0: V248 = ISZERO V247
0x2e1: V249 = 0x2e9
0x2e4: JUMPI 0x2e9 V248
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1a6, 0x4, V245]
Exit stack: [V13, 0x1a6, 0x4, V245]

================================

Block 0x2e5
[0x2e5:0x2e8]
---
Predecessors: [0x2d3]
Successors: []
---
0x2e5 PUSH1 0x0
0x2e7 DUP1
0x2e8 REVERT
---
0x2e5: V250 = 0x0
0x2e8: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, 0x4, V245]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, 0x4, V245]

================================

Block 0x2e9
[0x2e9:0x2fe]
---
Predecessors: [0x2d3]
Successors: [0x7f7]
---
0x2e9 JUMPDEST
0x2ea POP
0x2eb PUSH1 0x1
0x2ed PUSH1 0x1
0x2ef PUSH1 0xa0
0x2f1 SHL
0x2f2 SUB
0x2f3 DUP2
0x2f4 CALLDATALOAD
0x2f5 AND
0x2f6 SWAP1
0x2f7 PUSH1 0x20
0x2f9 ADD
0x2fa CALLDATALOAD
0x2fb PUSH2 0x7f7
0x2fe JUMP
---
0x2e9: JUMPDEST 
0x2eb: V251 = 0x1
0x2ed: V252 = 0x1
0x2ef: V253 = 0xa0
0x2f1: V254 = SHL 0xa0 0x1
0x2f2: V255 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2f4: V256 = CALLDATALOAD 0x4
0x2f5: V257 = AND V256 0xffffffffffffffffffffffffffffffffffffffff
0x2f7: V258 = 0x20
0x2f9: V259 = ADD 0x20 0x4
0x2fa: V260 = CALLDATALOAD 0x24
0x2fb: V261 = 0x7f7
0x2fe: JUMP 0x7f7
---
Entry stack: [V13, 0x1a6, 0x4, V245]
Stack pops: 2
Stack additions: [V257, V260]
Exit stack: [V13, 0x1a6, V257, V260]

================================

Block 0x2ff
[0x2ff:0x310]
---
Predecessors: [0xc4]
Successors: [0x311, 0x315]
---
0x2ff JUMPDEST
0x300 PUSH2 0x1a6
0x303 PUSH1 0x4
0x305 DUP1
0x306 CALLDATASIZE
0x307 SUB
0x308 PUSH1 0x60
0x30a DUP2
0x30b LT
0x30c ISZERO
0x30d PUSH2 0x315
0x310 JUMPI
---
0x2ff: JUMPDEST 
0x300: V262 = 0x1a6
0x303: V263 = 0x4
0x306: V264 = CALLDATASIZE
0x307: V265 = SUB V264 0x4
0x308: V266 = 0x60
0x30b: V267 = LT V265 0x60
0x30c: V268 = ISZERO V267
0x30d: V269 = 0x315
0x310: JUMPI 0x315 V268
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1a6, 0x4, V265]
Exit stack: [V13, 0x1a6, 0x4, V265]

================================

Block 0x311
[0x311:0x314]
---
Predecessors: [0x2ff]
Successors: []
---
0x311 PUSH1 0x0
0x313 DUP1
0x314 REVERT
---
0x311: V270 = 0x0
0x314: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, 0x4, V265]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, 0x4, V265]

================================

Block 0x315
[0x315:0x331]
---
Predecessors: [0x2ff]
Successors: [0x332, 0x336]
---
0x315 JUMPDEST
0x316 DUP2
0x317 CALLDATALOAD
0x318 SWAP2
0x319 SWAP1
0x31a DUP2
0x31b ADD
0x31c SWAP1
0x31d PUSH1 0x40
0x31f DUP2
0x320 ADD
0x321 PUSH1 0x20
0x323 DUP3
0x324 ADD
0x325 CALLDATALOAD
0x326 PUSH1 0x1
0x328 PUSH1 0x20
0x32a SHL
0x32b DUP2
0x32c GT
0x32d ISZERO
0x32e PUSH2 0x336
0x331 JUMPI
---
0x315: JUMPDEST 
0x317: V271 = CALLDATALOAD 0x4
0x31b: V272 = ADD 0x4 V265
0x31d: V273 = 0x40
0x320: V274 = ADD 0x4 0x40
0x321: V275 = 0x20
0x324: V276 = ADD 0x4 0x20
0x325: V277 = CALLDATALOAD 0x24
0x326: V278 = 0x1
0x328: V279 = 0x20
0x32a: V280 = SHL 0x20 0x1
0x32c: V281 = GT V277 0x100000000
0x32d: V282 = ISZERO V281
0x32e: V283 = 0x336
0x331: JUMPI 0x336 V282
---
Entry stack: [V13, 0x1a6, 0x4, V265]
Stack pops: 2
Stack additions: [V271, V272, S1, 0x44, V277]
Exit stack: [V13, 0x1a6, V271, V272, 0x4, 0x44, V277]

================================

Block 0x332
[0x332:0x335]
---
Predecessors: [0x315]
Successors: []
---
0x332 PUSH1 0x0
0x334 DUP1
0x335 REVERT
---
0x332: V284 = 0x0
0x335: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, V271, V272, 0x4, 0x44, V277]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V272, 0x4, 0x44, V277]

================================

Block 0x336
[0x336:0x343]
---
Predecessors: [0x315]
Successors: [0x344, 0x348]
---
0x336 JUMPDEST
0x337 DUP3
0x338 ADD
0x339 DUP4
0x33a PUSH1 0x20
0x33c DUP3
0x33d ADD
0x33e GT
0x33f ISZERO
0x340 PUSH2 0x348
0x343 JUMPI
---
0x336: JUMPDEST 
0x338: V285 = ADD 0x4 V277
0x33a: V286 = 0x20
0x33d: V287 = ADD V285 0x20
0x33e: V288 = GT V287 V272
0x33f: V289 = ISZERO V288
0x340: V290 = 0x348
0x343: JUMPI 0x348 V289
---
Entry stack: [V13, 0x1a6, V271, V272, 0x4, 0x44, V277]
Stack pops: 4
Stack additions: [S3, S2, S1, V285]
Exit stack: [V13, 0x1a6, V271, V272, 0x4, 0x44, V285]

================================

Block 0x344
[0x344:0x347]
---
Predecessors: [0x336]
Successors: []
---
0x344 PUSH1 0x0
0x346 DUP1
0x347 REVERT
---
0x344: V291 = 0x0
0x347: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, V271, V272, 0x4, 0x44, V285]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V272, 0x4, 0x44, V285]

================================

Block 0x348
[0x348:0x364]
---
Predecessors: [0x336]
Successors: [0x365, 0x369]
---
0x348 JUMPDEST
0x349 DUP1
0x34a CALLDATALOAD
0x34b SWAP1
0x34c PUSH1 0x20
0x34e ADD
0x34f SWAP2
0x350 DUP5
0x351 PUSH1 0x20
0x353 DUP4
0x354 MUL
0x355 DUP5
0x356 ADD
0x357 GT
0x358 PUSH1 0x1
0x35a PUSH1 0x20
0x35c SHL
0x35d DUP4
0x35e GT
0x35f OR
0x360 ISZERO
0x361 PUSH2 0x369
0x364 JUMPI
---
0x348: JUMPDEST 
0x34a: V292 = CALLDATALOAD V285
0x34c: V293 = 0x20
0x34e: V294 = ADD 0x20 V285
0x351: V295 = 0x20
0x354: V296 = MUL V292 0x20
0x356: V297 = ADD V294 V296
0x357: V298 = GT V297 V272
0x358: V299 = 0x1
0x35a: V300 = 0x20
0x35c: V301 = SHL 0x20 0x1
0x35e: V302 = GT V292 0x100000000
0x35f: V303 = OR V302 V298
0x360: V304 = ISZERO V303
0x361: V305 = 0x369
0x364: JUMPI 0x369 V304
---
Entry stack: [V13, 0x1a6, V271, V272, 0x4, 0x44, V285]
Stack pops: 4
Stack additions: [S3, S2, V294, V292, S1]
Exit stack: [V13, 0x1a6, V271, V272, 0x4, V294, V292, 0x44]

================================

Block 0x365
[0x365:0x368]
---
Predecessors: [0x348]
Successors: []
---
0x365 PUSH1 0x0
0x367 DUP1
0x368 REVERT
---
0x365: V306 = 0x0
0x368: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, V271, V272, 0x4, V294, V292, 0x44]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V272, 0x4, V294, V292, 0x44]

================================

Block 0x369
[0x369:0x3b3]
---
Predecessors: [0x348]
Successors: [0x3b4, 0x3b8]
---
0x369 JUMPDEST
0x36a SWAP2
0x36b SWAP1
0x36c DUP1
0x36d DUP1
0x36e PUSH1 0x20
0x370 MUL
0x371 PUSH1 0x20
0x373 ADD
0x374 PUSH1 0x40
0x376 MLOAD
0x377 SWAP1
0x378 DUP2
0x379 ADD
0x37a PUSH1 0x40
0x37c MSTORE
0x37d DUP1
0x37e SWAP4
0x37f SWAP3
0x380 SWAP2
0x381 SWAP1
0x382 DUP2
0x383 DUP2
0x384 MSTORE
0x385 PUSH1 0x20
0x387 ADD
0x388 DUP4
0x389 DUP4
0x38a PUSH1 0x20
0x38c MUL
0x38d DUP1
0x38e DUP3
0x38f DUP5
0x390 CALLDATACOPY
0x391 PUSH1 0x0
0x393 SWAP3
0x394 ADD
0x395 SWAP2
0x396 SWAP1
0x397 SWAP2
0x398 MSTORE
0x399 POP
0x39a SWAP3
0x39b SWAP6
0x39c SWAP5
0x39d SWAP4
0x39e PUSH1 0x20
0x3a0 DUP2
0x3a1 ADD
0x3a2 SWAP4
0x3a3 POP
0x3a4 CALLDATALOAD
0x3a5 SWAP2
0x3a6 POP
0x3a7 POP
0x3a8 PUSH1 0x1
0x3aa PUSH1 0x20
0x3ac SHL
0x3ad DUP2
0x3ae GT
0x3af ISZERO
0x3b0 PUSH2 0x3b8
0x3b3 JUMPI
---
0x369: JUMPDEST 
0x36e: V307 = 0x20
0x370: V308 = MUL 0x20 V292
0x371: V309 = 0x20
0x373: V310 = ADD 0x20 V308
0x374: V311 = 0x40
0x376: V312 = M[0x40]
0x379: V313 = ADD V312 V310
0x37a: V314 = 0x40
0x37c: M[0x40] = V313
0x384: M[V312] = V292
0x385: V315 = 0x20
0x387: V316 = ADD 0x20 V312
0x38a: V317 = 0x20
0x38c: V318 = MUL 0x20 V292
0x390: CALLDATACOPY V316 V294 V318
0x391: V319 = 0x0
0x394: V320 = ADD V316 V318
0x398: M[V320] = 0x0
0x39e: V321 = 0x20
0x3a1: V322 = ADD 0x44 0x20
0x3a4: V323 = CALLDATALOAD 0x44
0x3a8: V324 = 0x1
0x3aa: V325 = 0x20
0x3ac: V326 = SHL 0x20 0x1
0x3ae: V327 = GT V323 0x100000000
0x3af: V328 = ISZERO V327
0x3b0: V329 = 0x3b8
0x3b3: JUMPI 0x3b8 V328
---
Entry stack: [V13, 0x1a6, V271, V272, 0x4, V294, V292, 0x44]
Stack pops: 5
Stack additions: [V312, S4, S3, 0x64, V323]
Exit stack: [V13, 0x1a6, V271, V312, V272, 0x4, 0x64, V323]

================================

Block 0x3b4
[0x3b4:0x3b7]
---
Predecessors: [0x369]
Successors: []
---
0x3b4 PUSH1 0x0
0x3b6 DUP1
0x3b7 REVERT
---
0x3b4: V330 = 0x0
0x3b7: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, V271, V312, V272, 0x4, 0x64, V323]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, V272, 0x4, 0x64, V323]

================================

Block 0x3b8
[0x3b8:0x3c5]
---
Predecessors: [0x369]
Successors: [0x3c6, 0x3ca]
---
0x3b8 JUMPDEST
0x3b9 DUP3
0x3ba ADD
0x3bb DUP4
0x3bc PUSH1 0x20
0x3be DUP3
0x3bf ADD
0x3c0 GT
0x3c1 ISZERO
0x3c2 PUSH2 0x3ca
0x3c5 JUMPI
---
0x3b8: JUMPDEST 
0x3ba: V331 = ADD 0x4 V323
0x3bc: V332 = 0x20
0x3bf: V333 = ADD V331 0x20
0x3c0: V334 = GT V333 V272
0x3c1: V335 = ISZERO V334
0x3c2: V336 = 0x3ca
0x3c5: JUMPI 0x3ca V335
---
Entry stack: [V13, 0x1a6, V271, V312, V272, 0x4, 0x64, V323]
Stack pops: 4
Stack additions: [S3, S2, S1, V331]
Exit stack: [V13, 0x1a6, V271, V312, V272, 0x4, 0x64, V331]

================================

Block 0x3c6
[0x3c6:0x3c9]
---
Predecessors: [0x3b8]
Successors: []
---
0x3c6 PUSH1 0x0
0x3c8 DUP1
0x3c9 REVERT
---
0x3c6: V337 = 0x0
0x3c9: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, V271, V312, V272, 0x4, 0x64, V331]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, V272, 0x4, 0x64, V331]

================================

Block 0x3ca
[0x3ca:0x3e6]
---
Predecessors: [0x3b8]
Successors: [0x3e7, 0x3eb]
---
0x3ca JUMPDEST
0x3cb DUP1
0x3cc CALLDATALOAD
0x3cd SWAP1
0x3ce PUSH1 0x20
0x3d0 ADD
0x3d1 SWAP2
0x3d2 DUP5
0x3d3 PUSH1 0x20
0x3d5 DUP4
0x3d6 MUL
0x3d7 DUP5
0x3d8 ADD
0x3d9 GT
0x3da PUSH1 0x1
0x3dc PUSH1 0x20
0x3de SHL
0x3df DUP4
0x3e0 GT
0x3e1 OR
0x3e2 ISZERO
0x3e3 PUSH2 0x3eb
0x3e6 JUMPI
---
0x3ca: JUMPDEST 
0x3cc: V338 = CALLDATALOAD V331
0x3ce: V339 = 0x20
0x3d0: V340 = ADD 0x20 V331
0x3d3: V341 = 0x20
0x3d6: V342 = MUL V338 0x20
0x3d8: V343 = ADD V340 V342
0x3d9: V344 = GT V343 V272
0x3da: V345 = 0x1
0x3dc: V346 = 0x20
0x3de: V347 = SHL 0x20 0x1
0x3e0: V348 = GT V338 0x100000000
0x3e1: V349 = OR V348 V344
0x3e2: V350 = ISZERO V349
0x3e3: V351 = 0x3eb
0x3e6: JUMPI 0x3eb V350
---
Entry stack: [V13, 0x1a6, V271, V312, V272, 0x4, 0x64, V331]
Stack pops: 4
Stack additions: [S3, S2, V340, V338, S1]
Exit stack: [V13, 0x1a6, V271, V312, V272, 0x4, V340, V338, 0x64]

================================

Block 0x3e7
[0x3e7:0x3ea]
---
Predecessors: [0x3ca]
Successors: []
---
0x3e7 PUSH1 0x0
0x3e9 DUP1
0x3ea REVERT
---
0x3e7: V352 = 0x0
0x3ea: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, V271, V312, V272, 0x4, V340, V338, 0x64]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, V272, 0x4, V340, V338, 0x64]

================================

Block 0x3eb
[0x3eb:0x428]
---
Predecessors: [0x3ca]
Successors: [0x8d5]
---
0x3eb JUMPDEST
0x3ec SWAP2
0x3ed SWAP1
0x3ee DUP1
0x3ef DUP1
0x3f0 PUSH1 0x20
0x3f2 MUL
0x3f3 PUSH1 0x20
0x3f5 ADD
0x3f6 PUSH1 0x40
0x3f8 MLOAD
0x3f9 SWAP1
0x3fa DUP2
0x3fb ADD
0x3fc PUSH1 0x40
0x3fe MSTORE
0x3ff DUP1
0x400 SWAP4
0x401 SWAP3
0x402 SWAP2
0x403 SWAP1
0x404 DUP2
0x405 DUP2
0x406 MSTORE
0x407 PUSH1 0x20
0x409 ADD
0x40a DUP4
0x40b DUP4
0x40c PUSH1 0x20
0x40e MUL
0x40f DUP1
0x410 DUP3
0x411 DUP5
0x412 CALLDATACOPY
0x413 PUSH1 0x0
0x415 SWAP3
0x416 ADD
0x417 SWAP2
0x418 SWAP1
0x419 SWAP2
0x41a MSTORE
0x41b POP
0x41c SWAP3
0x41d SWAP6
0x41e POP
0x41f PUSH2 0x8d5
0x422 SWAP5
0x423 POP
0x424 POP
0x425 POP
0x426 POP
0x427 POP
0x428 JUMP
---
0x3eb: JUMPDEST 
0x3f0: V353 = 0x20
0x3f2: V354 = MUL 0x20 V338
0x3f3: V355 = 0x20
0x3f5: V356 = ADD 0x20 V354
0x3f6: V357 = 0x40
0x3f8: V358 = M[0x40]
0x3fb: V359 = ADD V358 V356
0x3fc: V360 = 0x40
0x3fe: M[0x40] = V359
0x406: M[V358] = V338
0x407: V361 = 0x20
0x409: V362 = ADD 0x20 V358
0x40c: V363 = 0x20
0x40e: V364 = MUL 0x20 V338
0x412: CALLDATACOPY V362 V340 V364
0x413: V365 = 0x0
0x416: V366 = ADD V362 V364
0x41a: M[V366] = 0x0
0x41f: V367 = 0x8d5
0x428: JUMP 0x8d5
---
Entry stack: [V13, 0x1a6, V271, V312, V272, 0x4, V340, V338, 0x64]
Stack pops: 5
Stack additions: [V358]
Exit stack: [V13, 0x1a6, V271, V312, V358]

================================

Block 0x429
[0x429:0x43a]
---
Predecessors: [0x66]
Successors: [0x43b, 0x43f]
---
0x429 JUMPDEST
0x42a PUSH2 0x26d
0x42d PUSH1 0x4
0x42f DUP1
0x430 CALLDATASIZE
0x431 SUB
0x432 PUSH1 0x20
0x434 DUP2
0x435 LT
0x436 ISZERO
0x437 PUSH2 0x43f
0x43a JUMPI
---
0x429: JUMPDEST 
0x42a: V368 = 0x26d
0x42d: V369 = 0x4
0x430: V370 = CALLDATASIZE
0x431: V371 = SUB V370 0x4
0x432: V372 = 0x20
0x435: V373 = LT V371 0x20
0x436: V374 = ISZERO V373
0x437: V375 = 0x43f
0x43a: JUMPI 0x43f V374
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x26d, 0x4, V371]
Exit stack: [V13, 0x26d, 0x4, V371]

================================

Block 0x43b
[0x43b:0x43e]
---
Predecessors: [0x429]
Successors: []
---
0x43b PUSH1 0x0
0x43d DUP1
0x43e REVERT
---
0x43b: V376 = 0x0
0x43e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x26d, 0x4, V371]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x26d, 0x4, V371]

================================

Block 0x43f
[0x43f:0x44e]
---
Predecessors: [0x429]
Successors: [0x9ee]
---
0x43f JUMPDEST
0x440 POP
0x441 CALLDATALOAD
0x442 PUSH1 0x1
0x444 PUSH1 0x1
0x446 PUSH1 0xa0
0x448 SHL
0x449 SUB
0x44a AND
0x44b PUSH2 0x9ee
0x44e JUMP
---
0x43f: JUMPDEST 
0x441: V377 = CALLDATALOAD 0x4
0x442: V378 = 0x1
0x444: V379 = 0x1
0x446: V380 = 0xa0
0x448: V381 = SHL 0xa0 0x1
0x449: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44a: V383 = AND 0xffffffffffffffffffffffffffffffffffffffff V377
0x44b: V384 = 0x9ee
0x44e: JUMP 0x9ee
---
Entry stack: [V13, 0x26d, 0x4, V371]
Stack pops: 2
Stack additions: [V383]
Exit stack: [V13, 0x26d, V383]

================================

Block 0x44f
[0x44f:0x460]
---
Predecessors: [0x72]
Successors: [0x461, 0x465]
---
0x44f JUMPDEST
0x450 PUSH2 0x1a6
0x453 PUSH1 0x4
0x455 DUP1
0x456 CALLDATASIZE
0x457 SUB
0x458 PUSH1 0x20
0x45a DUP2
0x45b LT
0x45c ISZERO
0x45d PUSH2 0x465
0x460 JUMPI
---
0x44f: JUMPDEST 
0x450: V385 = 0x1a6
0x453: V386 = 0x4
0x456: V387 = CALLDATASIZE
0x457: V388 = SUB V387 0x4
0x458: V389 = 0x20
0x45b: V390 = LT V388 0x20
0x45c: V391 = ISZERO V390
0x45d: V392 = 0x465
0x460: JUMPI 0x465 V391
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1a6, 0x4, V388]
Exit stack: [V13, 0x1a6, 0x4, V388]

================================

Block 0x461
[0x461:0x464]
---
Predecessors: [0x44f]
Successors: []
---
0x461 PUSH1 0x0
0x463 DUP1
0x464 REVERT
---
0x461: V393 = 0x0
0x464: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, 0x4, V388]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, 0x4, V388]

================================

Block 0x465
[0x465:0x474]
---
Predecessors: [0x44f]
Successors: [0xa09]
---
0x465 JUMPDEST
0x466 POP
0x467 CALLDATALOAD
0x468 PUSH1 0x1
0x46a PUSH1 0x1
0x46c PUSH1 0xa0
0x46e SHL
0x46f SUB
0x470 AND
0x471 PUSH2 0xa09
0x474 JUMP
---
0x465: JUMPDEST 
0x467: V394 = CALLDATALOAD 0x4
0x468: V395 = 0x1
0x46a: V396 = 0x1
0x46c: V397 = 0xa0
0x46e: V398 = SHL 0xa0 0x1
0x46f: V399 = SUB 0x10000000000000000000000000000000000000000 0x1
0x470: V400 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x471: V401 = 0xa09
0x474: JUMP 0xa09
---
Entry stack: [V13, 0x1a6, 0x4, V388]
Stack pops: 2
Stack additions: [V400]
Exit stack: [V13, 0x1a6, V400]

================================

Block 0x475
[0x475:0x47c]
---
Predecessors: [0x7d]
Successors: [0xa73]
---
0x475 JUMPDEST
0x476 PUSH2 0x1b0
0x479 PUSH2 0xa73
0x47c JUMP
---
0x475: JUMPDEST 
0x476: V402 = 0x1b0
0x479: V403 = 0xa73
0x47c: JUMP 0xa73
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1b0]
Exit stack: [V13, 0x1b0]

================================

Block 0x47d
[0x47d:0x48e]
---
Predecessors: [0x88]
Successors: [0x48f, 0x493]
---
0x47d JUMPDEST
0x47e PUSH2 0x1a6
0x481 PUSH1 0x4
0x483 DUP1
0x484 CALLDATASIZE
0x485 SUB
0x486 PUSH1 0x20
0x488 DUP2
0x489 LT
0x48a ISZERO
0x48b PUSH2 0x493
0x48e JUMPI
---
0x47d: JUMPDEST 
0x47e: V404 = 0x1a6
0x481: V405 = 0x4
0x484: V406 = CALLDATASIZE
0x485: V407 = SUB V406 0x4
0x486: V408 = 0x20
0x489: V409 = LT V407 0x20
0x48a: V410 = ISZERO V409
0x48b: V411 = 0x493
0x48e: JUMPI 0x493 V410
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1a6, 0x4, V407]
Exit stack: [V13, 0x1a6, 0x4, V407]

================================

Block 0x48f
[0x48f:0x492]
---
Predecessors: [0x47d]
Successors: []
---
0x48f PUSH1 0x0
0x491 DUP1
0x492 REVERT
---
0x48f: V412 = 0x0
0x492: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, 0x4, V407]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, 0x4, V407]

================================

Block 0x493
[0x493:0x499]
---
Predecessors: [0x47d]
Successors: [0xad4]
---
0x493 JUMPDEST
0x494 POP
0x495 CALLDATALOAD
0x496 PUSH2 0xad4
0x499 JUMP
---
0x493: JUMPDEST 
0x495: V413 = CALLDATALOAD 0x4
0x496: V414 = 0xad4
0x499: JUMP 0xad4
---
Entry stack: [V13, 0x1a6, 0x4, V407]
Stack pops: 2
Stack additions: [V413]
Exit stack: [V13, 0x1a6, V413]

================================

Block 0x49a
[0x49a:0x4ab]
---
Predecessors: [0x36]
Successors: [0x4ac, 0x4b0]
---
0x49a JUMPDEST
0x49b PUSH2 0x251
0x49e PUSH1 0x4
0x4a0 DUP1
0x4a1 CALLDATASIZE
0x4a2 SUB
0x4a3 PUSH1 0x40
0x4a5 DUP2
0x4a6 LT
0x4a7 ISZERO
0x4a8 PUSH2 0x4b0
0x4ab JUMPI
---
0x49a: JUMPDEST 
0x49b: V415 = 0x251
0x49e: V416 = 0x4
0x4a1: V417 = CALLDATASIZE
0x4a2: V418 = SUB V417 0x4
0x4a3: V419 = 0x40
0x4a6: V420 = LT V418 0x40
0x4a7: V421 = ISZERO V420
0x4a8: V422 = 0x4b0
0x4ab: JUMPI 0x4b0 V421
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x251, 0x4, V418]
Exit stack: [V13, 0x251, 0x4, V418]

================================

Block 0x4ac
[0x4ac:0x4af]
---
Predecessors: [0x49a]
Successors: []
---
0x4ac PUSH1 0x0
0x4ae DUP1
0x4af REVERT
---
0x4ac: V423 = 0x0
0x4af: REVERT 0x0 0x0
---
Entry stack: [V13, 0x251, 0x4, V418]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x251, 0x4, V418]

================================

Block 0x4b0
[0x4b0:0x4c5]
---
Predecessors: [0x49a]
Successors: [0xbac]
---
0x4b0 JUMPDEST
0x4b1 POP
0x4b2 PUSH1 0x1
0x4b4 PUSH1 0x1
0x4b6 PUSH1 0xa0
0x4b8 SHL
0x4b9 SUB
0x4ba DUP2
0x4bb CALLDATALOAD
0x4bc AND
0x4bd SWAP1
0x4be PUSH1 0x20
0x4c0 ADD
0x4c1 CALLDATALOAD
0x4c2 PUSH2 0xbac
0x4c5 JUMP
---
0x4b0: JUMPDEST 
0x4b2: V424 = 0x1
0x4b4: V425 = 0x1
0x4b6: V426 = 0xa0
0x4b8: V427 = SHL 0xa0 0x1
0x4b9: V428 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4bb: V429 = CALLDATALOAD 0x4
0x4bc: V430 = AND V429 0xffffffffffffffffffffffffffffffffffffffff
0x4be: V431 = 0x20
0x4c0: V432 = ADD 0x20 0x4
0x4c1: V433 = CALLDATALOAD 0x24
0x4c2: V434 = 0xbac
0x4c5: JUMP 0xbac
---
Entry stack: [V13, 0x251, 0x4, V418]
Stack pops: 2
Stack additions: [V430, V433]
Exit stack: [V13, 0x251, V430, V433]

================================

Block 0x4c6
[0x4c6:0x4cd]
---
Predecessors: [0x41]
Successors: [0xbc0]
---
0x4c6 JUMPDEST
0x4c7 PUSH2 0x4ce
0x4ca PUSH2 0xbc0
0x4cd JUMP
---
0x4c6: JUMPDEST 
0x4c7: V435 = 0x4ce
0x4ca: V436 = 0xbc0
0x4cd: JUMP 0xbc0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x4ce]
Exit stack: [V13, 0x4ce]

================================

Block 0x4ce
[0x4ce:0x4e9]
---
Predecessors: [0xbc0]
Successors: []
---
0x4ce JUMPDEST
0x4cf PUSH1 0x40
0x4d1 DUP1
0x4d2 MLOAD
0x4d3 PUSH1 0x1
0x4d5 PUSH1 0x1
0x4d7 PUSH1 0xa0
0x4d9 SHL
0x4da SUB
0x4db SWAP1
0x4dc SWAP3
0x4dd AND
0x4de DUP3
0x4df MSTORE
0x4e0 MLOAD
0x4e1 SWAP1
0x4e2 DUP2
0x4e3 SWAP1
0x4e4 SUB
0x4e5 PUSH1 0x20
0x4e7 ADD
0x4e8 SWAP1
0x4e9 RETURN
---
0x4ce: JUMPDEST 
0x4cf: V437 = 0x40
0x4d2: V438 = M[0x40]
0x4d3: V439 = 0x1
0x4d5: V440 = 0x1
0x4d7: V441 = 0xa0
0x4d9: V442 = SHL 0xa0 0x1
0x4da: V443 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4dd: V444 = AND V1092 0xffffffffffffffffffffffffffffffffffffffff
0x4df: M[V438] = V444
0x4e0: V445 = M[0x40]
0x4e4: V446 = SUB V438 V445
0x4e5: V447 = 0x20
0x4e7: V448 = ADD 0x20 V446
0x4e9: RETURN V445 V448
---
Entry stack: [V13, 0x4ce, V1092]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x4ce]

================================

Block 0x4ea
[0x4ea:0x4fb]
---
Predecessors: [0x4c]
Successors: [0x4fc, 0x500]
---
0x4ea JUMPDEST
0x4eb PUSH2 0x26d
0x4ee PUSH1 0x4
0x4f0 DUP1
0x4f1 CALLDATASIZE
0x4f2 SUB
0x4f3 PUSH1 0x40
0x4f5 DUP2
0x4f6 LT
0x4f7 ISZERO
0x4f8 PUSH2 0x500
0x4fb JUMPI
---
0x4ea: JUMPDEST 
0x4eb: V449 = 0x26d
0x4ee: V450 = 0x4
0x4f1: V451 = CALLDATASIZE
0x4f2: V452 = SUB V451 0x4
0x4f3: V453 = 0x40
0x4f6: V454 = LT V452 0x40
0x4f7: V455 = ISZERO V454
0x4f8: V456 = 0x500
0x4fb: JUMPI 0x500 V455
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x26d, 0x4, V452]
Exit stack: [V13, 0x26d, 0x4, V452]

================================

Block 0x4fc
[0x4fc:0x4ff]
---
Predecessors: [0x4ea]
Successors: []
---
0x4fc PUSH1 0x0
0x4fe DUP1
0x4ff REVERT
---
0x4fc: V457 = 0x0
0x4ff: REVERT 0x0 0x0
---
Entry stack: [V13, 0x26d, 0x4, V452]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x26d, 0x4, V452]

================================

Block 0x500
[0x500:0x517]
---
Predecessors: [0x4ea]
Successors: [0xbcf]
---
0x500 JUMPDEST
0x501 POP
0x502 PUSH1 0x1
0x504 PUSH1 0x1
0x506 PUSH1 0xa0
0x508 SHL
0x509 SUB
0x50a DUP2
0x50b CALLDATALOAD
0x50c DUP2
0x50d AND
0x50e SWAP2
0x50f PUSH1 0x20
0x511 ADD
0x512 CALLDATALOAD
0x513 AND
0x514 PUSH2 0xbcf
0x517 JUMP
---
0x500: JUMPDEST 
0x502: V458 = 0x1
0x504: V459 = 0x1
0x506: V460 = 0xa0
0x508: V461 = SHL 0xa0 0x1
0x509: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50b: V463 = CALLDATALOAD 0x4
0x50d: V464 = AND 0xffffffffffffffffffffffffffffffffffffffff V463
0x50f: V465 = 0x20
0x511: V466 = ADD 0x20 0x4
0x512: V467 = CALLDATALOAD 0x24
0x513: V468 = AND V467 0xffffffffffffffffffffffffffffffffffffffff
0x514: V469 = 0xbcf
0x517: JUMP 0xbcf
---
Entry stack: [V13, 0x26d, 0x4, V452]
Stack pops: 2
Stack additions: [V464, V468]
Exit stack: [V13, 0x26d, V464, V468]

================================

Block 0x518
[0x518:0x529]
---
Predecessors: [0x57]
Successors: [0x52a, 0x52e]
---
0x518 JUMPDEST
0x519 PUSH2 0x1a6
0x51c PUSH1 0x4
0x51e DUP1
0x51f CALLDATASIZE
0x520 SUB
0x521 PUSH1 0x20
0x523 DUP2
0x524 LT
0x525 ISZERO
0x526 PUSH2 0x52e
0x529 JUMPI
---
0x518: JUMPDEST 
0x519: V470 = 0x1a6
0x51c: V471 = 0x4
0x51f: V472 = CALLDATASIZE
0x520: V473 = SUB V472 0x4
0x521: V474 = 0x20
0x524: V475 = LT V473 0x20
0x525: V476 = ISZERO V475
0x526: V477 = 0x52e
0x529: JUMPI 0x52e V476
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1a6, 0x4, V473]
Exit stack: [V13, 0x1a6, 0x4, V473]

================================

Block 0x52a
[0x52a:0x52d]
---
Predecessors: [0x518]
Successors: []
---
0x52a PUSH1 0x0
0x52c DUP1
0x52d REVERT
---
0x52a: V478 = 0x0
0x52d: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, 0x4, V473]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, 0x4, V473]

================================

Block 0x52e
[0x52e:0x543]
---
Predecessors: [0x518]
Successors: [0x544, 0x548]
---
0x52e JUMPDEST
0x52f DUP2
0x530 ADD
0x531 SWAP1
0x532 PUSH1 0x20
0x534 DUP2
0x535 ADD
0x536 DUP2
0x537 CALLDATALOAD
0x538 PUSH1 0x1
0x53a PUSH1 0x20
0x53c SHL
0x53d DUP2
0x53e GT
0x53f ISZERO
0x540 PUSH2 0x548
0x543 JUMPI
---
0x52e: JUMPDEST 
0x530: V479 = ADD 0x4 V473
0x532: V480 = 0x20
0x535: V481 = ADD 0x4 0x20
0x537: V482 = CALLDATALOAD 0x4
0x538: V483 = 0x1
0x53a: V484 = 0x20
0x53c: V485 = SHL 0x20 0x1
0x53e: V486 = GT V482 0x100000000
0x53f: V487 = ISZERO V486
0x540: V488 = 0x548
0x543: JUMPI 0x548 V487
---
Entry stack: [V13, 0x1a6, 0x4, V473]
Stack pops: 2
Stack additions: [V479, S1, 0x24, V482]
Exit stack: [V13, 0x1a6, V479, 0x4, 0x24, V482]

================================

Block 0x544
[0x544:0x547]
---
Predecessors: [0x52e]
Successors: []
---
0x544 PUSH1 0x0
0x546 DUP1
0x547 REVERT
---
0x544: V489 = 0x0
0x547: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, V479, 0x4, 0x24, V482]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V479, 0x4, 0x24, V482]

================================

Block 0x548
[0x548:0x555]
---
Predecessors: [0x52e]
Successors: [0x556, 0x55a]
---
0x548 JUMPDEST
0x549 DUP3
0x54a ADD
0x54b DUP4
0x54c PUSH1 0x20
0x54e DUP3
0x54f ADD
0x550 GT
0x551 ISZERO
0x552 PUSH2 0x55a
0x555 JUMPI
---
0x548: JUMPDEST 
0x54a: V490 = ADD 0x4 V482
0x54c: V491 = 0x20
0x54f: V492 = ADD V490 0x20
0x550: V493 = GT V492 V479
0x551: V494 = ISZERO V493
0x552: V495 = 0x55a
0x555: JUMPI 0x55a V494
---
Entry stack: [V13, 0x1a6, V479, 0x4, 0x24, V482]
Stack pops: 4
Stack additions: [S3, S2, S1, V490]
Exit stack: [V13, 0x1a6, V479, 0x4, 0x24, V490]

================================

Block 0x556
[0x556:0x559]
---
Predecessors: [0x548]
Successors: []
---
0x556 PUSH1 0x0
0x558 DUP1
0x559 REVERT
---
0x556: V496 = 0x0
0x559: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, V479, 0x4, 0x24, V490]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V479, 0x4, 0x24, V490]

================================

Block 0x55a
[0x55a:0x576]
---
Predecessors: [0x548]
Successors: [0x577, 0x57b]
---
0x55a JUMPDEST
0x55b DUP1
0x55c CALLDATALOAD
0x55d SWAP1
0x55e PUSH1 0x20
0x560 ADD
0x561 SWAP2
0x562 DUP5
0x563 PUSH1 0x20
0x565 DUP4
0x566 MUL
0x567 DUP5
0x568 ADD
0x569 GT
0x56a PUSH1 0x1
0x56c PUSH1 0x20
0x56e SHL
0x56f DUP4
0x570 GT
0x571 OR
0x572 ISZERO
0x573 PUSH2 0x57b
0x576 JUMPI
---
0x55a: JUMPDEST 
0x55c: V497 = CALLDATALOAD V490
0x55e: V498 = 0x20
0x560: V499 = ADD 0x20 V490
0x563: V500 = 0x20
0x566: V501 = MUL V497 0x20
0x568: V502 = ADD V499 V501
0x569: V503 = GT V502 V479
0x56a: V504 = 0x1
0x56c: V505 = 0x20
0x56e: V506 = SHL 0x20 0x1
0x570: V507 = GT V497 0x100000000
0x571: V508 = OR V507 V503
0x572: V509 = ISZERO V508
0x573: V510 = 0x57b
0x576: JUMPI 0x57b V509
---
Entry stack: [V13, 0x1a6, V479, 0x4, 0x24, V490]
Stack pops: 4
Stack additions: [S3, S2, V499, V497, S1]
Exit stack: [V13, 0x1a6, V479, 0x4, V499, V497, 0x24]

================================

Block 0x577
[0x577:0x57a]
---
Predecessors: [0x55a]
Successors: []
---
0x577 PUSH1 0x0
0x579 DUP1
0x57a REVERT
---
0x577: V511 = 0x0
0x57a: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1a6, V479, 0x4, V499, V497, 0x24]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V479, 0x4, V499, V497, 0x24]

================================

Block 0x57b
[0x57b:0x5b8]
---
Predecessors: [0x55a]
Successors: [0xbfa]
---
0x57b JUMPDEST
0x57c SWAP2
0x57d SWAP1
0x57e DUP1
0x57f DUP1
0x580 PUSH1 0x20
0x582 MUL
0x583 PUSH1 0x20
0x585 ADD
0x586 PUSH1 0x40
0x588 MLOAD
0x589 SWAP1
0x58a DUP2
0x58b ADD
0x58c PUSH1 0x40
0x58e MSTORE
0x58f DUP1
0x590 SWAP4
0x591 SWAP3
0x592 SWAP2
0x593 SWAP1
0x594 DUP2
0x595 DUP2
0x596 MSTORE
0x597 PUSH1 0x20
0x599 ADD
0x59a DUP4
0x59b DUP4
0x59c PUSH1 0x20
0x59e MUL
0x59f DUP1
0x5a0 DUP3
0x5a1 DUP5
0x5a2 CALLDATACOPY
0x5a3 PUSH1 0x0
0x5a5 SWAP3
0x5a6 ADD
0x5a7 SWAP2
0x5a8 SWAP1
0x5a9 SWAP2
0x5aa MSTORE
0x5ab POP
0x5ac SWAP3
0x5ad SWAP6
0x5ae POP
0x5af PUSH2 0xbfa
0x5b2 SWAP5
0x5b3 POP
0x5b4 POP
0x5b5 POP
0x5b6 POP
0x5b7 POP
0x5b8 JUMP
---
0x57b: JUMPDEST 
0x580: V512 = 0x20
0x582: V513 = MUL 0x20 V497
0x583: V514 = 0x20
0x585: V515 = ADD 0x20 V513
0x586: V516 = 0x40
0x588: V517 = M[0x40]
0x58b: V518 = ADD V517 V515
0x58c: V519 = 0x40
0x58e: M[0x40] = V518
0x596: M[V517] = V497
0x597: V520 = 0x20
0x599: V521 = ADD 0x20 V517
0x59c: V522 = 0x20
0x59e: V523 = MUL 0x20 V497
0x5a2: CALLDATACOPY V521 V499 V523
0x5a3: V524 = 0x0
0x5a6: V525 = ADD V521 V523
0x5aa: M[V525] = 0x0
0x5af: V526 = 0xbfa
0x5b8: JUMP 0xbfa
---
Entry stack: [V13, 0x1a6, V479, 0x4, V499, V497, 0x24]
Stack pops: 5
Stack additions: [V517]
Exit stack: [V13, 0x1a6, V517]

================================

Block 0x5b9
[0x5b9:0x5cb]
---
Predecessors: [0x168]
Successors: [0x5cc, 0x601]
---
0x5b9 JUMPDEST
0x5ba PUSH1 0xa
0x5bc SLOAD
0x5bd PUSH1 0x1
0x5bf PUSH1 0x1
0x5c1 PUSH1 0xa0
0x5c3 SHL
0x5c4 SUB
0x5c5 AND
0x5c6 CALLER
0x5c7 EQ
0x5c8 PUSH2 0x601
0x5cb JUMPI
---
0x5b9: JUMPDEST 
0x5ba: V527 = 0xa
0x5bc: V528 = S[0xa]
0x5bd: V529 = 0x1
0x5bf: V530 = 0x1
0x5c1: V531 = 0xa0
0x5c3: V532 = SHL 0xa0 0x1
0x5c4: V533 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5c5: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V528
0x5c6: V535 = CALLER
0x5c7: V536 = EQ V535 V534
0x5c8: V537 = 0x601
0x5cb: JUMPI 0x601 V536
---
Entry stack: [V13, 0x1a6, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V122]

================================

Block 0x5cc
[0x5cc:0x600]
---
Predecessors: [0x5b9]
Successors: []
---
0x5cc PUSH1 0x40
0x5ce DUP1
0x5cf MLOAD
0x5d0 PUSH3 0x461bcd
0x5d4 PUSH1 0xe5
0x5d6 SHL
0x5d7 DUP2
0x5d8 MSTORE
0x5d9 PUSH1 0x20
0x5db PUSH1 0x4
0x5dd DUP3
0x5de ADD
0x5df MSTORE
0x5e0 PUSH1 0x6
0x5e2 PUSH1 0x24
0x5e4 DUP3
0x5e5 ADD
0x5e6 MSTORE
0x5e7 PUSH6 0x10b7bbb732b9
0x5ee PUSH1 0xd1
0x5f0 SHL
0x5f1 PUSH1 0x44
0x5f3 DUP3
0x5f4 ADD
0x5f5 MSTORE
0x5f6 SWAP1
0x5f7 MLOAD
0x5f8 SWAP1
0x5f9 DUP2
0x5fa SWAP1
0x5fb SUB
0x5fc PUSH1 0x64
0x5fe ADD
0x5ff SWAP1
0x600 REVERT
---
0x5cc: V538 = 0x40
0x5cf: V539 = M[0x40]
0x5d0: V540 = 0x461bcd
0x5d4: V541 = 0xe5
0x5d6: V542 = SHL 0xe5 0x461bcd
0x5d8: M[V539] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5d9: V543 = 0x20
0x5db: V544 = 0x4
0x5de: V545 = ADD V539 0x4
0x5df: M[V545] = 0x20
0x5e0: V546 = 0x6
0x5e2: V547 = 0x24
0x5e5: V548 = ADD V539 0x24
0x5e6: M[V548] = 0x6
0x5e7: V549 = 0x10b7bbb732b9
0x5ee: V550 = 0xd1
0x5f0: V551 = SHL 0xd1 0x10b7bbb732b9
0x5f1: V552 = 0x44
0x5f4: V553 = ADD V539 0x44
0x5f5: M[V553] = 0x216f776e65720000000000000000000000000000000000000000000000000000
0x5f7: V554 = M[0x40]
0x5fb: V555 = SUB V539 V554
0x5fc: V556 = 0x64
0x5fe: V557 = ADD 0x64 V555
0x600: REVERT V554 V557
---
Entry stack: [V13, 0x1a6, V122]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V122]

================================

Block 0x601
[0x601:0x603]
---
Predecessors: [0x5b9]
Successors: [0x604]
---
0x601 JUMPDEST
0x602 PUSH1 0x0
---
0x601: JUMPDEST 
0x602: V558 = 0x0
---
Entry stack: [V13, 0x1a6, V122]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1a6, V122, 0x0]

================================

Block 0x604
[0x604:0x60d]
---
Predecessors: [0x601, 0x670]
Successors: [0x60e, 0x6aa]
---
0x604 JUMPDEST
0x605 DUP2
0x606 MLOAD
0x607 DUP2
0x608 LT
0x609 ISZERO
0x60a PUSH2 0x6aa
0x60d JUMPI
---
0x604: JUMPDEST 
0x606: V559 = M[V122]
0x608: V560 = LT S0 V559
0x609: V561 = ISZERO V560
0x60a: V562 = 0x6aa
0x60d: JUMPI 0x6aa V561
---
Entry stack: [V13, 0x1a6, V122, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x1a6, V122, S0]

================================

Block 0x60e
[0x60e:0x61d]
---
Predecessors: [0x604]
Successors: [0x61e, 0x61f]
---
0x60e PUSH1 0x1
0x610 PUSH1 0x2
0x612 PUSH1 0x0
0x614 DUP5
0x615 DUP5
0x616 DUP2
0x617 MLOAD
0x618 DUP2
0x619 LT
0x61a PUSH2 0x61f
0x61d JUMPI
---
0x60e: V563 = 0x1
0x610: V564 = 0x2
0x612: V565 = 0x0
0x617: V566 = M[V122]
0x619: V567 = LT S0 V566
0x61a: V568 = 0x61f
0x61d: JUMPI 0x61f V567
---
Entry stack: [V13, 0x1a6, V122, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x1, 0x2, 0x0, S1, S0]
Exit stack: [V13, 0x1a6, V122, S0, 0x1, 0x2, 0x0, V122, S0]

================================

Block 0x61e
[0x61e:0x61e]
---
Predecessors: [0x60e]
Successors: []
---
0x61e INVALID
---
0x61e: INVALID 
---
Entry stack: [V13, 0x1a6, V122, S5, 0x1, 0x2, 0x0, V122, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V122, S5, 0x1, 0x2, 0x0, V122, S0]

================================

Block 0x61f
[0x61f:0x66e]
---
Predecessors: [0x60e]
Successors: [0x66f, 0x670]
---
0x61f JUMPDEST
0x620 PUSH1 0x20
0x622 MUL
0x623 PUSH1 0x20
0x625 ADD
0x626 ADD
0x627 MLOAD
0x628 PUSH1 0x1
0x62a PUSH1 0x1
0x62c PUSH1 0xa0
0x62e SHL
0x62f SUB
0x630 AND
0x631 PUSH1 0x1
0x633 PUSH1 0x1
0x635 PUSH1 0xa0
0x637 SHL
0x638 SUB
0x639 AND
0x63a DUP2
0x63b MSTORE
0x63c PUSH1 0x20
0x63e ADD
0x63f SWAP1
0x640 DUP2
0x641 MSTORE
0x642 PUSH1 0x20
0x644 ADD
0x645 PUSH1 0x0
0x647 SHA3
0x648 PUSH1 0x0
0x64a PUSH2 0x100
0x64d EXP
0x64e DUP2
0x64f SLOAD
0x650 DUP2
0x651 PUSH1 0xff
0x653 MUL
0x654 NOT
0x655 AND
0x656 SWAP1
0x657 DUP4
0x658 ISZERO
0x659 ISZERO
0x65a MUL
0x65b OR
0x65c SWAP1
0x65d SSTORE
0x65e POP
0x65f PUSH1 0x0
0x661 PUSH1 0x1
0x663 PUSH1 0x0
0x665 DUP5
0x666 DUP5
0x667 DUP2
0x668 MLOAD
0x669 DUP2
0x66a LT
0x66b PUSH2 0x670
0x66e JUMPI
---
0x61f: JUMPDEST 
0x620: V569 = 0x20
0x622: V570 = MUL 0x20 S0
0x623: V571 = 0x20
0x625: V572 = ADD 0x20 V570
0x626: V573 = ADD V572 V122
0x627: V574 = M[V573]
0x628: V575 = 0x1
0x62a: V576 = 0x1
0x62c: V577 = 0xa0
0x62e: V578 = SHL 0xa0 0x1
0x62f: V579 = SUB 0x10000000000000000000000000000000000000000 0x1
0x630: V580 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0x631: V581 = 0x1
0x633: V582 = 0x1
0x635: V583 = 0xa0
0x637: V584 = SHL 0xa0 0x1
0x638: V585 = SUB 0x10000000000000000000000000000000000000000 0x1
0x639: V586 = AND 0xffffffffffffffffffffffffffffffffffffffff V580
0x63b: M[0x0] = V586
0x63c: V587 = 0x20
0x63e: V588 = ADD 0x20 0x0
0x641: M[0x20] = 0x2
0x642: V589 = 0x20
0x644: V590 = ADD 0x20 0x20
0x645: V591 = 0x0
0x647: V592 = SHA3 0x0 0x40
0x648: V593 = 0x0
0x64a: V594 = 0x100
0x64d: V595 = EXP 0x100 0x0
0x64f: V596 = S[V592]
0x651: V597 = 0xff
0x653: V598 = MUL 0xff 0x1
0x654: V599 = NOT 0xff
0x655: V600 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V596
0x658: V601 = ISZERO 0x1
0x659: V602 = ISZERO 0x0
0x65a: V603 = MUL 0x1 0x1
0x65b: V604 = OR 0x1 V600
0x65d: S[V592] = V604
0x65f: V605 = 0x0
0x661: V606 = 0x1
0x663: V607 = 0x0
0x668: V608 = M[V122]
0x66a: V609 = LT S5 V608
0x66b: V610 = 0x670
0x66e: JUMPI 0x670 V609
---
Entry stack: [V13, 0x1a6, V122, S5, 0x1, 0x2, 0x0, V122, S0]
Stack pops: 7
Stack additions: [S6, S5, 0x0, 0x1, 0x0, S6, S5]
Exit stack: [V13, 0x1a6, V122, S5, 0x0, 0x1, 0x0, V122, S5]

================================

Block 0x66f
[0x66f:0x66f]
---
Predecessors: [0x61f]
Successors: []
---
0x66f INVALID
---
0x66f: INVALID 
---
Entry stack: [V13, 0x1a6, V122, S5, 0x0, 0x1, 0x0, V122, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V122, S5, 0x0, 0x1, 0x0, V122, S0]

================================

Block 0x670
[0x670:0x6a9]
---
Predecessors: [0x61f]
Successors: [0x604]
---
0x670 JUMPDEST
0x671 PUSH1 0x20
0x673 SWAP1
0x674 DUP2
0x675 MUL
0x676 SWAP2
0x677 SWAP1
0x678 SWAP2
0x679 ADD
0x67a DUP2
0x67b ADD
0x67c MLOAD
0x67d PUSH1 0x1
0x67f PUSH1 0x1
0x681 PUSH1 0xa0
0x683 SHL
0x684 SUB
0x685 AND
0x686 DUP3
0x687 MSTORE
0x688 DUP2
0x689 ADD
0x68a SWAP2
0x68b SWAP1
0x68c SWAP2
0x68d MSTORE
0x68e PUSH1 0x40
0x690 ADD
0x691 PUSH1 0x0
0x693 SHA3
0x694 DUP1
0x695 SLOAD
0x696 PUSH1 0xff
0x698 NOT
0x699 AND
0x69a SWAP2
0x69b ISZERO
0x69c ISZERO
0x69d SWAP2
0x69e SWAP1
0x69f SWAP2
0x6a0 OR
0x6a1 SWAP1
0x6a2 SSTORE
0x6a3 PUSH1 0x1
0x6a5 ADD
0x6a6 PUSH2 0x604
0x6a9 JUMP
---
0x670: JUMPDEST 
0x671: V611 = 0x20
0x675: V612 = MUL 0x20 S0
0x679: V613 = ADD V612 V122
0x67b: V614 = ADD 0x20 V613
0x67c: V615 = M[V614]
0x67d: V616 = 0x1
0x67f: V617 = 0x1
0x681: V618 = 0xa0
0x683: V619 = SHL 0xa0 0x1
0x684: V620 = SUB 0x10000000000000000000000000000000000000000 0x1
0x685: V621 = AND 0xffffffffffffffffffffffffffffffffffffffff V615
0x687: M[0x0] = V621
0x689: V622 = ADD 0x0 0x20
0x68d: M[0x20] = 0x1
0x68e: V623 = 0x40
0x690: V624 = ADD 0x40 0x0
0x691: V625 = 0x0
0x693: V626 = SHA3 0x0 0x40
0x695: V627 = S[V626]
0x696: V628 = 0xff
0x698: V629 = NOT 0xff
0x699: V630 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V627
0x69b: V631 = ISZERO 0x0
0x69c: V632 = ISZERO 0x1
0x6a0: V633 = OR 0x0 V630
0x6a2: S[V626] = V633
0x6a3: V634 = 0x1
0x6a5: V635 = ADD 0x1 S5
0x6a6: V636 = 0x604
0x6a9: JUMP 0x604
---
Entry stack: [V13, 0x1a6, V122, S5, 0x0, 0x1, 0x0, V122, S0]
Stack pops: 6
Stack additions: [V635]
Exit stack: [V13, 0x1a6, V122, V635]

================================

Block 0x6aa
[0x6aa:0x6ad]
---
Predecessors: [0x604, 0xc45]
Successors: [0x1a6]
---
0x6aa JUMPDEST
0x6ab POP
0x6ac POP
0x6ad JUMP
---
0x6aa: JUMPDEST 
0x6ad: JUMP 0x1a6
---
Entry stack: [V13, 0x1a6, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13]

================================

Block 0x6ae
[0x6ae:0x6f3]
---
Predecessors: [0x1a8]
Successors: [0x6f4, 0x73a]
---
0x6ae JUMPDEST
0x6af PUSH1 0x6
0x6b1 DUP1
0x6b2 SLOAD
0x6b3 PUSH1 0x40
0x6b5 DUP1
0x6b6 MLOAD
0x6b7 PUSH1 0x20
0x6b9 PUSH1 0x1f
0x6bb PUSH1 0x2
0x6bd PUSH1 0x0
0x6bf NOT
0x6c0 PUSH2 0x100
0x6c3 PUSH1 0x1
0x6c5 DUP9
0x6c6 AND
0x6c7 ISZERO
0x6c8 MUL
0x6c9 ADD
0x6ca SWAP1
0x6cb SWAP6
0x6cc AND
0x6cd SWAP5
0x6ce SWAP1
0x6cf SWAP5
0x6d0 DIV
0x6d1 SWAP4
0x6d2 DUP5
0x6d3 ADD
0x6d4 DUP2
0x6d5 SWAP1
0x6d6 DIV
0x6d7 DUP2
0x6d8 MUL
0x6d9 DUP3
0x6da ADD
0x6db DUP2
0x6dc ADD
0x6dd SWAP1
0x6de SWAP3
0x6df MSTORE
0x6e0 DUP3
0x6e1 DUP2
0x6e2 MSTORE
0x6e3 PUSH1 0x60
0x6e5 SWAP4
0x6e6 SWAP1
0x6e7 SWAP3
0x6e8 SWAP1
0x6e9 SWAP2
0x6ea DUP4
0x6eb ADD
0x6ec DUP3
0x6ed DUP3
0x6ee DUP1
0x6ef ISZERO
0x6f0 PUSH2 0x73a
0x6f3 JUMPI
---
0x6ae: JUMPDEST 
0x6af: V637 = 0x6
0x6b2: V638 = S[0x6]
0x6b3: V639 = 0x40
0x6b6: V640 = M[0x40]
0x6b7: V641 = 0x20
0x6b9: V642 = 0x1f
0x6bb: V643 = 0x2
0x6bd: V644 = 0x0
0x6bf: V645 = NOT 0x0
0x6c0: V646 = 0x100
0x6c3: V647 = 0x1
0x6c6: V648 = AND V638 0x1
0x6c7: V649 = ISZERO V648
0x6c8: V650 = MUL V649 0x100
0x6c9: V651 = ADD V650 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x6cc: V652 = AND V638 V651
0x6d0: V653 = DIV V652 0x2
0x6d3: V654 = ADD V653 0x1f
0x6d6: V655 = DIV V654 0x20
0x6d8: V656 = MUL 0x20 V655
0x6da: V657 = ADD V640 V656
0x6dc: V658 = ADD 0x20 V657
0x6df: M[0x40] = V658
0x6e2: M[V640] = V653
0x6e3: V659 = 0x60
0x6eb: V660 = ADD V640 0x20
0x6ef: V661 = ISZERO V653
0x6f0: V662 = 0x73a
0x6f3: JUMPI 0x73a V661
---
Entry stack: [V13, 0x1b0]
Stack pops: 0
Stack additions: [0x60, V640, 0x6, V653, V660, 0x6, V653]
Exit stack: [V13, 0x1b0, 0x60, V640, 0x6, V653, V660, 0x6, V653]

================================

Block 0x6f4
[0x6f4:0x6fb]
---
Predecessors: [0x6ae]
Successors: [0x6fc, 0x70f]
---
0x6f4 DUP1
0x6f5 PUSH1 0x1f
0x6f7 LT
0x6f8 PUSH2 0x70f
0x6fb JUMPI
---
0x6f5: V663 = 0x1f
0x6f7: V664 = LT 0x1f V653
0x6f8: V665 = 0x70f
0x6fb: JUMPI 0x70f V664
---
Entry stack: [V13, 0x1b0, 0x60, V640, 0x6, V653, V660, 0x6, V653]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x1b0, 0x60, V640, 0x6, V653, V660, 0x6, V653]

================================

Block 0x6fc
[0x6fc:0x70e]
---
Predecessors: [0x6f4]
Successors: [0x73a]
---
0x6fc PUSH2 0x100
0x6ff DUP1
0x700 DUP4
0x701 SLOAD
0x702 DIV
0x703 MUL
0x704 DUP4
0x705 MSTORE
0x706 SWAP2
0x707 PUSH1 0x20
0x709 ADD
0x70a SWAP2
0x70b PUSH2 0x73a
0x70e JUMP
---
0x6fc: V666 = 0x100
0x701: V667 = S[0x6]
0x702: V668 = DIV V667 0x100
0x703: V669 = MUL V668 0x100
0x705: M[V660] = V669
0x707: V670 = 0x20
0x709: V671 = ADD 0x20 V660
0x70b: V672 = 0x73a
0x70e: JUMP 0x73a
---
Entry stack: [V13, 0x1b0, 0x60, V640, 0x6, V653, V660, 0x6, V653]
Stack pops: 3
Stack additions: [V671, S1, S0]
Exit stack: [V13, 0x1b0, 0x60, V640, 0x6, V653, V671, 0x6, V653]

================================

Block 0x70f
[0x70f:0x71c]
---
Predecessors: [0x6f4, 0xab9]
Successors: [0x71d]
---
0x70f JUMPDEST
0x710 DUP3
0x711 ADD
0x712 SWAP2
0x713 SWAP1
0x714 PUSH1 0x0
0x716 MSTORE
0x717 PUSH1 0x20
0x719 PUSH1 0x0
0x71b SHA3
0x71c SWAP1
---
0x70f: JUMPDEST 
0x711: V673 = ADD S2 S0
0x714: V674 = 0x0
0x716: M[0x0] = {0x6, 0x7}
0x717: V675 = 0x20
0x719: V676 = 0x0
0x71b: V677 = SHA3 0x0 0x20
---
Entry stack: [V13, 0x1b0, 0x60, S5, {0x6, 0x7}, S3, S2, {0x6, 0x7}, S0]
Stack pops: 3
Stack additions: [V673, V677, S2]
Exit stack: [V13, 0x1b0, 0x60, S5, {0x6, 0x7}, S3, V673, V677, S2]

================================

Block 0x71d
[0x71d:0x730]
---
Predecessors: [0x70f, 0x71d]
Successors: [0x71d, 0x731]
---
0x71d JUMPDEST
0x71e DUP2
0x71f SLOAD
0x720 DUP2
0x721 MSTORE
0x722 SWAP1
0x723 PUSH1 0x1
0x725 ADD
0x726 SWAP1
0x727 PUSH1 0x20
0x729 ADD
0x72a DUP1
0x72b DUP4
0x72c GT
0x72d PUSH2 0x71d
0x730 JUMPI
---
0x71d: JUMPDEST 
0x71f: V678 = S[S1]
0x721: M[S0] = V678
0x723: V679 = 0x1
0x725: V680 = ADD 0x1 S1
0x727: V681 = 0x20
0x729: V682 = ADD 0x20 S0
0x72c: V683 = GT V673 V682
0x72d: V684 = 0x71d
0x730: JUMPI 0x71d V683
---
Entry stack: [V13, 0x1b0, 0x60, S5, {0x6, 0x7}, S3, V673, S1, S0]
Stack pops: 3
Stack additions: [S2, V680, V682]
Exit stack: [V13, 0x1b0, 0x60, S5, {0x6, 0x7}, S3, V673, V680, V682]

================================

Block 0x731
[0x731:0x739]
---
Predecessors: [0x71d]
Successors: [0x73a]
---
0x731 DUP3
0x732 SWAP1
0x733 SUB
0x734 PUSH1 0x1f
0x736 AND
0x737 DUP3
0x738 ADD
0x739 SWAP2
---
0x733: V685 = SUB V682 V673
0x734: V686 = 0x1f
0x736: V687 = AND 0x1f V685
0x738: V688 = ADD V673 V687
---
Entry stack: [V13, 0x1b0, 0x60, S5, {0x6, 0x7}, S3, V673, V680, V682]
Stack pops: 3
Stack additions: [V688, S1, S2]
Exit stack: [V13, 0x1b0, 0x60, S5, {0x6, 0x7}, S3, V688, V680, V673]

================================

Block 0x73a
[0x73a:0x743]
---
Predecessors: [0x6ae, 0x6fc, 0x731, 0xa73, 0xac1]
Successors: [0x1b0]
---
0x73a JUMPDEST
0x73b POP
0x73c POP
0x73d POP
0x73e POP
0x73f POP
0x740 SWAP1
0x741 POP
0x742 SWAP1
0x743 JUMP
---
0x73a: JUMPDEST 
0x743: JUMP 0x1b0
---
Entry stack: [V13, 0x1b0, 0x60, S5, {0x6, 0x7}, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V13, S5]

================================

Block 0x744
[0x744:0x750]
---
Predecessors: [0x23b]
Successors: [0xd4b]
---
0x744 JUMPDEST
0x745 PUSH1 0x0
0x747 PUSH2 0x758
0x74a PUSH2 0x751
0x74d PUSH2 0xd4b
0x750 JUMP
---
0x744: JUMPDEST 
0x745: V689 = 0x0
0x747: V690 = 0x758
0x74a: V691 = 0x751
0x74d: V692 = 0xd4b
0x750: JUMP 0xd4b
---
Entry stack: [V13, 0x251, V187, V190]
Stack pops: 0
Stack additions: [0x0, 0x758, 0x751]
Exit stack: [V13, 0x251, V187, V190, 0x0, 0x758, 0x751]

================================

Block 0x751
[0x751:0x757]
---
Predecessors: [0xd4b]
Successors: [0xd4f]
---
0x751 JUMPDEST
0x752 DUP5
0x753 DUP5
0x754 PUSH2 0xd4f
0x757 JUMP
---
0x751: JUMPDEST 
0x754: V693 = 0xd4f
0x757: JUMP 0xd4f
---
Entry stack: [V13, 0x1a6, V271, V312, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1239]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S3]
Exit stack: [V13, 0x1a6, V271, V312, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1239, S4, S3]

================================

Block 0x758
[0x758:0x760]
---
Predecessors: [0xdd9, 0x13cb]
Successors: [0x251, 0x959]
---
0x758 JUMPDEST
0x759 POP
0x75a PUSH1 0x1
0x75c SWAP3
0x75d SWAP2
0x75e POP
0x75f POP
0x760 JUMP
---
0x758: JUMPDEST 
0x75a: V694 = 0x1
0x760: JUMP S3
---
Entry stack: [V13, 0x1a6, V271, V312, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, 0x1a6, V271, V312, S5, S4, 0x1]

================================

Block 0x761
[0x761:0x766]
---
Predecessors: [0x265]
Successors: [0x26d]
---
0x761 JUMPDEST
0x762 PUSH1 0x5
0x764 SLOAD
0x765 SWAP1
0x766 JUMP
---
0x761: JUMPDEST 
0x762: V695 = 0x5
0x764: V696 = S[0x5]
0x766: JUMP 0x26d
---
Entry stack: [V13, 0x26d]
Stack pops: 1
Stack additions: [V696]
Exit stack: [V13, V696]

================================

Block 0x767
[0x767:0x773]
---
Predecessors: [0x295]
Successors: [0xe3b]
---
0x767 JUMPDEST
0x768 PUSH1 0x0
0x76a PUSH2 0x774
0x76d DUP5
0x76e DUP5
0x76f DUP5
0x770 PUSH2 0xe3b
0x773 JUMP
---
0x767: JUMPDEST 
0x768: V697 = 0x0
0x76a: V698 = 0x774
0x770: V699 = 0xe3b
0x773: JUMP 0xe3b
---
Entry stack: [V13, 0x251, V223, V227, V230]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x774, S2, S1, S0]
Exit stack: [V13, 0x251, V223, V227, V230, 0x0, 0x774, V223, V227, V230]

================================

Block 0x774
[0x774:0x77f]
---
Predecessors: [0x13cb]
Successors: [0xd4b]
---
0x774 JUMPDEST
0x775 PUSH2 0x7e4
0x778 DUP5
0x779 PUSH2 0x780
0x77c PUSH2 0xd4b
0x77f JUMP
---
0x774: JUMPDEST 
0x775: V700 = 0x7e4
0x779: V701 = 0x780
0x77c: V702 = 0xd4b
0x77f: JUMP 0xd4b
---
Entry stack: [V13, 0x1a6, V271, V312, S5, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x7e4, S3, 0x780]
Exit stack: [V13, 0x1a6, V271, V312, S5, S4, S3, S2, S1, 0x0, 0x7e4, S3, 0x780]

================================

Block 0x780
[0x780:0x7bd]
---
Predecessors: [0xd4b]
Successors: [0xd4b]
---
0x780 JUMPDEST
0x781 PUSH2 0x7df
0x784 DUP6
0x785 PUSH1 0x40
0x787 MLOAD
0x788 DUP1
0x789 PUSH1 0x60
0x78b ADD
0x78c PUSH1 0x40
0x78e MSTORE
0x78f DUP1
0x790 PUSH1 0x28
0x792 DUP2
0x793 MSTORE
0x794 PUSH1 0x20
0x796 ADD
0x797 PUSH2 0x14fd
0x79a PUSH1 0x28
0x79c SWAP2
0x79d CODECOPY
0x79e PUSH1 0x1
0x7a0 PUSH1 0x1
0x7a2 PUSH1 0xa0
0x7a4 SHL
0x7a5 SUB
0x7a6 DUP11
0x7a7 AND
0x7a8 PUSH1 0x0
0x7aa SWAP1
0x7ab DUP2
0x7ac MSTORE
0x7ad PUSH1 0x4
0x7af PUSH1 0x20
0x7b1 MSTORE
0x7b2 PUSH1 0x40
0x7b4 DUP2
0x7b5 SHA3
0x7b6 SWAP1
0x7b7 PUSH2 0x7be
0x7ba PUSH2 0xd4b
0x7bd JUMP
---
0x780: JUMPDEST 
0x781: V703 = 0x7df
0x785: V704 = 0x40
0x787: V705 = M[0x40]
0x789: V706 = 0x60
0x78b: V707 = ADD 0x60 V705
0x78c: V708 = 0x40
0x78e: M[0x40] = V707
0x790: V709 = 0x28
0x793: M[V705] = 0x28
0x794: V710 = 0x20
0x796: V711 = ADD 0x20 V705
0x797: V712 = 0x14fd
0x79a: V713 = 0x28
0x79d: CODECOPY V711 0x14fd 0x28
0x79e: V714 = 0x1
0x7a0: V715 = 0x1
0x7a2: V716 = 0xa0
0x7a4: V717 = SHL 0xa0 0x1
0x7a5: V718 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a7: V719 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x7a8: V720 = 0x0
0x7ac: M[0x0] = V719
0x7ad: V721 = 0x4
0x7af: V722 = 0x20
0x7b1: M[0x20] = 0x4
0x7b2: V723 = 0x40
0x7b5: V724 = SHA3 0x0 0x40
0x7b7: V725 = 0x7be
0x7ba: V726 = 0xd4b
0x7bd: JUMP 0xd4b
---
Entry stack: [V13, 0x1a6, V271, V312, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1239]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x7df, S4, V705, V724, 0x0, 0x7be]
Exit stack: [V13, 0x1a6, V271, V312, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1239, 0x7df, S4, V705, V724, 0x0, 0x7be]

================================

Block 0x7be
[0x7be:0x7de]
---
Predecessors: [0xd4b]
Successors: [0x13d3]
---
0x7be JUMPDEST
0x7bf PUSH1 0x1
0x7c1 PUSH1 0x1
0x7c3 PUSH1 0xa0
0x7c5 SHL
0x7c6 SUB
0x7c7 AND
0x7c8 DUP2
0x7c9 MSTORE
0x7ca PUSH1 0x20
0x7cc DUP2
0x7cd ADD
0x7ce SWAP2
0x7cf SWAP1
0x7d0 SWAP2
0x7d1 MSTORE
0x7d2 PUSH1 0x40
0x7d4 ADD
0x7d5 PUSH1 0x0
0x7d7 SHA3
0x7d8 SLOAD
0x7d9 SWAP2
0x7da SWAP1
0x7db PUSH2 0x13d3
0x7de JUMP
---
0x7be: JUMPDEST 
0x7bf: V727 = 0x1
0x7c1: V728 = 0x1
0x7c3: V729 = 0xa0
0x7c5: V730 = SHL 0xa0 0x1
0x7c6: V731 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c7: V732 = AND 0xffffffffffffffffffffffffffffffffffffffff V1239
0x7c9: M[S1] = V732
0x7ca: V733 = 0x20
0x7cd: V734 = ADD S1 0x20
0x7d1: M[V734] = S2
0x7d2: V735 = 0x40
0x7d4: V736 = ADD 0x40 S1
0x7d5: V737 = 0x0
0x7d7: V738 = SHA3 0x0 V736
0x7d8: V739 = S[V738]
0x7db: V740 = 0x13d3
0x7de: JUMP 0x13d3
---
Entry stack: [V13, 0x1a6, V271, V312, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1239]
Stack pops: 5
Stack additions: [V739, S4, S3]
Exit stack: [V13, 0x1a6, V271, V312, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V739, S4, S3]

================================

Block 0x7df
[0x7df:0x7e3]
---
Predecessors: [0x1462]
Successors: [0xd4f]
---
0x7df JUMPDEST
0x7e0 PUSH2 0xd4f
0x7e3 JUMP
---
0x7df: JUMPDEST 
0x7e0: V741 = 0xd4f
0x7e3: JUMP 0xd4f
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1926]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1926]

================================

Block 0x7e4
[0x7e4:0x7ed]
---
Predecessors: [0xdd9]
Successors: [0x1a6, 0x251]
---
0x7e4 JUMPDEST
0x7e5 POP
0x7e6 PUSH1 0x1
0x7e8 SWAP4
0x7e9 SWAP3
0x7ea POP
0x7eb POP
0x7ec POP
0x7ed JUMP
---
0x7e4: JUMPDEST 
0x7e6: V742 = 0x1
0x7ed: JUMP S4
---
Entry stack: [V13, 0x1a6, V271, V312, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V13, 0x1a6, V271, V312, S5, 0x1]

================================

Block 0x7ee
[0x7ee:0x7f6]
---
Predecessors: [0x2b5]
Successors: [0x2bd]
---
0x7ee JUMPDEST
0x7ef PUSH1 0x8
0x7f1 SLOAD
0x7f2 PUSH1 0xff
0x7f4 AND
0x7f5 SWAP1
0x7f6 JUMP
---
0x7ee: JUMPDEST 
0x7ef: V743 = 0x8
0x7f1: V744 = S[0x8]
0x7f2: V745 = 0xff
0x7f4: V746 = AND 0xff V744
0x7f6: JUMP 0x2bd
---
Entry stack: [V13, 0x2bd]
Stack pops: 1
Stack additions: [V746]
Exit stack: [V13, V746]

================================

Block 0x7f7
[0x7f7:0x809]
---
Predecessors: [0x2e9]
Successors: [0x80a, 0x856]
---
0x7f7 JUMPDEST
0x7f8 PUSH1 0xa
0x7fa SLOAD
0x7fb PUSH1 0x1
0x7fd PUSH1 0x1
0x7ff PUSH1 0xa0
0x801 SHL
0x802 SUB
0x803 AND
0x804 CALLER
0x805 EQ
0x806 PUSH2 0x856
0x809 JUMPI
---
0x7f7: JUMPDEST 
0x7f8: V747 = 0xa
0x7fa: V748 = S[0xa]
0x7fb: V749 = 0x1
0x7fd: V750 = 0x1
0x7ff: V751 = 0xa0
0x801: V752 = SHL 0xa0 0x1
0x802: V753 = SUB 0x10000000000000000000000000000000000000000 0x1
0x803: V754 = AND 0xffffffffffffffffffffffffffffffffffffffff V748
0x804: V755 = CALLER
0x805: V756 = EQ V755 V754
0x806: V757 = 0x856
0x809: JUMPI 0x856 V756
---
Entry stack: [V13, 0x1a6, V257, V260]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V257, V260]

================================

Block 0x80a
[0x80a:0x855]
---
Predecessors: [0x7f7]
Successors: []
---
0x80a PUSH1 0x40
0x80c DUP1
0x80d MLOAD
0x80e PUSH3 0x461bcd
0x812 PUSH1 0xe5
0x814 SHL
0x815 DUP2
0x816 MSTORE
0x817 PUSH1 0x20
0x819 PUSH1 0x4
0x81b DUP3
0x81c ADD
0x81d MSTORE
0x81e PUSH1 0x1f
0x820 PUSH1 0x24
0x822 DUP3
0x823 ADD
0x824 MSTORE
0x825 PUSH32 0x45524332303a206d696e7420746f20746865207a65726f206164647265737300
0x846 PUSH1 0x44
0x848 DUP3
0x849 ADD
0x84a MSTORE
0x84b SWAP1
0x84c MLOAD
0x84d SWAP1
0x84e DUP2
0x84f SWAP1
0x850 SUB
0x851 PUSH1 0x64
0x853 ADD
0x854 SWAP1
0x855 REVERT
---
0x80a: V758 = 0x40
0x80d: V759 = M[0x40]
0x80e: V760 = 0x461bcd
0x812: V761 = 0xe5
0x814: V762 = SHL 0xe5 0x461bcd
0x816: M[V759] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x817: V763 = 0x20
0x819: V764 = 0x4
0x81c: V765 = ADD V759 0x4
0x81d: M[V765] = 0x20
0x81e: V766 = 0x1f
0x820: V767 = 0x24
0x823: V768 = ADD V759 0x24
0x824: M[V768] = 0x1f
0x825: V769 = 0x45524332303a206d696e7420746f20746865207a65726f206164647265737300
0x846: V770 = 0x44
0x849: V771 = ADD V759 0x44
0x84a: M[V771] = 0x45524332303a206d696e7420746f20746865207a65726f206164647265737300
0x84c: V772 = M[0x40]
0x850: V773 = SUB V759 V772
0x851: V774 = 0x64
0x853: V775 = ADD 0x64 V773
0x855: REVERT V772 V775
---
Entry stack: [V13, 0x1a6, V257, V260]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V257, V260]

================================

Block 0x856
[0x856:0x862]
---
Predecessors: [0x7f7]
Successors: [0xcea]
---
0x856 JUMPDEST
0x857 PUSH1 0x5
0x859 SLOAD
0x85a PUSH2 0x863
0x85d SWAP1
0x85e DUP3
0x85f PUSH2 0xcea
0x862 JUMP
---
0x856: JUMPDEST 
0x857: V776 = 0x5
0x859: V777 = S[0x5]
0x85a: V778 = 0x863
0x85f: V779 = 0xcea
0x862: JUMP 0xcea
---
Entry stack: [V13, 0x1a6, V257, V260]
Stack pops: 1
Stack additions: [S0, 0x863, V777, S0]
Exit stack: [V13, 0x1a6, V257, V260, 0x863, V777, V260]

================================

Block 0x863
[0x863:0x88a]
---
Predecessors: [0xd44]
Successors: [0xcea]
---
0x863 JUMPDEST
0x864 PUSH1 0x5
0x866 SSTORE
0x867 PUSH1 0xa
0x869 SLOAD
0x86a PUSH1 0x1
0x86c PUSH1 0x1
0x86e PUSH1 0xa0
0x870 SHL
0x871 SUB
0x872 AND
0x873 PUSH1 0x0
0x875 SWAP1
0x876 DUP2
0x877 MSTORE
0x878 PUSH1 0x20
0x87a DUP2
0x87b SWAP1
0x87c MSTORE
0x87d PUSH1 0x40
0x87f SWAP1
0x880 SHA3
0x881 SLOAD
0x882 PUSH2 0x88b
0x885 SWAP1
0x886 DUP3
0x887 PUSH2 0xcea
0x88a JUMP
---
0x863: JUMPDEST 
0x864: V780 = 0x5
0x866: S[0x5] = S0
0x867: V781 = 0xa
0x869: V782 = S[0xa]
0x86a: V783 = 0x1
0x86c: V784 = 0x1
0x86e: V785 = 0xa0
0x870: V786 = SHL 0xa0 0x1
0x871: V787 = SUB 0x10000000000000000000000000000000000000000 0x1
0x872: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff V782
0x873: V789 = 0x0
0x877: M[0x0] = V788
0x878: V790 = 0x20
0x87c: M[0x20] = 0x0
0x87d: V791 = 0x40
0x880: V792 = SHA3 0x0 0x40
0x881: V793 = S[V792]
0x882: V794 = 0x88b
0x887: V795 = 0xcea
0x88a: JUMP 0xcea
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, 0x88b, V793, S1]
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, 0x88b, V793, S1]

================================

Block 0x88b
[0x88b:0x8d4]
---
Predecessors: [0xd44]
Successors: [0x1a6]
---
0x88b JUMPDEST
0x88c PUSH1 0xa
0x88e SLOAD
0x88f PUSH1 0x1
0x891 PUSH1 0x1
0x893 PUSH1 0xa0
0x895 SHL
0x896 SUB
0x897 SWAP1
0x898 DUP2
0x899 AND
0x89a PUSH1 0x0
0x89c SWAP1
0x89d DUP2
0x89e MSTORE
0x89f PUSH1 0x20
0x8a1 DUP2
0x8a2 DUP2
0x8a3 MSTORE
0x8a4 PUSH1 0x40
0x8a6 DUP1
0x8a7 DUP4
0x8a8 SHA3
0x8a9 SWAP5
0x8aa SWAP1
0x8ab SWAP5
0x8ac SSTORE
0x8ad DUP4
0x8ae MLOAD
0x8af DUP6
0x8b0 DUP2
0x8b1 MSTORE
0x8b2 SWAP4
0x8b3 MLOAD
0x8b4 SWAP3
0x8b5 DUP7
0x8b6 AND
0x8b7 SWAP4
0x8b8 SWAP2
0x8b9 SWAP3
0x8ba PUSH1 0x0
0x8bc DUP1
0x8bd MLOAD
0x8be PUSH1 0x20
0x8c0 PUSH2 0x1525
0x8c3 DUP4
0x8c4 CODECOPY
0x8c5 DUP2
0x8c6 MLOAD
0x8c7 SWAP2
0x8c8 MSTORE
0x8c9 SWAP3
0x8ca DUP2
0x8cb SWAP1
0x8cc SUB
0x8cd SWAP1
0x8ce SWAP2
0x8cf ADD
0x8d0 SWAP1
0x8d1 LOG3
0x8d2 POP
0x8d3 POP
0x8d4 JUMP
---
0x88b: JUMPDEST 
0x88c: V796 = 0xa
0x88e: V797 = S[0xa]
0x88f: V798 = 0x1
0x891: V799 = 0x1
0x893: V800 = 0xa0
0x895: V801 = SHL 0xa0 0x1
0x896: V802 = SUB 0x10000000000000000000000000000000000000000 0x1
0x899: V803 = AND 0xffffffffffffffffffffffffffffffffffffffff V797
0x89a: V804 = 0x0
0x89e: M[0x0] = V803
0x89f: V805 = 0x20
0x8a3: M[0x20] = 0x0
0x8a4: V806 = 0x40
0x8a8: V807 = SHA3 0x0 0x40
0x8ac: S[V807] = S0
0x8ae: V808 = M[0x40]
0x8b1: M[V808] = S1
0x8b3: V809 = M[0x40]
0x8b6: V810 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x8ba: V811 = 0x0
0x8bd: V812 = M[0x0]
0x8be: V813 = 0x20
0x8c0: V814 = 0x1525
0x8c4: CODECOPY 0x0 0x1525 0x20
0x8c6: V815 = M[0x0]
0x8c8: M[0x0] = V812
0x8cc: V816 = SUB V808 V809
0x8cf: V817 = ADD 0x20 V816
0x8d1: LOG V809 V817 V815 0x0 V810
0x8d4: JUMP S3
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4]

================================

Block 0x8d5
[0x8d5:0x8e7]
---
Predecessors: [0x3eb]
Successors: [0x8e8, 0x91d]
---
0x8d5 JUMPDEST
0x8d6 PUSH1 0xa
0x8d8 SLOAD
0x8d9 PUSH1 0x1
0x8db PUSH1 0x1
0x8dd PUSH1 0xa0
0x8df SHL
0x8e0 SUB
0x8e1 AND
0x8e2 CALLER
0x8e3 EQ
0x8e4 PUSH2 0x91d
0x8e7 JUMPI
---
0x8d5: JUMPDEST 
0x8d6: V818 = 0xa
0x8d8: V819 = S[0xa]
0x8d9: V820 = 0x1
0x8db: V821 = 0x1
0x8dd: V822 = 0xa0
0x8df: V823 = SHL 0xa0 0x1
0x8e0: V824 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e1: V825 = AND 0xffffffffffffffffffffffffffffffffffffffff V819
0x8e2: V826 = CALLER
0x8e3: V827 = EQ V826 V825
0x8e4: V828 = 0x91d
0x8e7: JUMPI 0x91d V827
---
Entry stack: [V13, 0x1a6, V271, V312, V358]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, V358]

================================

Block 0x8e8
[0x8e8:0x91c]
---
Predecessors: [0x8d5]
Successors: []
---
0x8e8 PUSH1 0x40
0x8ea DUP1
0x8eb MLOAD
0x8ec PUSH3 0x461bcd
0x8f0 PUSH1 0xe5
0x8f2 SHL
0x8f3 DUP2
0x8f4 MSTORE
0x8f5 PUSH1 0x20
0x8f7 PUSH1 0x4
0x8f9 DUP3
0x8fa ADD
0x8fb MSTORE
0x8fc PUSH1 0x6
0x8fe PUSH1 0x24
0x900 DUP3
0x901 ADD
0x902 MSTORE
0x903 PUSH6 0x10b7bbb732b9
0x90a PUSH1 0xd1
0x90c SHL
0x90d PUSH1 0x44
0x90f DUP3
0x910 ADD
0x911 MSTORE
0x912 SWAP1
0x913 MLOAD
0x914 SWAP1
0x915 DUP2
0x916 SWAP1
0x917 SUB
0x918 PUSH1 0x64
0x91a ADD
0x91b SWAP1
0x91c REVERT
---
0x8e8: V829 = 0x40
0x8eb: V830 = M[0x40]
0x8ec: V831 = 0x461bcd
0x8f0: V832 = 0xe5
0x8f2: V833 = SHL 0xe5 0x461bcd
0x8f4: M[V830] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8f5: V834 = 0x20
0x8f7: V835 = 0x4
0x8fa: V836 = ADD V830 0x4
0x8fb: M[V836] = 0x20
0x8fc: V837 = 0x6
0x8fe: V838 = 0x24
0x901: V839 = ADD V830 0x24
0x902: M[V839] = 0x6
0x903: V840 = 0x10b7bbb732b9
0x90a: V841 = 0xd1
0x90c: V842 = SHL 0xd1 0x10b7bbb732b9
0x90d: V843 = 0x44
0x910: V844 = ADD V830 0x44
0x911: M[V844] = 0x216f776e65720000000000000000000000000000000000000000000000000000
0x913: V845 = M[0x40]
0x917: V846 = SUB V830 V845
0x918: V847 = 0x64
0x91a: V848 = ADD 0x64 V846
0x91c: REVERT V845 V848
---
Entry stack: [V13, 0x1a6, V271, V312, V358]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, V358]

================================

Block 0x91d
[0x91d:0x91f]
---
Predecessors: [0x8d5]
Successors: [0x920]
---
0x91d JUMPDEST
0x91e PUSH1 0x0
---
0x91d: JUMPDEST 
0x91e: V849 = 0x0
---
Entry stack: [V13, 0x1a6, V271, V312, V358]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1a6, V271, V312, V358, 0x0]

================================

Block 0x920
[0x920:0x929]
---
Predecessors: [0x91d, 0x9e0]
Successors: [0x92a, 0x9e8]
---
0x920 JUMPDEST
0x921 DUP3
0x922 MLOAD
0x923 DUP2
0x924 LT
0x925 ISZERO
0x926 PUSH2 0x9e8
0x929 JUMPI
---
0x920: JUMPDEST 
0x922: V850 = M[S2]
0x924: V851 = LT S0 V850
0x925: V852 = ISZERO V851
0x926: V853 = 0x9e8
0x929: JUMPI 0x9e8 V852
---
Entry stack: [V13, 0x1a6, V271, V312, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x1a6, V271, V312, S5, S4, S3, S2, S1, S0]

================================

Block 0x92a
[0x92a:0x936]
---
Predecessors: [0x920]
Successors: [0x937, 0x938]
---
0x92a PUSH2 0x959
0x92d DUP4
0x92e DUP3
0x92f DUP2
0x930 MLOAD
0x931 DUP2
0x932 LT
0x933 PUSH2 0x938
0x936 JUMPI
---
0x92a: V854 = 0x959
0x930: V855 = M[S2]
0x932: V856 = LT S0 V855
0x933: V857 = 0x938
0x936: JUMPI 0x938 V856
---
Entry stack: [V13, 0x1a6, V271, V312, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x959, S2, S0]
Exit stack: [V13, 0x1a6, V271, V312, S5, S4, S3, S2, S1, S0, 0x959, S2, S0]

================================

Block 0x937
[0x937:0x937]
---
Predecessors: [0x92a]
Successors: []
---
0x937 INVALID
---
0x937: INVALID 
---
Entry stack: [V13, 0x1a6, V271, V312, S8, S7, S6, S5, S4, S3, 0x959, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S8, S7, S6, S5, S4, S3, 0x959, S1, S0]

================================

Block 0x938
[0x938:0x94a]
---
Predecessors: [0x92a]
Successors: [0x94b, 0x94c]
---
0x938 JUMPDEST
0x939 PUSH1 0x20
0x93b MUL
0x93c PUSH1 0x20
0x93e ADD
0x93f ADD
0x940 MLOAD
0x941 DUP4
0x942 DUP4
0x943 DUP2
0x944 MLOAD
0x945 DUP2
0x946 LT
0x947 PUSH2 0x94c
0x94a JUMPI
---
0x938: JUMPDEST 
0x939: V858 = 0x20
0x93b: V859 = MUL 0x20 S0
0x93c: V860 = 0x20
0x93e: V861 = ADD 0x20 V859
0x93f: V862 = ADD V861 S1
0x940: V863 = M[V862]
0x944: V864 = M[S4]
0x946: V865 = LT S3 V864
0x947: V866 = 0x94c
0x94a: JUMPI 0x94c V865
---
Entry stack: [V13, 0x1a6, V271, V312, S8, S7, S6, S5, S4, S3, 0x959, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, V863, S4, S3]
Exit stack: [V13, 0x1a6, V271, V312, S8, S7, S6, S5, S4, S3, 0x959, V863, S4, S3]

================================

Block 0x94b
[0x94b:0x94b]
---
Predecessors: [0x938]
Successors: []
---
0x94b INVALID
---
0x94b: INVALID 
---
Entry stack: [V13, 0x1a6, V271, V312, S9, S8, S7, S6, S5, S4, 0x959, V863, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S9, S8, S7, S6, S5, S4, 0x959, V863, S1, S0]

================================

Block 0x94c
[0x94c:0x958]
---
Predecessors: [0x938]
Successors: [0xbac]
---
0x94c JUMPDEST
0x94d PUSH1 0x20
0x94f MUL
0x950 PUSH1 0x20
0x952 ADD
0x953 ADD
0x954 MLOAD
0x955 PUSH2 0xbac
0x958 JUMP
---
0x94c: JUMPDEST 
0x94d: V867 = 0x20
0x94f: V868 = MUL 0x20 S0
0x950: V869 = 0x20
0x952: V870 = ADD 0x20 V868
0x953: V871 = ADD V870 S1
0x954: V872 = M[V871]
0x955: V873 = 0xbac
0x958: JUMP 0xbac
---
Entry stack: [V13, 0x1a6, V271, V312, S9, S8, S7, S6, S5, S4, 0x959, V863, S1, S0]
Stack pops: 2
Stack additions: [V872]
Exit stack: [V13, 0x1a6, V271, V312, S9, S8, S7, S6, S5, S4, 0x959, V863, V872]

================================

Block 0x959
[0x959:0x962]
---
Predecessors: [0x758]
Successors: [0x963, 0x9e0]
---
0x959 JUMPDEST
0x95a POP
0x95b DUP4
0x95c DUP2
0x95d LT
0x95e ISZERO
0x95f PUSH2 0x9e0
0x962 JUMPI
---
0x959: JUMPDEST 
0x95d: V874 = LT S1 V271
0x95e: V875 = ISZERO V874
0x95f: V876 = 0x9e0
0x962: JUMPI 0x9e0 V875
---
Entry stack: [V13, 0x1a6, V271, V312, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S4, S3, S2, S1]
Exit stack: [V13, 0x1a6, V271, V312, S2, S1]

================================

Block 0x963
[0x963:0x971]
---
Predecessors: [0x959]
Successors: [0x972, 0x973]
---
0x963 PUSH1 0x1
0x965 DUP1
0x966 PUSH1 0x0
0x968 DUP6
0x969 DUP5
0x96a DUP2
0x96b MLOAD
0x96c DUP2
0x96d LT
0x96e PUSH2 0x973
0x971 JUMPI
---
0x963: V877 = 0x1
0x966: V878 = 0x0
0x96b: V879 = M[V312]
0x96d: V880 = LT S0 V879
0x96e: V881 = 0x973
0x971: JUMPI 0x973 V880
---
Entry stack: [V13, 0x1a6, V271, V312, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x1, 0x1, 0x0, S2, S0]
Exit stack: [V13, 0x1a6, V271, V312, S1, S0, 0x1, 0x1, 0x0, V312, S0]

================================

Block 0x972
[0x972:0x972]
---
Predecessors: [0x963]
Successors: []
---
0x972 INVALID
---
0x972: INVALID 
---
Entry stack: [V13, 0x1a6, V271, V312, S6, S5, 0x1, 0x1, 0x0, V312, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S6, S5, 0x1, 0x1, 0x0, V312, S0]

================================

Block 0x973
[0x973:0x9bf]
---
Predecessors: [0x963]
Successors: [0x9c0, 0x9c1]
---
0x973 JUMPDEST
0x974 PUSH1 0x20
0x976 MUL
0x977 PUSH1 0x20
0x979 ADD
0x97a ADD
0x97b MLOAD
0x97c PUSH1 0x1
0x97e PUSH1 0x1
0x980 PUSH1 0xa0
0x982 SHL
0x983 SUB
0x984 AND
0x985 PUSH1 0x1
0x987 PUSH1 0x1
0x989 PUSH1 0xa0
0x98b SHL
0x98c SUB
0x98d AND
0x98e DUP2
0x98f MSTORE
0x990 PUSH1 0x20
0x992 ADD
0x993 SWAP1
0x994 DUP2
0x995 MSTORE
0x996 PUSH1 0x20
0x998 ADD
0x999 PUSH1 0x0
0x99b SHA3
0x99c PUSH1 0x0
0x99e PUSH2 0x100
0x9a1 EXP
0x9a2 DUP2
0x9a3 SLOAD
0x9a4 DUP2
0x9a5 PUSH1 0xff
0x9a7 MUL
0x9a8 NOT
0x9a9 AND
0x9aa SWAP1
0x9ab DUP4
0x9ac ISZERO
0x9ad ISZERO
0x9ae MUL
0x9af OR
0x9b0 SWAP1
0x9b1 SSTORE
0x9b2 POP
0x9b3 PUSH2 0x9e0
0x9b6 DUP4
0x9b7 DUP3
0x9b8 DUP2
0x9b9 MLOAD
0x9ba DUP2
0x9bb LT
0x9bc PUSH2 0x9c1
0x9bf JUMPI
---
0x973: JUMPDEST 
0x974: V882 = 0x20
0x976: V883 = MUL 0x20 S0
0x977: V884 = 0x20
0x979: V885 = ADD 0x20 V883
0x97a: V886 = ADD V885 V312
0x97b: V887 = M[V886]
0x97c: V888 = 0x1
0x97e: V889 = 0x1
0x980: V890 = 0xa0
0x982: V891 = SHL 0xa0 0x1
0x983: V892 = SUB 0x10000000000000000000000000000000000000000 0x1
0x984: V893 = AND 0xffffffffffffffffffffffffffffffffffffffff V887
0x985: V894 = 0x1
0x987: V895 = 0x1
0x989: V896 = 0xa0
0x98b: V897 = SHL 0xa0 0x1
0x98c: V898 = SUB 0x10000000000000000000000000000000000000000 0x1
0x98d: V899 = AND 0xffffffffffffffffffffffffffffffffffffffff V893
0x98f: M[0x0] = V899
0x990: V900 = 0x20
0x992: V901 = ADD 0x20 0x0
0x995: M[0x20] = 0x1
0x996: V902 = 0x20
0x998: V903 = ADD 0x20 0x20
0x999: V904 = 0x0
0x99b: V905 = SHA3 0x0 0x40
0x99c: V906 = 0x0
0x99e: V907 = 0x100
0x9a1: V908 = EXP 0x100 0x0
0x9a3: V909 = S[V905]
0x9a5: V910 = 0xff
0x9a7: V911 = MUL 0xff 0x1
0x9a8: V912 = NOT 0xff
0x9a9: V913 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V909
0x9ac: V914 = ISZERO 0x1
0x9ad: V915 = ISZERO 0x0
0x9ae: V916 = MUL 0x1 0x1
0x9af: V917 = OR 0x1 V913
0x9b1: S[V905] = V917
0x9b3: V918 = 0x9e0
0x9b9: V919 = M[V312]
0x9bb: V920 = LT S5 V919
0x9bc: V921 = 0x9c1
0x9bf: JUMPI 0x9c1 V920
---
Entry stack: [V13, 0x1a6, V271, V312, S6, S5, 0x1, 0x1, 0x0, V312, S0]
Stack pops: 8
Stack additions: [S7, S6, S5, 0x9e0, S7, S5]
Exit stack: [V13, 0x1a6, V271, V312, S6, S5, 0x9e0, V312, S5]

================================

Block 0x9c0
[0x9c0:0x9c0]
---
Predecessors: [0x973]
Successors: []
---
0x9c0 INVALID
---
0x9c0: INVALID 
---
Entry stack: [V13, 0x1a6, V271, V312, S4, S3, 0x9e0, V312, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S4, S3, 0x9e0, V312, S0]

================================

Block 0x9c1
[0x9c1:0x9df]
---
Predecessors: [0x973]
Successors: [0xd4f]
---
0x9c1 JUMPDEST
0x9c2 PUSH1 0x20
0x9c4 SWAP1
0x9c5 DUP2
0x9c6 MUL
0x9c7 SWAP2
0x9c8 SWAP1
0x9c9 SWAP2
0x9ca ADD
0x9cb ADD
0x9cc MLOAD
0x9cd PUSH1 0xc
0x9cf SLOAD
0x9d0 PUSH1 0x1
0x9d2 PUSH1 0x1
0x9d4 PUSH1 0xa0
0x9d6 SHL
0x9d7 SUB
0x9d8 AND
0x9d9 PUSH1 0x0
0x9db NOT
0x9dc PUSH2 0xd4f
0x9df JUMP
---
0x9c1: JUMPDEST 
0x9c2: V922 = 0x20
0x9c6: V923 = MUL 0x20 S0
0x9ca: V924 = ADD V923 V312
0x9cb: V925 = ADD V924 0x20
0x9cc: V926 = M[V925]
0x9cd: V927 = 0xc
0x9cf: V928 = S[0xc]
0x9d0: V929 = 0x1
0x9d2: V930 = 0x1
0x9d4: V931 = 0xa0
0x9d6: V932 = SHL 0xa0 0x1
0x9d7: V933 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9d8: V934 = AND 0xffffffffffffffffffffffffffffffffffffffff V928
0x9d9: V935 = 0x0
0x9db: V936 = NOT 0x0
0x9dc: V937 = 0xd4f
0x9df: JUMP 0xd4f
---
Entry stack: [V13, 0x1a6, V271, V312, S4, S3, 0x9e0, V312, S0]
Stack pops: 2
Stack additions: [V926, V934, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]
Exit stack: [V13, 0x1a6, V271, V312, S4, S3, 0x9e0, V926, V934, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]

================================

Block 0x9e0
[0x9e0:0x9e7]
---
Predecessors: [0x959, 0xdd9]
Successors: [0x920]
---
0x9e0 JUMPDEST
0x9e1 PUSH1 0x1
0x9e3 ADD
0x9e4 PUSH2 0x920
0x9e7 JUMP
---
0x9e0: JUMPDEST 
0x9e1: V938 = 0x1
0x9e3: V939 = ADD 0x1 S0
0x9e4: V940 = 0x920
0x9e7: JUMP 0x920
---
Entry stack: [V13, 0x1a6, V271, V312, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V939]
Exit stack: [V13, 0x1a6, V271, V312, S5, S4, S3, S2, S1, V939]

================================

Block 0x9e8
[0x9e8:0x9ed]
---
Predecessors: [0x920]
Successors: [0x1a6, 0x251]
---
0x9e8 JUMPDEST
0x9e9 POP
0x9ea POP
0x9eb POP
0x9ec POP
0x9ed JUMP
---
0x9e8: JUMPDEST 
0x9ed: JUMP S4
---
Entry stack: [V13, 0x1a6, V271, V312, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S5]

================================

Block 0x9ee
[0x9ee:0xa08]
---
Predecessors: [0x43f]
Successors: [0x26d]
---
0x9ee JUMPDEST
0x9ef PUSH1 0x1
0x9f1 PUSH1 0x1
0x9f3 PUSH1 0xa0
0x9f5 SHL
0x9f6 SUB
0x9f7 AND
0x9f8 PUSH1 0x0
0x9fa SWAP1
0x9fb DUP2
0x9fc MSTORE
0x9fd PUSH1 0x20
0x9ff DUP2
0xa00 SWAP1
0xa01 MSTORE
0xa02 PUSH1 0x40
0xa04 SWAP1
0xa05 SHA3
0xa06 SLOAD
0xa07 SWAP1
0xa08 JUMP
---
0x9ee: JUMPDEST 
0x9ef: V941 = 0x1
0x9f1: V942 = 0x1
0x9f3: V943 = 0xa0
0x9f5: V944 = SHL 0xa0 0x1
0x9f6: V945 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f7: V946 = AND 0xffffffffffffffffffffffffffffffffffffffff V383
0x9f8: V947 = 0x0
0x9fc: M[0x0] = V946
0x9fd: V948 = 0x20
0xa01: M[0x20] = 0x0
0xa02: V949 = 0x40
0xa05: V950 = SHA3 0x0 0x40
0xa06: V951 = S[V950]
0xa08: JUMP 0x26d
---
Entry stack: [V13, 0x26d, V383]
Stack pops: 2
Stack additions: [V951]
Exit stack: [V13, V951]

================================

Block 0xa09
[0xa09:0xa1b]
---
Predecessors: [0x465]
Successors: [0xa1c, 0xa51]
---
0xa09 JUMPDEST
0xa0a PUSH1 0xa
0xa0c SLOAD
0xa0d PUSH1 0x1
0xa0f PUSH1 0x1
0xa11 PUSH1 0xa0
0xa13 SHL
0xa14 SUB
0xa15 AND
0xa16 CALLER
0xa17 EQ
0xa18 PUSH2 0xa51
0xa1b JUMPI
---
0xa09: JUMPDEST 
0xa0a: V952 = 0xa
0xa0c: V953 = S[0xa]
0xa0d: V954 = 0x1
0xa0f: V955 = 0x1
0xa11: V956 = 0xa0
0xa13: V957 = SHL 0xa0 0x1
0xa14: V958 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa15: V959 = AND 0xffffffffffffffffffffffffffffffffffffffff V953
0xa16: V960 = CALLER
0xa17: V961 = EQ V960 V959
0xa18: V962 = 0xa51
0xa1b: JUMPI 0xa51 V961
---
Entry stack: [V13, 0x1a6, V400]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V400]

================================

Block 0xa1c
[0xa1c:0xa50]
---
Predecessors: [0xa09]
Successors: []
---
0xa1c PUSH1 0x40
0xa1e DUP1
0xa1f MLOAD
0xa20 PUSH3 0x461bcd
0xa24 PUSH1 0xe5
0xa26 SHL
0xa27 DUP2
0xa28 MSTORE
0xa29 PUSH1 0x20
0xa2b PUSH1 0x4
0xa2d DUP3
0xa2e ADD
0xa2f MSTORE
0xa30 PUSH1 0x6
0xa32 PUSH1 0x24
0xa34 DUP3
0xa35 ADD
0xa36 MSTORE
0xa37 PUSH6 0x10b7bbb732b9
0xa3e PUSH1 0xd1
0xa40 SHL
0xa41 PUSH1 0x44
0xa43 DUP3
0xa44 ADD
0xa45 MSTORE
0xa46 SWAP1
0xa47 MLOAD
0xa48 SWAP1
0xa49 DUP2
0xa4a SWAP1
0xa4b SUB
0xa4c PUSH1 0x64
0xa4e ADD
0xa4f SWAP1
0xa50 REVERT
---
0xa1c: V963 = 0x40
0xa1f: V964 = M[0x40]
0xa20: V965 = 0x461bcd
0xa24: V966 = 0xe5
0xa26: V967 = SHL 0xe5 0x461bcd
0xa28: M[V964] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xa29: V968 = 0x20
0xa2b: V969 = 0x4
0xa2e: V970 = ADD V964 0x4
0xa2f: M[V970] = 0x20
0xa30: V971 = 0x6
0xa32: V972 = 0x24
0xa35: V973 = ADD V964 0x24
0xa36: M[V973] = 0x6
0xa37: V974 = 0x10b7bbb732b9
0xa3e: V975 = 0xd1
0xa40: V976 = SHL 0xd1 0x10b7bbb732b9
0xa41: V977 = 0x44
0xa44: V978 = ADD V964 0x44
0xa45: M[V978] = 0x216f776e65720000000000000000000000000000000000000000000000000000
0xa47: V979 = M[0x40]
0xa4b: V980 = SUB V964 V979
0xa4c: V981 = 0x64
0xa4e: V982 = ADD 0x64 V980
0xa50: REVERT V979 V982
---
Entry stack: [V13, 0x1a6, V400]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V400]

================================

Block 0xa51
[0xa51:0xa72]
---
Predecessors: [0xa09]
Successors: [0x1a6]
---
0xa51 JUMPDEST
0xa52 PUSH1 0xb
0xa54 DUP1
0xa55 SLOAD
0xa56 PUSH1 0x1
0xa58 PUSH1 0x1
0xa5a PUSH1 0xa0
0xa5c SHL
0xa5d SUB
0xa5e NOT
0xa5f AND
0xa60 PUSH1 0x1
0xa62 PUSH1 0x1
0xa64 PUSH1 0xa0
0xa66 SHL
0xa67 SUB
0xa68 SWAP3
0xa69 SWAP1
0xa6a SWAP3
0xa6b AND
0xa6c SWAP2
0xa6d SWAP1
0xa6e SWAP2
0xa6f OR
0xa70 SWAP1
0xa71 SSTORE
0xa72 JUMP
---
0xa51: JUMPDEST 
0xa52: V983 = 0xb
0xa55: V984 = S[0xb]
0xa56: V985 = 0x1
0xa58: V986 = 0x1
0xa5a: V987 = 0xa0
0xa5c: V988 = SHL 0xa0 0x1
0xa5d: V989 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa5e: V990 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xa5f: V991 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V984
0xa60: V992 = 0x1
0xa62: V993 = 0x1
0xa64: V994 = 0xa0
0xa66: V995 = SHL 0xa0 0x1
0xa67: V996 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa6b: V997 = AND 0xffffffffffffffffffffffffffffffffffffffff V400
0xa6f: V998 = OR V997 V991
0xa71: S[0xb] = V998
0xa72: JUMP 0x1a6
---
Entry stack: [V13, 0x1a6, V400]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0xa73
[0xa73:0xab8]
---
Predecessors: [0x475]
Successors: [0x73a, 0xab9]
---
0xa73 JUMPDEST
0xa74 PUSH1 0x7
0xa76 DUP1
0xa77 SLOAD
0xa78 PUSH1 0x40
0xa7a DUP1
0xa7b MLOAD
0xa7c PUSH1 0x20
0xa7e PUSH1 0x1f
0xa80 PUSH1 0x2
0xa82 PUSH1 0x0
0xa84 NOT
0xa85 PUSH2 0x100
0xa88 PUSH1 0x1
0xa8a DUP9
0xa8b AND
0xa8c ISZERO
0xa8d MUL
0xa8e ADD
0xa8f SWAP1
0xa90 SWAP6
0xa91 AND
0xa92 SWAP5
0xa93 SWAP1
0xa94 SWAP5
0xa95 DIV
0xa96 SWAP4
0xa97 DUP5
0xa98 ADD
0xa99 DUP2
0xa9a SWAP1
0xa9b DIV
0xa9c DUP2
0xa9d MUL
0xa9e DUP3
0xa9f ADD
0xaa0 DUP2
0xaa1 ADD
0xaa2 SWAP1
0xaa3 SWAP3
0xaa4 MSTORE
0xaa5 DUP3
0xaa6 DUP2
0xaa7 MSTORE
0xaa8 PUSH1 0x60
0xaaa SWAP4
0xaab SWAP1
0xaac SWAP3
0xaad SWAP1
0xaae SWAP2
0xaaf DUP4
0xab0 ADD
0xab1 DUP3
0xab2 DUP3
0xab3 DUP1
0xab4 ISZERO
0xab5 PUSH2 0x73a
0xab8 JUMPI
---
0xa73: JUMPDEST 
0xa74: V999 = 0x7
0xa77: V1000 = S[0x7]
0xa78: V1001 = 0x40
0xa7b: V1002 = M[0x40]
0xa7c: V1003 = 0x20
0xa7e: V1004 = 0x1f
0xa80: V1005 = 0x2
0xa82: V1006 = 0x0
0xa84: V1007 = NOT 0x0
0xa85: V1008 = 0x100
0xa88: V1009 = 0x1
0xa8b: V1010 = AND V1000 0x1
0xa8c: V1011 = ISZERO V1010
0xa8d: V1012 = MUL V1011 0x100
0xa8e: V1013 = ADD V1012 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0xa91: V1014 = AND V1000 V1013
0xa95: V1015 = DIV V1014 0x2
0xa98: V1016 = ADD V1015 0x1f
0xa9b: V1017 = DIV V1016 0x20
0xa9d: V1018 = MUL 0x20 V1017
0xa9f: V1019 = ADD V1002 V1018
0xaa1: V1020 = ADD 0x20 V1019
0xaa4: M[0x40] = V1020
0xaa7: M[V1002] = V1015
0xaa8: V1021 = 0x60
0xab0: V1022 = ADD V1002 0x20
0xab4: V1023 = ISZERO V1015
0xab5: V1024 = 0x73a
0xab8: JUMPI 0x73a V1023
---
Entry stack: [V13, 0x1b0]
Stack pops: 0
Stack additions: [0x60, V1002, 0x7, V1015, V1022, 0x7, V1015]
Exit stack: [V13, 0x1b0, 0x60, V1002, 0x7, V1015, V1022, 0x7, V1015]

================================

Block 0xab9
[0xab9:0xac0]
---
Predecessors: [0xa73]
Successors: [0x70f, 0xac1]
---
0xab9 DUP1
0xaba PUSH1 0x1f
0xabc LT
0xabd PUSH2 0x70f
0xac0 JUMPI
---
0xaba: V1025 = 0x1f
0xabc: V1026 = LT 0x1f V1015
0xabd: V1027 = 0x70f
0xac0: JUMPI 0x70f V1026
---
Entry stack: [V13, 0x1b0, 0x60, V1002, 0x7, V1015, V1022, 0x7, V1015]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x1b0, 0x60, V1002, 0x7, V1015, V1022, 0x7, V1015]

================================

Block 0xac1
[0xac1:0xad3]
---
Predecessors: [0xab9]
Successors: [0x73a]
---
0xac1 PUSH2 0x100
0xac4 DUP1
0xac5 DUP4
0xac6 SLOAD
0xac7 DIV
0xac8 MUL
0xac9 DUP4
0xaca MSTORE
0xacb SWAP2
0xacc PUSH1 0x20
0xace ADD
0xacf SWAP2
0xad0 PUSH2 0x73a
0xad3 JUMP
---
0xac1: V1028 = 0x100
0xac6: V1029 = S[0x7]
0xac7: V1030 = DIV V1029 0x100
0xac8: V1031 = MUL V1030 0x100
0xaca: M[V1022] = V1031
0xacc: V1032 = 0x20
0xace: V1033 = ADD 0x20 V1022
0xad0: V1034 = 0x73a
0xad3: JUMP 0x73a
---
Entry stack: [V13, 0x1b0, 0x60, V1002, 0x7, V1015, V1022, 0x7, V1015]
Stack pops: 3
Stack additions: [V1033, S1, S0]
Exit stack: [V13, 0x1b0, 0x60, V1002, 0x7, V1015, V1033, 0x7, V1015]

================================

Block 0xad4
[0xad4:0xadf]
---
Predecessors: [0x493]
Successors: [0x146a]
---
0xad4 JUMPDEST
0xad5 PUSH2 0xae0
0xad8 CALLER
0xad9 PUSH1 0x0
0xadb DUP4
0xadc PUSH2 0x146a
0xadf JUMP
---
0xad4: JUMPDEST 
0xad5: V1035 = 0xae0
0xad8: V1036 = CALLER
0xad9: V1037 = 0x0
0xadc: V1038 = 0x146a
0xadf: JUMP 0x146a
---
Entry stack: [V13, 0x1a6, V413]
Stack pops: 1
Stack additions: [S0, 0xae0, V1036, 0x0, S0]
Exit stack: [V13, 0x1a6, V413, 0xae0, V1036, 0x0, V413]

================================

Block 0xae0
[0xae0:0xb13]
---
Predecessors: [0x146a]
Successors: [0x13d3]
---
0xae0 JUMPDEST
0xae1 PUSH2 0xb14
0xae4 DUP2
0xae5 PUSH1 0x40
0xae7 MLOAD
0xae8 DUP1
0xae9 PUSH1 0x60
0xaeb ADD
0xaec PUSH1 0x40
0xaee MSTORE
0xaef DUP1
0xaf0 PUSH1 0x22
0xaf2 DUP2
0xaf3 MSTORE
0xaf4 PUSH1 0x20
0xaf6 ADD
0xaf7 PUSH2 0x1493
0xafa PUSH1 0x22
0xafc SWAP2
0xafd CODECOPY
0xafe CALLER
0xaff PUSH1 0x0
0xb01 SWAP1
0xb02 DUP2
0xb03 MSTORE
0xb04 PUSH1 0x20
0xb06 DUP2
0xb07 SWAP1
0xb08 MSTORE
0xb09 PUSH1 0x40
0xb0b SWAP1
0xb0c SHA3
0xb0d SLOAD
0xb0e SWAP2
0xb0f SWAP1
0xb10 PUSH2 0x13d3
0xb13 JUMP
---
0xae0: JUMPDEST 
0xae1: V1039 = 0xb14
0xae5: V1040 = 0x40
0xae7: V1041 = M[0x40]
0xae9: V1042 = 0x60
0xaeb: V1043 = ADD 0x60 V1041
0xaec: V1044 = 0x40
0xaee: M[0x40] = V1043
0xaf0: V1045 = 0x22
0xaf3: M[V1041] = 0x22
0xaf4: V1046 = 0x20
0xaf6: V1047 = ADD 0x20 V1041
0xaf7: V1048 = 0x1493
0xafa: V1049 = 0x22
0xafd: CODECOPY V1047 0x1493 0x22
0xafe: V1050 = CALLER
0xaff: V1051 = 0x0
0xb03: M[0x0] = V1050
0xb04: V1052 = 0x20
0xb08: M[0x20] = 0x0
0xb09: V1053 = 0x40
0xb0c: V1054 = SHA3 0x0 0x40
0xb0d: V1055 = S[V1054]
0xb10: V1056 = 0x13d3
0xb13: JUMP 0x13d3
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0, 0xb14, V1055, S0, V1041]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0, 0xb14, V1055, S0, V1041]

================================

Block 0xb14
[0xb14:0xb54]
---
Predecessors: [0x1462]
Successors: [0xcea]
---
0xb14 JUMPDEST
0xb15 CALLER
0xb16 PUSH1 0x0
0xb18 SWAP1
0xb19 DUP2
0xb1a MSTORE
0xb1b PUSH1 0x20
0xb1d DUP2
0xb1e SWAP1
0xb1f MSTORE
0xb20 PUSH1 0x40
0xb22 DUP2
0xb23 SHA3
0xb24 SWAP2
0xb25 SWAP1
0xb26 SWAP2
0xb27 SSTORE
0xb28 DUP1
0xb29 MSTORE
0xb2a PUSH32 0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5
0xb4b SLOAD
0xb4c PUSH2 0xb55
0xb4f SWAP1
0xb50 DUP3
0xb51 PUSH2 0xcea
0xb54 JUMP
---
0xb14: JUMPDEST 
0xb15: V1057 = CALLER
0xb16: V1058 = 0x0
0xb1a: M[0x0] = V1057
0xb1b: V1059 = 0x20
0xb1f: M[0x20] = 0x0
0xb20: V1060 = 0x40
0xb23: V1061 = SHA3 0x0 0x40
0xb27: S[V1061] = V1926
0xb29: M[0x0] = 0x0
0xb2a: V1062 = 0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5
0xb4b: V1063 = S[0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5]
0xb4c: V1064 = 0xb55
0xb51: V1065 = 0xcea
0xb54: JUMP 0xcea
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1926]
Stack pops: 2
Stack additions: [S1, 0xb55, V1063, S1]
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xb55, V1063, S1]

================================

Block 0xb55
[0xb55:0xbab]
---
Predecessors: [0xd44]
Successors: [0x1a6]
---
0xb55 JUMPDEST
0xb56 PUSH1 0x0
0xb58 DUP1
0xb59 DUP1
0xb5a MSTORE
0xb5b PUSH1 0x20
0xb5d DUP2
0xb5e DUP2
0xb5f MSTORE
0xb60 PUSH32 0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5
0xb81 SWAP3
0xb82 SWAP1
0xb83 SWAP3
0xb84 SSTORE
0xb85 PUSH1 0x40
0xb87 DUP1
0xb88 MLOAD
0xb89 DUP5
0xb8a DUP2
0xb8b MSTORE
0xb8c SWAP1
0xb8d MLOAD
0xb8e SWAP2
0xb8f SWAP3
0xb90 CALLER
0xb91 SWAP3
0xb92 PUSH1 0x0
0xb94 DUP1
0xb95 MLOAD
0xb96 PUSH1 0x20
0xb98 PUSH2 0x1525
0xb9b DUP4
0xb9c CODECOPY
0xb9d DUP2
0xb9e MLOAD
0xb9f SWAP2
0xba0 MSTORE
0xba1 SWAP3
0xba2 DUP2
0xba3 SWAP1
0xba4 SUB
0xba5 SWAP1
0xba6 SWAP2
0xba7 ADD
0xba8 SWAP1
0xba9 LOG3
0xbaa POP
0xbab JUMP
---
0xb55: JUMPDEST 
0xb56: V1066 = 0x0
0xb5a: M[0x0] = 0x0
0xb5b: V1067 = 0x20
0xb5f: M[0x20] = 0x0
0xb60: V1068 = 0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5
0xb84: S[0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5] = S0
0xb85: V1069 = 0x40
0xb88: V1070 = M[0x40]
0xb8b: M[V1070] = S1
0xb8d: V1071 = M[0x40]
0xb90: V1072 = CALLER
0xb92: V1073 = 0x0
0xb95: V1074 = M[0x0]
0xb96: V1075 = 0x20
0xb98: V1076 = 0x1525
0xb9c: CODECOPY 0x0 0x1525 0x20
0xb9e: V1077 = M[0x0]
0xba0: M[0x0] = V1074
0xba4: V1078 = SUB V1070 V1071
0xba7: V1079 = ADD 0x20 V1078
0xba9: LOG V1071 V1079 V1077 V1072 0x0
0xbab: JUMP S2
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3]

================================

Block 0xbac
[0xbac:0xbb8]
---
Predecessors: [0x4b0, 0x94c]
Successors: [0xd4b]
---
0xbac JUMPDEST
0xbad PUSH1 0x0
0xbaf PUSH2 0x758
0xbb2 PUSH2 0xbb9
0xbb5 PUSH2 0xd4b
0xbb8 JUMP
---
0xbac: JUMPDEST 
0xbad: V1080 = 0x0
0xbaf: V1081 = 0x758
0xbb2: V1082 = 0xbb9
0xbb5: V1083 = 0xd4b
0xbb8: JUMP 0xd4b
---
Entry stack: [V13, 0x1a6, V271, V312, S8, S7, S6, S5, S4, S3, {0x251, 0x959}, S1, S0]
Stack pops: 0
Stack additions: [0x0, 0x758, 0xbb9]
Exit stack: [V13, 0x1a6, V271, V312, S8, S7, S6, S5, S4, S3, {0x251, 0x959}, S1, S0, 0x0, 0x758, 0xbb9]

================================

Block 0xbb9
[0xbb9:0xbbf]
---
Predecessors: [0xd4b]
Successors: [0xe3b]
---
0xbb9 JUMPDEST
0xbba DUP5
0xbbb DUP5
0xbbc PUSH2 0xe3b
0xbbf JUMP
---
0xbb9: JUMPDEST 
0xbbc: V1084 = 0xe3b
0xbbf: JUMP 0xe3b
---
Entry stack: [V13, 0x1a6, V271, V312, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1239]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S3]
Exit stack: [S11, 0x1a6, S9, S8, S7, S6, {0x251, 0x959}, S4, S3, 0x0, 0x758, S0, S4, S3]

================================

Block 0xbc0
[0xbc0:0xbce]
---
Predecessors: [0x4c6]
Successors: [0x4ce]
---
0xbc0 JUMPDEST
0xbc1 PUSH1 0xa
0xbc3 SLOAD
0xbc4 PUSH1 0x1
0xbc6 PUSH1 0x1
0xbc8 PUSH1 0xa0
0xbca SHL
0xbcb SUB
0xbcc AND
0xbcd DUP2
0xbce JUMP
---
0xbc0: JUMPDEST 
0xbc1: V1085 = 0xa
0xbc3: V1086 = S[0xa]
0xbc4: V1087 = 0x1
0xbc6: V1088 = 0x1
0xbc8: V1089 = 0xa0
0xbca: V1090 = SHL 0xa0 0x1
0xbcb: V1091 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbcc: V1092 = AND 0xffffffffffffffffffffffffffffffffffffffff V1086
0xbce: JUMP 0x4ce
---
Entry stack: [V13, 0x4ce]
Stack pops: 1
Stack additions: [S0, V1092]
Exit stack: [V13, 0x4ce, V1092]

================================

Block 0xbcf
[0xbcf:0xbf9]
---
Predecessors: [0x500]
Successors: [0x26d]
---
0xbcf JUMPDEST
0xbd0 PUSH1 0x1
0xbd2 PUSH1 0x1
0xbd4 PUSH1 0xa0
0xbd6 SHL
0xbd7 SUB
0xbd8 SWAP2
0xbd9 DUP3
0xbda AND
0xbdb PUSH1 0x0
0xbdd SWAP1
0xbde DUP2
0xbdf MSTORE
0xbe0 PUSH1 0x4
0xbe2 PUSH1 0x20
0xbe4 SWAP1
0xbe5 DUP2
0xbe6 MSTORE
0xbe7 PUSH1 0x40
0xbe9 DUP1
0xbea DUP4
0xbeb SHA3
0xbec SWAP4
0xbed SWAP1
0xbee SWAP5
0xbef AND
0xbf0 DUP3
0xbf1 MSTORE
0xbf2 SWAP2
0xbf3 SWAP1
0xbf4 SWAP2
0xbf5 MSTORE
0xbf6 SHA3
0xbf7 SLOAD
0xbf8 SWAP1
0xbf9 JUMP
---
0xbcf: JUMPDEST 
0xbd0: V1093 = 0x1
0xbd2: V1094 = 0x1
0xbd4: V1095 = 0xa0
0xbd6: V1096 = SHL 0xa0 0x1
0xbd7: V1097 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbda: V1098 = AND 0xffffffffffffffffffffffffffffffffffffffff V464
0xbdb: V1099 = 0x0
0xbdf: M[0x0] = V1098
0xbe0: V1100 = 0x4
0xbe2: V1101 = 0x20
0xbe6: M[0x20] = 0x4
0xbe7: V1102 = 0x40
0xbeb: V1103 = SHA3 0x0 0x40
0xbef: V1104 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0xbf1: M[0x0] = V1104
0xbf5: M[0x20] = V1103
0xbf6: V1105 = SHA3 0x0 0x40
0xbf7: V1106 = S[V1105]
0xbf9: JUMP 0x26d
---
Entry stack: [V13, 0x26d, V464, V468]
Stack pops: 3
Stack additions: [V1106]
Exit stack: [V13, V1106]

================================

Block 0xbfa
[0xbfa:0xc0c]
---
Predecessors: [0x57b]
Successors: [0xc0d, 0xc42]
---
0xbfa JUMPDEST
0xbfb PUSH1 0xa
0xbfd SLOAD
0xbfe PUSH1 0x1
0xc00 PUSH1 0x1
0xc02 PUSH1 0xa0
0xc04 SHL
0xc05 SUB
0xc06 AND
0xc07 CALLER
0xc08 EQ
0xc09 PUSH2 0xc42
0xc0c JUMPI
---
0xbfa: JUMPDEST 
0xbfb: V1107 = 0xa
0xbfd: V1108 = S[0xa]
0xbfe: V1109 = 0x1
0xc00: V1110 = 0x1
0xc02: V1111 = 0xa0
0xc04: V1112 = SHL 0xa0 0x1
0xc05: V1113 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc06: V1114 = AND 0xffffffffffffffffffffffffffffffffffffffff V1108
0xc07: V1115 = CALLER
0xc08: V1116 = EQ V1115 V1114
0xc09: V1117 = 0xc42
0xc0c: JUMPI 0xc42 V1116
---
Entry stack: [V13, 0x1a6, V517]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V517]

================================

Block 0xc0d
[0xc0d:0xc41]
---
Predecessors: [0xbfa]
Successors: []
---
0xc0d PUSH1 0x40
0xc0f DUP1
0xc10 MLOAD
0xc11 PUSH3 0x461bcd
0xc15 PUSH1 0xe5
0xc17 SHL
0xc18 DUP2
0xc19 MSTORE
0xc1a PUSH1 0x20
0xc1c PUSH1 0x4
0xc1e DUP3
0xc1f ADD
0xc20 MSTORE
0xc21 PUSH1 0x6
0xc23 PUSH1 0x24
0xc25 DUP3
0xc26 ADD
0xc27 MSTORE
0xc28 PUSH6 0x10b7bbb732b9
0xc2f PUSH1 0xd1
0xc31 SHL
0xc32 PUSH1 0x44
0xc34 DUP3
0xc35 ADD
0xc36 MSTORE
0xc37 SWAP1
0xc38 MLOAD
0xc39 SWAP1
0xc3a DUP2
0xc3b SWAP1
0xc3c SUB
0xc3d PUSH1 0x64
0xc3f ADD
0xc40 SWAP1
0xc41 REVERT
---
0xc0d: V1118 = 0x40
0xc10: V1119 = M[0x40]
0xc11: V1120 = 0x461bcd
0xc15: V1121 = 0xe5
0xc17: V1122 = SHL 0xe5 0x461bcd
0xc19: M[V1119] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc1a: V1123 = 0x20
0xc1c: V1124 = 0x4
0xc1f: V1125 = ADD V1119 0x4
0xc20: M[V1125] = 0x20
0xc21: V1126 = 0x6
0xc23: V1127 = 0x24
0xc26: V1128 = ADD V1119 0x24
0xc27: M[V1128] = 0x6
0xc28: V1129 = 0x10b7bbb732b9
0xc2f: V1130 = 0xd1
0xc31: V1131 = SHL 0xd1 0x10b7bbb732b9
0xc32: V1132 = 0x44
0xc35: V1133 = ADD V1119 0x44
0xc36: M[V1133] = 0x216f776e65720000000000000000000000000000000000000000000000000000
0xc38: V1134 = M[0x40]
0xc3c: V1135 = SUB V1119 V1134
0xc3d: V1136 = 0x64
0xc3f: V1137 = ADD 0x64 V1135
0xc41: REVERT V1134 V1137
---
Entry stack: [V13, 0x1a6, V517]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V517]

================================

Block 0xc42
[0xc42:0xc44]
---
Predecessors: [0xbfa]
Successors: [0xc45]
---
0xc42 JUMPDEST
0xc43 PUSH1 0x0
---
0xc42: JUMPDEST 
0xc43: V1138 = 0x0
---
Entry stack: [V13, 0x1a6, V517]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x1a6, V517, 0x0]

================================

Block 0xc45
[0xc45:0xc4e]
---
Predecessors: [0xc42, 0xcb0]
Successors: [0x6aa, 0xc4f]
---
0xc45 JUMPDEST
0xc46 DUP2
0xc47 MLOAD
0xc48 DUP2
0xc49 LT
0xc4a ISZERO
0xc4b PUSH2 0x6aa
0xc4e JUMPI
---
0xc45: JUMPDEST 
0xc47: V1139 = M[V517]
0xc49: V1140 = LT S0 V1139
0xc4a: V1141 = ISZERO V1140
0xc4b: V1142 = 0x6aa
0xc4e: JUMPI 0x6aa V1141
---
Entry stack: [V13, 0x1a6, V517, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x1a6, V517, S0]

================================

Block 0xc4f
[0xc4f:0xc5d]
---
Predecessors: [0xc45]
Successors: [0xc5e, 0xc5f]
---
0xc4f PUSH1 0x1
0xc51 DUP1
0xc52 PUSH1 0x0
0xc54 DUP5
0xc55 DUP5
0xc56 DUP2
0xc57 MLOAD
0xc58 DUP2
0xc59 LT
0xc5a PUSH2 0xc5f
0xc5d JUMPI
---
0xc4f: V1143 = 0x1
0xc52: V1144 = 0x0
0xc57: V1145 = M[V517]
0xc59: V1146 = LT S0 V1145
0xc5a: V1147 = 0xc5f
0xc5d: JUMPI 0xc5f V1146
---
Entry stack: [V13, 0x1a6, V517, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x1, 0x1, 0x0, S1, S0]
Exit stack: [V13, 0x1a6, V517, S0, 0x1, 0x1, 0x0, V517, S0]

================================

Block 0xc5e
[0xc5e:0xc5e]
---
Predecessors: [0xc4f]
Successors: []
---
0xc5e INVALID
---
0xc5e: INVALID 
---
Entry stack: [V13, 0x1a6, V517, S5, 0x1, 0x1, 0x0, V517, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V517, S5, 0x1, 0x1, 0x0, V517, S0]

================================

Block 0xc5f
[0xc5f:0xcae]
---
Predecessors: [0xc4f]
Successors: [0xcaf, 0xcb0]
---
0xc5f JUMPDEST
0xc60 PUSH1 0x20
0xc62 MUL
0xc63 PUSH1 0x20
0xc65 ADD
0xc66 ADD
0xc67 MLOAD
0xc68 PUSH1 0x1
0xc6a PUSH1 0x1
0xc6c PUSH1 0xa0
0xc6e SHL
0xc6f SUB
0xc70 AND
0xc71 PUSH1 0x1
0xc73 PUSH1 0x1
0xc75 PUSH1 0xa0
0xc77 SHL
0xc78 SUB
0xc79 AND
0xc7a DUP2
0xc7b MSTORE
0xc7c PUSH1 0x20
0xc7e ADD
0xc7f SWAP1
0xc80 DUP2
0xc81 MSTORE
0xc82 PUSH1 0x20
0xc84 ADD
0xc85 PUSH1 0x0
0xc87 SHA3
0xc88 PUSH1 0x0
0xc8a PUSH2 0x100
0xc8d EXP
0xc8e DUP2
0xc8f SLOAD
0xc90 DUP2
0xc91 PUSH1 0xff
0xc93 MUL
0xc94 NOT
0xc95 AND
0xc96 SWAP1
0xc97 DUP4
0xc98 ISZERO
0xc99 ISZERO
0xc9a MUL
0xc9b OR
0xc9c SWAP1
0xc9d SSTORE
0xc9e POP
0xc9f PUSH1 0x0
0xca1 PUSH1 0x2
0xca3 PUSH1 0x0
0xca5 DUP5
0xca6 DUP5
0xca7 DUP2
0xca8 MLOAD
0xca9 DUP2
0xcaa LT
0xcab PUSH2 0xcb0
0xcae JUMPI
---
0xc5f: JUMPDEST 
0xc60: V1148 = 0x20
0xc62: V1149 = MUL 0x20 S0
0xc63: V1150 = 0x20
0xc65: V1151 = ADD 0x20 V1149
0xc66: V1152 = ADD V1151 V517
0xc67: V1153 = M[V1152]
0xc68: V1154 = 0x1
0xc6a: V1155 = 0x1
0xc6c: V1156 = 0xa0
0xc6e: V1157 = SHL 0xa0 0x1
0xc6f: V1158 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc70: V1159 = AND 0xffffffffffffffffffffffffffffffffffffffff V1153
0xc71: V1160 = 0x1
0xc73: V1161 = 0x1
0xc75: V1162 = 0xa0
0xc77: V1163 = SHL 0xa0 0x1
0xc78: V1164 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc79: V1165 = AND 0xffffffffffffffffffffffffffffffffffffffff V1159
0xc7b: M[0x0] = V1165
0xc7c: V1166 = 0x20
0xc7e: V1167 = ADD 0x20 0x0
0xc81: M[0x20] = 0x1
0xc82: V1168 = 0x20
0xc84: V1169 = ADD 0x20 0x20
0xc85: V1170 = 0x0
0xc87: V1171 = SHA3 0x0 0x40
0xc88: V1172 = 0x0
0xc8a: V1173 = 0x100
0xc8d: V1174 = EXP 0x100 0x0
0xc8f: V1175 = S[V1171]
0xc91: V1176 = 0xff
0xc93: V1177 = MUL 0xff 0x1
0xc94: V1178 = NOT 0xff
0xc95: V1179 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1175
0xc98: V1180 = ISZERO 0x1
0xc99: V1181 = ISZERO 0x0
0xc9a: V1182 = MUL 0x1 0x1
0xc9b: V1183 = OR 0x1 V1179
0xc9d: S[V1171] = V1183
0xc9f: V1184 = 0x0
0xca1: V1185 = 0x2
0xca3: V1186 = 0x0
0xca8: V1187 = M[V517]
0xcaa: V1188 = LT S5 V1187
0xcab: V1189 = 0xcb0
0xcae: JUMPI 0xcb0 V1188
---
Entry stack: [V13, 0x1a6, V517, S5, 0x1, 0x1, 0x0, V517, S0]
Stack pops: 7
Stack additions: [S6, S5, 0x0, 0x2, 0x0, S6, S5]
Exit stack: [V13, 0x1a6, V517, S5, 0x0, 0x2, 0x0, V517, S5]

================================

Block 0xcaf
[0xcaf:0xcaf]
---
Predecessors: [0xc5f]
Successors: []
---
0xcaf INVALID
---
0xcaf: INVALID 
---
Entry stack: [V13, 0x1a6, V517, S5, 0x0, 0x2, 0x0, V517, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V517, S5, 0x0, 0x2, 0x0, V517, S0]

================================

Block 0xcb0
[0xcb0:0xce9]
---
Predecessors: [0xc5f]
Successors: [0xc45]
---
0xcb0 JUMPDEST
0xcb1 PUSH1 0x20
0xcb3 SWAP1
0xcb4 DUP2
0xcb5 MUL
0xcb6 SWAP2
0xcb7 SWAP1
0xcb8 SWAP2
0xcb9 ADD
0xcba DUP2
0xcbb ADD
0xcbc MLOAD
0xcbd PUSH1 0x1
0xcbf PUSH1 0x1
0xcc1 PUSH1 0xa0
0xcc3 SHL
0xcc4 SUB
0xcc5 AND
0xcc6 DUP3
0xcc7 MSTORE
0xcc8 DUP2
0xcc9 ADD
0xcca SWAP2
0xccb SWAP1
0xccc SWAP2
0xccd MSTORE
0xcce PUSH1 0x40
0xcd0 ADD
0xcd1 PUSH1 0x0
0xcd3 SHA3
0xcd4 DUP1
0xcd5 SLOAD
0xcd6 PUSH1 0xff
0xcd8 NOT
0xcd9 AND
0xcda SWAP2
0xcdb ISZERO
0xcdc ISZERO
0xcdd SWAP2
0xcde SWAP1
0xcdf SWAP2
0xce0 OR
0xce1 SWAP1
0xce2 SSTORE
0xce3 PUSH1 0x1
0xce5 ADD
0xce6 PUSH2 0xc45
0xce9 JUMP
---
0xcb0: JUMPDEST 
0xcb1: V1190 = 0x20
0xcb5: V1191 = MUL 0x20 S0
0xcb9: V1192 = ADD V1191 V517
0xcbb: V1193 = ADD 0x20 V1192
0xcbc: V1194 = M[V1193]
0xcbd: V1195 = 0x1
0xcbf: V1196 = 0x1
0xcc1: V1197 = 0xa0
0xcc3: V1198 = SHL 0xa0 0x1
0xcc4: V1199 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc5: V1200 = AND 0xffffffffffffffffffffffffffffffffffffffff V1194
0xcc7: M[0x0] = V1200
0xcc9: V1201 = ADD 0x0 0x20
0xccd: M[0x20] = 0x2
0xcce: V1202 = 0x40
0xcd0: V1203 = ADD 0x40 0x0
0xcd1: V1204 = 0x0
0xcd3: V1205 = SHA3 0x0 0x40
0xcd5: V1206 = S[V1205]
0xcd6: V1207 = 0xff
0xcd8: V1208 = NOT 0xff
0xcd9: V1209 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1206
0xcdb: V1210 = ISZERO 0x0
0xcdc: V1211 = ISZERO 0x1
0xce0: V1212 = OR 0x0 V1209
0xce2: S[V1205] = V1212
0xce3: V1213 = 0x1
0xce5: V1214 = ADD 0x1 S5
0xce6: V1215 = 0xc45
0xce9: JUMP 0xc45
---
Entry stack: [V13, 0x1a6, V517, S5, 0x0, 0x2, 0x0, V517, S0]
Stack pops: 6
Stack additions: [V1214]
Exit stack: [V13, 0x1a6, V517, V1214]

================================

Block 0xcea
[0xcea:0xcf7]
---
Predecessors: [0x856, 0x863, 0xb14, 0xf5d, 0x1358]
Successors: [0xcf8, 0xd44]
---
0xcea JUMPDEST
0xceb PUSH1 0x0
0xced DUP3
0xcee DUP3
0xcef ADD
0xcf0 DUP4
0xcf1 DUP2
0xcf2 LT
0xcf3 ISZERO
0xcf4 PUSH2 0xd44
0xcf7 JUMPI
---
0xcea: JUMPDEST 
0xceb: V1216 = 0x0
0xcef: V1217 = ADD S0 S1
0xcf2: V1218 = LT V1217 S1
0xcf3: V1219 = ISZERO V1218
0xcf4: V1220 = 0xd44
0xcf7: JUMPI 0xd44 V1219
---
Entry stack: [V13, 0x1a6, V271, V312, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x863, 0x88b, 0xb55, 0xf8c, 0x1387}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1217]
Exit stack: [V13, 0x1a6, V271, V312, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, {0x863, 0x88b, 0xb55, 0xf8c, 0x1387}, S1, S0, 0x0, V1217]

================================

Block 0xcf8
[0xcf8:0xd43]
---
Predecessors: [0xcea]
Successors: []
---
0xcf8 PUSH1 0x40
0xcfa DUP1
0xcfb MLOAD
0xcfc PUSH3 0x461bcd
0xd00 PUSH1 0xe5
0xd02 SHL
0xd03 DUP2
0xd04 MSTORE
0xd05 PUSH1 0x20
0xd07 PUSH1 0x4
0xd09 DUP3
0xd0a ADD
0xd0b MSTORE
0xd0c PUSH1 0x1b
0xd0e PUSH1 0x24
0xd10 DUP3
0xd11 ADD
0xd12 MSTORE
0xd13 PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xd34 PUSH1 0x44
0xd36 DUP3
0xd37 ADD
0xd38 MSTORE
0xd39 SWAP1
0xd3a MLOAD
0xd3b SWAP1
0xd3c DUP2
0xd3d SWAP1
0xd3e SUB
0xd3f PUSH1 0x64
0xd41 ADD
0xd42 SWAP1
0xd43 REVERT
---
0xcf8: V1221 = 0x40
0xcfb: V1222 = M[0x40]
0xcfc: V1223 = 0x461bcd
0xd00: V1224 = 0xe5
0xd02: V1225 = SHL 0xe5 0x461bcd
0xd04: M[V1222] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xd05: V1226 = 0x20
0xd07: V1227 = 0x4
0xd0a: V1228 = ADD V1222 0x4
0xd0b: M[V1228] = 0x20
0xd0c: V1229 = 0x1b
0xd0e: V1230 = 0x24
0xd11: V1231 = ADD V1222 0x24
0xd12: M[V1231] = 0x1b
0xd13: V1232 = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xd34: V1233 = 0x44
0xd37: V1234 = ADD V1222 0x44
0xd38: M[V1234] = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xd3a: V1235 = M[0x40]
0xd3e: V1236 = SUB V1222 V1235
0xd3f: V1237 = 0x64
0xd41: V1238 = ADD 0x64 V1236
0xd43: REVERT V1235 V1238
---
Entry stack: [V13, 0x1a6, V271, V312, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x863, 0x88b, 0xb55, 0xf8c, 0x1387}, S3, S2, 0x0, V1217]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x863, 0x88b, 0xb55, 0xf8c, 0x1387}, S3, S2, 0x0, V1217]

================================

Block 0xd44
[0xd44:0xd4a]
---
Predecessors: [0xcea]
Successors: [0x863, 0x88b, 0xb55, 0xf8c, 0x1387]
---
0xd44 JUMPDEST
0xd45 SWAP4
0xd46 SWAP3
0xd47 POP
0xd48 POP
0xd49 POP
0xd4a JUMP
---
0xd44: JUMPDEST 
0xd4a: JUMP {0x863, 0x88b, 0xb55, 0xf8c, 0x1387}
---
Entry stack: [V13, 0x1a6, V271, V312, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, {0x863, 0x88b, 0xb55, 0xf8c, 0x1387}, S3, S2, 0x0, V1217]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, 0x1a6, V271, V312, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V1217]

================================

Block 0xd4b
[0xd4b:0xd4e]
---
Predecessors: [0x744, 0x774, 0x780, 0xbac]
Successors: [0x751, 0x780, 0x7be, 0xbb9]
---
0xd4b JUMPDEST
0xd4c CALLER
0xd4d SWAP1
0xd4e JUMP
---
0xd4b: JUMPDEST 
0xd4c: V1239 = CALLER
0xd4e: JUMP {0x751, 0x780, 0x7be, 0xbb9}
---
Entry stack: [V13, 0x1a6, V271, V312, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x751, 0x780, 0x7be, 0xbb9}]
Stack pops: 1
Stack additions: [V1239]
Exit stack: [V13, 0x1a6, V271, V312, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1239]

================================

Block 0xd4f
[0xd4f:0xd5d]
---
Predecessors: [0x751, 0x7df, 0x9c1]
Successors: [0xd5e, 0xd94]
---
0xd4f JUMPDEST
0xd50 PUSH1 0x1
0xd52 PUSH1 0x1
0xd54 PUSH1 0xa0
0xd56 SHL
0xd57 SUB
0xd58 DUP4
0xd59 AND
0xd5a PUSH2 0xd94
0xd5d JUMPI
---
0xd4f: JUMPDEST 
0xd50: V1240 = 0x1
0xd52: V1241 = 0x1
0xd54: V1242 = 0xa0
0xd56: V1243 = SHL 0xa0 0x1
0xd57: V1244 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd59: V1245 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xd5a: V1246 = 0xd94
0xd5d: JUMPI 0xd94 V1245
---
Entry stack: [V13, 0x1a6, V271, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x1a6, V271, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xd5e
[0xd5e:0xd93]
---
Predecessors: [0xd4f]
Successors: []
---
0xd5e PUSH1 0x40
0xd60 MLOAD
0xd61 PUSH3 0x461bcd
0xd65 PUSH1 0xe5
0xd67 SHL
0xd68 DUP2
0xd69 MSTORE
0xd6a PUSH1 0x4
0xd6c ADD
0xd6d DUP1
0xd6e DUP1
0xd6f PUSH1 0x20
0xd71 ADD
0xd72 DUP3
0xd73 DUP2
0xd74 SUB
0xd75 DUP3
0xd76 MSTORE
0xd77 PUSH1 0x24
0xd79 DUP2
0xd7a MSTORE
0xd7b PUSH1 0x20
0xd7d ADD
0xd7e DUP1
0xd7f PUSH2 0x156a
0xd82 PUSH1 0x24
0xd84 SWAP2
0xd85 CODECOPY
0xd86 PUSH1 0x40
0xd88 ADD
0xd89 SWAP2
0xd8a POP
0xd8b POP
0xd8c PUSH1 0x40
0xd8e MLOAD
0xd8f DUP1
0xd90 SWAP2
0xd91 SUB
0xd92 SWAP1
0xd93 REVERT
---
0xd5e: V1247 = 0x40
0xd60: V1248 = M[0x40]
0xd61: V1249 = 0x461bcd
0xd65: V1250 = 0xe5
0xd67: V1251 = SHL 0xe5 0x461bcd
0xd69: M[V1248] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xd6a: V1252 = 0x4
0xd6c: V1253 = ADD 0x4 V1248
0xd6f: V1254 = 0x20
0xd71: V1255 = ADD 0x20 V1253
0xd74: V1256 = SUB V1255 V1253
0xd76: M[V1253] = V1256
0xd77: V1257 = 0x24
0xd7a: M[V1255] = 0x24
0xd7b: V1258 = 0x20
0xd7d: V1259 = ADD 0x20 V1255
0xd7f: V1260 = 0x156a
0xd82: V1261 = 0x24
0xd85: CODECOPY V1259 0x156a 0x24
0xd86: V1262 = 0x40
0xd88: V1263 = ADD 0x40 V1259
0xd8c: V1264 = 0x40
0xd8e: V1265 = M[0x40]
0xd91: V1266 = SUB V1263 V1265
0xd93: REVERT V1265 V1266
---
Entry stack: [0x1a6, V271, V312, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [0x1a6, V271, V312, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xd94
[0xd94:0xda2]
---
Predecessors: [0xd4f]
Successors: [0xda3, 0xdd9]
---
0xd94 JUMPDEST
0xd95 PUSH1 0x1
0xd97 PUSH1 0x1
0xd99 PUSH1 0xa0
0xd9b SHL
0xd9c SUB
0xd9d DUP3
0xd9e AND
0xd9f PUSH2 0xdd9
0xda2 JUMPI
---
0xd94: JUMPDEST 
0xd95: V1267 = 0x1
0xd97: V1268 = 0x1
0xd99: V1269 = 0xa0
0xd9b: V1270 = SHL 0xa0 0x1
0xd9c: V1271 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd9e: V1272 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xd9f: V1273 = 0xdd9
0xda2: JUMPI 0xdd9 V1272
---
Entry stack: [V13, 0x1a6, V271, V312, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x1a6, V271, V312, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xda3
[0xda3:0xdd8]
---
Predecessors: [0xd94]
Successors: []
---
0xda3 PUSH1 0x40
0xda5 MLOAD
0xda6 PUSH3 0x461bcd
0xdaa PUSH1 0xe5
0xdac SHL
0xdad DUP2
0xdae MSTORE
0xdaf PUSH1 0x4
0xdb1 ADD
0xdb2 DUP1
0xdb3 DUP1
0xdb4 PUSH1 0x20
0xdb6 ADD
0xdb7 DUP3
0xdb8 DUP2
0xdb9 SUB
0xdba DUP3
0xdbb MSTORE
0xdbc PUSH1 0x22
0xdbe DUP2
0xdbf MSTORE
0xdc0 PUSH1 0x20
0xdc2 ADD
0xdc3 DUP1
0xdc4 PUSH2 0x14b5
0xdc7 PUSH1 0x22
0xdc9 SWAP2
0xdca CODECOPY
0xdcb PUSH1 0x40
0xdcd ADD
0xdce SWAP2
0xdcf POP
0xdd0 POP
0xdd1 PUSH1 0x40
0xdd3 MLOAD
0xdd4 DUP1
0xdd5 SWAP2
0xdd6 SUB
0xdd7 SWAP1
0xdd8 REVERT
---
0xda3: V1274 = 0x40
0xda5: V1275 = M[0x40]
0xda6: V1276 = 0x461bcd
0xdaa: V1277 = 0xe5
0xdac: V1278 = SHL 0xe5 0x461bcd
0xdae: M[V1275] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xdaf: V1279 = 0x4
0xdb1: V1280 = ADD 0x4 V1275
0xdb4: V1281 = 0x20
0xdb6: V1282 = ADD 0x20 V1280
0xdb9: V1283 = SUB V1282 V1280
0xdbb: M[V1280] = V1283
0xdbc: V1284 = 0x22
0xdbf: M[V1282] = 0x22
0xdc0: V1285 = 0x20
0xdc2: V1286 = ADD 0x20 V1282
0xdc4: V1287 = 0x14b5
0xdc7: V1288 = 0x22
0xdca: CODECOPY V1286 0x14b5 0x22
0xdcb: V1289 = 0x40
0xdcd: V1290 = ADD 0x40 V1286
0xdd1: V1291 = 0x40
0xdd3: V1292 = M[0x40]
0xdd6: V1293 = SUB V1290 V1292
0xdd8: REVERT V1292 V1293
---
Entry stack: [V13, 0x1a6, V271, V312, S9, S8, S7, S6, S5, S4, {0x758, 0x7e4, 0x9e0}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S9, S8, S7, S6, S5, S4, {0x758, 0x7e4, 0x9e0}, S2, S1, S0]

================================

Block 0xdd9
[0xdd9:0xe3a]
---
Predecessors: [0xd94]
Successors: [0x758, 0x7e4, 0x9e0]
---
0xdd9 JUMPDEST
0xdda PUSH1 0x1
0xddc PUSH1 0x1
0xdde PUSH1 0xa0
0xde0 SHL
0xde1 SUB
0xde2 DUP1
0xde3 DUP5
0xde4 AND
0xde5 PUSH1 0x0
0xde7 DUP2
0xde8 DUP2
0xde9 MSTORE
0xdea PUSH1 0x4
0xdec PUSH1 0x20
0xdee SWAP1
0xdef DUP2
0xdf0 MSTORE
0xdf1 PUSH1 0x40
0xdf3 DUP1
0xdf4 DUP4
0xdf5 SHA3
0xdf6 SWAP5
0xdf7 DUP8
0xdf8 AND
0xdf9 DUP1
0xdfa DUP5
0xdfb MSTORE
0xdfc SWAP5
0xdfd DUP3
0xdfe MSTORE
0xdff SWAP2
0xe00 DUP3
0xe01 SWAP1
0xe02 SHA3
0xe03 DUP6
0xe04 SWAP1
0xe05 SSTORE
0xe06 DUP2
0xe07 MLOAD
0xe08 DUP6
0xe09 DUP2
0xe0a MSTORE
0xe0b SWAP2
0xe0c MLOAD
0xe0d PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xe2e SWAP3
0xe2f DUP2
0xe30 SWAP1
0xe31 SUB
0xe32 SWAP1
0xe33 SWAP2
0xe34 ADD
0xe35 SWAP1
0xe36 LOG3
0xe37 POP
0xe38 POP
0xe39 POP
0xe3a JUMP
---
0xdd9: JUMPDEST 
0xdda: V1294 = 0x1
0xddc: V1295 = 0x1
0xdde: V1296 = 0xa0
0xde0: V1297 = SHL 0xa0 0x1
0xde1: V1298 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde4: V1299 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xde5: V1300 = 0x0
0xde9: M[0x0] = V1299
0xdea: V1301 = 0x4
0xdec: V1302 = 0x20
0xdf0: M[0x20] = 0x4
0xdf1: V1303 = 0x40
0xdf5: V1304 = SHA3 0x0 0x40
0xdf8: V1305 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xdfb: M[0x0] = V1305
0xdfe: M[0x20] = V1304
0xe02: V1306 = SHA3 0x0 0x40
0xe05: S[V1306] = S0
0xe07: V1307 = M[0x40]
0xe0a: M[V1307] = S0
0xe0c: V1308 = M[0x40]
0xe0d: V1309 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0xe31: V1310 = SUB V1307 V1308
0xe34: V1311 = ADD 0x20 V1310
0xe36: LOG V1308 V1311 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V1299 V1305
0xe3a: JUMP {0x758, 0x7e4, 0x9e0}
---
Entry stack: [V13, 0x1a6, V271, V312, S9, S8, S7, S6, S5, S4, {0x758, 0x7e4, 0x9e0}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S9, S8, S7, S6, S5, S4]

================================

Block 0xe3b
[0xe3b:0xe5b]
---
Predecessors: [0x767, 0xbb9]
Successors: [0xe5c, 0xe6e]
---
0xe3b JUMPDEST
0xe3c PUSH1 0xb
0xe3e SLOAD
0xe3f PUSH1 0xa
0xe41 SLOAD
0xe42 DUP5
0xe43 SWAP2
0xe44 DUP5
0xe45 SWAP2
0xe46 DUP5
0xe47 SWAP2
0xe48 PUSH1 0x1
0xe4a PUSH1 0x1
0xe4c PUSH1 0xa0
0xe4e SHL
0xe4f SUB
0xe50 SWAP2
0xe51 DUP3
0xe52 AND
0xe53 SWAP2
0xe54 AND
0xe55 EQ
0xe56 DUP1
0xe57 ISZERO
0xe58 PUSH2 0xe6e
0xe5b JUMPI
---
0xe3b: JUMPDEST 
0xe3c: V1312 = 0xb
0xe3e: V1313 = S[0xb]
0xe3f: V1314 = 0xa
0xe41: V1315 = S[0xa]
0xe48: V1316 = 0x1
0xe4a: V1317 = 0x1
0xe4c: V1318 = 0xa0
0xe4e: V1319 = SHL 0xa0 0x1
0xe4f: V1320 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe52: V1321 = AND 0xffffffffffffffffffffffffffffffffffffffff V1315
0xe54: V1322 = AND 0xffffffffffffffffffffffffffffffffffffffff V1313
0xe55: V1323 = EQ V1322 V1321
0xe57: V1324 = ISZERO V1323
0xe58: V1325 = 0xe6e
0xe5b: JUMPI 0xe6e V1324
---
Entry stack: [V13, 0x1a6, V271, V312, S9, S8, S7, S6, S5, 0x0, {0x758, 0x774}, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, S1, S0, V1323]
Exit stack: [V13, 0x1a6, V271, V312, S9, S8, S7, S6, S5, 0x0, {0x758, 0x774}, S2, S1, S0, S2, S1, S0, V1323]

================================

Block 0xe5c
[0xe5c:0xe6d]
---
Predecessors: [0xe3b]
Successors: [0xe6e]
---
0xe5c POP
0xe5d PUSH1 0xa
0xe5f SLOAD
0xe60 PUSH1 0x1
0xe62 PUSH1 0x1
0xe64 PUSH1 0xa0
0xe66 SHL
0xe67 SUB
0xe68 DUP5
0xe69 DUP2
0xe6a AND
0xe6b SWAP2
0xe6c AND
0xe6d EQ
---
0xe5d: V1326 = 0xa
0xe5f: V1327 = S[0xa]
0xe60: V1328 = 0x1
0xe62: V1329 = 0x1
0xe64: V1330 = 0xa0
0xe66: V1331 = SHL 0xa0 0x1
0xe67: V1332 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe6a: V1333 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xe6c: V1334 = AND V1327 0xffffffffffffffffffffffffffffffffffffffff
0xe6d: V1335 = EQ V1334 V1333
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, V1323]
Stack pops: 4
Stack additions: [S3, S2, S1, V1335]
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, V1335]

================================

Block 0xe6e
[0xe6e:0xe73]
---
Predecessors: [0xe3b, 0xe5c]
Successors: [0xe74, 0xfd4]
---
0xe6e JUMPDEST
0xe6f ISZERO
0xe70 PUSH2 0xfd4
0xe73 JUMPI
---
0xe6e: JUMPDEST 
0xe6f: V1336 = ISZERO S0
0xe70: V1337 = 0xfd4
0xe73: JUMPI 0xfd4 V1336
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1]

================================

Block 0xe74
[0xe74:0xe99]
---
Predecessors: [0xe6e]
Successors: [0xe9a, 0xed0]
---
0xe74 PUSH1 0xb
0xe76 DUP1
0xe77 SLOAD
0xe78 PUSH1 0x1
0xe7a PUSH1 0x1
0xe7c PUSH1 0xa0
0xe7e SHL
0xe7f SUB
0xe80 NOT
0xe81 AND
0xe82 PUSH1 0x1
0xe84 PUSH1 0x1
0xe86 PUSH1 0xa0
0xe88 SHL
0xe89 SUB
0xe8a DUP5
0xe8b DUP2
0xe8c AND
0xe8d SWAP2
0xe8e SWAP1
0xe8f SWAP2
0xe90 OR
0xe91 SWAP1
0xe92 SWAP2
0xe93 SSTORE
0xe94 DUP7
0xe95 AND
0xe96 PUSH2 0xed0
0xe99 JUMPI
---
0xe74: V1338 = 0xb
0xe77: V1339 = S[0xb]
0xe78: V1340 = 0x1
0xe7a: V1341 = 0x1
0xe7c: V1342 = 0xa0
0xe7e: V1343 = SHL 0xa0 0x1
0xe7f: V1344 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe80: V1345 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0xe81: V1346 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V1339
0xe82: V1347 = 0x1
0xe84: V1348 = 0x1
0xe86: V1349 = 0xa0
0xe88: V1350 = SHL 0xa0 0x1
0xe89: V1351 = SUB 0x10000000000000000000000000000000000000000 0x1
0xe8c: V1352 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0xe90: V1353 = OR V1352 V1346
0xe93: S[0xb] = V1353
0xe95: V1354 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0xe96: V1355 = 0xed0
0xe99: JUMPI 0xed0 V1354
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0xe9a
[0xe9a:0xecf]
---
Predecessors: [0xe74]
Successors: []
---
0xe9a PUSH1 0x40
0xe9c MLOAD
0xe9d PUSH3 0x461bcd
0xea1 PUSH1 0xe5
0xea3 SHL
0xea4 DUP2
0xea5 MSTORE
0xea6 PUSH1 0x4
0xea8 ADD
0xea9 DUP1
0xeaa DUP1
0xeab PUSH1 0x20
0xead ADD
0xeae DUP3
0xeaf DUP2
0xeb0 SUB
0xeb1 DUP3
0xeb2 MSTORE
0xeb3 PUSH1 0x25
0xeb5 DUP2
0xeb6 MSTORE
0xeb7 PUSH1 0x20
0xeb9 ADD
0xeba DUP1
0xebb PUSH2 0x1545
0xebe PUSH1 0x25
0xec0 SWAP2
0xec1 CODECOPY
0xec2 PUSH1 0x40
0xec4 ADD
0xec5 SWAP2
0xec6 POP
0xec7 POP
0xec8 PUSH1 0x40
0xeca MLOAD
0xecb DUP1
0xecc SWAP2
0xecd SUB
0xece SWAP1
0xecf REVERT
---
0xe9a: V1356 = 0x40
0xe9c: V1357 = M[0x40]
0xe9d: V1358 = 0x461bcd
0xea1: V1359 = 0xe5
0xea3: V1360 = SHL 0xe5 0x461bcd
0xea5: M[V1357] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xea6: V1361 = 0x4
0xea8: V1362 = ADD 0x4 V1357
0xeab: V1363 = 0x20
0xead: V1364 = ADD 0x20 V1362
0xeb0: V1365 = SUB V1364 V1362
0xeb2: M[V1362] = V1365
0xeb3: V1366 = 0x25
0xeb6: M[V1364] = 0x25
0xeb7: V1367 = 0x20
0xeb9: V1368 = ADD 0x20 V1364
0xebb: V1369 = 0x1545
0xebe: V1370 = 0x25
0xec1: CODECOPY V1368 0x1545 0x25
0xec2: V1371 = 0x40
0xec4: V1372 = ADD 0x40 V1368
0xec8: V1373 = 0x40
0xeca: V1374 = M[0x40]
0xecd: V1375 = SUB V1372 V1374
0xecf: REVERT V1374 V1375
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0xed0
[0xed0:0xede]
---
Predecessors: [0xe74, 0x1053, 0x10c0, 0x11af]
Successors: [0xedf, 0xf15]
---
0xed0 JUMPDEST
0xed1 PUSH1 0x1
0xed3 PUSH1 0x1
0xed5 PUSH1 0xa0
0xed7 SHL
0xed8 SUB
0xed9 DUP6
0xeda AND
0xedb PUSH2 0xf15
0xede JUMPI
---
0xed0: JUMPDEST 
0xed1: V1376 = 0x1
0xed3: V1377 = 0x1
0xed5: V1378 = 0xa0
0xed7: V1379 = SHL 0xa0 0x1
0xed8: V1380 = SUB 0x10000000000000000000000000000000000000000 0x1
0xeda: V1381 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0xedb: V1382 = 0xf15
0xede: JUMPI 0xf15 V1381
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0xedf
[0xedf:0xf14]
---
Predecessors: [0xed0]
Successors: []
---
0xedf PUSH1 0x40
0xee1 MLOAD
0xee2 PUSH3 0x461bcd
0xee6 PUSH1 0xe5
0xee8 SHL
0xee9 DUP2
0xeea MSTORE
0xeeb PUSH1 0x4
0xeed ADD
0xeee DUP1
0xeef DUP1
0xef0 PUSH1 0x20
0xef2 ADD
0xef3 DUP3
0xef4 DUP2
0xef5 SUB
0xef6 DUP3
0xef7 MSTORE
0xef8 PUSH1 0x23
0xefa DUP2
0xefb MSTORE
0xefc PUSH1 0x20
0xefe ADD
0xeff DUP1
0xf00 PUSH2 0x1470
0xf03 PUSH1 0x23
0xf05 SWAP2
0xf06 CODECOPY
0xf07 PUSH1 0x40
0xf09 ADD
0xf0a SWAP2
0xf0b POP
0xf0c POP
0xf0d PUSH1 0x40
0xf0f MLOAD
0xf10 DUP1
0xf11 SWAP2
0xf12 SUB
0xf13 SWAP1
0xf14 REVERT
---
0xedf: V1383 = 0x40
0xee1: V1384 = M[0x40]
0xee2: V1385 = 0x461bcd
0xee6: V1386 = 0xe5
0xee8: V1387 = SHL 0xe5 0x461bcd
0xeea: M[V1384] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xeeb: V1388 = 0x4
0xeed: V1389 = ADD 0x4 V1384
0xef0: V1390 = 0x20
0xef2: V1391 = ADD 0x20 V1389
0xef5: V1392 = SUB V1391 V1389
0xef7: M[V1389] = V1392
0xef8: V1393 = 0x23
0xefb: M[V1391] = 0x23
0xefc: V1394 = 0x20
0xefe: V1395 = ADD 0x20 V1391
0xf00: V1396 = 0x1470
0xf03: V1397 = 0x23
0xf06: CODECOPY V1395 0x1470 0x23
0xf07: V1398 = 0x40
0xf09: V1399 = ADD 0x40 V1395
0xf0d: V1400 = 0x40
0xf0f: V1401 = M[0x40]
0xf12: V1402 = SUB V1399 V1401
0xf14: REVERT V1401 V1402
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0xf15
[0xf15:0xf1f]
---
Predecessors: [0xed0]
Successors: [0x146a]
---
0xf15 JUMPDEST
0xf16 PUSH2 0xf20
0xf19 DUP7
0xf1a DUP7
0xf1b DUP7
0xf1c PUSH2 0x146a
0xf1f JUMP
---
0xf15: JUMPDEST 
0xf16: V1403 = 0xf20
0xf1c: V1404 = 0x146a
0xf1f: JUMP 0x146a
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0xf20, S5, S4, S3]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0, 0xf20, S5, S4, S3]

================================

Block 0xf20
[0xf20:0xf5c]
---
Predecessors: [0x146a]
Successors: [0x13d3]
---
0xf20 JUMPDEST
0xf21 PUSH2 0xf5d
0xf24 DUP5
0xf25 PUSH1 0x40
0xf27 MLOAD
0xf28 DUP1
0xf29 PUSH1 0x60
0xf2b ADD
0xf2c PUSH1 0x40
0xf2e MSTORE
0xf2f DUP1
0xf30 PUSH1 0x26
0xf32 DUP2
0xf33 MSTORE
0xf34 PUSH1 0x20
0xf36 ADD
0xf37 PUSH2 0x14d7
0xf3a PUSH1 0x26
0xf3c SWAP2
0xf3d CODECOPY
0xf3e PUSH1 0x1
0xf40 PUSH1 0x1
0xf42 PUSH1 0xa0
0xf44 SHL
0xf45 SUB
0xf46 DUP10
0xf47 AND
0xf48 PUSH1 0x0
0xf4a SWAP1
0xf4b DUP2
0xf4c MSTORE
0xf4d PUSH1 0x20
0xf4f DUP2
0xf50 SWAP1
0xf51 MSTORE
0xf52 PUSH1 0x40
0xf54 SWAP1
0xf55 SHA3
0xf56 SLOAD
0xf57 SWAP2
0xf58 SWAP1
0xf59 PUSH2 0x13d3
0xf5c JUMP
---
0xf20: JUMPDEST 
0xf21: V1405 = 0xf5d
0xf25: V1406 = 0x40
0xf27: V1407 = M[0x40]
0xf29: V1408 = 0x60
0xf2b: V1409 = ADD 0x60 V1407
0xf2c: V1410 = 0x40
0xf2e: M[0x40] = V1409
0xf30: V1411 = 0x26
0xf33: M[V1407] = 0x26
0xf34: V1412 = 0x20
0xf36: V1413 = ADD 0x20 V1407
0xf37: V1414 = 0x14d7
0xf3a: V1415 = 0x26
0xf3d: CODECOPY V1413 0x14d7 0x26
0xf3e: V1416 = 0x1
0xf40: V1417 = 0x1
0xf42: V1418 = 0xa0
0xf44: V1419 = SHL 0xa0 0x1
0xf45: V1420 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf47: V1421 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0xf48: V1422 = 0x0
0xf4c: M[0x0] = V1421
0xf4d: V1423 = 0x20
0xf51: M[0x20] = 0x0
0xf52: V1424 = 0x40
0xf55: V1425 = SHA3 0x0 0x40
0xf56: V1426 = S[V1425]
0xf59: V1427 = 0x13d3
0xf5c: JUMP 0x13d3
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0xf5d, V1426, S3, V1407]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0, 0xf5d, V1426, S3, V1407]

================================

Block 0xf5d
[0xf5d:0xf8b]
---
Predecessors: [0x1462]
Successors: [0xcea]
---
0xf5d JUMPDEST
0xf5e PUSH1 0x1
0xf60 PUSH1 0x1
0xf62 PUSH1 0xa0
0xf64 SHL
0xf65 SUB
0xf66 DUP1
0xf67 DUP9
0xf68 AND
0xf69 PUSH1 0x0
0xf6b SWAP1
0xf6c DUP2
0xf6d MSTORE
0xf6e PUSH1 0x20
0xf70 DUP2
0xf71 SWAP1
0xf72 MSTORE
0xf73 PUSH1 0x40
0xf75 DUP1
0xf76 DUP3
0xf77 SHA3
0xf78 SWAP4
0xf79 SWAP1
0xf7a SWAP4
0xf7b SSTORE
0xf7c SWAP1
0xf7d DUP8
0xf7e AND
0xf7f DUP2
0xf80 MSTORE
0xf81 SHA3
0xf82 SLOAD
0xf83 PUSH2 0xf8c
0xf86 SWAP1
0xf87 DUP6
0xf88 PUSH2 0xcea
0xf8b JUMP
---
0xf5d: JUMPDEST 
0xf5e: V1428 = 0x1
0xf60: V1429 = 0x1
0xf62: V1430 = 0xa0
0xf64: V1431 = SHL 0xa0 0x1
0xf65: V1432 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf68: V1433 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0xf69: V1434 = 0x0
0xf6d: M[0x0] = V1433
0xf6e: V1435 = 0x20
0xf72: M[0x20] = 0x0
0xf73: V1436 = 0x40
0xf77: V1437 = SHA3 0x0 0x40
0xf7b: S[V1437] = V1926
0xf7e: V1438 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0xf80: M[0x0] = V1438
0xf81: V1439 = SHA3 0x0 0x40
0xf82: V1440 = S[V1439]
0xf83: V1441 = 0xf8c
0xf88: V1442 = 0xcea
0xf8b: JUMP 0xcea
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1926]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, 0xf8c, V1440, S4]
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xf8c, V1440, S4]

================================

Block 0xf8c
[0xf8c:0xfd3]
---
Predecessors: [0xd44]
Successors: [0x13cb]
---
0xf8c JUMPDEST
0xf8d PUSH1 0x1
0xf8f PUSH1 0x1
0xf91 PUSH1 0xa0
0xf93 SHL
0xf94 SUB
0xf95 DUP1
0xf96 DUP8
0xf97 AND
0xf98 PUSH1 0x0
0xf9a DUP2
0xf9b DUP2
0xf9c MSTORE
0xf9d PUSH1 0x20
0xf9f DUP2
0xfa0 DUP2
0xfa1 MSTORE
0xfa2 PUSH1 0x40
0xfa4 SWAP2
0xfa5 DUP3
0xfa6 SWAP1
0xfa7 SHA3
0xfa8 SWAP5
0xfa9 SWAP1
0xfaa SWAP5
0xfab SSTORE
0xfac DUP1
0xfad MLOAD
0xfae DUP9
0xfaf DUP2
0xfb0 MSTORE
0xfb1 SWAP1
0xfb2 MLOAD
0xfb3 SWAP2
0xfb4 SWAP4
0xfb5 SWAP3
0xfb6 DUP11
0xfb7 AND
0xfb8 SWAP3
0xfb9 PUSH1 0x0
0xfbb DUP1
0xfbc MLOAD
0xfbd PUSH1 0x20
0xfbf PUSH2 0x1525
0xfc2 DUP4
0xfc3 CODECOPY
0xfc4 DUP2
0xfc5 MLOAD
0xfc6 SWAP2
0xfc7 MSTORE
0xfc8 SWAP3
0xfc9 SWAP2
0xfca DUP3
0xfcb SWAP1
0xfcc SUB
0xfcd ADD
0xfce SWAP1
0xfcf LOG3
0xfd0 PUSH2 0x13cb
0xfd3 JUMP
---
0xf8c: JUMPDEST 
0xf8d: V1443 = 0x1
0xf8f: V1444 = 0x1
0xf91: V1445 = 0xa0
0xf93: V1446 = SHL 0xa0 0x1
0xf94: V1447 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf97: V1448 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0xf98: V1449 = 0x0
0xf9c: M[0x0] = V1448
0xf9d: V1450 = 0x20
0xfa1: M[0x20] = 0x0
0xfa2: V1451 = 0x40
0xfa7: V1452 = SHA3 0x0 0x40
0xfab: S[V1452] = V1217
0xfad: V1453 = M[0x40]
0xfb0: M[V1453] = S4
0xfb2: V1454 = M[0x40]
0xfb7: V1455 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0xfb9: V1456 = 0x0
0xfbc: V1457 = M[0x0]
0xfbd: V1458 = 0x20
0xfbf: V1459 = 0x1525
0xfc3: CODECOPY 0x0 0x1525 0x20
0xfc5: V1460 = M[0x0]
0xfc7: M[0x0] = V1457
0xfcc: V1461 = SUB V1453 V1454
0xfcd: V1462 = ADD V1461 0x20
0xfcf: LOG V1454 V1462 V1460 V1455 V1448
0xfd0: V1463 = 0x13cb
0xfd3: JUMP 0x13cb
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1217]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1]
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0xfd4
[0xfd4:0xfea]
---
Predecessors: [0xe6e]
Successors: [0xfeb, 0xffd]
---
0xfd4 JUMPDEST
0xfd5 PUSH1 0xa
0xfd7 SLOAD
0xfd8 PUSH1 0x1
0xfda PUSH1 0x1
0xfdc PUSH1 0xa0
0xfde SHL
0xfdf SUB
0xfe0 DUP5
0xfe1 DUP2
0xfe2 AND
0xfe3 SWAP2
0xfe4 AND
0xfe5 EQ
0xfe6 DUP1
0xfe7 PUSH2 0xffd
0xfea JUMPI
---
0xfd4: JUMPDEST 
0xfd5: V1464 = 0xa
0xfd7: V1465 = S[0xa]
0xfd8: V1466 = 0x1
0xfda: V1467 = 0x1
0xfdc: V1468 = 0xa0
0xfde: V1469 = SHL 0xa0 0x1
0xfdf: V1470 = SUB 0x10000000000000000000000000000000000000000 0x1
0xfe2: V1471 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0xfe4: V1472 = AND V1465 0xffffffffffffffffffffffffffffffffffffffff
0xfe5: V1473 = EQ V1472 V1471
0xfe7: V1474 = 0xffd
0xfea: JUMPI 0xffd V1473
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1473]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0, V1473]

================================

Block 0xfeb
[0xfeb:0xffc]
---
Predecessors: [0xfd4]
Successors: [0xffd]
---
0xfeb POP
0xfec PUSH1 0xb
0xfee SLOAD
0xfef PUSH1 0x1
0xff1 PUSH1 0x1
0xff3 PUSH1 0xa0
0xff5 SHL
0xff6 SUB
0xff7 DUP5
0xff8 DUP2
0xff9 AND
0xffa SWAP2
0xffb AND
0xffc EQ
---
0xfec: V1475 = 0xb
0xfee: V1476 = S[0xb]
0xfef: V1477 = 0x1
0xff1: V1478 = 0x1
0xff3: V1479 = 0xa0
0xff5: V1480 = SHL 0xa0 0x1
0xff6: V1481 = SUB 0x10000000000000000000000000000000000000000 0x1
0xff9: V1482 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0xffb: V1483 = AND V1476 0xffffffffffffffffffffffffffffffffffffffff
0xffc: V1484 = EQ V1483 V1482
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, V1473]
Stack pops: 4
Stack additions: [S3, S2, S1, V1484]
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, V1484]

================================

Block 0xffd
[0xffd:0x1002]
---
Predecessors: [0xfd4, 0xfeb]
Successors: [0x1003, 0x1015]
---
0xffd JUMPDEST
0xffe DUP1
0xfff PUSH2 0x1015
0x1002 JUMPI
---
0xffd: JUMPDEST 
0xfff: V1485 = 0x1015
0x1002: JUMPI 0x1015 S0
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1003
[0x1003:0x1014]
---
Predecessors: [0xffd]
Successors: [0x1015]
---
0x1003 POP
0x1004 PUSH1 0xa
0x1006 SLOAD
0x1007 PUSH1 0x1
0x1009 PUSH1 0x1
0x100b PUSH1 0xa0
0x100d SHL
0x100e SUB
0x100f DUP4
0x1010 DUP2
0x1011 AND
0x1012 SWAP2
0x1013 AND
0x1014 EQ
---
0x1004: V1486 = 0xa
0x1006: V1487 = S[0xa]
0x1007: V1488 = 0x1
0x1009: V1489 = 0x1
0x100b: V1490 = 0xa0
0x100d: V1491 = SHL 0xa0 0x1
0x100e: V1492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1011: V1493 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x1013: V1494 = AND V1487 0xffffffffffffffffffffffffffffffffffffffff
0x1014: V1495 = EQ V1494 V1493
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, V1495]
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, V1495]

================================

Block 0x1015
[0x1015:0x101a]
---
Predecessors: [0xffd, 0x1003]
Successors: [0x101b, 0x1098]
---
0x1015 JUMPDEST
0x1016 ISZERO
0x1017 PUSH2 0x1098
0x101a JUMPI
---
0x1015: JUMPDEST 
0x1016: V1496 = ISZERO S0
0x1017: V1497 = 0x1098
0x101a: JUMPI 0x1098 V1496
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1]

================================

Block 0x101b
[0x101b:0x1031]
---
Predecessors: [0x1015]
Successors: [0x1032, 0x1048]
---
0x101b PUSH1 0xa
0x101d SLOAD
0x101e PUSH1 0x1
0x1020 PUSH1 0x1
0x1022 PUSH1 0xa0
0x1024 SHL
0x1025 SUB
0x1026 DUP5
0x1027 DUP2
0x1028 AND
0x1029 SWAP2
0x102a AND
0x102b EQ
0x102c DUP1
0x102d ISZERO
0x102e PUSH2 0x1048
0x1031 JUMPI
---
0x101b: V1498 = 0xa
0x101d: V1499 = S[0xa]
0x101e: V1500 = 0x1
0x1020: V1501 = 0x1
0x1022: V1502 = 0xa0
0x1024: V1503 = SHL 0xa0 0x1
0x1025: V1504 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1028: V1505 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x102a: V1506 = AND V1499 0xffffffffffffffffffffffffffffffffffffffff
0x102b: V1507 = EQ V1506 V1505
0x102d: V1508 = ISZERO V1507
0x102e: V1509 = 0x1048
0x1031: JUMPI 0x1048 V1508
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1507]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0, V1507]

================================

Block 0x1032
[0x1032:0x1047]
---
Predecessors: [0x101b]
Successors: [0x1048]
---
0x1032 POP
0x1033 DUP2
0x1034 PUSH1 0x1
0x1036 PUSH1 0x1
0x1038 PUSH1 0xa0
0x103a SHL
0x103b SUB
0x103c AND
0x103d DUP4
0x103e PUSH1 0x1
0x1040 PUSH1 0x1
0x1042 PUSH1 0xa0
0x1044 SHL
0x1045 SUB
0x1046 AND
0x1047 EQ
---
0x1034: V1510 = 0x1
0x1036: V1511 = 0x1
0x1038: V1512 = 0xa0
0x103a: V1513 = SHL 0xa0 0x1
0x103b: V1514 = SUB 0x10000000000000000000000000000000000000000 0x1
0x103c: V1515 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x103e: V1516 = 0x1
0x1040: V1517 = 0x1
0x1042: V1518 = 0xa0
0x1044: V1519 = SHL 0xa0 0x1
0x1045: V1520 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1046: V1521 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x1047: V1522 = EQ V1521 V1515
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, V1507]
Stack pops: 4
Stack additions: [S3, S2, S1, V1522]
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, V1522]

================================

Block 0x1048
[0x1048:0x104d]
---
Predecessors: [0x101b, 0x1032]
Successors: [0x104e, 0x1053]
---
0x1048 JUMPDEST
0x1049 ISZERO
0x104a PUSH2 0x1053
0x104d JUMPI
---
0x1048: JUMPDEST 
0x1049: V1523 = ISZERO S0
0x104a: V1524 = 0x1053
0x104d: JUMPI 0x1053 V1523
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1]

================================

Block 0x104e
[0x104e:0x1052]
---
Predecessors: [0x1048]
Successors: [0x1053]
---
0x104e PUSH1 0x3
0x1050 DUP2
0x1051 SWAP1
0x1052 SSTORE
---
0x104e: V1525 = 0x3
0x1052: S[0x3] = S0
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x1053
[0x1053:0x1061]
---
Predecessors: [0x1048, 0x104e, 0x1153, 0x1199]
Successors: [0xed0, 0x1062]
---
0x1053 JUMPDEST
0x1054 PUSH1 0x1
0x1056 PUSH1 0x1
0x1058 PUSH1 0xa0
0x105a SHL
0x105b SUB
0x105c DUP7
0x105d AND
0x105e PUSH2 0xed0
0x1061 JUMPI
---
0x1053: JUMPDEST 
0x1054: V1526 = 0x1
0x1056: V1527 = 0x1
0x1058: V1528 = 0xa0
0x105a: V1529 = SHL 0xa0 0x1
0x105b: V1530 = SUB 0x10000000000000000000000000000000000000000 0x1
0x105d: V1531 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x105e: V1532 = 0xed0
0x1061: JUMPI 0xed0 V1531
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x1062
[0x1062:0x1097]
---
Predecessors: [0x1053]
Successors: []
---
0x1062 PUSH1 0x40
0x1064 MLOAD
0x1065 PUSH3 0x461bcd
0x1069 PUSH1 0xe5
0x106b SHL
0x106c DUP2
0x106d MSTORE
0x106e PUSH1 0x4
0x1070 ADD
0x1071 DUP1
0x1072 DUP1
0x1073 PUSH1 0x20
0x1075 ADD
0x1076 DUP3
0x1077 DUP2
0x1078 SUB
0x1079 DUP3
0x107a MSTORE
0x107b PUSH1 0x25
0x107d DUP2
0x107e MSTORE
0x107f PUSH1 0x20
0x1081 ADD
0x1082 DUP1
0x1083 PUSH2 0x1545
0x1086 PUSH1 0x25
0x1088 SWAP2
0x1089 CODECOPY
0x108a PUSH1 0x40
0x108c ADD
0x108d SWAP2
0x108e POP
0x108f POP
0x1090 PUSH1 0x40
0x1092 MLOAD
0x1093 DUP1
0x1094 SWAP2
0x1095 SUB
0x1096 SWAP1
0x1097 REVERT
---
0x1062: V1533 = 0x40
0x1064: V1534 = M[0x40]
0x1065: V1535 = 0x461bcd
0x1069: V1536 = 0xe5
0x106b: V1537 = SHL 0xe5 0x461bcd
0x106d: M[V1534] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x106e: V1538 = 0x4
0x1070: V1539 = ADD 0x4 V1534
0x1073: V1540 = 0x20
0x1075: V1541 = ADD 0x20 V1539
0x1078: V1542 = SUB V1541 V1539
0x107a: M[V1539] = V1542
0x107b: V1543 = 0x25
0x107e: M[V1541] = 0x25
0x107f: V1544 = 0x20
0x1081: V1545 = ADD 0x20 V1541
0x1083: V1546 = 0x1545
0x1086: V1547 = 0x25
0x1089: CODECOPY V1545 0x1545 0x25
0x108a: V1548 = 0x40
0x108c: V1549 = ADD 0x40 V1545
0x1090: V1550 = 0x40
0x1092: V1551 = M[0x40]
0x1095: V1552 = SUB V1549 V1551
0x1097: REVERT V1551 V1552
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x1098
[0x1098:0x10bf]
---
Predecessors: [0x1015]
Successors: [0x10c0, 0x1104]
---
0x1098 JUMPDEST
0x1099 PUSH1 0x1
0x109b PUSH1 0x1
0x109d PUSH1 0xa0
0x109f SHL
0x10a0 SUB
0x10a1 DUP4
0x10a2 AND
0x10a3 PUSH1 0x0
0x10a5 SWAP1
0x10a6 DUP2
0x10a7 MSTORE
0x10a8 PUSH1 0x1
0x10aa PUSH1 0x20
0x10ac DUP2
0x10ad SWAP1
0x10ae MSTORE
0x10af PUSH1 0x40
0x10b1 SWAP1
0x10b2 SWAP2
0x10b3 SHA3
0x10b4 SLOAD
0x10b5 PUSH1 0xff
0x10b7 AND
0x10b8 ISZERO
0x10b9 ISZERO
0x10ba EQ
0x10bb ISZERO
0x10bc PUSH2 0x1104
0x10bf JUMPI
---
0x1098: JUMPDEST 
0x1099: V1553 = 0x1
0x109b: V1554 = 0x1
0x109d: V1555 = 0xa0
0x109f: V1556 = SHL 0xa0 0x1
0x10a0: V1557 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10a2: V1558 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x10a3: V1559 = 0x0
0x10a7: M[0x0] = V1558
0x10a8: V1560 = 0x1
0x10aa: V1561 = 0x20
0x10ae: M[0x20] = 0x1
0x10af: V1562 = 0x40
0x10b3: V1563 = SHA3 0x0 0x40
0x10b4: V1564 = S[V1563]
0x10b5: V1565 = 0xff
0x10b7: V1566 = AND 0xff V1564
0x10b8: V1567 = ISZERO V1566
0x10b9: V1568 = ISZERO V1567
0x10ba: V1569 = EQ V1568 0x1
0x10bb: V1570 = ISZERO V1569
0x10bc: V1571 = 0x1104
0x10bf: JUMPI 0x1104 V1570
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x10c0
[0x10c0:0x10cd]
---
Predecessors: [0x1098]
Successors: [0xed0, 0x10ce]
---
0x10c0 PUSH1 0x1
0x10c2 PUSH1 0x1
0x10c4 PUSH1 0xa0
0x10c6 SHL
0x10c7 SUB
0x10c8 DUP7
0x10c9 AND
0x10ca PUSH2 0xed0
0x10cd JUMPI
---
0x10c0: V1572 = 0x1
0x10c2: V1573 = 0x1
0x10c4: V1574 = 0xa0
0x10c6: V1575 = SHL 0xa0 0x1
0x10c7: V1576 = SUB 0x10000000000000000000000000000000000000000 0x1
0x10c9: V1577 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x10ca: V1578 = 0xed0
0x10cd: JUMPI 0xed0 V1577
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x10ce
[0x10ce:0x1103]
---
Predecessors: [0x10c0]
Successors: []
---
0x10ce PUSH1 0x40
0x10d0 MLOAD
0x10d1 PUSH3 0x461bcd
0x10d5 PUSH1 0xe5
0x10d7 SHL
0x10d8 DUP2
0x10d9 MSTORE
0x10da PUSH1 0x4
0x10dc ADD
0x10dd DUP1
0x10de DUP1
0x10df PUSH1 0x20
0x10e1 ADD
0x10e2 DUP3
0x10e3 DUP2
0x10e4 SUB
0x10e5 DUP3
0x10e6 MSTORE
0x10e7 PUSH1 0x25
0x10e9 DUP2
0x10ea MSTORE
0x10eb PUSH1 0x20
0x10ed ADD
0x10ee DUP1
0x10ef PUSH2 0x1545
0x10f2 PUSH1 0x25
0x10f4 SWAP2
0x10f5 CODECOPY
0x10f6 PUSH1 0x40
0x10f8 ADD
0x10f9 SWAP2
0x10fa POP
0x10fb POP
0x10fc PUSH1 0x40
0x10fe MLOAD
0x10ff DUP1
0x1100 SWAP2
0x1101 SUB
0x1102 SWAP1
0x1103 REVERT
---
0x10ce: V1579 = 0x40
0x10d0: V1580 = M[0x40]
0x10d1: V1581 = 0x461bcd
0x10d5: V1582 = 0xe5
0x10d7: V1583 = SHL 0xe5 0x461bcd
0x10d9: M[V1580] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x10da: V1584 = 0x4
0x10dc: V1585 = ADD 0x4 V1580
0x10df: V1586 = 0x20
0x10e1: V1587 = ADD 0x20 V1585
0x10e4: V1588 = SUB V1587 V1585
0x10e6: M[V1585] = V1588
0x10e7: V1589 = 0x25
0x10ea: M[V1587] = 0x25
0x10eb: V1590 = 0x20
0x10ed: V1591 = ADD 0x20 V1587
0x10ef: V1592 = 0x1545
0x10f2: V1593 = 0x25
0x10f5: CODECOPY V1591 0x1545 0x25
0x10f6: V1594 = 0x40
0x10f8: V1595 = ADD 0x40 V1591
0x10fc: V1596 = 0x40
0x10fe: V1597 = M[0x40]
0x1101: V1598 = SUB V1595 V1597
0x1103: REVERT V1597 V1598
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x1104
[0x1104:0x112a]
---
Predecessors: [0x1098]
Successors: [0x112b, 0x118e]
---
0x1104 JUMPDEST
0x1105 PUSH1 0x1
0x1107 PUSH1 0x1
0x1109 PUSH1 0xa0
0x110b SHL
0x110c SUB
0x110d DUP4
0x110e AND
0x110f PUSH1 0x0
0x1111 SWAP1
0x1112 DUP2
0x1113 MSTORE
0x1114 PUSH1 0x2
0x1116 PUSH1 0x20
0x1118 MSTORE
0x1119 PUSH1 0x40
0x111b SWAP1
0x111c SHA3
0x111d SLOAD
0x111e PUSH1 0xff
0x1120 AND
0x1121 ISZERO
0x1122 ISZERO
0x1123 PUSH1 0x1
0x1125 EQ
0x1126 ISZERO
0x1127 PUSH2 0x118e
0x112a JUMPI
---
0x1104: JUMPDEST 
0x1105: V1599 = 0x1
0x1107: V1600 = 0x1
0x1109: V1601 = 0xa0
0x110b: V1602 = SHL 0xa0 0x1
0x110c: V1603 = SUB 0x10000000000000000000000000000000000000000 0x1
0x110e: V1604 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x110f: V1605 = 0x0
0x1113: M[0x0] = V1604
0x1114: V1606 = 0x2
0x1116: V1607 = 0x20
0x1118: M[0x20] = 0x2
0x1119: V1608 = 0x40
0x111c: V1609 = SHA3 0x0 0x40
0x111d: V1610 = S[V1609]
0x111e: V1611 = 0xff
0x1120: V1612 = AND 0xff V1610
0x1121: V1613 = ISZERO V1612
0x1122: V1614 = ISZERO V1613
0x1123: V1615 = 0x1
0x1125: V1616 = EQ 0x1 V1614
0x1126: V1617 = ISZERO V1616
0x1127: V1618 = 0x118e
0x112a: JUMPI 0x118e V1617
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x112b
[0x112b:0x1140]
---
Predecessors: [0x1104]
Successors: [0x1141, 0x1153]
---
0x112b PUSH1 0xb
0x112d SLOAD
0x112e PUSH1 0x1
0x1130 PUSH1 0x1
0x1132 PUSH1 0xa0
0x1134 SHL
0x1135 SUB
0x1136 DUP5
0x1137 DUP2
0x1138 AND
0x1139 SWAP2
0x113a AND
0x113b EQ
0x113c DUP1
0x113d PUSH2 0x1153
0x1140 JUMPI
---
0x112b: V1619 = 0xb
0x112d: V1620 = S[0xb]
0x112e: V1621 = 0x1
0x1130: V1622 = 0x1
0x1132: V1623 = 0xa0
0x1134: V1624 = SHL 0xa0 0x1
0x1135: V1625 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1138: V1626 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x113a: V1627 = AND V1620 0xffffffffffffffffffffffffffffffffffffffff
0x113b: V1628 = EQ V1627 V1626
0x113d: V1629 = 0x1153
0x1140: JUMPI 0x1153 V1628
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1628]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0, V1628]

================================

Block 0x1141
[0x1141:0x1152]
---
Predecessors: [0x112b]
Successors: [0x1153]
---
0x1141 POP
0x1142 PUSH1 0xc
0x1144 SLOAD
0x1145 PUSH1 0x1
0x1147 PUSH1 0x1
0x1149 PUSH1 0xa0
0x114b SHL
0x114c SUB
0x114d DUP4
0x114e DUP2
0x114f AND
0x1150 SWAP2
0x1151 AND
0x1152 EQ
---
0x1142: V1630 = 0xc
0x1144: V1631 = S[0xc]
0x1145: V1632 = 0x1
0x1147: V1633 = 0x1
0x1149: V1634 = 0xa0
0x114b: V1635 = SHL 0xa0 0x1
0x114c: V1636 = SUB 0x10000000000000000000000000000000000000000 0x1
0x114f: V1637 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x1151: V1638 = AND V1631 0xffffffffffffffffffffffffffffffffffffffff
0x1152: V1639 = EQ V1638 V1637
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, V1628]
Stack pops: 3
Stack additions: [S2, S1, V1639]
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, V1639]

================================

Block 0x1153
[0x1153:0x1157]
---
Predecessors: [0x112b, 0x1141]
Successors: [0x1053, 0x1158]
---
0x1153 JUMPDEST
0x1154 PUSH2 0x1053
0x1157 JUMPI
---
0x1153: JUMPDEST 
0x1154: V1640 = 0x1053
0x1157: JUMPI 0x1053 S0
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1]

================================

Block 0x1158
[0x1158:0x118d]
---
Predecessors: [0x1153]
Successors: []
---
0x1158 PUSH1 0x40
0x115a MLOAD
0x115b PUSH3 0x461bcd
0x115f PUSH1 0xe5
0x1161 SHL
0x1162 DUP2
0x1163 MSTORE
0x1164 PUSH1 0x4
0x1166 ADD
0x1167 DUP1
0x1168 DUP1
0x1169 PUSH1 0x20
0x116b ADD
0x116c DUP3
0x116d DUP2
0x116e SUB
0x116f DUP3
0x1170 MSTORE
0x1171 PUSH1 0x26
0x1173 DUP2
0x1174 MSTORE
0x1175 PUSH1 0x20
0x1177 ADD
0x1178 DUP1
0x1179 PUSH2 0x14d7
0x117c PUSH1 0x26
0x117e SWAP2
0x117f CODECOPY
0x1180 PUSH1 0x40
0x1182 ADD
0x1183 SWAP2
0x1184 POP
0x1185 POP
0x1186 PUSH1 0x40
0x1188 MLOAD
0x1189 DUP1
0x118a SWAP2
0x118b SUB
0x118c SWAP1
0x118d REVERT
---
0x1158: V1641 = 0x40
0x115a: V1642 = M[0x40]
0x115b: V1643 = 0x461bcd
0x115f: V1644 = 0xe5
0x1161: V1645 = SHL 0xe5 0x461bcd
0x1163: M[V1642] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x1164: V1646 = 0x4
0x1166: V1647 = ADD 0x4 V1642
0x1169: V1648 = 0x20
0x116b: V1649 = ADD 0x20 V1647
0x116e: V1650 = SUB V1649 V1647
0x1170: M[V1647] = V1650
0x1171: V1651 = 0x26
0x1174: M[V1649] = 0x26
0x1175: V1652 = 0x20
0x1177: V1653 = ADD 0x20 V1649
0x1179: V1654 = 0x14d7
0x117c: V1655 = 0x26
0x117f: CODECOPY V1653 0x14d7 0x26
0x1180: V1656 = 0x40
0x1182: V1657 = ADD 0x40 V1653
0x1186: V1658 = 0x40
0x1188: V1659 = M[0x40]
0x118b: V1660 = SUB V1657 V1659
0x118d: REVERT V1659 V1660
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x118e
[0x118e:0x1198]
---
Predecessors: [0x1104]
Successors: [0x1199, 0x1222]
---
0x118e JUMPDEST
0x118f PUSH1 0x3
0x1191 SLOAD
0x1192 DUP2
0x1193 LT
0x1194 ISZERO
0x1195 PUSH2 0x1222
0x1198 JUMPI
---
0x118e: JUMPDEST 
0x118f: V1661 = 0x3
0x1191: V1662 = S[0x3]
0x1193: V1663 = LT S0 V1662
0x1194: V1664 = ISZERO V1663
0x1195: V1665 = 0x1222
0x1198: JUMPI 0x1222 V1664
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x1199
[0x1199:0x11ae]
---
Predecessors: [0x118e]
Successors: [0x1053, 0x11af]
---
0x1199 PUSH1 0xb
0x119b SLOAD
0x119c PUSH1 0x1
0x119e PUSH1 0x1
0x11a0 PUSH1 0xa0
0x11a2 SHL
0x11a3 SUB
0x11a4 DUP4
0x11a5 DUP2
0x11a6 AND
0x11a7 SWAP2
0x11a8 AND
0x11a9 EQ
0x11aa ISZERO
0x11ab PUSH2 0x1053
0x11ae JUMPI
---
0x1199: V1666 = 0xb
0x119b: V1667 = S[0xb]
0x119c: V1668 = 0x1
0x119e: V1669 = 0x1
0x11a0: V1670 = 0xa0
0x11a2: V1671 = SHL 0xa0 0x1
0x11a3: V1672 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11a6: V1673 = AND 0xffffffffffffffffffffffffffffffffffffffff S1
0x11a8: V1674 = AND V1667 0xffffffffffffffffffffffffffffffffffffffff
0x11a9: V1675 = EQ V1674 V1673
0x11aa: V1676 = ISZERO V1675
0x11ab: V1677 = 0x1053
0x11ae: JUMPI 0x1053 V1676
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x11af
[0x11af:0x11eb]
---
Predecessors: [0x1199]
Successors: [0xed0, 0x11ec]
---
0x11af PUSH1 0x1
0x11b1 PUSH1 0x1
0x11b3 PUSH1 0xa0
0x11b5 SHL
0x11b6 SUB
0x11b7 DUP4
0x11b8 DUP2
0x11b9 AND
0x11ba PUSH1 0x0
0x11bc SWAP1
0x11bd DUP2
0x11be MSTORE
0x11bf PUSH1 0x2
0x11c1 PUSH1 0x20
0x11c3 SWAP1
0x11c4 DUP2
0x11c5 MSTORE
0x11c6 PUSH1 0x40
0x11c8 DUP1
0x11c9 DUP4
0x11ca SHA3
0x11cb DUP1
0x11cc SLOAD
0x11cd PUSH1 0x1
0x11cf PUSH1 0xff
0x11d1 NOT
0x11d2 SWAP2
0x11d3 DUP3
0x11d4 AND
0x11d5 DUP2
0x11d6 OR
0x11d7 SWAP1
0x11d8 SWAP3
0x11d9 SSTORE
0x11da SWAP3
0x11db MSTORE
0x11dc SWAP1
0x11dd SWAP2
0x11de SHA3
0x11df DUP1
0x11e0 SLOAD
0x11e1 SWAP1
0x11e2 SWAP2
0x11e3 AND
0x11e4 SWAP1
0x11e5 SSTORE
0x11e6 DUP7
0x11e7 AND
0x11e8 PUSH2 0xed0
0x11eb JUMPI
---
0x11af: V1678 = 0x1
0x11b1: V1679 = 0x1
0x11b3: V1680 = 0xa0
0x11b5: V1681 = SHL 0xa0 0x1
0x11b6: V1682 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11b9: V1683 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x11ba: V1684 = 0x0
0x11be: M[0x0] = V1683
0x11bf: V1685 = 0x2
0x11c1: V1686 = 0x20
0x11c5: M[0x20] = 0x2
0x11c6: V1687 = 0x40
0x11ca: V1688 = SHA3 0x0 0x40
0x11cc: V1689 = S[V1688]
0x11cd: V1690 = 0x1
0x11cf: V1691 = 0xff
0x11d1: V1692 = NOT 0xff
0x11d4: V1693 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1689
0x11d6: V1694 = OR 0x1 V1693
0x11d9: S[V1688] = V1694
0x11db: M[0x20] = 0x1
0x11de: V1695 = SHA3 0x0 0x40
0x11e0: V1696 = S[V1695]
0x11e3: V1697 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1696
0x11e5: S[V1695] = V1697
0x11e7: V1698 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x11e8: V1699 = 0xed0
0x11eb: JUMPI 0xed0 V1698
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x11ec
[0x11ec:0x1221]
---
Predecessors: [0x11af]
Successors: []
---
0x11ec PUSH1 0x40
0x11ee MLOAD
0x11ef PUSH3 0x461bcd
0x11f3 PUSH1 0xe5
0x11f5 SHL
0x11f6 DUP2
0x11f7 MSTORE
0x11f8 PUSH1 0x4
0x11fa ADD
0x11fb DUP1
0x11fc DUP1
0x11fd PUSH1 0x20
0x11ff ADD
0x1200 DUP3
0x1201 DUP2
0x1202 SUB
0x1203 DUP3
0x1204 MSTORE
0x1205 PUSH1 0x25
0x1207 DUP2
0x1208 MSTORE
0x1209 PUSH1 0x20
0x120b ADD
0x120c DUP1
0x120d PUSH2 0x1545
0x1210 PUSH1 0x25
0x1212 SWAP2
0x1213 CODECOPY
0x1214 PUSH1 0x40
0x1216 ADD
0x1217 SWAP2
0x1218 POP
0x1219 POP
0x121a PUSH1 0x40
0x121c MLOAD
0x121d DUP1
0x121e SWAP2
0x121f SUB
0x1220 SWAP1
0x1221 REVERT
---
0x11ec: V1700 = 0x40
0x11ee: V1701 = M[0x40]
0x11ef: V1702 = 0x461bcd
0x11f3: V1703 = 0xe5
0x11f5: V1704 = SHL 0xe5 0x461bcd
0x11f7: M[V1701] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x11f8: V1705 = 0x4
0x11fa: V1706 = ADD 0x4 V1701
0x11fd: V1707 = 0x20
0x11ff: V1708 = ADD 0x20 V1706
0x1202: V1709 = SUB V1708 V1706
0x1204: M[V1706] = V1709
0x1205: V1710 = 0x25
0x1208: M[V1708] = 0x25
0x1209: V1711 = 0x20
0x120b: V1712 = ADD 0x20 V1708
0x120d: V1713 = 0x1545
0x1210: V1714 = 0x25
0x1213: CODECOPY V1712 0x1545 0x25
0x1214: V1715 = 0x40
0x1216: V1716 = ADD 0x40 V1712
0x121a: V1717 = 0x40
0x121c: V1718 = M[0x40]
0x121f: V1719 = SUB V1716 V1718
0x1221: REVERT V1718 V1719
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x1222
[0x1222:0x1238]
---
Predecessors: [0x118e]
Successors: [0x1239, 0x124b]
---
0x1222 JUMPDEST
0x1223 PUSH1 0xb
0x1225 SLOAD
0x1226 PUSH1 0x1
0x1228 PUSH1 0x1
0x122a PUSH1 0xa0
0x122c SHL
0x122d SUB
0x122e DUP5
0x122f DUP2
0x1230 AND
0x1231 SWAP2
0x1232 AND
0x1233 EQ
0x1234 DUP1
0x1235 PUSH2 0x124b
0x1238 JUMPI
---
0x1222: JUMPDEST 
0x1223: V1720 = 0xb
0x1225: V1721 = S[0xb]
0x1226: V1722 = 0x1
0x1228: V1723 = 0x1
0x122a: V1724 = 0xa0
0x122c: V1725 = SHL 0xa0 0x1
0x122d: V1726 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1230: V1727 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x1232: V1728 = AND V1721 0xffffffffffffffffffffffffffffffffffffffff
0x1233: V1729 = EQ V1728 V1727
0x1235: V1730 = 0x124b
0x1238: JUMPI 0x124b V1729
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, V1729]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0, V1729]

================================

Block 0x1239
[0x1239:0x124a]
---
Predecessors: [0x1222]
Successors: [0x124b]
---
0x1239 POP
0x123a PUSH1 0xc
0x123c SLOAD
0x123d PUSH1 0x1
0x123f PUSH1 0x1
0x1241 PUSH1 0xa0
0x1243 SHL
0x1244 SUB
0x1245 DUP4
0x1246 DUP2
0x1247 AND
0x1248 SWAP2
0x1249 AND
0x124a EQ
---
0x123a: V1731 = 0xc
0x123c: V1732 = S[0xc]
0x123d: V1733 = 0x1
0x123f: V1734 = 0x1
0x1241: V1735 = 0xa0
0x1243: V1736 = SHL 0xa0 0x1
0x1244: V1737 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1247: V1738 = AND 0xffffffffffffffffffffffffffffffffffffffff S2
0x1249: V1739 = AND V1732 0xffffffffffffffffffffffffffffffffffffffff
0x124a: V1740 = EQ V1739 V1738
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, V1729]
Stack pops: 3
Stack additions: [S2, S1, V1740]
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, V1740]

================================

Block 0x124b
[0x124b:0x124f]
---
Predecessors: [0x1222, 0x1239]
Successors: [0x1250, 0x1286]
---
0x124b JUMPDEST
0x124c PUSH2 0x1286
0x124f JUMPI
---
0x124b: JUMPDEST 
0x124c: V1741 = 0x1286
0x124f: JUMPI 0x1286 S0
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, 0x0, {0x758, 0x774}, S6, S5, S4, S3, S2, S1]

================================

Block 0x1250
[0x1250:0x1285]
---
Predecessors: [0x124b]
Successors: []
---
0x1250 PUSH1 0x40
0x1252 MLOAD
0x1253 PUSH3 0x461bcd
0x1257 PUSH1 0xe5
0x1259 SHL
0x125a DUP2
0x125b MSTORE
0x125c PUSH1 0x4
0x125e ADD
0x125f DUP1
0x1260 DUP1
0x1261 PUSH1 0x20
0x1263 ADD
0x1264 DUP3
0x1265 DUP2
0x1266 SUB
0x1267 DUP3
0x1268 MSTORE
0x1269 PUSH1 0x26
0x126b DUP2
0x126c MSTORE
0x126d PUSH1 0x20
0x126f ADD
0x1270 DUP1
0x1271 PUSH2 0x14d7
0x1274 PUSH1 0x26
0x1276 SWAP2
0x1277 CODECOPY
0x1278 PUSH1 0x40
0x127a ADD
0x127b SWAP2
0x127c POP
0x127d POP
0x127e PUSH1 0x40
0x1280 MLOAD
0x1281 DUP1
0x1282 SWAP2
0x1283 SUB
0x1284 SWAP1
0x1285 REVERT
---
0x1250: V1742 = 0x40
0x1252: V1743 = M[0x40]
0x1253: V1744 = 0x461bcd
0x1257: V1745 = 0xe5
0x1259: V1746 = SHL 0xe5 0x461bcd
0x125b: M[V1743] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x125c: V1747 = 0x4
0x125e: V1748 = ADD 0x4 V1743
0x1261: V1749 = 0x20
0x1263: V1750 = ADD 0x20 V1748
0x1266: V1751 = SUB V1750 V1748
0x1268: M[V1748] = V1751
0x1269: V1752 = 0x26
0x126c: M[V1750] = 0x26
0x126d: V1753 = 0x20
0x126f: V1754 = ADD 0x20 V1750
0x1271: V1755 = 0x14d7
0x1274: V1756 = 0x26
0x1277: CODECOPY V1754 0x14d7 0x26
0x1278: V1757 = 0x40
0x127a: V1758 = ADD 0x40 V1754
0x127e: V1759 = 0x40
0x1280: V1760 = M[0x40]
0x1283: V1761 = SUB V1758 V1760
0x1285: REVERT V1760 V1761
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x1286
[0x1286:0x1294]
---
Predecessors: [0x124b]
Successors: [0x1295, 0x12cb]
---
0x1286 JUMPDEST
0x1287 PUSH1 0x1
0x1289 PUSH1 0x1
0x128b PUSH1 0xa0
0x128d SHL
0x128e SUB
0x128f DUP7
0x1290 AND
0x1291 PUSH2 0x12cb
0x1294 JUMPI
---
0x1286: JUMPDEST 
0x1287: V1762 = 0x1
0x1289: V1763 = 0x1
0x128b: V1764 = 0xa0
0x128d: V1765 = SHL 0xa0 0x1
0x128e: V1766 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1290: V1767 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x1291: V1768 = 0x12cb
0x1294: JUMPI 0x12cb V1767
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x1295
[0x1295:0x12ca]
---
Predecessors: [0x1286]
Successors: []
---
0x1295 PUSH1 0x40
0x1297 MLOAD
0x1298 PUSH3 0x461bcd
0x129c PUSH1 0xe5
0x129e SHL
0x129f DUP2
0x12a0 MSTORE
0x12a1 PUSH1 0x4
0x12a3 ADD
0x12a4 DUP1
0x12a5 DUP1
0x12a6 PUSH1 0x20
0x12a8 ADD
0x12a9 DUP3
0x12aa DUP2
0x12ab SUB
0x12ac DUP3
0x12ad MSTORE
0x12ae PUSH1 0x25
0x12b0 DUP2
0x12b1 MSTORE
0x12b2 PUSH1 0x20
0x12b4 ADD
0x12b5 DUP1
0x12b6 PUSH2 0x1545
0x12b9 PUSH1 0x25
0x12bb SWAP2
0x12bc CODECOPY
0x12bd PUSH1 0x40
0x12bf ADD
0x12c0 SWAP2
0x12c1 POP
0x12c2 POP
0x12c3 PUSH1 0x40
0x12c5 MLOAD
0x12c6 DUP1
0x12c7 SWAP2
0x12c8 SUB
0x12c9 SWAP1
0x12ca REVERT
---
0x1295: V1769 = 0x40
0x1297: V1770 = M[0x40]
0x1298: V1771 = 0x461bcd
0x129c: V1772 = 0xe5
0x129e: V1773 = SHL 0xe5 0x461bcd
0x12a0: M[V1770] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x12a1: V1774 = 0x4
0x12a3: V1775 = ADD 0x4 V1770
0x12a6: V1776 = 0x20
0x12a8: V1777 = ADD 0x20 V1775
0x12ab: V1778 = SUB V1777 V1775
0x12ad: M[V1775] = V1778
0x12ae: V1779 = 0x25
0x12b1: M[V1777] = 0x25
0x12b2: V1780 = 0x20
0x12b4: V1781 = ADD 0x20 V1777
0x12b6: V1782 = 0x1545
0x12b9: V1783 = 0x25
0x12bc: CODECOPY V1781 0x1545 0x25
0x12bd: V1784 = 0x40
0x12bf: V1785 = ADD 0x40 V1781
0x12c3: V1786 = 0x40
0x12c5: V1787 = M[0x40]
0x12c8: V1788 = SUB V1785 V1787
0x12ca: REVERT V1787 V1788
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x12cb
[0x12cb:0x12d9]
---
Predecessors: [0x1286]
Successors: [0x12da, 0x1310]
---
0x12cb JUMPDEST
0x12cc PUSH1 0x1
0x12ce PUSH1 0x1
0x12d0 PUSH1 0xa0
0x12d2 SHL
0x12d3 SUB
0x12d4 DUP6
0x12d5 AND
0x12d6 PUSH2 0x1310
0x12d9 JUMPI
---
0x12cb: JUMPDEST 
0x12cc: V1789 = 0x1
0x12ce: V1790 = 0x1
0x12d0: V1791 = 0xa0
0x12d2: V1792 = SHL 0xa0 0x1
0x12d3: V1793 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12d5: V1794 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x12d6: V1795 = 0x1310
0x12d9: JUMPI 0x1310 V1794
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x12da
[0x12da:0x130f]
---
Predecessors: [0x12cb]
Successors: []
---
0x12da PUSH1 0x40
0x12dc MLOAD
0x12dd PUSH3 0x461bcd
0x12e1 PUSH1 0xe5
0x12e3 SHL
0x12e4 DUP2
0x12e5 MSTORE
0x12e6 PUSH1 0x4
0x12e8 ADD
0x12e9 DUP1
0x12ea DUP1
0x12eb PUSH1 0x20
0x12ed ADD
0x12ee DUP3
0x12ef DUP2
0x12f0 SUB
0x12f1 DUP3
0x12f2 MSTORE
0x12f3 PUSH1 0x23
0x12f5 DUP2
0x12f6 MSTORE
0x12f7 PUSH1 0x20
0x12f9 ADD
0x12fa DUP1
0x12fb PUSH2 0x1470
0x12fe PUSH1 0x23
0x1300 SWAP2
0x1301 CODECOPY
0x1302 PUSH1 0x40
0x1304 ADD
0x1305 SWAP2
0x1306 POP
0x1307 POP
0x1308 PUSH1 0x40
0x130a MLOAD
0x130b DUP1
0x130c SWAP2
0x130d SUB
0x130e SWAP1
0x130f REVERT
---
0x12da: V1796 = 0x40
0x12dc: V1797 = M[0x40]
0x12dd: V1798 = 0x461bcd
0x12e1: V1799 = 0xe5
0x12e3: V1800 = SHL 0xe5 0x461bcd
0x12e5: M[V1797] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x12e6: V1801 = 0x4
0x12e8: V1802 = ADD 0x4 V1797
0x12eb: V1803 = 0x20
0x12ed: V1804 = ADD 0x20 V1802
0x12f0: V1805 = SUB V1804 V1802
0x12f2: M[V1802] = V1805
0x12f3: V1806 = 0x23
0x12f6: M[V1804] = 0x23
0x12f7: V1807 = 0x20
0x12f9: V1808 = ADD 0x20 V1804
0x12fb: V1809 = 0x1470
0x12fe: V1810 = 0x23
0x1301: CODECOPY V1808 0x1470 0x23
0x1302: V1811 = 0x40
0x1304: V1812 = ADD 0x40 V1808
0x1308: V1813 = 0x40
0x130a: V1814 = M[0x40]
0x130d: V1815 = SUB V1812 V1814
0x130f: REVERT V1814 V1815
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]

================================

Block 0x1310
[0x1310:0x131a]
---
Predecessors: [0x12cb]
Successors: [0x146a]
---
0x1310 JUMPDEST
0x1311 PUSH2 0x131b
0x1314 DUP7
0x1315 DUP7
0x1316 DUP7
0x1317 PUSH2 0x146a
0x131a JUMP
---
0x1310: JUMPDEST 
0x1311: V1816 = 0x131b
0x1317: V1817 = 0x146a
0x131a: JUMP 0x146a
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x131b, S5, S4, S3]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0, 0x131b, S5, S4, S3]

================================

Block 0x131b
[0x131b:0x1357]
---
Predecessors: [0x146a]
Successors: [0x13d3]
---
0x131b JUMPDEST
0x131c PUSH2 0x1358
0x131f DUP5
0x1320 PUSH1 0x40
0x1322 MLOAD
0x1323 DUP1
0x1324 PUSH1 0x60
0x1326 ADD
0x1327 PUSH1 0x40
0x1329 MSTORE
0x132a DUP1
0x132b PUSH1 0x26
0x132d DUP2
0x132e MSTORE
0x132f PUSH1 0x20
0x1331 ADD
0x1332 PUSH2 0x14d7
0x1335 PUSH1 0x26
0x1337 SWAP2
0x1338 CODECOPY
0x1339 PUSH1 0x1
0x133b PUSH1 0x1
0x133d PUSH1 0xa0
0x133f SHL
0x1340 SUB
0x1341 DUP10
0x1342 AND
0x1343 PUSH1 0x0
0x1345 SWAP1
0x1346 DUP2
0x1347 MSTORE
0x1348 PUSH1 0x20
0x134a DUP2
0x134b SWAP1
0x134c MSTORE
0x134d PUSH1 0x40
0x134f SWAP1
0x1350 SHA3
0x1351 SLOAD
0x1352 SWAP2
0x1353 SWAP1
0x1354 PUSH2 0x13d3
0x1357 JUMP
---
0x131b: JUMPDEST 
0x131c: V1818 = 0x1358
0x1320: V1819 = 0x40
0x1322: V1820 = M[0x40]
0x1324: V1821 = 0x60
0x1326: V1822 = ADD 0x60 V1820
0x1327: V1823 = 0x40
0x1329: M[0x40] = V1822
0x132b: V1824 = 0x26
0x132e: M[V1820] = 0x26
0x132f: V1825 = 0x20
0x1331: V1826 = ADD 0x20 V1820
0x1332: V1827 = 0x14d7
0x1335: V1828 = 0x26
0x1338: CODECOPY V1826 0x14d7 0x26
0x1339: V1829 = 0x1
0x133b: V1830 = 0x1
0x133d: V1831 = 0xa0
0x133f: V1832 = SHL 0xa0 0x1
0x1340: V1833 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1342: V1834 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x1343: V1835 = 0x0
0x1347: M[0x0] = V1834
0x1348: V1836 = 0x20
0x134c: M[0x20] = 0x0
0x134d: V1837 = 0x40
0x1350: V1838 = SHA3 0x0 0x40
0x1351: V1839 = S[V1838]
0x1354: V1840 = 0x13d3
0x1357: JUMP 0x13d3
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, 0x1358, V1839, S3, V1820]
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0, 0x1358, V1839, S3, V1820]

================================

Block 0x1358
[0x1358:0x1386]
---
Predecessors: [0x1462]
Successors: [0xcea]
---
0x1358 JUMPDEST
0x1359 PUSH1 0x1
0x135b PUSH1 0x1
0x135d PUSH1 0xa0
0x135f SHL
0x1360 SUB
0x1361 DUP1
0x1362 DUP9
0x1363 AND
0x1364 PUSH1 0x0
0x1366 SWAP1
0x1367 DUP2
0x1368 MSTORE
0x1369 PUSH1 0x20
0x136b DUP2
0x136c SWAP1
0x136d MSTORE
0x136e PUSH1 0x40
0x1370 DUP1
0x1371 DUP3
0x1372 SHA3
0x1373 SWAP4
0x1374 SWAP1
0x1375 SWAP4
0x1376 SSTORE
0x1377 SWAP1
0x1378 DUP8
0x1379 AND
0x137a DUP2
0x137b MSTORE
0x137c SHA3
0x137d SLOAD
0x137e PUSH2 0x1387
0x1381 SWAP1
0x1382 DUP6
0x1383 PUSH2 0xcea
0x1386 JUMP
---
0x1358: JUMPDEST 
0x1359: V1841 = 0x1
0x135b: V1842 = 0x1
0x135d: V1843 = 0xa0
0x135f: V1844 = SHL 0xa0 0x1
0x1360: V1845 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1363: V1846 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x1364: V1847 = 0x0
0x1368: M[0x0] = V1846
0x1369: V1848 = 0x20
0x136d: M[0x20] = 0x0
0x136e: V1849 = 0x40
0x1372: V1850 = SHA3 0x0 0x40
0x1376: S[V1850] = V1926
0x1379: V1851 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x137b: M[0x0] = V1851
0x137c: V1852 = SHA3 0x0 0x40
0x137d: V1853 = S[V1852]
0x137e: V1854 = 0x1387
0x1383: V1855 = 0xcea
0x1386: JUMP 0xcea
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1926]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, 0x1387, V1853, S4]
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x1387, V1853, S4]

================================

Block 0x1387
[0x1387:0x13ca]
---
Predecessors: [0xd44]
Successors: [0x13cb]
---
0x1387 JUMPDEST
0x1388 PUSH1 0x1
0x138a PUSH1 0x1
0x138c PUSH1 0xa0
0x138e SHL
0x138f SUB
0x1390 DUP1
0x1391 DUP8
0x1392 AND
0x1393 PUSH1 0x0
0x1395 DUP2
0x1396 DUP2
0x1397 MSTORE
0x1398 PUSH1 0x20
0x139a DUP2
0x139b DUP2
0x139c MSTORE
0x139d PUSH1 0x40
0x139f SWAP2
0x13a0 DUP3
0x13a1 SWAP1
0x13a2 SHA3
0x13a3 SWAP5
0x13a4 SWAP1
0x13a5 SWAP5
0x13a6 SSTORE
0x13a7 DUP1
0x13a8 MLOAD
0x13a9 DUP9
0x13aa DUP2
0x13ab MSTORE
0x13ac SWAP1
0x13ad MLOAD
0x13ae SWAP2
0x13af SWAP4
0x13b0 SWAP3
0x13b1 DUP11
0x13b2 AND
0x13b3 SWAP3
0x13b4 PUSH1 0x0
0x13b6 DUP1
0x13b7 MLOAD
0x13b8 PUSH1 0x20
0x13ba PUSH2 0x1525
0x13bd DUP4
0x13be CODECOPY
0x13bf DUP2
0x13c0 MLOAD
0x13c1 SWAP2
0x13c2 MSTORE
0x13c3 SWAP3
0x13c4 SWAP2
0x13c5 DUP3
0x13c6 SWAP1
0x13c7 SUB
0x13c8 ADD
0x13c9 SWAP1
0x13ca LOG3
---
0x1387: JUMPDEST 
0x1388: V1856 = 0x1
0x138a: V1857 = 0x1
0x138c: V1858 = 0xa0
0x138e: V1859 = SHL 0xa0 0x1
0x138f: V1860 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1392: V1861 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x1393: V1862 = 0x0
0x1397: M[0x0] = V1861
0x1398: V1863 = 0x20
0x139c: M[0x20] = 0x0
0x139d: V1864 = 0x40
0x13a2: V1865 = SHA3 0x0 0x40
0x13a6: S[V1865] = V1217
0x13a8: V1866 = M[0x40]
0x13ab: M[V1866] = S4
0x13ad: V1867 = M[0x40]
0x13b2: V1868 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x13b4: V1869 = 0x0
0x13b7: V1870 = M[0x0]
0x13b8: V1871 = 0x20
0x13ba: V1872 = 0x1525
0x13be: CODECOPY 0x0 0x1525 0x20
0x13c0: V1873 = M[0x0]
0x13c2: M[0x0] = V1870
0x13c7: V1874 = SUB V1866 V1867
0x13c8: V1875 = ADD V1874 0x20
0x13ca: LOG V1867 V1875 V1873 V1868 V1861
---
Entry stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V1217]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1]
Exit stack: [V13, 0x1a6, V271, V312, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x13cb
[0x13cb:0x13d2]
---
Predecessors: [0xf8c, 0x1387]
Successors: [0x758, 0x774]
---
0x13cb JUMPDEST
0x13cc POP
0x13cd POP
0x13ce POP
0x13cf POP
0x13d0 POP
0x13d1 POP
0x13d2 JUMP
---
0x13cb: JUMPDEST 
0x13d2: JUMP {0x758, 0x774}
---
Entry stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0, {0x758, 0x774}, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S12, S11, S10, S9, S8, 0x0]

================================

Block 0x13d3
[0x13d3:0x13de]
---
Predecessors: [0x7be, 0xae0, 0xf20, 0x131b]
Successors: [0x13df, 0x1462]
---
0x13d3 JUMPDEST
0x13d4 PUSH1 0x0
0x13d6 DUP2
0x13d7 DUP5
0x13d8 DUP5
0x13d9 GT
0x13da ISZERO
0x13db PUSH2 0x1462
0x13de JUMPI
---
0x13d3: JUMPDEST 
0x13d4: V1876 = 0x0
0x13d9: V1877 = GT S1 S2
0x13da: V1878 = ISZERO V1877
0x13db: V1879 = 0x1462
0x13de: JUMPI 0x1462 V1878
---
Entry stack: [V13, 0x1a6, V271, V312, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, S0]
Exit stack: [V13, 0x1a6, V271, V312, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, S0]

================================

Block 0x13df
[0x13df:0x140e]
---
Predecessors: [0x13d3]
Successors: [0x140f]
---
0x13df PUSH1 0x40
0x13e1 MLOAD
0x13e2 PUSH3 0x461bcd
0x13e6 PUSH1 0xe5
0x13e8 SHL
0x13e9 DUP2
0x13ea MSTORE
0x13eb PUSH1 0x4
0x13ed ADD
0x13ee DUP1
0x13ef DUP1
0x13f0 PUSH1 0x20
0x13f2 ADD
0x13f3 DUP3
0x13f4 DUP2
0x13f5 SUB
0x13f6 DUP3
0x13f7 MSTORE
0x13f8 DUP4
0x13f9 DUP2
0x13fa DUP2
0x13fb MLOAD
0x13fc DUP2
0x13fd MSTORE
0x13fe PUSH1 0x20
0x1400 ADD
0x1401 SWAP2
0x1402 POP
0x1403 DUP1
0x1404 MLOAD
0x1405 SWAP1
0x1406 PUSH1 0x20
0x1408 ADD
0x1409 SWAP1
0x140a DUP1
0x140b DUP4
0x140c DUP4
0x140d PUSH1 0x0
---
0x13df: V1880 = 0x40
0x13e1: V1881 = M[0x40]
0x13e2: V1882 = 0x461bcd
0x13e6: V1883 = 0xe5
0x13e8: V1884 = SHL 0xe5 0x461bcd
0x13ea: M[V1881] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x13eb: V1885 = 0x4
0x13ed: V1886 = ADD 0x4 V1881
0x13f0: V1887 = 0x20
0x13f2: V1888 = ADD 0x20 V1886
0x13f5: V1889 = SUB V1888 V1886
0x13f7: M[V1886] = V1889
0x13fb: V1890 = M[S0]
0x13fd: M[V1888] = V1890
0x13fe: V1891 = 0x20
0x1400: V1892 = ADD 0x20 V1888
0x1404: V1893 = M[S0]
0x1406: V1894 = 0x20
0x1408: V1895 = ADD 0x20 S0
0x140d: V1896 = 0x0
---
Entry stack: [V13, 0x1a6, V271, V312, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x7df, 0xb14, 0xf5d, 0x1358}, S4, S3, S2, 0x0, S0]
Stack pops: 1
Stack additions: [S0, V1886, V1886, V1892, V1895, V1893, V1893, V1892, V1895, 0x0]
Exit stack: [V13, 0x1a6, V271, V312, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x7df, 0xb14, 0xf5d, 0x1358}, S4, S3, S2, 0x0, S0, V1886, V1886, V1892, V1895, V1893, V1893, V1892, V1895, 0x0]

================================

Block 0x140f
[0x140f:0x1417]
---
Predecessors: [0x13df, 0x1418]
Successors: [0x1418, 0x1427]
---
0x140f JUMPDEST
0x1410 DUP4
0x1411 DUP2
0x1412 LT
0x1413 ISZERO
0x1414 PUSH2 0x1427
0x1417 JUMPI
---
0x140f: JUMPDEST 
0x1412: V1897 = LT S0 V1893
0x1413: V1898 = ISZERO V1897
0x1414: V1899 = 0x1427
0x1417: JUMPI 0x1427 V1898
---
Entry stack: [V13, 0x1a6, V271, V312, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x7df, 0xb14, 0xf5d, 0x1358}, S13, S12, S11, 0x0, S9, V1886, V1886, V1892, V1895, V1893, V1893, V1892, V1895, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x1a6, V271, V312, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x7df, 0xb14, 0xf5d, 0x1358}, S13, S12, S11, 0x0, S9, V1886, V1886, V1892, V1895, V1893, V1893, V1892, V1895, S0]

================================

Block 0x1418
[0x1418:0x1426]
---
Predecessors: [0x140f]
Successors: [0x140f]
---
0x1418 DUP2
0x1419 DUP2
0x141a ADD
0x141b MLOAD
0x141c DUP4
0x141d DUP3
0x141e ADD
0x141f MSTORE
0x1420 PUSH1 0x20
0x1422 ADD
0x1423 PUSH2 0x140f
0x1426 JUMP
---
0x141a: V1900 = ADD S0 V1895
0x141b: V1901 = M[V1900]
0x141e: V1902 = ADD S0 V1892
0x141f: M[V1902] = V1901
0x1420: V1903 = 0x20
0x1422: V1904 = ADD 0x20 S0
0x1423: V1905 = 0x140f
0x1426: JUMP 0x140f
---
Entry stack: [V13, 0x1a6, V271, V312, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x7df, 0xb14, 0xf5d, 0x1358}, S13, S12, S11, 0x0, S9, V1886, V1886, V1892, V1895, V1893, V1893, V1892, V1895, S0]
Stack pops: 3
Stack additions: [S2, S1, V1904]
Exit stack: [V13, 0x1a6, V271, V312, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x7df, 0xb14, 0xf5d, 0x1358}, S13, S12, S11, 0x0, S9, V1886, V1886, V1892, V1895, V1893, V1893, V1892, V1895, V1904]

================================

Block 0x1427
[0x1427:0x143a]
---
Predecessors: [0x140f]
Successors: [0x143b, 0x1454]
---
0x1427 JUMPDEST
0x1428 POP
0x1429 POP
0x142a POP
0x142b POP
0x142c SWAP1
0x142d POP
0x142e SWAP1
0x142f DUP2
0x1430 ADD
0x1431 SWAP1
0x1432 PUSH1 0x1f
0x1434 AND
0x1435 DUP1
0x1436 ISZERO
0x1437 PUSH2 0x1454
0x143a JUMPI
---
0x1427: JUMPDEST 
0x1430: V1906 = ADD V1893 V1892
0x1432: V1907 = 0x1f
0x1434: V1908 = AND 0x1f V1893
0x1436: V1909 = ISZERO V1908
0x1437: V1910 = 0x1454
0x143a: JUMPI 0x1454 V1909
---
Entry stack: [V13, 0x1a6, V271, V312, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x7df, 0xb14, 0xf5d, 0x1358}, S13, S12, S11, 0x0, S9, V1886, V1886, V1892, V1895, V1893, V1893, V1892, V1895, S0]
Stack pops: 7
Stack additions: [V1906, V1908]
Exit stack: [V13, 0x1a6, V271, V312, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, {0x7df, 0xb14, 0xf5d, 0x1358}, S13, S12, S11, 0x0, S9, V1886, V1886, V1906, V1908]

================================

Block 0x143b
[0x143b:0x1453]
---
Predecessors: [0x1427]
Successors: [0x1454]
---
0x143b DUP1
0x143c DUP3
0x143d SUB
0x143e DUP1
0x143f MLOAD
0x1440 PUSH1 0x1
0x1442 DUP4
0x1443 PUSH1 0x20
0x1445 SUB
0x1446 PUSH2 0x100
0x1449 EXP
0x144a SUB
0x144b NOT
0x144c AND
0x144d DUP2
0x144e MSTORE
0x144f PUSH1 0x20
0x1451 ADD
0x1452 SWAP2
0x1453 POP
---
0x143d: V1911 = SUB V1906 V1908
0x143f: V1912 = M[V1911]
0x1440: V1913 = 0x1
0x1443: V1914 = 0x20
0x1445: V1915 = SUB 0x20 V1908
0x1446: V1916 = 0x100
0x1449: V1917 = EXP 0x100 V1915
0x144a: V1918 = SUB V1917 0x1
0x144b: V1919 = NOT V1918
0x144c: V1920 = AND V1919 V1912
0x144e: M[V1911] = V1920
0x144f: V1921 = 0x20
0x1451: V1922 = ADD 0x20 V1911
---
Entry stack: [V13, 0x1a6, V271, V312, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x7df, 0xb14, 0xf5d, 0x1358}, S8, S7, S6, 0x0, S4, V1886, V1886, V1906, V1908]
Stack pops: 2
Stack additions: [V1922, S0]
Exit stack: [V13, 0x1a6, V271, V312, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x7df, 0xb14, 0xf5d, 0x1358}, S8, S7, S6, 0x0, S4, V1886, V1886, V1922, V1908]

================================

Block 0x1454
[0x1454:0x1461]
---
Predecessors: [0x1427, 0x143b]
Successors: []
---
0x1454 JUMPDEST
0x1455 POP
0x1456 SWAP3
0x1457 POP
0x1458 POP
0x1459 POP
0x145a PUSH1 0x40
0x145c MLOAD
0x145d DUP1
0x145e SWAP2
0x145f SUB
0x1460 SWAP1
0x1461 REVERT
---
0x1454: JUMPDEST 
0x145a: V1923 = 0x40
0x145c: V1924 = M[0x40]
0x145f: V1925 = SUB S1 V1924
0x1461: REVERT V1924 V1925
---
Entry stack: [V13, 0x1a6, V271, V312, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x7df, 0xb14, 0xf5d, 0x1358}, S8, S7, S6, 0x0, S4, V1886, V1886, S1, V1908]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, {0x7df, 0xb14, 0xf5d, 0x1358}, S8, S7, S6, 0x0]

================================

Block 0x1462
[0x1462:0x1469]
---
Predecessors: [0x13d3]
Successors: [0x7df, 0xb14, 0xf5d, 0x1358]
---
0x1462 JUMPDEST
0x1463 POP
0x1464 POP
0x1465 POP
0x1466 SWAP1
0x1467 SUB
0x1468 SWAP1
0x1469 JUMP
---
0x1462: JUMPDEST 
0x1467: V1926 = SUB S4 S3
0x1469: JUMP {0x7df, 0xb14, 0xf5d, 0x1358}
---
Entry stack: [V13, 0x1a6, V271, V312, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, {0x7df, 0xb14, 0xf5d, 0x1358}, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: [V1926]
Exit stack: [V13, 0x1a6, V271, V312, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V1926]

================================

Block 0x146a
[0x146a:0x146e]
---
Predecessors: [0xad4, 0xf15, 0x1310]
Successors: [0xae0, 0xf20, 0x131b]
---
0x146a JUMPDEST
0x146b POP
0x146c POP
0x146d POP
0x146e JUMP
---
0x146a: JUMPDEST 
0x146e: JUMP {0xae0, 0xf20, 0x131b}
---
Entry stack: [V13, 0x1a6, V271, V312, S16, S15, S14, S13, S12, 0x0, {0x758, 0x774}, S9, S8, S7, S6, S5, S4, {0xae0, 0xf20, 0x131b}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, 0x1a6, V271, V312, S16, S15, S14, S13, S12, 0x0, {0x758, 0x774}, S9, S8, S7, S6, S5, S4]

================================

Block 0x146f
[0x146f:0x15c2]
---
Predecessors: []
Successors: []
---
0x146f INVALID
0x1470 GASLIMIT
0x1471 MSTORE
0x1472 NUMBER
0x1473 ORIGIN
0x1474 ADDRESS
0x1475 GASPRICE
0x1476 SHA3
0x1477 PUSH21 0x72616e7366657220746f20746865207a65726f2061
0x148d PUSH5 0x6472657373
0x1493 GASLIMIT
0x1494 MSTORE
0x1495 NUMBER
0x1496 ORIGIN
0x1497 ADDRESS
0x1498 GASPRICE
0x1499 SHA3
0x149a PUSH3 0x75726e
0x149e SHA3
0x149f PUSH2 0x6d6f
0x14a2 PUSH22 0x6e7420657863656564732062616c616e636545524332
0x14b9 ADDRESS
0x14ba GASPRICE
0x14bb SHA3
0x14bc PUSH2 0x7070
0x14bf PUSH19 0x6f766520746f20746865207a65726f20616464
0x14d3 PUSH19 0x65737345524332303a207472616e7366657220
0x14e7 PUSH2 0x6d6f
0x14ea PUSH22 0x6e7420657863656564732062616c616e636545524332
0x1501 ADDRESS
0x1502 GASPRICE
0x1503 SHA3
0x1504 PUSH21 0x72616e7366657220616d6f756e7420657863656564
0x151a PUSH20 0x20616c6c6f77616e6365ddf252ad1be2c89b69c2
0x152f MISSING 0xb0
0x1530 PUSH9 0xfc378daa952ba7f163
0x153a MISSING 0xc4
0x153b LOG1
0x153c AND
0x153d MISSING 0x28
0x153e CREATE2
0x153f GAS
0x1540 MISSING 0x4d
0x1541 CREATE2
0x1542 MISSING 0x23
0x1543 MISSING 0xb3
0x1544 MISSING 0xef
0x1545 GASLIMIT
0x1546 MSTORE
0x1547 NUMBER
0x1548 ORIGIN
0x1549 ADDRESS
0x154a GASPRICE
0x154b SHA3
0x154c PUSH21 0x72616e736665722066726f6d20746865207a65726f
0x1562 SHA3
0x1563 PUSH2 0x6464
0x1566 PUSH19 0x65737345524332303a20617070726f76652066
0x157a PUSH19 0x6f6d20746865207a65726f2061646472657373
0x158e LOG2
0x158f PUSH5 0x6970667358
0x1595 MISSING 0x22
0x1596 SLT
0x1597 SHA3
0x1598 MISSING 0xe4
0x1599 ISZERO
0x159a SAR
0x159b DELEGATECALL
0x159c MISSING 0x5c
0x159d MISSING 0x47
0x159e MISSING 0xe4
0x159f MISSING 0xb5
0x15a0 MISSING 0xd1
0x15a1 PUSH14 0x216b5e490d2cb86597a00cdfff97
0x15b0 SWAP13
0x15b1 SAR
0x15b2 MISSING 0xf
0x15b3 MISSING 0x2f
0x15b4 MISSING 0x2d
0x15b5 MLOAD
0x15b6 MISSING 0xb5
0x15b7 SWAP11
0x15b8 PUSH5 0x736f6c6343
0x15be STOP
0x15bf MOD
0x15c0 MISSING 0xc
0x15c1 STOP
0x15c2 CALLER
---
0x146f: INVALID 
0x1470: V1927 = GASLIMIT
0x1471: M[V1927] = S0
0x1472: V1928 = NUMBER
0x1473: V1929 = ORIGIN
0x1474: V1930 = ADDRESS
0x1475: V1931 = GASPRICE
0x1476: V1932 = SHA3 V1931 V1930
0x1477: V1933 = 0x72616e7366657220746f20746865207a65726f2061
0x148d: V1934 = 0x6472657373
0x1493: V1935 = GASLIMIT
0x1494: M[V1935] = 0x6472657373
0x1495: V1936 = NUMBER
0x1496: V1937 = ORIGIN
0x1497: V1938 = ADDRESS
0x1498: V1939 = GASPRICE
0x1499: V1940 = SHA3 V1939 V1938
0x149a: V1941 = 0x75726e
0x149e: V1942 = SHA3 0x75726e V1940
0x149f: V1943 = 0x6d6f
0x14a2: V1944 = 0x6e7420657863656564732062616c616e636545524332
0x14b9: V1945 = ADDRESS
0x14ba: V1946 = GASPRICE
0x14bb: V1947 = SHA3 V1946 V1945
0x14bc: V1948 = 0x7070
0x14bf: V1949 = 0x6f766520746f20746865207a65726f20616464
0x14d3: V1950 = 0x65737345524332303a207472616e7366657220
0x14e7: V1951 = 0x6d6f
0x14ea: V1952 = 0x6e7420657863656564732062616c616e636545524332
0x1501: V1953 = ADDRESS
0x1502: V1954 = GASPRICE
0x1503: V1955 = SHA3 V1954 V1953
0x1504: V1956 = 0x72616e7366657220616d6f756e7420657863656564
0x151a: V1957 = 0x20616c6c6f77616e6365ddf252ad1be2c89b69c2
0x152f: MISSING 0xb0
0x1530: V1958 = 0xfc378daa952ba7f163
0x153a: MISSING 0xc4
0x153b: LOG S0 S1 S2
0x153c: V1959 = AND S3 S4
0x153d: MISSING 0x28
0x153e: V1960 = CREATE2 S0 S1 S2 S3
0x153f: V1961 = GAS
0x1540: MISSING 0x4d
0x1541: V1962 = CREATE2 S0 S1 S2 S3
0x1542: MISSING 0x23
0x1543: MISSING 0xb3
0x1544: MISSING 0xef
0x1545: V1963 = GASLIMIT
0x1546: M[V1963] = S0
0x1547: V1964 = NUMBER
0x1548: V1965 = ORIGIN
0x1549: V1966 = ADDRESS
0x154a: V1967 = GASPRICE
0x154b: V1968 = SHA3 V1967 V1966
0x154c: V1969 = 0x72616e736665722066726f6d20746865207a65726f
0x1562: V1970 = SHA3 0x72616e736665722066726f6d20746865207a65726f V1968
0x1563: V1971 = 0x6464
0x1566: V1972 = 0x65737345524332303a20617070726f76652066
0x157a: V1973 = 0x6f6d20746865207a65726f2061646472657373
0x158e: LOG 0x6f6d20746865207a65726f2061646472657373 0x65737345524332303a20617070726f76652066 0x6464 V1970
0x158f: V1974 = 0x6970667358
0x1595: MISSING 0x22
0x1596: V1975 = SLT S0 S1
0x1597: V1976 = SHA3 V1975 S2
0x1598: MISSING 0xe4
0x1599: V1977 = ISZERO S0
0x159a: V1978 = SAR V1977 S1
0x159b: V1979 = DELEGATECALL V1978 S2 S3 S4 S5 S6
0x159c: MISSING 0x5c
0x159d: MISSING 0x47
0x159e: MISSING 0xe4
0x159f: MISSING 0xb5
0x15a0: MISSING 0xd1
0x15a1: V1980 = 0x216b5e490d2cb86597a00cdfff97
0x15b1: V1981 = SAR S12 S0
0x15b2: MISSING 0xf
0x15b3: MISSING 0x2f
0x15b4: MISSING 0x2d
0x15b5: V1982 = M[S0]
0x15b6: MISSING 0xb5
0x15b8: V1983 = 0x736f6c6343
0x15be: STOP 
0x15bf: V1984 = MOD S0 S1
0x15c0: MISSING 0xc
0x15c1: STOP 
0x15c2: V1985 = CALLER
---
Entry stack: []
Stack pops: 0
Stack additions: [0x20616c6c6f77616e6365ddf252ad1be2c89b69c2, 0x72616e7366657220616d6f756e7420657863656564, V1955, 0x6e7420657863656564732062616c616e636545524332, 0x6d6f, 0x65737345524332303a207472616e7366657220, 0x6f766520746f20746865207a65726f20616464, 0x7070, V1947, 0x6e7420657863656564732062616c616e636545524332, 0x6d6f, V1942, V1937, V1936, 0x72616e7366657220746f20746865207a65726f2061, V1932, V1929, V1928, 0xfc378daa952ba7f163, V1959, V1961, V1960, V1962, 0x6970667358, V1965, V1964, V1976, V1979, V1981, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, 0x216b5e490d2cb86597a00cdfff97, V1982, 0x736f6c6343, S11, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S0, V1984, V1985]
Exit stack: []

================================

Function 0:
Private function
Entry block: 0x13d3
Exit block: 0x1462
Body: 0x751, 0x758, 0x774, 0x780, 0x7be, 0x7df, 0x920, 0x92a, 0x938, 0x94c, 0x959, 0x963, 0x973, 0x9c1, 0x9e0, 0xbac, 0xbb9, 0xd4b, 0xd4f, 0xd94, 0xdd9, 0xe3b, 0xe5c, 0xe6e, 0xe74, 0xed0, 0xf15, 0xf20, 0xf5d, 0xf8c, 0xfd4, 0xfeb, 0xffd, 0x1003, 0x1015, 0x101b, 0x1032, 0x1048, 0x104e, 0x1053, 0x1098, 0x10c0, 0x1104, 0x112b, 0x1141, 0x1153, 0x118e, 0x1199, 0x11af, 0x1222, 0x1239, 0x124b, 0x1286, 0x12cb, 0x1310, 0x131b, 0x1358, 0x1387, 0x13cb, 0x13d3, 0x1462

Function 1:
Private function
Entry block: 0xd4b
Exit block: 0xd4b
Body: 0x758, 0x774, 0x780, 0x7be, 0x7df, 0x920, 0x92a, 0x938, 0x94c, 0x959, 0x963, 0x973, 0x9c1, 0x9e0, 0xb14, 0xbac, 0xbb9, 0xd4b, 0xd4f, 0xd94, 0xdd9, 0xe3b, 0xe5c, 0xe6e, 0xe74, 0xed0, 0xf15, 0xf20, 0xf5d, 0xf5d, 0xf8c, 0xfd4, 0xfeb, 0xffd, 0x1003, 0x1015, 0x101b, 0x1032, 0x1048, 0x104e, 0x1053, 0x1098, 0x10c0, 0x1104, 0x112b, 0x1141, 0x1153, 0x118e, 0x1199, 0x11af, 0x1222, 0x1239, 0x124b, 0x1286, 0x12cb, 0x1310, 0x131b, 0x1358, 0x1358, 0x1387, 0x13cb, 0x13d3, 0x1462

Function 2:
Private function
Entry block: 0xcea
Exit block: 0xd44
Body: 0xcea, 0xd44

