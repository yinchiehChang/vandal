Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x56]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x56
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x56
0xc: JUMPI 0x56 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x58]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x57ea89b6
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x58
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x57ea89b6
0x3b: V13 = EQ V11 0x57ea89b6
0x3c: V14 = 0x58
0x3f: JUMPI 0x58 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x6b]
---
0x40 DUP1
0x41 PUSH4 0x8ee3f72f
0x46 EQ
0x47 PUSH2 0x6b
0x4a JUMPI
---
0x41: V15 = 0x8ee3f72f
0x46: V16 = EQ 0x8ee3f72f V11
0x47: V17 = 0x6b
0x4a: JUMPI 0x6b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x90]
---
0x4b DUP1
0x4c PUSH4 0xb4e1e06e
0x51 EQ
0x52 PUSH2 0x90
0x55 JUMPI
---
0x4c: V18 = 0xb4e1e06e
0x51: V19 = EQ 0xb4e1e06e V11
0x52: V20 = 0x90
0x55: JUMPI 0x90 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x57]
---
Predecessors: [0x0, 0x4b, 0x109, 0x1b5]
Successors: []
---
0x56 JUMPDEST
0x57 STOP
---
0x56: JUMPDEST 
0x57: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5e]
---
Predecessors: [0xd]
Successors: [0x5f, 0x63]
---
0x58 JUMPDEST
0x59 CALLVALUE
0x5a ISZERO
0x5b PUSH2 0x63
0x5e JUMPI
---
0x58: JUMPDEST 
0x59: V21 = CALLVALUE
0x5a: V22 = ISZERO V21
0x5b: V23 = 0x63
0x5e: JUMPI 0x63 V22
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5f
[0x5f:0x62]
---
Predecessors: [0x58]
Successors: []
---
0x5f PUSH1 0x0
0x61 DUP1
0x62 REVERT
---
0x5f: V24 = 0x0
0x62: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x6a]
---
Predecessors: [0x58]
Successors: [0x9b]
---
0x63 JUMPDEST
0x64 PUSH2 0x56
0x67 PUSH2 0x9b
0x6a JUMP
---
0x63: JUMPDEST 
0x64: V25 = 0x56
0x67: V26 = 0x9b
0x6a: JUMP 0x9b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0x6b
[0x6b:0x71]
---
Predecessors: [0x40]
Successors: [0x72, 0x76]
---
0x6b JUMPDEST
0x6c CALLVALUE
0x6d ISZERO
0x6e PUSH2 0x76
0x71 JUMPI
---
0x6b: JUMPDEST 
0x6c: V27 = CALLVALUE
0x6d: V28 = ISZERO V27
0x6e: V29 = 0x76
0x71: JUMPI 0x76 V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x72
[0x72:0x75]
---
Predecessors: [0x6b]
Successors: []
---
0x72 PUSH1 0x0
0x74 DUP1
0x75 REVERT
---
0x72: V30 = 0x0
0x75: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x76
[0x76:0x7d]
---
Predecessors: [0x6b]
Successors: [0x10b]
---
0x76 JUMPDEST
0x77 PUSH2 0x7e
0x7a PUSH2 0x10b
0x7d JUMP
---
0x76: JUMPDEST 
0x77: V31 = 0x7e
0x7a: V32 = 0x10b
0x7d: JUMP 0x10b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x7e]
Exit stack: [V11, 0x7e]

================================

Block 0x7e
[0x7e:0x8f]
---
Predecessors: [0x10b]
Successors: []
---
0x7e JUMPDEST
0x7f PUSH1 0x40
0x81 MLOAD
0x82 SWAP1
0x83 DUP2
0x84 MSTORE
0x85 PUSH1 0x20
0x87 ADD
0x88 PUSH1 0x40
0x8a MLOAD
0x8b DUP1
0x8c SWAP2
0x8d SUB
0x8e SWAP1
0x8f RETURN
---
0x7e: JUMPDEST 
0x7f: V33 = 0x40
0x81: V34 = M[0x40]
0x84: M[V34] = V75
0x85: V35 = 0x20
0x87: V36 = ADD 0x20 V34
0x88: V37 = 0x40
0x8a: V38 = M[0x40]
0x8d: V39 = SUB V36 V38
0x8f: RETURN V38 V39
---
Entry stack: [V11, 0x7e, V75]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x7e]

================================

Block 0x90
[0x90:0x9a]
---
Predecessors: [0x4b]
Successors: [0x111]
---
0x90 JUMPDEST
0x91 PUSH2 0x56
0x94 PUSH1 0x4
0x96 CALLDATALOAD
0x97 PUSH2 0x111
0x9a JUMP
---
0x90: JUMPDEST 
0x91: V40 = 0x56
0x94: V41 = 0x4
0x96: V42 = CALLDATALOAD 0x4
0x97: V43 = 0x111
0x9a: JUMP 0x111
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x56, V42]
Exit stack: [V11, 0x56, V42]

================================

Block 0x9b
[0x9b:0xbe]
---
Predecessors: [0x63]
Successors: [0xbf, 0xc3]
---
0x9b JUMPDEST
0x9c PUSH1 0x0
0x9e SLOAD
0x9f CALLER
0xa0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb5 SWAP1
0xb6 DUP2
0xb7 AND
0xb8 SWAP2
0xb9 AND
0xba EQ
0xbb PUSH2 0xc3
0xbe JUMPI
---
0x9b: JUMPDEST 
0x9c: V44 = 0x0
0x9e: V45 = S[0x0]
0x9f: V46 = CALLER
0xa0: V47 = 0xffffffffffffffffffffffffffffffffffffffff
0xb7: V48 = AND 0xffffffffffffffffffffffffffffffffffffffff V46
0xb9: V49 = AND V45 0xffffffffffffffffffffffffffffffffffffffff
0xba: V50 = EQ V49 V48
0xbb: V51 = 0xc3
0xbe: JUMPI 0xc3 V50
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0x9b]
Successors: []
---
0xbf PUSH1 0x0
0xc1 DUP1
0xc2 REVERT
---
0xbf: V52 = 0x0
0xc2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0xc3
[0xc3:0x104]
---
Predecessors: [0x9b]
Successors: [0x105, 0x109]
---
0xc3 JUMPDEST
0xc4 PUSH1 0x0
0xc6 SLOAD
0xc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc SWAP1
0xdd DUP2
0xde AND
0xdf SWAP1
0xe0 ADDRESS
0xe1 AND
0xe2 BALANCE
0xe3 DUP1
0xe4 ISZERO
0xe5 PUSH2 0x8fc
0xe8 MUL
0xe9 SWAP1
0xea PUSH1 0x40
0xec MLOAD
0xed PUSH1 0x0
0xef PUSH1 0x40
0xf1 MLOAD
0xf2 DUP1
0xf3 DUP4
0xf4 SUB
0xf5 DUP2
0xf6 DUP6
0xf7 DUP9
0xf8 DUP9
0xf9 CALL
0xfa SWAP4
0xfb POP
0xfc POP
0xfd POP
0xfe POP
0xff ISZERO
0x100 ISZERO
0x101 PUSH2 0x109
0x104 JUMPI
---
0xc3: JUMPDEST 
0xc4: V53 = 0x0
0xc6: V54 = S[0x0]
0xc7: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xde: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0xe0: V57 = ADDRESS
0xe1: V58 = AND V57 0xffffffffffffffffffffffffffffffffffffffff
0xe2: V59 = BALANCE V58
0xe4: V60 = ISZERO V59
0xe5: V61 = 0x8fc
0xe8: V62 = MUL 0x8fc V60
0xea: V63 = 0x40
0xec: V64 = M[0x40]
0xed: V65 = 0x0
0xef: V66 = 0x40
0xf1: V67 = M[0x40]
0xf4: V68 = SUB V64 V67
0xf9: V69 = CALL V62 V56 V59 V67 V68 V67 0x0
0xff: V70 = ISZERO V69
0x100: V71 = ISZERO V70
0x101: V72 = 0x109
0x104: JUMPI 0x109 V71
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x105
[0x105:0x108]
---
Predecessors: [0xc3]
Successors: []
---
0x105 PUSH1 0x0
0x107 DUP1
0x108 REVERT
---
0x105: V73 = 0x0
0x108: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x109
[0x109:0x10a]
---
Predecessors: [0xc3]
Successors: [0x56]
---
0x109 JUMPDEST
0x10a JUMP
---
0x109: JUMPDEST 
0x10a: JUMP 0x56
---
Entry stack: [V11, 0x56]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x10b
[0x10b:0x110]
---
Predecessors: [0x76]
Successors: [0x7e]
---
0x10b JUMPDEST
0x10c PUSH1 0x1
0x10e SLOAD
0x10f DUP2
0x110 JUMP
---
0x10b: JUMPDEST 
0x10c: V74 = 0x1
0x10e: V75 = S[0x1]
0x110: JUMP 0x7e
---
Entry stack: [V11, 0x7e]
Stack pops: 1
Stack additions: [S0, V75]
Exit stack: [V11, 0x7e, V75]

================================

Block 0x111
[0x111:0x132]
---
Predecessors: [0x90]
Successors: [0x133, 0x13f]
---
0x111 JUMPDEST
0x112 ADDRESS
0x113 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x128 AND
0x129 BALANCE
0x12a CALLVALUE
0x12b LT
0x12c ISZERO
0x12d DUP1
0x12e ISZERO
0x12f PUSH2 0x13f
0x132 JUMPI
---
0x111: JUMPDEST 
0x112: V76 = ADDRESS
0x113: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x128: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x129: V79 = BALANCE V78
0x12a: V80 = CALLVALUE
0x12b: V81 = LT V80 V79
0x12c: V82 = ISZERO V81
0x12e: V83 = ISZERO V82
0x12f: V84 = 0x13f
0x132: JUMPI 0x13f V83
---
Entry stack: [V11, 0x56, V42]
Stack pops: 0
Stack additions: [V82]
Exit stack: [V11, 0x56, V42, V82]

================================

Block 0x133
[0x133:0x13e]
---
Predecessors: [0x111]
Successors: [0x13f]
---
0x133 POP
0x134 PUSH8 0x16345785d8a0000
0x13d CALLVALUE
0x13e GT
---
0x134: V85 = 0x16345785d8a0000
0x13d: V86 = CALLVALUE
0x13e: V87 = GT V86 0x16345785d8a0000
---
Entry stack: [V11, 0x56, V42, V82]
Stack pops: 1
Stack additions: [V87]
Exit stack: [V11, 0x56, V42, V87]

================================

Block 0x13f
[0x13f:0x144]
---
Predecessors: [0x111, 0x133]
Successors: [0x145, 0x1b5]
---
0x13f JUMPDEST
0x140 ISZERO
0x141 PUSH2 0x1b5
0x144 JUMPI
---
0x13f: JUMPDEST 
0x140: V88 = ISZERO S0
0x141: V89 = 0x1b5
0x144: JUMPI 0x1b5 V88
---
Entry stack: [V11, 0x56, V42, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x56, V42]

================================

Block 0x145
[0x145:0x150]
---
Predecessors: [0x13f]
Successors: [0x151, 0x157]
---
0x145 PUSH2 0x270f
0x148 DUP2
0x149 GT
0x14a ISZERO
0x14b DUP1
0x14c ISZERO
0x14d PUSH2 0x157
0x150 JUMPI
---
0x145: V90 = 0x270f
0x149: V91 = GT V42 0x270f
0x14a: V92 = ISZERO V91
0x14c: V93 = ISZERO V92
0x14d: V94 = 0x157
0x150: JUMPI 0x157 V93
---
Entry stack: [V11, 0x56, V42]
Stack pops: 1
Stack additions: [S0, V92]
Exit stack: [V11, 0x56, V42, V92]

================================

Block 0x151
[0x151:0x156]
---
Predecessors: [0x145]
Successors: [0x157]
---
0x151 POP
0x152 PUSH1 0x1
0x154 SLOAD
0x155 DUP2
0x156 EQ
---
0x152: V95 = 0x1
0x154: V96 = S[0x1]
0x156: V97 = EQ V42 V96
---
Entry stack: [V11, 0x56, V42, V92]
Stack pops: 2
Stack additions: [S1, V97]
Exit stack: [V11, 0x56, V42, V97]

================================

Block 0x157
[0x157:0x15c]
---
Predecessors: [0x145, 0x151]
Successors: [0x15d, 0x1b5]
---
0x157 JUMPDEST
0x158 ISZERO
0x159 PUSH2 0x1b5
0x15c JUMPI
---
0x157: JUMPDEST 
0x158: V98 = ISZERO S0
0x159: V99 = 0x1b5
0x15c: JUMPI 0x1b5 V98
---
Entry stack: [V11, 0x56, V42, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x56, V42]

================================

Block 0x15d
[0x15d:0x1b0]
---
Predecessors: [0x157]
Successors: [0x1b1, 0x1b5]
---
0x15d CALLER
0x15e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x173 AND
0x174 PUSH2 0x8fc
0x177 CALLVALUE
0x178 ADDRESS
0x179 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18e AND
0x18f BALANCE
0x190 ADD
0x191 SWAP1
0x192 DUP2
0x193 ISZERO
0x194 MUL
0x195 SWAP1
0x196 PUSH1 0x40
0x198 MLOAD
0x199 PUSH1 0x0
0x19b PUSH1 0x40
0x19d MLOAD
0x19e DUP1
0x19f DUP4
0x1a0 SUB
0x1a1 DUP2
0x1a2 DUP6
0x1a3 DUP9
0x1a4 DUP9
0x1a5 CALL
0x1a6 SWAP4
0x1a7 POP
0x1a8 POP
0x1a9 POP
0x1aa POP
0x1ab ISZERO
0x1ac ISZERO
0x1ad PUSH2 0x1b5
0x1b0 JUMPI
---
0x15d: V100 = CALLER
0x15e: V101 = 0xffffffffffffffffffffffffffffffffffffffff
0x173: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V100
0x174: V103 = 0x8fc
0x177: V104 = CALLVALUE
0x178: V105 = ADDRESS
0x179: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x18e: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x18f: V108 = BALANCE V107
0x190: V109 = ADD V108 V104
0x193: V110 = ISZERO V109
0x194: V111 = MUL V110 0x8fc
0x196: V112 = 0x40
0x198: V113 = M[0x40]
0x199: V114 = 0x0
0x19b: V115 = 0x40
0x19d: V116 = M[0x40]
0x1a0: V117 = SUB V113 V116
0x1a5: V118 = CALL V111 V102 V109 V116 V117 V116 0x0
0x1ab: V119 = ISZERO V118
0x1ac: V120 = ISZERO V119
0x1ad: V121 = 0x1b5
0x1b0: JUMPI 0x1b5 V120
---
Entry stack: [V11, 0x56, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V42]

================================

Block 0x1b1
[0x1b1:0x1b4]
---
Predecessors: [0x15d]
Successors: []
---
0x1b1 PUSH1 0x0
0x1b3 DUP1
0x1b4 REVERT
---
0x1b1: V122 = 0x0
0x1b4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56, V42]

================================

Block 0x1b5
[0x1b5:0x1b7]
---
Predecessors: [0x13f, 0x157, 0x15d]
Successors: [0x56]
---
0x1b5 JUMPDEST
0x1b6 POP
0x1b7 JUMP
---
0x1b5: JUMPDEST 
0x1b7: JUMP 0x56
---
Entry stack: [V11, 0x56, V42]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b8
[0x1b8:0x1e3]
---
Predecessors: []
Successors: []
---
0x1b8 STOP
0x1b9 LOG1
0x1ba PUSH6 0x627a7a723058
0x1c1 SHA3
0x1c2 MISSING 0x2e
0x1c3 SDIV
0x1c4 MISSING 0xc3
0x1c5 MISSING 0xca
0x1c6 REVERT
0x1c7 PUSH19 0xae829a0586eb766dd4ceaa293f63ce60c0f3fc
0x1db CALLVALUE
0x1dc MISSING 0xdf
0x1dd MISSING 0x2f
0x1de SWAP13
0x1df SWAP12
0x1e0 MSTORE
0x1e1 MISSING 0xdf
0x1e2 STOP
0x1e3 MISSING 0x29
---
0x1b8: STOP 
0x1b9: LOG S0 S1 S2
0x1ba: V123 = 0x627a7a723058
0x1c1: V124 = SHA3 0x627a7a723058 S3
0x1c2: MISSING 0x2e
0x1c3: V125 = SDIV S0 S1
0x1c4: MISSING 0xc3
0x1c5: MISSING 0xca
0x1c6: REVERT S0 S1
0x1c7: V126 = 0xae829a0586eb766dd4ceaa293f63ce60c0f3fc
0x1db: V127 = CALLVALUE
0x1dc: MISSING 0xdf
0x1dd: MISSING 0x2f
0x1e0: M[S12] = S1
0x1e1: MISSING 0xdf
0x1e2: STOP 
0x1e3: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V124, V125, V127, 0xae829a0586eb766dd4ceaa293f63ce60c0f3fc, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S13, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x57ea89b6
Entry block: 0x58
Exit block: 0x56
Body: 0x56, 0x58, 0x5f, 0x63, 0x9b, 0xbf, 0xc3, 0x105, 0x109

Function 1:
Public function signature: 0x8ee3f72f
Entry block: 0x6b
Exit block: 0x7e
Body: 0x6b, 0x72, 0x76, 0x7e, 0x10b

Function 2:
Public function signature: 0xb4e1e06e
Entry block: 0x90
Exit block: 0x1b1
Body: 0x56, 0x90, 0x111, 0x133, 0x13f, 0x145, 0x151, 0x157, 0x15d, 0x1b1, 0x1b5

Function 3:
Public fallback function
Entry block: 0x56
Exit block: 0x56
Body: 0x56

