Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x1a695230
0x3c EQ
0x3d PUSH2 0x7a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x1a695230
0x3c: V13 = EQ 0x1a695230 V11
0x3d: V14 = 0x7a
0x40: JUMPI 0x7a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa8]
---
0x41 DUP1
0x42 PUSH4 0x3c4dbb05
0x47 EQ
0x48 PUSH2 0xa8
0x4b JUMPI
---
0x42: V15 = 0x3c4dbb05
0x47: V16 = EQ 0x3c4dbb05 V11
0x48: V17 = 0xa8
0x4b: JUMPI 0xa8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xd6]
---
0x4c DUP1
0x4d PUSH4 0x4f057506
0x52 EQ
0x53 PUSH2 0xd6
0x56 JUMPI
---
0x4d: V18 = 0x4f057506
0x52: V19 = EQ 0x4f057506 V11
0x53: V20 = 0xd6
0x56: JUMPI 0xd6 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xff]
---
0x57 DUP1
0x58 PUSH4 0x7065cb48
0x5d EQ
0x5e PUSH2 0xff
0x61 JUMPI
---
0x58: V21 = 0x7065cb48
0x5d: V22 = EQ 0x7065cb48 V11
0x5e: V23 = 0xff
0x61: JUMPI 0xff V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x12d]
---
0x62 DUP1
0x63 PUSH4 0x7dc0d1d0
0x68 EQ
0x69 PUSH2 0x12d
0x6c JUMPI
---
0x63: V24 = 0x7dc0d1d0
0x68: V25 = EQ 0x7dc0d1d0 V11
0x69: V26 = 0x12d
0x6c: JUMPI 0x12d V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x182]
---
0x6d DUP1
0x6e PUSH4 0xb4a99a4e
0x73 EQ
0x74 PUSH2 0x182
0x77 JUMPI
---
0x6e: V27 = 0xb4a99a4e
0x73: V28 = EQ 0xb4a99a4e V11
0x74: V29 = 0x182
0x77: JUMPI 0x182 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0xa5]
---
Predecessors: [0xd]
Successors: [0x1d7]
---
0x7a JUMPDEST
0x7b PUSH2 0xa6
0x7e PUSH1 0x4
0x80 DUP1
0x81 DUP1
0x82 CALLDATALOAD
0x83 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x98 AND
0x99 SWAP1
0x9a PUSH1 0x20
0x9c ADD
0x9d SWAP1
0x9e SWAP2
0x9f SWAP1
0xa0 POP
0xa1 POP
0xa2 PUSH2 0x1d7
0xa5 JUMP
---
0x7a: JUMPDEST 
0x7b: V30 = 0xa6
0x7e: V31 = 0x4
0x82: V32 = CALLDATALOAD 0x4
0x83: V33 = 0xffffffffffffffffffffffffffffffffffffffff
0x98: V34 = AND 0xffffffffffffffffffffffffffffffffffffffff V32
0x9a: V35 = 0x20
0x9c: V36 = ADD 0x20 0x4
0xa2: V37 = 0x1d7
0xa5: JUMP 0x1d7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa6, V34]
Exit stack: [V11, 0xa6, V34]

================================

Block 0xa6
[0xa6:0xa7]
---
Predecessors: [0x272]
Successors: []
---
0xa6 JUMPDEST
0xa7 STOP
---
0xa6: JUMPDEST 
0xa7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa8
[0xa8:0xd3]
---
Predecessors: [0x41]
Successors: [0x275]
---
0xa8 JUMPDEST
0xa9 PUSH2 0xd4
0xac PUSH1 0x4
0xae DUP1
0xaf DUP1
0xb0 CALLDATALOAD
0xb1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc6 AND
0xc7 SWAP1
0xc8 PUSH1 0x20
0xca ADD
0xcb SWAP1
0xcc SWAP2
0xcd SWAP1
0xce POP
0xcf POP
0xd0 PUSH2 0x275
0xd3 JUMP
---
0xa8: JUMPDEST 
0xa9: V38 = 0xd4
0xac: V39 = 0x4
0xb0: V40 = CALLDATALOAD 0x4
0xb1: V41 = 0xffffffffffffffffffffffffffffffffffffffff
0xc6: V42 = AND 0xffffffffffffffffffffffffffffffffffffffff V40
0xc8: V43 = 0x20
0xca: V44 = ADD 0x20 0x4
0xd0: V45 = 0x275
0xd3: JUMP 0x275
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd4, V42]
Exit stack: [V11, 0xd4, V42]

================================

Block 0xd4
[0xd4:0xd5]
---
Predecessors: [0x2d0]
Successors: []
---
0xd4 JUMPDEST
0xd5 STOP
---
0xd4: JUMPDEST 
0xd5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd6
[0xd6:0xdc]
---
Predecessors: [0x4c]
Successors: [0xdd, 0xe1]
---
0xd6 JUMPDEST
0xd7 CALLVALUE
0xd8 ISZERO
0xd9 PUSH2 0xe1
0xdc JUMPI
---
0xd6: JUMPDEST 
0xd7: V46 = CALLVALUE
0xd8: V47 = ISZERO V46
0xd9: V48 = 0xe1
0xdc: JUMPI 0xe1 V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdd
[0xdd:0xe0]
---
Predecessors: [0xd6]
Successors: []
---
0xdd PUSH1 0x0
0xdf DUP1
0xe0 REVERT
---
0xdd: V49 = 0x0
0xe0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe1
[0xe1:0xe8]
---
Predecessors: [0xd6]
Successors: [0x31b]
---
0xe1 JUMPDEST
0xe2 PUSH2 0xe9
0xe5 PUSH2 0x31b
0xe8 JUMP
---
0xe1: JUMPDEST 
0xe2: V50 = 0xe9
0xe5: V51 = 0x31b
0xe8: JUMP 0x31b
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe9]
Exit stack: [V11, 0xe9]

================================

Block 0xe9
[0xe9:0xfe]
---
Predecessors: [0x31b]
Successors: []
---
0xe9 JUMPDEST
0xea PUSH1 0x40
0xec MLOAD
0xed DUP1
0xee DUP3
0xef DUP2
0xf0 MSTORE
0xf1 PUSH1 0x20
0xf3 ADD
0xf4 SWAP2
0xf5 POP
0xf6 POP
0xf7 PUSH1 0x40
0xf9 MLOAD
0xfa DUP1
0xfb SWAP2
0xfc SUB
0xfd SWAP1
0xfe RETURN
---
0xe9: JUMPDEST 
0xea: V52 = 0x40
0xec: V53 = M[0x40]
0xf0: M[V53] = V168
0xf1: V54 = 0x20
0xf3: V55 = ADD 0x20 V53
0xf7: V56 = 0x40
0xf9: V57 = M[0x40]
0xfc: V58 = SUB V55 V57
0xfe: RETURN V57 V58
---
Entry stack: [V11, 0xe9, V168]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe9]

================================

Block 0xff
[0xff:0x12a]
---
Predecessors: [0x57]
Successors: [0x321]
---
0xff JUMPDEST
0x100 PUSH2 0x12b
0x103 PUSH1 0x4
0x105 DUP1
0x106 DUP1
0x107 CALLDATALOAD
0x108 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11d AND
0x11e SWAP1
0x11f PUSH1 0x20
0x121 ADD
0x122 SWAP1
0x123 SWAP2
0x124 SWAP1
0x125 POP
0x126 POP
0x127 PUSH2 0x321
0x12a JUMP
---
0xff: JUMPDEST 
0x100: V59 = 0x12b
0x103: V60 = 0x4
0x107: V61 = CALLDATALOAD 0x4
0x108: V62 = 0xffffffffffffffffffffffffffffffffffffffff
0x11d: V63 = AND 0xffffffffffffffffffffffffffffffffffffffff V61
0x11f: V64 = 0x20
0x121: V65 = ADD 0x20 0x4
0x127: V66 = 0x321
0x12a: JUMP 0x321
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x12b, V63]
Exit stack: [V11, 0x12b, V63]

================================

Block 0x12b
[0x12b:0x12c]
---
Predecessors: [0x48c]
Successors: []
---
0x12b JUMPDEST
0x12c STOP
---
0x12b: JUMPDEST 
0x12c: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x12d
[0x12d:0x133]
---
Predecessors: [0x62]
Successors: [0x134, 0x138]
---
0x12d JUMPDEST
0x12e CALLVALUE
0x12f ISZERO
0x130 PUSH2 0x138
0x133 JUMPI
---
0x12d: JUMPDEST 
0x12e: V67 = CALLVALUE
0x12f: V68 = ISZERO V67
0x130: V69 = 0x138
0x133: JUMPI 0x138 V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x134
[0x134:0x137]
---
Predecessors: [0x12d]
Successors: []
---
0x134 PUSH1 0x0
0x136 DUP1
0x137 REVERT
---
0x134: V70 = 0x0
0x137: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x138
[0x138:0x13f]
---
Predecessors: [0x12d]
Successors: [0x48f]
---
0x138 JUMPDEST
0x139 PUSH2 0x140
0x13c PUSH2 0x48f
0x13f JUMP
---
0x138: JUMPDEST 
0x139: V71 = 0x140
0x13c: V72 = 0x48f
0x13f: JUMP 0x48f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x140]
Exit stack: [V11, 0x140]

================================

Block 0x140
[0x140:0x181]
---
Predecessors: [0x48f]
Successors: []
---
0x140 JUMPDEST
0x141 PUSH1 0x40
0x143 MLOAD
0x144 DUP1
0x145 DUP3
0x146 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15b AND
0x15c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x171 AND
0x172 DUP2
0x173 MSTORE
0x174 PUSH1 0x20
0x176 ADD
0x177 SWAP2
0x178 POP
0x179 POP
0x17a PUSH1 0x40
0x17c MLOAD
0x17d DUP1
0x17e SWAP2
0x17f SUB
0x180 SWAP1
0x181 RETURN
---
0x140: JUMPDEST 
0x141: V73 = 0x40
0x143: V74 = M[0x40]
0x146: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x15c: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x171: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x173: M[V74] = V78
0x174: V79 = 0x20
0x176: V80 = ADD 0x20 V74
0x17a: V81 = 0x40
0x17c: V82 = M[0x40]
0x17f: V83 = SUB V80 V82
0x181: RETURN V82 V83
---
Entry stack: [V11, 0x140, V246]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x140]

================================

Block 0x182
[0x182:0x188]
---
Predecessors: [0x6d]
Successors: [0x189, 0x18d]
---
0x182 JUMPDEST
0x183 CALLVALUE
0x184 ISZERO
0x185 PUSH2 0x18d
0x188 JUMPI
---
0x182: JUMPDEST 
0x183: V84 = CALLVALUE
0x184: V85 = ISZERO V84
0x185: V86 = 0x18d
0x188: JUMPI 0x18d V85
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x189
[0x189:0x18c]
---
Predecessors: [0x182]
Successors: []
---
0x189 PUSH1 0x0
0x18b DUP1
0x18c REVERT
---
0x189: V87 = 0x0
0x18c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x18d
[0x18d:0x194]
---
Predecessors: [0x182]
Successors: [0x4b5]
---
0x18d JUMPDEST
0x18e PUSH2 0x195
0x191 PUSH2 0x4b5
0x194 JUMP
---
0x18d: JUMPDEST 
0x18e: V88 = 0x195
0x191: V89 = 0x4b5
0x194: JUMP 0x4b5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x195]
Exit stack: [V11, 0x195]

================================

Block 0x195
[0x195:0x1d6]
---
Predecessors: [0x4b5]
Successors: []
---
0x195 JUMPDEST
0x196 PUSH1 0x40
0x198 MLOAD
0x199 DUP1
0x19a DUP3
0x19b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b0 AND
0x1b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c6 AND
0x1c7 DUP2
0x1c8 MSTORE
0x1c9 PUSH1 0x20
0x1cb ADD
0x1cc SWAP2
0x1cd POP
0x1ce POP
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 DUP1
0x1d3 SWAP2
0x1d4 SUB
0x1d5 SWAP1
0x1d6 RETURN
---
0x195: JUMPDEST 
0x196: V90 = 0x40
0x198: V91 = M[0x40]
0x19b: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b0: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x1b1: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c6: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1c8: M[V91] = V95
0x1c9: V96 = 0x20
0x1cb: V97 = ADD 0x20 V91
0x1cf: V98 = 0x40
0x1d1: V99 = M[0x40]
0x1d4: V100 = SUB V97 V99
0x1d6: RETURN V99 V100
---
Entry stack: [V11, 0x195, V253]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x195]

================================

Block 0x1d7
[0x1d7:0x22d]
---
Predecessors: [0x7a]
Successors: [0x22e, 0x232]
---
0x1d7 JUMPDEST
0x1d8 PUSH1 0x0
0x1da DUP1
0x1db SWAP1
0x1dc SLOAD
0x1dd SWAP1
0x1de PUSH2 0x100
0x1e1 EXP
0x1e2 SWAP1
0x1e3 DIV
0x1e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f9 AND
0x1fa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20f AND
0x210 CALLER
0x211 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x226 AND
0x227 EQ
0x228 ISZERO
0x229 ISZERO
0x22a PUSH2 0x232
0x22d JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V101 = 0x0
0x1dc: V102 = S[0x0]
0x1de: V103 = 0x100
0x1e1: V104 = EXP 0x100 0x0
0x1e3: V105 = DIV V102 0x1
0x1e4: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f9: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V105
0x1fa: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x20f: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x210: V110 = CALLER
0x211: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x226: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x227: V113 = EQ V112 V109
0x228: V114 = ISZERO V113
0x229: V115 = ISZERO V114
0x22a: V116 = 0x232
0x22d: JUMPI 0x232 V115
---
Entry stack: [V11, 0xa6, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa6, V34]

================================

Block 0x22e
[0x22e:0x231]
---
Predecessors: [0x1d7]
Successors: []
---
0x22e PUSH1 0x0
0x230 DUP1
0x231 REVERT
---
0x22e: V117 = 0x0
0x231: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa6, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa6, V34]

================================

Block 0x232
[0x232:0x26d]
---
Predecessors: [0x1d7]
Successors: [0x26e, 0x272]
---
0x232 JUMPDEST
0x233 DUP1
0x234 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x249 AND
0x24a PUSH2 0x8fc
0x24d CALLVALUE
0x24e SWAP1
0x24f DUP2
0x250 ISZERO
0x251 MUL
0x252 SWAP1
0x253 PUSH1 0x40
0x255 MLOAD
0x256 PUSH1 0x0
0x258 PUSH1 0x40
0x25a MLOAD
0x25b DUP1
0x25c DUP4
0x25d SUB
0x25e DUP2
0x25f DUP6
0x260 DUP9
0x261 DUP9
0x262 CALL
0x263 SWAP4
0x264 POP
0x265 POP
0x266 POP
0x267 POP
0x268 ISZERO
0x269 ISZERO
0x26a PUSH2 0x272
0x26d JUMPI
---
0x232: JUMPDEST 
0x234: V118 = 0xffffffffffffffffffffffffffffffffffffffff
0x249: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V34
0x24a: V120 = 0x8fc
0x24d: V121 = CALLVALUE
0x250: V122 = ISZERO V121
0x251: V123 = MUL V122 0x8fc
0x253: V124 = 0x40
0x255: V125 = M[0x40]
0x256: V126 = 0x0
0x258: V127 = 0x40
0x25a: V128 = M[0x40]
0x25d: V129 = SUB V125 V128
0x262: V130 = CALL V123 V119 V121 V128 V129 V128 0x0
0x268: V131 = ISZERO V130
0x269: V132 = ISZERO V131
0x26a: V133 = 0x272
0x26d: JUMPI 0x272 V132
---
Entry stack: [V11, 0xa6, V34]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xa6, V34]

================================

Block 0x26e
[0x26e:0x271]
---
Predecessors: [0x232]
Successors: []
---
0x26e PUSH1 0x0
0x270 DUP1
0x271 REVERT
---
0x26e: V134 = 0x0
0x271: REVERT 0x0 0x0
---
Entry stack: [V11, 0xa6, V34]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xa6, V34]

================================

Block 0x272
[0x272:0x274]
---
Predecessors: [0x232]
Successors: [0xa6]
---
0x272 JUMPDEST
0x273 POP
0x274 JUMP
---
0x272: JUMPDEST 
0x274: JUMP 0xa6
---
Entry stack: [V11, 0xa6, V34]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x275
[0x275:0x2cb]
---
Predecessors: [0xa8]
Successors: [0x2cc, 0x2d0]
---
0x275 JUMPDEST
0x276 PUSH1 0x0
0x278 DUP1
0x279 SWAP1
0x27a SLOAD
0x27b SWAP1
0x27c PUSH2 0x100
0x27f EXP
0x280 SWAP1
0x281 DIV
0x282 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x297 AND
0x298 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ad AND
0x2ae CALLER
0x2af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c4 AND
0x2c5 EQ
0x2c6 ISZERO
0x2c7 ISZERO
0x2c8 PUSH2 0x2d0
0x2cb JUMPI
---
0x275: JUMPDEST 
0x276: V135 = 0x0
0x27a: V136 = S[0x0]
0x27c: V137 = 0x100
0x27f: V138 = EXP 0x100 0x0
0x281: V139 = DIV V136 0x1
0x282: V140 = 0xffffffffffffffffffffffffffffffffffffffff
0x297: V141 = AND 0xffffffffffffffffffffffffffffffffffffffff V139
0x298: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ad: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x2ae: V144 = CALLER
0x2af: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c4: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x2c5: V147 = EQ V146 V143
0x2c6: V148 = ISZERO V147
0x2c7: V149 = ISZERO V148
0x2c8: V150 = 0x2d0
0x2cb: JUMPI 0x2d0 V149
---
Entry stack: [V11, 0xd4, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd4, V42]

================================

Block 0x2cc
[0x2cc:0x2cf]
---
Predecessors: [0x275]
Successors: []
---
0x2cc PUSH1 0x0
0x2ce DUP1
0x2cf REVERT
---
0x2cc: V151 = 0x0
0x2cf: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd4, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd4, V42]

================================

Block 0x2d0
[0x2d0:0x31a]
---
Predecessors: [0x275]
Successors: [0xd4]
---
0x2d0 JUMPDEST
0x2d1 CALLVALUE
0x2d2 PUSH1 0x2
0x2d4 DUP2
0x2d5 SWAP1
0x2d6 SSTORE
0x2d7 POP
0x2d8 DUP1
0x2d9 PUSH1 0x1
0x2db PUSH1 0x0
0x2dd PUSH2 0x100
0x2e0 EXP
0x2e1 DUP2
0x2e2 SLOAD
0x2e3 DUP2
0x2e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f9 MUL
0x2fa NOT
0x2fb AND
0x2fc SWAP1
0x2fd DUP4
0x2fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x313 AND
0x314 MUL
0x315 OR
0x316 SWAP1
0x317 SSTORE
0x318 POP
0x319 POP
0x31a JUMP
---
0x2d0: JUMPDEST 
0x2d1: V152 = CALLVALUE
0x2d2: V153 = 0x2
0x2d6: S[0x2] = V152
0x2d9: V154 = 0x1
0x2db: V155 = 0x0
0x2dd: V156 = 0x100
0x2e0: V157 = EXP 0x100 0x0
0x2e2: V158 = S[0x1]
0x2e4: V159 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f9: V160 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2fa: V161 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2fb: V162 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V158
0x2fe: V163 = 0xffffffffffffffffffffffffffffffffffffffff
0x313: V164 = AND 0xffffffffffffffffffffffffffffffffffffffff V42
0x314: V165 = MUL V164 0x1
0x315: V166 = OR V165 V162
0x317: S[0x1] = V166
0x31a: JUMP 0xd4
---
Entry stack: [V11, 0xd4, V42]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x31b
[0x31b:0x320]
---
Predecessors: [0xe1]
Successors: [0xe9]
---
0x31b JUMPDEST
0x31c PUSH1 0x2
0x31e SLOAD
0x31f DUP2
0x320 JUMP
---
0x31b: JUMPDEST 
0x31c: V167 = 0x2
0x31e: V168 = S[0x2]
0x320: JUMP 0xe9
---
Entry stack: [V11, 0xe9]
Stack pops: 1
Stack additions: [S0, V168]
Exit stack: [V11, 0xe9, V168]

================================

Block 0x321
[0x321:0x32b]
---
Predecessors: [0xff]
Successors: [0x32c, 0x48c]
---
0x321 JUMPDEST
0x322 PUSH1 0x2
0x324 SLOAD
0x325 CALLVALUE
0x326 GT
0x327 ISZERO
0x328 PUSH2 0x48c
0x32b JUMPI
---
0x321: JUMPDEST 
0x322: V169 = 0x2
0x324: V170 = S[0x2]
0x325: V171 = CALLVALUE
0x326: V172 = GT V171 V170
0x327: V173 = ISZERO V172
0x328: V174 = 0x48c
0x32b: JUMPI 0x48c V173
---
Entry stack: [V11, 0x12b, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12b, V63]

================================

Block 0x32c
[0x32c:0x486]
---
Predecessors: [0x321]
Successors: [0x487, 0x48b]
---
0x32c PUSH1 0x1
0x32e PUSH1 0x0
0x330 SWAP1
0x331 SLOAD
0x332 SWAP1
0x333 PUSH2 0x100
0x336 EXP
0x337 SWAP1
0x338 DIV
0x339 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x34e AND
0x34f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x364 AND
0x365 PUSH1 0x40
0x367 MLOAD
0x368 DUP1
0x369 DUP1
0x36a PUSH32 0x416464546f57616e674442286164647265737329000000000000000000000000
0x38b DUP2
0x38c MSTORE
0x38d POP
0x38e PUSH1 0x14
0x390 ADD
0x391 SWAP1
0x392 POP
0x393 PUSH1 0x40
0x395 MLOAD
0x396 DUP1
0x397 SWAP2
0x398 SUB
0x399 SWAP1
0x39a SHA3
0x39b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3b9 SWAP1
0x3ba DIV
0x3bb CALLER
0x3bc PUSH1 0x40
0x3be MLOAD
0x3bf DUP3
0x3c0 PUSH4 0xffffffff
0x3c5 AND
0x3c6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3e4 MUL
0x3e5 DUP2
0x3e6 MSTORE
0x3e7 PUSH1 0x4
0x3e9 ADD
0x3ea DUP1
0x3eb DUP3
0x3ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x401 AND
0x402 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x417 AND
0x418 DUP2
0x419 MSTORE
0x41a PUSH1 0x20
0x41c ADD
0x41d SWAP2
0x41e POP
0x41f POP
0x420 PUSH1 0x0
0x422 PUSH1 0x40
0x424 MLOAD
0x425 DUP1
0x426 DUP4
0x427 SUB
0x428 DUP2
0x429 DUP7
0x42a PUSH2 0x646e
0x42d GAS
0x42e SUB
0x42f DELEGATECALL
0x430 SWAP3
0x431 POP
0x432 POP
0x433 POP
0x434 POP
0x435 DUP1
0x436 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44b AND
0x44c PUSH2 0x8fc
0x44f ADDRESS
0x450 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x465 AND
0x466 BALANCE
0x467 SWAP1
0x468 DUP2
0x469 ISZERO
0x46a MUL
0x46b SWAP1
0x46c PUSH1 0x40
0x46e MLOAD
0x46f PUSH1 0x0
0x471 PUSH1 0x40
0x473 MLOAD
0x474 DUP1
0x475 DUP4
0x476 SUB
0x477 DUP2
0x478 DUP6
0x479 DUP9
0x47a DUP9
0x47b CALL
0x47c SWAP4
0x47d POP
0x47e POP
0x47f POP
0x480 POP
0x481 ISZERO
0x482 ISZERO
0x483 PUSH2 0x48b
0x486 JUMPI
---
0x32c: V175 = 0x1
0x32e: V176 = 0x0
0x331: V177 = S[0x1]
0x333: V178 = 0x100
0x336: V179 = EXP 0x100 0x0
0x338: V180 = DIV V177 0x1
0x339: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x34f: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x364: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x365: V185 = 0x40
0x367: V186 = M[0x40]
0x36a: V187 = 0x416464546f57616e674442286164647265737329000000000000000000000000
0x38c: M[V186] = 0x416464546f57616e674442286164647265737329000000000000000000000000
0x38e: V188 = 0x14
0x390: V189 = ADD 0x14 V186
0x393: V190 = 0x40
0x395: V191 = M[0x40]
0x398: V192 = SUB V189 V191
0x39a: V193 = SHA3 V191 V192
0x39b: V194 = 0x100000000000000000000000000000000000000000000000000000000
0x3ba: V195 = DIV V193 0x100000000000000000000000000000000000000000000000000000000
0x3bb: V196 = CALLER
0x3bc: V197 = 0x40
0x3be: V198 = M[0x40]
0x3c0: V199 = 0xffffffff
0x3c5: V200 = AND 0xffffffff V195
0x3c6: V201 = 0x100000000000000000000000000000000000000000000000000000000
0x3e4: V202 = MUL 0x100000000000000000000000000000000000000000000000000000000 V200
0x3e6: M[V198] = V202
0x3e7: V203 = 0x4
0x3e9: V204 = ADD 0x4 V198
0x3ec: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x401: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x402: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x417: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x419: M[V204] = V208
0x41a: V209 = 0x20
0x41c: V210 = ADD 0x20 V204
0x420: V211 = 0x0
0x422: V212 = 0x40
0x424: V213 = M[0x40]
0x427: V214 = SUB V210 V213
0x42a: V215 = 0x646e
0x42d: V216 = GAS
0x42e: V217 = SUB V216 0x646e
0x42f: V218 = DELEGATECALL V217 V184 V213 V214 V213 0x0
0x436: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x44b: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V63
0x44c: V221 = 0x8fc
0x44f: V222 = ADDRESS
0x450: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x465: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V222
0x466: V225 = BALANCE V224
0x469: V226 = ISZERO V225
0x46a: V227 = MUL V226 0x8fc
0x46c: V228 = 0x40
0x46e: V229 = M[0x40]
0x46f: V230 = 0x0
0x471: V231 = 0x40
0x473: V232 = M[0x40]
0x476: V233 = SUB V229 V232
0x47b: V234 = CALL V227 V220 V225 V232 V233 V232 0x0
0x481: V235 = ISZERO V234
0x482: V236 = ISZERO V235
0x483: V237 = 0x48b
0x486: JUMPI 0x48b V236
---
Entry stack: [V11, 0x12b, V63]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x12b, V63]

================================

Block 0x487
[0x487:0x48a]
---
Predecessors: [0x32c]
Successors: []
---
0x487 PUSH1 0x0
0x489 DUP1
0x48a REVERT
---
0x487: V238 = 0x0
0x48a: REVERT 0x0 0x0
---
Entry stack: [V11, 0x12b, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12b, V63]

================================

Block 0x48b
[0x48b:0x48b]
---
Predecessors: [0x32c]
Successors: [0x48c]
---
0x48b JUMPDEST
---
0x48b: JUMPDEST 
---
Entry stack: [V11, 0x12b, V63]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x12b, V63]

================================

Block 0x48c
[0x48c:0x48e]
---
Predecessors: [0x321, 0x48b]
Successors: [0x12b]
---
0x48c JUMPDEST
0x48d POP
0x48e JUMP
---
0x48c: JUMPDEST 
0x48e: JUMP 0x12b
---
Entry stack: [V11, 0x12b, V63]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x48f
[0x48f:0x4b4]
---
Predecessors: [0x138]
Successors: [0x140]
---
0x48f JUMPDEST
0x490 PUSH1 0x1
0x492 PUSH1 0x0
0x494 SWAP1
0x495 SLOAD
0x496 SWAP1
0x497 PUSH2 0x100
0x49a EXP
0x49b SWAP1
0x49c DIV
0x49d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4b2 AND
0x4b3 DUP2
0x4b4 JUMP
---
0x48f: JUMPDEST 
0x490: V239 = 0x1
0x492: V240 = 0x0
0x495: V241 = S[0x1]
0x497: V242 = 0x100
0x49a: V243 = EXP 0x100 0x0
0x49c: V244 = DIV V241 0x1
0x49d: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x4b2: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x4b4: JUMP 0x140
---
Entry stack: [V11, 0x140]
Stack pops: 1
Stack additions: [S0, V246]
Exit stack: [V11, 0x140, V246]

================================

Block 0x4b5
[0x4b5:0x4d9]
---
Predecessors: [0x18d]
Successors: [0x195]
---
0x4b5 JUMPDEST
0x4b6 PUSH1 0x0
0x4b8 DUP1
0x4b9 SWAP1
0x4ba SLOAD
0x4bb SWAP1
0x4bc PUSH2 0x100
0x4bf EXP
0x4c0 SWAP1
0x4c1 DIV
0x4c2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4d7 AND
0x4d8 DUP2
0x4d9 JUMP
---
0x4b5: JUMPDEST 
0x4b6: V247 = 0x0
0x4ba: V248 = S[0x0]
0x4bc: V249 = 0x100
0x4bf: V250 = EXP 0x100 0x0
0x4c1: V251 = DIV V248 0x1
0x4c2: V252 = 0xffffffffffffffffffffffffffffffffffffffff
0x4d7: V253 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x4d9: JUMP 0x195
---
Entry stack: [V11, 0x195]
Stack pops: 1
Stack additions: [S0, V253]
Exit stack: [V11, 0x195, V253]

================================

Block 0x4da
[0x4da:0x511]
---
Predecessors: []
Successors: []
---
0x4da STOP
0x4db LOG1
0x4dc PUSH6 0x627a7a723058
0x4e3 SHA3
0x4e4 DUP8
0x4e5 SMOD
0x4e6 DUP7
0x4e7 MISSING 0xc4
0x4e8 SUB
0x4e9 PUSH7 0xbfb328564c432a
0x4f1 MISSING 0xd5
0x4f2 MISSING 0xf8
0x4f3 MISSING 0xaf
0x4f4 PUSH29 0xfbeff33a3283284b3377cfe25943000029
---
0x4da: STOP 
0x4db: LOG S0 S1 S2
0x4dc: V254 = 0x627a7a723058
0x4e3: V255 = SHA3 0x627a7a723058 S3
0x4e5: V256 = SMOD S10 V255
0x4e7: MISSING 0xc4
0x4e8: V257 = SUB S0 S1
0x4e9: V258 = 0xbfb328564c432a
0x4f1: MISSING 0xd5
0x4f2: MISSING 0xf8
0x4f3: MISSING 0xaf
0x4f4: V259 = 0xfbeff33a3283284b3377cfe25943000029
---
Entry stack: []
Stack pops: 0
Stack additions: [S9, V256, S4, S5, S6, S7, S8, S9, S10, 0xbfb328564c432a, V257, 0xfbeff33a3283284b3377cfe25943000029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1a695230
Entry block: 0x7a
Exit block: 0xa6
Body: 0x7a, 0xa6, 0x1d7, 0x22e, 0x232, 0x26e, 0x272

Function 1:
Public function signature: 0x3c4dbb05
Entry block: 0xa8
Exit block: 0xd4
Body: 0xa8, 0xd4, 0x275, 0x2cc, 0x2d0

Function 2:
Public function signature: 0x4f057506
Entry block: 0xd6
Exit block: 0xe9
Body: 0xd6, 0xdd, 0xe1, 0xe9, 0x31b

Function 3:
Public function signature: 0x7065cb48
Entry block: 0xff
Exit block: 0x487
Body: 0xff, 0x12b, 0x321, 0x32c, 0x487, 0x48b, 0x48c

Function 4:
Public function signature: 0x7dc0d1d0
Entry block: 0x12d
Exit block: 0x140
Body: 0x12d, 0x134, 0x138, 0x140, 0x48f

Function 5:
Public function signature: 0xb4a99a4e
Entry block: 0x182
Exit block: 0x195
Body: 0x182, 0x189, 0x18d, 0x195, 0x4b5

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

