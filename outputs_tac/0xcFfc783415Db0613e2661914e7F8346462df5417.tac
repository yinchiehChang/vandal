Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x5e]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x5e
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x5e
0xc: JUMPI 0x5e V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x4fb2e45d
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x63
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x4fb2e45d
0x22: V15 = EQ V13 0x4fb2e45d
0x23: V16 = 0x63
0x26: JUMPI 0x63 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x96]
---
0x27 DUP1
0x28 PUSH4 0x55a373d6
0x2d EQ
0x2e PUSH2 0x96
0x31 JUMPI
---
0x28: V17 = 0x55a373d6
0x2d: V18 = EQ 0x55a373d6 V13
0x2e: V19 = 0x96
0x31: JUMPI 0x96 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0xc5]
---
0x32 DUP1
0x33 PUSH4 0x8da5cb5b
0x38 EQ
0x39 PUSH2 0xc5
0x3c JUMPI
---
0x33: V20 = 0x8da5cb5b
0x38: V21 = EQ 0x8da5cb5b V13
0x39: V22 = 0xc5
0x3c: JUMPI 0xc5 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0xd8]
---
0x3d DUP1
0x3e PUSH4 0xbeabacc8
0x43 EQ
0x44 PUSH2 0xd8
0x47 JUMPI
---
0x3e: V23 = 0xbeabacc8
0x43: V24 = EQ 0xbeabacc8 V13
0x44: V25 = 0xd8
0x47: JUMPI 0xd8 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x100]
---
0x48 DUP1
0x49 PUSH4 0xc2bc2efc
0x4e EQ
0x4f PUSH2 0x100
0x52 JUMPI
---
0x49: V26 = 0xc2bc2efc
0x4e: V27 = EQ 0xc2bc2efc V13
0x4f: V28 = 0x100
0x52: JUMPI 0x100 V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x131]
---
0x53 DUP1
0x54 PUSH4 0xeee78595
0x59 EQ
0x5a PUSH2 0x131
0x5d JUMPI
---
0x54: V29 = 0xeee78595
0x59: V30 = EQ 0xeee78595 V13
0x5a: V31 = 0x131
0x5d: JUMPI 0x131 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x62]
---
Predecessors: [0x0, 0x53]
Successors: []
---
0x5e JUMPDEST
0x5f PUSH1 0x0
0x61 DUP1
0x62 REVERT
---
0x5e: JUMPDEST 
0x5f: V32 = 0x0
0x62: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x63
[0x63:0x69]
---
Predecessors: [0xd]
Successors: [0x6a, 0x6e]
---
0x63 JUMPDEST
0x64 CALLVALUE
0x65 ISZERO
0x66 PUSH2 0x6e
0x69 JUMPI
---
0x63: JUMPDEST 
0x64: V33 = CALLVALUE
0x65: V34 = ISZERO V33
0x66: V35 = 0x6e
0x69: JUMPI 0x6e V34
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6a
[0x6a:0x6d]
---
Predecessors: [0x63]
Successors: []
---
0x6a PUSH1 0x0
0x6c DUP1
0x6d REVERT
---
0x6a: V36 = 0x0
0x6d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x6e
[0x6e:0x81]
---
Predecessors: [0x63]
Successors: [0x159]
---
0x6e JUMPDEST
0x6f PUSH2 0x82
0x72 PUSH1 0x1
0x74 PUSH1 0xa0
0x76 PUSH1 0x2
0x78 EXP
0x79 SUB
0x7a PUSH1 0x4
0x7c CALLDATALOAD
0x7d AND
0x7e PUSH2 0x159
0x81 JUMP
---
0x6e: JUMPDEST 
0x6f: V37 = 0x82
0x72: V38 = 0x1
0x74: V39 = 0xa0
0x76: V40 = 0x2
0x78: V41 = EXP 0x2 0xa0
0x79: V42 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a: V43 = 0x4
0x7c: V44 = CALLDATALOAD 0x4
0x7d: V45 = AND V44 0xffffffffffffffffffffffffffffffffffffffff
0x7e: V46 = 0x159
0x81: JUMP 0x159
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x82, V45]
Exit stack: [V13, 0x82, V45]

================================

Block 0x82
[0x82:0x95]
---
Predecessors: [0x175, 0x2e1, 0x3c0]
Successors: []
---
0x82 JUMPDEST
0x83 PUSH1 0x40
0x85 MLOAD
0x86 SWAP1
0x87 ISZERO
0x88 ISZERO
0x89 DUP2
0x8a MSTORE
0x8b PUSH1 0x20
0x8d ADD
0x8e PUSH1 0x40
0x90 MLOAD
0x91 DUP1
0x92 SWAP2
0x93 SUB
0x94 SWAP1
0x95 RETURN
---
0x82: JUMPDEST 
0x83: V47 = 0x40
0x85: V48 = M[0x40]
0x87: V49 = ISZERO S0
0x88: V50 = ISZERO V49
0x8a: M[V48] = V50
0x8b: V51 = 0x20
0x8d: V52 = ADD 0x20 V48
0x8e: V53 = 0x40
0x90: V54 = M[0x40]
0x93: V55 = SUB V52 V54
0x95: RETURN V54 V55
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x96
[0x96:0x9c]
---
Predecessors: [0x27]
Successors: [0x9d, 0xa1]
---
0x96 JUMPDEST
0x97 CALLVALUE
0x98 ISZERO
0x99 PUSH2 0xa1
0x9c JUMPI
---
0x96: JUMPDEST 
0x97: V56 = CALLVALUE
0x98: V57 = ISZERO V56
0x99: V58 = 0xa1
0x9c: JUMPI 0xa1 V57
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x9d
[0x9d:0xa0]
---
Predecessors: [0x96]
Successors: []
---
0x9d PUSH1 0x0
0x9f DUP1
0xa0 REVERT
---
0x9d: V59 = 0x0
0xa0: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xa1
[0xa1:0xa8]
---
Predecessors: [0x96]
Successors: [0x1a7]
---
0xa1 JUMPDEST
0xa2 PUSH2 0xa9
0xa5 PUSH2 0x1a7
0xa8 JUMP
---
0xa1: JUMPDEST 
0xa2: V60 = 0xa9
0xa5: V61 = 0x1a7
0xa8: JUMP 0x1a7
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xa9]
Exit stack: [V13, 0xa9]

================================

Block 0xa9
[0xa9:0xc4]
---
Predecessors: [0x239, 0x247]
Successors: []
---
0xa9 JUMPDEST
0xaa PUSH1 0x40
0xac MLOAD
0xad PUSH1 0x1
0xaf PUSH1 0xa0
0xb1 PUSH1 0x2
0xb3 EXP
0xb4 SUB
0xb5 SWAP1
0xb6 SWAP2
0xb7 AND
0xb8 DUP2
0xb9 MSTORE
0xba PUSH1 0x20
0xbc ADD
0xbd PUSH1 0x40
0xbf MLOAD
0xc0 DUP1
0xc1 SWAP2
0xc2 SUB
0xc3 SWAP1
0xc4 RETURN
---
0xa9: JUMPDEST 
0xaa: V62 = 0x40
0xac: V63 = M[0x40]
0xad: V64 = 0x1
0xaf: V65 = 0xa0
0xb1: V66 = 0x2
0xb3: V67 = EXP 0x2 0xa0
0xb4: V68 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7: V69 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0xb9: M[V63] = V69
0xba: V70 = 0x20
0xbc: V71 = ADD 0x20 V63
0xbd: V72 = 0x40
0xbf: V73 = M[0x40]
0xc2: V74 = SUB V71 V73
0xc4: RETURN V73 V74
---
Entry stack: [V13, 0x82, V93, V96, V98, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x82, V93, V96, V98, S2, S1]

================================

Block 0xc5
[0xc5:0xcb]
---
Predecessors: [0x32]
Successors: [0xcc, 0xd0]
---
0xc5 JUMPDEST
0xc6 CALLVALUE
0xc7 ISZERO
0xc8 PUSH2 0xd0
0xcb JUMPI
---
0xc5: JUMPDEST 
0xc6: V75 = CALLVALUE
0xc7: V76 = ISZERO V75
0xc8: V77 = 0xd0
0xcb: JUMPI 0xd0 V76
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xcc
[0xcc:0xcf]
---
Predecessors: [0xc5]
Successors: []
---
0xcc PUSH1 0x0
0xce DUP1
0xcf REVERT
---
0xcc: V78 = 0x0
0xcf: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd0
[0xd0:0xd7]
---
Predecessors: [0xc5]
Successors: [0x247]
---
0xd0 JUMPDEST
0xd1 PUSH2 0xa9
0xd4 PUSH2 0x247
0xd7 JUMP
---
0xd0: JUMPDEST 
0xd1: V79 = 0xa9
0xd4: V80 = 0x247
0xd7: JUMP 0x247
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0xa9]
Exit stack: [V13, 0xa9]

================================

Block 0xd8
[0xd8:0xde]
---
Predecessors: [0x3d]
Successors: [0xdf, 0xe3]
---
0xd8 JUMPDEST
0xd9 CALLVALUE
0xda ISZERO
0xdb PUSH2 0xe3
0xde JUMPI
---
0xd8: JUMPDEST 
0xd9: V81 = CALLVALUE
0xda: V82 = ISZERO V81
0xdb: V83 = 0xe3
0xde: JUMPI 0xe3 V82
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xdf
[0xdf:0xe2]
---
Predecessors: [0xd8]
Successors: []
---
0xdf PUSH1 0x0
0xe1 DUP1
0xe2 REVERT
---
0xdf: V84 = 0x0
0xe2: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xe3
[0xe3:0xff]
---
Predecessors: [0xd8]
Successors: [0x256]
---
0xe3 JUMPDEST
0xe4 PUSH2 0x82
0xe7 PUSH1 0x1
0xe9 PUSH1 0xa0
0xeb PUSH1 0x2
0xed EXP
0xee SUB
0xef PUSH1 0x4
0xf1 CALLDATALOAD
0xf2 DUP2
0xf3 AND
0xf4 SWAP1
0xf5 PUSH1 0x24
0xf7 CALLDATALOAD
0xf8 AND
0xf9 PUSH1 0x44
0xfb CALLDATALOAD
0xfc PUSH2 0x256
0xff JUMP
---
0xe3: JUMPDEST 
0xe4: V85 = 0x82
0xe7: V86 = 0x1
0xe9: V87 = 0xa0
0xeb: V88 = 0x2
0xed: V89 = EXP 0x2 0xa0
0xee: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0xef: V91 = 0x4
0xf1: V92 = CALLDATALOAD 0x4
0xf3: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0xf5: V94 = 0x24
0xf7: V95 = CALLDATALOAD 0x24
0xf8: V96 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0xf9: V97 = 0x44
0xfb: V98 = CALLDATALOAD 0x44
0xfc: V99 = 0x256
0xff: JUMP 0x256
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x82, V93, V96, V98]
Exit stack: [V13, 0x82, V93, V96, V98]

================================

Block 0x100
[0x100:0x106]
---
Predecessors: [0x48]
Successors: [0x107, 0x10b]
---
0x100 JUMPDEST
0x101 CALLVALUE
0x102 ISZERO
0x103 PUSH2 0x10b
0x106 JUMPI
---
0x100: JUMPDEST 
0x101: V100 = CALLVALUE
0x102: V101 = ISZERO V100
0x103: V102 = 0x10b
0x106: JUMPI 0x10b V101
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x107
[0x107:0x10a]
---
Predecessors: [0x100]
Successors: []
---
0x107 PUSH1 0x0
0x109 DUP1
0x10a REVERT
---
0x107: V103 = 0x0
0x10a: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x10b
[0x10b:0x11e]
---
Predecessors: [0x100]
Successors: [0x306]
---
0x10b JUMPDEST
0x10c PUSH2 0x11f
0x10f PUSH1 0x1
0x111 PUSH1 0xa0
0x113 PUSH1 0x2
0x115 EXP
0x116 SUB
0x117 PUSH1 0x4
0x119 CALLDATALOAD
0x11a AND
0x11b PUSH2 0x306
0x11e JUMP
---
0x10b: JUMPDEST 
0x10c: V104 = 0x11f
0x10f: V105 = 0x1
0x111: V106 = 0xa0
0x113: V107 = 0x2
0x115: V108 = EXP 0x2 0xa0
0x116: V109 = SUB 0x10000000000000000000000000000000000000000 0x1
0x117: V110 = 0x4
0x119: V111 = CALLDATALOAD 0x4
0x11a: V112 = AND V111 0xffffffffffffffffffffffffffffffffffffffff
0x11b: V113 = 0x306
0x11e: JUMP 0x306
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x11f, V112]
Exit stack: [V13, 0x11f, V112]

================================

Block 0x11f
[0x11f:0x130]
---
Predecessors: [0x306]
Successors: []
---
0x11f JUMPDEST
0x120 PUSH1 0x40
0x122 MLOAD
0x123 SWAP1
0x124 DUP2
0x125 MSTORE
0x126 PUSH1 0x20
0x128 ADD
0x129 PUSH1 0x40
0x12b MLOAD
0x12c DUP1
0x12d SWAP2
0x12e SUB
0x12f SWAP1
0x130 RETURN
---
0x11f: JUMPDEST 
0x120: V114 = 0x40
0x122: V115 = M[0x40]
0x125: M[V115] = V308
0x126: V116 = 0x20
0x128: V117 = ADD 0x20 V115
0x129: V118 = 0x40
0x12b: V119 = M[0x40]
0x12e: V120 = SUB V117 V119
0x130: RETURN V119 V120
---
Entry stack: [V13, V308]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x131
[0x131:0x137]
---
Predecessors: [0x53]
Successors: [0x138, 0x13c]
---
0x131 JUMPDEST
0x132 CALLVALUE
0x133 ISZERO
0x134 PUSH2 0x13c
0x137 JUMPI
---
0x131: JUMPDEST 
0x132: V121 = CALLVALUE
0x133: V122 = ISZERO V121
0x134: V123 = 0x13c
0x137: JUMPI 0x13c V122
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x138
[0x138:0x13b]
---
Predecessors: [0x131]
Successors: []
---
0x138 PUSH1 0x0
0x13a DUP1
0x13b REVERT
---
0x138: V124 = 0x0
0x13b: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x13c
[0x13c:0x158]
---
Predecessors: [0x131]
Successors: [0x321]
---
0x13c JUMPDEST
0x13d PUSH2 0x82
0x140 PUSH1 0x1
0x142 PUSH1 0xa0
0x144 PUSH1 0x2
0x146 EXP
0x147 SUB
0x148 PUSH1 0x4
0x14a CALLDATALOAD
0x14b DUP2
0x14c AND
0x14d SWAP1
0x14e PUSH1 0x24
0x150 CALLDATALOAD
0x151 AND
0x152 PUSH1 0x44
0x154 CALLDATALOAD
0x155 PUSH2 0x321
0x158 JUMP
---
0x13c: JUMPDEST 
0x13d: V125 = 0x82
0x140: V126 = 0x1
0x142: V127 = 0xa0
0x144: V128 = 0x2
0x146: V129 = EXP 0x2 0xa0
0x147: V130 = SUB 0x10000000000000000000000000000000000000000 0x1
0x148: V131 = 0x4
0x14a: V132 = CALLDATALOAD 0x4
0x14c: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x14e: V134 = 0x24
0x150: V135 = CALLDATALOAD 0x24
0x151: V136 = AND V135 0xffffffffffffffffffffffffffffffffffffffff
0x152: V137 = 0x44
0x154: V138 = CALLDATALOAD 0x44
0x155: V139 = 0x321
0x158: JUMP 0x321
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x82, V133, V136, V138]
Exit stack: [V13, 0x82, V133, V136, V138]

================================

Block 0x159
[0x159:0x170]
---
Predecessors: [0x6e]
Successors: [0x171, 0x175]
---
0x159 JUMPDEST
0x15a PUSH1 0x0
0x15c DUP1
0x15d SLOAD
0x15e CALLER
0x15f PUSH1 0x1
0x161 PUSH1 0xa0
0x163 PUSH1 0x2
0x165 EXP
0x166 SUB
0x167 SWAP1
0x168 DUP2
0x169 AND
0x16a SWAP2
0x16b AND
0x16c EQ
0x16d PUSH2 0x175
0x170 JUMPI
---
0x159: JUMPDEST 
0x15a: V140 = 0x0
0x15d: V141 = S[0x0]
0x15e: V142 = CALLER
0x15f: V143 = 0x1
0x161: V144 = 0xa0
0x163: V145 = 0x2
0x165: V146 = EXP 0x2 0xa0
0x166: V147 = SUB 0x10000000000000000000000000000000000000000 0x1
0x169: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V142
0x16b: V149 = AND V141 0xffffffffffffffffffffffffffffffffffffffff
0x16c: V150 = EQ V149 V148
0x16d: V151 = 0x175
0x170: JUMPI 0x175 V150
---
Entry stack: [V13, 0x82, V45]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V13, 0x82, V45, 0x0]

================================

Block 0x171
[0x171:0x174]
---
Predecessors: [0x159]
Successors: []
---
0x171 PUSH1 0x0
0x173 DUP1
0x174 REVERT
---
0x171: V152 = 0x0
0x174: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, V45, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, V45, 0x0]

================================

Block 0x175
[0x175:0x1a6]
---
Predecessors: [0x159]
Successors: [0x82]
---
0x175 JUMPDEST
0x176 POP
0x177 PUSH1 0x0
0x179 DUP1
0x17a SLOAD
0x17b PUSH1 0x1
0x17d PUSH1 0xa0
0x17f PUSH1 0x2
0x181 EXP
0x182 SUB
0x183 DUP4
0x184 AND
0x185 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x19a NOT
0x19b SWAP1
0x19c SWAP2
0x19d AND
0x19e OR
0x19f SWAP1
0x1a0 SSTORE
0x1a1 PUSH1 0x1
0x1a3 SWAP2
0x1a4 SWAP1
0x1a5 POP
0x1a6 JUMP
---
0x175: JUMPDEST 
0x177: V153 = 0x0
0x17a: V154 = S[0x0]
0x17b: V155 = 0x1
0x17d: V156 = 0xa0
0x17f: V157 = 0x2
0x181: V158 = EXP 0x2 0xa0
0x182: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x184: V160 = AND V45 0xffffffffffffffffffffffffffffffffffffffff
0x185: V161 = 0xffffffffffffffffffffffffffffffffffffffff
0x19a: V162 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x19d: V163 = AND V154 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x19e: V164 = OR V163 V160
0x1a0: S[0x0] = V164
0x1a1: V165 = 0x1
0x1a6: JUMP 0x82
---
Entry stack: [V13, 0x82, V45, 0x0]
Stack pops: 3
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x1a7
[0x1a7:0x223]
---
Predecessors: [0xa1, 0x268]
Successors: [0x224, 0x228]
---
0x1a7 JUMPDEST
0x1a8 PUSH1 0x1
0x1aa SLOAD
0x1ab PUSH1 0x0
0x1ad SWAP1
0x1ae PUSH1 0x1
0x1b0 PUSH1 0xa0
0x1b2 PUSH1 0x2
0x1b4 EXP
0x1b5 SUB
0x1b6 AND
0x1b7 PUSH4 0x4433bbc
0x1bc DUP3
0x1bd PUSH1 0x40
0x1bf MLOAD
0x1c0 PUSH1 0x20
0x1c2 ADD
0x1c3 MSTORE
0x1c4 PUSH1 0x40
0x1c6 MLOAD
0x1c7 PUSH1 0xe0
0x1c9 PUSH1 0x2
0x1cb EXP
0x1cc PUSH4 0xffffffff
0x1d1 DUP4
0x1d2 AND
0x1d3 MUL
0x1d4 DUP2
0x1d5 MSTORE
0x1d6 PUSH1 0x20
0x1d8 PUSH1 0x4
0x1da DUP3
0x1db ADD
0x1dc DUP2
0x1dd SWAP1
0x1de MSTORE
0x1df PUSH1 0x5
0x1e1 PUSH1 0x24
0x1e3 DUP4
0x1e4 ADD
0x1e5 MSTORE
0x1e6 PUSH32 0x546f6b656e000000000000000000000000000000000000000000000000000000
0x207 PUSH1 0x44
0x209 DUP4
0x20a ADD
0x20b MSTORE
0x20c PUSH1 0x64
0x20e SWAP1
0x20f SWAP2
0x210 ADD
0x211 SWAP1
0x212 PUSH1 0x40
0x214 MLOAD
0x215 DUP1
0x216 DUP4
0x217 SUB
0x218 DUP2
0x219 PUSH1 0x0
0x21b DUP8
0x21c DUP1
0x21d EXTCODESIZE
0x21e ISZERO
0x21f ISZERO
0x220 PUSH2 0x228
0x223 JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V166 = 0x1
0x1aa: V167 = S[0x1]
0x1ab: V168 = 0x0
0x1ae: V169 = 0x1
0x1b0: V170 = 0xa0
0x1b2: V171 = 0x2
0x1b4: V172 = EXP 0x2 0xa0
0x1b5: V173 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b6: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V167
0x1b7: V175 = 0x4433bbc
0x1bd: V176 = 0x40
0x1bf: V177 = M[0x40]
0x1c0: V178 = 0x20
0x1c2: V179 = ADD 0x20 V177
0x1c3: M[V179] = 0x0
0x1c4: V180 = 0x40
0x1c6: V181 = M[0x40]
0x1c7: V182 = 0xe0
0x1c9: V183 = 0x2
0x1cb: V184 = EXP 0x2 0xe0
0x1cc: V185 = 0xffffffff
0x1d2: V186 = AND 0x4433bbc 0xffffffff
0x1d3: V187 = MUL 0x4433bbc 0x100000000000000000000000000000000000000000000000000000000
0x1d5: M[V181] = 0x4433bbc00000000000000000000000000000000000000000000000000000000
0x1d6: V188 = 0x20
0x1d8: V189 = 0x4
0x1db: V190 = ADD V181 0x4
0x1de: M[V190] = 0x20
0x1df: V191 = 0x5
0x1e1: V192 = 0x24
0x1e4: V193 = ADD V181 0x24
0x1e5: M[V193] = 0x5
0x1e6: V194 = 0x546f6b656e000000000000000000000000000000000000000000000000000000
0x207: V195 = 0x44
0x20a: V196 = ADD V181 0x44
0x20b: M[V196] = 0x546f6b656e000000000000000000000000000000000000000000000000000000
0x20c: V197 = 0x64
0x210: V198 = ADD V181 0x64
0x212: V199 = 0x40
0x214: V200 = M[0x40]
0x217: V201 = SUB V198 V200
0x219: V202 = 0x0
0x21d: V203 = EXTCODESIZE V174
0x21e: V204 = ISZERO V203
0x21f: V205 = ISZERO V204
0x220: V206 = 0x228
0x223: JUMPI 0x228 V205
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, S1, {0xa9, 0x270}]
Stack pops: 0
Stack additions: [0x0, V174, 0x4433bbc, V198, 0x20, V200, V201, V200, 0x0, V174]
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, S1, {0xa9, 0x270}, 0x0, V174, 0x4433bbc, V198, 0x20, V200, V201, V200, 0x0, V174]

================================

Block 0x224
[0x224:0x227]
---
Predecessors: [0x1a7]
Successors: []
---
0x224 PUSH1 0x0
0x226 DUP1
0x227 REVERT
---
0x224: V207 = 0x0
0x227: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, S11, {0xa9, 0x270}, 0x0, V174, 0x4433bbc, V198, 0x20, V200, V201, V200, 0x0, V174]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, S11, {0xa9, 0x270}, 0x0, V174, 0x4433bbc, V198, 0x20, V200, V201, V200, 0x0, V174]

================================

Block 0x228
[0x228:0x234]
---
Predecessors: [0x1a7]
Successors: [0x235, 0x239]
---
0x228 JUMPDEST
0x229 PUSH2 0x2c6
0x22c GAS
0x22d SUB
0x22e CALL
0x22f ISZERO
0x230 ISZERO
0x231 PUSH2 0x239
0x234 JUMPI
---
0x228: JUMPDEST 
0x229: V208 = 0x2c6
0x22c: V209 = GAS
0x22d: V210 = SUB V209 0x2c6
0x22e: V211 = CALL V210 V174 0x0 V200 V201 V200 0x20
0x22f: V212 = ISZERO V211
0x230: V213 = ISZERO V212
0x231: V214 = 0x239
0x234: JUMPI 0x239 V213
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, S11, {0xa9, 0x270}, 0x0, V174, 0x4433bbc, V198, 0x20, V200, V201, V200, 0x0, V174]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, S11, {0xa9, 0x270}, 0x0, V174, 0x4433bbc, V198]

================================

Block 0x235
[0x235:0x238]
---
Predecessors: [0x228]
Successors: []
---
0x235 PUSH1 0x0
0x237 DUP1
0x238 REVERT
---
0x235: V215 = 0x0
0x238: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, S5, {0xa9, 0x270}, 0x0, S2, 0x4433bbc, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, S5, {0xa9, 0x270}, 0x0, S2, 0x4433bbc, S0]

================================

Block 0x239
[0x239:0x246]
---
Predecessors: [0x228]
Successors: [0xa9, 0x270]
---
0x239 JUMPDEST
0x23a POP
0x23b POP
0x23c POP
0x23d PUSH1 0x40
0x23f MLOAD
0x240 DUP1
0x241 MLOAD
0x242 SWAP2
0x243 POP
0x244 POP
0x245 SWAP1
0x246 JUMP
---
0x239: JUMPDEST 
0x23d: V216 = 0x40
0x23f: V217 = M[0x40]
0x241: V218 = M[V217]
0x246: JUMP {0xa9, 0x270}
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, S5, {0xa9, 0x270}, 0x0, S2, 0x4433bbc, S0]
Stack pops: 5
Stack additions: [V218]
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, S5, V218]

================================

Block 0x247
[0x247:0x255]
---
Predecessors: [0xd0]
Successors: [0xa9]
---
0x247 JUMPDEST
0x248 PUSH1 0x0
0x24a SLOAD
0x24b PUSH1 0x1
0x24d PUSH1 0xa0
0x24f PUSH1 0x2
0x251 EXP
0x252 SUB
0x253 AND
0x254 DUP2
0x255 JUMP
---
0x247: JUMPDEST 
0x248: V219 = 0x0
0x24a: V220 = S[0x0]
0x24b: V221 = 0x1
0x24d: V222 = 0xa0
0x24f: V223 = 0x2
0x251: V224 = EXP 0x2 0xa0
0x252: V225 = SUB 0x10000000000000000000000000000000000000000 0x1
0x253: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x255: JUMP 0xa9
---
Entry stack: [V13, 0xa9]
Stack pops: 1
Stack additions: [S0, V226]
Exit stack: [V13, 0xa9, V226]

================================

Block 0x256
[0x256:0x263]
---
Predecessors: [0xe3]
Successors: [0x264, 0x268]
---
0x256 JUMPDEST
0x257 PUSH1 0x0
0x259 PUSH1 0x60
0x25b PUSH1 0x64
0x25d CALLDATASIZE
0x25e LT
0x25f ISZERO
0x260 PUSH2 0x268
0x263 JUMPI
---
0x256: JUMPDEST 
0x257: V227 = 0x0
0x259: V228 = 0x60
0x25b: V229 = 0x64
0x25d: V230 = CALLDATASIZE
0x25e: V231 = LT V230 0x64
0x25f: V232 = ISZERO V231
0x260: V233 = 0x268
0x263: JUMPI 0x268 V232
---
Entry stack: [V13, 0x82, V93, V96, V98]
Stack pops: 0
Stack additions: [0x0, 0x60]
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, 0x60]

================================

Block 0x264
[0x264:0x267]
---
Predecessors: [0x256]
Successors: []
---
0x264 PUSH1 0x0
0x266 DUP1
0x267 REVERT
---
0x264: V234 = 0x0
0x267: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, 0x60]

================================

Block 0x268
[0x268:0x26f]
---
Predecessors: [0x256]
Successors: [0x1a7]
---
0x268 JUMPDEST
0x269 PUSH2 0x270
0x26c PUSH2 0x1a7
0x26f JUMP
---
0x268: JUMPDEST 
0x269: V235 = 0x270
0x26c: V236 = 0x1a7
0x26f: JUMP 0x1a7
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, 0x60]
Stack pops: 0
Stack additions: [0x270]
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, 0x60, 0x270]

================================

Block 0x270
[0x270:0x28a]
---
Predecessors: [0x239]
Successors: [0x28b, 0x28f]
---
0x270 JUMPDEST
0x271 PUSH1 0x1
0x273 PUSH1 0xa0
0x275 PUSH1 0x2
0x277 EXP
0x278 SUB
0x279 AND
0x27a CALLER
0x27b PUSH1 0x1
0x27d PUSH1 0xa0
0x27f PUSH1 0x2
0x281 EXP
0x282 SUB
0x283 AND
0x284 EQ
0x285 ISZERO
0x286 ISZERO
0x287 PUSH2 0x28f
0x28a JUMPI
---
0x270: JUMPDEST 
0x271: V237 = 0x1
0x273: V238 = 0xa0
0x275: V239 = 0x2
0x277: V240 = EXP 0x2 0xa0
0x278: V241 = SUB 0x10000000000000000000000000000000000000000 0x1
0x279: V242 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x27a: V243 = CALLER
0x27b: V244 = 0x1
0x27d: V245 = 0xa0
0x27f: V246 = 0x2
0x281: V247 = EXP 0x2 0xa0
0x282: V248 = SUB 0x10000000000000000000000000000000000000000 0x1
0x283: V249 = AND 0xffffffffffffffffffffffffffffffffffffffff V243
0x284: V250 = EQ V249 V242
0x285: V251 = ISZERO V250
0x286: V252 = ISZERO V251
0x287: V253 = 0x28f
0x28a: JUMPI 0x28f V252
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, S1, V218]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, S1]

================================

Block 0x28b
[0x28b:0x28e]
---
Predecessors: [0x270]
Successors: []
---
0x28b PUSH1 0x0
0x28d DUP1
0x28e REVERT
---
0x28b: V254 = 0x0
0x28e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, S0]

================================

Block 0x28f
[0x28f:0x2b1]
---
Predecessors: [0x270]
Successors: [0x3d3]
---
0x28f JUMPDEST
0x290 PUSH1 0x1
0x292 PUSH1 0xa0
0x294 PUSH1 0x2
0x296 EXP
0x297 SUB
0x298 DUP6
0x299 AND
0x29a PUSH1 0x0
0x29c SWAP1
0x29d DUP2
0x29e MSTORE
0x29f PUSH1 0x2
0x2a1 PUSH1 0x20
0x2a3 MSTORE
0x2a4 PUSH1 0x40
0x2a6 SWAP1
0x2a7 SHA3
0x2a8 SLOAD
0x2a9 PUSH2 0x2b2
0x2ac SWAP1
0x2ad DUP5
0x2ae PUSH2 0x3d3
0x2b1 JUMP
---
0x28f: JUMPDEST 
0x290: V255 = 0x1
0x292: V256 = 0xa0
0x294: V257 = 0x2
0x296: V258 = EXP 0x2 0xa0
0x297: V259 = SUB 0x10000000000000000000000000000000000000000 0x1
0x299: V260 = AND V93 0xffffffffffffffffffffffffffffffffffffffff
0x29a: V261 = 0x0
0x29e: M[0x0] = V260
0x29f: V262 = 0x2
0x2a1: V263 = 0x20
0x2a3: M[0x20] = 0x2
0x2a4: V264 = 0x40
0x2a7: V265 = SHA3 0x0 0x40
0x2a8: V266 = S[V265]
0x2a9: V267 = 0x2b2
0x2ae: V268 = 0x3d3
0x2b1: JUMP 0x3d3
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x2b2, V266, S2]
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, S0, 0x2b2, V266, V98]

================================

Block 0x2b2
[0x2b2:0x2e0]
---
Predecessors: [0x3e2]
Successors: [0x3e8]
---
0x2b2 JUMPDEST
0x2b3 PUSH1 0x1
0x2b5 PUSH1 0xa0
0x2b7 PUSH1 0x2
0x2b9 EXP
0x2ba SUB
0x2bb DUP1
0x2bc DUP8
0x2bd AND
0x2be PUSH1 0x0
0x2c0 SWAP1
0x2c1 DUP2
0x2c2 MSTORE
0x2c3 PUSH1 0x2
0x2c5 PUSH1 0x20
0x2c7 MSTORE
0x2c8 PUSH1 0x40
0x2ca DUP1
0x2cb DUP3
0x2cc SHA3
0x2cd SWAP4
0x2ce SWAP1
0x2cf SWAP4
0x2d0 SSTORE
0x2d1 SWAP1
0x2d2 DUP7
0x2d3 AND
0x2d4 DUP2
0x2d5 MSTORE
0x2d6 SHA3
0x2d7 SLOAD
0x2d8 PUSH2 0x2e1
0x2db SWAP1
0x2dc DUP5
0x2dd PUSH2 0x3e8
0x2e0 JUMP
---
0x2b2: JUMPDEST 
0x2b3: V269 = 0x1
0x2b5: V270 = 0xa0
0x2b7: V271 = 0x2
0x2b9: V272 = EXP 0x2 0xa0
0x2ba: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2bd: V274 = AND V93 0xffffffffffffffffffffffffffffffffffffffff
0x2be: V275 = 0x0
0x2c2: M[0x0] = V274
0x2c3: V276 = 0x2
0x2c5: V277 = 0x20
0x2c7: M[0x20] = 0x2
0x2c8: V278 = 0x40
0x2cc: V279 = SHA3 0x0 0x40
0x2d0: S[V279] = V388
0x2d3: V280 = AND V96 0xffffffffffffffffffffffffffffffffffffffff
0x2d5: M[0x0] = V280
0x2d6: V281 = SHA3 0x0 0x40
0x2d7: V282 = S[V281]
0x2d8: V283 = 0x2e1
0x2dd: V284 = 0x3e8
0x2e0: JUMP 0x3e8
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, S1, V388]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x2e1, V282, S3]
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, S1, 0x2e1, V282, V98]

================================

Block 0x2e1
[0x2e1:0x305]
---
Predecessors: [0x3f9]
Successors: [0x82]
---
0x2e1 JUMPDEST
0x2e2 PUSH1 0x1
0x2e4 PUSH1 0xa0
0x2e6 PUSH1 0x2
0x2e8 EXP
0x2e9 SUB
0x2ea DUP6
0x2eb AND
0x2ec PUSH1 0x0
0x2ee SWAP1
0x2ef DUP2
0x2f0 MSTORE
0x2f1 PUSH1 0x2
0x2f3 PUSH1 0x20
0x2f5 MSTORE
0x2f6 PUSH1 0x40
0x2f8 SWAP1
0x2f9 SHA3
0x2fa SSTORE
0x2fb PUSH1 0x1
0x2fd SWAP2
0x2fe POP
0x2ff POP
0x300 SWAP4
0x301 SWAP3
0x302 POP
0x303 POP
0x304 POP
0x305 JUMP
---
0x2e1: JUMPDEST 
0x2e2: V285 = 0x1
0x2e4: V286 = 0xa0
0x2e6: V287 = 0x2
0x2e8: V288 = EXP 0x2 0xa0
0x2e9: V289 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2eb: V290 = AND V96 0xffffffffffffffffffffffffffffffffffffffff
0x2ec: V291 = 0x0
0x2f0: M[0x0] = V290
0x2f1: V292 = 0x2
0x2f3: V293 = 0x20
0x2f5: M[0x20] = 0x2
0x2f6: V294 = 0x40
0x2f9: V295 = SHA3 0x0 0x40
0x2fa: S[V295] = V395
0x2fb: V296 = 0x1
0x305: JUMP 0x82
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, 0x60, V395]
Stack pops: 7
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x306
[0x306:0x320]
---
Predecessors: [0x10b]
Successors: [0x11f]
---
0x306 JUMPDEST
0x307 PUSH1 0x1
0x309 PUSH1 0xa0
0x30b PUSH1 0x2
0x30d EXP
0x30e SUB
0x30f AND
0x310 PUSH1 0x0
0x312 SWAP1
0x313 DUP2
0x314 MSTORE
0x315 PUSH1 0x2
0x317 PUSH1 0x20
0x319 MSTORE
0x31a PUSH1 0x40
0x31c SWAP1
0x31d SHA3
0x31e SLOAD
0x31f SWAP1
0x320 JUMP
---
0x306: JUMPDEST 
0x307: V297 = 0x1
0x309: V298 = 0xa0
0x30b: V299 = 0x2
0x30d: V300 = EXP 0x2 0xa0
0x30e: V301 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30f: V302 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0x310: V303 = 0x0
0x314: M[0x0] = V302
0x315: V304 = 0x2
0x317: V305 = 0x20
0x319: M[0x20] = 0x2
0x31a: V306 = 0x40
0x31d: V307 = SHA3 0x0 0x40
0x31e: V308 = S[V307]
0x320: JUMP 0x11f
---
Entry stack: [V13, 0x11f, V112]
Stack pops: 2
Stack additions: [V308]
Exit stack: [V13, V308]

================================

Block 0x321
[0x321:0x32f]
---
Predecessors: [0x13c]
Successors: [0x330, 0x334]
---
0x321 JUMPDEST
0x322 PUSH1 0x0
0x324 DUP1
0x325 PUSH1 0x60
0x327 PUSH1 0x64
0x329 CALLDATASIZE
0x32a LT
0x32b ISZERO
0x32c PUSH2 0x334
0x32f JUMPI
---
0x321: JUMPDEST 
0x322: V309 = 0x0
0x325: V310 = 0x60
0x327: V311 = 0x64
0x329: V312 = CALLDATASIZE
0x32a: V313 = LT V312 0x64
0x32b: V314 = ISZERO V313
0x32c: V315 = 0x334
0x32f: JUMPI 0x334 V314
---
Entry stack: [V13, 0x82, V133, V136, V138]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x60]
Exit stack: [V13, 0x82, V133, V136, V138, 0x0, 0x0, 0x60]

================================

Block 0x330
[0x330:0x333]
---
Predecessors: [0x321]
Successors: []
---
0x330 PUSH1 0x0
0x332 DUP1
0x333 REVERT
---
0x330: V316 = 0x0
0x333: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, V133, V136, V138, 0x0, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, V133, V136, V138, 0x0, 0x0, 0x60]

================================

Block 0x334
[0x334:0x34a]
---
Predecessors: [0x321]
Successors: [0x34b, 0x34f]
---
0x334 JUMPDEST
0x335 PUSH1 0x0
0x337 SLOAD
0x338 CALLER
0x339 PUSH1 0x1
0x33b PUSH1 0xa0
0x33d PUSH1 0x2
0x33f EXP
0x340 SUB
0x341 SWAP1
0x342 DUP2
0x343 AND
0x344 SWAP2
0x345 AND
0x346 EQ
0x347 PUSH2 0x34f
0x34a JUMPI
---
0x334: JUMPDEST 
0x335: V317 = 0x0
0x337: V318 = S[0x0]
0x338: V319 = CALLER
0x339: V320 = 0x1
0x33b: V321 = 0xa0
0x33d: V322 = 0x2
0x33f: V323 = EXP 0x2 0xa0
0x340: V324 = SUB 0x10000000000000000000000000000000000000000 0x1
0x343: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V319
0x345: V326 = AND V318 0xffffffffffffffffffffffffffffffffffffffff
0x346: V327 = EQ V326 V325
0x347: V328 = 0x34f
0x34a: JUMPI 0x34f V327
---
Entry stack: [V13, 0x82, V133, V136, V138, 0x0, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, V133, V136, V138, 0x0, 0x0, 0x60]

================================

Block 0x34b
[0x34b:0x34e]
---
Predecessors: [0x334]
Successors: []
---
0x34b PUSH1 0x0
0x34d DUP1
0x34e REVERT
---
0x34b: V329 = 0x0
0x34e: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, V133, V136, V138, 0x0, 0x0, 0x60]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, V133, V136, V138, 0x0, 0x0, 0x60]

================================

Block 0x34f
[0x34f:0x3aa]
---
Predecessors: [0x334]
Successors: [0x3ab, 0x3af]
---
0x34f JUMPDEST
0x350 DUP6
0x351 SWAP2
0x352 POP
0x353 DUP2
0x354 PUSH1 0x1
0x356 PUSH1 0xa0
0x358 PUSH1 0x2
0x35a EXP
0x35b SUB
0x35c AND
0x35d PUSH4 0xa9059cbb
0x362 DUP7
0x363 DUP7
0x364 PUSH1 0x0
0x366 PUSH1 0x40
0x368 MLOAD
0x369 PUSH1 0x20
0x36b ADD
0x36c MSTORE
0x36d PUSH1 0x40
0x36f MLOAD
0x370 PUSH1 0xe0
0x372 PUSH1 0x2
0x374 EXP
0x375 PUSH4 0xffffffff
0x37a DUP6
0x37b AND
0x37c MUL
0x37d DUP2
0x37e MSTORE
0x37f PUSH1 0x1
0x381 PUSH1 0xa0
0x383 PUSH1 0x2
0x385 EXP
0x386 SUB
0x387 SWAP1
0x388 SWAP3
0x389 AND
0x38a PUSH1 0x4
0x38c DUP4
0x38d ADD
0x38e MSTORE
0x38f PUSH1 0x24
0x391 DUP3
0x392 ADD
0x393 MSTORE
0x394 PUSH1 0x44
0x396 ADD
0x397 PUSH1 0x20
0x399 PUSH1 0x40
0x39b MLOAD
0x39c DUP1
0x39d DUP4
0x39e SUB
0x39f DUP2
0x3a0 PUSH1 0x0
0x3a2 DUP8
0x3a3 DUP1
0x3a4 EXTCODESIZE
0x3a5 ISZERO
0x3a6 ISZERO
0x3a7 PUSH2 0x3af
0x3aa JUMPI
---
0x34f: JUMPDEST 
0x354: V330 = 0x1
0x356: V331 = 0xa0
0x358: V332 = 0x2
0x35a: V333 = EXP 0x2 0xa0
0x35b: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x35c: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x35d: V336 = 0xa9059cbb
0x364: V337 = 0x0
0x366: V338 = 0x40
0x368: V339 = M[0x40]
0x369: V340 = 0x20
0x36b: V341 = ADD 0x20 V339
0x36c: M[V341] = 0x0
0x36d: V342 = 0x40
0x36f: V343 = M[0x40]
0x370: V344 = 0xe0
0x372: V345 = 0x2
0x374: V346 = EXP 0x2 0xe0
0x375: V347 = 0xffffffff
0x37b: V348 = AND 0xa9059cbb 0xffffffff
0x37c: V349 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0x37e: M[V343] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x37f: V350 = 0x1
0x381: V351 = 0xa0
0x383: V352 = 0x2
0x385: V353 = EXP 0x2 0xa0
0x386: V354 = SUB 0x10000000000000000000000000000000000000000 0x1
0x389: V355 = AND V136 0xffffffffffffffffffffffffffffffffffffffff
0x38a: V356 = 0x4
0x38d: V357 = ADD V343 0x4
0x38e: M[V357] = V355
0x38f: V358 = 0x24
0x392: V359 = ADD V343 0x24
0x393: M[V359] = V138
0x394: V360 = 0x44
0x396: V361 = ADD 0x44 V343
0x397: V362 = 0x20
0x399: V363 = 0x40
0x39b: V364 = M[0x40]
0x39e: V365 = SUB V361 V364
0x3a0: V366 = 0x0
0x3a4: V367 = EXTCODESIZE V335
0x3a5: V368 = ISZERO V367
0x3a6: V369 = ISZERO V368
0x3a7: V370 = 0x3af
0x3aa: JUMPI 0x3af V369
---
Entry stack: [V13, 0x82, V133, V136, V138, 0x0, 0x0, 0x60]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S5, S0, V335, 0xa9059cbb, V361, 0x20, V364, V365, V364, 0x0, V335]
Exit stack: [V13, 0x82, V133, V136, V138, 0x0, V133, 0x60, V335, 0xa9059cbb, V361, 0x20, V364, V365, V364, 0x0, V335]

================================

Block 0x3ab
[0x3ab:0x3ae]
---
Predecessors: [0x34f]
Successors: []
---
0x3ab PUSH1 0x0
0x3ad DUP1
0x3ae REVERT
---
0x3ab: V371 = 0x0
0x3ae: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, V133, V136, V138, 0x0, V133, 0x60, V335, 0xa9059cbb, V361, 0x20, V364, V365, V364, 0x0, V335]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, V133, V136, V138, 0x0, V133, 0x60, V335, 0xa9059cbb, V361, 0x20, V364, V365, V364, 0x0, V335]

================================

Block 0x3af
[0x3af:0x3bb]
---
Predecessors: [0x34f]
Successors: [0x3bc, 0x3c0]
---
0x3af JUMPDEST
0x3b0 PUSH2 0x2c6
0x3b3 GAS
0x3b4 SUB
0x3b5 CALL
0x3b6 ISZERO
0x3b7 ISZERO
0x3b8 PUSH2 0x3c0
0x3bb JUMPI
---
0x3af: JUMPDEST 
0x3b0: V372 = 0x2c6
0x3b3: V373 = GAS
0x3b4: V374 = SUB V373 0x2c6
0x3b5: V375 = CALL V374 V335 0x0 V364 V365 V364 0x20
0x3b6: V376 = ISZERO V375
0x3b7: V377 = ISZERO V376
0x3b8: V378 = 0x3c0
0x3bb: JUMPI 0x3c0 V377
---
Entry stack: [V13, 0x82, V133, V136, V138, 0x0, V133, 0x60, V335, 0xa9059cbb, V361, 0x20, V364, V365, V364, 0x0, V335]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x82, V133, V136, V138, 0x0, V133, 0x60, V335, 0xa9059cbb, V361]

================================

Block 0x3bc
[0x3bc:0x3bf]
---
Predecessors: [0x3af]
Successors: []
---
0x3bc PUSH1 0x0
0x3be DUP1
0x3bf REVERT
---
0x3bc: V379 = 0x0
0x3bf: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, V133, V136, V138, 0x0, V133, 0x60, V335, 0xa9059cbb, V361]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, V133, V136, V138, 0x0, V133, 0x60, V335, 0xa9059cbb, V361]

================================

Block 0x3c0
[0x3c0:0x3d2]
---
Predecessors: [0x3af]
Successors: [0x82]
---
0x3c0 JUMPDEST
0x3c1 POP
0x3c2 POP
0x3c3 POP
0x3c4 PUSH1 0x40
0x3c6 MLOAD
0x3c7 DUP1
0x3c8 MLOAD
0x3c9 SWAP8
0x3ca SWAP7
0x3cb POP
0x3cc POP
0x3cd POP
0x3ce POP
0x3cf POP
0x3d0 POP
0x3d1 POP
0x3d2 JUMP
---
0x3c0: JUMPDEST 
0x3c4: V380 = 0x40
0x3c6: V381 = M[0x40]
0x3c8: V382 = M[V381]
0x3d2: JUMP 0x82
---
Entry stack: [V13, 0x82, V133, V136, V138, 0x0, V133, 0x60, V335, 0xa9059cbb, V361]
Stack pops: 10
Stack additions: [V382]
Exit stack: [V13, V382]

================================

Block 0x3d3
[0x3d3:0x3dd]
---
Predecessors: [0x28f]
Successors: [0x3de, 0x3e2]
---
0x3d3 JUMPDEST
0x3d4 PUSH1 0x0
0x3d6 DUP2
0x3d7 DUP4
0x3d8 LT
0x3d9 ISZERO
0x3da PUSH2 0x3e2
0x3dd JUMPI
---
0x3d3: JUMPDEST 
0x3d4: V383 = 0x0
0x3d8: V384 = LT V266 V98
0x3d9: V385 = ISZERO V384
0x3da: V386 = 0x3e2
0x3dd: JUMPI 0x3e2 V385
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, S3, 0x2b2, V266, V98]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, S3, 0x2b2, V266, V98, 0x0]

================================

Block 0x3de
[0x3de:0x3e1]
---
Predecessors: [0x3d3]
Successors: []
---
0x3de PUSH1 0x0
0x3e0 DUP1
0x3e1 REVERT
---
0x3de: V387 = 0x0
0x3e1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, S4, 0x2b2, V266, V98, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, S4, 0x2b2, V266, V98, 0x0]

================================

Block 0x3e2
[0x3e2:0x3e7]
---
Predecessors: [0x3d3]
Successors: [0x2b2]
---
0x3e2 JUMPDEST
0x3e3 POP
0x3e4 SWAP1
0x3e5 SUB
0x3e6 SWAP1
0x3e7 JUMP
---
0x3e2: JUMPDEST 
0x3e5: V388 = SUB V266 V98
0x3e7: JUMP 0x2b2
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, S4, 0x2b2, V266, V98, 0x0]
Stack pops: 4
Stack additions: [V388]
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, S4, V388]

================================

Block 0x3e8
[0x3e8:0x3f4]
---
Predecessors: [0x2b2]
Successors: [0x3f5, 0x3f9]
---
0x3e8 JUMPDEST
0x3e9 PUSH1 0x0
0x3eb DUP3
0x3ec DUP3
0x3ed ADD
0x3ee DUP4
0x3ef GT
0x3f0 ISZERO
0x3f1 PUSH2 0x3f9
0x3f4 JUMPI
---
0x3e8: JUMPDEST 
0x3e9: V389 = 0x0
0x3ed: V390 = ADD V98 V282
0x3ef: V391 = GT V282 V390
0x3f0: V392 = ISZERO V391
0x3f1: V393 = 0x3f9
0x3f4: JUMPI 0x3f9 V392
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, S3, 0x2e1, V282, V98]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, S3, 0x2e1, V282, V98, 0x0]

================================

Block 0x3f5
[0x3f5:0x3f8]
---
Predecessors: [0x3e8]
Successors: []
---
0x3f5 PUSH1 0x0
0x3f7 DUP1
0x3f8 REVERT
---
0x3f5: V394 = 0x0
0x3f8: REVERT 0x0 0x0
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, S4, 0x2e1, V282, V98, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, S4, 0x2e1, V282, V98, 0x0]

================================

Block 0x3f9
[0x3f9:0x3fd]
---
Predecessors: [0x3e8]
Successors: [0x2e1]
---
0x3f9 JUMPDEST
0x3fa POP
0x3fb ADD
0x3fc SWAP1
0x3fd JUMP
---
0x3f9: JUMPDEST 
0x3fb: V395 = ADD V98 V282
0x3fd: JUMP 0x2e1
---
Entry stack: [V13, 0x82, V93, V96, V98, 0x0, S4, 0x2e1, V282, V98, 0x0]
Stack pops: 4
Stack additions: [V395]
Exit stack: [V13, 0x82, V93, V96, V98, 0x0, S4, V395]

================================

Block 0x3fe
[0x3fe:0x429]
---
Predecessors: []
Successors: []
---
0x3fe STOP
0x3ff LOG1
0x400 PUSH6 0x627a7a723058
0x407 SHA3
0x408 PUSH27 0x10576f1e99ae8fafa7bc6ed659a924bb13900bf34a1a7714480f42
0x424 MISSING 0xc5
0x425 MISSING 0xd2
0x426 SWAP6
0x427 EXTCODESIZE
0x428 STOP
0x429 MISSING 0x29
---
0x3fe: STOP 
0x3ff: LOG S0 S1 S2
0x400: V396 = 0x627a7a723058
0x407: V397 = SHA3 0x627a7a723058 S3
0x408: V398 = 0x10576f1e99ae8fafa7bc6ed659a924bb13900bf34a1a7714480f42
0x424: MISSING 0xc5
0x425: MISSING 0xd2
0x427: V399 = EXTCODESIZE S6
0x428: STOP 
0x429: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x10576f1e99ae8fafa7bc6ed659a924bb13900bf34a1a7714480f42, V397, V399, S1, S2, S3, S4, S5, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x4fb2e45d
Entry block: 0x63
Exit block: 0x82
Body: 0x63, 0x6a, 0x6e, 0x82, 0x159, 0x171, 0x175

Function 1:
Public function signature: 0x55a373d6
Entry block: 0x96
Exit block: 0x9d
Body: 0x96, 0x9d, 0xa1, 0xa9

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xc5
Exit block: 0xa9
Body: 0xa9, 0xc5, 0xcc, 0xd0, 0x247

Function 3:
Public function signature: 0xbeabacc8
Entry block: 0xd8
Exit block: 0x82
Body: 0x82, 0xd8, 0xdf, 0xe3, 0x256, 0x264, 0x268, 0x270, 0x28b, 0x28f, 0x2b2, 0x2e1, 0x3d3, 0x3de, 0x3e2, 0x3e8, 0x3f5, 0x3f9

Function 4:
Public function signature: 0xc2bc2efc
Entry block: 0x100
Exit block: 0x11f
Body: 0x100, 0x107, 0x10b, 0x11f, 0x306

Function 5:
Public function signature: 0xeee78595
Entry block: 0x131
Exit block: 0x82
Body: 0x82, 0x131, 0x138, 0x13c, 0x321, 0x330, 0x334, 0x34b, 0x34f, 0x3ab, 0x3af, 0x3bc, 0x3c0

Function 6:
Public fallback function
Entry block: 0x5e
Exit block: 0x5e
Body: 0x5e

Function 7:
Private function
Entry block: 0x1a7
Exit block: 0x239
Body: 0x1a7, 0x228, 0x239

