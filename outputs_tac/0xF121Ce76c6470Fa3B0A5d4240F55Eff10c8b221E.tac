Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x10b]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x10b
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x10b
0xa: JUMPI 0x10b V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x23]
---
Predecessors: [0x0]
Successors: [0x24, 0x11d]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH3 0x52992e
0x1e DUP2
0x1f EQ
0x20 PUSH2 0x11d
0x23 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x52992e
0x1f: V14 = EQ V12 0x52992e
0x20: V15 = 0x11d
0x23: JUMPI 0x11d V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x24
[0x24:0x2e]
---
Predecessors: [0xb]
Successors: [0x2f, 0x14e]
---
0x24 DUP1
0x25 PUSH4 0x168110f3
0x2a EQ
0x2b PUSH2 0x14e
0x2e JUMPI
---
0x25: V16 = 0x168110f3
0x2a: V17 = EQ 0x168110f3 V12
0x2b: V18 = 0x14e
0x2e: JUMPI 0x14e V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x2f
[0x2f:0x39]
---
Predecessors: [0x24]
Successors: [0x3a, 0x173]
---
0x2f DUP1
0x30 PUSH4 0x1ed5da2f
0x35 EQ
0x36 PUSH2 0x173
0x39 JUMPI
---
0x30: V19 = 0x1ed5da2f
0x35: V20 = EQ 0x1ed5da2f V12
0x36: V21 = 0x173
0x39: JUMPI 0x173 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3a
[0x3a:0x44]
---
Predecessors: [0x2f]
Successors: [0x45, 0x1a2]
---
0x3a DUP1
0x3b PUSH4 0x34fcf437
0x40 EQ
0x41 PUSH2 0x1a2
0x44 JUMPI
---
0x3b: V22 = 0x34fcf437
0x40: V23 = EQ 0x34fcf437 V12
0x41: V24 = 0x1a2
0x44: JUMPI 0x1a2 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x45
[0x45:0x4f]
---
Predecessors: [0x3a]
Successors: [0x50, 0x1ba]
---
0x45 DUP1
0x46 PUSH4 0x353559cb
0x4b EQ
0x4c PUSH2 0x1ba
0x4f JUMPI
---
0x46: V25 = 0x353559cb
0x4b: V26 = EQ 0x353559cb V12
0x4c: V27 = 0x1ba
0x4f: JUMPI 0x1ba V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x50
[0x50:0x5a]
---
Predecessors: [0x45]
Successors: [0x5b, 0x1e9]
---
0x50 DUP1
0x51 PUSH4 0x3bed33ce
0x56 EQ
0x57 PUSH2 0x1e9
0x5a JUMPI
---
0x51: V28 = 0x3bed33ce
0x56: V29 = EQ 0x3bed33ce V12
0x57: V30 = 0x1e9
0x5a: JUMPI 0x1e9 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5b
[0x5b:0x65]
---
Predecessors: [0x50]
Successors: [0x66, 0x201]
---
0x5b DUP1
0x5c PUSH4 0x42f0b07e
0x61 EQ
0x62 PUSH2 0x201
0x65 JUMPI
---
0x5c: V31 = 0x42f0b07e
0x61: V32 = EQ 0x42f0b07e V12
0x62: V33 = 0x201
0x65: JUMPI 0x201 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x66
[0x66:0x70]
---
Predecessors: [0x5b]
Successors: [0x71, 0x230]
---
0x66 DUP1
0x67 PUSH4 0x49e67544
0x6c EQ
0x6d PUSH2 0x230
0x70 JUMPI
---
0x67: V34 = 0x49e67544
0x6c: V35 = EQ 0x49e67544 V12
0x6d: V36 = 0x230
0x70: JUMPI 0x230 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x71
[0x71:0x7b]
---
Predecessors: [0x66]
Successors: [0x7c, 0x25f]
---
0x71 DUP1
0x72 PUSH4 0x5092f97e
0x77 EQ
0x78 PUSH2 0x25f
0x7b JUMPI
---
0x72: V37 = 0x5092f97e
0x77: V38 = EQ 0x5092f97e V12
0x78: V39 = 0x25f
0x7b: JUMPI 0x25f V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7c
[0x7c:0x86]
---
Predecessors: [0x71]
Successors: [0x87, 0x28e]
---
0x7c DUP1
0x7d PUSH4 0x5bdaa6dd
0x82 EQ
0x83 PUSH2 0x28e
0x86 JUMPI
---
0x7d: V40 = 0x5bdaa6dd
0x82: V41 = EQ 0x5bdaa6dd V12
0x83: V42 = 0x28e
0x86: JUMPI 0x28e V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x87
[0x87:0x91]
---
Predecessors: [0x7c]
Successors: [0x92, 0x2b3]
---
0x87 DUP1
0x88 PUSH4 0x78357e53
0x8d EQ
0x8e PUSH2 0x2b3
0x91 JUMPI
---
0x88: V43 = 0x78357e53
0x8d: V44 = EQ 0x78357e53 V12
0x8e: V45 = 0x2b3
0x91: JUMPI 0x2b3 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x92
[0x92:0x9c]
---
Predecessors: [0x87]
Successors: [0x9d, 0x2e2]
---
0x92 DUP1
0x93 PUSH4 0x89311e6f
0x98 EQ
0x99 PUSH2 0x2e2
0x9c JUMPI
---
0x93: V46 = 0x89311e6f
0x98: V47 = EQ 0x89311e6f V12
0x99: V48 = 0x2e2
0x9c: JUMPI 0x2e2 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9d
[0x9d:0xa7]
---
Predecessors: [0x92]
Successors: [0xa8, 0x2f7]
---
0x9d DUP1
0x9e PUSH4 0xbed54a24
0xa3 EQ
0xa4 PUSH2 0x2f7
0xa7 JUMPI
---
0x9e: V49 = 0xbed54a24
0xa3: V50 = EQ 0xbed54a24 V12
0xa4: V51 = 0x2f7
0xa7: JUMPI 0x2f7 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa8
[0xa8:0xb2]
---
Predecessors: [0x9d]
Successors: [0xb3, 0x326]
---
0xa8 DUP1
0xa9 PUSH4 0xc33818fd
0xae EQ
0xaf PUSH2 0x326
0xb2 JUMPI
---
0xa9: V52 = 0xc33818fd
0xae: V53 = EQ 0xc33818fd V12
0xaf: V54 = 0x326
0xb2: JUMPI 0x326 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb3
[0xb3:0xbd]
---
Predecessors: [0xa8]
Successors: [0xbe, 0x355]
---
0xb3 DUP1
0xb4 PUSH4 0xc4fdc6b8
0xb9 EQ
0xba PUSH2 0x355
0xbd JUMPI
---
0xb4: V55 = 0xc4fdc6b8
0xb9: V56 = EQ 0xc4fdc6b8 V12
0xba: V57 = 0x355
0xbd: JUMPI 0x355 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbe
[0xbe:0xc8]
---
Predecessors: [0xb3]
Successors: [0xc9, 0x36a]
---
0xbe DUP1
0xbf PUSH4 0xcd9063f6
0xc4 EQ
0xc5 PUSH2 0x36a
0xc8 JUMPI
---
0xbf: V58 = 0xcd9063f6
0xc4: V59 = EQ 0xcd9063f6 V12
0xc5: V60 = 0x36a
0xc8: JUMPI 0x36a V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xc9
[0xc9:0xd3]
---
Predecessors: [0xbe]
Successors: [0xd4, 0x38b]
---
0xc9 DUP1
0xca PUSH4 0xe04a8c08
0xcf EQ
0xd0 PUSH2 0x38b
0xd3 JUMPI
---
0xca: V61 = 0xe04a8c08
0xcf: V62 = EQ 0xe04a8c08 V12
0xd0: V63 = 0x38b
0xd3: JUMPI 0x38b V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd4
[0xd4:0xde]
---
Predecessors: [0xc9]
Successors: [0xdf, 0x3b0]
---
0xd4 DUP1
0xd5 PUSH4 0xe0d1ba52
0xda EQ
0xdb PUSH2 0x3b0
0xde JUMPI
---
0xd5: V64 = 0xe0d1ba52
0xda: V65 = EQ 0xe0d1ba52 V12
0xdb: V66 = 0x3b0
0xde: JUMPI 0x3b0 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xdf
[0xdf:0xe9]
---
Predecessors: [0xd4]
Successors: [0xea, 0x3d5]
---
0xdf DUP1
0xe0 PUSH4 0xec42f82f
0xe5 EQ
0xe6 PUSH2 0x3d5
0xe9 JUMPI
---
0xe0: V67 = 0xec42f82f
0xe5: V68 = EQ 0xec42f82f V12
0xe6: V69 = 0x3d5
0xe9: JUMPI 0x3d5 V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xea
[0xea:0xf4]
---
Predecessors: [0xdf]
Successors: [0xf5, 0x3ea]
---
0xea DUP1
0xeb PUSH4 0xf3b4eccb
0xf0 EQ
0xf1 PUSH2 0x3ea
0xf4 JUMPI
---
0xeb: V70 = 0xf3b4eccb
0xf0: V71 = EQ 0xf3b4eccb V12
0xf1: V72 = 0x3ea
0xf4: JUMPI 0x3ea V71
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xf5
[0xf5:0xff]
---
Predecessors: [0xea]
Successors: [0x100, 0x419]
---
0xf5 DUP1
0xf6 PUSH4 0xf869b3ff
0xfb EQ
0xfc PUSH2 0x419
0xff JUMPI
---
0xf6: V73 = 0xf869b3ff
0xfb: V74 = EQ 0xf869b3ff V12
0xfc: V75 = 0x419
0xff: JUMPI 0x419 V74
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x100
[0x100:0x10a]
---
Predecessors: [0xf5]
Successors: [0x10b, 0x448]
---
0x100 DUP1
0x101 PUSH4 0xfdea8e0b
0x106 EQ
0x107 PUSH2 0x448
0x10a JUMPI
---
0x101: V76 = 0xfdea8e0b
0x106: V77 = EQ 0xfdea8e0b V12
0x107: V78 = 0x448
0x10a: JUMPI 0x448 V77
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x10b
[0x10b:0x10b]
---
Predecessors: [0x0, 0x100]
Successors: [0x10c]
---
0x10b JUMPDEST
---
0x10b: JUMPDEST 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x10c
[0x10c:0x119]
---
Predecessors: [0x10b]
Successors: [0x477]
---
0x10c JUMPDEST
0x10d PUSH2 0x11a
0x110 CALLER
0x111 PUSH1 0x1
0x113 SLOAD
0x114 CALLVALUE
0x115 MUL
0x116 PUSH2 0x477
0x119 JUMP
---
0x10c: JUMPDEST 
0x10d: V79 = 0x11a
0x110: V80 = CALLER
0x111: V81 = 0x1
0x113: V82 = S[0x1]
0x114: V83 = CALLVALUE
0x115: V84 = MUL V83 V82
0x116: V85 = 0x477
0x119: JUMP 0x477
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11a, V80, V84]
Exit stack: [V12, 0x11a, V80, V84]

================================

Block 0x11a
[0x11a:0x11a]
---
Predecessors: [0x541, 0x608, 0x656, 0x7b4, 0x850, 0xa26, 0xdc8]
Successors: [0x11b]
---
0x11a JUMPDEST
---
0x11a: JUMPDEST 
---
Entry stack: [V12, 0x11a, V98, V100, V103, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V98, V100, V103, S0]

================================

Block 0x11b
[0x11b:0x11c]
---
Predecessors: [0x11a]
Successors: []
---
0x11b JUMPDEST
0x11c STOP
---
0x11b: JUMPDEST 
0x11c: STOP 
---
Entry stack: [V12, 0x11a, V98, V100, V103, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V98, V100, V103, S0]

================================

Block 0x11d
[0x11d:0x123]
---
Predecessors: [0xb]
Successors: [0x124, 0x128]
---
0x11d JUMPDEST
0x11e CALLVALUE
0x11f ISZERO
0x120 PUSH2 0x128
0x123 JUMPI
---
0x11d: JUMPDEST 
0x11e: V86 = CALLVALUE
0x11f: V87 = ISZERO V86
0x120: V88 = 0x128
0x123: JUMPI 0x128 V87
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x124
[0x124:0x127]
---
Predecessors: [0x11d]
Successors: []
---
0x124 PUSH1 0x0
0x126 DUP1
0x127 REVERT
---
0x124: V89 = 0x0
0x127: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x128
[0x128:0x14b]
---
Predecessors: [0x11d]
Successors: [0x545]
---
0x128 JUMPDEST
0x129 PUSH2 0x11a
0x12c PUSH1 0x4
0x12e DUP1
0x12f CALLDATALOAD
0x130 PUSH1 0x1
0x132 PUSH1 0xa0
0x134 PUSH1 0x2
0x136 EXP
0x137 SUB
0x138 AND
0x139 SWAP1
0x13a PUSH1 0x24
0x13c DUP1
0x13d CALLDATALOAD
0x13e SWAP2
0x13f PUSH1 0x44
0x141 CALLDATALOAD
0x142 SWAP2
0x143 DUP3
0x144 ADD
0x145 SWAP2
0x146 ADD
0x147 CALLDATALOAD
0x148 PUSH2 0x545
0x14b JUMP
---
0x128: JUMPDEST 
0x129: V90 = 0x11a
0x12c: V91 = 0x4
0x12f: V92 = CALLDATALOAD 0x4
0x130: V93 = 0x1
0x132: V94 = 0xa0
0x134: V95 = 0x2
0x136: V96 = EXP 0x2 0xa0
0x137: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x138: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x13a: V99 = 0x24
0x13d: V100 = CALLDATALOAD 0x24
0x13f: V101 = 0x44
0x141: V102 = CALLDATALOAD 0x44
0x144: V103 = ADD V102 0x24
0x146: V104 = ADD V102 0x4
0x147: V105 = CALLDATALOAD V104
0x148: V106 = 0x545
0x14b: JUMP 0x545
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11a, V98, V100, V103, V105]
Exit stack: [V12, 0x11a, V98, V100, V103, V105]

================================

Block 0x14c
[0x14c:0x14d]
---
Predecessors: []
Successors: []
---
0x14c JUMPDEST
0x14d STOP
---
0x14c: JUMPDEST 
0x14d: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x14e
[0x14e:0x154]
---
Predecessors: [0x24]
Successors: [0x155, 0x159]
---
0x14e JUMPDEST
0x14f CALLVALUE
0x150 ISZERO
0x151 PUSH2 0x159
0x154 JUMPI
---
0x14e: JUMPDEST 
0x14f: V107 = CALLVALUE
0x150: V108 = ISZERO V107
0x151: V109 = 0x159
0x154: JUMPI 0x159 V108
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x155
[0x155:0x158]
---
Predecessors: [0x14e]
Successors: []
---
0x155 PUSH1 0x0
0x157 DUP1
0x158 REVERT
---
0x155: V110 = 0x0
0x158: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x159
[0x159:0x160]
---
Predecessors: [0x14e]
Successors: [0x60e]
---
0x159 JUMPDEST
0x15a PUSH2 0x161
0x15d PUSH2 0x60e
0x160 JUMP
---
0x159: JUMPDEST 
0x15a: V111 = 0x161
0x15d: V112 = 0x60e
0x160: JUMP 0x60e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x161]
Exit stack: [V12, 0x161]

================================

Block 0x161
[0x161:0x172]
---
Predecessors: [0x60e, 0x706, 0xa2a, 0xa30]
Successors: []
---
0x161 JUMPDEST
0x162 PUSH1 0x40
0x164 MLOAD
0x165 SWAP1
0x166 DUP2
0x167 MSTORE
0x168 PUSH1 0x20
0x16a ADD
0x16b PUSH1 0x40
0x16d MLOAD
0x16e DUP1
0x16f SWAP2
0x170 SUB
0x171 SWAP1
0x172 RETURN
---
0x161: JUMPDEST 
0x162: V113 = 0x40
0x164: V114 = M[0x40]
0x167: M[V114] = S0
0x168: V115 = 0x20
0x16a: V116 = ADD 0x20 V114
0x16b: V117 = 0x40
0x16d: V118 = M[0x40]
0x170: V119 = SUB V116 V118
0x172: RETURN V118 V119
---
Entry stack: [V12, 0x161, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x161]

================================

Block 0x173
[0x173:0x179]
---
Predecessors: [0x2f]
Successors: [0x17a, 0x17e]
---
0x173 JUMPDEST
0x174 CALLVALUE
0x175 ISZERO
0x176 PUSH2 0x17e
0x179 JUMPI
---
0x173: JUMPDEST 
0x174: V120 = CALLVALUE
0x175: V121 = ISZERO V120
0x176: V122 = 0x17e
0x179: JUMPI 0x17e V121
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17a
[0x17a:0x17d]
---
Predecessors: [0x173]
Successors: []
---
0x17a PUSH1 0x0
0x17c DUP1
0x17d REVERT
---
0x17a: V123 = 0x0
0x17d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17e
[0x17e:0x185]
---
Predecessors: [0x173]
Successors: [0x61e]
---
0x17e JUMPDEST
0x17f PUSH2 0x186
0x182 PUSH2 0x61e
0x185 JUMP
---
0x17e: JUMPDEST 
0x17f: V124 = 0x186
0x182: V125 = 0x61e
0x185: JUMP 0x61e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x186
[0x186:0x1a1]
---
Predecessors: [0x61e, 0x659, 0x6d9, 0x6e8, 0x6f7, 0x70c, 0x7b6, 0x7c5, 0xdcc, 0xddb, 0xdea]
Successors: []
---
0x186 JUMPDEST
0x187 PUSH1 0x40
0x189 MLOAD
0x18a PUSH1 0x1
0x18c PUSH1 0xa0
0x18e PUSH1 0x2
0x190 EXP
0x191 SUB
0x192 SWAP1
0x193 SWAP2
0x194 AND
0x195 DUP2
0x196 MSTORE
0x197 PUSH1 0x20
0x199 ADD
0x19a PUSH1 0x40
0x19c MLOAD
0x19d DUP1
0x19e SWAP2
0x19f SUB
0x1a0 SWAP1
0x1a1 RETURN
---
0x186: JUMPDEST 
0x187: V126 = 0x40
0x189: V127 = M[0x40]
0x18a: V128 = 0x1
0x18c: V129 = 0xa0
0x18e: V130 = 0x2
0x190: V131 = EXP 0x2 0xa0
0x191: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x194: V133 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x196: M[V127] = V133
0x197: V134 = 0x20
0x199: V135 = ADD 0x20 V127
0x19a: V136 = 0x40
0x19c: V137 = M[0x40]
0x19f: V138 = SUB V135 V137
0x1a1: RETURN V137 V138
---
Entry stack: [V12, 0x186, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x186]

================================

Block 0x1a2
[0x1a2:0x1a8]
---
Predecessors: [0x3a]
Successors: [0x1a9, 0x1ad]
---
0x1a2 JUMPDEST
0x1a3 CALLVALUE
0x1a4 ISZERO
0x1a5 PUSH2 0x1ad
0x1a8 JUMPI
---
0x1a2: JUMPDEST 
0x1a3: V139 = CALLVALUE
0x1a4: V140 = ISZERO V139
0x1a5: V141 = 0x1ad
0x1a8: JUMPI 0x1ad V140
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a9
[0x1a9:0x1ac]
---
Predecessors: [0x1a2]
Successors: []
---
0x1a9 PUSH1 0x0
0x1ab DUP1
0x1ac REVERT
---
0x1a9: V142 = 0x0
0x1ac: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ad
[0x1ad:0x1b7]
---
Predecessors: [0x1a2]
Successors: [0x62d]
---
0x1ad JUMPDEST
0x1ae PUSH2 0x11a
0x1b1 PUSH1 0x4
0x1b3 CALLDATALOAD
0x1b4 PUSH2 0x62d
0x1b7 JUMP
---
0x1ad: JUMPDEST 
0x1ae: V143 = 0x11a
0x1b1: V144 = 0x4
0x1b3: V145 = CALLDATALOAD 0x4
0x1b4: V146 = 0x62d
0x1b7: JUMP 0x62d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11a, V145]
Exit stack: [V12, 0x11a, V145]

================================

Block 0x1b8
[0x1b8:0x1b9]
---
Predecessors: []
Successors: []
---
0x1b8 JUMPDEST
0x1b9 STOP
---
0x1b8: JUMPDEST 
0x1b9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1ba
[0x1ba:0x1c0]
---
Predecessors: [0x45]
Successors: [0x1c1, 0x1c5]
---
0x1ba JUMPDEST
0x1bb CALLVALUE
0x1bc ISZERO
0x1bd PUSH2 0x1c5
0x1c0 JUMPI
---
0x1ba: JUMPDEST 
0x1bb: V147 = CALLVALUE
0x1bc: V148 = ISZERO V147
0x1bd: V149 = 0x1c5
0x1c0: JUMPI 0x1c5 V148
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c1
[0x1c1:0x1c4]
---
Predecessors: [0x1ba]
Successors: []
---
0x1c1 PUSH1 0x0
0x1c3 DUP1
0x1c4 REVERT
---
0x1c1: V150 = 0x0
0x1c4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c5
[0x1c5:0x1cc]
---
Predecessors: [0x1ba]
Successors: [0x659]
---
0x1c5 JUMPDEST
0x1c6 PUSH2 0x186
0x1c9 PUSH2 0x659
0x1cc JUMP
---
0x1c5: JUMPDEST 
0x1c6: V151 = 0x186
0x1c9: V152 = 0x659
0x1cc: JUMP 0x659
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x1cd
[0x1cd:0x1e8]
---
Predecessors: []
Successors: []
---
0x1cd JUMPDEST
0x1ce PUSH1 0x40
0x1d0 MLOAD
0x1d1 PUSH1 0x1
0x1d3 PUSH1 0xa0
0x1d5 PUSH1 0x2
0x1d7 EXP
0x1d8 SUB
0x1d9 SWAP1
0x1da SWAP2
0x1db AND
0x1dc DUP2
0x1dd MSTORE
0x1de PUSH1 0x20
0x1e0 ADD
0x1e1 PUSH1 0x40
0x1e3 MLOAD
0x1e4 DUP1
0x1e5 SWAP2
0x1e6 SUB
0x1e7 SWAP1
0x1e8 RETURN
---
0x1cd: JUMPDEST 
0x1ce: V153 = 0x40
0x1d0: V154 = M[0x40]
0x1d1: V155 = 0x1
0x1d3: V156 = 0xa0
0x1d5: V157 = 0x2
0x1d7: V158 = EXP 0x2 0xa0
0x1d8: V159 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1db: V160 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1dd: M[V154] = V160
0x1de: V161 = 0x20
0x1e0: V162 = ADD 0x20 V154
0x1e1: V163 = 0x40
0x1e3: V164 = M[0x40]
0x1e6: V165 = SUB V162 V164
0x1e8: RETURN V164 V165
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1e9
[0x1e9:0x1ef]
---
Predecessors: [0x50]
Successors: [0x1f0, 0x1f4]
---
0x1e9 JUMPDEST
0x1ea CALLVALUE
0x1eb ISZERO
0x1ec PUSH2 0x1f4
0x1ef JUMPI
---
0x1e9: JUMPDEST 
0x1ea: V166 = CALLVALUE
0x1eb: V167 = ISZERO V166
0x1ec: V168 = 0x1f4
0x1ef: JUMPI 0x1f4 V167
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f0
[0x1f0:0x1f3]
---
Predecessors: [0x1e9]
Successors: []
---
0x1f0 PUSH1 0x0
0x1f2 DUP1
0x1f3 REVERT
---
0x1f0: V169 = 0x0
0x1f3: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f4
[0x1f4:0x1fe]
---
Predecessors: [0x1e9]
Successors: [0x668]
---
0x1f4 JUMPDEST
0x1f5 PUSH2 0x11a
0x1f8 PUSH1 0x4
0x1fa CALLDATALOAD
0x1fb PUSH2 0x668
0x1fe JUMP
---
0x1f4: JUMPDEST 
0x1f5: V170 = 0x11a
0x1f8: V171 = 0x4
0x1fa: V172 = CALLDATALOAD 0x4
0x1fb: V173 = 0x668
0x1fe: JUMP 0x668
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11a, V172]
Exit stack: [V12, 0x11a, V172]

================================

Block 0x1ff
[0x1ff:0x200]
---
Predecessors: []
Successors: []
---
0x1ff JUMPDEST
0x200 STOP
---
0x1ff: JUMPDEST 
0x200: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x201
[0x201:0x207]
---
Predecessors: [0x5b]
Successors: [0x208, 0x20c]
---
0x201 JUMPDEST
0x202 CALLVALUE
0x203 ISZERO
0x204 PUSH2 0x20c
0x207 JUMPI
---
0x201: JUMPDEST 
0x202: V174 = CALLVALUE
0x203: V175 = ISZERO V174
0x204: V176 = 0x20c
0x207: JUMPI 0x20c V175
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x208
[0x208:0x20b]
---
Predecessors: [0x201]
Successors: []
---
0x208 PUSH1 0x0
0x20a DUP1
0x20b REVERT
---
0x208: V177 = 0x0
0x20b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x20c
[0x20c:0x213]
---
Predecessors: [0x201]
Successors: [0x6d9]
---
0x20c JUMPDEST
0x20d PUSH2 0x186
0x210 PUSH2 0x6d9
0x213 JUMP
---
0x20c: JUMPDEST 
0x20d: V178 = 0x186
0x210: V179 = 0x6d9
0x213: JUMP 0x6d9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x214
[0x214:0x22f]
---
Predecessors: []
Successors: []
---
0x214 JUMPDEST
0x215 PUSH1 0x40
0x217 MLOAD
0x218 PUSH1 0x1
0x21a PUSH1 0xa0
0x21c PUSH1 0x2
0x21e EXP
0x21f SUB
0x220 SWAP1
0x221 SWAP2
0x222 AND
0x223 DUP2
0x224 MSTORE
0x225 PUSH1 0x20
0x227 ADD
0x228 PUSH1 0x40
0x22a MLOAD
0x22b DUP1
0x22c SWAP2
0x22d SUB
0x22e SWAP1
0x22f RETURN
---
0x214: JUMPDEST 
0x215: V180 = 0x40
0x217: V181 = M[0x40]
0x218: V182 = 0x1
0x21a: V183 = 0xa0
0x21c: V184 = 0x2
0x21e: V185 = EXP 0x2 0xa0
0x21f: V186 = SUB 0x10000000000000000000000000000000000000000 0x1
0x222: V187 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x224: M[V181] = V187
0x225: V188 = 0x20
0x227: V189 = ADD 0x20 V181
0x228: V190 = 0x40
0x22a: V191 = M[0x40]
0x22d: V192 = SUB V189 V191
0x22f: RETURN V191 V192
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x230
[0x230:0x236]
---
Predecessors: [0x66]
Successors: [0x237, 0x23b]
---
0x230 JUMPDEST
0x231 CALLVALUE
0x232 ISZERO
0x233 PUSH2 0x23b
0x236 JUMPI
---
0x230: JUMPDEST 
0x231: V193 = CALLVALUE
0x232: V194 = ISZERO V193
0x233: V195 = 0x23b
0x236: JUMPI 0x23b V194
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x237
[0x237:0x23a]
---
Predecessors: [0x230]
Successors: []
---
0x237 PUSH1 0x0
0x239 DUP1
0x23a REVERT
---
0x237: V196 = 0x0
0x23a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23b
[0x23b:0x242]
---
Predecessors: [0x230]
Successors: [0x6e8]
---
0x23b JUMPDEST
0x23c PUSH2 0x186
0x23f PUSH2 0x6e8
0x242 JUMP
---
0x23b: JUMPDEST 
0x23c: V197 = 0x186
0x23f: V198 = 0x6e8
0x242: JUMP 0x6e8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x243
[0x243:0x25e]
---
Predecessors: []
Successors: []
---
0x243 JUMPDEST
0x244 PUSH1 0x40
0x246 MLOAD
0x247 PUSH1 0x1
0x249 PUSH1 0xa0
0x24b PUSH1 0x2
0x24d EXP
0x24e SUB
0x24f SWAP1
0x250 SWAP2
0x251 AND
0x252 DUP2
0x253 MSTORE
0x254 PUSH1 0x20
0x256 ADD
0x257 PUSH1 0x40
0x259 MLOAD
0x25a DUP1
0x25b SWAP2
0x25c SUB
0x25d SWAP1
0x25e RETURN
---
0x243: JUMPDEST 
0x244: V199 = 0x40
0x246: V200 = M[0x40]
0x247: V201 = 0x1
0x249: V202 = 0xa0
0x24b: V203 = 0x2
0x24d: V204 = EXP 0x2 0xa0
0x24e: V205 = SUB 0x10000000000000000000000000000000000000000 0x1
0x251: V206 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x253: M[V200] = V206
0x254: V207 = 0x20
0x256: V208 = ADD 0x20 V200
0x257: V209 = 0x40
0x259: V210 = M[0x40]
0x25c: V211 = SUB V208 V210
0x25e: RETURN V210 V211
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x25f
[0x25f:0x265]
---
Predecessors: [0x71]
Successors: [0x266, 0x26a]
---
0x25f JUMPDEST
0x260 CALLVALUE
0x261 ISZERO
0x262 PUSH2 0x26a
0x265 JUMPI
---
0x25f: JUMPDEST 
0x260: V212 = CALLVALUE
0x261: V213 = ISZERO V212
0x262: V214 = 0x26a
0x265: JUMPI 0x26a V213
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x266
[0x266:0x269]
---
Predecessors: [0x25f]
Successors: []
---
0x266 PUSH1 0x0
0x268 DUP1
0x269 REVERT
---
0x266: V215 = 0x0
0x269: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26a
[0x26a:0x271]
---
Predecessors: [0x25f]
Successors: [0x6f7]
---
0x26a JUMPDEST
0x26b PUSH2 0x186
0x26e PUSH2 0x6f7
0x271 JUMP
---
0x26a: JUMPDEST 
0x26b: V216 = 0x186
0x26e: V217 = 0x6f7
0x271: JUMP 0x6f7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x272
[0x272:0x28d]
---
Predecessors: []
Successors: []
---
0x272 JUMPDEST
0x273 PUSH1 0x40
0x275 MLOAD
0x276 PUSH1 0x1
0x278 PUSH1 0xa0
0x27a PUSH1 0x2
0x27c EXP
0x27d SUB
0x27e SWAP1
0x27f SWAP2
0x280 AND
0x281 DUP2
0x282 MSTORE
0x283 PUSH1 0x20
0x285 ADD
0x286 PUSH1 0x40
0x288 MLOAD
0x289 DUP1
0x28a SWAP2
0x28b SUB
0x28c SWAP1
0x28d RETURN
---
0x272: JUMPDEST 
0x273: V218 = 0x40
0x275: V219 = M[0x40]
0x276: V220 = 0x1
0x278: V221 = 0xa0
0x27a: V222 = 0x2
0x27c: V223 = EXP 0x2 0xa0
0x27d: V224 = SUB 0x10000000000000000000000000000000000000000 0x1
0x280: V225 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x282: M[V219] = V225
0x283: V226 = 0x20
0x285: V227 = ADD 0x20 V219
0x286: V228 = 0x40
0x288: V229 = M[0x40]
0x28b: V230 = SUB V227 V229
0x28d: RETURN V229 V230
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x28e
[0x28e:0x294]
---
Predecessors: [0x7c]
Successors: [0x295, 0x299]
---
0x28e JUMPDEST
0x28f CALLVALUE
0x290 ISZERO
0x291 PUSH2 0x299
0x294 JUMPI
---
0x28e: JUMPDEST 
0x28f: V231 = CALLVALUE
0x290: V232 = ISZERO V231
0x291: V233 = 0x299
0x294: JUMPI 0x299 V232
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x295
[0x295:0x298]
---
Predecessors: [0x28e]
Successors: []
---
0x295 PUSH1 0x0
0x297 DUP1
0x298 REVERT
---
0x295: V234 = 0x0
0x298: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x299
[0x299:0x2a0]
---
Predecessors: [0x28e]
Successors: [0x706]
---
0x299 JUMPDEST
0x29a PUSH2 0x161
0x29d PUSH2 0x706
0x2a0 JUMP
---
0x299: JUMPDEST 
0x29a: V235 = 0x161
0x29d: V236 = 0x706
0x2a0: JUMP 0x706
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x161]
Exit stack: [V12, 0x161]

================================

Block 0x2a1
[0x2a1:0x2b2]
---
Predecessors: []
Successors: []
---
0x2a1 JUMPDEST
0x2a2 PUSH1 0x40
0x2a4 MLOAD
0x2a5 SWAP1
0x2a6 DUP2
0x2a7 MSTORE
0x2a8 PUSH1 0x20
0x2aa ADD
0x2ab PUSH1 0x40
0x2ad MLOAD
0x2ae DUP1
0x2af SWAP2
0x2b0 SUB
0x2b1 SWAP1
0x2b2 RETURN
---
0x2a1: JUMPDEST 
0x2a2: V237 = 0x40
0x2a4: V238 = M[0x40]
0x2a7: M[V238] = S0
0x2a8: V239 = 0x20
0x2aa: V240 = ADD 0x20 V238
0x2ab: V241 = 0x40
0x2ad: V242 = M[0x40]
0x2b0: V243 = SUB V240 V242
0x2b2: RETURN V242 V243
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b3
[0x2b3:0x2b9]
---
Predecessors: [0x87]
Successors: [0x2ba, 0x2be]
---
0x2b3 JUMPDEST
0x2b4 CALLVALUE
0x2b5 ISZERO
0x2b6 PUSH2 0x2be
0x2b9 JUMPI
---
0x2b3: JUMPDEST 
0x2b4: V244 = CALLVALUE
0x2b5: V245 = ISZERO V244
0x2b6: V246 = 0x2be
0x2b9: JUMPI 0x2be V245
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ba
[0x2ba:0x2bd]
---
Predecessors: [0x2b3]
Successors: []
---
0x2ba PUSH1 0x0
0x2bc DUP1
0x2bd REVERT
---
0x2ba: V247 = 0x0
0x2bd: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2be
[0x2be:0x2c5]
---
Predecessors: [0x2b3]
Successors: [0x70c]
---
0x2be JUMPDEST
0x2bf PUSH2 0x186
0x2c2 PUSH2 0x70c
0x2c5 JUMP
---
0x2be: JUMPDEST 
0x2bf: V248 = 0x186
0x2c2: V249 = 0x70c
0x2c5: JUMP 0x70c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x2c6
[0x2c6:0x2e1]
---
Predecessors: []
Successors: []
---
0x2c6 JUMPDEST
0x2c7 PUSH1 0x40
0x2c9 MLOAD
0x2ca PUSH1 0x1
0x2cc PUSH1 0xa0
0x2ce PUSH1 0x2
0x2d0 EXP
0x2d1 SUB
0x2d2 SWAP1
0x2d3 SWAP2
0x2d4 AND
0x2d5 DUP2
0x2d6 MSTORE
0x2d7 PUSH1 0x20
0x2d9 ADD
0x2da PUSH1 0x40
0x2dc MLOAD
0x2dd DUP1
0x2de SWAP2
0x2df SUB
0x2e0 SWAP1
0x2e1 RETURN
---
0x2c6: JUMPDEST 
0x2c7: V250 = 0x40
0x2c9: V251 = M[0x40]
0x2ca: V252 = 0x1
0x2cc: V253 = 0xa0
0x2ce: V254 = 0x2
0x2d0: V255 = EXP 0x2 0xa0
0x2d1: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d4: V257 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x2d6: M[V251] = V257
0x2d7: V258 = 0x20
0x2d9: V259 = ADD 0x20 V251
0x2da: V260 = 0x40
0x2dc: V261 = M[0x40]
0x2df: V262 = SUB V259 V261
0x2e1: RETURN V261 V262
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2e2
[0x2e2:0x2e8]
---
Predecessors: [0x92]
Successors: [0x2e9, 0x2ed]
---
0x2e2 JUMPDEST
0x2e3 CALLVALUE
0x2e4 ISZERO
0x2e5 PUSH2 0x2ed
0x2e8 JUMPI
---
0x2e2: JUMPDEST 
0x2e3: V263 = CALLVALUE
0x2e4: V264 = ISZERO V263
0x2e5: V265 = 0x2ed
0x2e8: JUMPI 0x2ed V264
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e9
[0x2e9:0x2ec]
---
Predecessors: [0x2e2]
Successors: []
---
0x2e9 PUSH1 0x0
0x2eb DUP1
0x2ec REVERT
---
0x2e9: V266 = 0x0
0x2ec: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ed
[0x2ed:0x2f4]
---
Predecessors: [0x2e2]
Successors: [0x71b]
---
0x2ed JUMPDEST
0x2ee PUSH2 0x11a
0x2f1 PUSH2 0x71b
0x2f4 JUMP
---
0x2ed: JUMPDEST 
0x2ee: V267 = 0x11a
0x2f1: V268 = 0x71b
0x2f4: JUMP 0x71b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11a]
Exit stack: [V12, 0x11a]

================================

Block 0x2f5
[0x2f5:0x2f6]
---
Predecessors: []
Successors: []
---
0x2f5 JUMPDEST
0x2f6 STOP
---
0x2f5: JUMPDEST 
0x2f6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x2f7
[0x2f7:0x2fd]
---
Predecessors: [0x9d]
Successors: [0x2fe, 0x302]
---
0x2f7 JUMPDEST
0x2f8 CALLVALUE
0x2f9 ISZERO
0x2fa PUSH2 0x302
0x2fd JUMPI
---
0x2f7: JUMPDEST 
0x2f8: V269 = CALLVALUE
0x2f9: V270 = ISZERO V269
0x2fa: V271 = 0x302
0x2fd: JUMPI 0x302 V270
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2fe
[0x2fe:0x301]
---
Predecessors: [0x2f7]
Successors: []
---
0x2fe PUSH1 0x0
0x300 DUP1
0x301 REVERT
---
0x2fe: V272 = 0x0
0x301: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x302
[0x302:0x309]
---
Predecessors: [0x2f7]
Successors: [0x7b6]
---
0x302 JUMPDEST
0x303 PUSH2 0x186
0x306 PUSH2 0x7b6
0x309 JUMP
---
0x302: JUMPDEST 
0x303: V273 = 0x186
0x306: V274 = 0x7b6
0x309: JUMP 0x7b6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x30a
[0x30a:0x325]
---
Predecessors: []
Successors: []
---
0x30a JUMPDEST
0x30b PUSH1 0x40
0x30d MLOAD
0x30e PUSH1 0x1
0x310 PUSH1 0xa0
0x312 PUSH1 0x2
0x314 EXP
0x315 SUB
0x316 SWAP1
0x317 SWAP2
0x318 AND
0x319 DUP2
0x31a MSTORE
0x31b PUSH1 0x20
0x31d ADD
0x31e PUSH1 0x40
0x320 MLOAD
0x321 DUP1
0x322 SWAP2
0x323 SUB
0x324 SWAP1
0x325 RETURN
---
0x30a: JUMPDEST 
0x30b: V275 = 0x40
0x30d: V276 = M[0x40]
0x30e: V277 = 0x1
0x310: V278 = 0xa0
0x312: V279 = 0x2
0x314: V280 = EXP 0x2 0xa0
0x315: V281 = SUB 0x10000000000000000000000000000000000000000 0x1
0x318: V282 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x31a: M[V276] = V282
0x31b: V283 = 0x20
0x31d: V284 = ADD 0x20 V276
0x31e: V285 = 0x40
0x320: V286 = M[0x40]
0x323: V287 = SUB V284 V286
0x325: RETURN V286 V287
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x326
[0x326:0x32c]
---
Predecessors: [0xa8]
Successors: [0x32d, 0x331]
---
0x326 JUMPDEST
0x327 CALLVALUE
0x328 ISZERO
0x329 PUSH2 0x331
0x32c JUMPI
---
0x326: JUMPDEST 
0x327: V288 = CALLVALUE
0x328: V289 = ISZERO V288
0x329: V290 = 0x331
0x32c: JUMPI 0x331 V289
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x32d
[0x32d:0x330]
---
Predecessors: [0x326]
Successors: []
---
0x32d PUSH1 0x0
0x32f DUP1
0x330 REVERT
---
0x32d: V291 = 0x0
0x330: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x331
[0x331:0x338]
---
Predecessors: [0x326]
Successors: [0x7c5]
---
0x331 JUMPDEST
0x332 PUSH2 0x186
0x335 PUSH2 0x7c5
0x338 JUMP
---
0x331: JUMPDEST 
0x332: V292 = 0x186
0x335: V293 = 0x7c5
0x338: JUMP 0x7c5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x339
[0x339:0x354]
---
Predecessors: []
Successors: []
---
0x339 JUMPDEST
0x33a PUSH1 0x40
0x33c MLOAD
0x33d PUSH1 0x1
0x33f PUSH1 0xa0
0x341 PUSH1 0x2
0x343 EXP
0x344 SUB
0x345 SWAP1
0x346 SWAP2
0x347 AND
0x348 DUP2
0x349 MSTORE
0x34a PUSH1 0x20
0x34c ADD
0x34d PUSH1 0x40
0x34f MLOAD
0x350 DUP1
0x351 SWAP2
0x352 SUB
0x353 SWAP1
0x354 RETURN
---
0x339: JUMPDEST 
0x33a: V294 = 0x40
0x33c: V295 = M[0x40]
0x33d: V296 = 0x1
0x33f: V297 = 0xa0
0x341: V298 = 0x2
0x343: V299 = EXP 0x2 0xa0
0x344: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x347: V301 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x349: M[V295] = V301
0x34a: V302 = 0x20
0x34c: V303 = ADD 0x20 V295
0x34d: V304 = 0x40
0x34f: V305 = M[0x40]
0x352: V306 = SUB V303 V305
0x354: RETURN V305 V306
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x355
[0x355:0x35b]
---
Predecessors: [0xb3]
Successors: [0x35c, 0x360]
---
0x355 JUMPDEST
0x356 CALLVALUE
0x357 ISZERO
0x358 PUSH2 0x360
0x35b JUMPI
---
0x355: JUMPDEST 
0x356: V307 = CALLVALUE
0x357: V308 = ISZERO V307
0x358: V309 = 0x360
0x35b: JUMPI 0x360 V308
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35c
[0x35c:0x35f]
---
Predecessors: [0x355]
Successors: []
---
0x35c PUSH1 0x0
0x35e DUP1
0x35f REVERT
---
0x35c: V310 = 0x0
0x35f: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x360
[0x360:0x367]
---
Predecessors: [0x355]
Successors: [0x7d4]
---
0x360 JUMPDEST
0x361 PUSH2 0x11a
0x364 PUSH2 0x7d4
0x367 JUMP
---
0x360: JUMPDEST 
0x361: V311 = 0x11a
0x364: V312 = 0x7d4
0x367: JUMP 0x7d4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11a]
Exit stack: [V12, 0x11a]

================================

Block 0x368
[0x368:0x369]
---
Predecessors: []
Successors: []
---
0x368 JUMPDEST
0x369 STOP
---
0x368: JUMPDEST 
0x369: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x36a
[0x36a:0x370]
---
Predecessors: [0xbe]
Successors: [0x371, 0x375]
---
0x36a JUMPDEST
0x36b CALLVALUE
0x36c ISZERO
0x36d PUSH2 0x375
0x370 JUMPI
---
0x36a: JUMPDEST 
0x36b: V313 = CALLVALUE
0x36c: V314 = ISZERO V313
0x36d: V315 = 0x375
0x370: JUMPI 0x375 V314
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x371
[0x371:0x374]
---
Predecessors: [0x36a]
Successors: []
---
0x371 PUSH1 0x0
0x373 DUP1
0x374 REVERT
---
0x371: V316 = 0x0
0x374: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x375
[0x375:0x388]
---
Predecessors: [0x36a]
Successors: [0x852]
---
0x375 JUMPDEST
0x376 PUSH2 0x11a
0x379 PUSH1 0x1
0x37b PUSH1 0xa0
0x37d PUSH1 0x2
0x37f EXP
0x380 SUB
0x381 PUSH1 0x4
0x383 CALLDATALOAD
0x384 AND
0x385 PUSH2 0x852
0x388 JUMP
---
0x375: JUMPDEST 
0x376: V317 = 0x11a
0x379: V318 = 0x1
0x37b: V319 = 0xa0
0x37d: V320 = 0x2
0x37f: V321 = EXP 0x2 0xa0
0x380: V322 = SUB 0x10000000000000000000000000000000000000000 0x1
0x381: V323 = 0x4
0x383: V324 = CALLDATALOAD 0x4
0x384: V325 = AND V324 0xffffffffffffffffffffffffffffffffffffffff
0x385: V326 = 0x852
0x388: JUMP 0x852
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11a, V325]
Exit stack: [V12, 0x11a, V325]

================================

Block 0x389
[0x389:0x38a]
---
Predecessors: []
Successors: []
---
0x389 JUMPDEST
0x38a STOP
---
0x389: JUMPDEST 
0x38a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x38b
[0x38b:0x391]
---
Predecessors: [0xc9]
Successors: [0x392, 0x396]
---
0x38b JUMPDEST
0x38c CALLVALUE
0x38d ISZERO
0x38e PUSH2 0x396
0x391 JUMPI
---
0x38b: JUMPDEST 
0x38c: V327 = CALLVALUE
0x38d: V328 = ISZERO V327
0x38e: V329 = 0x396
0x391: JUMPI 0x396 V328
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x392
[0x392:0x395]
---
Predecessors: [0x38b]
Successors: []
---
0x392 PUSH1 0x0
0x394 DUP1
0x395 REVERT
---
0x392: V330 = 0x0
0x395: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x396
[0x396:0x39d]
---
Predecessors: [0x38b]
Successors: [0xa2a]
---
0x396 JUMPDEST
0x397 PUSH2 0x161
0x39a PUSH2 0xa2a
0x39d JUMP
---
0x396: JUMPDEST 
0x397: V331 = 0x161
0x39a: V332 = 0xa2a
0x39d: JUMP 0xa2a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x161]
Exit stack: [V12, 0x161]

================================

Block 0x39e
[0x39e:0x3af]
---
Predecessors: []
Successors: []
---
0x39e JUMPDEST
0x39f PUSH1 0x40
0x3a1 MLOAD
0x3a2 SWAP1
0x3a3 DUP2
0x3a4 MSTORE
0x3a5 PUSH1 0x20
0x3a7 ADD
0x3a8 PUSH1 0x40
0x3aa MLOAD
0x3ab DUP1
0x3ac SWAP2
0x3ad SUB
0x3ae SWAP1
0x3af RETURN
---
0x39e: JUMPDEST 
0x39f: V333 = 0x40
0x3a1: V334 = M[0x40]
0x3a4: M[V334] = S0
0x3a5: V335 = 0x20
0x3a7: V336 = ADD 0x20 V334
0x3a8: V337 = 0x40
0x3aa: V338 = M[0x40]
0x3ad: V339 = SUB V336 V338
0x3af: RETURN V338 V339
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3b0
[0x3b0:0x3b6]
---
Predecessors: [0xd4]
Successors: [0x3b7, 0x3bb]
---
0x3b0 JUMPDEST
0x3b1 CALLVALUE
0x3b2 ISZERO
0x3b3 PUSH2 0x3bb
0x3b6 JUMPI
---
0x3b0: JUMPDEST 
0x3b1: V340 = CALLVALUE
0x3b2: V341 = ISZERO V340
0x3b3: V342 = 0x3bb
0x3b6: JUMPI 0x3bb V341
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3b7
[0x3b7:0x3ba]
---
Predecessors: [0x3b0]
Successors: []
---
0x3b7 PUSH1 0x0
0x3b9 DUP1
0x3ba REVERT
---
0x3b7: V343 = 0x0
0x3ba: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3bb
[0x3bb:0x3c2]
---
Predecessors: [0x3b0]
Successors: [0xa30]
---
0x3bb JUMPDEST
0x3bc PUSH2 0x161
0x3bf PUSH2 0xa30
0x3c2 JUMP
---
0x3bb: JUMPDEST 
0x3bc: V344 = 0x161
0x3bf: V345 = 0xa30
0x3c2: JUMP 0xa30
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x161]
Exit stack: [V12, 0x161]

================================

Block 0x3c3
[0x3c3:0x3d4]
---
Predecessors: []
Successors: []
---
0x3c3 JUMPDEST
0x3c4 PUSH1 0x40
0x3c6 MLOAD
0x3c7 SWAP1
0x3c8 DUP2
0x3c9 MSTORE
0x3ca PUSH1 0x20
0x3cc ADD
0x3cd PUSH1 0x40
0x3cf MLOAD
0x3d0 DUP1
0x3d1 SWAP2
0x3d2 SUB
0x3d3 SWAP1
0x3d4 RETURN
---
0x3c3: JUMPDEST 
0x3c4: V346 = 0x40
0x3c6: V347 = M[0x40]
0x3c9: M[V347] = S0
0x3ca: V348 = 0x20
0x3cc: V349 = ADD 0x20 V347
0x3cd: V350 = 0x40
0x3cf: V351 = M[0x40]
0x3d2: V352 = SUB V349 V351
0x3d4: RETURN V351 V352
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3d5
[0x3d5:0x3db]
---
Predecessors: [0xdf]
Successors: [0x3dc, 0x3e0]
---
0x3d5 JUMPDEST
0x3d6 CALLVALUE
0x3d7 ISZERO
0x3d8 PUSH2 0x3e0
0x3db JUMPI
---
0x3d5: JUMPDEST 
0x3d6: V353 = CALLVALUE
0x3d7: V354 = ISZERO V353
0x3d8: V355 = 0x3e0
0x3db: JUMPI 0x3e0 V354
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3dc
[0x3dc:0x3df]
---
Predecessors: [0x3d5]
Successors: []
---
0x3dc PUSH1 0x0
0x3de DUP1
0x3df REVERT
---
0x3dc: V356 = 0x0
0x3df: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3e0
[0x3e0:0x3e7]
---
Predecessors: [0x3d5]
Successors: [0xa36]
---
0x3e0 JUMPDEST
0x3e1 PUSH2 0x11a
0x3e4 PUSH2 0xa36
0x3e7 JUMP
---
0x3e0: JUMPDEST 
0x3e1: V357 = 0x11a
0x3e4: V358 = 0xa36
0x3e7: JUMP 0xa36
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x11a]
Exit stack: [V12, 0x11a]

================================

Block 0x3e8
[0x3e8:0x3e9]
---
Predecessors: []
Successors: []
---
0x3e8 JUMPDEST
0x3e9 STOP
---
0x3e8: JUMPDEST 
0x3e9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3ea
[0x3ea:0x3f0]
---
Predecessors: [0xea]
Successors: [0x3f1, 0x3f5]
---
0x3ea JUMPDEST
0x3eb CALLVALUE
0x3ec ISZERO
0x3ed PUSH2 0x3f5
0x3f0 JUMPI
---
0x3ea: JUMPDEST 
0x3eb: V359 = CALLVALUE
0x3ec: V360 = ISZERO V359
0x3ed: V361 = 0x3f5
0x3f0: JUMPI 0x3f5 V360
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f1
[0x3f1:0x3f4]
---
Predecessors: [0x3ea]
Successors: []
---
0x3f1 PUSH1 0x0
0x3f3 DUP1
0x3f4 REVERT
---
0x3f1: V362 = 0x0
0x3f4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f5
[0x3f5:0x3fc]
---
Predecessors: [0x3ea]
Successors: [0xdcc]
---
0x3f5 JUMPDEST
0x3f6 PUSH2 0x186
0x3f9 PUSH2 0xdcc
0x3fc JUMP
---
0x3f5: JUMPDEST 
0x3f6: V363 = 0x186
0x3f9: V364 = 0xdcc
0x3fc: JUMP 0xdcc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x3fd
[0x3fd:0x418]
---
Predecessors: []
Successors: []
---
0x3fd JUMPDEST
0x3fe PUSH1 0x40
0x400 MLOAD
0x401 PUSH1 0x1
0x403 PUSH1 0xa0
0x405 PUSH1 0x2
0x407 EXP
0x408 SUB
0x409 SWAP1
0x40a SWAP2
0x40b AND
0x40c DUP2
0x40d MSTORE
0x40e PUSH1 0x20
0x410 ADD
0x411 PUSH1 0x40
0x413 MLOAD
0x414 DUP1
0x415 SWAP2
0x416 SUB
0x417 SWAP1
0x418 RETURN
---
0x3fd: JUMPDEST 
0x3fe: V365 = 0x40
0x400: V366 = M[0x40]
0x401: V367 = 0x1
0x403: V368 = 0xa0
0x405: V369 = 0x2
0x407: V370 = EXP 0x2 0xa0
0x408: V371 = SUB 0x10000000000000000000000000000000000000000 0x1
0x40b: V372 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x40d: M[V366] = V372
0x40e: V373 = 0x20
0x410: V374 = ADD 0x20 V366
0x411: V375 = 0x40
0x413: V376 = M[0x40]
0x416: V377 = SUB V374 V376
0x418: RETURN V376 V377
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x419
[0x419:0x41f]
---
Predecessors: [0xf5]
Successors: [0x420, 0x424]
---
0x419 JUMPDEST
0x41a CALLVALUE
0x41b ISZERO
0x41c PUSH2 0x424
0x41f JUMPI
---
0x419: JUMPDEST 
0x41a: V378 = CALLVALUE
0x41b: V379 = ISZERO V378
0x41c: V380 = 0x424
0x41f: JUMPI 0x424 V379
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x420
[0x420:0x423]
---
Predecessors: [0x419]
Successors: []
---
0x420 PUSH1 0x0
0x422 DUP1
0x423 REVERT
---
0x420: V381 = 0x0
0x423: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x424
[0x424:0x42b]
---
Predecessors: [0x419]
Successors: [0xddb]
---
0x424 JUMPDEST
0x425 PUSH2 0x186
0x428 PUSH2 0xddb
0x42b JUMP
---
0x424: JUMPDEST 
0x425: V382 = 0x186
0x428: V383 = 0xddb
0x42b: JUMP 0xddb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x42c
[0x42c:0x447]
---
Predecessors: []
Successors: []
---
0x42c JUMPDEST
0x42d PUSH1 0x40
0x42f MLOAD
0x430 PUSH1 0x1
0x432 PUSH1 0xa0
0x434 PUSH1 0x2
0x436 EXP
0x437 SUB
0x438 SWAP1
0x439 SWAP2
0x43a AND
0x43b DUP2
0x43c MSTORE
0x43d PUSH1 0x20
0x43f ADD
0x440 PUSH1 0x40
0x442 MLOAD
0x443 DUP1
0x444 SWAP2
0x445 SUB
0x446 SWAP1
0x447 RETURN
---
0x42c: JUMPDEST 
0x42d: V384 = 0x40
0x42f: V385 = M[0x40]
0x430: V386 = 0x1
0x432: V387 = 0xa0
0x434: V388 = 0x2
0x436: V389 = EXP 0x2 0xa0
0x437: V390 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43a: V391 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x43c: M[V385] = V391
0x43d: V392 = 0x20
0x43f: V393 = ADD 0x20 V385
0x440: V394 = 0x40
0x442: V395 = M[0x40]
0x445: V396 = SUB V393 V395
0x447: RETURN V395 V396
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x448
[0x448:0x44e]
---
Predecessors: [0x100]
Successors: [0x44f, 0x453]
---
0x448 JUMPDEST
0x449 CALLVALUE
0x44a ISZERO
0x44b PUSH2 0x453
0x44e JUMPI
---
0x448: JUMPDEST 
0x449: V397 = CALLVALUE
0x44a: V398 = ISZERO V397
0x44b: V399 = 0x453
0x44e: JUMPI 0x453 V398
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x44f
[0x44f:0x452]
---
Predecessors: [0x448]
Successors: []
---
0x44f PUSH1 0x0
0x451 DUP1
0x452 REVERT
---
0x44f: V400 = 0x0
0x452: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x453
[0x453:0x45a]
---
Predecessors: [0x448]
Successors: [0xdea]
---
0x453 JUMPDEST
0x454 PUSH2 0x186
0x457 PUSH2 0xdea
0x45a JUMP
---
0x453: JUMPDEST 
0x454: V401 = 0x186
0x457: V402 = 0xdea
0x45a: JUMP 0xdea
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x186]
Exit stack: [V12, 0x186]

================================

Block 0x45b
[0x45b:0x476]
---
Predecessors: []
Successors: []
---
0x45b JUMPDEST
0x45c PUSH1 0x40
0x45e MLOAD
0x45f PUSH1 0x1
0x461 PUSH1 0xa0
0x463 PUSH1 0x2
0x465 EXP
0x466 SUB
0x467 SWAP1
0x468 SWAP2
0x469 AND
0x46a DUP2
0x46b MSTORE
0x46c PUSH1 0x20
0x46e ADD
0x46f PUSH1 0x40
0x471 MLOAD
0x472 DUP1
0x473 SWAP2
0x474 SUB
0x475 SWAP1
0x476 RETURN
---
0x45b: JUMPDEST 
0x45c: V403 = 0x40
0x45e: V404 = M[0x40]
0x45f: V405 = 0x1
0x461: V406 = 0xa0
0x463: V407 = 0x2
0x465: V408 = EXP 0x2 0xa0
0x466: V409 = SUB 0x10000000000000000000000000000000000000000 0x1
0x469: V410 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x46b: M[V404] = V410
0x46c: V411 = 0x20
0x46e: V412 = ADD 0x20 V404
0x46f: V413 = 0x40
0x471: V414 = M[0x40]
0x474: V415 = SUB V412 V414
0x476: RETURN V414 V415
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x477
[0x477:0x479]
---
Predecessors: [0x10c, 0x594]
Successors: [0x47a]
---
0x477 JUMPDEST
0x478 PUSH1 0x1
---
0x477: JUMPDEST 
0x478: V416 = 0x1
---
Entry stack: [V12, 0x11a, V98, V100, V103, S3, {0x11a, 0x59e}, S1, S0]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x11a, V98, V100, V103, S3, {0x11a, 0x59e}, S1, S0, 0x1]

================================

Block 0x47a
[0x47a:0x489]
---
Predecessors: [0x477]
Successors: [0x48a, 0x48b]
---
0x47a JUMPDEST
0x47b PUSH1 0x13
0x47d SLOAD
0x47e PUSH1 0xff
0x480 AND
0x481 PUSH1 0x3
0x483 DUP2
0x484 GT
0x485 ISZERO
0x486 PUSH2 0x48b
0x489 JUMPI
---
0x47a: JUMPDEST 
0x47b: V417 = 0x13
0x47d: V418 = S[0x13]
0x47e: V419 = 0xff
0x480: V420 = AND 0xff V418
0x481: V421 = 0x3
0x484: V422 = GT V420 0x3
0x485: V423 = ISZERO V422
0x486: V424 = 0x48b
0x489: JUMPI 0x48b V423
---
Entry stack: [V12, 0x11a, V98, V100, V103, S4, {0x11a, 0x59e}, S2, S1, 0x1]
Stack pops: 0
Stack additions: [V420]
Exit stack: [V12, 0x11a, V98, V100, V103, S4, {0x11a, 0x59e}, S2, S1, 0x1, V420]

================================

Block 0x48a
[0x48a:0x48a]
---
Predecessors: [0x47a]
Successors: []
---
0x48a INVALID
---
0x48a: INVALID 
---
Entry stack: [V12, 0x11a, V98, V100, V103, S5, {0x11a, 0x59e}, S3, S2, 0x1, V420]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V98, V100, V103, S5, {0x11a, 0x59e}, S3, S2, 0x1, V420]

================================

Block 0x48b
[0x48b:0x490]
---
Predecessors: [0x47a]
Successors: [0x491, 0x495]
---
0x48b JUMPDEST
0x48c EQ
0x48d PUSH2 0x495
0x490 JUMPI
---
0x48b: JUMPDEST 
0x48c: V425 = EQ V420 0x1
0x48d: V426 = 0x495
0x490: JUMPI 0x495 V425
---
Entry stack: [V12, 0x11a, V98, V100, V103, S5, {0x11a, 0x59e}, S3, S2, 0x1, V420]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x11a, V98, V100, V103, S5, {0x11a, 0x59e}, S3, S2]

================================

Block 0x491
[0x491:0x494]
---
Predecessors: [0x48b]
Successors: []
---
0x491 PUSH1 0x0
0x493 DUP1
0x494 REVERT
---
0x491: V427 = 0x0
0x494: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V98, V100, V103, S3, {0x11a, 0x59e}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V98, V100, V103, S3, {0x11a, 0x59e}, S1, S0]

================================

Block 0x495
[0x495:0x49d]
---
Predecessors: [0x48b]
Successors: [0x49e, 0x4a2]
---
0x495 JUMPDEST
0x496 PUSH1 0x0
0x498 DUP2
0x499 GT
0x49a PUSH2 0x4a2
0x49d JUMPI
---
0x495: JUMPDEST 
0x496: V428 = 0x0
0x499: V429 = GT S0 0x0
0x49a: V430 = 0x4a2
0x49d: JUMPI 0x4a2 V429
---
Entry stack: [V12, 0x11a, V98, V100, V103, S3, {0x11a, 0x59e}, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x11a, V98, V100, V103, S3, {0x11a, 0x59e}, S1, S0]

================================

Block 0x49e
[0x49e:0x4a1]
---
Predecessors: [0x495]
Successors: []
---
0x49e PUSH1 0x0
0x4a0 DUP1
0x4a1 REVERT
---
0x49e: V431 = 0x0
0x4a1: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V98, V100, V103, S3, {0x11a, 0x59e}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V98, V100, V103, S3, {0x11a, 0x59e}, S1, S0]

================================

Block 0x4a2
[0x4a2:0x4bb]
---
Predecessors: [0x495]
Successors: [0x4bc, 0x4c0]
---
0x4a2 JUMPDEST
0x4a3 PUSH1 0x2
0x4a5 SLOAD
0x4a6 PUSH12 0x18f1d5969453ddff2800000
0x4b3 SWAP1
0x4b4 DUP3
0x4b5 ADD
0x4b6 GT
0x4b7 ISZERO
0x4b8 PUSH2 0x4c0
0x4bb JUMPI
---
0x4a2: JUMPDEST 
0x4a3: V432 = 0x2
0x4a5: V433 = S[0x2]
0x4a6: V434 = 0x18f1d5969453ddff2800000
0x4b5: V435 = ADD S0 V433
0x4b6: V436 = GT V435 0x18f1d5969453ddff2800000
0x4b7: V437 = ISZERO V436
0x4b8: V438 = 0x4c0
0x4bb: JUMPI 0x4c0 V437
---
Entry stack: [V12, 0x11a, V98, V100, V103, S3, {0x11a, 0x59e}, S1, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x11a, V98, V100, V103, S3, {0x11a, 0x59e}, S1, S0]

================================

Block 0x4bc
[0x4bc:0x4bf]
---
Predecessors: [0x4a2]
Successors: []
---
0x4bc PUSH1 0x0
0x4be DUP1
0x4bf REVERT
---
0x4bc: V439 = 0x0
0x4bf: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V98, V100, V103, S3, {0x11a, 0x59e}, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V98, V100, V103, S3, {0x11a, 0x59e}, S1, S0]

================================

Block 0x4c0
[0x4c0:0x511]
---
Predecessors: [0x4a2]
Successors: [0x512, 0x516]
---
0x4c0 JUMPDEST
0x4c1 PUSH1 0x3
0x4c3 SLOAD
0x4c4 PUSH1 0x1
0x4c6 PUSH1 0xa0
0x4c8 PUSH1 0x2
0x4ca EXP
0x4cb SUB
0x4cc AND
0x4cd PUSH4 0x40c10f19
0x4d2 DUP4
0x4d3 DUP4
0x4d4 PUSH1 0x40
0x4d6 MLOAD
0x4d7 PUSH1 0xe0
0x4d9 PUSH1 0x2
0x4db EXP
0x4dc PUSH4 0xffffffff
0x4e1 DUP6
0x4e2 AND
0x4e3 MUL
0x4e4 DUP2
0x4e5 MSTORE
0x4e6 PUSH1 0x1
0x4e8 PUSH1 0xa0
0x4ea PUSH1 0x2
0x4ec EXP
0x4ed SUB
0x4ee SWAP1
0x4ef SWAP3
0x4f0 AND
0x4f1 PUSH1 0x4
0x4f3 DUP4
0x4f4 ADD
0x4f5 MSTORE
0x4f6 PUSH1 0x24
0x4f8 DUP3
0x4f9 ADD
0x4fa MSTORE
0x4fb PUSH1 0x44
0x4fd ADD
0x4fe PUSH1 0x0
0x500 PUSH1 0x40
0x502 MLOAD
0x503 DUP1
0x504 DUP4
0x505 SUB
0x506 DUP2
0x507 PUSH1 0x0
0x509 DUP8
0x50a DUP1
0x50b EXTCODESIZE
0x50c ISZERO
0x50d ISZERO
0x50e PUSH2 0x516
0x511 JUMPI
---
0x4c0: JUMPDEST 
0x4c1: V440 = 0x3
0x4c3: V441 = S[0x3]
0x4c4: V442 = 0x1
0x4c6: V443 = 0xa0
0x4c8: V444 = 0x2
0x4ca: V445 = EXP 0x2 0xa0
0x4cb: V446 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cc: V447 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x4cd: V448 = 0x40c10f19
0x4d4: V449 = 0x40
0x4d6: V450 = M[0x40]
0x4d7: V451 = 0xe0
0x4d9: V452 = 0x2
0x4db: V453 = EXP 0x2 0xe0
0x4dc: V454 = 0xffffffff
0x4e2: V455 = AND 0x40c10f19 0xffffffff
0x4e3: V456 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x4e5: M[V450] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x4e6: V457 = 0x1
0x4e8: V458 = 0xa0
0x4ea: V459 = 0x2
0x4ec: V460 = EXP 0x2 0xa0
0x4ed: V461 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f0: V462 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x4f1: V463 = 0x4
0x4f4: V464 = ADD V450 0x4
0x4f5: M[V464] = V462
0x4f6: V465 = 0x24
0x4f9: V466 = ADD V450 0x24
0x4fa: M[V466] = S0
0x4fb: V467 = 0x44
0x4fd: V468 = ADD 0x44 V450
0x4fe: V469 = 0x0
0x500: V470 = 0x40
0x502: V471 = M[0x40]
0x505: V472 = SUB V468 V471
0x507: V473 = 0x0
0x50b: V474 = EXTCODESIZE V447
0x50c: V475 = ISZERO V474
0x50d: V476 = ISZERO V475
0x50e: V477 = 0x516
0x511: JUMPI 0x516 V476
---
Entry stack: [V12, 0x11a, V98, V100, V103, S3, {0x11a, 0x59e}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, V447, 0x40c10f19, V468, 0x0, V471, V472, V471, 0x0, V447]
Exit stack: [V12, 0x11a, V98, V100, V103, S3, {0x11a, 0x59e}, S1, S0, V447, 0x40c10f19, V468, 0x0, V471, V472, V471, 0x0, V447]

================================

Block 0x512
[0x512:0x515]
---
Predecessors: [0x4c0]
Successors: []
---
0x512 PUSH1 0x0
0x514 DUP1
0x515 REVERT
---
0x512: V478 = 0x0
0x515: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V98, V100, V103, S12, {0x11a, 0x59e}, S10, S9, V447, 0x40c10f19, V468, 0x0, V471, V472, V471, 0x0, V447]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V98, V100, V103, S12, {0x11a, 0x59e}, S10, S9, V447, 0x40c10f19, V468, 0x0, V471, V472, V471, 0x0, V447]

================================

Block 0x516
[0x516:0x522]
---
Predecessors: [0x4c0]
Successors: [0x523, 0x527]
---
0x516 JUMPDEST
0x517 PUSH2 0x2c6
0x51a GAS
0x51b SUB
0x51c CALL
0x51d ISZERO
0x51e ISZERO
0x51f PUSH2 0x527
0x522 JUMPI
---
0x516: JUMPDEST 
0x517: V479 = 0x2c6
0x51a: V480 = GAS
0x51b: V481 = SUB V480 0x2c6
0x51c: V482 = CALL V481 V447 0x0 V471 V472 V471 0x0
0x51d: V483 = ISZERO V482
0x51e: V484 = ISZERO V483
0x51f: V485 = 0x527
0x522: JUMPI 0x527 V484
---
Entry stack: [V12, 0x11a, V98, V100, V103, S12, {0x11a, 0x59e}, S10, S9, V447, 0x40c10f19, V468, 0x0, V471, V472, V471, 0x0, V447]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x11a, V98, V100, V103, S12, {0x11a, 0x59e}, S10, S9, V447, 0x40c10f19, V468]

================================

Block 0x523
[0x523:0x526]
---
Predecessors: [0x516]
Successors: []
---
0x523 PUSH1 0x0
0x525 DUP1
0x526 REVERT
---
0x523: V486 = 0x0
0x526: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V98, V100, V103, S6, {0x11a, 0x59e}, S4, S3, S2, 0x40c10f19, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V98, V100, V103, S6, {0x11a, 0x59e}, S4, S3, S2, 0x40c10f19, S0]

================================

Block 0x527
[0x527:0x53c]
---
Predecessors: [0x516]
Successors: [0xdf9]
---
0x527 JUMPDEST
0x528 POP
0x529 POP
0x52a PUSH1 0x2
0x52c SLOAD
0x52d PUSH2 0x53d
0x530 SWAP2
0x531 POP
0x532 DUP3
0x533 PUSH4 0xffffffff
0x538 PUSH2 0xdf9
0x53b AND
0x53c JUMP
---
0x527: JUMPDEST 
0x52a: V487 = 0x2
0x52c: V488 = S[0x2]
0x52d: V489 = 0x53d
0x533: V490 = 0xffffffff
0x538: V491 = 0xdf9
0x53b: V492 = AND 0xdf9 0xffffffff
0x53c: JUMP 0xdf9
---
Entry stack: [V12, 0x11a, V98, V100, V103, S6, {0x11a, 0x59e}, S4, S3, S2, 0x40c10f19, S0]
Stack pops: 4
Stack additions: [S3, 0x53d, V488, S3]
Exit stack: [V12, 0x11a, V98, V100, V103, S6, {0x11a, 0x59e}, S4, S3, 0x53d, V488, S3]

================================

Block 0x53d
[0x53d:0x540]
---
Predecessors: [0xe0c]
Successors: [0x541]
---
0x53d JUMPDEST
0x53e PUSH1 0x2
0x540 SSTORE
---
0x53d: JUMPDEST 
0x53e: V493 = 0x2
0x540: S[0x2] = S0
---
Entry stack: [V12, 0x11a, V98, V100, V103, S4, {0x11a, 0x59e}, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x11a, V98, V100, V103, S4, {0x11a, 0x59e}, S2, S1]

================================

Block 0x541
[0x541:0x544]
---
Predecessors: [0x53d]
Successors: [0x11a, 0x59e]
---
0x541 JUMPDEST
0x542 POP
0x543 POP
0x544 JUMP
---
0x541: JUMPDEST 
0x544: JUMP {0x11a, 0x59e}
---
Entry stack: [V12, 0x11a, V98, V100, V103, S3, {0x11a, 0x59e}, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12, 0x11a, V98, V100, V103, S3]

================================

Block 0x545
[0x545:0x55c]
---
Predecessors: [0x128]
Successors: [0x55d, 0x570]
---
0x545 JUMPDEST
0x546 PUSH1 0xb
0x548 SLOAD
0x549 CALLER
0x54a PUSH1 0x1
0x54c PUSH1 0xa0
0x54e PUSH1 0x2
0x550 EXP
0x551 SUB
0x552 SWAP1
0x553 DUP2
0x554 AND
0x555 SWAP2
0x556 AND
0x557 EQ
0x558 DUP1
0x559 PUSH2 0x570
0x55c JUMPI
---
0x545: JUMPDEST 
0x546: V494 = 0xb
0x548: V495 = S[0xb]
0x549: V496 = CALLER
0x54a: V497 = 0x1
0x54c: V498 = 0xa0
0x54e: V499 = 0x2
0x550: V500 = EXP 0x2 0xa0
0x551: V501 = SUB 0x10000000000000000000000000000000000000000 0x1
0x554: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x556: V503 = AND V495 0xffffffffffffffffffffffffffffffffffffffff
0x557: V504 = EQ V503 V502
0x559: V505 = 0x570
0x55c: JUMPI 0x570 V504
---
Entry stack: [V12, 0x11a, V98, V100, V103, V105]
Stack pops: 0
Stack additions: [V504]
Exit stack: [V12, 0x11a, V98, V100, V103, V105, V504]

================================

Block 0x55d
[0x55d:0x56f]
---
Predecessors: [0x545]
Successors: [0x570]
---
0x55d POP
0x55e PUSH1 0xc
0x560 SLOAD
0x561 CALLER
0x562 PUSH1 0x1
0x564 PUSH1 0xa0
0x566 PUSH1 0x2
0x568 EXP
0x569 SUB
0x56a SWAP1
0x56b DUP2
0x56c AND
0x56d SWAP2
0x56e AND
0x56f EQ
---
0x55e: V506 = 0xc
0x560: V507 = S[0xc]
0x561: V508 = CALLER
0x562: V509 = 0x1
0x564: V510 = 0xa0
0x566: V511 = 0x2
0x568: V512 = EXP 0x2 0xa0
0x569: V513 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56c: V514 = AND 0xffffffffffffffffffffffffffffffffffffffff V508
0x56e: V515 = AND V507 0xffffffffffffffffffffffffffffffffffffffff
0x56f: V516 = EQ V515 V514
---
Entry stack: [V12, 0x11a, V98, V100, V103, V105, V504]
Stack pops: 1
Stack additions: [V516]
Exit stack: [V12, 0x11a, V98, V100, V103, V105, V516]

================================

Block 0x570
[0x570:0x575]
---
Predecessors: [0x545, 0x55d]
Successors: [0x576, 0x589]
---
0x570 JUMPDEST
0x571 DUP1
0x572 PUSH2 0x589
0x575 JUMPI
---
0x570: JUMPDEST 
0x572: V517 = 0x589
0x575: JUMPI 0x589 S0
---
Entry stack: [V12, 0x11a, V98, V100, V103, V105, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x11a, V98, V100, V103, V105, S0]

================================

Block 0x576
[0x576:0x588]
---
Predecessors: [0x570]
Successors: [0x589]
---
0x576 POP
0x577 PUSH1 0xd
0x579 SLOAD
0x57a CALLER
0x57b PUSH1 0x1
0x57d PUSH1 0xa0
0x57f PUSH1 0x2
0x581 EXP
0x582 SUB
0x583 SWAP1
0x584 DUP2
0x585 AND
0x586 SWAP2
0x587 AND
0x588 EQ
---
0x577: V518 = 0xd
0x579: V519 = S[0xd]
0x57a: V520 = CALLER
0x57b: V521 = 0x1
0x57d: V522 = 0xa0
0x57f: V523 = 0x2
0x581: V524 = EXP 0x2 0xa0
0x582: V525 = SUB 0x10000000000000000000000000000000000000000 0x1
0x585: V526 = AND 0xffffffffffffffffffffffffffffffffffffffff V520
0x587: V527 = AND V519 0xffffffffffffffffffffffffffffffffffffffff
0x588: V528 = EQ V527 V526
---
Entry stack: [V12, 0x11a, V98, V100, V103, V105, S0]
Stack pops: 1
Stack additions: [V528]
Exit stack: [V12, 0x11a, V98, V100, V103, V105, V528]

================================

Block 0x589
[0x589:0x58f]
---
Predecessors: [0x570, 0x576]
Successors: [0x590, 0x594]
---
0x589 JUMPDEST
0x58a ISZERO
0x58b ISZERO
0x58c PUSH2 0x594
0x58f JUMPI
---
0x589: JUMPDEST 
0x58a: V529 = ISZERO S0
0x58b: V530 = ISZERO V529
0x58c: V531 = 0x594
0x58f: JUMPI 0x594 V530
---
Entry stack: [V12, 0x11a, V98, V100, V103, V105, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x11a, V98, V100, V103, V105]

================================

Block 0x590
[0x590:0x593]
---
Predecessors: [0x589]
Successors: []
---
0x590 PUSH1 0x0
0x592 DUP1
0x593 REVERT
---
0x590: V532 = 0x0
0x593: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V98, V100, V103, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V98, V100, V103, V105]

================================

Block 0x594
[0x594:0x59d]
---
Predecessors: [0x589]
Successors: [0x477]
---
0x594 JUMPDEST
0x595 PUSH2 0x59e
0x598 DUP5
0x599 DUP5
0x59a PUSH2 0x477
0x59d JUMP
---
0x594: JUMPDEST 
0x595: V533 = 0x59e
0x59a: V534 = 0x477
0x59d: JUMP 0x477
---
Entry stack: [V12, 0x11a, V98, V100, V103, V105]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x59e, S3, S2]
Exit stack: [V12, 0x11a, V98, V100, V103, V105, 0x59e, V98, V100]

================================

Block 0x59e
[0x59e:0x606]
---
Predecessors: [0x541]
Successors: [0x607]
---
0x59e JUMPDEST
0x59f PUSH32 0xa8f899a090efad1c1d17d3e3c18b0fc5b732d226b7ce367ab7f00fd824029acc
0x5c0 DUP5
0x5c1 DUP5
0x5c2 DUP5
0x5c3 DUP5
0x5c4 PUSH1 0x40
0x5c6 MLOAD
0x5c7 PUSH1 0x1
0x5c9 PUSH1 0xa0
0x5cb PUSH1 0x2
0x5cd EXP
0x5ce SUB
0x5cf DUP6
0x5d0 AND
0x5d1 DUP2
0x5d2 MSTORE
0x5d3 PUSH1 0x20
0x5d5 DUP2
0x5d6 ADD
0x5d7 DUP5
0x5d8 SWAP1
0x5d9 MSTORE
0x5da PUSH1 0x60
0x5dc PUSH1 0x40
0x5de DUP3
0x5df ADD
0x5e0 DUP2
0x5e1 DUP2
0x5e2 MSTORE
0x5e3 SWAP1
0x5e4 DUP3
0x5e5 ADD
0x5e6 DUP4
0x5e7 SWAP1
0x5e8 MSTORE
0x5e9 PUSH1 0x80
0x5eb DUP3
0x5ec ADD
0x5ed DUP5
0x5ee DUP5
0x5ef DUP1
0x5f0 DUP3
0x5f1 DUP5
0x5f2 CALLDATACOPY
0x5f3 DUP3
0x5f4 ADD
0x5f5 SWAP2
0x5f6 POP
0x5f7 POP
0x5f8 SWAP6
0x5f9 POP
0x5fa POP
0x5fb POP
0x5fc POP
0x5fd POP
0x5fe POP
0x5ff PUSH1 0x40
0x601 MLOAD
0x602 DUP1
0x603 SWAP2
0x604 SUB
0x605 SWAP1
0x606 LOG1
---
0x59e: JUMPDEST 
0x59f: V535 = 0xa8f899a090efad1c1d17d3e3c18b0fc5b732d226b7ce367ab7f00fd824029acc
0x5c4: V536 = 0x40
0x5c6: V537 = M[0x40]
0x5c7: V538 = 0x1
0x5c9: V539 = 0xa0
0x5cb: V540 = 0x2
0x5cd: V541 = EXP 0x2 0xa0
0x5ce: V542 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d0: V543 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x5d2: M[V537] = V543
0x5d3: V544 = 0x20
0x5d6: V545 = ADD V537 0x20
0x5d9: M[V545] = V100
0x5da: V546 = 0x60
0x5dc: V547 = 0x40
0x5df: V548 = ADD V537 0x40
0x5e2: M[V548] = 0x60
0x5e5: V549 = ADD V537 0x60
0x5e8: M[V549] = S0
0x5e9: V550 = 0x80
0x5ec: V551 = ADD V537 0x80
0x5f2: CALLDATACOPY V551 V103 S0
0x5f4: V552 = ADD V551 S0
0x5ff: V553 = 0x40
0x601: V554 = M[0x40]
0x604: V555 = SUB V552 V554
0x606: LOG V554 V555 0xa8f899a090efad1c1d17d3e3c18b0fc5b732d226b7ce367ab7f00fd824029acc
---
Entry stack: [V12, 0x11a, V98, V100, V103, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, 0x11a, V98, V100, V103, S0]

================================

Block 0x607
[0x607:0x607]
---
Predecessors: [0x59e]
Successors: [0x608]
---
0x607 JUMPDEST
---
0x607: JUMPDEST 
---
Entry stack: [V12, 0x11a, V98, V100, V103, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V98, V100, V103, S0]

================================

Block 0x608
[0x608:0x60d]
---
Predecessors: [0x607]
Successors: [0x11a]
---
0x608 JUMPDEST
0x609 POP
0x60a POP
0x60b POP
0x60c POP
0x60d JUMP
---
0x608: JUMPDEST 
0x60d: JUMP 0x11a
---
Entry stack: [V12, 0x11a, V98, V100, V103, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x60e
[0x60e:0x61d]
---
Predecessors: [0x159]
Successors: [0x161]
---
0x60e JUMPDEST
0x60f PUSH12 0x18f1d5969453ddff2800000
0x61c DUP2
0x61d JUMP
---
0x60e: JUMPDEST 
0x60f: V556 = 0x18f1d5969453ddff2800000
0x61d: JUMP 0x161
---
Entry stack: [V12, 0x161]
Stack pops: 1
Stack additions: [S0, 0x18f1d5969453ddff2800000]
Exit stack: [V12, 0x161, 0x18f1d5969453ddff2800000]

================================

Block 0x61e
[0x61e:0x62c]
---
Predecessors: [0x17e]
Successors: [0x186]
---
0x61e JUMPDEST
0x61f PUSH1 0xb
0x621 SLOAD
0x622 PUSH1 0x1
0x624 PUSH1 0xa0
0x626 PUSH1 0x2
0x628 EXP
0x629 SUB
0x62a AND
0x62b DUP2
0x62c JUMP
---
0x61e: JUMPDEST 
0x61f: V557 = 0xb
0x621: V558 = S[0xb]
0x622: V559 = 0x1
0x624: V560 = 0xa0
0x626: V561 = 0x2
0x628: V562 = EXP 0x2 0xa0
0x629: V563 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62a: V564 = AND 0xffffffffffffffffffffffffffffffffffffffff V558
0x62c: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V564]
Exit stack: [V12, 0x186, V564]

================================

Block 0x62d
[0x62d:0x643]
---
Predecessors: [0x1ad]
Successors: [0x644, 0x648]
---
0x62d JUMPDEST
0x62e PUSH1 0xa
0x630 SLOAD
0x631 CALLER
0x632 PUSH1 0x1
0x634 PUSH1 0xa0
0x636 PUSH1 0x2
0x638 EXP
0x639 SUB
0x63a SWAP1
0x63b DUP2
0x63c AND
0x63d SWAP2
0x63e AND
0x63f EQ
0x640 PUSH2 0x648
0x643 JUMPI
---
0x62d: JUMPDEST 
0x62e: V565 = 0xa
0x630: V566 = S[0xa]
0x631: V567 = CALLER
0x632: V568 = 0x1
0x634: V569 = 0xa0
0x636: V570 = 0x2
0x638: V571 = EXP 0x2 0xa0
0x639: V572 = SUB 0x10000000000000000000000000000000000000000 0x1
0x63c: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V567
0x63e: V574 = AND V566 0xffffffffffffffffffffffffffffffffffffffff
0x63f: V575 = EQ V574 V573
0x640: V576 = 0x648
0x643: JUMPI 0x648 V575
---
Entry stack: [V12, 0x11a, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V145]

================================

Block 0x644
[0x644:0x647]
---
Predecessors: [0x62d]
Successors: []
---
0x644 PUSH1 0x0
0x646 DUP1
0x647 REVERT
---
0x644: V577 = 0x0
0x647: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V145]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V145]

================================

Block 0x648
[0x648:0x654]
---
Predecessors: [0x62d]
Successors: [0x655]
---
0x648 JUMPDEST
0x649 PUSH1 0x0
0x64b DUP2
0x64c SWAP1
0x64d SSTORE
0x64e PUSH1 0x32
0x650 DUP2
0x651 MUL
0x652 PUSH1 0x1
0x654 SSTORE
---
0x648: JUMPDEST 
0x649: V578 = 0x0
0x64d: S[0x0] = V145
0x64e: V579 = 0x32
0x651: V580 = MUL V145 0x32
0x652: V581 = 0x1
0x654: S[0x1] = V580
---
Entry stack: [V12, 0x11a, V145]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x11a, V145]

================================

Block 0x655
[0x655:0x655]
---
Predecessors: [0x648, 0x6a1]
Successors: [0x656]
---
0x655 JUMPDEST
---
0x655: JUMPDEST 
---
Entry stack: [V12, 0x11a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, S0]

================================

Block 0x656
[0x656:0x658]
---
Predecessors: [0x655]
Successors: [0x11a]
---
0x656 JUMPDEST
0x657 POP
0x658 JUMP
---
0x656: JUMPDEST 
0x658: JUMP 0x11a
---
Entry stack: [V12, 0x11a, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x659
[0x659:0x667]
---
Predecessors: [0x1c5]
Successors: [0x186]
---
0x659 JUMPDEST
0x65a PUSH1 0xd
0x65c SLOAD
0x65d PUSH1 0x1
0x65f PUSH1 0xa0
0x661 PUSH1 0x2
0x663 EXP
0x664 SUB
0x665 AND
0x666 DUP2
0x667 JUMP
---
0x659: JUMPDEST 
0x65a: V582 = 0xd
0x65c: V583 = S[0xd]
0x65d: V584 = 0x1
0x65f: V585 = 0xa0
0x661: V586 = 0x2
0x663: V587 = EXP 0x2 0xa0
0x664: V588 = SUB 0x10000000000000000000000000000000000000000 0x1
0x665: V589 = AND 0xffffffffffffffffffffffffffffffffffffffff V583
0x667: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V589]
Exit stack: [V12, 0x186, V589]

================================

Block 0x668
[0x668:0x67e]
---
Predecessors: [0x1f4]
Successors: [0x67f, 0x683]
---
0x668 JUMPDEST
0x669 PUSH1 0xa
0x66b SLOAD
0x66c CALLER
0x66d PUSH1 0x1
0x66f PUSH1 0xa0
0x671 PUSH1 0x2
0x673 EXP
0x674 SUB
0x675 SWAP1
0x676 DUP2
0x677 AND
0x678 SWAP2
0x679 AND
0x67a EQ
0x67b PUSH2 0x683
0x67e JUMPI
---
0x668: JUMPDEST 
0x669: V590 = 0xa
0x66b: V591 = S[0xa]
0x66c: V592 = CALLER
0x66d: V593 = 0x1
0x66f: V594 = 0xa0
0x671: V595 = 0x2
0x673: V596 = EXP 0x2 0xa0
0x674: V597 = SUB 0x10000000000000000000000000000000000000000 0x1
0x677: V598 = AND 0xffffffffffffffffffffffffffffffffffffffff V592
0x679: V599 = AND V591 0xffffffffffffffffffffffffffffffffffffffff
0x67a: V600 = EQ V599 V598
0x67b: V601 = 0x683
0x67e: JUMPI 0x683 V600
---
Entry stack: [V12, 0x11a, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V172]

================================

Block 0x67f
[0x67f:0x682]
---
Predecessors: [0x668]
Successors: []
---
0x67f PUSH1 0x0
0x681 DUP1
0x682 REVERT
---
0x67f: V602 = 0x0
0x682: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V172]

================================

Block 0x683
[0x683:0x685]
---
Predecessors: [0x668]
Successors: [0x686]
---
0x683 JUMPDEST
0x684 PUSH1 0x3
---
0x683: JUMPDEST 
0x684: V603 = 0x3
---
Entry stack: [V12, 0x11a, V172]
Stack pops: 0
Stack additions: [0x3]
Exit stack: [V12, 0x11a, V172, 0x3]

================================

Block 0x686
[0x686:0x695]
---
Predecessors: [0x683]
Successors: [0x696, 0x697]
---
0x686 JUMPDEST
0x687 PUSH1 0x13
0x689 SLOAD
0x68a PUSH1 0xff
0x68c AND
0x68d PUSH1 0x3
0x68f DUP2
0x690 GT
0x691 ISZERO
0x692 PUSH2 0x697
0x695 JUMPI
---
0x686: JUMPDEST 
0x687: V604 = 0x13
0x689: V605 = S[0x13]
0x68a: V606 = 0xff
0x68c: V607 = AND 0xff V605
0x68d: V608 = 0x3
0x690: V609 = GT V607 0x3
0x691: V610 = ISZERO V609
0x692: V611 = 0x697
0x695: JUMPI 0x697 V610
---
Entry stack: [V12, 0x11a, V172, 0x3]
Stack pops: 0
Stack additions: [V607]
Exit stack: [V12, 0x11a, V172, 0x3, V607]

================================

Block 0x696
[0x696:0x696]
---
Predecessors: [0x686]
Successors: []
---
0x696 INVALID
---
0x696: INVALID 
---
Entry stack: [V12, 0x11a, V172, 0x3, V607]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V172, 0x3, V607]

================================

Block 0x697
[0x697:0x69c]
---
Predecessors: [0x686]
Successors: [0x69d, 0x6a1]
---
0x697 JUMPDEST
0x698 EQ
0x699 PUSH2 0x6a1
0x69c JUMPI
---
0x697: JUMPDEST 
0x698: V612 = EQ V607 0x3
0x699: V613 = 0x6a1
0x69c: JUMPI 0x6a1 V612
---
Entry stack: [V12, 0x11a, V172, 0x3, V607]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x11a, V172]

================================

Block 0x69d
[0x69d:0x6a0]
---
Predecessors: [0x697]
Successors: []
---
0x69d PUSH1 0x0
0x69f DUP1
0x6a0 REVERT
---
0x69d: V614 = 0x0
0x6a0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V172]

================================

Block 0x6a1
[0x6a1:0x6cf]
---
Predecessors: [0x697]
Successors: [0x655, 0x6d0]
---
0x6a1 JUMPDEST
0x6a2 PUSH1 0x5
0x6a4 SLOAD
0x6a5 PUSH1 0x1
0x6a7 PUSH1 0xa0
0x6a9 PUSH1 0x2
0x6ab EXP
0x6ac SUB
0x6ad AND
0x6ae DUP2
0x6af ISZERO
0x6b0 PUSH2 0x8fc
0x6b3 MUL
0x6b4 DUP3
0x6b5 PUSH1 0x40
0x6b7 MLOAD
0x6b8 PUSH1 0x0
0x6ba PUSH1 0x40
0x6bc MLOAD
0x6bd DUP1
0x6be DUP4
0x6bf SUB
0x6c0 DUP2
0x6c1 DUP6
0x6c2 DUP9
0x6c3 DUP9
0x6c4 CALL
0x6c5 SWAP4
0x6c6 POP
0x6c7 POP
0x6c8 POP
0x6c9 POP
0x6ca ISZERO
0x6cb ISZERO
0x6cc PUSH2 0x655
0x6cf JUMPI
---
0x6a1: JUMPDEST 
0x6a2: V615 = 0x5
0x6a4: V616 = S[0x5]
0x6a5: V617 = 0x1
0x6a7: V618 = 0xa0
0x6a9: V619 = 0x2
0x6ab: V620 = EXP 0x2 0xa0
0x6ac: V621 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6ad: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V616
0x6af: V623 = ISZERO V172
0x6b0: V624 = 0x8fc
0x6b3: V625 = MUL 0x8fc V623
0x6b5: V626 = 0x40
0x6b7: V627 = M[0x40]
0x6b8: V628 = 0x0
0x6ba: V629 = 0x40
0x6bc: V630 = M[0x40]
0x6bf: V631 = SUB V627 V630
0x6c4: V632 = CALL V625 V622 V172 V630 V631 V630 0x0
0x6ca: V633 = ISZERO V632
0x6cb: V634 = ISZERO V633
0x6cc: V635 = 0x655
0x6cf: JUMPI 0x655 V634
---
Entry stack: [V12, 0x11a, V172]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x11a, V172]

================================

Block 0x6d0
[0x6d0:0x6d3]
---
Predecessors: [0x6a1]
Successors: []
---
0x6d0 PUSH1 0x0
0x6d2 DUP1
0x6d3 REVERT
---
0x6d0: V636 = 0x0
0x6d3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V172]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V172]

================================

Block 0x6d4
[0x6d4:0x6d4]
---
Predecessors: []
Successors: [0x6d5]
---
0x6d4 JUMPDEST
---
0x6d4: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6d5
[0x6d5:0x6d5]
---
Predecessors: [0x6d4]
Successors: [0x6d6]
---
0x6d5 JUMPDEST
---
0x6d5: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x6d6
[0x6d6:0x6d8]
---
Predecessors: [0x6d5]
Successors: []
Has unresolved jump.
---
0x6d6 JUMPDEST
0x6d7 POP
0x6d8 JUMP
---
0x6d6: JUMPDEST 
0x6d8: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x6d9
[0x6d9:0x6e7]
---
Predecessors: [0x20c]
Successors: [0x186]
---
0x6d9 JUMPDEST
0x6da PUSH1 0x6
0x6dc SLOAD
0x6dd PUSH1 0x1
0x6df PUSH1 0xa0
0x6e1 PUSH1 0x2
0x6e3 EXP
0x6e4 SUB
0x6e5 AND
0x6e6 DUP2
0x6e7 JUMP
---
0x6d9: JUMPDEST 
0x6da: V637 = 0x6
0x6dc: V638 = S[0x6]
0x6dd: V639 = 0x1
0x6df: V640 = 0xa0
0x6e1: V641 = 0x2
0x6e3: V642 = EXP 0x2 0xa0
0x6e4: V643 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6e5: V644 = AND 0xffffffffffffffffffffffffffffffffffffffff V638
0x6e7: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V644]
Exit stack: [V12, 0x186, V644]

================================

Block 0x6e8
[0x6e8:0x6f6]
---
Predecessors: [0x23b]
Successors: [0x186]
---
0x6e8 JUMPDEST
0x6e9 PUSH1 0x8
0x6eb SLOAD
0x6ec PUSH1 0x1
0x6ee PUSH1 0xa0
0x6f0 PUSH1 0x2
0x6f2 EXP
0x6f3 SUB
0x6f4 AND
0x6f5 DUP2
0x6f6 JUMP
---
0x6e8: JUMPDEST 
0x6e9: V645 = 0x8
0x6eb: V646 = S[0x8]
0x6ec: V647 = 0x1
0x6ee: V648 = 0xa0
0x6f0: V649 = 0x2
0x6f2: V650 = EXP 0x2 0xa0
0x6f3: V651 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f4: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V646
0x6f6: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V652]
Exit stack: [V12, 0x186, V652]

================================

Block 0x6f7
[0x6f7:0x705]
---
Predecessors: [0x26a]
Successors: [0x186]
---
0x6f7 JUMPDEST
0x6f8 PUSH1 0x5
0x6fa SLOAD
0x6fb PUSH1 0x1
0x6fd PUSH1 0xa0
0x6ff PUSH1 0x2
0x701 EXP
0x702 SUB
0x703 AND
0x704 DUP2
0x705 JUMP
---
0x6f7: JUMPDEST 
0x6f8: V653 = 0x5
0x6fa: V654 = S[0x5]
0x6fb: V655 = 0x1
0x6fd: V656 = 0xa0
0x6ff: V657 = 0x2
0x701: V658 = EXP 0x2 0xa0
0x702: V659 = SUB 0x10000000000000000000000000000000000000000 0x1
0x703: V660 = AND 0xffffffffffffffffffffffffffffffffffffffff V654
0x705: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V660]
Exit stack: [V12, 0x186, V660]

================================

Block 0x706
[0x706:0x70b]
---
Predecessors: [0x299]
Successors: [0x161]
---
0x706 JUMPDEST
0x707 PUSH1 0x1
0x709 SLOAD
0x70a DUP2
0x70b JUMP
---
0x706: JUMPDEST 
0x707: V661 = 0x1
0x709: V662 = S[0x1]
0x70b: JUMP 0x161
---
Entry stack: [V12, 0x161]
Stack pops: 1
Stack additions: [S0, V662]
Exit stack: [V12, 0x161, V662]

================================

Block 0x70c
[0x70c:0x71a]
---
Predecessors: [0x2be]
Successors: [0x186]
---
0x70c JUMPDEST
0x70d PUSH1 0xa
0x70f SLOAD
0x710 PUSH1 0x1
0x712 PUSH1 0xa0
0x714 PUSH1 0x2
0x716 EXP
0x717 SUB
0x718 AND
0x719 DUP2
0x71a JUMP
---
0x70c: JUMPDEST 
0x70d: V663 = 0xa
0x70f: V664 = S[0xa]
0x710: V665 = 0x1
0x712: V666 = 0xa0
0x714: V667 = 0x2
0x716: V668 = EXP 0x2 0xa0
0x717: V669 = SUB 0x10000000000000000000000000000000000000000 0x1
0x718: V670 = AND 0xffffffffffffffffffffffffffffffffffffffff V664
0x71a: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V670]
Exit stack: [V12, 0x186, V670]

================================

Block 0x71b
[0x71b:0x731]
---
Predecessors: [0x2ed]
Successors: [0x732, 0x736]
---
0x71b JUMPDEST
0x71c PUSH1 0xa
0x71e SLOAD
0x71f CALLER
0x720 PUSH1 0x1
0x722 PUSH1 0xa0
0x724 PUSH1 0x2
0x726 EXP
0x727 SUB
0x728 SWAP1
0x729 DUP2
0x72a AND
0x72b SWAP2
0x72c AND
0x72d EQ
0x72e PUSH2 0x736
0x731 JUMPI
---
0x71b: JUMPDEST 
0x71c: V671 = 0xa
0x71e: V672 = S[0xa]
0x71f: V673 = CALLER
0x720: V674 = 0x1
0x722: V675 = 0xa0
0x724: V676 = 0x2
0x726: V677 = EXP 0x2 0xa0
0x727: V678 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72a: V679 = AND 0xffffffffffffffffffffffffffffffffffffffff V673
0x72c: V680 = AND V672 0xffffffffffffffffffffffffffffffffffffffff
0x72d: V681 = EQ V680 V679
0x72e: V682 = 0x736
0x731: JUMPI 0x736 V681
---
Entry stack: [V12, 0x11a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a]

================================

Block 0x732
[0x732:0x735]
---
Predecessors: [0x71b]
Successors: []
---
0x732 PUSH1 0x0
0x734 DUP1
0x735 REVERT
---
0x732: V683 = 0x0
0x735: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a]

================================

Block 0x736
[0x736:0x738]
---
Predecessors: [0x71b]
Successors: [0x739]
---
0x736 JUMPDEST
0x737 PUSH1 0x0
---
0x736: JUMPDEST 
0x737: V684 = 0x0
---
Entry stack: [V12, 0x11a]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x11a, 0x0]

================================

Block 0x739
[0x739:0x748]
---
Predecessors: [0x736]
Successors: [0x749, 0x74a]
---
0x739 JUMPDEST
0x73a PUSH1 0x13
0x73c SLOAD
0x73d PUSH1 0xff
0x73f AND
0x740 PUSH1 0x3
0x742 DUP2
0x743 GT
0x744 ISZERO
0x745 PUSH2 0x74a
0x748 JUMPI
---
0x739: JUMPDEST 
0x73a: V685 = 0x13
0x73c: V686 = S[0x13]
0x73d: V687 = 0xff
0x73f: V688 = AND 0xff V686
0x740: V689 = 0x3
0x743: V690 = GT V688 0x3
0x744: V691 = ISZERO V690
0x745: V692 = 0x74a
0x748: JUMPI 0x74a V691
---
Entry stack: [V12, 0x11a, 0x0]
Stack pops: 0
Stack additions: [V688]
Exit stack: [V12, 0x11a, 0x0, V688]

================================

Block 0x749
[0x749:0x749]
---
Predecessors: [0x739]
Successors: []
---
0x749 INVALID
---
0x749: INVALID 
---
Entry stack: [V12, 0x11a, 0x0, V688]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, 0x0, V688]

================================

Block 0x74a
[0x74a:0x750]
---
Predecessors: [0x739]
Successors: [0x751, 0x767]
---
0x74a JUMPDEST
0x74b EQ
0x74c DUP1
0x74d PUSH2 0x767
0x750 JUMPI
---
0x74a: JUMPDEST 
0x74b: V693 = EQ V688 0x0
0x74d: V694 = 0x767
0x750: JUMPI 0x767 V693
---
Entry stack: [V12, 0x11a, 0x0, V688]
Stack pops: 2
Stack additions: [V693]
Exit stack: [V12, 0x11a, V693]

================================

Block 0x751
[0x751:0x753]
---
Predecessors: [0x74a]
Successors: [0x754]
---
0x751 POP
0x752 PUSH1 0x2
---
0x752: V695 = 0x2
---
Entry stack: [V12, 0x11a, V693]
Stack pops: 1
Stack additions: [0x2]
Exit stack: [V12, 0x11a, 0x2]

================================

Block 0x754
[0x754:0x763]
---
Predecessors: [0x751]
Successors: [0x764, 0x765]
---
0x754 JUMPDEST
0x755 PUSH1 0x13
0x757 SLOAD
0x758 PUSH1 0xff
0x75a AND
0x75b PUSH1 0x3
0x75d DUP2
0x75e GT
0x75f ISZERO
0x760 PUSH2 0x765
0x763 JUMPI
---
0x754: JUMPDEST 
0x755: V696 = 0x13
0x757: V697 = S[0x13]
0x758: V698 = 0xff
0x75a: V699 = AND 0xff V697
0x75b: V700 = 0x3
0x75e: V701 = GT V699 0x3
0x75f: V702 = ISZERO V701
0x760: V703 = 0x765
0x763: JUMPI 0x765 V702
---
Entry stack: [V12, 0x11a, 0x2]
Stack pops: 0
Stack additions: [V699]
Exit stack: [V12, 0x11a, 0x2, V699]

================================

Block 0x764
[0x764:0x764]
---
Predecessors: [0x754]
Successors: []
---
0x764 INVALID
---
0x764: INVALID 
---
Entry stack: [V12, 0x11a, 0x2, V699]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, 0x2, V699]

================================

Block 0x765
[0x765:0x766]
---
Predecessors: [0x754]
Successors: [0x767]
---
0x765 JUMPDEST
0x766 EQ
---
0x765: JUMPDEST 
0x766: V704 = EQ V699 0x2
---
Entry stack: [V12, 0x11a, 0x2, V699]
Stack pops: 2
Stack additions: [V704]
Exit stack: [V12, 0x11a, V704]

================================

Block 0x767
[0x767:0x76d]
---
Predecessors: [0x74a, 0x765]
Successors: [0x76e, 0x772]
---
0x767 JUMPDEST
0x768 ISZERO
0x769 ISZERO
0x76a PUSH2 0x772
0x76d JUMPI
---
0x767: JUMPDEST 
0x768: V705 = ISZERO S0
0x769: V706 = ISZERO V705
0x76a: V707 = 0x772
0x76d: JUMPI 0x772 V706
---
Entry stack: [V12, 0x11a, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x11a]

================================

Block 0x76e
[0x76e:0x771]
---
Predecessors: [0x767]
Successors: []
---
0x76e PUSH1 0x0
0x770 DUP1
0x771 REVERT
---
0x76e: V708 = 0x0
0x771: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a]

================================

Block 0x772
[0x772:0x7ac]
---
Predecessors: [0x767]
Successors: [0x7ad]
---
0x772 JUMPDEST
0x773 PUSH32 0xed6b1715382ee8c647ec35e086f9713aa5d53bf7fd91d1e3a474d2f903d6d7e
0x794 PUSH1 0x40
0x796 MLOAD
0x797 PUSH1 0x40
0x799 MLOAD
0x79a DUP1
0x79b SWAP2
0x79c SUB
0x79d SWAP1
0x79e LOG1
0x79f PUSH1 0x13
0x7a1 DUP1
0x7a2 SLOAD
0x7a3 PUSH1 0x1
0x7a5 SWAP2
0x7a6 SWAP1
0x7a7 PUSH1 0xff
0x7a9 NOT
0x7aa AND
0x7ab DUP3
0x7ac DUP1
---
0x772: JUMPDEST 
0x773: V709 = 0xed6b1715382ee8c647ec35e086f9713aa5d53bf7fd91d1e3a474d2f903d6d7e
0x794: V710 = 0x40
0x796: V711 = M[0x40]
0x797: V712 = 0x40
0x799: V713 = M[0x40]
0x79c: V714 = SUB V711 V713
0x79e: LOG V713 V714 0xed6b1715382ee8c647ec35e086f9713aa5d53bf7fd91d1e3a474d2f903d6d7e
0x79f: V715 = 0x13
0x7a2: V716 = S[0x13]
0x7a3: V717 = 0x1
0x7a7: V718 = 0xff
0x7a9: V719 = NOT 0xff
0x7aa: V720 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V716
---
Entry stack: [V12, 0x11a]
Stack pops: 0
Stack additions: [0x1, 0x13, V720, 0x1, 0x1]
Exit stack: [V12, 0x11a, 0x1, 0x13, V720, 0x1, 0x1]

================================

Block 0x7ad
[0x7ad:0x7b2]
---
Predecessors: [0x772]
Successors: [0x7b3]
---
0x7ad JUMPDEST
0x7ae MUL
0x7af OR
0x7b0 SWAP1
0x7b1 SSTORE
0x7b2 POP
---
0x7ad: JUMPDEST 
0x7ae: V721 = MUL 0x1 0x1
0x7af: V722 = OR 0x1 V720
0x7b1: S[0x13] = V722
---
Entry stack: [V12, 0x11a, 0x1, 0x13, V720, 0x1, 0x1]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x11a]

================================

Block 0x7b3
[0x7b3:0x7b3]
---
Predecessors: [0x7ad]
Successors: [0x7b4]
---
0x7b3 JUMPDEST
---
0x7b3: JUMPDEST 
---
Entry stack: [V12, 0x11a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a]

================================

Block 0x7b4
[0x7b4:0x7b5]
---
Predecessors: [0x7b3]
Successors: [0x11a]
---
0x7b4 JUMPDEST
0x7b5 JUMP
---
0x7b4: JUMPDEST 
0x7b5: JUMP 0x11a
---
Entry stack: [V12, 0x11a]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b6
[0x7b6:0x7c4]
---
Predecessors: [0x302]
Successors: [0x186]
---
0x7b6 JUMPDEST
0x7b7 PUSH1 0x3
0x7b9 SLOAD
0x7ba PUSH1 0x1
0x7bc PUSH1 0xa0
0x7be PUSH1 0x2
0x7c0 EXP
0x7c1 SUB
0x7c2 AND
0x7c3 DUP2
0x7c4 JUMP
---
0x7b6: JUMPDEST 
0x7b7: V723 = 0x3
0x7b9: V724 = S[0x3]
0x7ba: V725 = 0x1
0x7bc: V726 = 0xa0
0x7be: V727 = 0x2
0x7c0: V728 = EXP 0x2 0xa0
0x7c1: V729 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c2: V730 = AND 0xffffffffffffffffffffffffffffffffffffffff V724
0x7c4: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V730]
Exit stack: [V12, 0x186, V730]

================================

Block 0x7c5
[0x7c5:0x7d3]
---
Predecessors: [0x331]
Successors: [0x186]
---
0x7c5 JUMPDEST
0x7c6 PUSH1 0xc
0x7c8 SLOAD
0x7c9 PUSH1 0x1
0x7cb PUSH1 0xa0
0x7cd PUSH1 0x2
0x7cf EXP
0x7d0 SUB
0x7d1 AND
0x7d2 DUP2
0x7d3 JUMP
---
0x7c5: JUMPDEST 
0x7c6: V731 = 0xc
0x7c8: V732 = S[0xc]
0x7c9: V733 = 0x1
0x7cb: V734 = 0xa0
0x7cd: V735 = 0x2
0x7cf: V736 = EXP 0x2 0xa0
0x7d0: V737 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7d1: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff V732
0x7d3: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V738]
Exit stack: [V12, 0x186, V738]

================================

Block 0x7d4
[0x7d4:0x7ea]
---
Predecessors: [0x360]
Successors: [0x7eb, 0x7ef]
---
0x7d4 JUMPDEST
0x7d5 PUSH1 0xa
0x7d7 SLOAD
0x7d8 CALLER
0x7d9 PUSH1 0x1
0x7db PUSH1 0xa0
0x7dd PUSH1 0x2
0x7df EXP
0x7e0 SUB
0x7e1 SWAP1
0x7e2 DUP2
0x7e3 AND
0x7e4 SWAP2
0x7e5 AND
0x7e6 EQ
0x7e7 PUSH2 0x7ef
0x7ea JUMPI
---
0x7d4: JUMPDEST 
0x7d5: V739 = 0xa
0x7d7: V740 = S[0xa]
0x7d8: V741 = CALLER
0x7d9: V742 = 0x1
0x7db: V743 = 0xa0
0x7dd: V744 = 0x2
0x7df: V745 = EXP 0x2 0xa0
0x7e0: V746 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e3: V747 = AND 0xffffffffffffffffffffffffffffffffffffffff V741
0x7e5: V748 = AND V740 0xffffffffffffffffffffffffffffffffffffffff
0x7e6: V749 = EQ V748 V747
0x7e7: V750 = 0x7ef
0x7ea: JUMPI 0x7ef V749
---
Entry stack: [V12, 0x11a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a]

================================

Block 0x7eb
[0x7eb:0x7ee]
---
Predecessors: [0x7d4]
Successors: []
---
0x7eb PUSH1 0x0
0x7ed DUP1
0x7ee REVERT
---
0x7eb: V751 = 0x0
0x7ee: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a]

================================

Block 0x7ef
[0x7ef:0x7f1]
---
Predecessors: [0x7d4]
Successors: [0x7f2]
---
0x7ef JUMPDEST
0x7f0 PUSH1 0x1
---
0x7ef: JUMPDEST 
0x7f0: V752 = 0x1
---
Entry stack: [V12, 0x11a]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x11a, 0x1]

================================

Block 0x7f2
[0x7f2:0x801]
---
Predecessors: [0x7ef]
Successors: [0x802, 0x803]
---
0x7f2 JUMPDEST
0x7f3 PUSH1 0x13
0x7f5 SLOAD
0x7f6 PUSH1 0xff
0x7f8 AND
0x7f9 PUSH1 0x3
0x7fb DUP2
0x7fc GT
0x7fd ISZERO
0x7fe PUSH2 0x803
0x801 JUMPI
---
0x7f2: JUMPDEST 
0x7f3: V753 = 0x13
0x7f5: V754 = S[0x13]
0x7f6: V755 = 0xff
0x7f8: V756 = AND 0xff V754
0x7f9: V757 = 0x3
0x7fc: V758 = GT V756 0x3
0x7fd: V759 = ISZERO V758
0x7fe: V760 = 0x803
0x801: JUMPI 0x803 V759
---
Entry stack: [V12, 0x11a, 0x1]
Stack pops: 0
Stack additions: [V756]
Exit stack: [V12, 0x11a, 0x1, V756]

================================

Block 0x802
[0x802:0x802]
---
Predecessors: [0x7f2]
Successors: []
---
0x802 INVALID
---
0x802: INVALID 
---
Entry stack: [V12, 0x11a, 0x1, V756]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, 0x1, V756]

================================

Block 0x803
[0x803:0x808]
---
Predecessors: [0x7f2]
Successors: [0x809, 0x80d]
---
0x803 JUMPDEST
0x804 EQ
0x805 PUSH2 0x80d
0x808 JUMPI
---
0x803: JUMPDEST 
0x804: V761 = EQ V756 0x1
0x805: V762 = 0x80d
0x808: JUMPI 0x80d V761
---
Entry stack: [V12, 0x11a, 0x1, V756]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x11a]

================================

Block 0x809
[0x809:0x80c]
---
Predecessors: [0x803]
Successors: []
---
0x809 PUSH1 0x0
0x80b DUP1
0x80c REVERT
---
0x809: V763 = 0x0
0x80c: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a]

================================

Block 0x80d
[0x80d:0x81c]
---
Predecessors: [0x803]
Successors: [0x81d]
---
0x80d JUMPDEST
0x80e PUSH1 0x13
0x810 DUP1
0x811 SLOAD
0x812 PUSH1 0x2
0x814 SWAP2
0x815 SWAP1
0x816 PUSH1 0xff
0x818 NOT
0x819 AND
0x81a PUSH1 0x1
0x81c DUP4
---
0x80d: JUMPDEST 
0x80e: V764 = 0x13
0x811: V765 = S[0x13]
0x812: V766 = 0x2
0x816: V767 = 0xff
0x818: V768 = NOT 0xff
0x819: V769 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V765
0x81a: V770 = 0x1
---
Entry stack: [V12, 0x11a]
Stack pops: 0
Stack additions: [0x2, 0x13, V769, 0x1, 0x2]
Exit stack: [V12, 0x11a, 0x2, 0x13, V769, 0x1, 0x2]

================================

Block 0x81d
[0x81d:0x84e]
---
Predecessors: [0x80d]
Successors: [0x84f]
---
0x81d JUMPDEST
0x81e MUL
0x81f OR
0x820 SWAP1
0x821 SSTORE
0x822 POP
0x823 PUSH32 0xeb8cb983e71ec40f0d025e89b530e8a6601d259cf783e557b82334bf4ee7f1dc
0x844 PUSH1 0x40
0x846 MLOAD
0x847 PUSH1 0x40
0x849 MLOAD
0x84a DUP1
0x84b SWAP2
0x84c SUB
0x84d SWAP1
0x84e LOG1
---
0x81d: JUMPDEST 
0x81e: V771 = MUL 0x2 0x1
0x81f: V772 = OR 0x2 V769
0x821: S[0x13] = V772
0x823: V773 = 0xeb8cb983e71ec40f0d025e89b530e8a6601d259cf783e557b82334bf4ee7f1dc
0x844: V774 = 0x40
0x846: V775 = M[0x40]
0x847: V776 = 0x40
0x849: V777 = M[0x40]
0x84c: V778 = SUB V775 V777
0x84e: LOG V777 V778 0xeb8cb983e71ec40f0d025e89b530e8a6601d259cf783e557b82334bf4ee7f1dc
---
Entry stack: [V12, 0x11a, 0x2, 0x13, V769, 0x1, 0x2]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x11a]

================================

Block 0x84f
[0x84f:0x84f]
---
Predecessors: [0x81d]
Successors: [0x850]
---
0x84f JUMPDEST
---
0x84f: JUMPDEST 
---
Entry stack: [V12, 0x11a]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a]

================================

Block 0x850
[0x850:0x851]
---
Predecessors: [0x84f]
Successors: [0x11a]
---
0x850 JUMPDEST
0x851 JUMP
---
0x850: JUMPDEST 
0x851: JUMP 0x11a
---
Entry stack: [V12, 0x11a]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x852
[0x852:0x86b]
---
Predecessors: [0x375]
Successors: [0x86c, 0x870]
---
0x852 JUMPDEST
0x853 PUSH1 0xa
0x855 SLOAD
0x856 PUSH1 0x0
0x858 SWAP1
0x859 CALLER
0x85a PUSH1 0x1
0x85c PUSH1 0xa0
0x85e PUSH1 0x2
0x860 EXP
0x861 SUB
0x862 SWAP1
0x863 DUP2
0x864 AND
0x865 SWAP2
0x866 AND
0x867 EQ
0x868 PUSH2 0x870
0x86b JUMPI
---
0x852: JUMPDEST 
0x853: V779 = 0xa
0x855: V780 = S[0xa]
0x856: V781 = 0x0
0x859: V782 = CALLER
0x85a: V783 = 0x1
0x85c: V784 = 0xa0
0x85e: V785 = 0x2
0x860: V786 = EXP 0x2 0xa0
0x861: V787 = SUB 0x10000000000000000000000000000000000000000 0x1
0x864: V788 = AND 0xffffffffffffffffffffffffffffffffffffffff V782
0x866: V789 = AND V780 0xffffffffffffffffffffffffffffffffffffffff
0x867: V790 = EQ V789 V788
0x868: V791 = 0x870
0x86b: JUMPI 0x870 V790
---
Entry stack: [V12, 0x11a, V325]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x11a, V325, 0x0]

================================

Block 0x86c
[0x86c:0x86f]
---
Predecessors: [0x852]
Successors: []
---
0x86c PUSH1 0x0
0x86e DUP1
0x86f REVERT
---
0x86c: V792 = 0x0
0x86f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V325, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V325, 0x0]

================================

Block 0x870
[0x870:0x872]
---
Predecessors: [0x852]
Successors: [0x873]
---
0x870 JUMPDEST
0x871 PUSH1 0x3
---
0x870: JUMPDEST 
0x871: V793 = 0x3
---
Entry stack: [V12, 0x11a, V325, 0x0]
Stack pops: 0
Stack additions: [0x3]
Exit stack: [V12, 0x11a, V325, 0x0, 0x3]

================================

Block 0x873
[0x873:0x882]
---
Predecessors: [0x870]
Successors: [0x883, 0x884]
---
0x873 JUMPDEST
0x874 PUSH1 0x13
0x876 SLOAD
0x877 PUSH1 0xff
0x879 AND
0x87a PUSH1 0x3
0x87c DUP2
0x87d GT
0x87e ISZERO
0x87f PUSH2 0x884
0x882 JUMPI
---
0x873: JUMPDEST 
0x874: V794 = 0x13
0x876: V795 = S[0x13]
0x877: V796 = 0xff
0x879: V797 = AND 0xff V795
0x87a: V798 = 0x3
0x87d: V799 = GT V797 0x3
0x87e: V800 = ISZERO V799
0x87f: V801 = 0x884
0x882: JUMPI 0x884 V800
---
Entry stack: [V12, 0x11a, V325, 0x0, 0x3]
Stack pops: 0
Stack additions: [V797]
Exit stack: [V12, 0x11a, V325, 0x0, 0x3, V797]

================================

Block 0x883
[0x883:0x883]
---
Predecessors: [0x873]
Successors: []
---
0x883 INVALID
---
0x883: INVALID 
---
Entry stack: [V12, 0x11a, V325, 0x0, 0x3, V797]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V325, 0x0, 0x3, V797]

================================

Block 0x884
[0x884:0x88a]
---
Predecessors: [0x873]
Successors: [0x88b, 0x88f]
---
0x884 JUMPDEST
0x885 EQ
0x886 ISZERO
0x887 PUSH2 0x88f
0x88a JUMPI
---
0x884: JUMPDEST 
0x885: V802 = EQ V797 0x3
0x886: V803 = ISZERO V802
0x887: V804 = 0x88f
0x88a: JUMPI 0x88f V803
---
Entry stack: [V12, 0x11a, V325, 0x0, 0x3, V797]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x11a, V325, 0x0]

================================

Block 0x88b
[0x88b:0x88e]
---
Predecessors: [0x884]
Successors: []
---
0x88b PUSH1 0x0
0x88d DUP1
0x88e REVERT
---
0x88b: V805 = 0x0
0x88e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V325, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V325, 0x0]

================================

Block 0x88f
[0x88f:0x8e3]
---
Predecessors: [0x884]
Successors: [0x8e4, 0x8e8]
---
0x88f JUMPDEST
0x890 PUSH1 0x4
0x892 SLOAD
0x893 PUSH1 0x1
0x895 PUSH1 0xa0
0x897 PUSH1 0x2
0x899 EXP
0x89a SUB
0x89b AND
0x89c PUSH4 0x70a08231
0x8a1 DUP4
0x8a2 PUSH1 0x0
0x8a4 PUSH1 0x40
0x8a6 MLOAD
0x8a7 PUSH1 0x20
0x8a9 ADD
0x8aa MSTORE
0x8ab PUSH1 0x40
0x8ad MLOAD
0x8ae PUSH1 0xe0
0x8b0 PUSH1 0x2
0x8b2 EXP
0x8b3 PUSH4 0xffffffff
0x8b8 DUP5
0x8b9 AND
0x8ba MUL
0x8bb DUP2
0x8bc MSTORE
0x8bd PUSH1 0x1
0x8bf PUSH1 0xa0
0x8c1 PUSH1 0x2
0x8c3 EXP
0x8c4 SUB
0x8c5 SWAP1
0x8c6 SWAP2
0x8c7 AND
0x8c8 PUSH1 0x4
0x8ca DUP3
0x8cb ADD
0x8cc MSTORE
0x8cd PUSH1 0x24
0x8cf ADD
0x8d0 PUSH1 0x20
0x8d2 PUSH1 0x40
0x8d4 MLOAD
0x8d5 DUP1
0x8d6 DUP4
0x8d7 SUB
0x8d8 DUP2
0x8d9 PUSH1 0x0
0x8db DUP8
0x8dc DUP1
0x8dd EXTCODESIZE
0x8de ISZERO
0x8df ISZERO
0x8e0 PUSH2 0x8e8
0x8e3 JUMPI
---
0x88f: JUMPDEST 
0x890: V806 = 0x4
0x892: V807 = S[0x4]
0x893: V808 = 0x1
0x895: V809 = 0xa0
0x897: V810 = 0x2
0x899: V811 = EXP 0x2 0xa0
0x89a: V812 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89b: V813 = AND 0xffffffffffffffffffffffffffffffffffffffff V807
0x89c: V814 = 0x70a08231
0x8a2: V815 = 0x0
0x8a4: V816 = 0x40
0x8a6: V817 = M[0x40]
0x8a7: V818 = 0x20
0x8a9: V819 = ADD 0x20 V817
0x8aa: M[V819] = 0x0
0x8ab: V820 = 0x40
0x8ad: V821 = M[0x40]
0x8ae: V822 = 0xe0
0x8b0: V823 = 0x2
0x8b2: V824 = EXP 0x2 0xe0
0x8b3: V825 = 0xffffffff
0x8b9: V826 = AND 0x70a08231 0xffffffff
0x8ba: V827 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x8bc: M[V821] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x8bd: V828 = 0x1
0x8bf: V829 = 0xa0
0x8c1: V830 = 0x2
0x8c3: V831 = EXP 0x2 0xa0
0x8c4: V832 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c7: V833 = AND V325 0xffffffffffffffffffffffffffffffffffffffff
0x8c8: V834 = 0x4
0x8cb: V835 = ADD V821 0x4
0x8cc: M[V835] = V833
0x8cd: V836 = 0x24
0x8cf: V837 = ADD 0x24 V821
0x8d0: V838 = 0x20
0x8d2: V839 = 0x40
0x8d4: V840 = M[0x40]
0x8d7: V841 = SUB V837 V840
0x8d9: V842 = 0x0
0x8dd: V843 = EXTCODESIZE V813
0x8de: V844 = ISZERO V843
0x8df: V845 = ISZERO V844
0x8e0: V846 = 0x8e8
0x8e3: JUMPI 0x8e8 V845
---
Entry stack: [V12, 0x11a, V325, 0x0]
Stack pops: 2
Stack additions: [S1, S0, V813, 0x70a08231, V837, 0x20, V840, V841, V840, 0x0, V813]
Exit stack: [V12, 0x11a, V325, 0x0, V813, 0x70a08231, V837, 0x20, V840, V841, V840, 0x0, V813]

================================

Block 0x8e4
[0x8e4:0x8e7]
---
Predecessors: [0x88f]
Successors: []
---
0x8e4 PUSH1 0x0
0x8e6 DUP1
0x8e7 REVERT
---
0x8e4: V847 = 0x0
0x8e7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V325, 0x0, V813, 0x70a08231, V837, 0x20, V840, V841, V840, 0x0, V813]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V325, 0x0, V813, 0x70a08231, V837, 0x20, V840, V841, V840, 0x0, V813]

================================

Block 0x8e8
[0x8e8:0x8f4]
---
Predecessors: [0x88f]
Successors: [0x8f5, 0x8f9]
---
0x8e8 JUMPDEST
0x8e9 PUSH2 0x2c6
0x8ec GAS
0x8ed SUB
0x8ee CALL
0x8ef ISZERO
0x8f0 ISZERO
0x8f1 PUSH2 0x8f9
0x8f4 JUMPI
---
0x8e8: JUMPDEST 
0x8e9: V848 = 0x2c6
0x8ec: V849 = GAS
0x8ed: V850 = SUB V849 0x2c6
0x8ee: V851 = CALL V850 V813 0x0 V840 V841 V840 0x20
0x8ef: V852 = ISZERO V851
0x8f0: V853 = ISZERO V852
0x8f1: V854 = 0x8f9
0x8f4: JUMPI 0x8f9 V853
---
Entry stack: [V12, 0x11a, V325, 0x0, V813, 0x70a08231, V837, 0x20, V840, V841, V840, 0x0, V813]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x11a, V325, 0x0, V813, 0x70a08231, V837]

================================

Block 0x8f5
[0x8f5:0x8f8]
---
Predecessors: [0x8e8]
Successors: []
---
0x8f5 PUSH1 0x0
0x8f7 DUP1
0x8f8 REVERT
---
0x8f5: V855 = 0x0
0x8f8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V325, 0x0, V813, 0x70a08231, V837]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V325, 0x0, V813, 0x70a08231, V837]

================================

Block 0x8f9
[0x8f9:0x90c]
---
Predecessors: [0x8e8]
Successors: [0x90d, 0x911]
---
0x8f9 JUMPDEST
0x8fa POP
0x8fb POP
0x8fc POP
0x8fd PUSH1 0x40
0x8ff MLOAD
0x900 DUP1
0x901 MLOAD
0x902 SWAP2
0x903 POP
0x904 POP
0x905 PUSH1 0x0
0x907 DUP2
0x908 GT
0x909 PUSH2 0x911
0x90c JUMPI
---
0x8f9: JUMPDEST 
0x8fd: V856 = 0x40
0x8ff: V857 = M[0x40]
0x901: V858 = M[V857]
0x905: V859 = 0x0
0x908: V860 = GT V858 0x0
0x909: V861 = 0x911
0x90c: JUMPI 0x911 V860
---
Entry stack: [V12, 0x11a, V325, 0x0, V813, 0x70a08231, V837]
Stack pops: 4
Stack additions: [V858]
Exit stack: [V12, 0x11a, V325, V858]

================================

Block 0x90d
[0x90d:0x910]
---
Predecessors: [0x8f9]
Successors: []
---
0x90d PUSH1 0x0
0x90f DUP1
0x910 REVERT
---
0x90d: V862 = 0x0
0x910: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V325, V858]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V325, V858]

================================

Block 0x911
[0x911:0x95c]
---
Predecessors: [0x8f9]
Successors: [0x95d, 0x961]
---
0x911 JUMPDEST
0x912 PUSH1 0x4
0x914 SLOAD
0x915 PUSH1 0x1
0x917 PUSH1 0xa0
0x919 PUSH1 0x2
0x91b EXP
0x91c SUB
0x91d AND
0x91e PUSH4 0xb237f7d4
0x923 DUP4
0x924 PUSH1 0x40
0x926 MLOAD
0x927 PUSH1 0xe0
0x929 PUSH1 0x2
0x92b EXP
0x92c PUSH4 0xffffffff
0x931 DUP5
0x932 AND
0x933 MUL
0x934 DUP2
0x935 MSTORE
0x936 PUSH1 0x1
0x938 PUSH1 0xa0
0x93a PUSH1 0x2
0x93c EXP
0x93d SUB
0x93e SWAP1
0x93f SWAP2
0x940 AND
0x941 PUSH1 0x4
0x943 DUP3
0x944 ADD
0x945 MSTORE
0x946 PUSH1 0x24
0x948 ADD
0x949 PUSH1 0x0
0x94b PUSH1 0x40
0x94d MLOAD
0x94e DUP1
0x94f DUP4
0x950 SUB
0x951 DUP2
0x952 PUSH1 0x0
0x954 DUP8
0x955 DUP1
0x956 EXTCODESIZE
0x957 ISZERO
0x958 ISZERO
0x959 PUSH2 0x961
0x95c JUMPI
---
0x911: JUMPDEST 
0x912: V863 = 0x4
0x914: V864 = S[0x4]
0x915: V865 = 0x1
0x917: V866 = 0xa0
0x919: V867 = 0x2
0x91b: V868 = EXP 0x2 0xa0
0x91c: V869 = SUB 0x10000000000000000000000000000000000000000 0x1
0x91d: V870 = AND 0xffffffffffffffffffffffffffffffffffffffff V864
0x91e: V871 = 0xb237f7d4
0x924: V872 = 0x40
0x926: V873 = M[0x40]
0x927: V874 = 0xe0
0x929: V875 = 0x2
0x92b: V876 = EXP 0x2 0xe0
0x92c: V877 = 0xffffffff
0x932: V878 = AND 0xb237f7d4 0xffffffff
0x933: V879 = MUL 0xb237f7d4 0x100000000000000000000000000000000000000000000000000000000
0x935: M[V873] = 0xb237f7d400000000000000000000000000000000000000000000000000000000
0x936: V880 = 0x1
0x938: V881 = 0xa0
0x93a: V882 = 0x2
0x93c: V883 = EXP 0x2 0xa0
0x93d: V884 = SUB 0x10000000000000000000000000000000000000000 0x1
0x940: V885 = AND V325 0xffffffffffffffffffffffffffffffffffffffff
0x941: V886 = 0x4
0x944: V887 = ADD V873 0x4
0x945: M[V887] = V885
0x946: V888 = 0x24
0x948: V889 = ADD 0x24 V873
0x949: V890 = 0x0
0x94b: V891 = 0x40
0x94d: V892 = M[0x40]
0x950: V893 = SUB V889 V892
0x952: V894 = 0x0
0x956: V895 = EXTCODESIZE V870
0x957: V896 = ISZERO V895
0x958: V897 = ISZERO V896
0x959: V898 = 0x961
0x95c: JUMPI 0x961 V897
---
Entry stack: [V12, 0x11a, V325, V858]
Stack pops: 2
Stack additions: [S1, S0, V870, 0xb237f7d4, V889, 0x0, V892, V893, V892, 0x0, V870]
Exit stack: [V12, 0x11a, V325, V858, V870, 0xb237f7d4, V889, 0x0, V892, V893, V892, 0x0, V870]

================================

Block 0x95d
[0x95d:0x960]
---
Predecessors: [0x911]
Successors: []
---
0x95d PUSH1 0x0
0x95f DUP1
0x960 REVERT
---
0x95d: V899 = 0x0
0x960: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V325, V858, V870, 0xb237f7d4, V889, 0x0, V892, V893, V892, 0x0, V870]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V325, V858, V870, 0xb237f7d4, V889, 0x0, V892, V893, V892, 0x0, V870]

================================

Block 0x961
[0x961:0x96d]
---
Predecessors: [0x911]
Successors: [0x96e, 0x972]
---
0x961 JUMPDEST
0x962 PUSH2 0x2c6
0x965 GAS
0x966 SUB
0x967 CALL
0x968 ISZERO
0x969 ISZERO
0x96a PUSH2 0x972
0x96d JUMPI
---
0x961: JUMPDEST 
0x962: V900 = 0x2c6
0x965: V901 = GAS
0x966: V902 = SUB V901 0x2c6
0x967: V903 = CALL V902 V870 0x0 V892 V893 V892 0x0
0x968: V904 = ISZERO V903
0x969: V905 = ISZERO V904
0x96a: V906 = 0x972
0x96d: JUMPI 0x972 V905
---
Entry stack: [V12, 0x11a, V325, V858, V870, 0xb237f7d4, V889, 0x0, V892, V893, V892, 0x0, V870]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x11a, V325, V858, V870, 0xb237f7d4, V889]

================================

Block 0x96e
[0x96e:0x971]
---
Predecessors: [0x961]
Successors: []
---
0x96e PUSH1 0x0
0x970 DUP1
0x971 REVERT
---
0x96e: V907 = 0x0
0x971: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V325, V858, V870, 0xb237f7d4, V889]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V325, V858, V870, 0xb237f7d4, V889]

================================

Block 0x972
[0x972:0x9c7]
---
Predecessors: [0x961]
Successors: [0x9c8, 0x9cc]
---
0x972 JUMPDEST
0x973 POP
0x974 POP
0x975 PUSH1 0x3
0x977 SLOAD
0x978 PUSH1 0x1
0x97a PUSH1 0xa0
0x97c PUSH1 0x2
0x97e EXP
0x97f SUB
0x980 AND
0x981 SWAP1
0x982 POP
0x983 PUSH4 0x40c10f19
0x988 DUP4
0x989 DUP4
0x98a PUSH1 0x40
0x98c MLOAD
0x98d PUSH1 0xe0
0x98f PUSH1 0x2
0x991 EXP
0x992 PUSH4 0xffffffff
0x997 DUP6
0x998 AND
0x999 MUL
0x99a DUP2
0x99b MSTORE
0x99c PUSH1 0x1
0x99e PUSH1 0xa0
0x9a0 PUSH1 0x2
0x9a2 EXP
0x9a3 SUB
0x9a4 SWAP1
0x9a5 SWAP3
0x9a6 AND
0x9a7 PUSH1 0x4
0x9a9 DUP4
0x9aa ADD
0x9ab MSTORE
0x9ac PUSH1 0x24
0x9ae DUP3
0x9af ADD
0x9b0 MSTORE
0x9b1 PUSH1 0x44
0x9b3 ADD
0x9b4 PUSH1 0x0
0x9b6 PUSH1 0x40
0x9b8 MLOAD
0x9b9 DUP1
0x9ba DUP4
0x9bb SUB
0x9bc DUP2
0x9bd PUSH1 0x0
0x9bf DUP8
0x9c0 DUP1
0x9c1 EXTCODESIZE
0x9c2 ISZERO
0x9c3 ISZERO
0x9c4 PUSH2 0x9cc
0x9c7 JUMPI
---
0x972: JUMPDEST 
0x975: V908 = 0x3
0x977: V909 = S[0x3]
0x978: V910 = 0x1
0x97a: V911 = 0xa0
0x97c: V912 = 0x2
0x97e: V913 = EXP 0x2 0xa0
0x97f: V914 = SUB 0x10000000000000000000000000000000000000000 0x1
0x980: V915 = AND 0xffffffffffffffffffffffffffffffffffffffff V909
0x983: V916 = 0x40c10f19
0x98a: V917 = 0x40
0x98c: V918 = M[0x40]
0x98d: V919 = 0xe0
0x98f: V920 = 0x2
0x991: V921 = EXP 0x2 0xe0
0x992: V922 = 0xffffffff
0x998: V923 = AND 0x40c10f19 0xffffffff
0x999: V924 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0x99b: M[V918] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0x99c: V925 = 0x1
0x99e: V926 = 0xa0
0x9a0: V927 = 0x2
0x9a2: V928 = EXP 0x2 0xa0
0x9a3: V929 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a6: V930 = AND V325 0xffffffffffffffffffffffffffffffffffffffff
0x9a7: V931 = 0x4
0x9aa: V932 = ADD V918 0x4
0x9ab: M[V932] = V930
0x9ac: V933 = 0x24
0x9af: V934 = ADD V918 0x24
0x9b0: M[V934] = V858
0x9b1: V935 = 0x44
0x9b3: V936 = ADD 0x44 V918
0x9b4: V937 = 0x0
0x9b6: V938 = 0x40
0x9b8: V939 = M[0x40]
0x9bb: V940 = SUB V936 V939
0x9bd: V941 = 0x0
0x9c1: V942 = EXTCODESIZE V915
0x9c2: V943 = ISZERO V942
0x9c3: V944 = ISZERO V943
0x9c4: V945 = 0x9cc
0x9c7: JUMPI 0x9cc V944
---
Entry stack: [V12, 0x11a, V325, V858, V870, 0xb237f7d4, V889]
Stack pops: 5
Stack additions: [S4, S3, V915, 0x40c10f19, V936, 0x0, V939, V940, V939, 0x0, V915]
Exit stack: [V12, 0x11a, V325, V858, V915, 0x40c10f19, V936, 0x0, V939, V940, V939, 0x0, V915]

================================

Block 0x9c8
[0x9c8:0x9cb]
---
Predecessors: [0x972]
Successors: []
---
0x9c8 PUSH1 0x0
0x9ca DUP1
0x9cb REVERT
---
0x9c8: V946 = 0x0
0x9cb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V325, V858, V915, 0x40c10f19, V936, 0x0, V939, V940, V939, 0x0, V915]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V325, V858, V915, 0x40c10f19, V936, 0x0, V939, V940, V939, 0x0, V915]

================================

Block 0x9cc
[0x9cc:0x9d8]
---
Predecessors: [0x972]
Successors: [0x9d9, 0x9dd]
---
0x9cc JUMPDEST
0x9cd PUSH2 0x2c6
0x9d0 GAS
0x9d1 SUB
0x9d2 CALL
0x9d3 ISZERO
0x9d4 ISZERO
0x9d5 PUSH2 0x9dd
0x9d8 JUMPI
---
0x9cc: JUMPDEST 
0x9cd: V947 = 0x2c6
0x9d0: V948 = GAS
0x9d1: V949 = SUB V948 0x2c6
0x9d2: V950 = CALL V949 V915 0x0 V939 V940 V939 0x0
0x9d3: V951 = ISZERO V950
0x9d4: V952 = ISZERO V951
0x9d5: V953 = 0x9dd
0x9d8: JUMPI 0x9dd V952
---
Entry stack: [V12, 0x11a, V325, V858, V915, 0x40c10f19, V936, 0x0, V939, V940, V939, 0x0, V915]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x11a, V325, V858, V915, 0x40c10f19, V936]

================================

Block 0x9d9
[0x9d9:0x9dc]
---
Predecessors: [0x9cc]
Successors: []
---
0x9d9 PUSH1 0x0
0x9db DUP1
0x9dc REVERT
---
0x9d9: V954 = 0x0
0x9dc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V325, V858, V915, 0x40c10f19, V936]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V325, V858, V915, 0x40c10f19, V936]

================================

Block 0x9dd
[0x9dd:0xa24]
---
Predecessors: [0x9cc]
Successors: [0xa25]
---
0x9dd JUMPDEST
0x9de POP
0x9df POP
0x9e0 POP
0x9e1 PUSH32 0x4d3ec092ae323559b5f27ce3f6fcc52cbe7a1b4af015ad0dbb64f8dc01186933
0xa02 DUP3
0xa03 DUP3
0xa04 PUSH1 0x40
0xa06 MLOAD
0xa07 PUSH1 0x1
0xa09 PUSH1 0xa0
0xa0b PUSH1 0x2
0xa0d EXP
0xa0e SUB
0xa0f SWAP1
0xa10 SWAP3
0xa11 AND
0xa12 DUP3
0xa13 MSTORE
0xa14 PUSH1 0x20
0xa16 DUP3
0xa17 ADD
0xa18 MSTORE
0xa19 PUSH1 0x40
0xa1b SWAP1
0xa1c DUP2
0xa1d ADD
0xa1e SWAP1
0xa1f MLOAD
0xa20 DUP1
0xa21 SWAP2
0xa22 SUB
0xa23 SWAP1
0xa24 LOG1
---
0x9dd: JUMPDEST 
0x9e1: V955 = 0x4d3ec092ae323559b5f27ce3f6fcc52cbe7a1b4af015ad0dbb64f8dc01186933
0xa04: V956 = 0x40
0xa06: V957 = M[0x40]
0xa07: V958 = 0x1
0xa09: V959 = 0xa0
0xa0b: V960 = 0x2
0xa0d: V961 = EXP 0x2 0xa0
0xa0e: V962 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa11: V963 = AND V325 0xffffffffffffffffffffffffffffffffffffffff
0xa13: M[V957] = V963
0xa14: V964 = 0x20
0xa17: V965 = ADD V957 0x20
0xa18: M[V965] = V858
0xa19: V966 = 0x40
0xa1d: V967 = ADD 0x40 V957
0xa1f: V968 = M[0x40]
0xa22: V969 = SUB V967 V968
0xa24: LOG V968 V969 0x4d3ec092ae323559b5f27ce3f6fcc52cbe7a1b4af015ad0dbb64f8dc01186933
---
Entry stack: [V12, 0x11a, V325, V858, V915, 0x40c10f19, V936]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V12, 0x11a, V325, V858]

================================

Block 0xa25
[0xa25:0xa25]
---
Predecessors: [0x9dd]
Successors: [0xa26]
---
0xa25 JUMPDEST
---
0xa25: JUMPDEST 
---
Entry stack: [V12, 0x11a, V325, V858]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V325, V858]

================================

Block 0xa26
[0xa26:0xa29]
---
Predecessors: [0xa25]
Successors: [0x11a]
---
0xa26 JUMPDEST
0xa27 POP
0xa28 POP
0xa29 JUMP
---
0xa26: JUMPDEST 
0xa29: JUMP 0x11a
---
Entry stack: [V12, 0x11a, V325, V858]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0xa2a
[0xa2a:0xa2f]
---
Predecessors: [0x396]
Successors: [0x161]
---
0xa2a JUMPDEST
0xa2b PUSH1 0x2
0xa2d SLOAD
0xa2e DUP2
0xa2f JUMP
---
0xa2a: JUMPDEST 
0xa2b: V970 = 0x2
0xa2d: V971 = S[0x2]
0xa2f: JUMP 0x161
---
Entry stack: [V12, 0x161]
Stack pops: 1
Stack additions: [S0, V971]
Exit stack: [V12, 0x161, V971]

================================

Block 0xa30
[0xa30:0xa35]
---
Predecessors: [0x3bb]
Successors: [0x161]
---
0xa30 JUMPDEST
0xa31 PUSH1 0x0
0xa33 SLOAD
0xa34 DUP2
0xa35 JUMP
---
0xa30: JUMPDEST 
0xa31: V972 = 0x0
0xa33: V973 = S[0x0]
0xa35: JUMP 0x161
---
Entry stack: [V12, 0x161]
Stack pops: 1
Stack additions: [S0, V973]
Exit stack: [V12, 0x161, V973]

================================

Block 0xa36
[0xa36:0xa51]
---
Predecessors: [0x3e0]
Successors: [0xa52, 0xa56]
---
0xa36 JUMPDEST
0xa37 PUSH1 0xa
0xa39 SLOAD
0xa3a PUSH1 0x0
0xa3c SWAP1
0xa3d DUP2
0xa3e SWAP1
0xa3f CALLER
0xa40 PUSH1 0x1
0xa42 PUSH1 0xa0
0xa44 PUSH1 0x2
0xa46 EXP
0xa47 SUB
0xa48 SWAP1
0xa49 DUP2
0xa4a AND
0xa4b SWAP2
0xa4c AND
0xa4d EQ
0xa4e PUSH2 0xa56
0xa51 JUMPI
---
0xa36: JUMPDEST 
0xa37: V974 = 0xa
0xa39: V975 = S[0xa]
0xa3a: V976 = 0x0
0xa3f: V977 = CALLER
0xa40: V978 = 0x1
0xa42: V979 = 0xa0
0xa44: V980 = 0x2
0xa46: V981 = EXP 0x2 0xa0
0xa47: V982 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa4a: V983 = AND 0xffffffffffffffffffffffffffffffffffffffff V977
0xa4c: V984 = AND V975 0xffffffffffffffffffffffffffffffffffffffff
0xa4d: V985 = EQ V984 V983
0xa4e: V986 = 0xa56
0xa51: JUMPI 0xa56 V985
---
Entry stack: [V12, 0x11a]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V12, 0x11a, 0x0, 0x0]

================================

Block 0xa52
[0xa52:0xa55]
---
Predecessors: [0xa36]
Successors: []
---
0xa52 PUSH1 0x0
0xa54 DUP1
0xa55 REVERT
---
0xa52: V987 = 0x0
0xa55: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, 0x0, 0x0]

================================

Block 0xa56
[0xa56:0xa58]
---
Predecessors: [0xa36]
Successors: [0xa59]
---
0xa56 JUMPDEST
0xa57 PUSH1 0x1
---
0xa56: JUMPDEST 
0xa57: V988 = 0x1
---
Entry stack: [V12, 0x11a, 0x0, 0x0]
Stack pops: 0
Stack additions: [0x1]
Exit stack: [V12, 0x11a, 0x0, 0x0, 0x1]

================================

Block 0xa59
[0xa59:0xa68]
---
Predecessors: [0xa56]
Successors: [0xa69, 0xa6a]
---
0xa59 JUMPDEST
0xa5a PUSH1 0x13
0xa5c SLOAD
0xa5d PUSH1 0xff
0xa5f AND
0xa60 PUSH1 0x3
0xa62 DUP2
0xa63 GT
0xa64 ISZERO
0xa65 PUSH2 0xa6a
0xa68 JUMPI
---
0xa59: JUMPDEST 
0xa5a: V989 = 0x13
0xa5c: V990 = S[0x13]
0xa5d: V991 = 0xff
0xa5f: V992 = AND 0xff V990
0xa60: V993 = 0x3
0xa63: V994 = GT V992 0x3
0xa64: V995 = ISZERO V994
0xa65: V996 = 0xa6a
0xa68: JUMPI 0xa6a V995
---
Entry stack: [V12, 0x11a, 0x0, 0x0, 0x1]
Stack pops: 0
Stack additions: [V992]
Exit stack: [V12, 0x11a, 0x0, 0x0, 0x1, V992]

================================

Block 0xa69
[0xa69:0xa69]
---
Predecessors: [0xa59]
Successors: []
---
0xa69 INVALID
---
0xa69: INVALID 
---
Entry stack: [V12, 0x11a, 0x0, 0x0, 0x1, V992]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, 0x0, 0x0, 0x1, V992]

================================

Block 0xa6a
[0xa6a:0xa6f]
---
Predecessors: [0xa59]
Successors: [0xa70, 0xa74]
---
0xa6a JUMPDEST
0xa6b EQ
0xa6c PUSH2 0xa74
0xa6f JUMPI
---
0xa6a: JUMPDEST 
0xa6b: V997 = EQ V992 0x1
0xa6c: V998 = 0xa74
0xa6f: JUMPI 0xa74 V997
---
Entry stack: [V12, 0x11a, 0x0, 0x0, 0x1, V992]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x11a, 0x0, 0x0]

================================

Block 0xa70
[0xa70:0xa73]
---
Predecessors: [0xa6a]
Successors: []
---
0xa70 PUSH1 0x0
0xa72 DUP1
0xa73 REVERT
---
0xa70: V999 = 0x0
0xa73: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, 0x0, 0x0]

================================

Block 0xa74
[0xa74:0xab7]
---
Predecessors: [0xa6a]
Successors: [0xab8, 0xabc]
---
0xa74 JUMPDEST
0xa75 PUSH1 0x3
0xa77 SLOAD
0xa78 PUSH1 0x1
0xa7a PUSH1 0xa0
0xa7c PUSH1 0x2
0xa7e EXP
0xa7f SUB
0xa80 AND
0xa81 PUSH4 0x18160ddd
0xa86 PUSH1 0x0
0xa88 PUSH1 0x40
0xa8a MLOAD
0xa8b PUSH1 0x20
0xa8d ADD
0xa8e MSTORE
0xa8f PUSH1 0x40
0xa91 MLOAD
0xa92 DUP2
0xa93 PUSH4 0xffffffff
0xa98 AND
0xa99 PUSH1 0xe0
0xa9b PUSH1 0x2
0xa9d EXP
0xa9e MUL
0xa9f DUP2
0xaa0 MSTORE
0xaa1 PUSH1 0x4
0xaa3 ADD
0xaa4 PUSH1 0x20
0xaa6 PUSH1 0x40
0xaa8 MLOAD
0xaa9 DUP1
0xaaa DUP4
0xaab SUB
0xaac DUP2
0xaad PUSH1 0x0
0xaaf DUP8
0xab0 DUP1
0xab1 EXTCODESIZE
0xab2 ISZERO
0xab3 ISZERO
0xab4 PUSH2 0xabc
0xab7 JUMPI
---
0xa74: JUMPDEST 
0xa75: V1000 = 0x3
0xa77: V1001 = S[0x3]
0xa78: V1002 = 0x1
0xa7a: V1003 = 0xa0
0xa7c: V1004 = 0x2
0xa7e: V1005 = EXP 0x2 0xa0
0xa7f: V1006 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa80: V1007 = AND 0xffffffffffffffffffffffffffffffffffffffff V1001
0xa81: V1008 = 0x18160ddd
0xa86: V1009 = 0x0
0xa88: V1010 = 0x40
0xa8a: V1011 = M[0x40]
0xa8b: V1012 = 0x20
0xa8d: V1013 = ADD 0x20 V1011
0xa8e: M[V1013] = 0x0
0xa8f: V1014 = 0x40
0xa91: V1015 = M[0x40]
0xa93: V1016 = 0xffffffff
0xa98: V1017 = AND 0xffffffff 0x18160ddd
0xa99: V1018 = 0xe0
0xa9b: V1019 = 0x2
0xa9d: V1020 = EXP 0x2 0xe0
0xa9e: V1021 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x18160ddd
0xaa0: M[V1015] = 0x18160ddd00000000000000000000000000000000000000000000000000000000
0xaa1: V1022 = 0x4
0xaa3: V1023 = ADD 0x4 V1015
0xaa4: V1024 = 0x20
0xaa6: V1025 = 0x40
0xaa8: V1026 = M[0x40]
0xaab: V1027 = SUB V1023 V1026
0xaad: V1028 = 0x0
0xab1: V1029 = EXTCODESIZE V1007
0xab2: V1030 = ISZERO V1029
0xab3: V1031 = ISZERO V1030
0xab4: V1032 = 0xabc
0xab7: JUMPI 0xabc V1031
---
Entry stack: [V12, 0x11a, 0x0, 0x0]
Stack pops: 0
Stack additions: [V1007, 0x18160ddd, V1023, 0x20, V1026, V1027, V1026, 0x0, V1007]
Exit stack: [V12, 0x11a, 0x0, 0x0, V1007, 0x18160ddd, V1023, 0x20, V1026, V1027, V1026, 0x0, V1007]

================================

Block 0xab8
[0xab8:0xabb]
---
Predecessors: [0xa74]
Successors: []
---
0xab8 PUSH1 0x0
0xaba DUP1
0xabb REVERT
---
0xab8: V1033 = 0x0
0xabb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, 0x0, 0x0, V1007, 0x18160ddd, V1023, 0x20, V1026, V1027, V1026, 0x0, V1007]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, 0x0, 0x0, V1007, 0x18160ddd, V1023, 0x20, V1026, V1027, V1026, 0x0, V1007]

================================

Block 0xabc
[0xabc:0xac8]
---
Predecessors: [0xa74]
Successors: [0xac9, 0xacd]
---
0xabc JUMPDEST
0xabd PUSH2 0x2c6
0xac0 GAS
0xac1 SUB
0xac2 CALL
0xac3 ISZERO
0xac4 ISZERO
0xac5 PUSH2 0xacd
0xac8 JUMPI
---
0xabc: JUMPDEST 
0xabd: V1034 = 0x2c6
0xac0: V1035 = GAS
0xac1: V1036 = SUB V1035 0x2c6
0xac2: V1037 = CALL V1036 V1007 0x0 V1026 V1027 V1026 0x20
0xac3: V1038 = ISZERO V1037
0xac4: V1039 = ISZERO V1038
0xac5: V1040 = 0xacd
0xac8: JUMPI 0xacd V1039
---
Entry stack: [V12, 0x11a, 0x0, 0x0, V1007, 0x18160ddd, V1023, 0x20, V1026, V1027, V1026, 0x0, V1007]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x11a, 0x0, 0x0, V1007, 0x18160ddd, V1023]

================================

Block 0xac9
[0xac9:0xacc]
---
Predecessors: [0xabc]
Successors: []
---
0xac9 PUSH1 0x0
0xacb DUP1
0xacc REVERT
---
0xac9: V1041 = 0x0
0xacc: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, 0x0, 0x0, V1007, 0x18160ddd, V1023]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, 0x0, 0x0, V1007, 0x18160ddd, V1023]

================================

Block 0xacd
[0xacd:0xae8]
---
Predecessors: [0xabc]
Successors: [0xae9, 0xaea]
---
0xacd JUMPDEST
0xace POP
0xacf POP
0xad0 POP
0xad1 PUSH1 0x40
0xad3 MLOAD
0xad4 DUP1
0xad5 MLOAD
0xad6 SWAP1
0xad7 POP
0xad8 SWAP2
0xad9 POP
0xada PUSH1 0x12
0xadc SLOAD
0xadd DUP3
0xade PUSH2 0x2710
0xae1 MUL
0xae2 DUP2
0xae3 ISZERO
0xae4 ISZERO
0xae5 PUSH2 0xaea
0xae8 JUMPI
---
0xacd: JUMPDEST 
0xad1: V1042 = 0x40
0xad3: V1043 = M[0x40]
0xad5: V1044 = M[V1043]
0xada: V1045 = 0x12
0xadc: V1046 = S[0x12]
0xade: V1047 = 0x2710
0xae1: V1048 = MUL 0x2710 V1044
0xae3: V1049 = ISZERO V1046
0xae4: V1050 = ISZERO V1049
0xae5: V1051 = 0xaea
0xae8: JUMPI 0xaea V1050
---
Entry stack: [V12, 0x11a, 0x0, 0x0, V1007, 0x18160ddd, V1023]
Stack pops: 5
Stack additions: [V1044, S3, V1046, V1048]
Exit stack: [V12, 0x11a, V1044, 0x0, V1046, V1048]

================================

Block 0xae9
[0xae9:0xae9]
---
Predecessors: [0xacd]
Successors: []
---
0xae9 INVALID
---
0xae9: INVALID 
---
Entry stack: [V12, 0x11a, V1044, 0x0, V1046, V1048]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V1044, 0x0, V1046, V1048]

================================

Block 0xaea
[0xaea:0xb15]
---
Predecessors: [0xacd]
Successors: [0xb16]
---
0xaea JUMPDEST
0xaeb PUSH1 0x3
0xaed SLOAD
0xaee PUSH1 0x6
0xaf0 SLOAD
0xaf1 PUSH1 0xe
0xaf3 SLOAD
0xaf4 SWAP4
0xaf5 SWAP1
0xaf6 SWAP3
0xaf7 DIV
0xaf8 SWAP4
0xaf9 POP
0xafa PUSH1 0x1
0xafc PUSH1 0xa0
0xafe PUSH1 0x2
0xb00 EXP
0xb01 SUB
0xb02 SWAP1
0xb03 DUP2
0xb04 AND
0xb05 SWAP3
0xb06 PUSH4 0x40c10f19
0xb0b SWAP3
0xb0c SWAP1
0xb0d SWAP2
0xb0e AND
0xb0f SWAP1
0xb10 PUSH2 0x2710
0xb13 SWAP1
0xb14 DUP6
0xb15 MUL
---
0xaea: JUMPDEST 
0xaeb: V1052 = 0x3
0xaed: V1053 = S[0x3]
0xaee: V1054 = 0x6
0xaf0: V1055 = S[0x6]
0xaf1: V1056 = 0xe
0xaf3: V1057 = S[0xe]
0xaf7: V1058 = DIV V1048 V1046
0xafa: V1059 = 0x1
0xafc: V1060 = 0xa0
0xafe: V1061 = 0x2
0xb00: V1062 = EXP 0x2 0xa0
0xb01: V1063 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb04: V1064 = AND 0xffffffffffffffffffffffffffffffffffffffff V1053
0xb06: V1065 = 0x40c10f19
0xb0e: V1066 = AND 0xffffffffffffffffffffffffffffffffffffffff V1055
0xb10: V1067 = 0x2710
0xb15: V1068 = MUL V1058 V1057
---
Entry stack: [V12, 0x11a, V1044, 0x0, V1046, V1048]
Stack pops: 3
Stack additions: [V1058, V1064, 0x40c10f19, V1066, 0x2710, V1068]
Exit stack: [V12, 0x11a, V1044, V1058, V1064, 0x40c10f19, V1066, 0x2710, V1068]

================================

Block 0xb16
[0xb16:0xb55]
---
Predecessors: [0xaea]
Successors: [0xb56, 0xb5a]
---
0xb16 JUMPDEST
0xb17 DIV
0xb18 PUSH1 0x40
0xb1a MLOAD
0xb1b PUSH1 0xe0
0xb1d PUSH1 0x2
0xb1f EXP
0xb20 PUSH4 0xffffffff
0xb25 DUP6
0xb26 AND
0xb27 MUL
0xb28 DUP2
0xb29 MSTORE
0xb2a PUSH1 0x1
0xb2c PUSH1 0xa0
0xb2e PUSH1 0x2
0xb30 EXP
0xb31 SUB
0xb32 SWAP1
0xb33 SWAP3
0xb34 AND
0xb35 PUSH1 0x4
0xb37 DUP4
0xb38 ADD
0xb39 MSTORE
0xb3a PUSH1 0x24
0xb3c DUP3
0xb3d ADD
0xb3e MSTORE
0xb3f PUSH1 0x44
0xb41 ADD
0xb42 PUSH1 0x0
0xb44 PUSH1 0x40
0xb46 MLOAD
0xb47 DUP1
0xb48 DUP4
0xb49 SUB
0xb4a DUP2
0xb4b PUSH1 0x0
0xb4d DUP8
0xb4e DUP1
0xb4f EXTCODESIZE
0xb50 ISZERO
0xb51 ISZERO
0xb52 PUSH2 0xb5a
0xb55 JUMPI
---
0xb16: JUMPDEST 
0xb17: V1069 = DIV V1068 0x2710
0xb18: V1070 = 0x40
0xb1a: V1071 = M[0x40]
0xb1b: V1072 = 0xe0
0xb1d: V1073 = 0x2
0xb1f: V1074 = EXP 0x2 0xe0
0xb20: V1075 = 0xffffffff
0xb26: V1076 = AND 0x40c10f19 0xffffffff
0xb27: V1077 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0xb29: M[V1071] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0xb2a: V1078 = 0x1
0xb2c: V1079 = 0xa0
0xb2e: V1080 = 0x2
0xb30: V1081 = EXP 0x2 0xa0
0xb31: V1082 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb34: V1083 = AND V1066 0xffffffffffffffffffffffffffffffffffffffff
0xb35: V1084 = 0x4
0xb38: V1085 = ADD V1071 0x4
0xb39: M[V1085] = V1083
0xb3a: V1086 = 0x24
0xb3d: V1087 = ADD V1071 0x24
0xb3e: M[V1087] = V1069
0xb3f: V1088 = 0x44
0xb41: V1089 = ADD 0x44 V1071
0xb42: V1090 = 0x0
0xb44: V1091 = 0x40
0xb46: V1092 = M[0x40]
0xb49: V1093 = SUB V1089 V1092
0xb4b: V1094 = 0x0
0xb4f: V1095 = EXTCODESIZE V1064
0xb50: V1096 = ISZERO V1095
0xb51: V1097 = ISZERO V1096
0xb52: V1098 = 0xb5a
0xb55: JUMPI 0xb5a V1097
---
Entry stack: [V12, 0x11a, V1044, V1058, V1064, 0x40c10f19, V1066, 0x2710, V1068]
Stack pops: 5
Stack additions: [S4, S3, V1089, 0x0, V1092, V1093, V1092, 0x0, S4]
Exit stack: [V12, 0x11a, V1044, V1058, V1064, 0x40c10f19, V1089, 0x0, V1092, V1093, V1092, 0x0, V1064]

================================

Block 0xb56
[0xb56:0xb59]
---
Predecessors: [0xb16]
Successors: []
---
0xb56 PUSH1 0x0
0xb58 DUP1
0xb59 REVERT
---
0xb56: V1099 = 0x0
0xb59: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V1044, V1058, V1064, 0x40c10f19, V1089, 0x0, V1092, V1093, V1092, 0x0, V1064]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058, V1064, 0x40c10f19, V1089, 0x0, V1092, V1093, V1092, 0x0, V1064]

================================

Block 0xb5a
[0xb5a:0xb66]
---
Predecessors: [0xb16]
Successors: [0xb67, 0xb6b]
---
0xb5a JUMPDEST
0xb5b PUSH2 0x2c6
0xb5e GAS
0xb5f SUB
0xb60 CALL
0xb61 ISZERO
0xb62 ISZERO
0xb63 PUSH2 0xb6b
0xb66 JUMPI
---
0xb5a: JUMPDEST 
0xb5b: V1100 = 0x2c6
0xb5e: V1101 = GAS
0xb5f: V1102 = SUB V1101 0x2c6
0xb60: V1103 = CALL V1102 V1064 0x0 V1092 V1093 V1092 0x0
0xb61: V1104 = ISZERO V1103
0xb62: V1105 = ISZERO V1104
0xb63: V1106 = 0xb6b
0xb66: JUMPI 0xb6b V1105
---
Entry stack: [V12, 0x11a, V1044, V1058, V1064, 0x40c10f19, V1089, 0x0, V1092, V1093, V1092, 0x0, V1064]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058, V1064, 0x40c10f19, V1089]

================================

Block 0xb67
[0xb67:0xb6a]
---
Predecessors: [0xb5a]
Successors: []
---
0xb67 PUSH1 0x0
0xb69 DUP1
0xb6a REVERT
---
0xb67: V1107 = 0x0
0xb6a: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V1044, V1058, V1064, 0x40c10f19, V1089]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058, V1064, 0x40c10f19, V1089]

================================

Block 0xb6b
[0xb6b:0xb93]
---
Predecessors: [0xb5a]
Successors: [0xb94]
---
0xb6b JUMPDEST
0xb6c POP
0xb6d POP
0xb6e PUSH1 0x3
0xb70 SLOAD
0xb71 PUSH1 0x7
0xb73 SLOAD
0xb74 PUSH1 0xf
0xb76 SLOAD
0xb77 PUSH1 0x1
0xb79 PUSH1 0xa0
0xb7b PUSH1 0x2
0xb7d EXP
0xb7e SUB
0xb7f SWAP3
0xb80 DUP4
0xb81 AND
0xb82 SWAP4
0xb83 POP
0xb84 PUSH4 0x40c10f19
0xb89 SWAP3
0xb8a SWAP1
0xb8b SWAP2
0xb8c AND
0xb8d SWAP1
0xb8e PUSH2 0x2710
0xb91 SWAP1
0xb92 DUP6
0xb93 MUL
---
0xb6b: JUMPDEST 
0xb6e: V1108 = 0x3
0xb70: V1109 = S[0x3]
0xb71: V1110 = 0x7
0xb73: V1111 = S[0x7]
0xb74: V1112 = 0xf
0xb76: V1113 = S[0xf]
0xb77: V1114 = 0x1
0xb79: V1115 = 0xa0
0xb7b: V1116 = 0x2
0xb7d: V1117 = EXP 0x2 0xa0
0xb7e: V1118 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb81: V1119 = AND 0xffffffffffffffffffffffffffffffffffffffff V1109
0xb84: V1120 = 0x40c10f19
0xb8c: V1121 = AND V1111 0xffffffffffffffffffffffffffffffffffffffff
0xb8e: V1122 = 0x2710
0xb93: V1123 = MUL V1058 V1113
---
Entry stack: [V12, 0x11a, V1044, V1058, V1064, 0x40c10f19, V1089]
Stack pops: 4
Stack additions: [S3, V1119, 0x40c10f19, V1121, 0x2710, V1123]
Exit stack: [V12, 0x11a, V1044, V1058, V1119, 0x40c10f19, V1121, 0x2710, V1123]

================================

Block 0xb94
[0xb94:0xbd3]
---
Predecessors: [0xb6b]
Successors: [0xbd4, 0xbd8]
---
0xb94 JUMPDEST
0xb95 DIV
0xb96 PUSH1 0x40
0xb98 MLOAD
0xb99 PUSH1 0xe0
0xb9b PUSH1 0x2
0xb9d EXP
0xb9e PUSH4 0xffffffff
0xba3 DUP6
0xba4 AND
0xba5 MUL
0xba6 DUP2
0xba7 MSTORE
0xba8 PUSH1 0x1
0xbaa PUSH1 0xa0
0xbac PUSH1 0x2
0xbae EXP
0xbaf SUB
0xbb0 SWAP1
0xbb1 SWAP3
0xbb2 AND
0xbb3 PUSH1 0x4
0xbb5 DUP4
0xbb6 ADD
0xbb7 MSTORE
0xbb8 PUSH1 0x24
0xbba DUP3
0xbbb ADD
0xbbc MSTORE
0xbbd PUSH1 0x44
0xbbf ADD
0xbc0 PUSH1 0x0
0xbc2 PUSH1 0x40
0xbc4 MLOAD
0xbc5 DUP1
0xbc6 DUP4
0xbc7 SUB
0xbc8 DUP2
0xbc9 PUSH1 0x0
0xbcb DUP8
0xbcc DUP1
0xbcd EXTCODESIZE
0xbce ISZERO
0xbcf ISZERO
0xbd0 PUSH2 0xbd8
0xbd3 JUMPI
---
0xb94: JUMPDEST 
0xb95: V1124 = DIV V1123 0x2710
0xb96: V1125 = 0x40
0xb98: V1126 = M[0x40]
0xb99: V1127 = 0xe0
0xb9b: V1128 = 0x2
0xb9d: V1129 = EXP 0x2 0xe0
0xb9e: V1130 = 0xffffffff
0xba4: V1131 = AND 0x40c10f19 0xffffffff
0xba5: V1132 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0xba7: M[V1126] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0xba8: V1133 = 0x1
0xbaa: V1134 = 0xa0
0xbac: V1135 = 0x2
0xbae: V1136 = EXP 0x2 0xa0
0xbaf: V1137 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbb2: V1138 = AND V1121 0xffffffffffffffffffffffffffffffffffffffff
0xbb3: V1139 = 0x4
0xbb6: V1140 = ADD V1126 0x4
0xbb7: M[V1140] = V1138
0xbb8: V1141 = 0x24
0xbbb: V1142 = ADD V1126 0x24
0xbbc: M[V1142] = V1124
0xbbd: V1143 = 0x44
0xbbf: V1144 = ADD 0x44 V1126
0xbc0: V1145 = 0x0
0xbc2: V1146 = 0x40
0xbc4: V1147 = M[0x40]
0xbc7: V1148 = SUB V1144 V1147
0xbc9: V1149 = 0x0
0xbcd: V1150 = EXTCODESIZE V1119
0xbce: V1151 = ISZERO V1150
0xbcf: V1152 = ISZERO V1151
0xbd0: V1153 = 0xbd8
0xbd3: JUMPI 0xbd8 V1152
---
Entry stack: [V12, 0x11a, V1044, V1058, V1119, 0x40c10f19, V1121, 0x2710, V1123]
Stack pops: 5
Stack additions: [S4, S3, V1144, 0x0, V1147, V1148, V1147, 0x0, S4]
Exit stack: [V12, 0x11a, V1044, V1058, V1119, 0x40c10f19, V1144, 0x0, V1147, V1148, V1147, 0x0, V1119]

================================

Block 0xbd4
[0xbd4:0xbd7]
---
Predecessors: [0xb94]
Successors: []
---
0xbd4 PUSH1 0x0
0xbd6 DUP1
0xbd7 REVERT
---
0xbd4: V1154 = 0x0
0xbd7: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V1044, V1058, V1119, 0x40c10f19, V1144, 0x0, V1147, V1148, V1147, 0x0, V1119]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058, V1119, 0x40c10f19, V1144, 0x0, V1147, V1148, V1147, 0x0, V1119]

================================

Block 0xbd8
[0xbd8:0xbe4]
---
Predecessors: [0xb94]
Successors: [0xbe5, 0xbe9]
---
0xbd8 JUMPDEST
0xbd9 PUSH2 0x2c6
0xbdc GAS
0xbdd SUB
0xbde CALL
0xbdf ISZERO
0xbe0 ISZERO
0xbe1 PUSH2 0xbe9
0xbe4 JUMPI
---
0xbd8: JUMPDEST 
0xbd9: V1155 = 0x2c6
0xbdc: V1156 = GAS
0xbdd: V1157 = SUB V1156 0x2c6
0xbde: V1158 = CALL V1157 V1119 0x0 V1147 V1148 V1147 0x0
0xbdf: V1159 = ISZERO V1158
0xbe0: V1160 = ISZERO V1159
0xbe1: V1161 = 0xbe9
0xbe4: JUMPI 0xbe9 V1160
---
Entry stack: [V12, 0x11a, V1044, V1058, V1119, 0x40c10f19, V1144, 0x0, V1147, V1148, V1147, 0x0, V1119]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058, V1119, 0x40c10f19, V1144]

================================

Block 0xbe5
[0xbe5:0xbe8]
---
Predecessors: [0xbd8]
Successors: []
---
0xbe5 PUSH1 0x0
0xbe7 DUP1
0xbe8 REVERT
---
0xbe5: V1162 = 0x0
0xbe8: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V1044, V1058, V1119, 0x40c10f19, V1144]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058, V1119, 0x40c10f19, V1144]

================================

Block 0xbe9
[0xbe9:0xc11]
---
Predecessors: [0xbd8]
Successors: [0xc12]
---
0xbe9 JUMPDEST
0xbea POP
0xbeb POP
0xbec PUSH1 0x3
0xbee SLOAD
0xbef PUSH1 0x8
0xbf1 SLOAD
0xbf2 PUSH1 0x10
0xbf4 SLOAD
0xbf5 PUSH1 0x1
0xbf7 PUSH1 0xa0
0xbf9 PUSH1 0x2
0xbfb EXP
0xbfc SUB
0xbfd SWAP3
0xbfe DUP4
0xbff AND
0xc00 SWAP4
0xc01 POP
0xc02 PUSH4 0x40c10f19
0xc07 SWAP3
0xc08 SWAP1
0xc09 SWAP2
0xc0a AND
0xc0b SWAP1
0xc0c PUSH2 0x2710
0xc0f SWAP1
0xc10 DUP6
0xc11 MUL
---
0xbe9: JUMPDEST 
0xbec: V1163 = 0x3
0xbee: V1164 = S[0x3]
0xbef: V1165 = 0x8
0xbf1: V1166 = S[0x8]
0xbf2: V1167 = 0x10
0xbf4: V1168 = S[0x10]
0xbf5: V1169 = 0x1
0xbf7: V1170 = 0xa0
0xbf9: V1171 = 0x2
0xbfb: V1172 = EXP 0x2 0xa0
0xbfc: V1173 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbff: V1174 = AND 0xffffffffffffffffffffffffffffffffffffffff V1164
0xc02: V1175 = 0x40c10f19
0xc0a: V1176 = AND V1166 0xffffffffffffffffffffffffffffffffffffffff
0xc0c: V1177 = 0x2710
0xc11: V1178 = MUL V1058 V1168
---
Entry stack: [V12, 0x11a, V1044, V1058, V1119, 0x40c10f19, V1144]
Stack pops: 4
Stack additions: [S3, V1174, 0x40c10f19, V1176, 0x2710, V1178]
Exit stack: [V12, 0x11a, V1044, V1058, V1174, 0x40c10f19, V1176, 0x2710, V1178]

================================

Block 0xc12
[0xc12:0xc51]
---
Predecessors: [0xbe9]
Successors: [0xc52, 0xc56]
---
0xc12 JUMPDEST
0xc13 DIV
0xc14 PUSH1 0x40
0xc16 MLOAD
0xc17 PUSH1 0xe0
0xc19 PUSH1 0x2
0xc1b EXP
0xc1c PUSH4 0xffffffff
0xc21 DUP6
0xc22 AND
0xc23 MUL
0xc24 DUP2
0xc25 MSTORE
0xc26 PUSH1 0x1
0xc28 PUSH1 0xa0
0xc2a PUSH1 0x2
0xc2c EXP
0xc2d SUB
0xc2e SWAP1
0xc2f SWAP3
0xc30 AND
0xc31 PUSH1 0x4
0xc33 DUP4
0xc34 ADD
0xc35 MSTORE
0xc36 PUSH1 0x24
0xc38 DUP3
0xc39 ADD
0xc3a MSTORE
0xc3b PUSH1 0x44
0xc3d ADD
0xc3e PUSH1 0x0
0xc40 PUSH1 0x40
0xc42 MLOAD
0xc43 DUP1
0xc44 DUP4
0xc45 SUB
0xc46 DUP2
0xc47 PUSH1 0x0
0xc49 DUP8
0xc4a DUP1
0xc4b EXTCODESIZE
0xc4c ISZERO
0xc4d ISZERO
0xc4e PUSH2 0xc56
0xc51 JUMPI
---
0xc12: JUMPDEST 
0xc13: V1179 = DIV V1178 0x2710
0xc14: V1180 = 0x40
0xc16: V1181 = M[0x40]
0xc17: V1182 = 0xe0
0xc19: V1183 = 0x2
0xc1b: V1184 = EXP 0x2 0xe0
0xc1c: V1185 = 0xffffffff
0xc22: V1186 = AND 0x40c10f19 0xffffffff
0xc23: V1187 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0xc25: M[V1181] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0xc26: V1188 = 0x1
0xc28: V1189 = 0xa0
0xc2a: V1190 = 0x2
0xc2c: V1191 = EXP 0x2 0xa0
0xc2d: V1192 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc30: V1193 = AND V1176 0xffffffffffffffffffffffffffffffffffffffff
0xc31: V1194 = 0x4
0xc34: V1195 = ADD V1181 0x4
0xc35: M[V1195] = V1193
0xc36: V1196 = 0x24
0xc39: V1197 = ADD V1181 0x24
0xc3a: M[V1197] = V1179
0xc3b: V1198 = 0x44
0xc3d: V1199 = ADD 0x44 V1181
0xc3e: V1200 = 0x0
0xc40: V1201 = 0x40
0xc42: V1202 = M[0x40]
0xc45: V1203 = SUB V1199 V1202
0xc47: V1204 = 0x0
0xc4b: V1205 = EXTCODESIZE V1174
0xc4c: V1206 = ISZERO V1205
0xc4d: V1207 = ISZERO V1206
0xc4e: V1208 = 0xc56
0xc51: JUMPI 0xc56 V1207
---
Entry stack: [V12, 0x11a, V1044, V1058, V1174, 0x40c10f19, V1176, 0x2710, V1178]
Stack pops: 5
Stack additions: [S4, S3, V1199, 0x0, V1202, V1203, V1202, 0x0, S4]
Exit stack: [V12, 0x11a, V1044, V1058, V1174, 0x40c10f19, V1199, 0x0, V1202, V1203, V1202, 0x0, V1174]

================================

Block 0xc52
[0xc52:0xc55]
---
Predecessors: [0xc12]
Successors: []
---
0xc52 PUSH1 0x0
0xc54 DUP1
0xc55 REVERT
---
0xc52: V1209 = 0x0
0xc55: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V1044, V1058, V1174, 0x40c10f19, V1199, 0x0, V1202, V1203, V1202, 0x0, V1174]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058, V1174, 0x40c10f19, V1199, 0x0, V1202, V1203, V1202, 0x0, V1174]

================================

Block 0xc56
[0xc56:0xc62]
---
Predecessors: [0xc12]
Successors: [0xc63, 0xc67]
---
0xc56 JUMPDEST
0xc57 PUSH2 0x2c6
0xc5a GAS
0xc5b SUB
0xc5c CALL
0xc5d ISZERO
0xc5e ISZERO
0xc5f PUSH2 0xc67
0xc62 JUMPI
---
0xc56: JUMPDEST 
0xc57: V1210 = 0x2c6
0xc5a: V1211 = GAS
0xc5b: V1212 = SUB V1211 0x2c6
0xc5c: V1213 = CALL V1212 V1174 0x0 V1202 V1203 V1202 0x0
0xc5d: V1214 = ISZERO V1213
0xc5e: V1215 = ISZERO V1214
0xc5f: V1216 = 0xc67
0xc62: JUMPI 0xc67 V1215
---
Entry stack: [V12, 0x11a, V1044, V1058, V1174, 0x40c10f19, V1199, 0x0, V1202, V1203, V1202, 0x0, V1174]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058, V1174, 0x40c10f19, V1199]

================================

Block 0xc63
[0xc63:0xc66]
---
Predecessors: [0xc56]
Successors: []
---
0xc63 PUSH1 0x0
0xc65 DUP1
0xc66 REVERT
---
0xc63: V1217 = 0x0
0xc66: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V1044, V1058, V1174, 0x40c10f19, V1199]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058, V1174, 0x40c10f19, V1199]

================================

Block 0xc67
[0xc67:0xc8f]
---
Predecessors: [0xc56]
Successors: [0xc90]
---
0xc67 JUMPDEST
0xc68 POP
0xc69 POP
0xc6a PUSH1 0x3
0xc6c SLOAD
0xc6d PUSH1 0x9
0xc6f SLOAD
0xc70 PUSH1 0x11
0xc72 SLOAD
0xc73 PUSH1 0x1
0xc75 PUSH1 0xa0
0xc77 PUSH1 0x2
0xc79 EXP
0xc7a SUB
0xc7b SWAP3
0xc7c DUP4
0xc7d AND
0xc7e SWAP4
0xc7f POP
0xc80 PUSH4 0x40c10f19
0xc85 SWAP3
0xc86 SWAP1
0xc87 SWAP2
0xc88 AND
0xc89 SWAP1
0xc8a PUSH2 0x2710
0xc8d SWAP1
0xc8e DUP6
0xc8f MUL
---
0xc67: JUMPDEST 
0xc6a: V1218 = 0x3
0xc6c: V1219 = S[0x3]
0xc6d: V1220 = 0x9
0xc6f: V1221 = S[0x9]
0xc70: V1222 = 0x11
0xc72: V1223 = S[0x11]
0xc73: V1224 = 0x1
0xc75: V1225 = 0xa0
0xc77: V1226 = 0x2
0xc79: V1227 = EXP 0x2 0xa0
0xc7a: V1228 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7d: V1229 = AND 0xffffffffffffffffffffffffffffffffffffffff V1219
0xc80: V1230 = 0x40c10f19
0xc88: V1231 = AND V1221 0xffffffffffffffffffffffffffffffffffffffff
0xc8a: V1232 = 0x2710
0xc8f: V1233 = MUL V1058 V1223
---
Entry stack: [V12, 0x11a, V1044, V1058, V1174, 0x40c10f19, V1199]
Stack pops: 4
Stack additions: [S3, V1229, 0x40c10f19, V1231, 0x2710, V1233]
Exit stack: [V12, 0x11a, V1044, V1058, V1229, 0x40c10f19, V1231, 0x2710, V1233]

================================

Block 0xc90
[0xc90:0xccf]
---
Predecessors: [0xc67]
Successors: [0xcd0, 0xcd4]
---
0xc90 JUMPDEST
0xc91 DIV
0xc92 PUSH1 0x40
0xc94 MLOAD
0xc95 PUSH1 0xe0
0xc97 PUSH1 0x2
0xc99 EXP
0xc9a PUSH4 0xffffffff
0xc9f DUP6
0xca0 AND
0xca1 MUL
0xca2 DUP2
0xca3 MSTORE
0xca4 PUSH1 0x1
0xca6 PUSH1 0xa0
0xca8 PUSH1 0x2
0xcaa EXP
0xcab SUB
0xcac SWAP1
0xcad SWAP3
0xcae AND
0xcaf PUSH1 0x4
0xcb1 DUP4
0xcb2 ADD
0xcb3 MSTORE
0xcb4 PUSH1 0x24
0xcb6 DUP3
0xcb7 ADD
0xcb8 MSTORE
0xcb9 PUSH1 0x44
0xcbb ADD
0xcbc PUSH1 0x0
0xcbe PUSH1 0x40
0xcc0 MLOAD
0xcc1 DUP1
0xcc2 DUP4
0xcc3 SUB
0xcc4 DUP2
0xcc5 PUSH1 0x0
0xcc7 DUP8
0xcc8 DUP1
0xcc9 EXTCODESIZE
0xcca ISZERO
0xccb ISZERO
0xccc PUSH2 0xcd4
0xccf JUMPI
---
0xc90: JUMPDEST 
0xc91: V1234 = DIV V1233 0x2710
0xc92: V1235 = 0x40
0xc94: V1236 = M[0x40]
0xc95: V1237 = 0xe0
0xc97: V1238 = 0x2
0xc99: V1239 = EXP 0x2 0xe0
0xc9a: V1240 = 0xffffffff
0xca0: V1241 = AND 0x40c10f19 0xffffffff
0xca1: V1242 = MUL 0x40c10f19 0x100000000000000000000000000000000000000000000000000000000
0xca3: M[V1236] = 0x40c10f1900000000000000000000000000000000000000000000000000000000
0xca4: V1243 = 0x1
0xca6: V1244 = 0xa0
0xca8: V1245 = 0x2
0xcaa: V1246 = EXP 0x2 0xa0
0xcab: V1247 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcae: V1248 = AND V1231 0xffffffffffffffffffffffffffffffffffffffff
0xcaf: V1249 = 0x4
0xcb2: V1250 = ADD V1236 0x4
0xcb3: M[V1250] = V1248
0xcb4: V1251 = 0x24
0xcb7: V1252 = ADD V1236 0x24
0xcb8: M[V1252] = V1234
0xcb9: V1253 = 0x44
0xcbb: V1254 = ADD 0x44 V1236
0xcbc: V1255 = 0x0
0xcbe: V1256 = 0x40
0xcc0: V1257 = M[0x40]
0xcc3: V1258 = SUB V1254 V1257
0xcc5: V1259 = 0x0
0xcc9: V1260 = EXTCODESIZE V1229
0xcca: V1261 = ISZERO V1260
0xccb: V1262 = ISZERO V1261
0xccc: V1263 = 0xcd4
0xccf: JUMPI 0xcd4 V1262
---
Entry stack: [V12, 0x11a, V1044, V1058, V1229, 0x40c10f19, V1231, 0x2710, V1233]
Stack pops: 5
Stack additions: [S4, S3, V1254, 0x0, V1257, V1258, V1257, 0x0, S4]
Exit stack: [V12, 0x11a, V1044, V1058, V1229, 0x40c10f19, V1254, 0x0, V1257, V1258, V1257, 0x0, V1229]

================================

Block 0xcd0
[0xcd0:0xcd3]
---
Predecessors: [0xc90]
Successors: []
---
0xcd0 PUSH1 0x0
0xcd2 DUP1
0xcd3 REVERT
---
0xcd0: V1264 = 0x0
0xcd3: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V1044, V1058, V1229, 0x40c10f19, V1254, 0x0, V1257, V1258, V1257, 0x0, V1229]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058, V1229, 0x40c10f19, V1254, 0x0, V1257, V1258, V1257, 0x0, V1229]

================================

Block 0xcd4
[0xcd4:0xce0]
---
Predecessors: [0xc90]
Successors: [0xce1, 0xce5]
---
0xcd4 JUMPDEST
0xcd5 PUSH2 0x2c6
0xcd8 GAS
0xcd9 SUB
0xcda CALL
0xcdb ISZERO
0xcdc ISZERO
0xcdd PUSH2 0xce5
0xce0 JUMPI
---
0xcd4: JUMPDEST 
0xcd5: V1265 = 0x2c6
0xcd8: V1266 = GAS
0xcd9: V1267 = SUB V1266 0x2c6
0xcda: V1268 = CALL V1267 V1229 0x0 V1257 V1258 V1257 0x0
0xcdb: V1269 = ISZERO V1268
0xcdc: V1270 = ISZERO V1269
0xcdd: V1271 = 0xce5
0xce0: JUMPI 0xce5 V1270
---
Entry stack: [V12, 0x11a, V1044, V1058, V1229, 0x40c10f19, V1254, 0x0, V1257, V1258, V1257, 0x0, V1229]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058, V1229, 0x40c10f19, V1254]

================================

Block 0xce1
[0xce1:0xce4]
---
Predecessors: [0xcd4]
Successors: []
---
0xce1 PUSH1 0x0
0xce3 DUP1
0xce4 REVERT
---
0xce1: V1272 = 0x0
0xce4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V1044, V1058, V1229, 0x40c10f19, V1254]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058, V1229, 0x40c10f19, V1254]

================================

Block 0xce5
[0xce5:0xd23]
---
Predecessors: [0xcd4]
Successors: [0xd24, 0xd28]
---
0xce5 JUMPDEST
0xce6 POP
0xce7 POP
0xce8 PUSH1 0x3
0xcea SLOAD
0xceb PUSH1 0x1
0xced PUSH1 0xa0
0xcef PUSH1 0x2
0xcf1 EXP
0xcf2 SUB
0xcf3 AND
0xcf4 SWAP1
0xcf5 POP
0xcf6 PUSH4 0xf21cdf6f
0xcfb PUSH1 0x40
0xcfd MLOAD
0xcfe DUP2
0xcff PUSH4 0xffffffff
0xd04 AND
0xd05 PUSH1 0xe0
0xd07 PUSH1 0x2
0xd09 EXP
0xd0a MUL
0xd0b DUP2
0xd0c MSTORE
0xd0d PUSH1 0x4
0xd0f ADD
0xd10 PUSH1 0x0
0xd12 PUSH1 0x40
0xd14 MLOAD
0xd15 DUP1
0xd16 DUP4
0xd17 SUB
0xd18 DUP2
0xd19 PUSH1 0x0
0xd1b DUP8
0xd1c DUP1
0xd1d EXTCODESIZE
0xd1e ISZERO
0xd1f ISZERO
0xd20 PUSH2 0xd28
0xd23 JUMPI
---
0xce5: JUMPDEST 
0xce8: V1273 = 0x3
0xcea: V1274 = S[0x3]
0xceb: V1275 = 0x1
0xced: V1276 = 0xa0
0xcef: V1277 = 0x2
0xcf1: V1278 = EXP 0x2 0xa0
0xcf2: V1279 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf3: V1280 = AND 0xffffffffffffffffffffffffffffffffffffffff V1274
0xcf6: V1281 = 0xf21cdf6f
0xcfb: V1282 = 0x40
0xcfd: V1283 = M[0x40]
0xcff: V1284 = 0xffffffff
0xd04: V1285 = AND 0xffffffff 0xf21cdf6f
0xd05: V1286 = 0xe0
0xd07: V1287 = 0x2
0xd09: V1288 = EXP 0x2 0xe0
0xd0a: V1289 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xf21cdf6f
0xd0c: M[V1283] = 0xf21cdf6f00000000000000000000000000000000000000000000000000000000
0xd0d: V1290 = 0x4
0xd0f: V1291 = ADD 0x4 V1283
0xd10: V1292 = 0x0
0xd12: V1293 = 0x40
0xd14: V1294 = M[0x40]
0xd17: V1295 = SUB V1291 V1294
0xd19: V1296 = 0x0
0xd1d: V1297 = EXTCODESIZE V1280
0xd1e: V1298 = ISZERO V1297
0xd1f: V1299 = ISZERO V1298
0xd20: V1300 = 0xd28
0xd23: JUMPI 0xd28 V1299
---
Entry stack: [V12, 0x11a, V1044, V1058, V1229, 0x40c10f19, V1254]
Stack pops: 3
Stack additions: [V1280, 0xf21cdf6f, V1291, 0x0, V1294, V1295, V1294, 0x0, V1280]
Exit stack: [V12, 0x11a, V1044, V1058, V1280, 0xf21cdf6f, V1291, 0x0, V1294, V1295, V1294, 0x0, V1280]

================================

Block 0xd24
[0xd24:0xd27]
---
Predecessors: [0xce5]
Successors: []
---
0xd24 PUSH1 0x0
0xd26 DUP1
0xd27 REVERT
---
0xd24: V1301 = 0x0
0xd27: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V1044, V1058, V1280, 0xf21cdf6f, V1291, 0x0, V1294, V1295, V1294, 0x0, V1280]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058, V1280, 0xf21cdf6f, V1291, 0x0, V1294, V1295, V1294, 0x0, V1280]

================================

Block 0xd28
[0xd28:0xd34]
---
Predecessors: [0xce5]
Successors: [0xd35, 0xd39]
---
0xd28 JUMPDEST
0xd29 PUSH2 0x2c6
0xd2c GAS
0xd2d SUB
0xd2e CALL
0xd2f ISZERO
0xd30 ISZERO
0xd31 PUSH2 0xd39
0xd34 JUMPI
---
0xd28: JUMPDEST 
0xd29: V1302 = 0x2c6
0xd2c: V1303 = GAS
0xd2d: V1304 = SUB V1303 0x2c6
0xd2e: V1305 = CALL V1304 V1280 0x0 V1294 V1295 V1294 0x0
0xd2f: V1306 = ISZERO V1305
0xd30: V1307 = ISZERO V1306
0xd31: V1308 = 0xd39
0xd34: JUMPI 0xd39 V1307
---
Entry stack: [V12, 0x11a, V1044, V1058, V1280, 0xf21cdf6f, V1291, 0x0, V1294, V1295, V1294, 0x0, V1280]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058, V1280, 0xf21cdf6f, V1291]

================================

Block 0xd35
[0xd35:0xd38]
---
Predecessors: [0xd28]
Successors: []
---
0xd35 PUSH1 0x0
0xd37 DUP1
0xd38 REVERT
---
0xd35: V1309 = 0x0
0xd38: REVERT 0x0 0x0
---
Entry stack: [V12, 0x11a, V1044, V1058, V1280, 0xf21cdf6f, V1291]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058, V1280, 0xf21cdf6f, V1291]

================================

Block 0xd39
[0xd39:0xd4a]
---
Predecessors: [0xd28]
Successors: [0xd4b]
---
0xd39 JUMPDEST
0xd3a POP
0xd3b POP
0xd3c PUSH1 0x13
0xd3e DUP1
0xd3f SLOAD
0xd40 PUSH1 0x3
0xd42 SWAP3
0xd43 POP
0xd44 PUSH1 0xff
0xd46 NOT
0xd47 AND
0xd48 PUSH1 0x1
0xd4a DUP4
---
0xd39: JUMPDEST 
0xd3c: V1310 = 0x13
0xd3f: V1311 = S[0x13]
0xd40: V1312 = 0x3
0xd44: V1313 = 0xff
0xd46: V1314 = NOT 0xff
0xd47: V1315 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1311
0xd48: V1316 = 0x1
---
Entry stack: [V12, 0x11a, V1044, V1058, V1280, 0xf21cdf6f, V1291]
Stack pops: 3
Stack additions: [0x3, 0x13, V1315, 0x1, 0x3]
Exit stack: [V12, 0x11a, V1044, V1058, 0x3, 0x13, V1315, 0x1, 0x3]

================================

Block 0xd4b
[0xd4b:0xdc6]
---
Predecessors: [0xd39]
Successors: [0xdc7]
---
0xd4b JUMPDEST
0xd4c MUL
0xd4d OR
0xd4e SWAP1
0xd4f SSTORE
0xd50 POP
0xd51 PUSH1 0x6
0xd53 SLOAD
0xd54 PUSH1 0x7
0xd56 SLOAD
0xd57 PUSH1 0x8
0xd59 SLOAD
0xd5a PUSH1 0x9
0xd5c SLOAD
0xd5d PUSH32 0xbe83b3c67e3accc4b95c42a0089360ba15f53db672bb11f40061e4300f06e986
0xd7e SWAP4
0xd7f PUSH1 0x1
0xd81 PUSH1 0xa0
0xd83 PUSH1 0x2
0xd85 EXP
0xd86 SUB
0xd87 SWAP1
0xd88 DUP2
0xd89 AND
0xd8a SWAP4
0xd8b DUP2
0xd8c AND
0xd8d SWAP3
0xd8e DUP2
0xd8f AND
0xd90 SWAP2
0xd91 AND
0xd92 PUSH1 0x40
0xd94 MLOAD
0xd95 PUSH1 0x1
0xd97 PUSH1 0xa0
0xd99 PUSH1 0x2
0xd9b EXP
0xd9c SUB
0xd9d SWAP5
0xd9e DUP6
0xd9f AND
0xda0 DUP2
0xda1 MSTORE
0xda2 SWAP3
0xda3 DUP5
0xda4 AND
0xda5 PUSH1 0x20
0xda7 DUP5
0xda8 ADD
0xda9 MSTORE
0xdaa SWAP1
0xdab DUP4
0xdac AND
0xdad PUSH1 0x40
0xdaf DUP1
0xdb0 DUP5
0xdb1 ADD
0xdb2 SWAP2
0xdb3 SWAP1
0xdb4 SWAP2
0xdb5 MSTORE
0xdb6 SWAP3
0xdb7 AND
0xdb8 PUSH1 0x60
0xdba DUP3
0xdbb ADD
0xdbc MSTORE
0xdbd PUSH1 0x80
0xdbf ADD
0xdc0 SWAP1
0xdc1 MLOAD
0xdc2 DUP1
0xdc3 SWAP2
0xdc4 SUB
0xdc5 SWAP1
0xdc6 LOG1
---
0xd4b: JUMPDEST 
0xd4c: V1317 = MUL 0x3 0x1
0xd4d: V1318 = OR 0x3 V1315
0xd4f: S[0x13] = V1318
0xd51: V1319 = 0x6
0xd53: V1320 = S[0x6]
0xd54: V1321 = 0x7
0xd56: V1322 = S[0x7]
0xd57: V1323 = 0x8
0xd59: V1324 = S[0x8]
0xd5a: V1325 = 0x9
0xd5c: V1326 = S[0x9]
0xd5d: V1327 = 0xbe83b3c67e3accc4b95c42a0089360ba15f53db672bb11f40061e4300f06e986
0xd7f: V1328 = 0x1
0xd81: V1329 = 0xa0
0xd83: V1330 = 0x2
0xd85: V1331 = EXP 0x2 0xa0
0xd86: V1332 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd89: V1333 = AND 0xffffffffffffffffffffffffffffffffffffffff V1320
0xd8c: V1334 = AND 0xffffffffffffffffffffffffffffffffffffffff V1322
0xd8f: V1335 = AND 0xffffffffffffffffffffffffffffffffffffffff V1324
0xd91: V1336 = AND V1326 0xffffffffffffffffffffffffffffffffffffffff
0xd92: V1337 = 0x40
0xd94: V1338 = M[0x40]
0xd95: V1339 = 0x1
0xd97: V1340 = 0xa0
0xd99: V1341 = 0x2
0xd9b: V1342 = EXP 0x2 0xa0
0xd9c: V1343 = SUB 0x10000000000000000000000000000000000000000 0x1
0xd9f: V1344 = AND 0xffffffffffffffffffffffffffffffffffffffff V1333
0xda1: M[V1338] = V1344
0xda4: V1345 = AND 0xffffffffffffffffffffffffffffffffffffffff V1334
0xda5: V1346 = 0x20
0xda8: V1347 = ADD V1338 0x20
0xda9: M[V1347] = V1345
0xdac: V1348 = AND 0xffffffffffffffffffffffffffffffffffffffff V1335
0xdad: V1349 = 0x40
0xdb1: V1350 = ADD V1338 0x40
0xdb5: M[V1350] = V1348
0xdb7: V1351 = AND 0xffffffffffffffffffffffffffffffffffffffff V1336
0xdb8: V1352 = 0x60
0xdbb: V1353 = ADD V1338 0x60
0xdbc: M[V1353] = V1351
0xdbd: V1354 = 0x80
0xdbf: V1355 = ADD 0x80 V1338
0xdc1: V1356 = M[0x40]
0xdc4: V1357 = SUB V1355 V1356
0xdc6: LOG V1356 V1357 0xbe83b3c67e3accc4b95c42a0089360ba15f53db672bb11f40061e4300f06e986
---
Entry stack: [V12, 0x11a, V1044, V1058, 0x3, 0x13, V1315, 0x1, 0x3]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058]

================================

Block 0xdc7
[0xdc7:0xdc7]
---
Predecessors: [0xd4b]
Successors: [0xdc8]
---
0xdc7 JUMPDEST
---
0xdc7: JUMPDEST 
---
Entry stack: [V12, 0x11a, V1044, V1058]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V1044, V1058]

================================

Block 0xdc8
[0xdc8:0xdcb]
---
Predecessors: [0xdc7]
Successors: [0x11a]
---
0xdc8 JUMPDEST
0xdc9 POP
0xdca POP
0xdcb JUMP
---
0xdc8: JUMPDEST 
0xdcb: JUMP 0x11a
---
Entry stack: [V12, 0x11a, V1044, V1058]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0xdcc
[0xdcc:0xdda]
---
Predecessors: [0x3f5]
Successors: [0x186]
---
0xdcc JUMPDEST
0xdcd PUSH1 0x9
0xdcf SLOAD
0xdd0 PUSH1 0x1
0xdd2 PUSH1 0xa0
0xdd4 PUSH1 0x2
0xdd6 EXP
0xdd7 SUB
0xdd8 AND
0xdd9 DUP2
0xdda JUMP
---
0xdcc: JUMPDEST 
0xdcd: V1358 = 0x9
0xdcf: V1359 = S[0x9]
0xdd0: V1360 = 0x1
0xdd2: V1361 = 0xa0
0xdd4: V1362 = 0x2
0xdd6: V1363 = EXP 0x2 0xa0
0xdd7: V1364 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd8: V1365 = AND 0xffffffffffffffffffffffffffffffffffffffff V1359
0xdda: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V1365]
Exit stack: [V12, 0x186, V1365]

================================

Block 0xddb
[0xddb:0xde9]
---
Predecessors: [0x424]
Successors: [0x186]
---
0xddb JUMPDEST
0xddc PUSH1 0x7
0xdde SLOAD
0xddf PUSH1 0x1
0xde1 PUSH1 0xa0
0xde3 PUSH1 0x2
0xde5 EXP
0xde6 SUB
0xde7 AND
0xde8 DUP2
0xde9 JUMP
---
0xddb: JUMPDEST 
0xddc: V1366 = 0x7
0xdde: V1367 = S[0x7]
0xddf: V1368 = 0x1
0xde1: V1369 = 0xa0
0xde3: V1370 = 0x2
0xde5: V1371 = EXP 0x2 0xa0
0xde6: V1372 = SUB 0x10000000000000000000000000000000000000000 0x1
0xde7: V1373 = AND 0xffffffffffffffffffffffffffffffffffffffff V1367
0xde9: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V1373]
Exit stack: [V12, 0x186, V1373]

================================

Block 0xdea
[0xdea:0xdf8]
---
Predecessors: [0x453]
Successors: [0x186]
---
0xdea JUMPDEST
0xdeb PUSH1 0x4
0xded SLOAD
0xdee PUSH1 0x1
0xdf0 PUSH1 0xa0
0xdf2 PUSH1 0x2
0xdf4 EXP
0xdf5 SUB
0xdf6 AND
0xdf7 DUP2
0xdf8 JUMP
---
0xdea: JUMPDEST 
0xdeb: V1374 = 0x4
0xded: V1375 = S[0x4]
0xdee: V1376 = 0x1
0xdf0: V1377 = 0xa0
0xdf2: V1378 = 0x2
0xdf4: V1379 = EXP 0x2 0xa0
0xdf5: V1380 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdf6: V1381 = AND 0xffffffffffffffffffffffffffffffffffffffff V1375
0xdf8: JUMP 0x186
---
Entry stack: [V12, 0x186]
Stack pops: 1
Stack additions: [S0, V1381]
Exit stack: [V12, 0x186, V1381]

================================

Block 0xdf9
[0xdf9:0xe06]
---
Predecessors: [0x527]
Successors: [0xe07, 0xe08]
---
0xdf9 JUMPDEST
0xdfa PUSH1 0x0
0xdfc DUP3
0xdfd DUP3
0xdfe ADD
0xdff DUP4
0xe00 DUP2
0xe01 LT
0xe02 ISZERO
0xe03 PUSH2 0xe08
0xe06 JUMPI
---
0xdf9: JUMPDEST 
0xdfa: V1382 = 0x0
0xdfe: V1383 = ADD S0 V488
0xe01: V1384 = LT V1383 V488
0xe02: V1385 = ISZERO V1384
0xe03: V1386 = 0xe08
0xe06: JUMPI 0xe08 V1385
---
Entry stack: [V12, 0x11a, V98, V100, V103, S6, {0x11a, 0x59e}, S4, S3, 0x53d, V488, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V1383]
Exit stack: [V12, 0x11a, V98, V100, V103, S6, {0x11a, 0x59e}, S4, S3, 0x53d, V488, S0, 0x0, V1383]

================================

Block 0xe07
[0xe07:0xe07]
---
Predecessors: [0xdf9]
Successors: []
---
0xe07 INVALID
---
0xe07: INVALID 
---
Entry stack: [V12, 0x11a, V98, V100, V103, S8, {0x11a, 0x59e}, S6, S5, 0x53d, S3, S2, 0x0, V1383]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x11a, V98, V100, V103, S8, {0x11a, 0x59e}, S6, S5, 0x53d, S3, S2, 0x0, V1383]

================================

Block 0xe08
[0xe08:0xe0b]
---
Predecessors: [0xdf9]
Successors: [0xe0c]
---
0xe08 JUMPDEST
0xe09 DUP1
0xe0a SWAP2
0xe0b POP
---
0xe08: JUMPDEST 
---
Entry stack: [V12, 0x11a, V98, V100, V103, S8, {0x11a, 0x59e}, S6, S5, 0x53d, S3, S2, 0x0, V1383]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0x11a, V98, V100, V103, S8, {0x11a, 0x59e}, S6, S5, 0x53d, S3, S2, V1383, V1383]

================================

Block 0xe0c
[0xe0c:0xe12]
---
Predecessors: [0xe08]
Successors: [0x53d]
---
0xe0c JUMPDEST
0xe0d POP
0xe0e SWAP3
0xe0f SWAP2
0xe10 POP
0xe11 POP
0xe12 JUMP
---
0xe0c: JUMPDEST 
0xe12: JUMP 0x53d
---
Entry stack: [V12, 0x11a, V98, V100, V103, S8, {0x11a, 0x59e}, S6, S5, 0x53d, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x11a, V98, V100, V103, S8, {0x11a, 0x59e}, S6, S5, S1]

================================

Block 0xe13
[0xe13:0xe1c]
---
Predecessors: []
Successors: [0xe1d]
---
0xe13 STOP
0xe14 LOG1
0xe15 PUSH6 0x627a7a723058
0xe1c SHA3
---
0xe13: STOP 
0xe14: LOG S0 S1 S2
0xe15: V1387 = 0x627a7a723058
0xe1c: V1388 = SHA3 0x627a7a723058 S3
---
Entry stack: []
Stack pops: 0
Stack additions: [V1388]
Exit stack: []

================================

Block 0xe1d
[0xe1d:0xe3e]
---
Predecessors: [0xe13]
Successors: []
---
0xe1d JUMPDEST
0xe1e PUSH2 0xb220
0xe21 MISSING 0xb6
0xe22 MISSING 0x4f
0xe23 MISSING 0x21
0xe24 DUP8
0xe25 SHL
0xe26 DIV
0xe27 PC
0xe28 SHR
0xe29 MUL
0xe2a MISSING 0xf7
0xe2b JUMP
0xe2c MISSING 0x5e
0xe2d PUSH15 0x1e6560d9af701aaa1cd80e1faee1a0
0xe3d STOP
0xe3e MISSING 0x29
---
0xe1d: JUMPDEST 
0xe1e: V1389 = 0xb220
0xe21: MISSING 0xb6
0xe22: MISSING 0x4f
0xe23: MISSING 0x21
0xe25: V1390 = SHL S7 S0
0xe26: V1391 = DIV V1390 S1
0xe27: V1392 = PC
0xe28: V1393 = SHR V1392 V1391
0xe29: V1394 = MUL V1393 S2
0xe2a: MISSING 0xf7
0xe2b: JUMP S0
0xe2c: MISSING 0x5e
0xe2d: V1395 = 0x1e6560d9af701aaa1cd80e1faee1a0
0xe3d: STOP 
0xe3e: MISSING 0x29
---
Entry stack: [V1388]
Stack pops: 0
Stack additions: [0xb220, V1394, S3, S4, S5, S6, S7, 0x1e6560d9af701aaa1cd80e1faee1a0]
Exit stack: []

================================

Function 0:
Public function signature: 0x52992e
Entry block: 0x11d
Exit block: 0x11b
Body: 0x11a, 0x11b, 0x11d, 0x124, 0x128, 0x545, 0x55d, 0x570, 0x576, 0x589, 0x590, 0x594, 0x59e, 0x607, 0x608

Function 1:
Public function signature: 0x168110f3
Entry block: 0x14e
Exit block: 0x161
Body: 0x14e, 0x155, 0x159, 0x161, 0x60e

Function 2:
Public function signature: 0x1ed5da2f
Entry block: 0x173
Exit block: 0x186
Body: 0x173, 0x17a, 0x17e, 0x186, 0x61e

Function 3:
Public function signature: 0x34fcf437
Entry block: 0x1a2
Exit block: 0x11b
Body: 0x11a, 0x11b, 0x1a2, 0x1a9, 0x1ad, 0x62d, 0x644, 0x648, 0x655, 0x656

Function 4:
Public function signature: 0x353559cb
Entry block: 0x1ba
Exit block: 0x186
Body: 0x186, 0x1ba, 0x1c1, 0x1c5, 0x659

Function 5:
Public function signature: 0x3bed33ce
Entry block: 0x1e9
Exit block: 0x11b
Body: 0x11a, 0x11b, 0x1e9, 0x1f0, 0x1f4, 0x655, 0x656, 0x668, 0x67f, 0x683, 0x686, 0x696, 0x697, 0x69d, 0x6a1, 0x6d0

Function 6:
Public function signature: 0x42f0b07e
Entry block: 0x201
Exit block: 0x186
Body: 0x186, 0x201, 0x208, 0x20c, 0x6d9

Function 7:
Public function signature: 0x49e67544
Entry block: 0x230
Exit block: 0x186
Body: 0x186, 0x230, 0x237, 0x23b, 0x6e8

Function 8:
Public function signature: 0x5092f97e
Entry block: 0x25f
Exit block: 0x186
Body: 0x186, 0x25f, 0x266, 0x26a, 0x6f7

Function 9:
Public function signature: 0x5bdaa6dd
Entry block: 0x28e
Exit block: 0x161
Body: 0x161, 0x28e, 0x295, 0x299, 0x706

Function 10:
Public function signature: 0x78357e53
Entry block: 0x2b3
Exit block: 0x186
Body: 0x186, 0x2b3, 0x2ba, 0x2be, 0x70c

Function 11:
Public function signature: 0x89311e6f
Entry block: 0x2e2
Exit block: 0x11b
Body: 0x11a, 0x11b, 0x2e2, 0x2e9, 0x2ed, 0x71b, 0x732, 0x736, 0x739, 0x749, 0x74a, 0x751, 0x754, 0x764, 0x765, 0x767, 0x76e, 0x772, 0x7ad, 0x7b3, 0x7b4

Function 12:
Public function signature: 0xbed54a24
Entry block: 0x2f7
Exit block: 0x186
Body: 0x186, 0x2f7, 0x2fe, 0x302, 0x7b6

Function 13:
Public function signature: 0xc33818fd
Entry block: 0x326
Exit block: 0x186
Body: 0x186, 0x326, 0x32d, 0x331, 0x7c5

Function 14:
Public function signature: 0xc4fdc6b8
Entry block: 0x355
Exit block: 0x11b
Body: 0x11a, 0x11b, 0x355, 0x35c, 0x360, 0x7d4, 0x7eb, 0x7ef, 0x7f2, 0x802, 0x803, 0x809, 0x80d, 0x81d, 0x84f, 0x850

Function 15:
Public function signature: 0xcd9063f6
Entry block: 0x36a
Exit block: 0x11b
Body: 0x11a, 0x11b, 0x36a, 0x371, 0x375, 0x852, 0x86c, 0x870, 0x873, 0x883, 0x884, 0x88b, 0x88f, 0x8e4, 0x8e8, 0x8f5, 0x8f9, 0x90d, 0x911, 0x95d, 0x961, 0x96e, 0x972, 0x9c8, 0x9cc, 0x9d9, 0x9dd, 0xa25, 0xa26

Function 16:
Public function signature: 0xe04a8c08
Entry block: 0x38b
Exit block: 0x161
Body: 0x161, 0x38b, 0x392, 0x396, 0xa2a

Function 17:
Public function signature: 0xe0d1ba52
Entry block: 0x3b0
Exit block: 0x161
Body: 0x161, 0x3b0, 0x3b7, 0x3bb, 0xa30

Function 18:
Public function signature: 0xec42f82f
Entry block: 0x3d5
Exit block: 0x11b
Body: 0x11a, 0x11b, 0x3d5, 0x3dc, 0x3e0, 0xa36, 0xa52, 0xa56, 0xa59, 0xa69, 0xa6a, 0xa70, 0xa74, 0xab8, 0xabc, 0xac9, 0xacd, 0xae9, 0xaea, 0xb16, 0xb56, 0xb5a, 0xb67, 0xb6b, 0xb94, 0xbd4, 0xbd8, 0xbe5, 0xbe9, 0xc12, 0xc52, 0xc56, 0xc63, 0xc67, 0xc90, 0xcd0, 0xcd4, 0xce1, 0xce5, 0xd24, 0xd28, 0xd35, 0xd39, 0xd4b, 0xdc7, 0xdc8

Function 19:
Public function signature: 0xf3b4eccb
Entry block: 0x3ea
Exit block: 0x186
Body: 0x186, 0x3ea, 0x3f1, 0x3f5, 0xdcc

Function 20:
Public function signature: 0xf869b3ff
Entry block: 0x419
Exit block: 0x186
Body: 0x186, 0x419, 0x420, 0x424, 0xddb

Function 21:
Public function signature: 0xfdea8e0b
Entry block: 0x448
Exit block: 0x186
Body: 0x186, 0x448, 0x44f, 0x453, 0xdea

Function 22:
Public fallback function
Entry block: 0x10b
Exit block: 0x11b
Body: 0x10b, 0x10c, 0x11a, 0x11b

Function 23:
Private function
Entry block: 0x477
Exit block: 0x541
Body: 0x477, 0x47a, 0x48b, 0x495, 0x4a2, 0x4c0, 0x516, 0x527, 0x53d, 0x541, 0xdf9, 0xe08, 0xe0c

