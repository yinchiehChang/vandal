Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xbf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xbf
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xbf
0xa: JUMPI 0xbf V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x1a7]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x6fdde03
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x1a7
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x6fdde03
0x20: V14 = EQ V12 0x6fdde03
0x21: V15 = 0x1a7
0x24: JUMPI 0x1a7 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x232]
---
0x25 DUP1
0x26 PUSH4 0x95ea7b3
0x2b EQ
0x2c PUSH2 0x232
0x2f JUMPI
---
0x26: V16 = 0x95ea7b3
0x2b: V17 = EQ 0x95ea7b3 V12
0x2c: V18 = 0x232
0x2f: JUMPI 0x232 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x268]
---
0x30 DUP1
0x31 PUSH4 0xdcf4b8f
0x36 EQ
0x37 PUSH2 0x268
0x3a JUMPI
---
0x31: V19 = 0xdcf4b8f
0x36: V20 = EQ 0xdcf4b8f V12
0x37: V21 = 0x268
0x3a: JUMPI 0x268 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x28d]
---
0x3b DUP1
0x3c PUSH4 0x18160ddd
0x41 EQ
0x42 PUSH2 0x28d
0x45 JUMPI
---
0x3c: V22 = 0x18160ddd
0x41: V23 = EQ 0x18160ddd V12
0x42: V24 = 0x28d
0x45: JUMPI 0x28d V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x2b2]
---
0x46 DUP1
0x47 PUSH4 0x23b872dd
0x4c EQ
0x4d PUSH2 0x2b2
0x50 JUMPI
---
0x47: V25 = 0x23b872dd
0x4c: V26 = EQ 0x23b872dd V12
0x4d: V27 = 0x2b2
0x50: JUMPI 0x2b2 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x2ee]
---
0x51 DUP1
0x52 PUSH4 0x313ce567
0x57 EQ
0x58 PUSH2 0x2ee
0x5b JUMPI
---
0x52: V28 = 0x313ce567
0x57: V29 = EQ 0x313ce567 V12
0x58: V30 = 0x2ee
0x5b: JUMPI 0x2ee V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x317]
---
0x5c DUP1
0x5d PUSH4 0x64acdb77
0x62 EQ
0x63 PUSH2 0x317
0x66 JUMPI
---
0x5d: V31 = 0x64acdb77
0x62: V32 = EQ 0x64acdb77 V12
0x63: V33 = 0x317
0x66: JUMPI 0x317 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x32c]
---
0x67 DUP1
0x68 PUSH4 0x70a08231
0x6d EQ
0x6e PUSH2 0x32c
0x71 JUMPI
---
0x68: V34 = 0x70a08231
0x6d: V35 = EQ 0x70a08231 V12
0x6e: V36 = 0x32c
0x71: JUMPI 0x32c V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x35d]
---
0x72 DUP1
0x73 PUSH4 0x8f580996
0x78 EQ
0x79 PUSH2 0x35d
0x7c JUMPI
---
0x73: V37 = 0x8f580996
0x78: V38 = EQ 0x8f580996 V12
0x79: V39 = 0x35d
0x7c: JUMPI 0x35d V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x372]
---
0x7d DUP1
0x7e PUSH4 0x95d89b41
0x83 EQ
0x84 PUSH2 0x372
0x87 JUMPI
---
0x7e: V40 = 0x95d89b41
0x83: V41 = EQ 0x95d89b41 V12
0x84: V42 = 0x372
0x87: JUMPI 0x372 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x3fd]
---
0x88 DUP1
0x89 PUSH4 0xa9059cbb
0x8e EQ
0x8f PUSH2 0x3fd
0x92 JUMPI
---
0x89: V43 = 0xa9059cbb
0x8e: V44 = EQ 0xa9059cbb V12
0x8f: V45 = 0x3fd
0x92: JUMPI 0x3fd V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x433]
---
0x93 DUP1
0x94 PUSH4 0xc59d4847
0x99 EQ
0x9a PUSH2 0x433
0x9d JUMPI
---
0x94: V46 = 0xc59d4847
0x99: V47 = EQ 0xc59d4847 V12
0x9a: V48 = 0x433
0x9d: JUMPI 0x433 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x46c]
---
0x9e DUP1
0x9f PUSH4 0xda040c0f
0xa4 EQ
0xa5 PUSH2 0x46c
0xa8 JUMPI
---
0x9f: V49 = 0xda040c0f
0xa4: V50 = EQ 0xda040c0f V12
0xa5: V51 = 0x46c
0xa8: JUMPI 0x46c V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x493]
---
0xa9 DUP1
0xaa PUSH4 0xdd62ed3e
0xaf EQ
0xb0 PUSH2 0x493
0xb3 JUMPI
---
0xaa: V52 = 0xdd62ed3e
0xaf: V53 = EQ 0xdd62ed3e V12
0xb0: V54 = 0x493
0xb3: JUMPI 0x493 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x4ca]
---
0xb4 DUP1
0xb5 PUSH4 0xe58fc54c
0xba EQ
0xbb PUSH2 0x4ca
0xbe JUMPI
---
0xb5: V55 = 0xe58fc54c
0xba: V56 = EQ 0xe58fc54c V12
0xbb: V57 = 0x4ca
0xbe: JUMPI 0x4ca V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0x0, 0xb4]
Successors: [0xc3]
---
0xbf JUMPDEST
0xc0 PUSH2 0x1a5
---
0xbf: JUMPDEST 
0xc0: V58 = 0x1a5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a5]
Exit stack: [V12, 0x1a5]

================================

Block 0xc3
[0xc3:0xd7]
---
Predecessors: [0xbf]
Successors: [0xd8, 0xdc]
---
0xc3 JUMPDEST
0xc4 PUSH1 0x0
0xc6 DUP1
0xc7 SLOAD
0xc8 PUSH1 0xa0
0xca PUSH1 0x2
0xcc EXP
0xcd SWAP1
0xce DIV
0xcf PUSH1 0xff
0xd1 AND
0xd2 ISZERO
0xd3 ISZERO
0xd4 PUSH2 0xdc
0xd7 JUMPI
---
0xc3: JUMPDEST 
0xc4: V59 = 0x0
0xc7: V60 = S[0x0]
0xc8: V61 = 0xa0
0xca: V62 = 0x2
0xcc: V63 = EXP 0x2 0xa0
0xce: V64 = DIV V60 0x10000000000000000000000000000000000000000
0xcf: V65 = 0xff
0xd1: V66 = AND 0xff V64
0xd2: V67 = ISZERO V66
0xd3: V68 = ISZERO V67
0xd4: V69 = 0xdc
0xd7: JUMPI 0xdc V68
---
Entry stack: [V12, 0x1a5]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x1a5, 0x0]

================================

Block 0xd8
[0xd8:0xdb]
---
Predecessors: [0xc3]
Successors: []
---
0xd8 PUSH1 0x0
0xda DUP1
0xdb REVERT
---
0xd8: V70 = 0x0
0xdb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1a5, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5, 0x0]

================================

Block 0xdc
[0xdc:0xe3]
---
Predecessors: [0xc3]
Successors: [0xe4, 0xe8]
---
0xdc JUMPDEST
0xdd CALLVALUE
0xde ISZERO
0xdf ISZERO
0xe0 PUSH2 0xe8
0xe3 JUMPI
---
0xdc: JUMPDEST 
0xdd: V71 = CALLVALUE
0xde: V72 = ISZERO V71
0xdf: V73 = ISZERO V72
0xe0: V74 = 0xe8
0xe3: JUMPI 0xe8 V73
---
Entry stack: [V12, 0x1a5, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5, 0x0]

================================

Block 0xe4
[0xe4:0xe7]
---
Predecessors: [0xdc]
Successors: [0x1a2]
---
0xe4 PUSH2 0x1a2
0xe7 JUMP
---
0xe4: V75 = 0x1a2
0xe7: JUMP 0x1a2
---
Entry stack: [V12, 0x1a5, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5, 0x0]

================================

Block 0xe8
[0xe8:0x117]
---
Predecessors: [0xdc]
Successors: [0x118, 0x11c]
---
0xe8 JUMPDEST
0xe9 PUSH1 0x0
0xeb SLOAD
0xec PUSH1 0x1
0xee PUSH1 0xa0
0xf0 PUSH1 0x2
0xf2 EXP
0xf3 SUB
0xf4 AND
0xf5 CALLVALUE
0xf6 DUP1
0xf7 ISZERO
0xf8 PUSH2 0x8fc
0xfb MUL
0xfc SWAP1
0xfd PUSH1 0x40
0xff MLOAD
0x100 PUSH1 0x0
0x102 PUSH1 0x40
0x104 MLOAD
0x105 DUP1
0x106 DUP4
0x107 SUB
0x108 DUP2
0x109 DUP6
0x10a DUP9
0x10b DUP9
0x10c CALL
0x10d SWAP4
0x10e POP
0x10f POP
0x110 POP
0x111 POP
0x112 ISZERO
0x113 ISZERO
0x114 PUSH2 0x11c
0x117 JUMPI
---
0xe8: JUMPDEST 
0xe9: V76 = 0x0
0xeb: V77 = S[0x0]
0xec: V78 = 0x1
0xee: V79 = 0xa0
0xf0: V80 = 0x2
0xf2: V81 = EXP 0x2 0xa0
0xf3: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf4: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0xf5: V84 = CALLVALUE
0xf7: V85 = ISZERO V84
0xf8: V86 = 0x8fc
0xfb: V87 = MUL 0x8fc V85
0xfd: V88 = 0x40
0xff: V89 = M[0x40]
0x100: V90 = 0x0
0x102: V91 = 0x40
0x104: V92 = M[0x40]
0x107: V93 = SUB V89 V92
0x10c: V94 = CALL V87 V83 V84 V92 V93 V92 0x0
0x112: V95 = ISZERO V94
0x113: V96 = ISZERO V95
0x114: V97 = 0x11c
0x117: JUMPI 0x11c V96
---
Entry stack: [V12, 0x1a5, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5, 0x0]

================================

Block 0x118
[0x118:0x11b]
---
Predecessors: [0xe8]
Successors: []
---
0x118 PUSH1 0x0
0x11a DUP1
0x11b REVERT
---
0x118: V98 = 0x0
0x11b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1a5, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5, 0x0]

================================

Block 0x11c
[0x11c:0x13b]
---
Predecessors: [0xe8]
Successors: [0x13c, 0x140]
---
0x11c JUMPDEST
0x11d POP
0x11e PUSH1 0x3
0x120 DUP1
0x121 SLOAD
0x122 CALLVALUE
0x123 SWAP1
0x124 DUP2
0x125 ADD
0x126 SWAP1
0x127 SWAP2
0x128 SSTORE
0x129 PUSH1 0x64
0x12b DUP2
0x12c MUL
0x12d SWAP1
0x12e PUSH7 0x2386f26fc10000
0x136 SWAP1
0x137 LT
0x138 PUSH2 0x140
0x13b JUMPI
---
0x11c: JUMPDEST 
0x11e: V99 = 0x3
0x121: V100 = S[0x3]
0x122: V101 = CALLVALUE
0x125: V102 = ADD V101 V100
0x128: S[0x3] = V102
0x129: V103 = 0x64
0x12c: V104 = MUL V101 0x64
0x12e: V105 = 0x2386f26fc10000
0x137: V106 = LT V101 0x2386f26fc10000
0x138: V107 = 0x140
0x13b: JUMPI 0x140 V106
---
Entry stack: [V12, 0x1a5, 0x0]
Stack pops: 1
Stack additions: [V104]
Exit stack: [V12, 0x1a5, V104]

================================

Block 0x13c
[0x13c:0x13f]
---
Predecessors: [0x11c]
Successors: [0x140]
---
0x13c PUSH1 0x3
0x13e SLOAD
0x13f ADD
---
0x13c: V108 = 0x3
0x13e: V109 = S[0x3]
0x13f: V110 = ADD V109 V104
---
Entry stack: [V12, 0x1a5, V104]
Stack pops: 1
Stack additions: [V110]
Exit stack: [V12, 0x1a5, V110]

================================

Block 0x140
[0x140:0x1a1]
---
Predecessors: [0x11c, 0x13c]
Successors: [0x1a2]
---
0x140 JUMPDEST
0x141 PUSH1 0x4
0x143 DUP1
0x144 SLOAD
0x145 DUP3
0x146 ADD
0x147 SWAP1
0x148 SSTORE
0x149 PUSH1 0x1
0x14b PUSH1 0xa0
0x14d PUSH1 0x2
0x14f EXP
0x150 SUB
0x151 CALLER
0x152 DUP2
0x153 AND
0x154 PUSH1 0x0
0x156 DUP2
0x157 DUP2
0x158 MSTORE
0x159 PUSH1 0x1
0x15b PUSH1 0x20
0x15d MSTORE
0x15e PUSH1 0x40
0x160 SWAP1
0x161 DUP2
0x162 SWAP1
0x163 SHA3
0x164 DUP1
0x165 SLOAD
0x166 DUP6
0x167 ADD
0x168 SWAP1
0x169 SSTORE
0x16a SWAP1
0x16b SWAP2
0x16c ADDRESS
0x16d AND
0x16e SWAP1
0x16f PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x190 SWAP1
0x191 DUP5
0x192 SWAP1
0x193 MLOAD
0x194 SWAP1
0x195 DUP2
0x196 MSTORE
0x197 PUSH1 0x20
0x199 ADD
0x19a PUSH1 0x40
0x19c MLOAD
0x19d DUP1
0x19e SWAP2
0x19f SUB
0x1a0 SWAP1
0x1a1 LOG3
---
0x140: JUMPDEST 
0x141: V111 = 0x4
0x144: V112 = S[0x4]
0x146: V113 = ADD S0 V112
0x148: S[0x4] = V113
0x149: V114 = 0x1
0x14b: V115 = 0xa0
0x14d: V116 = 0x2
0x14f: V117 = EXP 0x2 0xa0
0x150: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x151: V119 = CALLER
0x153: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x154: V121 = 0x0
0x158: M[0x0] = V120
0x159: V122 = 0x1
0x15b: V123 = 0x20
0x15d: M[0x20] = 0x1
0x15e: V124 = 0x40
0x163: V125 = SHA3 0x0 0x40
0x165: V126 = S[V125]
0x167: V127 = ADD S0 V126
0x169: S[V125] = V127
0x16c: V128 = ADDRESS
0x16d: V129 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x16f: V130 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x193: V131 = M[0x40]
0x196: M[V131] = S0
0x197: V132 = 0x20
0x199: V133 = ADD 0x20 V131
0x19a: V134 = 0x40
0x19c: V135 = M[0x40]
0x19f: V136 = SUB V133 V135
0x1a1: LOG V135 V136 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V129 V120
---
Entry stack: [V12, 0x1a5, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1a5, S0]

================================

Block 0x1a2
[0x1a2:0x1a4]
---
Predecessors: [0xe4, 0x140]
Successors: [0x1a5]
---
0x1a2 JUMPDEST
0x1a3 POP
0x1a4 JUMP
---
0x1a2: JUMPDEST 
0x1a4: JUMP 0x1a5
---
Entry stack: [V12, 0x1a5, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a5
[0x1a5:0x1a6]
---
Predecessors: [0x1a2, 0x769, 0x7ca]
Successors: []
---
0x1a5 JUMPDEST
0x1a6 STOP
---
0x1a5: JUMPDEST 
0x1a6: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a7
[0x1a7:0x1ad]
---
Predecessors: [0xb]
Successors: [0x1ae, 0x1b2]
---
0x1a7 JUMPDEST
0x1a8 CALLVALUE
0x1a9 ISZERO
0x1aa PUSH2 0x1b2
0x1ad JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V137 = CALLVALUE
0x1a9: V138 = ISZERO V137
0x1aa: V139 = 0x1b2
0x1ad: JUMPI 0x1b2 V138
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ae
[0x1ae:0x1b1]
---
Predecessors: [0x1a7]
Successors: []
---
0x1ae PUSH1 0x0
0x1b0 DUP1
0x1b1 REVERT
---
0x1ae: V140 = 0x0
0x1b1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b2
[0x1b2:0x1b9]
---
Predecessors: [0x1a7]
Successors: [0x4fd]
---
0x1b2 JUMPDEST
0x1b3 PUSH2 0x1ba
0x1b6 PUSH2 0x4fd
0x1b9 JUMP
---
0x1b2: JUMPDEST 
0x1b3: V141 = 0x1ba
0x1b6: V142 = 0x4fd
0x1b9: JUMP 0x4fd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ba]
Exit stack: [V12, 0x1ba]

================================

Block 0x1ba
[0x1ba:0x1dd]
---
Predecessors: [0x53c, 0x80b]
Successors: [0x1de]
---
0x1ba JUMPDEST
0x1bb PUSH1 0x40
0x1bd MLOAD
0x1be PUSH1 0x20
0x1c0 DUP1
0x1c1 DUP3
0x1c2 MSTORE
0x1c3 DUP2
0x1c4 SWAP1
0x1c5 DUP2
0x1c6 ADD
0x1c7 DUP4
0x1c8 DUP2
0x1c9 DUP2
0x1ca MLOAD
0x1cb DUP2
0x1cc MSTORE
0x1cd PUSH1 0x20
0x1cf ADD
0x1d0 SWAP2
0x1d1 POP
0x1d2 DUP1
0x1d3 MLOAD
0x1d4 SWAP1
0x1d5 PUSH1 0x20
0x1d7 ADD
0x1d8 SWAP1
0x1d9 DUP1
0x1da DUP4
0x1db DUP4
0x1dc PUSH1 0x0
---
0x1ba: JUMPDEST 
0x1bb: V143 = 0x40
0x1bd: V144 = M[0x40]
0x1be: V145 = 0x20
0x1c2: M[V144] = 0x20
0x1c6: V146 = ADD V144 0x20
0x1ca: V147 = M[S0]
0x1cc: M[V146] = V147
0x1cd: V148 = 0x20
0x1cf: V149 = ADD 0x20 V146
0x1d3: V150 = M[S0]
0x1d5: V151 = 0x20
0x1d7: V152 = ADD 0x20 S0
0x1dc: V153 = 0x0
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: [S0, V144, V144, V149, V152, V150, V150, V149, V152, 0x0]
Exit stack: [V12, S0, V144, V144, V149, V152, V150, V150, V149, V152, 0x0]

================================

Block 0x1de
[0x1de:0x1e6]
---
Predecessors: [0x1ba, 0x1ef, 0x3ba]
Successors: [0x1e7, 0x1f7]
---
0x1de JUMPDEST
0x1df DUP4
0x1e0 DUP2
0x1e1 LT
0x1e2 ISZERO
0x1e3 PUSH2 0x1f7
0x1e6 JUMPI
---
0x1de: JUMPDEST 
0x1e1: V154 = LT S0 S3
0x1e2: V155 = ISZERO V154
0x1e3: V156 = 0x1f7
0x1e6: JUMPI 0x1f7 V155
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1e7
[0x1e7:0x1ee]
---
Predecessors: [0x1de]
Successors: [0x1ef]
---
0x1e7 DUP1
0x1e8 DUP3
0x1e9 ADD
0x1ea MLOAD
0x1eb DUP2
0x1ec DUP5
0x1ed ADD
0x1ee MSTORE
---
0x1e9: V157 = ADD S1 S0
0x1ea: V158 = M[V157]
0x1ed: V159 = ADD S2 S0
0x1ee: M[V159] = V158
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1ef
[0x1ef:0x1f6]
---
Predecessors: [0x1e7]
Successors: [0x1de]
---
0x1ef JUMPDEST
0x1f0 PUSH1 0x20
0x1f2 ADD
0x1f3 PUSH2 0x1de
0x1f6 JUMP
---
0x1ef: JUMPDEST 
0x1f0: V160 = 0x20
0x1f2: V161 = ADD 0x20 S0
0x1f3: V162 = 0x1de
0x1f6: JUMP 0x1de
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V161]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, V161]

================================

Block 0x1f7
[0x1f7:0x20a]
---
Predecessors: [0x1de, 0x3a9]
Successors: [0x20b, 0x224]
---
0x1f7 JUMPDEST
0x1f8 POP
0x1f9 POP
0x1fa POP
0x1fb POP
0x1fc SWAP1
0x1fd POP
0x1fe SWAP1
0x1ff DUP2
0x200 ADD
0x201 SWAP1
0x202 PUSH1 0x1f
0x204 AND
0x205 DUP1
0x206 ISZERO
0x207 PUSH2 0x224
0x20a JUMPI
---
0x1f7: JUMPDEST 
0x200: V163 = ADD S4 S6
0x202: V164 = 0x1f
0x204: V165 = AND 0x1f S4
0x206: V166 = ISZERO V165
0x207: V167 = 0x224
0x20a: JUMPI 0x224 V166
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V163, V165]
Exit stack: [V12, S9, S8, S7, V163, V165]

================================

Block 0x20b
[0x20b:0x223]
---
Predecessors: [0x1f7]
Successors: [0x224]
---
0x20b DUP1
0x20c DUP3
0x20d SUB
0x20e DUP1
0x20f MLOAD
0x210 PUSH1 0x1
0x212 DUP4
0x213 PUSH1 0x20
0x215 SUB
0x216 PUSH2 0x100
0x219 EXP
0x21a SUB
0x21b NOT
0x21c AND
0x21d DUP2
0x21e MSTORE
0x21f PUSH1 0x20
0x221 ADD
0x222 SWAP2
0x223 POP
---
0x20d: V168 = SUB V163 V165
0x20f: V169 = M[V168]
0x210: V170 = 0x1
0x213: V171 = 0x20
0x215: V172 = SUB 0x20 V165
0x216: V173 = 0x100
0x219: V174 = EXP 0x100 V172
0x21a: V175 = SUB V174 0x1
0x21b: V176 = NOT V175
0x21c: V177 = AND V176 V169
0x21e: M[V168] = V177
0x21f: V178 = 0x20
0x221: V179 = ADD 0x20 V168
---
Entry stack: [V12, S4, S3, S2, V163, V165]
Stack pops: 2
Stack additions: [V179, S0]
Exit stack: [V12, S4, S3, S2, V179, V165]

================================

Block 0x224
[0x224:0x231]
---
Predecessors: [0x1f7, 0x20b, 0x3c2]
Successors: []
---
0x224 JUMPDEST
0x225 POP
0x226 SWAP3
0x227 POP
0x228 POP
0x229 POP
0x22a PUSH1 0x40
0x22c MLOAD
0x22d DUP1
0x22e SWAP2
0x22f SUB
0x230 SWAP1
0x231 RETURN
---
0x224: JUMPDEST 
0x22a: V180 = 0x40
0x22c: V181 = M[0x40]
0x22f: V182 = SUB S1 V181
0x231: RETURN V181 V182
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x232
[0x232:0x238]
---
Predecessors: [0x25]
Successors: [0x239, 0x23d]
---
0x232 JUMPDEST
0x233 CALLVALUE
0x234 ISZERO
0x235 PUSH2 0x23d
0x238 JUMPI
---
0x232: JUMPDEST 
0x233: V183 = CALLVALUE
0x234: V184 = ISZERO V183
0x235: V185 = 0x23d
0x238: JUMPI 0x23d V184
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x239
[0x239:0x23c]
---
Predecessors: [0x232]
Successors: []
---
0x239 PUSH1 0x0
0x23b DUP1
0x23c REVERT
---
0x239: V186 = 0x0
0x23c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23d
[0x23d:0x253]
---
Predecessors: [0x232]
Successors: [0x53f]
---
0x23d JUMPDEST
0x23e PUSH2 0x254
0x241 PUSH1 0x1
0x243 PUSH1 0xa0
0x245 PUSH1 0x2
0x247 EXP
0x248 SUB
0x249 PUSH1 0x4
0x24b CALLDATALOAD
0x24c AND
0x24d PUSH1 0x24
0x24f CALLDATALOAD
0x250 PUSH2 0x53f
0x253 JUMP
---
0x23d: JUMPDEST 
0x23e: V187 = 0x254
0x241: V188 = 0x1
0x243: V189 = 0xa0
0x245: V190 = 0x2
0x247: V191 = EXP 0x2 0xa0
0x248: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x249: V193 = 0x4
0x24b: V194 = CALLDATALOAD 0x4
0x24c: V195 = AND V194 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V196 = 0x24
0x24f: V197 = CALLDATALOAD 0x24
0x250: V198 = 0x53f
0x253: JUMP 0x53f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x254, V195, V197]
Exit stack: [V12, 0x254, V195, V197]

================================

Block 0x254
[0x254:0x267]
---
Predecessors: [0x5e5, 0x71d, 0x8e5, 0x907, 0xa5c]
Successors: []
---
0x254 JUMPDEST
0x255 PUSH1 0x40
0x257 MLOAD
0x258 SWAP1
0x259 ISZERO
0x25a ISZERO
0x25b DUP2
0x25c MSTORE
0x25d PUSH1 0x20
0x25f ADD
0x260 PUSH1 0x40
0x262 MLOAD
0x263 DUP1
0x264 SWAP2
0x265 SUB
0x266 SWAP1
0x267 RETURN
---
0x254: JUMPDEST 
0x255: V199 = 0x40
0x257: V200 = M[0x40]
0x259: V201 = ISZERO S0
0x25a: V202 = ISZERO V201
0x25c: M[V200] = V202
0x25d: V203 = 0x20
0x25f: V204 = ADD 0x20 V200
0x260: V205 = 0x40
0x262: V206 = M[0x40]
0x265: V207 = SUB V204 V206
0x267: RETURN V206 V207
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x268
[0x268:0x26e]
---
Predecessors: [0x30]
Successors: [0x26f, 0x273]
---
0x268 JUMPDEST
0x269 CALLVALUE
0x26a ISZERO
0x26b PUSH2 0x273
0x26e JUMPI
---
0x268: JUMPDEST 
0x269: V208 = CALLVALUE
0x26a: V209 = ISZERO V208
0x26b: V210 = 0x273
0x26e: JUMPI 0x273 V209
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26f
[0x26f:0x272]
---
Predecessors: [0x268]
Successors: []
---
0x26f PUSH1 0x0
0x271 DUP1
0x272 REVERT
---
0x26f: V211 = 0x0
0x272: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x273
[0x273:0x27a]
---
Predecessors: [0x268]
Successors: [0x5eb]
---
0x273 JUMPDEST
0x274 PUSH2 0x27b
0x277 PUSH2 0x5eb
0x27a JUMP
---
0x273: JUMPDEST 
0x274: V212 = 0x27b
0x277: V213 = 0x5eb
0x27a: JUMP 0x5eb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27b]
Exit stack: [V12, 0x27b]

================================

Block 0x27b
[0x27b:0x28c]
---
Predecessors: [0x5eb, 0x5f1, 0x785, 0x93e]
Successors: []
---
0x27b JUMPDEST
0x27c PUSH1 0x40
0x27e MLOAD
0x27f SWAP1
0x280 DUP2
0x281 MSTORE
0x282 PUSH1 0x20
0x284 ADD
0x285 PUSH1 0x40
0x287 MLOAD
0x288 DUP1
0x289 SWAP2
0x28a SUB
0x28b SWAP1
0x28c RETURN
---
0x27b: JUMPDEST 
0x27c: V214 = 0x40
0x27e: V215 = M[0x40]
0x281: M[V215] = S0
0x282: V216 = 0x20
0x284: V217 = ADD 0x20 V215
0x285: V218 = 0x40
0x287: V219 = M[0x40]
0x28a: V220 = SUB V217 V219
0x28c: RETURN V219 V220
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x28d
[0x28d:0x293]
---
Predecessors: [0x3b]
Successors: [0x294, 0x298]
---
0x28d JUMPDEST
0x28e CALLVALUE
0x28f ISZERO
0x290 PUSH2 0x298
0x293 JUMPI
---
0x28d: JUMPDEST 
0x28e: V221 = CALLVALUE
0x28f: V222 = ISZERO V221
0x290: V223 = 0x298
0x293: JUMPI 0x298 V222
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x294
[0x294:0x297]
---
Predecessors: [0x28d]
Successors: []
---
0x294 PUSH1 0x0
0x296 DUP1
0x297 REVERT
---
0x294: V224 = 0x0
0x297: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x298
[0x298:0x29f]
---
Predecessors: [0x28d]
Successors: [0x5f1]
---
0x298 JUMPDEST
0x299 PUSH2 0x27b
0x29c PUSH2 0x5f1
0x29f JUMP
---
0x298: JUMPDEST 
0x299: V225 = 0x27b
0x29c: V226 = 0x5f1
0x29f: JUMP 0x5f1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27b]
Exit stack: [V12, 0x27b]

================================

Block 0x2a0
[0x2a0:0x2b1]
---
Predecessors: []
Successors: []
---
0x2a0 JUMPDEST
0x2a1 PUSH1 0x40
0x2a3 MLOAD
0x2a4 SWAP1
0x2a5 DUP2
0x2a6 MSTORE
0x2a7 PUSH1 0x20
0x2a9 ADD
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad DUP1
0x2ae SWAP2
0x2af SUB
0x2b0 SWAP1
0x2b1 RETURN
---
0x2a0: JUMPDEST 
0x2a1: V227 = 0x40
0x2a3: V228 = M[0x40]
0x2a6: M[V228] = S0
0x2a7: V229 = 0x20
0x2a9: V230 = ADD 0x20 V228
0x2aa: V231 = 0x40
0x2ac: V232 = M[0x40]
0x2af: V233 = SUB V230 V232
0x2b1: RETURN V232 V233
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b2
[0x2b2:0x2b8]
---
Predecessors: [0x46]
Successors: [0x2b9, 0x2bd]
---
0x2b2 JUMPDEST
0x2b3 CALLVALUE
0x2b4 ISZERO
0x2b5 PUSH2 0x2bd
0x2b8 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V234 = CALLVALUE
0x2b4: V235 = ISZERO V234
0x2b5: V236 = 0x2bd
0x2b8: JUMPI 0x2bd V235
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b9
[0x2b9:0x2bc]
---
Predecessors: [0x2b2]
Successors: []
---
0x2b9 PUSH1 0x0
0x2bb DUP1
0x2bc REVERT
---
0x2b9: V237 = 0x0
0x2bc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bd
[0x2bd:0x2d9]
---
Predecessors: [0x2b2]
Successors: [0x5f7]
---
0x2bd JUMPDEST
0x2be PUSH2 0x254
0x2c1 PUSH1 0x1
0x2c3 PUSH1 0xa0
0x2c5 PUSH1 0x2
0x2c7 EXP
0x2c8 SUB
0x2c9 PUSH1 0x4
0x2cb CALLDATALOAD
0x2cc DUP2
0x2cd AND
0x2ce SWAP1
0x2cf PUSH1 0x24
0x2d1 CALLDATALOAD
0x2d2 AND
0x2d3 PUSH1 0x44
0x2d5 CALLDATALOAD
0x2d6 PUSH2 0x5f7
0x2d9 JUMP
---
0x2bd: JUMPDEST 
0x2be: V238 = 0x254
0x2c1: V239 = 0x1
0x2c3: V240 = 0xa0
0x2c5: V241 = 0x2
0x2c7: V242 = EXP 0x2 0xa0
0x2c8: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c9: V244 = 0x4
0x2cb: V245 = CALLDATALOAD 0x4
0x2cd: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x2cf: V247 = 0x24
0x2d1: V248 = CALLDATALOAD 0x24
0x2d2: V249 = AND V248 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V250 = 0x44
0x2d5: V251 = CALLDATALOAD 0x44
0x2d6: V252 = 0x5f7
0x2d9: JUMP 0x5f7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x254, V246, V249, V251]
Exit stack: [V12, 0x254, V246, V249, V251]

================================

Block 0x2da
[0x2da:0x2ed]
---
Predecessors: []
Successors: []
---
0x2da JUMPDEST
0x2db PUSH1 0x40
0x2dd MLOAD
0x2de SWAP1
0x2df ISZERO
0x2e0 ISZERO
0x2e1 DUP2
0x2e2 MSTORE
0x2e3 PUSH1 0x20
0x2e5 ADD
0x2e6 PUSH1 0x40
0x2e8 MLOAD
0x2e9 DUP1
0x2ea SWAP2
0x2eb SUB
0x2ec SWAP1
0x2ed RETURN
---
0x2da: JUMPDEST 
0x2db: V253 = 0x40
0x2dd: V254 = M[0x40]
0x2df: V255 = ISZERO S0
0x2e0: V256 = ISZERO V255
0x2e2: M[V254] = V256
0x2e3: V257 = 0x20
0x2e5: V258 = ADD 0x20 V254
0x2e6: V259 = 0x40
0x2e8: V260 = M[0x40]
0x2eb: V261 = SUB V258 V260
0x2ed: RETURN V260 V261
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ee
[0x2ee:0x2f4]
---
Predecessors: [0x51]
Successors: [0x2f5, 0x2f9]
---
0x2ee JUMPDEST
0x2ef CALLVALUE
0x2f0 ISZERO
0x2f1 PUSH2 0x2f9
0x2f4 JUMPI
---
0x2ee: JUMPDEST 
0x2ef: V262 = CALLVALUE
0x2f0: V263 = ISZERO V262
0x2f1: V264 = 0x2f9
0x2f4: JUMPI 0x2f9 V263
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f5
[0x2f5:0x2f8]
---
Predecessors: [0x2ee]
Successors: []
---
0x2f5 PUSH1 0x0
0x2f7 DUP1
0x2f8 REVERT
---
0x2f5: V265 = 0x0
0x2f8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f9
[0x2f9:0x300]
---
Predecessors: [0x2ee]
Successors: [0x729]
---
0x2f9 JUMPDEST
0x2fa PUSH2 0x301
0x2fd PUSH2 0x729
0x300 JUMP
---
0x2f9: JUMPDEST 
0x2fa: V266 = 0x301
0x2fd: V267 = 0x729
0x300: JUMP 0x729
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x301]
Exit stack: [V12, 0x301]

================================

Block 0x301
[0x301:0x316]
---
Predecessors: [0x72c]
Successors: []
---
0x301 JUMPDEST
0x302 PUSH1 0x40
0x304 MLOAD
0x305 PUSH1 0xff
0x307 SWAP1
0x308 SWAP2
0x309 AND
0x30a DUP2
0x30b MSTORE
0x30c PUSH1 0x20
0x30e ADD
0x30f PUSH1 0x40
0x311 MLOAD
0x312 DUP1
0x313 SWAP2
0x314 SUB
0x315 SWAP1
0x316 RETURN
---
0x301: JUMPDEST 
0x302: V268 = 0x40
0x304: V269 = M[0x40]
0x305: V270 = 0xff
0x309: V271 = AND 0x12 0xff
0x30b: M[V269] = 0x12
0x30c: V272 = 0x20
0x30e: V273 = ADD 0x20 V269
0x30f: V274 = 0x40
0x311: V275 = M[0x40]
0x314: V276 = SUB V273 V275
0x316: RETURN V275 V276
---
Entry stack: [V12, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x317
[0x317:0x31d]
---
Predecessors: [0x5c]
Successors: [0x31e, 0x322]
---
0x317 JUMPDEST
0x318 CALLVALUE
0x319 ISZERO
0x31a PUSH2 0x322
0x31d JUMPI
---
0x317: JUMPDEST 
0x318: V277 = CALLVALUE
0x319: V278 = ISZERO V277
0x31a: V279 = 0x322
0x31d: JUMPI 0x322 V278
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31e
[0x31e:0x321]
---
Predecessors: [0x317]
Successors: []
---
0x31e PUSH1 0x0
0x320 DUP1
0x321 REVERT
---
0x31e: V280 = 0x0
0x321: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x322
[0x322:0x329]
---
Predecessors: [0x317]
Successors: [0x72f]
---
0x322 JUMPDEST
0x323 PUSH2 0x1a5
0x326 PUSH2 0x72f
0x329 JUMP
---
0x322: JUMPDEST 
0x323: V281 = 0x1a5
0x326: V282 = 0x72f
0x329: JUMP 0x72f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a5]
Exit stack: [V12, 0x1a5]

================================

Block 0x32a
[0x32a:0x32b]
---
Predecessors: []
Successors: []
---
0x32a JUMPDEST
0x32b STOP
---
0x32a: JUMPDEST 
0x32b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x32c
[0x32c:0x332]
---
Predecessors: [0x67]
Successors: [0x333, 0x337]
---
0x32c JUMPDEST
0x32d CALLVALUE
0x32e ISZERO
0x32f PUSH2 0x337
0x332 JUMPI
---
0x32c: JUMPDEST 
0x32d: V283 = CALLVALUE
0x32e: V284 = ISZERO V283
0x32f: V285 = 0x337
0x332: JUMPI 0x337 V284
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x333
[0x333:0x336]
---
Predecessors: [0x32c]
Successors: []
---
0x333 PUSH1 0x0
0x335 DUP1
0x336 REVERT
---
0x333: V286 = 0x0
0x336: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x337
[0x337:0x34a]
---
Predecessors: [0x32c]
Successors: [0x76b]
---
0x337 JUMPDEST
0x338 PUSH2 0x27b
0x33b PUSH1 0x1
0x33d PUSH1 0xa0
0x33f PUSH1 0x2
0x341 EXP
0x342 SUB
0x343 PUSH1 0x4
0x345 CALLDATALOAD
0x346 AND
0x347 PUSH2 0x76b
0x34a JUMP
---
0x337: JUMPDEST 
0x338: V287 = 0x27b
0x33b: V288 = 0x1
0x33d: V289 = 0xa0
0x33f: V290 = 0x2
0x341: V291 = EXP 0x2 0xa0
0x342: V292 = SUB 0x10000000000000000000000000000000000000000 0x1
0x343: V293 = 0x4
0x345: V294 = CALLDATALOAD 0x4
0x346: V295 = AND V294 0xffffffffffffffffffffffffffffffffffffffff
0x347: V296 = 0x76b
0x34a: JUMP 0x76b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27b, V295]
Exit stack: [V12, 0x27b, V295]

================================

Block 0x34b
[0x34b:0x35c]
---
Predecessors: []
Successors: []
---
0x34b JUMPDEST
0x34c PUSH1 0x40
0x34e MLOAD
0x34f SWAP1
0x350 DUP2
0x351 MSTORE
0x352 PUSH1 0x20
0x354 ADD
0x355 PUSH1 0x40
0x357 MLOAD
0x358 DUP1
0x359 SWAP2
0x35a SUB
0x35b SWAP1
0x35c RETURN
---
0x34b: JUMPDEST 
0x34c: V297 = 0x40
0x34e: V298 = M[0x40]
0x351: M[V298] = S0
0x352: V299 = 0x20
0x354: V300 = ADD 0x20 V298
0x355: V301 = 0x40
0x357: V302 = M[0x40]
0x35a: V303 = SUB V300 V302
0x35c: RETURN V302 V303
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x35d
[0x35d:0x363]
---
Predecessors: [0x72]
Successors: [0x364, 0x368]
---
0x35d JUMPDEST
0x35e CALLVALUE
0x35f ISZERO
0x360 PUSH2 0x368
0x363 JUMPI
---
0x35d: JUMPDEST 
0x35e: V304 = CALLVALUE
0x35f: V305 = ISZERO V304
0x360: V306 = 0x368
0x363: JUMPI 0x368 V305
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x364
[0x364:0x367]
---
Predecessors: [0x35d]
Successors: []
---
0x364 PUSH1 0x0
0x366 DUP1
0x367 REVERT
---
0x364: V307 = 0x0
0x367: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x368
[0x368:0x36f]
---
Predecessors: [0x35d]
Successors: [0x78a]
---
0x368 JUMPDEST
0x369 PUSH2 0x1a5
0x36c PUSH2 0x78a
0x36f JUMP
---
0x368: JUMPDEST 
0x369: V308 = 0x1a5
0x36c: V309 = 0x78a
0x36f: JUMP 0x78a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a5]
Exit stack: [V12, 0x1a5]

================================

Block 0x370
[0x370:0x371]
---
Predecessors: []
Successors: []
---
0x370 JUMPDEST
0x371 STOP
---
0x370: JUMPDEST 
0x371: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x372
[0x372:0x378]
---
Predecessors: [0x7d]
Successors: [0x379, 0x37d]
---
0x372 JUMPDEST
0x373 CALLVALUE
0x374 ISZERO
0x375 PUSH2 0x37d
0x378 JUMPI
---
0x372: JUMPDEST 
0x373: V310 = CALLVALUE
0x374: V311 = ISZERO V310
0x375: V312 = 0x37d
0x378: JUMPI 0x37d V311
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x379
[0x379:0x37c]
---
Predecessors: [0x372]
Successors: []
---
0x379 PUSH1 0x0
0x37b DUP1
0x37c REVERT
---
0x379: V313 = 0x0
0x37c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37d
[0x37d:0x384]
---
Predecessors: [0x372]
Successors: [0x7cc]
---
0x37d JUMPDEST
0x37e PUSH2 0x1ba
0x381 PUSH2 0x7cc
0x384 JUMP
---
0x37d: JUMPDEST 
0x37e: V314 = 0x1ba
0x381: V315 = 0x7cc
0x384: JUMP 0x7cc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ba]
Exit stack: [V12, 0x1ba]

================================

Block 0x385
[0x385:0x3a8]
---
Predecessors: []
Successors: [0x3a9]
---
0x385 JUMPDEST
0x386 PUSH1 0x40
0x388 MLOAD
0x389 PUSH1 0x20
0x38b DUP1
0x38c DUP3
0x38d MSTORE
0x38e DUP2
0x38f SWAP1
0x390 DUP2
0x391 ADD
0x392 DUP4
0x393 DUP2
0x394 DUP2
0x395 MLOAD
0x396 DUP2
0x397 MSTORE
0x398 PUSH1 0x20
0x39a ADD
0x39b SWAP2
0x39c POP
0x39d DUP1
0x39e MLOAD
0x39f SWAP1
0x3a0 PUSH1 0x20
0x3a2 ADD
0x3a3 SWAP1
0x3a4 DUP1
0x3a5 DUP4
0x3a6 DUP4
0x3a7 PUSH1 0x0
---
0x385: JUMPDEST 
0x386: V316 = 0x40
0x388: V317 = M[0x40]
0x389: V318 = 0x20
0x38d: M[V317] = 0x20
0x391: V319 = ADD V317 0x20
0x395: V320 = M[S0]
0x397: M[V319] = V320
0x398: V321 = 0x20
0x39a: V322 = ADD 0x20 V319
0x39e: V323 = M[S0]
0x3a0: V324 = 0x20
0x3a2: V325 = ADD 0x20 S0
0x3a7: V326 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V317, V317, V322, V325, V323, V323, V322, V325, 0x0]
Exit stack: [S0, V317, V317, V322, V325, V323, V323, V322, V325, 0x0]

================================

Block 0x3a9
[0x3a9:0x3b1]
---
Predecessors: [0x385]
Successors: [0x1f7, 0x3b2]
---
0x3a9 JUMPDEST
0x3aa DUP4
0x3ab DUP2
0x3ac LT
0x3ad ISZERO
0x3ae PUSH2 0x1f7
0x3b1 JUMPI
---
0x3a9: JUMPDEST 
0x3ac: V327 = LT 0x0 V323
0x3ad: V328 = ISZERO V327
0x3ae: V329 = 0x1f7
0x3b1: JUMPI 0x1f7 V328
---
Entry stack: [S9, V317, V317, V322, V325, V323, V323, V322, V325, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V317, V317, V322, V325, V323, V323, V322, V325, 0x0]

================================

Block 0x3b2
[0x3b2:0x3b9]
---
Predecessors: [0x3a9]
Successors: [0x3ba]
---
0x3b2 DUP1
0x3b3 DUP3
0x3b4 ADD
0x3b5 MLOAD
0x3b6 DUP2
0x3b7 DUP5
0x3b8 ADD
0x3b9 MSTORE
---
0x3b4: V330 = ADD V325 0x0
0x3b5: V331 = M[V330]
0x3b8: V332 = ADD V322 0x0
0x3b9: M[V332] = V331
---
Entry stack: [S9, V317, V317, V322, V325, V323, V323, V322, V325, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V317, V317, V322, V325, V323, V323, V322, V325, 0x0]

================================

Block 0x3ba
[0x3ba:0x3c1]
---
Predecessors: [0x3b2]
Successors: [0x1de]
---
0x3ba JUMPDEST
0x3bb PUSH1 0x20
0x3bd ADD
0x3be PUSH2 0x1de
0x3c1 JUMP
---
0x3ba: JUMPDEST 
0x3bb: V333 = 0x20
0x3bd: V334 = ADD 0x20 0x0
0x3be: V335 = 0x1de
0x3c1: JUMP 0x1de
---
Entry stack: [S9, V317, V317, V322, V325, V323, V323, V322, V325, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V317, V317, V322, V325, V323, V323, V322, V325, 0x20]

================================

Block 0x3c2
[0x3c2:0x3d5]
---
Predecessors: []
Successors: [0x224, 0x3d6]
---
0x3c2 JUMPDEST
0x3c3 POP
0x3c4 POP
0x3c5 POP
0x3c6 POP
0x3c7 SWAP1
0x3c8 POP
0x3c9 SWAP1
0x3ca DUP2
0x3cb ADD
0x3cc SWAP1
0x3cd PUSH1 0x1f
0x3cf AND
0x3d0 DUP1
0x3d1 ISZERO
0x3d2 PUSH2 0x224
0x3d5 JUMPI
---
0x3c2: JUMPDEST 
0x3cb: V336 = ADD S4 S6
0x3cd: V337 = 0x1f
0x3cf: V338 = AND 0x1f S4
0x3d1: V339 = ISZERO V338
0x3d2: V340 = 0x224
0x3d5: JUMPI 0x224 V339
---
Entry stack: []
Stack pops: 7
Stack additions: [V336, V338]
Exit stack: [V336, V338]

================================

Block 0x3d6
[0x3d6:0x3ee]
---
Predecessors: [0x3c2]
Successors: [0x3ef]
---
0x3d6 DUP1
0x3d7 DUP3
0x3d8 SUB
0x3d9 DUP1
0x3da MLOAD
0x3db PUSH1 0x1
0x3dd DUP4
0x3de PUSH1 0x20
0x3e0 SUB
0x3e1 PUSH2 0x100
0x3e4 EXP
0x3e5 SUB
0x3e6 NOT
0x3e7 AND
0x3e8 DUP2
0x3e9 MSTORE
0x3ea PUSH1 0x20
0x3ec ADD
0x3ed SWAP2
0x3ee POP
---
0x3d8: V341 = SUB V336 V338
0x3da: V342 = M[V341]
0x3db: V343 = 0x1
0x3de: V344 = 0x20
0x3e0: V345 = SUB 0x20 V338
0x3e1: V346 = 0x100
0x3e4: V347 = EXP 0x100 V345
0x3e5: V348 = SUB V347 0x1
0x3e6: V349 = NOT V348
0x3e7: V350 = AND V349 V342
0x3e9: M[V341] = V350
0x3ea: V351 = 0x20
0x3ec: V352 = ADD 0x20 V341
---
Entry stack: [V336, V338]
Stack pops: 2
Stack additions: [V352, S0]
Exit stack: [V352, V338]

================================

Block 0x3ef
[0x3ef:0x3fc]
---
Predecessors: [0x3d6]
Successors: []
---
0x3ef JUMPDEST
0x3f0 POP
0x3f1 SWAP3
0x3f2 POP
0x3f3 POP
0x3f4 POP
0x3f5 PUSH1 0x40
0x3f7 MLOAD
0x3f8 DUP1
0x3f9 SWAP2
0x3fa SUB
0x3fb SWAP1
0x3fc RETURN
---
0x3ef: JUMPDEST 
0x3f5: V353 = 0x40
0x3f7: V354 = M[0x40]
0x3fa: V355 = SUB V352 V354
0x3fc: RETURN V354 V355
---
Entry stack: [V352, V338]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x3fd
[0x3fd:0x403]
---
Predecessors: [0x88]
Successors: [0x404, 0x408]
---
0x3fd JUMPDEST
0x3fe CALLVALUE
0x3ff ISZERO
0x400 PUSH2 0x408
0x403 JUMPI
---
0x3fd: JUMPDEST 
0x3fe: V356 = CALLVALUE
0x3ff: V357 = ISZERO V356
0x400: V358 = 0x408
0x403: JUMPI 0x408 V357
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x404
[0x404:0x407]
---
Predecessors: [0x3fd]
Successors: []
---
0x404 PUSH1 0x0
0x406 DUP1
0x407 REVERT
---
0x404: V359 = 0x0
0x407: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x408
[0x408:0x41e]
---
Predecessors: [0x3fd]
Successors: [0x80e]
---
0x408 JUMPDEST
0x409 PUSH2 0x254
0x40c PUSH1 0x1
0x40e PUSH1 0xa0
0x410 PUSH1 0x2
0x412 EXP
0x413 SUB
0x414 PUSH1 0x4
0x416 CALLDATALOAD
0x417 AND
0x418 PUSH1 0x24
0x41a CALLDATALOAD
0x41b PUSH2 0x80e
0x41e JUMP
---
0x408: JUMPDEST 
0x409: V360 = 0x254
0x40c: V361 = 0x1
0x40e: V362 = 0xa0
0x410: V363 = 0x2
0x412: V364 = EXP 0x2 0xa0
0x413: V365 = SUB 0x10000000000000000000000000000000000000000 0x1
0x414: V366 = 0x4
0x416: V367 = CALLDATALOAD 0x4
0x417: V368 = AND V367 0xffffffffffffffffffffffffffffffffffffffff
0x418: V369 = 0x24
0x41a: V370 = CALLDATALOAD 0x24
0x41b: V371 = 0x80e
0x41e: JUMP 0x80e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x254, V368, V370]
Exit stack: [V12, 0x254, V368, V370]

================================

Block 0x41f
[0x41f:0x432]
---
Predecessors: []
Successors: []
---
0x41f JUMPDEST
0x420 PUSH1 0x40
0x422 MLOAD
0x423 SWAP1
0x424 ISZERO
0x425 ISZERO
0x426 DUP2
0x427 MSTORE
0x428 PUSH1 0x20
0x42a ADD
0x42b PUSH1 0x40
0x42d MLOAD
0x42e DUP1
0x42f SWAP2
0x430 SUB
0x431 SWAP1
0x432 RETURN
---
0x41f: JUMPDEST 
0x420: V372 = 0x40
0x422: V373 = M[0x40]
0x424: V374 = ISZERO S0
0x425: V375 = ISZERO V374
0x427: M[V373] = V375
0x428: V376 = 0x20
0x42a: V377 = ADD 0x20 V373
0x42b: V378 = 0x40
0x42d: V379 = M[0x40]
0x430: V380 = SUB V377 V379
0x432: RETURN V379 V380
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x433
[0x433:0x439]
---
Predecessors: [0x93]
Successors: [0x43a, 0x43e]
---
0x433 JUMPDEST
0x434 CALLVALUE
0x435 ISZERO
0x436 PUSH2 0x43e
0x439 JUMPI
---
0x433: JUMPDEST 
0x434: V381 = CALLVALUE
0x435: V382 = ISZERO V381
0x436: V383 = 0x43e
0x439: JUMPI 0x43e V382
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x43a
[0x43a:0x43d]
---
Predecessors: [0x433]
Successors: []
---
0x43a PUSH1 0x0
0x43c DUP1
0x43d REVERT
---
0x43a: V384 = 0x0
0x43d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x43e
[0x43e:0x445]
---
Predecessors: [0x433]
Successors: [0x8ee]
---
0x43e JUMPDEST
0x43f PUSH2 0x446
0x442 PUSH2 0x8ee
0x445 JUMP
---
0x43e: JUMPDEST 
0x43f: V385 = 0x446
0x442: V386 = 0x8ee
0x445: JUMP 0x8ee
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x446]
Exit stack: [V12, 0x446]

================================

Block 0x446
[0x446:0x46b]
---
Predecessors: [0x902]
Successors: []
---
0x446 JUMPDEST
0x447 PUSH1 0x40
0x449 MLOAD
0x44a SWAP3
0x44b DUP4
0x44c MSTORE
0x44d PUSH1 0x20
0x44f DUP4
0x450 ADD
0x451 SWAP2
0x452 SWAP1
0x453 SWAP2
0x454 MSTORE
0x455 ISZERO
0x456 ISZERO
0x457 PUSH1 0x40
0x459 DUP1
0x45a DUP4
0x45b ADD
0x45c SWAP2
0x45d SWAP1
0x45e SWAP2
0x45f MSTORE
0x460 PUSH1 0x60
0x462 SWAP1
0x463 SWAP2
0x464 ADD
0x465 SWAP1
0x466 MLOAD
0x467 DUP1
0x468 SWAP2
0x469 SUB
0x46a SWAP1
0x46b RETURN
---
0x446: JUMPDEST 
0x447: V387 = 0x40
0x449: V388 = M[0x40]
0x44c: M[V388] = V729
0x44d: V389 = 0x20
0x450: V390 = ADD V388 0x20
0x454: M[V390] = V731
0x455: V391 = ISZERO V739
0x456: V392 = ISZERO V391
0x457: V393 = 0x40
0x45b: V394 = ADD V388 0x40
0x45f: M[V394] = V392
0x460: V395 = 0x60
0x464: V396 = ADD V388 0x60
0x466: V397 = M[0x40]
0x469: V398 = SUB V396 V397
0x46b: RETURN V397 V398
---
Entry stack: [V12, V729, V731, V739]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x46c
[0x46c:0x472]
---
Predecessors: [0x9e]
Successors: [0x473, 0x477]
---
0x46c JUMPDEST
0x46d CALLVALUE
0x46e ISZERO
0x46f PUSH2 0x477
0x472 JUMPI
---
0x46c: JUMPDEST 
0x46d: V399 = CALLVALUE
0x46e: V400 = ISZERO V399
0x46f: V401 = 0x477
0x472: JUMPI 0x477 V400
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x473
[0x473:0x476]
---
Predecessors: [0x46c]
Successors: []
---
0x473 PUSH1 0x0
0x475 DUP1
0x476 REVERT
---
0x473: V402 = 0x0
0x476: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x477
[0x477:0x47e]
---
Predecessors: [0x46c]
Successors: [0x907]
---
0x477 JUMPDEST
0x478 PUSH2 0x254
0x47b PUSH2 0x907
0x47e JUMP
---
0x477: JUMPDEST 
0x478: V403 = 0x254
0x47b: V404 = 0x907
0x47e: JUMP 0x907
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x254]
Exit stack: [V12, 0x254]

================================

Block 0x47f
[0x47f:0x492]
---
Predecessors: []
Successors: []
---
0x47f JUMPDEST
0x480 PUSH1 0x40
0x482 MLOAD
0x483 SWAP1
0x484 ISZERO
0x485 ISZERO
0x486 DUP2
0x487 MSTORE
0x488 PUSH1 0x20
0x48a ADD
0x48b PUSH1 0x40
0x48d MLOAD
0x48e DUP1
0x48f SWAP2
0x490 SUB
0x491 SWAP1
0x492 RETURN
---
0x47f: JUMPDEST 
0x480: V405 = 0x40
0x482: V406 = M[0x40]
0x484: V407 = ISZERO S0
0x485: V408 = ISZERO V407
0x487: M[V406] = V408
0x488: V409 = 0x20
0x48a: V410 = ADD 0x20 V406
0x48b: V411 = 0x40
0x48d: V412 = M[0x40]
0x490: V413 = SUB V410 V412
0x492: RETURN V412 V413
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x493
[0x493:0x499]
---
Predecessors: [0xa9]
Successors: [0x49a, 0x49e]
---
0x493 JUMPDEST
0x494 CALLVALUE
0x495 ISZERO
0x496 PUSH2 0x49e
0x499 JUMPI
---
0x493: JUMPDEST 
0x494: V414 = CALLVALUE
0x495: V415 = ISZERO V414
0x496: V416 = 0x49e
0x499: JUMPI 0x49e V415
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x49a
[0x49a:0x49d]
---
Predecessors: [0x493]
Successors: []
---
0x49a PUSH1 0x0
0x49c DUP1
0x49d REVERT
---
0x49a: V417 = 0x0
0x49d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x49e
[0x49e:0x4b7]
---
Predecessors: [0x493]
Successors: [0x917]
---
0x49e JUMPDEST
0x49f PUSH2 0x27b
0x4a2 PUSH1 0x1
0x4a4 PUSH1 0xa0
0x4a6 PUSH1 0x2
0x4a8 EXP
0x4a9 SUB
0x4aa PUSH1 0x4
0x4ac CALLDATALOAD
0x4ad DUP2
0x4ae AND
0x4af SWAP1
0x4b0 PUSH1 0x24
0x4b2 CALLDATALOAD
0x4b3 AND
0x4b4 PUSH2 0x917
0x4b7 JUMP
---
0x49e: JUMPDEST 
0x49f: V418 = 0x27b
0x4a2: V419 = 0x1
0x4a4: V420 = 0xa0
0x4a6: V421 = 0x2
0x4a8: V422 = EXP 0x2 0xa0
0x4a9: V423 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4aa: V424 = 0x4
0x4ac: V425 = CALLDATALOAD 0x4
0x4ae: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x4b0: V427 = 0x24
0x4b2: V428 = CALLDATALOAD 0x24
0x4b3: V429 = AND V428 0xffffffffffffffffffffffffffffffffffffffff
0x4b4: V430 = 0x917
0x4b7: JUMP 0x917
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27b, V426, V429]
Exit stack: [V12, 0x27b, V426, V429]

================================

Block 0x4b8
[0x4b8:0x4c9]
---
Predecessors: []
Successors: []
---
0x4b8 JUMPDEST
0x4b9 PUSH1 0x40
0x4bb MLOAD
0x4bc SWAP1
0x4bd DUP2
0x4be MSTORE
0x4bf PUSH1 0x20
0x4c1 ADD
0x4c2 PUSH1 0x40
0x4c4 MLOAD
0x4c5 DUP1
0x4c6 SWAP2
0x4c7 SUB
0x4c8 SWAP1
0x4c9 RETURN
---
0x4b8: JUMPDEST 
0x4b9: V431 = 0x40
0x4bb: V432 = M[0x40]
0x4be: M[V432] = S0
0x4bf: V433 = 0x20
0x4c1: V434 = ADD 0x20 V432
0x4c2: V435 = 0x40
0x4c4: V436 = M[0x40]
0x4c7: V437 = SUB V434 V436
0x4c9: RETURN V436 V437
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4ca
[0x4ca:0x4d0]
---
Predecessors: [0xb4]
Successors: [0x4d1, 0x4d5]
---
0x4ca JUMPDEST
0x4cb CALLVALUE
0x4cc ISZERO
0x4cd PUSH2 0x4d5
0x4d0 JUMPI
---
0x4ca: JUMPDEST 
0x4cb: V438 = CALLVALUE
0x4cc: V439 = ISZERO V438
0x4cd: V440 = 0x4d5
0x4d0: JUMPI 0x4d5 V439
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d1
[0x4d1:0x4d4]
---
Predecessors: [0x4ca]
Successors: []
---
0x4d1 PUSH1 0x0
0x4d3 DUP1
0x4d4 REVERT
---
0x4d1: V441 = 0x0
0x4d4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d5
[0x4d5:0x4e8]
---
Predecessors: [0x4ca]
Successors: [0x944]
---
0x4d5 JUMPDEST
0x4d6 PUSH2 0x254
0x4d9 PUSH1 0x1
0x4db PUSH1 0xa0
0x4dd PUSH1 0x2
0x4df EXP
0x4e0 SUB
0x4e1 PUSH1 0x4
0x4e3 CALLDATALOAD
0x4e4 AND
0x4e5 PUSH2 0x944
0x4e8 JUMP
---
0x4d5: JUMPDEST 
0x4d6: V442 = 0x254
0x4d9: V443 = 0x1
0x4db: V444 = 0xa0
0x4dd: V445 = 0x2
0x4df: V446 = EXP 0x2 0xa0
0x4e0: V447 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e1: V448 = 0x4
0x4e3: V449 = CALLDATALOAD 0x4
0x4e4: V450 = AND V449 0xffffffffffffffffffffffffffffffffffffffff
0x4e5: V451 = 0x944
0x4e8: JUMP 0x944
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x254, V450]
Exit stack: [V12, 0x254, V450]

================================

Block 0x4e9
[0x4e9:0x4fc]
---
Predecessors: []
Successors: []
---
0x4e9 JUMPDEST
0x4ea PUSH1 0x40
0x4ec MLOAD
0x4ed SWAP1
0x4ee ISZERO
0x4ef ISZERO
0x4f0 DUP2
0x4f1 MSTORE
0x4f2 PUSH1 0x20
0x4f4 ADD
0x4f5 PUSH1 0x40
0x4f7 MLOAD
0x4f8 DUP1
0x4f9 SWAP2
0x4fa SUB
0x4fb SWAP1
0x4fc RETURN
---
0x4e9: JUMPDEST 
0x4ea: V452 = 0x40
0x4ec: V453 = M[0x40]
0x4ee: V454 = ISZERO S0
0x4ef: V455 = ISZERO V454
0x4f1: M[V453] = V455
0x4f2: V456 = 0x20
0x4f4: V457 = ADD 0x20 V453
0x4f5: V458 = 0x40
0x4f7: V459 = M[0x40]
0x4fa: V460 = SUB V457 V459
0x4fc: RETURN V459 V460
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4fd
[0x4fd:0x504]
---
Predecessors: [0x1b2]
Successors: [0xa63]
---
0x4fd JUMPDEST
0x4fe PUSH2 0x505
0x501 PUSH2 0xa63
0x504 JUMP
---
0x4fd: JUMPDEST 
0x4fe: V461 = 0x505
0x501: V462 = 0xa63
0x504: JUMP 0xa63
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: [0x505]
Exit stack: [V12, 0x1ba, 0x505]

================================

Block 0x505
[0x505:0x53b]
---
Predecessors: [0xa63]
Successors: [0x53c]
---
0x505 JUMPDEST
0x506 PUSH1 0x40
0x508 DUP1
0x509 MLOAD
0x50a SWAP1
0x50b DUP2
0x50c ADD
0x50d PUSH1 0x40
0x50f MSTORE
0x510 PUSH1 0x9
0x512 DUP2
0x513 MSTORE
0x514 PUSH32 0x50525320546f6b656e0000000000000000000000000000000000000000000000
0x535 PUSH1 0x20
0x537 DUP3
0x538 ADD
0x539 MSTORE
0x53a SWAP1
0x53b POP
---
0x505: JUMPDEST 
0x506: V463 = 0x40
0x509: V464 = M[0x40]
0x50c: V465 = ADD V464 0x40
0x50d: V466 = 0x40
0x50f: M[0x40] = V465
0x510: V467 = 0x9
0x513: M[V464] = 0x9
0x514: V468 = 0x50525320546f6b656e0000000000000000000000000000000000000000000000
0x535: V469 = 0x20
0x538: V470 = ADD V464 0x20
0x539: M[V470] = 0x50525320546f6b656e0000000000000000000000000000000000000000000000
---
Entry stack: [V12, 0x1ba, V884]
Stack pops: 1
Stack additions: [V464]
Exit stack: [V12, 0x1ba, V464]

================================

Block 0x53c
[0x53c:0x53e]
---
Predecessors: [0x505]
Successors: [0x1ba]
---
0x53c JUMPDEST
0x53d SWAP1
0x53e JUMP
---
0x53c: JUMPDEST 
0x53e: JUMP 0x1ba
---
Entry stack: [V12, 0x1ba, V464]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V464]

================================

Block 0x53f
[0x53f:0x54a]
---
Predecessors: [0x23d]
Successors: [0x54b, 0x574]
---
0x53f JUMPDEST
0x540 PUSH1 0x0
0x542 DUP2
0x543 ISZERO
0x544 DUP1
0x545 ISZERO
0x546 SWAP1
0x547 PUSH2 0x574
0x54a JUMPI
---
0x53f: JUMPDEST 
0x540: V471 = 0x0
0x543: V472 = ISZERO V197
0x545: V473 = ISZERO V472
0x547: V474 = 0x574
0x54a: JUMPI 0x574 V472
---
Entry stack: [V12, 0x254, V195, V197]
Stack pops: 1
Stack additions: [S0, 0x0, V473]
Exit stack: [V12, 0x254, V195, V197, 0x0, V473]

================================

Block 0x54b
[0x54b:0x573]
---
Predecessors: [0x53f]
Successors: [0x574]
---
0x54b POP
0x54c PUSH1 0x1
0x54e PUSH1 0xa0
0x550 PUSH1 0x2
0x552 EXP
0x553 SUB
0x554 CALLER
0x555 DUP2
0x556 AND
0x557 PUSH1 0x0
0x559 SWAP1
0x55a DUP2
0x55b MSTORE
0x55c PUSH1 0x2
0x55e PUSH1 0x20
0x560 SWAP1
0x561 DUP2
0x562 MSTORE
0x563 PUSH1 0x40
0x565 DUP1
0x566 DUP4
0x567 SHA3
0x568 SWAP4
0x569 DUP8
0x56a AND
0x56b DUP4
0x56c MSTORE
0x56d SWAP3
0x56e SWAP1
0x56f MSTORE
0x570 SHA3
0x571 SLOAD
0x572 ISZERO
0x573 ISZERO
---
0x54c: V475 = 0x1
0x54e: V476 = 0xa0
0x550: V477 = 0x2
0x552: V478 = EXP 0x2 0xa0
0x553: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x554: V480 = CALLER
0x556: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x557: V482 = 0x0
0x55b: M[0x0] = V481
0x55c: V483 = 0x2
0x55e: V484 = 0x20
0x562: M[0x20] = 0x2
0x563: V485 = 0x40
0x567: V486 = SHA3 0x0 0x40
0x56a: V487 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0x56c: M[0x0] = V487
0x56f: M[0x20] = V486
0x570: V488 = SHA3 0x0 0x40
0x571: V489 = S[V488]
0x572: V490 = ISZERO V489
0x573: V491 = ISZERO V490
---
Entry stack: [V12, 0x254, V195, V197, 0x0, V473]
Stack pops: 4
Stack additions: [S3, S2, S1, V491]
Exit stack: [V12, 0x254, V195, V197, 0x0, V491]

================================

Block 0x574
[0x574:0x579]
---
Predecessors: [0x53f, 0x54b]
Successors: [0x57a, 0x581]
---
0x574 JUMPDEST
0x575 ISZERO
0x576 PUSH2 0x581
0x579 JUMPI
---
0x574: JUMPDEST 
0x575: V492 = ISZERO S0
0x576: V493 = 0x581
0x579: JUMPI 0x581 V492
---
Entry stack: [V12, 0x254, V195, V197, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x254, V195, V197, 0x0]

================================

Block 0x57a
[0x57a:0x580]
---
Predecessors: [0x574]
Successors: [0x5e5]
---
0x57a POP
0x57b PUSH1 0x0
0x57d PUSH2 0x5e5
0x580 JUMP
---
0x57b: V494 = 0x0
0x57d: V495 = 0x5e5
0x580: JUMP 0x5e5
---
Entry stack: [V12, 0x254, V195, V197, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x254, V195, V197, 0x0]

================================

Block 0x581
[0x581:0x5e4]
---
Predecessors: [0x574]
Successors: [0x5e5]
---
0x581 JUMPDEST
0x582 PUSH1 0x1
0x584 PUSH1 0xa0
0x586 PUSH1 0x2
0x588 EXP
0x589 SUB
0x58a CALLER
0x58b DUP2
0x58c AND
0x58d PUSH1 0x0
0x58f DUP2
0x590 DUP2
0x591 MSTORE
0x592 PUSH1 0x2
0x594 PUSH1 0x20
0x596 SWAP1
0x597 DUP2
0x598 MSTORE
0x599 PUSH1 0x40
0x59b DUP1
0x59c DUP4
0x59d SHA3
0x59e SWAP5
0x59f DUP9
0x5a0 AND
0x5a1 DUP1
0x5a2 DUP5
0x5a3 MSTORE
0x5a4 SWAP5
0x5a5 SWAP1
0x5a6 SWAP2
0x5a7 MSTORE
0x5a8 SWAP1
0x5a9 DUP2
0x5aa SWAP1
0x5ab SHA3
0x5ac DUP6
0x5ad SWAP1
0x5ae SSTORE
0x5af PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5d0 SWAP1
0x5d1 DUP6
0x5d2 SWAP1
0x5d3 MLOAD
0x5d4 SWAP1
0x5d5 DUP2
0x5d6 MSTORE
0x5d7 PUSH1 0x20
0x5d9 ADD
0x5da PUSH1 0x40
0x5dc MLOAD
0x5dd DUP1
0x5de SWAP2
0x5df SUB
0x5e0 SWAP1
0x5e1 LOG3
0x5e2 POP
0x5e3 PUSH1 0x1
---
0x581: JUMPDEST 
0x582: V496 = 0x1
0x584: V497 = 0xa0
0x586: V498 = 0x2
0x588: V499 = EXP 0x2 0xa0
0x589: V500 = SUB 0x10000000000000000000000000000000000000000 0x1
0x58a: V501 = CALLER
0x58c: V502 = AND 0xffffffffffffffffffffffffffffffffffffffff V501
0x58d: V503 = 0x0
0x591: M[0x0] = V502
0x592: V504 = 0x2
0x594: V505 = 0x20
0x598: M[0x20] = 0x2
0x599: V506 = 0x40
0x59d: V507 = SHA3 0x0 0x40
0x5a0: V508 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0x5a3: M[0x0] = V508
0x5a7: M[0x20] = V507
0x5ab: V509 = SHA3 0x0 0x40
0x5ae: S[V509] = V197
0x5af: V510 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5d3: V511 = M[0x40]
0x5d6: M[V511] = V197
0x5d7: V512 = 0x20
0x5d9: V513 = ADD 0x20 V511
0x5da: V514 = 0x40
0x5dc: V515 = M[0x40]
0x5df: V516 = SUB V513 V515
0x5e1: LOG V515 V516 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V502 V508
0x5e3: V517 = 0x1
---
Entry stack: [V12, 0x254, V195, V197, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V12, 0x254, V195, V197, 0x1]

================================

Block 0x5e5
[0x5e5:0x5ea]
---
Predecessors: [0x57a, 0x581]
Successors: [0x254]
---
0x5e5 JUMPDEST
0x5e6 SWAP3
0x5e7 SWAP2
0x5e8 POP
0x5e9 POP
0x5ea JUMP
---
0x5e5: JUMPDEST 
0x5ea: JUMP 0x254
---
Entry stack: [V12, 0x254, V195, V197, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x5eb
[0x5eb:0x5f0]
---
Predecessors: [0x273]
Successors: [0x27b]
---
0x5eb JUMPDEST
0x5ec PUSH1 0x3
0x5ee SLOAD
0x5ef DUP2
0x5f0 JUMP
---
0x5eb: JUMPDEST 
0x5ec: V518 = 0x3
0x5ee: V519 = S[0x3]
0x5f0: JUMP 0x27b
---
Entry stack: [V12, 0x27b]
Stack pops: 1
Stack additions: [S0, V519]
Exit stack: [V12, 0x27b, V519]

================================

Block 0x5f1
[0x5f1:0x5f6]
---
Predecessors: [0x298]
Successors: [0x27b]
---
0x5f1 JUMPDEST
0x5f2 PUSH1 0x4
0x5f4 SLOAD
0x5f5 DUP2
0x5f6 JUMP
---
0x5f1: JUMPDEST 
0x5f2: V520 = 0x4
0x5f4: V521 = S[0x4]
0x5f6: JUMP 0x27b
---
Entry stack: [V12, 0x27b]
Stack pops: 1
Stack additions: [S0, V521]
Exit stack: [V12, 0x27b, V521]

================================

Block 0x5f7
[0x5f7:0x607]
---
Predecessors: [0x2bd]
Successors: [0x608, 0x60c]
---
0x5f7 JUMPDEST
0x5f8 PUSH1 0x0
0x5fa DUP1
0x5fb DUP1
0x5fc DUP1
0x5fd DUP1
0x5fe DUP1
0x5ff PUSH1 0x64
0x601 CALLDATASIZE
0x602 LT
0x603 ISZERO
0x604 PUSH2 0x60c
0x607 JUMPI
---
0x5f7: JUMPDEST 
0x5f8: V522 = 0x0
0x5ff: V523 = 0x64
0x601: V524 = CALLDATASIZE
0x602: V525 = LT V524 0x64
0x603: V526 = ISZERO V525
0x604: V527 = 0x60c
0x607: JUMPI 0x60c V526
---
Entry stack: [V12, 0x254, V246, V249, V251]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x608
[0x608:0x60b]
---
Predecessors: [0x5f7]
Successors: []
---
0x608 PUSH1 0x0
0x60a DUP1
0x60b REVERT
---
0x608: V528 = 0x0
0x60b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x60c
[0x60c:0x613]
---
Predecessors: [0x5f7]
Successors: [0x614, 0x61c]
---
0x60c JUMPDEST
0x60d DUP7
0x60e ISZERO
0x60f ISZERO
0x610 PUSH2 0x61c
0x613 JUMPI
---
0x60c: JUMPDEST 
0x60e: V529 = ISZERO V251
0x60f: V530 = ISZERO V529
0x610: V531 = 0x61c
0x613: JUMPI 0x61c V530
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x614
[0x614:0x61b]
---
Predecessors: [0x60c]
Successors: [0x71c]
---
0x614 PUSH1 0x0
0x616 SWAP6
0x617 POP
0x618 PUSH2 0x71c
0x61b JUMP
---
0x614: V532 = 0x0
0x618: V533 = 0x71c
0x61b: JUMP 0x71c
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x61c
[0x61c:0x678]
---
Predecessors: [0x60c]
Successors: [0x679, 0x67b]
---
0x61c JUMPDEST
0x61d POP
0x61e POP
0x61f POP
0x620 POP
0x621 PUSH1 0x1
0x623 PUSH1 0xa0
0x625 PUSH1 0x2
0x627 EXP
0x628 SUB
0x629 DUP6
0x62a DUP2
0x62b AND
0x62c PUSH1 0x0
0x62e SWAP1
0x62f DUP2
0x630 MSTORE
0x631 PUSH1 0x1
0x633 PUSH1 0x20
0x635 DUP2
0x636 DUP2
0x637 MSTORE
0x638 PUSH1 0x40
0x63a DUP1
0x63b DUP5
0x63c SHA3
0x63d SLOAD
0x63e PUSH1 0x2
0x640 DUP4
0x641 MSTORE
0x642 DUP2
0x643 DUP6
0x644 SHA3
0x645 CALLER
0x646 DUP8
0x647 AND
0x648 DUP7
0x649 MSTORE
0x64a DUP4
0x64b MSTORE
0x64c DUP2
0x64d DUP6
0x64e SHA3
0x64f SLOAD
0x650 SWAP6
0x651 DUP11
0x652 AND
0x653 DUP6
0x654 MSTORE
0x655 SWAP3
0x656 SWAP1
0x657 SWAP2
0x658 MSTORE
0x659 SWAP1
0x65a SWAP2
0x65b SHA3
0x65c SLOAD
0x65d SWAP1
0x65e SWAP3
0x65f POP
0x660 DUP5
0x661 DUP4
0x662 GT
0x663 DUP1
0x664 ISZERO
0x665 SWAP2
0x666 DUP7
0x667 DUP5
0x668 GT
0x669 ISZERO
0x66a SWAP2
0x66b DUP8
0x66c DUP3
0x66d ADD
0x66e SWAP2
0x66f SWAP1
0x670 SWAP2
0x671 GT
0x672 SWAP1
0x673 DUP4
0x674 SWAP1
0x675 PUSH2 0x67b
0x678 JUMPI
---
0x61c: JUMPDEST 
0x621: V534 = 0x1
0x623: V535 = 0xa0
0x625: V536 = 0x2
0x627: V537 = EXP 0x2 0xa0
0x628: V538 = SUB 0x10000000000000000000000000000000000000000 0x1
0x62b: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x62c: V540 = 0x0
0x630: M[0x0] = V539
0x631: V541 = 0x1
0x633: V542 = 0x20
0x637: M[0x20] = 0x1
0x638: V543 = 0x40
0x63c: V544 = SHA3 0x0 0x40
0x63d: V545 = S[V544]
0x63e: V546 = 0x2
0x641: M[0x20] = 0x2
0x644: V547 = SHA3 0x0 0x40
0x645: V548 = CALLER
0x647: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V548
0x649: M[0x0] = V549
0x64b: M[0x20] = V547
0x64e: V550 = SHA3 0x0 0x40
0x64f: V551 = S[V550]
0x652: V552 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0x654: M[0x0] = V552
0x658: M[0x20] = 0x1
0x65b: V553 = SHA3 0x0 0x40
0x65c: V554 = S[V553]
0x662: V555 = GT V545 V251
0x664: V556 = ISZERO V555
0x668: V557 = GT V551 V251
0x669: V558 = ISZERO V557
0x66d: V559 = ADD V554 V251
0x671: V560 = GT V559 V554
0x675: V561 = 0x67b
0x678: JUMPI 0x67b V555
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V545, V551, V556, V558, V560, V556]
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, V545, V551, V556, V558, V560, V556]

================================

Block 0x679
[0x679:0x67a]
---
Predecessors: [0x61c]
Successors: [0x67b]
---
0x679 POP
0x67a DUP2
---
0x679: NOP 
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, V545, V551, V556, V558, V560, V556]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, V545, V551, V556, V558, V560, V558]

================================

Block 0x67b
[0x67b:0x681]
---
Predecessors: [0x61c, 0x679]
Successors: [0x682, 0x685]
---
0x67b JUMPDEST
0x67c DUP1
0x67d ISZERO
0x67e PUSH2 0x685
0x681 JUMPI
---
0x67b: JUMPDEST 
0x67d: V562 = ISZERO S0
0x67e: V563 = 0x685
0x681: JUMPI 0x685 V562
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, V545, V551, V556, V558, V560, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, V545, V551, V556, V558, V560, S0]

================================

Block 0x682
[0x682:0x684]
---
Predecessors: [0x67b]
Successors: [0x685]
---
0x682 POP
0x683 DUP1
0x684 ISZERO
---
0x684: V564 = ISZERO V560
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, V545, V551, V556, V558, V560, S0]
Stack pops: 2
Stack additions: [S1, V564]
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, V545, V551, V556, V558, V560, V564]

================================

Block 0x685
[0x685:0x68a]
---
Predecessors: [0x67b, 0x682]
Successors: [0x68b, 0x717]
---
0x685 JUMPDEST
0x686 ISZERO
0x687 PUSH2 0x717
0x68a JUMPI
---
0x685: JUMPDEST 
0x686: V565 = ISZERO S0
0x687: V566 = 0x717
0x68a: JUMPI 0x717 V565
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, V545, V551, V556, V558, V560, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, V545, V551, V556, V558, V560]

================================

Block 0x68b
[0x68b:0x716]
---
Predecessors: [0x685]
Successors: [0x71c]
---
0x68b PUSH1 0x1
0x68d PUSH1 0xa0
0x68f PUSH1 0x2
0x691 EXP
0x692 SUB
0x693 DUP1
0x694 DUP10
0x695 AND
0x696 PUSH1 0x0
0x698 DUP2
0x699 DUP2
0x69a MSTORE
0x69b PUSH1 0x1
0x69d PUSH1 0x20
0x69f SWAP1
0x6a0 DUP2
0x6a1 MSTORE
0x6a2 PUSH1 0x40
0x6a4 DUP1
0x6a5 DUP4
0x6a6 SHA3
0x6a7 DUP1
0x6a8 SLOAD
0x6a9 DUP14
0x6aa ADD
0x6ab SWAP1
0x6ac SSTORE
0x6ad DUP14
0x6ae DUP6
0x6af AND
0x6b0 DUP1
0x6b1 DUP5
0x6b2 MSTORE
0x6b3 DUP2
0x6b4 DUP5
0x6b5 SHA3
0x6b6 DUP1
0x6b7 SLOAD
0x6b8 DUP15
0x6b9 SWAP1
0x6ba SUB
0x6bb SWAP1
0x6bc SSTORE
0x6bd PUSH1 0x2
0x6bf DUP4
0x6c0 MSTORE
0x6c1 DUP2
0x6c2 DUP5
0x6c3 SHA3
0x6c4 CALLER
0x6c5 SWAP1
0x6c6 SWAP7
0x6c7 AND
0x6c8 DUP5
0x6c9 MSTORE
0x6ca SWAP5
0x6cb SWAP1
0x6cc SWAP2
0x6cd MSTORE
0x6ce SWAP1
0x6cf DUP2
0x6d0 SWAP1
0x6d1 SHA3
0x6d2 DUP1
0x6d3 SLOAD
0x6d4 DUP12
0x6d5 SWAP1
0x6d6 SUB
0x6d7 SWAP1
0x6d8 SSTORE
0x6d9 SWAP1
0x6da SWAP2
0x6db SWAP1
0x6dc PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x6fd SWAP1
0x6fe DUP11
0x6ff SWAP1
0x700 MLOAD
0x701 SWAP1
0x702 DUP2
0x703 MSTORE
0x704 PUSH1 0x20
0x706 ADD
0x707 PUSH1 0x40
0x709 MLOAD
0x70a DUP1
0x70b SWAP2
0x70c SUB
0x70d SWAP1
0x70e LOG3
0x70f PUSH1 0x1
0x711 SWAP6
0x712 POP
0x713 PUSH2 0x71c
0x716 JUMP
---
0x68b: V567 = 0x1
0x68d: V568 = 0xa0
0x68f: V569 = 0x2
0x691: V570 = EXP 0x2 0xa0
0x692: V571 = SUB 0x10000000000000000000000000000000000000000 0x1
0x695: V572 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0x696: V573 = 0x0
0x69a: M[0x0] = V572
0x69b: V574 = 0x1
0x69d: V575 = 0x20
0x6a1: M[0x20] = 0x1
0x6a2: V576 = 0x40
0x6a6: V577 = SHA3 0x0 0x40
0x6a8: V578 = S[V577]
0x6aa: V579 = ADD V251 V578
0x6ac: S[V577] = V579
0x6af: V580 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x6b2: M[0x0] = V580
0x6b5: V581 = SHA3 0x0 0x40
0x6b7: V582 = S[V581]
0x6ba: V583 = SUB V582 V251
0x6bc: S[V581] = V583
0x6bd: V584 = 0x2
0x6c0: M[0x20] = 0x2
0x6c3: V585 = SHA3 0x0 0x40
0x6c4: V586 = CALLER
0x6c7: V587 = AND 0xffffffffffffffffffffffffffffffffffffffff V586
0x6c9: M[0x0] = V587
0x6cd: M[0x20] = V585
0x6d1: V588 = SHA3 0x0 0x40
0x6d3: V589 = S[V588]
0x6d6: V590 = SUB V589 V251
0x6d8: S[V588] = V590
0x6dc: V591 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x700: V592 = M[0x40]
0x703: M[V592] = V251
0x704: V593 = 0x20
0x706: V594 = ADD 0x20 V592
0x707: V595 = 0x40
0x709: V596 = M[0x40]
0x70c: V597 = SUB V594 V596
0x70e: LOG V596 V597 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V580 V572
0x70f: V598 = 0x1
0x713: V599 = 0x71c
0x716: JUMP 0x71c
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, V545, V551, V556, V558, V560]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x254, V246, V249, V251, 0x1, V545, V551, V556, V558, V560]

================================

Block 0x717
[0x717:0x71b]
---
Predecessors: [0x685]
Successors: [0x71c]
---
0x717 JUMPDEST
0x718 PUSH1 0x0
0x71a SWAP6
0x71b POP
---
0x717: JUMPDEST 
0x718: V600 = 0x0
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, V545, V551, V556, V558, V560]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, V545, V551, V556, V558, V560]

================================

Block 0x71c
[0x71c:0x71c]
---
Predecessors: [0x614, 0x68b, 0x717]
Successors: [0x71d]
---
0x71c JUMPDEST
---
0x71c: JUMPDEST 
---
Entry stack: [V12, 0x254, V246, V249, V251, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V246, V249, V251, {0x0, 0x1}, S4, S3, S2, S1, S0]

================================

Block 0x71d
[0x71d:0x728]
---
Predecessors: [0x71c]
Successors: [0x254]
---
0x71d JUMPDEST
0x71e POP
0x71f POP
0x720 POP
0x721 POP
0x722 POP
0x723 SWAP4
0x724 SWAP3
0x725 POP
0x726 POP
0x727 POP
0x728 JUMP
---
0x71d: JUMPDEST 
0x728: JUMP 0x254
---
Entry stack: [V12, 0x254, V246, V249, V251, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S5]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x729
[0x729:0x72b]
---
Predecessors: [0x2f9]
Successors: [0x72c]
---
0x729 JUMPDEST
0x72a PUSH1 0x12
---
0x729: JUMPDEST 
0x72a: V601 = 0x12
---
Entry stack: [V12, 0x301]
Stack pops: 0
Stack additions: [0x12]
Exit stack: [V12, 0x301, 0x12]

================================

Block 0x72c
[0x72c:0x72e]
---
Predecessors: [0x729]
Successors: [0x301]
---
0x72c JUMPDEST
0x72d SWAP1
0x72e JUMP
---
0x72c: JUMPDEST 
0x72e: JUMP 0x301
---
Entry stack: [V12, 0x301, 0x12]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x12]

================================

Block 0x72f
[0x72f:0x745]
---
Predecessors: [0x322]
Successors: [0x746, 0x74a]
---
0x72f JUMPDEST
0x730 PUSH1 0x0
0x732 SLOAD
0x733 CALLER
0x734 PUSH1 0x1
0x736 PUSH1 0xa0
0x738 PUSH1 0x2
0x73a EXP
0x73b SUB
0x73c SWAP1
0x73d DUP2
0x73e AND
0x73f SWAP2
0x740 AND
0x741 EQ
0x742 PUSH2 0x74a
0x745 JUMPI
---
0x72f: JUMPDEST 
0x730: V602 = 0x0
0x732: V603 = S[0x0]
0x733: V604 = CALLER
0x734: V605 = 0x1
0x736: V606 = 0xa0
0x738: V607 = 0x2
0x73a: V608 = EXP 0x2 0xa0
0x73b: V609 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73e: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V604
0x740: V611 = AND V603 0xffffffffffffffffffffffffffffffffffffffff
0x741: V612 = EQ V611 V610
0x742: V613 = 0x74a
0x745: JUMPI 0x74a V612
---
Entry stack: [V12, 0x1a5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5]

================================

Block 0x746
[0x746:0x749]
---
Predecessors: [0x72f]
Successors: []
---
0x746 PUSH1 0x0
0x748 DUP1
0x749 REVERT
---
0x746: V614 = 0x0
0x749: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1a5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5]

================================

Block 0x74a
[0x74a:0x768]
---
Predecessors: [0x72f]
Successors: [0x769]
---
0x74a JUMPDEST
0x74b PUSH1 0x0
0x74d DUP1
0x74e SLOAD
0x74f PUSH21 0xff0000000000000000000000000000000000000000
0x765 NOT
0x766 AND
0x767 SWAP1
0x768 SSTORE
---
0x74a: JUMPDEST 
0x74b: V615 = 0x0
0x74e: V616 = S[0x0]
0x74f: V617 = 0xff0000000000000000000000000000000000000000
0x765: V618 = NOT 0xff0000000000000000000000000000000000000000
0x766: V619 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V616
0x768: S[0x0] = V619
---
Entry stack: [V12, 0x1a5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5]

================================

Block 0x769
[0x769:0x76a]
---
Predecessors: [0x74a]
Successors: [0x1a5]
---
0x769 JUMPDEST
0x76a JUMP
---
0x769: JUMPDEST 
0x76a: JUMP 0x1a5
---
Entry stack: [V12, 0x1a5]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x76b
[0x76b:0x784]
---
Predecessors: [0x337]
Successors: [0x785]
---
0x76b JUMPDEST
0x76c PUSH1 0x1
0x76e PUSH1 0xa0
0x770 PUSH1 0x2
0x772 EXP
0x773 SUB
0x774 DUP2
0x775 AND
0x776 PUSH1 0x0
0x778 SWAP1
0x779 DUP2
0x77a MSTORE
0x77b PUSH1 0x1
0x77d PUSH1 0x20
0x77f MSTORE
0x780 PUSH1 0x40
0x782 SWAP1
0x783 SHA3
0x784 SLOAD
---
0x76b: JUMPDEST 
0x76c: V620 = 0x1
0x76e: V621 = 0xa0
0x770: V622 = 0x2
0x772: V623 = EXP 0x2 0xa0
0x773: V624 = SUB 0x10000000000000000000000000000000000000000 0x1
0x775: V625 = AND V295 0xffffffffffffffffffffffffffffffffffffffff
0x776: V626 = 0x0
0x77a: M[0x0] = V625
0x77b: V627 = 0x1
0x77d: V628 = 0x20
0x77f: M[0x20] = 0x1
0x780: V629 = 0x40
0x783: V630 = SHA3 0x0 0x40
0x784: V631 = S[V630]
---
Entry stack: [V12, 0x27b, V295]
Stack pops: 1
Stack additions: [S0, V631]
Exit stack: [V12, 0x27b, V295, V631]

================================

Block 0x785
[0x785:0x789]
---
Predecessors: [0x76b]
Successors: [0x27b]
---
0x785 JUMPDEST
0x786 SWAP2
0x787 SWAP1
0x788 POP
0x789 JUMP
---
0x785: JUMPDEST 
0x789: JUMP 0x27b
---
Entry stack: [V12, 0x27b, V295, V631]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V631]

================================

Block 0x78a
[0x78a:0x7a0]
---
Predecessors: [0x368]
Successors: [0x7a1, 0x7a5]
---
0x78a JUMPDEST
0x78b PUSH1 0x0
0x78d SLOAD
0x78e CALLER
0x78f PUSH1 0x1
0x791 PUSH1 0xa0
0x793 PUSH1 0x2
0x795 EXP
0x796 SUB
0x797 SWAP1
0x798 DUP2
0x799 AND
0x79a SWAP2
0x79b AND
0x79c EQ
0x79d PUSH2 0x7a5
0x7a0 JUMPI
---
0x78a: JUMPDEST 
0x78b: V632 = 0x0
0x78d: V633 = S[0x0]
0x78e: V634 = CALLER
0x78f: V635 = 0x1
0x791: V636 = 0xa0
0x793: V637 = 0x2
0x795: V638 = EXP 0x2 0xa0
0x796: V639 = SUB 0x10000000000000000000000000000000000000000 0x1
0x799: V640 = AND 0xffffffffffffffffffffffffffffffffffffffff V634
0x79b: V641 = AND V633 0xffffffffffffffffffffffffffffffffffffffff
0x79c: V642 = EQ V641 V640
0x79d: V643 = 0x7a5
0x7a0: JUMPI 0x7a5 V642
---
Entry stack: [V12, 0x1a5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5]

================================

Block 0x7a1
[0x7a1:0x7a4]
---
Predecessors: [0x78a]
Successors: []
---
0x7a1 PUSH1 0x0
0x7a3 DUP1
0x7a4 REVERT
---
0x7a1: V644 = 0x0
0x7a4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1a5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5]

================================

Block 0x7a5
[0x7a5:0x7c9]
---
Predecessors: [0x78a]
Successors: [0x7ca]
---
0x7a5 JUMPDEST
0x7a6 PUSH1 0x0
0x7a8 DUP1
0x7a9 SLOAD
0x7aa PUSH21 0xff0000000000000000000000000000000000000000
0x7c0 NOT
0x7c1 AND
0x7c2 PUSH1 0xa0
0x7c4 PUSH1 0x2
0x7c6 EXP
0x7c7 OR
0x7c8 SWAP1
0x7c9 SSTORE
---
0x7a5: JUMPDEST 
0x7a6: V645 = 0x0
0x7a9: V646 = S[0x0]
0x7aa: V647 = 0xff0000000000000000000000000000000000000000
0x7c0: V648 = NOT 0xff0000000000000000000000000000000000000000
0x7c1: V649 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V646
0x7c2: V650 = 0xa0
0x7c4: V651 = 0x2
0x7c6: V652 = EXP 0x2 0xa0
0x7c7: V653 = OR 0x10000000000000000000000000000000000000000 V649
0x7c9: S[0x0] = V653
---
Entry stack: [V12, 0x1a5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5]

================================

Block 0x7ca
[0x7ca:0x7cb]
---
Predecessors: [0x7a5]
Successors: [0x1a5]
---
0x7ca JUMPDEST
0x7cb JUMP
---
0x7ca: JUMPDEST 
0x7cb: JUMP 0x1a5
---
Entry stack: [V12, 0x1a5]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x7cc
[0x7cc:0x7d3]
---
Predecessors: [0x37d]
Successors: [0xa63]
---
0x7cc JUMPDEST
0x7cd PUSH2 0x7d4
0x7d0 PUSH2 0xa63
0x7d3 JUMP
---
0x7cc: JUMPDEST 
0x7cd: V654 = 0x7d4
0x7d0: V655 = 0xa63
0x7d3: JUMP 0xa63
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: [0x7d4]
Exit stack: [V12, 0x1ba, 0x7d4]

================================

Block 0x7d4
[0x7d4:0x80a]
---
Predecessors: [0xa63]
Successors: [0x80b]
---
0x7d4 JUMPDEST
0x7d5 PUSH1 0x40
0x7d7 DUP1
0x7d8 MLOAD
0x7d9 SWAP1
0x7da DUP2
0x7db ADD
0x7dc PUSH1 0x40
0x7de MSTORE
0x7df PUSH1 0x4
0x7e1 DUP2
0x7e2 MSTORE
0x7e3 PUSH32 0x5052535400000000000000000000000000000000000000000000000000000000
0x804 PUSH1 0x20
0x806 DUP3
0x807 ADD
0x808 MSTORE
0x809 SWAP1
0x80a POP
---
0x7d4: JUMPDEST 
0x7d5: V656 = 0x40
0x7d8: V657 = M[0x40]
0x7db: V658 = ADD V657 0x40
0x7dc: V659 = 0x40
0x7de: M[0x40] = V658
0x7df: V660 = 0x4
0x7e2: M[V657] = 0x4
0x7e3: V661 = 0x5052535400000000000000000000000000000000000000000000000000000000
0x804: V662 = 0x20
0x807: V663 = ADD V657 0x20
0x808: M[V663] = 0x5052535400000000000000000000000000000000000000000000000000000000
---
Entry stack: [V12, 0x1ba, V884]
Stack pops: 1
Stack additions: [V657]
Exit stack: [V12, 0x1ba, V657]

================================

Block 0x80b
[0x80b:0x80d]
---
Predecessors: [0x7d4]
Successors: [0x1ba]
---
0x80b JUMPDEST
0x80c SWAP1
0x80d JUMP
---
0x80b: JUMPDEST 
0x80d: JUMP 0x1ba
---
Entry stack: [V12, 0x1ba, V657]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V657]

================================

Block 0x80e
[0x80e:0x81c]
---
Predecessors: [0x408]
Successors: [0x81d, 0x821]
---
0x80e JUMPDEST
0x80f PUSH1 0x0
0x811 DUP1
0x812 DUP1
0x813 DUP1
0x814 PUSH1 0x44
0x816 CALLDATASIZE
0x817 LT
0x818 ISZERO
0x819 PUSH2 0x821
0x81c JUMPI
---
0x80e: JUMPDEST 
0x80f: V664 = 0x0
0x814: V665 = 0x44
0x816: V666 = CALLDATASIZE
0x817: V667 = LT V666 0x44
0x818: V668 = ISZERO V667
0x819: V669 = 0x821
0x81c: JUMPI 0x821 V668
---
Entry stack: [V12, 0x254, V368, V370]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x81d
[0x81d:0x820]
---
Predecessors: [0x80e]
Successors: []
---
0x81d PUSH1 0x0
0x81f DUP1
0x820 REVERT
---
0x81d: V670 = 0x0
0x820: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x821
[0x821:0x828]
---
Predecessors: [0x80e]
Successors: [0x829, 0x831]
---
0x821 JUMPDEST
0x822 DUP5
0x823 ISZERO
0x824 ISZERO
0x825 PUSH2 0x831
0x828 JUMPI
---
0x821: JUMPDEST 
0x823: V671 = ISZERO V370
0x824: V672 = ISZERO V671
0x825: V673 = 0x831
0x828: JUMPI 0x831 V672
---
Entry stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x829
[0x829:0x830]
---
Predecessors: [0x821]
Successors: [0x8e4]
---
0x829 PUSH1 0x0
0x82b SWAP4
0x82c POP
0x82d PUSH2 0x8e4
0x830 JUMP
---
0x829: V674 = 0x0
0x82d: V675 = 0x8e4
0x830: JUMP 0x8e4
---
Entry stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x831
[0x831:0x868]
---
Predecessors: [0x821]
Successors: [0x869, 0x86c]
---
0x831 JUMPDEST
0x832 POP
0x833 POP
0x834 POP
0x835 PUSH1 0x1
0x837 PUSH1 0xa0
0x839 PUSH1 0x2
0x83b EXP
0x83c SUB
0x83d CALLER
0x83e DUP2
0x83f AND
0x840 PUSH1 0x0
0x842 SWAP1
0x843 DUP2
0x844 MSTORE
0x845 PUSH1 0x1
0x847 PUSH1 0x20
0x849 MSTORE
0x84a PUSH1 0x40
0x84c DUP1
0x84d DUP3
0x84e SHA3
0x84f SLOAD
0x850 SWAP3
0x851 DUP7
0x852 AND
0x853 DUP3
0x854 MSTORE
0x855 SWAP1
0x856 SHA3
0x857 SLOAD
0x858 DUP4
0x859 DUP3
0x85a LT
0x85b DUP1
0x85c ISZERO
0x85d SWAP2
0x85e DUP1
0x85f DUP7
0x860 ADD
0x861 LT
0x862 SWAP1
0x863 DUP3
0x864 SWAP1
0x865 PUSH2 0x86c
0x868 JUMPI
---
0x831: JUMPDEST 
0x835: V676 = 0x1
0x837: V677 = 0xa0
0x839: V678 = 0x2
0x83b: V679 = EXP 0x2 0xa0
0x83c: V680 = SUB 0x10000000000000000000000000000000000000000 0x1
0x83d: V681 = CALLER
0x83f: V682 = AND 0xffffffffffffffffffffffffffffffffffffffff V681
0x840: V683 = 0x0
0x844: M[0x0] = V682
0x845: V684 = 0x1
0x847: V685 = 0x20
0x849: M[0x20] = 0x1
0x84a: V686 = 0x40
0x84e: V687 = SHA3 0x0 0x40
0x84f: V688 = S[V687]
0x852: V689 = AND V368 0xffffffffffffffffffffffffffffffffffffffff
0x854: M[0x0] = V689
0x856: V690 = SHA3 0x0 0x40
0x857: V691 = S[V690]
0x85a: V692 = LT V688 V370
0x85c: V693 = ISZERO V692
0x860: V694 = ADD V370 V691
0x861: V695 = LT V694 V691
0x865: V696 = 0x86c
0x868: JUMPI 0x86c V692
---
Entry stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V688, V693, V695, V693]
Exit stack: [V12, 0x254, V368, V370, 0x0, V688, V693, V695, V693]

================================

Block 0x869
[0x869:0x86b]
---
Predecessors: [0x831]
Successors: [0x86c]
---
0x869 POP
0x86a DUP1
0x86b ISZERO
---
0x86b: V697 = ISZERO V695
---
Entry stack: [V12, 0x254, V368, V370, 0x0, V688, V693, V695, V693]
Stack pops: 2
Stack additions: [S1, V697]
Exit stack: [V12, 0x254, V368, V370, 0x0, V688, V693, V695, V697]

================================

Block 0x86c
[0x86c:0x871]
---
Predecessors: [0x831, 0x869]
Successors: [0x872, 0x8df]
---
0x86c JUMPDEST
0x86d ISZERO
0x86e PUSH2 0x8df
0x871 JUMPI
---
0x86c: JUMPDEST 
0x86d: V698 = ISZERO S0
0x86e: V699 = 0x8df
0x871: JUMPI 0x8df V698
---
Entry stack: [V12, 0x254, V368, V370, 0x0, V688, V693, V695, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x254, V368, V370, 0x0, V688, V693, V695]

================================

Block 0x872
[0x872:0x8de]
---
Predecessors: [0x86c]
Successors: [0x8e4]
---
0x872 PUSH1 0x1
0x874 PUSH1 0xa0
0x876 PUSH1 0x2
0x878 EXP
0x879 SUB
0x87a CALLER
0x87b DUP2
0x87c AND
0x87d PUSH1 0x0
0x87f DUP2
0x880 DUP2
0x881 MSTORE
0x882 PUSH1 0x1
0x884 PUSH1 0x20
0x886 MSTORE
0x887 PUSH1 0x40
0x889 DUP1
0x88a DUP3
0x88b SHA3
0x88c DUP1
0x88d SLOAD
0x88e DUP11
0x88f SWAP1
0x890 SUB
0x891 SWAP1
0x892 SSTORE
0x893 SWAP3
0x894 DUP10
0x895 AND
0x896 DUP1
0x897 DUP3
0x898 MSTORE
0x899 SWAP1
0x89a DUP4
0x89b SWAP1
0x89c SHA3
0x89d DUP1
0x89e SLOAD
0x89f DUP10
0x8a0 ADD
0x8a1 SWAP1
0x8a2 SSTORE
0x8a3 SWAP2
0x8a4 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8c5 SWAP1
0x8c6 DUP9
0x8c7 SWAP1
0x8c8 MLOAD
0x8c9 SWAP1
0x8ca DUP2
0x8cb MSTORE
0x8cc PUSH1 0x20
0x8ce ADD
0x8cf PUSH1 0x40
0x8d1 MLOAD
0x8d2 DUP1
0x8d3 SWAP2
0x8d4 SUB
0x8d5 SWAP1
0x8d6 LOG3
0x8d7 PUSH1 0x1
0x8d9 SWAP4
0x8da POP
0x8db PUSH2 0x8e4
0x8de JUMP
---
0x872: V700 = 0x1
0x874: V701 = 0xa0
0x876: V702 = 0x2
0x878: V703 = EXP 0x2 0xa0
0x879: V704 = SUB 0x10000000000000000000000000000000000000000 0x1
0x87a: V705 = CALLER
0x87c: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff V705
0x87d: V707 = 0x0
0x881: M[0x0] = V706
0x882: V708 = 0x1
0x884: V709 = 0x20
0x886: M[0x20] = 0x1
0x887: V710 = 0x40
0x88b: V711 = SHA3 0x0 0x40
0x88d: V712 = S[V711]
0x890: V713 = SUB V712 V370
0x892: S[V711] = V713
0x895: V714 = AND V368 0xffffffffffffffffffffffffffffffffffffffff
0x898: M[0x0] = V714
0x89c: V715 = SHA3 0x0 0x40
0x89e: V716 = S[V715]
0x8a0: V717 = ADD V370 V716
0x8a2: S[V715] = V717
0x8a4: V718 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8c8: V719 = M[0x40]
0x8cb: M[V719] = V370
0x8cc: V720 = 0x20
0x8ce: V721 = ADD 0x20 V719
0x8cf: V722 = 0x40
0x8d1: V723 = M[0x40]
0x8d4: V724 = SUB V721 V723
0x8d6: LOG V723 V724 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V706 V714
0x8d7: V725 = 0x1
0x8db: V726 = 0x8e4
0x8de: JUMP 0x8e4
---
Entry stack: [V12, 0x254, V368, V370, 0x0, V688, V693, V695]
Stack pops: 6
Stack additions: [S5, S4, 0x1, S2, S1, S0]
Exit stack: [V12, 0x254, V368, V370, 0x1, V688, V693, V695]

================================

Block 0x8df
[0x8df:0x8e3]
---
Predecessors: [0x86c]
Successors: [0x8e4]
---
0x8df JUMPDEST
0x8e0 PUSH1 0x0
0x8e2 SWAP4
0x8e3 POP
---
0x8df: JUMPDEST 
0x8e0: V727 = 0x0
---
Entry stack: [V12, 0x254, V368, V370, 0x0, V688, V693, V695]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x254, V368, V370, 0x0, V688, V693, V695]

================================

Block 0x8e4
[0x8e4:0x8e4]
---
Predecessors: [0x829, 0x872, 0x8df]
Successors: [0x8e5]
---
0x8e4 JUMPDEST
---
0x8e4: JUMPDEST 
---
Entry stack: [V12, 0x254, V368, V370, {0x0, 0x1}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V368, V370, {0x0, 0x1}, S2, S1, S0]

================================

Block 0x8e5
[0x8e5:0x8ed]
---
Predecessors: [0x8e4]
Successors: [0x254]
---
0x8e5 JUMPDEST
0x8e6 POP
0x8e7 POP
0x8e8 POP
0x8e9 SWAP3
0x8ea SWAP2
0x8eb POP
0x8ec POP
0x8ed JUMP
---
0x8e5: JUMPDEST 
0x8ed: JUMP 0x254
---
Entry stack: [V12, 0x254, V368, V370, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x8ee
[0x8ee:0x901]
---
Predecessors: [0x43e]
Successors: [0x902]
---
0x8ee JUMPDEST
0x8ef PUSH1 0x3
0x8f1 SLOAD
0x8f2 PUSH1 0x4
0x8f4 SLOAD
0x8f5 PUSH1 0x0
0x8f7 SLOAD
0x8f8 PUSH1 0xa0
0x8fa PUSH1 0x2
0x8fc EXP
0x8fd SWAP1
0x8fe DIV
0x8ff PUSH1 0xff
0x901 AND
---
0x8ee: JUMPDEST 
0x8ef: V728 = 0x3
0x8f1: V729 = S[0x3]
0x8f2: V730 = 0x4
0x8f4: V731 = S[0x4]
0x8f5: V732 = 0x0
0x8f7: V733 = S[0x0]
0x8f8: V734 = 0xa0
0x8fa: V735 = 0x2
0x8fc: V736 = EXP 0x2 0xa0
0x8fe: V737 = DIV V733 0x10000000000000000000000000000000000000000
0x8ff: V738 = 0xff
0x901: V739 = AND 0xff V737
---
Entry stack: [V12, 0x446]
Stack pops: 0
Stack additions: [V729, V731, V739]
Exit stack: [V12, 0x446, V729, V731, V739]

================================

Block 0x902
[0x902:0x906]
---
Predecessors: [0x8ee]
Successors: [0x446]
---
0x902 JUMPDEST
0x903 SWAP1
0x904 SWAP2
0x905 SWAP3
0x906 JUMP
---
0x902: JUMPDEST 
0x906: JUMP 0x446
---
Entry stack: [V12, 0x446, V729, V731, V739]
Stack pops: 4
Stack additions: [S2, S1, S0]
Exit stack: [V12, V729, V731, V739]

================================

Block 0x907
[0x907:0x916]
---
Predecessors: [0x477]
Successors: [0x254]
---
0x907 JUMPDEST
0x908 PUSH1 0x0
0x90a SLOAD
0x90b PUSH1 0xa0
0x90d PUSH1 0x2
0x90f EXP
0x910 SWAP1
0x911 DIV
0x912 PUSH1 0xff
0x914 AND
0x915 DUP2
0x916 JUMP
---
0x907: JUMPDEST 
0x908: V740 = 0x0
0x90a: V741 = S[0x0]
0x90b: V742 = 0xa0
0x90d: V743 = 0x2
0x90f: V744 = EXP 0x2 0xa0
0x911: V745 = DIV V741 0x10000000000000000000000000000000000000000
0x912: V746 = 0xff
0x914: V747 = AND 0xff V745
0x916: JUMP 0x254
---
Entry stack: [V12, 0x254]
Stack pops: 1
Stack additions: [S0, V747]
Exit stack: [V12, 0x254, V747]

================================

Block 0x917
[0x917:0x93d]
---
Predecessors: [0x49e]
Successors: [0x93e]
---
0x917 JUMPDEST
0x918 PUSH1 0x1
0x91a PUSH1 0xa0
0x91c PUSH1 0x2
0x91e EXP
0x91f SUB
0x920 DUP1
0x921 DUP4
0x922 AND
0x923 PUSH1 0x0
0x925 SWAP1
0x926 DUP2
0x927 MSTORE
0x928 PUSH1 0x2
0x92a PUSH1 0x20
0x92c SWAP1
0x92d DUP2
0x92e MSTORE
0x92f PUSH1 0x40
0x931 DUP1
0x932 DUP4
0x933 SHA3
0x934 SWAP4
0x935 DUP6
0x936 AND
0x937 DUP4
0x938 MSTORE
0x939 SWAP3
0x93a SWAP1
0x93b MSTORE
0x93c SHA3
0x93d SLOAD
---
0x917: JUMPDEST 
0x918: V748 = 0x1
0x91a: V749 = 0xa0
0x91c: V750 = 0x2
0x91e: V751 = EXP 0x2 0xa0
0x91f: V752 = SUB 0x10000000000000000000000000000000000000000 0x1
0x922: V753 = AND V426 0xffffffffffffffffffffffffffffffffffffffff
0x923: V754 = 0x0
0x927: M[0x0] = V753
0x928: V755 = 0x2
0x92a: V756 = 0x20
0x92e: M[0x20] = 0x2
0x92f: V757 = 0x40
0x933: V758 = SHA3 0x0 0x40
0x936: V759 = AND V429 0xffffffffffffffffffffffffffffffffffffffff
0x938: M[0x0] = V759
0x93b: M[0x20] = V758
0x93c: V760 = SHA3 0x0 0x40
0x93d: V761 = S[V760]
---
Entry stack: [V12, 0x27b, V426, V429]
Stack pops: 2
Stack additions: [S1, S0, V761]
Exit stack: [V12, 0x27b, V426, V429, V761]

================================

Block 0x93e
[0x93e:0x943]
---
Predecessors: [0x917]
Successors: [0x27b]
---
0x93e JUMPDEST
0x93f SWAP3
0x940 SWAP2
0x941 POP
0x942 POP
0x943 JUMP
---
0x93e: JUMPDEST 
0x943: JUMP 0x27b
---
Entry stack: [V12, 0x27b, V426, V429, V761]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, V761]

================================

Block 0x944
[0x944:0x95f]
---
Predecessors: [0x4d5]
Successors: [0x960, 0x964]
---
0x944 JUMPDEST
0x945 PUSH1 0x0
0x947 DUP1
0x948 SLOAD
0x949 DUP2
0x94a SWAP1
0x94b DUP2
0x94c SWAP1
0x94d CALLER
0x94e PUSH1 0x1
0x950 PUSH1 0xa0
0x952 PUSH1 0x2
0x954 EXP
0x955 SUB
0x956 SWAP1
0x957 DUP2
0x958 AND
0x959 SWAP2
0x95a AND
0x95b EQ
0x95c PUSH2 0x964
0x95f JUMPI
---
0x944: JUMPDEST 
0x945: V762 = 0x0
0x948: V763 = S[0x0]
0x94d: V764 = CALLER
0x94e: V765 = 0x1
0x950: V766 = 0xa0
0x952: V767 = 0x2
0x954: V768 = EXP 0x2 0xa0
0x955: V769 = SUB 0x10000000000000000000000000000000000000000 0x1
0x958: V770 = AND 0xffffffffffffffffffffffffffffffffffffffff V764
0x95a: V771 = AND V763 0xffffffffffffffffffffffffffffffffffffffff
0x95b: V772 = EQ V771 V770
0x95c: V773 = 0x964
0x95f: JUMPI 0x964 V772
---
Entry stack: [V12, 0x254, V450]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x254, V450, 0x0, 0x0, 0x0]

================================

Block 0x960
[0x960:0x963]
---
Predecessors: [0x944]
Successors: []
---
0x960 PUSH1 0x0
0x962 DUP1
0x963 REVERT
---
0x960: V774 = 0x0
0x963: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V450, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V450, 0x0, 0x0, 0x0]

================================

Block 0x964
[0x964:0x9b9]
---
Predecessors: [0x944]
Successors: [0x9ba, 0x9be]
---
0x964 JUMPDEST
0x965 DUP4
0x966 SWAP2
0x967 POP
0x968 DUP2
0x969 PUSH1 0x1
0x96b PUSH1 0xa0
0x96d PUSH1 0x2
0x96f EXP
0x970 SUB
0x971 AND
0x972 PUSH4 0x70a08231
0x977 ADDRESS
0x978 PUSH1 0x0
0x97a PUSH1 0x40
0x97c MLOAD
0x97d PUSH1 0x20
0x97f ADD
0x980 MSTORE
0x981 PUSH1 0x40
0x983 MLOAD
0x984 PUSH1 0xe0
0x986 PUSH1 0x2
0x988 EXP
0x989 PUSH4 0xffffffff
0x98e DUP5
0x98f AND
0x990 MUL
0x991 DUP2
0x992 MSTORE
0x993 PUSH1 0x1
0x995 PUSH1 0xa0
0x997 PUSH1 0x2
0x999 EXP
0x99a SUB
0x99b SWAP1
0x99c SWAP2
0x99d AND
0x99e PUSH1 0x4
0x9a0 DUP3
0x9a1 ADD
0x9a2 MSTORE
0x9a3 PUSH1 0x24
0x9a5 ADD
0x9a6 PUSH1 0x20
0x9a8 PUSH1 0x40
0x9aa MLOAD
0x9ab DUP1
0x9ac DUP4
0x9ad SUB
0x9ae DUP2
0x9af PUSH1 0x0
0x9b1 DUP8
0x9b2 DUP1
0x9b3 EXTCODESIZE
0x9b4 ISZERO
0x9b5 ISZERO
0x9b6 PUSH2 0x9be
0x9b9 JUMPI
---
0x964: JUMPDEST 
0x969: V775 = 0x1
0x96b: V776 = 0xa0
0x96d: V777 = 0x2
0x96f: V778 = EXP 0x2 0xa0
0x970: V779 = SUB 0x10000000000000000000000000000000000000000 0x1
0x971: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x972: V781 = 0x70a08231
0x977: V782 = ADDRESS
0x978: V783 = 0x0
0x97a: V784 = 0x40
0x97c: V785 = M[0x40]
0x97d: V786 = 0x20
0x97f: V787 = ADD 0x20 V785
0x980: M[V787] = 0x0
0x981: V788 = 0x40
0x983: V789 = M[0x40]
0x984: V790 = 0xe0
0x986: V791 = 0x2
0x988: V792 = EXP 0x2 0xe0
0x989: V793 = 0xffffffff
0x98f: V794 = AND 0x70a08231 0xffffffff
0x990: V795 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x992: M[V789] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x993: V796 = 0x1
0x995: V797 = 0xa0
0x997: V798 = 0x2
0x999: V799 = EXP 0x2 0xa0
0x99a: V800 = SUB 0x10000000000000000000000000000000000000000 0x1
0x99d: V801 = AND V782 0xffffffffffffffffffffffffffffffffffffffff
0x99e: V802 = 0x4
0x9a1: V803 = ADD V789 0x4
0x9a2: M[V803] = V801
0x9a3: V804 = 0x24
0x9a5: V805 = ADD 0x24 V789
0x9a6: V806 = 0x20
0x9a8: V807 = 0x40
0x9aa: V808 = M[0x40]
0x9ad: V809 = SUB V805 V808
0x9af: V810 = 0x0
0x9b3: V811 = EXTCODESIZE V780
0x9b4: V812 = ISZERO V811
0x9b5: V813 = ISZERO V812
0x9b6: V814 = 0x9be
0x9b9: JUMPI 0x9be V813
---
Entry stack: [V12, 0x254, V450, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V780, 0x70a08231, V805, 0x20, V808, V809, V808, 0x0, V780]
Exit stack: [V12, 0x254, V450, 0x0, V450, 0x0, V780, 0x70a08231, V805, 0x20, V808, V809, V808, 0x0, V780]

================================

Block 0x9ba
[0x9ba:0x9bd]
---
Predecessors: [0x964]
Successors: []
---
0x9ba PUSH1 0x0
0x9bc DUP1
0x9bd REVERT
---
0x9ba: V815 = 0x0
0x9bd: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V450, 0x0, V450, 0x0, V780, 0x70a08231, V805, 0x20, V808, V809, V808, 0x0, V780]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V450, 0x0, V450, 0x0, V780, 0x70a08231, V805, 0x20, V808, V809, V808, 0x0, V780]

================================

Block 0x9be
[0x9be:0x9ca]
---
Predecessors: [0x964]
Successors: [0x9cb, 0x9cf]
---
0x9be JUMPDEST
0x9bf PUSH2 0x2c6
0x9c2 GAS
0x9c3 SUB
0x9c4 CALL
0x9c5 ISZERO
0x9c6 ISZERO
0x9c7 PUSH2 0x9cf
0x9ca JUMPI
---
0x9be: JUMPDEST 
0x9bf: V816 = 0x2c6
0x9c2: V817 = GAS
0x9c3: V818 = SUB V817 0x2c6
0x9c4: V819 = CALL V818 V780 0x0 V808 V809 V808 0x20
0x9c5: V820 = ISZERO V819
0x9c6: V821 = ISZERO V820
0x9c7: V822 = 0x9cf
0x9ca: JUMPI 0x9cf V821
---
Entry stack: [V12, 0x254, V450, 0x0, V450, 0x0, V780, 0x70a08231, V805, 0x20, V808, V809, V808, 0x0, V780]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x254, V450, 0x0, V450, 0x0, V780, 0x70a08231, V805]

================================

Block 0x9cb
[0x9cb:0x9ce]
---
Predecessors: [0x9be]
Successors: []
---
0x9cb PUSH1 0x0
0x9cd DUP1
0x9ce REVERT
---
0x9cb: V823 = 0x0
0x9ce: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V450, 0x0, V450, 0x0, V780, 0x70a08231, V805]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V450, 0x0, V450, 0x0, V780, 0x70a08231, V805]

================================

Block 0x9cf
[0x9cf:0xa3a]
---
Predecessors: [0x9be]
Successors: [0xa3b, 0xa3f]
---
0x9cf JUMPDEST
0x9d0 POP
0x9d1 POP
0x9d2 POP
0x9d3 PUSH1 0x40
0x9d5 MLOAD
0x9d6 DUP1
0x9d7 MLOAD
0x9d8 PUSH1 0x0
0x9da DUP1
0x9db SLOAD
0x9dc SWAP2
0x9dd SWAP4
0x9de POP
0x9df PUSH1 0x1
0x9e1 PUSH1 0xa0
0x9e3 PUSH1 0x2
0x9e5 EXP
0x9e6 SUB
0x9e7 DUP1
0x9e8 DUP7
0x9e9 AND
0x9ea SWAP4
0x9eb POP
0x9ec PUSH4 0xa9059cbb
0x9f1 SWAP3
0x9f2 AND
0x9f3 SWAP1
0x9f4 DUP5
0x9f5 SWAP1
0x9f6 PUSH1 0x40
0x9f8 MLOAD
0x9f9 PUSH1 0x20
0x9fb ADD
0x9fc MSTORE
0x9fd PUSH1 0x40
0x9ff MLOAD
0xa00 PUSH1 0xe0
0xa02 PUSH1 0x2
0xa04 EXP
0xa05 PUSH4 0xffffffff
0xa0a DUP6
0xa0b AND
0xa0c MUL
0xa0d DUP2
0xa0e MSTORE
0xa0f PUSH1 0x1
0xa11 PUSH1 0xa0
0xa13 PUSH1 0x2
0xa15 EXP
0xa16 SUB
0xa17 SWAP1
0xa18 SWAP3
0xa19 AND
0xa1a PUSH1 0x4
0xa1c DUP4
0xa1d ADD
0xa1e MSTORE
0xa1f PUSH1 0x24
0xa21 DUP3
0xa22 ADD
0xa23 MSTORE
0xa24 PUSH1 0x44
0xa26 ADD
0xa27 PUSH1 0x20
0xa29 PUSH1 0x40
0xa2b MLOAD
0xa2c DUP1
0xa2d DUP4
0xa2e SUB
0xa2f DUP2
0xa30 PUSH1 0x0
0xa32 DUP8
0xa33 DUP1
0xa34 EXTCODESIZE
0xa35 ISZERO
0xa36 ISZERO
0xa37 PUSH2 0xa3f
0xa3a JUMPI
---
0x9cf: JUMPDEST 
0x9d3: V824 = 0x40
0x9d5: V825 = M[0x40]
0x9d7: V826 = M[V825]
0x9d8: V827 = 0x0
0x9db: V828 = S[0x0]
0x9df: V829 = 0x1
0x9e1: V830 = 0xa0
0x9e3: V831 = 0x2
0x9e5: V832 = EXP 0x2 0xa0
0x9e6: V833 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9e9: V834 = AND V450 0xffffffffffffffffffffffffffffffffffffffff
0x9ec: V835 = 0xa9059cbb
0x9f2: V836 = AND V828 0xffffffffffffffffffffffffffffffffffffffff
0x9f6: V837 = 0x40
0x9f8: V838 = M[0x40]
0x9f9: V839 = 0x20
0x9fb: V840 = ADD 0x20 V838
0x9fc: M[V840] = 0x0
0x9fd: V841 = 0x40
0x9ff: V842 = M[0x40]
0xa00: V843 = 0xe0
0xa02: V844 = 0x2
0xa04: V845 = EXP 0x2 0xe0
0xa05: V846 = 0xffffffff
0xa0b: V847 = AND 0xa9059cbb 0xffffffff
0xa0c: V848 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xa0e: M[V842] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa0f: V849 = 0x1
0xa11: V850 = 0xa0
0xa13: V851 = 0x2
0xa15: V852 = EXP 0x2 0xa0
0xa16: V853 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa19: V854 = AND V836 0xffffffffffffffffffffffffffffffffffffffff
0xa1a: V855 = 0x4
0xa1d: V856 = ADD V842 0x4
0xa1e: M[V856] = V854
0xa1f: V857 = 0x24
0xa22: V858 = ADD V842 0x24
0xa23: M[V858] = V826
0xa24: V859 = 0x44
0xa26: V860 = ADD 0x44 V842
0xa27: V861 = 0x20
0xa29: V862 = 0x40
0xa2b: V863 = M[0x40]
0xa2e: V864 = SUB V860 V863
0xa30: V865 = 0x0
0xa34: V866 = EXTCODESIZE V834
0xa35: V867 = ISZERO V866
0xa36: V868 = ISZERO V867
0xa37: V869 = 0xa3f
0xa3a: JUMPI 0xa3f V868
---
Entry stack: [V12, 0x254, V450, 0x0, V450, 0x0, V780, 0x70a08231, V805]
Stack pops: 5
Stack additions: [S4, V826, V834, 0xa9059cbb, V860, 0x20, V863, V864, V863, 0x0, V834]
Exit stack: [V12, 0x254, V450, 0x0, V450, V826, V834, 0xa9059cbb, V860, 0x20, V863, V864, V863, 0x0, V834]

================================

Block 0xa3b
[0xa3b:0xa3e]
---
Predecessors: [0x9cf]
Successors: []
---
0xa3b PUSH1 0x0
0xa3d DUP1
0xa3e REVERT
---
0xa3b: V870 = 0x0
0xa3e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V450, 0x0, V450, V826, V834, 0xa9059cbb, V860, 0x20, V863, V864, V863, 0x0, V834]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V450, 0x0, V450, V826, V834, 0xa9059cbb, V860, 0x20, V863, V864, V863, 0x0, V834]

================================

Block 0xa3f
[0xa3f:0xa4b]
---
Predecessors: [0x9cf]
Successors: [0xa4c, 0xa50]
---
0xa3f JUMPDEST
0xa40 PUSH2 0x2c6
0xa43 GAS
0xa44 SUB
0xa45 CALL
0xa46 ISZERO
0xa47 ISZERO
0xa48 PUSH2 0xa50
0xa4b JUMPI
---
0xa3f: JUMPDEST 
0xa40: V871 = 0x2c6
0xa43: V872 = GAS
0xa44: V873 = SUB V872 0x2c6
0xa45: V874 = CALL V873 V834 0x0 V863 V864 V863 0x20
0xa46: V875 = ISZERO V874
0xa47: V876 = ISZERO V875
0xa48: V877 = 0xa50
0xa4b: JUMPI 0xa50 V876
---
Entry stack: [V12, 0x254, V450, 0x0, V450, V826, V834, 0xa9059cbb, V860, 0x20, V863, V864, V863, 0x0, V834]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x254, V450, 0x0, V450, V826, V834, 0xa9059cbb, V860]

================================

Block 0xa4c
[0xa4c:0xa4f]
---
Predecessors: [0xa3f]
Successors: []
---
0xa4c PUSH1 0x0
0xa4e DUP1
0xa4f REVERT
---
0xa4c: V878 = 0x0
0xa4f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V450, 0x0, V450, V826, V834, 0xa9059cbb, V860]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V450, 0x0, V450, V826, V834, 0xa9059cbb, V860]

================================

Block 0xa50
[0xa50:0xa5b]
---
Predecessors: [0xa3f]
Successors: [0xa5c]
---
0xa50 JUMPDEST
0xa51 POP
0xa52 POP
0xa53 POP
0xa54 PUSH1 0x40
0xa56 MLOAD
0xa57 DUP1
0xa58 MLOAD
0xa59 SWAP4
0xa5a POP
0xa5b POP
---
0xa50: JUMPDEST 
0xa54: V879 = 0x40
0xa56: V880 = M[0x40]
0xa58: V881 = M[V880]
---
Entry stack: [V12, 0x254, V450, 0x0, V450, V826, V834, 0xa9059cbb, V860]
Stack pops: 6
Stack additions: [V881, S4, S3]
Exit stack: [V12, 0x254, V450, V881, V450, V826]

================================

Block 0xa5c
[0xa5c:0xa62]
---
Predecessors: [0xa50]
Successors: [0x254]
---
0xa5c JUMPDEST
0xa5d POP
0xa5e POP
0xa5f SWAP2
0xa60 SWAP1
0xa61 POP
0xa62 JUMP
---
0xa5c: JUMPDEST 
0xa62: JUMP 0x254
---
Entry stack: [V12, 0x254, V450, V881, V450, V826]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V12, V881]

================================

Block 0xa63
[0xa63:0xa74]
---
Predecessors: [0x4fd, 0x7cc]
Successors: [0x505, 0x7d4]
---
0xa63 JUMPDEST
0xa64 PUSH1 0x20
0xa66 PUSH1 0x40
0xa68 MLOAD
0xa69 SWAP1
0xa6a DUP2
0xa6b ADD
0xa6c PUSH1 0x40
0xa6e MSTORE
0xa6f PUSH1 0x0
0xa71 DUP2
0xa72 MSTORE
0xa73 SWAP1
0xa74 JUMP
---
0xa63: JUMPDEST 
0xa64: V882 = 0x20
0xa66: V883 = 0x40
0xa68: V884 = M[0x40]
0xa6b: V885 = ADD V884 0x20
0xa6c: V886 = 0x40
0xa6e: M[0x40] = V885
0xa6f: V887 = 0x0
0xa72: M[V884] = 0x0
0xa74: JUMP {0x505, 0x7d4}
---
Entry stack: [V12, 0x1ba, {0x505, 0x7d4}]
Stack pops: 1
Stack additions: [V884]
Exit stack: [V12, 0x1ba, V884]

================================

Block 0xa75
[0xa75:0xaa0]
---
Predecessors: []
Successors: []
---
0xa75 STOP
0xa76 LOG1
0xa77 PUSH6 0x627a7a723058
0xa7e SHA3
0xa7f MISSING 0xc2
0xa80 EXTCODESIZE
0xa81 EXTCODEHASH
0xa82 SWAP9
0xa83 SWAP9
0xa84 MISSING 0xd3
0xa85 SWAP7
0xa86 MSTORE
0xa87 PUSH9 0x27793369565b952bbc
0xa91 MOD
0xa92 RETURNDATASIZE
0xa93 CALLDATALOAD
0xa94 DUP16
0xa95 DUP4
0xa96 PUSH9 0x18eafbfb410a6bb200
0xaa0 MISSING 0x29
---
0xa75: STOP 
0xa76: LOG S0 S1 S2
0xa77: V888 = 0x627a7a723058
0xa7e: V889 = SHA3 0x627a7a723058 S3
0xa7f: MISSING 0xc2
0xa80: V890 = EXTCODESIZE S0
0xa81: V891 = EXTCODEHASH V890
0xa84: MISSING 0xd3
0xa86: M[S7] = S1
0xa87: V892 = 0x27793369565b952bbc
0xa91: V893 = MOD 0x27793369565b952bbc S2
0xa92: V894 = RETURNDATASIZE
0xa93: V895 = CALLDATALOAD V894
0xa96: V896 = 0x18eafbfb410a6bb200
0xaa0: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V889, V891, S1, S2, S3, S4, S5, S6, S7, S8, S9, 0x18eafbfb410a6bb200, S3, S16, V895, V893, S3, S4, S5, S6, S0, S8, S9, S10, S11, S12, S13, S14, S15, S16]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x1a7
Exit block: 0x224
Body: 0x1a7, 0x1ae, 0x1b2, 0x1ba, 0x1de, 0x1e7, 0x1ef, 0x1f7, 0x20b, 0x224, 0x4fd, 0x505, 0x53c

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x232
Exit block: 0x254
Body: 0x232, 0x239, 0x23d, 0x254, 0x53f, 0x54b, 0x574, 0x57a, 0x581, 0x5e5

Function 2:
Public function signature: 0xdcf4b8f
Entry block: 0x268
Exit block: 0x27b
Body: 0x268, 0x26f, 0x273, 0x27b, 0x5eb

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x28d
Exit block: 0x27b
Body: 0x27b, 0x28d, 0x294, 0x298, 0x5f1

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x2b2
Exit block: 0x254
Body: 0x254, 0x2b2, 0x2b9, 0x2bd, 0x5f7, 0x608, 0x60c, 0x614, 0x61c, 0x679, 0x67b, 0x682, 0x685, 0x68b, 0x717, 0x71c, 0x71d

Function 5:
Public function signature: 0x313ce567
Entry block: 0x2ee
Exit block: 0x301
Body: 0x2ee, 0x2f5, 0x2f9, 0x301, 0x729, 0x72c

Function 6:
Public function signature: 0x64acdb77
Entry block: 0x317
Exit block: 0x1a5
Body: 0x1a5, 0x317, 0x31e, 0x322, 0x72f, 0x746, 0x74a, 0x769

Function 7:
Public function signature: 0x70a08231
Entry block: 0x32c
Exit block: 0x27b
Body: 0x27b, 0x32c, 0x333, 0x337, 0x76b, 0x785

Function 8:
Public function signature: 0x8f580996
Entry block: 0x35d
Exit block: 0x1a5
Body: 0x1a5, 0x35d, 0x364, 0x368, 0x78a, 0x7a1, 0x7a5, 0x7ca

Function 9:
Public function signature: 0x95d89b41
Entry block: 0x372
Exit block: 0x224
Body: 0x1ba, 0x1de, 0x1e7, 0x1ef, 0x1f7, 0x20b, 0x224, 0x372, 0x379, 0x37d, 0x7cc, 0x7d4, 0x80b

Function 10:
Public function signature: 0xa9059cbb
Entry block: 0x3fd
Exit block: 0x254
Body: 0x254, 0x3fd, 0x404, 0x408, 0x80e, 0x81d, 0x821, 0x829, 0x831, 0x869, 0x86c, 0x872, 0x8df, 0x8e4, 0x8e5

Function 11:
Public function signature: 0xc59d4847
Entry block: 0x433
Exit block: 0x446
Body: 0x433, 0x43a, 0x43e, 0x446, 0x8ee, 0x902

Function 12:
Public function signature: 0xda040c0f
Entry block: 0x46c
Exit block: 0x254
Body: 0x254, 0x46c, 0x473, 0x477, 0x907

Function 13:
Public function signature: 0xdd62ed3e
Entry block: 0x493
Exit block: 0x27b
Body: 0x27b, 0x493, 0x49a, 0x49e, 0x917, 0x93e

Function 14:
Public function signature: 0xe58fc54c
Entry block: 0x4ca
Exit block: 0x254
Body: 0x254, 0x4ca, 0x4d1, 0x4d5, 0x944, 0x960, 0x964, 0x9ba, 0x9be, 0x9cb, 0x9cf, 0xa3b, 0xa3f, 0xa4c, 0xa50, 0xa5c

Function 15:
Public fallback function
Entry block: 0xbf
Exit block: 0x1a5
Body: 0xbf, 0xc3, 0xd8, 0xdc, 0xe4, 0xe8, 0x118, 0x11c, 0x13c, 0x140, 0x1a2, 0x1a5

