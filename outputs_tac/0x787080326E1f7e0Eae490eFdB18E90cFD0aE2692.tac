Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x7b]
---
0x41 DUP1
0x42 PUSH4 0x8f32d59b
0x47 EQ
0x48 PUSH2 0x7b
0x4b JUMPI
---
0x42: V15 = 0x8f32d59b
0x47: V16 = EQ 0x8f32d59b V11
0x48: V17 = 0x7b
0x4b: JUMPI 0x7b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xaa]
---
0x4c DUP1
0x4d PUSH4 0xb4a99a4e
0x52 EQ
0x53 PUSH2 0xaa
0x56 JUMPI
---
0x4d: V18 = 0xb4a99a4e
0x52: V19 = EQ 0xb4a99a4e V11
0x53: V20 = 0xaa
0x56: JUMPI 0xaa V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x101]
---
0x57 DUP1
0x58 PUSH4 0xba0bba40
0x5d EQ
0x5e PUSH2 0x101
0x61 JUMPI
---
0x58: V21 = 0xba0bba40
0x5d: V22 = EQ 0xba0bba40 V11
0x5e: V23 = 0x101
0x61: JUMPI 0x101 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0xd]
Successors: [0x6c, 0x70]
---
0x64 JUMPDEST
0x65 CALLVALUE
0x66 DUP1
0x67 ISZERO
0x68 PUSH2 0x70
0x6b JUMPI
---
0x64: JUMPDEST 
0x65: V24 = CALLVALUE
0x67: V25 = ISZERO V24
0x68: V26 = 0x70
0x6b: JUMPI 0x70 V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6c
[0x6c:0x6f]
---
Predecessors: [0x64]
Successors: []
---
0x6c PUSH1 0x0
0x6e DUP1
0x6f REVERT
---
0x6c: V27 = 0x0
0x6f: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x70
[0x70:0x78]
---
Predecessors: [0x64]
Successors: [0x10b]
---
0x70 JUMPDEST
0x71 POP
0x72 PUSH2 0x79
0x75 PUSH2 0x10b
0x78 JUMP
---
0x70: JUMPDEST 
0x72: V28 = 0x79
0x75: V29 = 0x10b
0x78: JUMP 0x10b
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x79]
Exit stack: [V11, 0x79]

================================

Block 0x79
[0x79:0x7a]
---
Predecessors: [0x177]
Successors: []
---
0x79 JUMPDEST
0x7a STOP
---
0x79: JUMPDEST 
0x7a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7b
[0x7b:0x82]
---
Predecessors: [0x41]
Successors: [0x83, 0x87]
---
0x7b JUMPDEST
0x7c CALLVALUE
0x7d DUP1
0x7e ISZERO
0x7f PUSH2 0x87
0x82 JUMPI
---
0x7b: JUMPDEST 
0x7c: V30 = CALLVALUE
0x7e: V31 = ISZERO V30
0x7f: V32 = 0x87
0x82: JUMPI 0x87 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V11, V30]

================================

Block 0x83
[0x83:0x86]
---
Predecessors: [0x7b]
Successors: []
---
0x83 PUSH1 0x0
0x85 DUP1
0x86 REVERT
---
0x83: V33 = 0x0
0x86: REVERT 0x0 0x0
---
Entry stack: [V11, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V30]

================================

Block 0x87
[0x87:0x8f]
---
Predecessors: [0x7b]
Successors: [0x179]
---
0x87 JUMPDEST
0x88 POP
0x89 PUSH2 0x90
0x8c PUSH2 0x179
0x8f JUMP
---
0x87: JUMPDEST 
0x89: V34 = 0x90
0x8c: V35 = 0x179
0x8f: JUMP 0x179
---
Entry stack: [V11, V30]
Stack pops: 1
Stack additions: [0x90]
Exit stack: [V11, 0x90]

================================

Block 0x90
[0x90:0xa9]
---
Predecessors: [0x1de]
Successors: []
---
0x90 JUMPDEST
0x91 PUSH1 0x40
0x93 MLOAD
0x94 DUP1
0x95 DUP3
0x96 ISZERO
0x97 ISZERO
0x98 ISZERO
0x99 ISZERO
0x9a DUP2
0x9b MSTORE
0x9c PUSH1 0x20
0x9e ADD
0x9f SWAP2
0xa0 POP
0xa1 POP
0xa2 PUSH1 0x40
0xa4 MLOAD
0xa5 DUP1
0xa6 SWAP2
0xa7 SUB
0xa8 SWAP1
0xa9 RETURN
---
0x90: JUMPDEST 
0x91: V36 = 0x40
0x93: V37 = M[0x40]
0x96: V38 = ISZERO {0x0, 0x1}
0x97: V39 = ISZERO V38
0x98: V40 = ISZERO V39
0x99: V41 = ISZERO V40
0x9b: M[V37] = V41
0x9c: V42 = 0x20
0x9e: V43 = ADD 0x20 V37
0xa2: V44 = 0x40
0xa4: V45 = M[0x40]
0xa7: V46 = SUB V43 V45
0xa9: RETURN V45 V46
---
Entry stack: [V11, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0xaa
[0xaa:0xb1]
---
Predecessors: [0x4c]
Successors: [0xb2, 0xb6]
---
0xaa JUMPDEST
0xab CALLVALUE
0xac DUP1
0xad ISZERO
0xae PUSH2 0xb6
0xb1 JUMPI
---
0xaa: JUMPDEST 
0xab: V47 = CALLVALUE
0xad: V48 = ISZERO V47
0xae: V49 = 0xb6
0xb1: JUMPI 0xb6 V48
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V47]
Exit stack: [V11, V47]

================================

Block 0xb2
[0xb2:0xb5]
---
Predecessors: [0xaa]
Successors: []
---
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 REVERT
---
0xb2: V50 = 0x0
0xb5: REVERT 0x0 0x0
---
Entry stack: [V11, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V47]

================================

Block 0xb6
[0xb6:0xbe]
---
Predecessors: [0xaa]
Successors: [0x1e1]
---
0xb6 JUMPDEST
0xb7 POP
0xb8 PUSH2 0xbf
0xbb PUSH2 0x1e1
0xbe JUMP
---
0xb6: JUMPDEST 
0xb8: V51 = 0xbf
0xbb: V52 = 0x1e1
0xbe: JUMP 0x1e1
---
Entry stack: [V11, V47]
Stack pops: 1
Stack additions: [0xbf]
Exit stack: [V11, 0xbf]

================================

Block 0xbf
[0xbf:0x100]
---
Predecessors: [0x1e1]
Successors: []
---
0xbf JUMPDEST
0xc0 PUSH1 0x40
0xc2 MLOAD
0xc3 DUP1
0xc4 DUP3
0xc5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xda AND
0xdb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf0 AND
0xf1 DUP2
0xf2 MSTORE
0xf3 PUSH1 0x20
0xf5 ADD
0xf6 SWAP2
0xf7 POP
0xf8 POP
0xf9 PUSH1 0x40
0xfb MLOAD
0xfc DUP1
0xfd SWAP2
0xfe SUB
0xff SWAP1
0x100 RETURN
---
0xbf: JUMPDEST 
0xc0: V53 = 0x40
0xc2: V54 = M[0x40]
0xc5: V55 = 0xffffffffffffffffffffffffffffffffffffffff
0xda: V56 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0xdb: V57 = 0xffffffffffffffffffffffffffffffffffffffff
0xf0: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V56
0xf2: M[V54] = V58
0xf3: V59 = 0x20
0xf5: V60 = ADD 0x20 V54
0xf9: V61 = 0x40
0xfb: V62 = M[0x40]
0xfe: V63 = SUB V60 V62
0x100: RETURN V62 V63
---
Entry stack: [V11, 0xbf, V120]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xbf]

================================

Block 0x101
[0x101:0x108]
---
Predecessors: [0x57]
Successors: [0x207]
---
0x101 JUMPDEST
0x102 PUSH2 0x109
0x105 PUSH2 0x207
0x108 JUMP
---
0x101: JUMPDEST 
0x102: V64 = 0x109
0x105: V65 = 0x207
0x108: JUMP 0x207
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x109]
Exit stack: [V11, 0x109]

================================

Block 0x109
[0x109:0x10a]
---
Predecessors: [0x25a]
Successors: []
---
0x109 JUMPDEST
0x10a STOP
---
0x109: JUMPDEST 
0x10a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10b
[0x10b:0x112]
---
Predecessors: [0x70]
Successors: [0x179]
---
0x10b JUMPDEST
0x10c PUSH2 0x113
0x10f PUSH2 0x179
0x112 JUMP
---
0x10b: JUMPDEST 
0x10c: V66 = 0x113
0x10f: V67 = 0x179
0x112: JUMP 0x179
---
Entry stack: [V11, 0x79]
Stack pops: 0
Stack additions: [0x113]
Exit stack: [V11, 0x79, 0x113]

================================

Block 0x113
[0x113:0x118]
---
Predecessors: [0x1de]
Successors: [0x119, 0x177]
---
0x113 JUMPDEST
0x114 ISZERO
0x115 PUSH2 0x177
0x118 JUMPI
---
0x113: JUMPDEST 
0x114: V68 = ISZERO {0x0, 0x1}
0x115: V69 = 0x177
0x118: JUMPI 0x177 V68
---
Entry stack: [V11, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x119
[0x119:0x16b]
---
Predecessors: [0x113]
Successors: [0x16c, 0x175]
---
0x119 CALLER
0x11a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12f AND
0x130 PUSH2 0x8fc
0x133 ADDRESS
0x134 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x149 AND
0x14a BALANCE
0x14b SWAP1
0x14c DUP2
0x14d ISZERO
0x14e MUL
0x14f SWAP1
0x150 PUSH1 0x40
0x152 MLOAD
0x153 PUSH1 0x0
0x155 PUSH1 0x40
0x157 MLOAD
0x158 DUP1
0x159 DUP4
0x15a SUB
0x15b DUP2
0x15c DUP6
0x15d DUP9
0x15e DUP9
0x15f CALL
0x160 SWAP4
0x161 POP
0x162 POP
0x163 POP
0x164 POP
0x165 ISZERO
0x166 DUP1
0x167 ISZERO
0x168 PUSH2 0x175
0x16b JUMPI
---
0x119: V70 = CALLER
0x11a: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x12f: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x130: V73 = 0x8fc
0x133: V74 = ADDRESS
0x134: V75 = 0xffffffffffffffffffffffffffffffffffffffff
0x149: V76 = AND 0xffffffffffffffffffffffffffffffffffffffff V74
0x14a: V77 = BALANCE V76
0x14d: V78 = ISZERO V77
0x14e: V79 = MUL V78 0x8fc
0x150: V80 = 0x40
0x152: V81 = M[0x40]
0x153: V82 = 0x0
0x155: V83 = 0x40
0x157: V84 = M[0x40]
0x15a: V85 = SUB V81 V84
0x15f: V86 = CALL V79 V72 V77 V84 V85 V84 0x0
0x165: V87 = ISZERO V86
0x167: V88 = ISZERO V87
0x168: V89 = 0x175
0x16b: JUMPI 0x175 V88
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: [V87]
Exit stack: [V11, S0, V87]

================================

Block 0x16c
[0x16c:0x174]
---
Predecessors: [0x119]
Successors: []
---
0x16c RETURNDATASIZE
0x16d PUSH1 0x0
0x16f DUP1
0x170 RETURNDATACOPY
0x171 RETURNDATASIZE
0x172 PUSH1 0x0
0x174 REVERT
---
0x16c: V90 = RETURNDATASIZE
0x16d: V91 = 0x0
0x170: RETURNDATACOPY 0x0 0x0 V90
0x171: V92 = RETURNDATASIZE
0x172: V93 = 0x0
0x174: REVERT 0x0 V92
---
Entry stack: [V11, S1, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, V87]

================================

Block 0x175
[0x175:0x176]
---
Predecessors: [0x119]
Successors: [0x177]
---
0x175 JUMPDEST
0x176 POP
---
0x175: JUMPDEST 
---
Entry stack: [V11, S1, V87]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x177
[0x177:0x178]
---
Predecessors: [0x113, 0x175]
Successors: [0x79]
---
0x177 JUMPDEST
0x178 JUMP
---
0x177: JUMPDEST 
0x178: JUMP S0
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x179
[0x179:0x1d0]
---
Predecessors: [0x87, 0x10b]
Successors: [0x1d1, 0x1d9]
---
0x179 JUMPDEST
0x17a PUSH1 0x0
0x17c CALLER
0x17d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x192 AND
0x193 PUSH1 0x0
0x195 DUP1
0x196 SWAP1
0x197 SLOAD
0x198 SWAP1
0x199 PUSH2 0x100
0x19c EXP
0x19d SWAP1
0x19e DIV
0x19f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b4 AND
0x1b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ca AND
0x1cb EQ
0x1cc ISZERO
0x1cd PUSH2 0x1d9
0x1d0 JUMPI
---
0x179: JUMPDEST 
0x17a: V94 = 0x0
0x17c: V95 = CALLER
0x17d: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x192: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x193: V98 = 0x0
0x197: V99 = S[0x0]
0x199: V100 = 0x100
0x19c: V101 = EXP 0x100 0x0
0x19e: V102 = DIV V99 0x1
0x19f: V103 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V104 = AND 0xffffffffffffffffffffffffffffffffffffffff V102
0x1b5: V105 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ca: V106 = AND 0xffffffffffffffffffffffffffffffffffffffff V104
0x1cb: V107 = EQ V106 V97
0x1cc: V108 = ISZERO V107
0x1cd: V109 = 0x1d9
0x1d0: JUMPI 0x1d9 V108
---
Entry stack: [V11, S1, {0x90, 0x113}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, S1, {0x90, 0x113}, 0x0]

================================

Block 0x1d1
[0x1d1:0x1d8]
---
Predecessors: [0x179]
Successors: [0x1de]
---
0x1d1 PUSH1 0x1
0x1d3 SWAP1
0x1d4 POP
0x1d5 PUSH2 0x1de
0x1d8 JUMP
---
0x1d1: V110 = 0x1
0x1d5: V111 = 0x1de
0x1d8: JUMP 0x1de
---
Entry stack: [V11, S2, {0x90, 0x113}, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V11, S2, {0x90, 0x113}, 0x1]

================================

Block 0x1d9
[0x1d9:0x1dd]
---
Predecessors: [0x179]
Successors: [0x1de]
---
0x1d9 JUMPDEST
0x1da PUSH1 0x0
0x1dc SWAP1
0x1dd POP
---
0x1d9: JUMPDEST 
0x1da: V112 = 0x0
---
Entry stack: [V11, S2, {0x90, 0x113}, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, S2, {0x90, 0x113}, 0x0]

================================

Block 0x1de
[0x1de:0x1e0]
---
Predecessors: [0x1d1, 0x1d9]
Successors: [0x90, 0x113]
---
0x1de JUMPDEST
0x1df SWAP1
0x1e0 JUMP
---
0x1de: JUMPDEST 
0x1e0: JUMP {0x90, 0x113}
---
Entry stack: [V11, S2, {0x90, 0x113}, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, S2, {0x0, 0x1}]

================================

Block 0x1e1
[0x1e1:0x206]
---
Predecessors: [0xb6]
Successors: [0xbf]
---
0x1e1 JUMPDEST
0x1e2 PUSH1 0x1
0x1e4 PUSH1 0x0
0x1e6 SWAP1
0x1e7 SLOAD
0x1e8 SWAP1
0x1e9 PUSH2 0x100
0x1ec EXP
0x1ed SWAP1
0x1ee DIV
0x1ef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x204 AND
0x205 DUP2
0x206 JUMP
---
0x1e1: JUMPDEST 
0x1e2: V113 = 0x1
0x1e4: V114 = 0x0
0x1e7: V115 = S[0x1]
0x1e9: V116 = 0x100
0x1ec: V117 = EXP 0x100 0x0
0x1ee: V118 = DIV V115 0x1
0x1ef: V119 = 0xffffffffffffffffffffffffffffffffffffffff
0x204: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V118
0x206: JUMP 0xbf
---
Entry stack: [V11, 0xbf]
Stack pops: 1
Stack additions: [S0, V120]
Exit stack: [V11, 0xbf, V120]

================================

Block 0x207
[0x207:0x218]
---
Predecessors: [0x101]
Successors: [0x219, 0x25a]
---
0x207 JUMPDEST
0x208 PUSH8 0x6f05b59d3b20000
0x211 CALLVALUE
0x212 LT
0x213 ISZERO
0x214 ISZERO
0x215 PUSH2 0x25a
0x218 JUMPI
---
0x207: JUMPDEST 
0x208: V121 = 0x6f05b59d3b20000
0x211: V122 = CALLVALUE
0x212: V123 = LT V122 0x6f05b59d3b20000
0x213: V124 = ISZERO V123
0x214: V125 = ISZERO V124
0x215: V126 = 0x25a
0x218: JUMPI 0x25a V125
---
Entry stack: [V11, 0x109]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x109]

================================

Block 0x219
[0x219:0x259]
---
Predecessors: [0x207]
Successors: [0x25a]
---
0x219 CALLER
0x21a PUSH1 0x1
0x21c PUSH1 0x0
0x21e PUSH2 0x100
0x221 EXP
0x222 DUP2
0x223 SLOAD
0x224 DUP2
0x225 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23a MUL
0x23b NOT
0x23c AND
0x23d SWAP1
0x23e DUP4
0x23f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x254 AND
0x255 MUL
0x256 OR
0x257 SWAP1
0x258 SSTORE
0x259 POP
---
0x219: V127 = CALLER
0x21a: V128 = 0x1
0x21c: V129 = 0x0
0x21e: V130 = 0x100
0x221: V131 = EXP 0x100 0x0
0x223: V132 = S[0x1]
0x225: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x23a: V134 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x23b: V135 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x23c: V136 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V132
0x23f: V137 = 0xffffffffffffffffffffffffffffffffffffffff
0x254: V138 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x255: V139 = MUL V138 0x1
0x256: V140 = OR V139 V136
0x258: S[0x1] = V140
---
Entry stack: [V11, 0x109]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x109]

================================

Block 0x25a
[0x25a:0x25b]
---
Predecessors: [0x207, 0x219]
Successors: [0x109]
---
0x25a JUMPDEST
0x25b JUMP
---
0x25a: JUMPDEST 
0x25b: JUMP 0x109
---
Entry stack: [V11, 0x109]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x25c
[0x25c:0x287]
---
Predecessors: []
Successors: []
---
0x25c STOP
0x25d LOG1
0x25e PUSH6 0x627a7a723058
0x265 SHA3
0x266 MISSING 0x48
0x267 SWAP1
0x268 BYTE
0x269 MISSING 0x2a
0x26a SWAP2
0x26b PUSH27 0xbc8f8f086acec30ef0a48da55019542c5a50ff096d8f6b1941f800
0x287 MISSING 0x29
---
0x25c: STOP 
0x25d: LOG S0 S1 S2
0x25e: V141 = 0x627a7a723058
0x265: V142 = SHA3 0x627a7a723058 S3
0x266: MISSING 0x48
0x268: V143 = BYTE S1 S0
0x269: MISSING 0x2a
0x26b: V144 = 0xbc8f8f086acec30ef0a48da55019542c5a50ff096d8f6b1941f800
0x287: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V142, V143, 0xbc8f8f086acec30ef0a48da55019542c5a50ff096d8f6b1941f800, S2, S1, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x64
Exit block: 0x16c
Body: 0x64, 0x6c, 0x70, 0x79, 0x10b, 0x113, 0x119, 0x16c, 0x175, 0x177

Function 1:
Public function signature: 0x8f32d59b
Entry block: 0x7b
Exit block: 0x90
Body: 0x7b, 0x83, 0x87, 0x90

Function 2:
Public function signature: 0xb4a99a4e
Entry block: 0xaa
Exit block: 0xbf
Body: 0xaa, 0xb2, 0xb6, 0xbf, 0x1e1

Function 3:
Public function signature: 0xba0bba40
Entry block: 0x101
Exit block: 0x109
Body: 0x101, 0x109, 0x207, 0x219, 0x25a

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

Function 5:
Private function
Entry block: 0x179
Exit block: 0x1de
Body: 0x179, 0x1d1, 0x1d9, 0x1de

