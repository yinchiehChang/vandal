Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x83]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x83
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x83
0xc: JUMPI 0x83 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x85]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x25f885d0
0x3c EQ
0x3d PUSH2 0x85
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x25f885d0
0x3c: V13 = EQ 0x25f885d0 V11
0x3d: V14 = 0x85
0x40: JUMPI 0x85 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xb3]
---
0x41 DUP1
0x42 PUSH4 0x3f3c51c3
0x47 EQ
0x48 PUSH2 0xb3
0x4b JUMPI
---
0x42: V15 = 0x3f3c51c3
0x47: V16 = EQ 0x3f3c51c3 V11
0x48: V17 = 0xb3
0x4b: JUMPI 0xb3 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xf6]
---
0x4c DUP1
0x4d PUSH4 0x42fc63be
0x52 EQ
0x53 PUSH2 0xf6
0x56 JUMPI
---
0x4d: V18 = 0x42fc63be
0x52: V19 = EQ 0x42fc63be V11
0x53: V20 = 0xf6
0x56: JUMPI 0xf6 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x17b]
---
0x57 DUP1
0x58 PUSH4 0x65d61ad6
0x5d EQ
0x5e PUSH2 0x17b
0x61 JUMPI
---
0x58: V21 = 0x65d61ad6
0x5d: V22 = EQ 0x65d61ad6 V11
0x5e: V23 = 0x17b
0x61: JUMPI 0x17b V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x1ac]
---
0x62 DUP1
0x63 PUSH4 0xa1e564b1
0x68 EQ
0x69 PUSH2 0x1ac
0x6c JUMPI
---
0x63: V24 = 0xa1e564b1
0x68: V25 = EQ 0xa1e564b1 V11
0x69: V26 = 0x1ac
0x6c: JUMPI 0x1ac V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x1b6]
---
0x6d DUP1
0x6e PUSH4 0xa8276d97
0x73 EQ
0x74 PUSH2 0x1b6
0x77 JUMPI
---
0x6e: V27 = 0xa8276d97
0x73: V28 = EQ 0xa8276d97 V11
0x74: V29 = 0x1b6
0x77: JUMPI 0x1b6 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x1e3]
---
0x78 DUP1
0x79 PUSH4 0xdf9933e5
0x7e EQ
0x7f PUSH2 0x1e3
0x82 JUMPI
---
0x79: V30 = 0xdf9933e5
0x7e: V31 = EQ 0xdf9933e5 V11
0x7f: V32 = 0x1e3
0x82: JUMPI 0x1e3 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x84]
---
Predecessors: [0x0, 0x78]
Successors: []
---
0x83 JUMPDEST
0x84 STOP
---
0x83: JUMPDEST 
0x84: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0xb0]
---
Predecessors: [0xd]
Successors: [0x207]
---
0x85 JUMPDEST
0x86 PUSH2 0xb1
0x89 PUSH1 0x4
0x8b DUP1
0x8c CALLDATASIZE
0x8d SUB
0x8e DUP2
0x8f ADD
0x90 SWAP1
0x91 DUP1
0x92 DUP1
0x93 CALLDATALOAD
0x94 SWAP1
0x95 PUSH1 0x20
0x97 ADD
0x98 SWAP1
0x99 DUP3
0x9a ADD
0x9b DUP1
0x9c CALLDATALOAD
0x9d SWAP1
0x9e PUSH1 0x20
0xa0 ADD
0xa1 SWAP2
0xa2 SWAP1
0xa3 SWAP2
0xa4 SWAP3
0xa5 SWAP4
0xa6 SWAP2
0xa7 SWAP3
0xa8 SWAP4
0xa9 SWAP1
0xaa POP
0xab POP
0xac POP
0xad PUSH2 0x207
0xb0 JUMP
---
0x85: JUMPDEST 
0x86: V33 = 0xb1
0x89: V34 = 0x4
0x8c: V35 = CALLDATASIZE
0x8d: V36 = SUB V35 0x4
0x8f: V37 = ADD 0x4 V36
0x93: V38 = CALLDATALOAD 0x4
0x95: V39 = 0x20
0x97: V40 = ADD 0x20 0x4
0x9a: V41 = ADD 0x4 V38
0x9c: V42 = CALLDATALOAD V41
0x9e: V43 = 0x20
0xa0: V44 = ADD 0x20 V41
0xad: V45 = 0x207
0xb0: JUMP 0x207
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb1, V44, V42]
Exit stack: [V11, 0xb1, V44, V42]

================================

Block 0xb1
[0xb1:0xb2]
---
Predecessors: [0x2a1]
Successors: []
---
0xb1 JUMPDEST
0xb2 STOP
---
0xb1: JUMPDEST 
0xb2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb3
[0xb3:0xba]
---
Predecessors: [0x41]
Successors: [0xbb, 0xbf]
---
0xb3 JUMPDEST
0xb4 CALLVALUE
0xb5 DUP1
0xb6 ISZERO
0xb7 PUSH2 0xbf
0xba JUMPI
---
0xb3: JUMPDEST 
0xb4: V46 = CALLVALUE
0xb6: V47 = ISZERO V46
0xb7: V48 = 0xbf
0xba: JUMPI 0xbf V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V46]
Exit stack: [V11, V46]

================================

Block 0xbb
[0xbb:0xbe]
---
Predecessors: [0xb3]
Successors: []
---
0xbb PUSH1 0x0
0xbd DUP1
0xbe REVERT
---
0xbb: V49 = 0x0
0xbe: REVERT 0x0 0x0
---
Entry stack: [V11, V46]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V46]

================================

Block 0xbf
[0xbf:0xf3]
---
Predecessors: [0xb3]
Successors: [0x2a5]
---
0xbf JUMPDEST
0xc0 POP
0xc1 PUSH2 0xf4
0xc4 PUSH1 0x4
0xc6 DUP1
0xc7 CALLDATASIZE
0xc8 SUB
0xc9 DUP2
0xca ADD
0xcb SWAP1
0xcc DUP1
0xcd DUP1
0xce CALLDATALOAD
0xcf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe4 AND
0xe5 SWAP1
0xe6 PUSH1 0x20
0xe8 ADD
0xe9 SWAP1
0xea SWAP3
0xeb SWAP2
0xec SWAP1
0xed POP
0xee POP
0xef POP
0xf0 PUSH2 0x2a5
0xf3 JUMP
---
0xbf: JUMPDEST 
0xc1: V50 = 0xf4
0xc4: V51 = 0x4
0xc7: V52 = CALLDATASIZE
0xc8: V53 = SUB V52 0x4
0xca: V54 = ADD 0x4 V53
0xce: V55 = CALLDATALOAD 0x4
0xcf: V56 = 0xffffffffffffffffffffffffffffffffffffffff
0xe4: V57 = AND 0xffffffffffffffffffffffffffffffffffffffff V55
0xe6: V58 = 0x20
0xe8: V59 = ADD 0x20 0x4
0xf0: V60 = 0x2a5
0xf3: JUMP 0x2a5
---
Entry stack: [V11, V46]
Stack pops: 1
Stack additions: [0xf4, V57]
Exit stack: [V11, 0xf4, V57]

================================

Block 0xf4
[0xf4:0xf5]
---
Predecessors: [0x33d]
Successors: []
---
0xf4 JUMPDEST
0xf5 STOP
---
0xf4: JUMPDEST 
0xf5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf6
[0xf6:0xfd]
---
Predecessors: [0x4c]
Successors: [0xfe, 0x102]
---
0xf6 JUMPDEST
0xf7 CALLVALUE
0xf8 DUP1
0xf9 ISZERO
0xfa PUSH2 0x102
0xfd JUMPI
---
0xf6: JUMPDEST 
0xf7: V61 = CALLVALUE
0xf9: V62 = ISZERO V61
0xfa: V63 = 0x102
0xfd: JUMPI 0x102 V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V61]
Exit stack: [V11, V61]

================================

Block 0xfe
[0xfe:0x101]
---
Predecessors: [0xf6]
Successors: []
---
0xfe PUSH1 0x0
0x100 DUP1
0x101 REVERT
---
0xfe: V64 = 0x0
0x101: REVERT 0x0 0x0
---
Entry stack: [V11, V61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V61]

================================

Block 0x102
[0x102:0x15c]
---
Predecessors: [0xf6]
Successors: [0x340]
---
0x102 JUMPDEST
0x103 POP
0x104 PUSH2 0x15d
0x107 PUSH1 0x4
0x109 DUP1
0x10a CALLDATASIZE
0x10b SUB
0x10c DUP2
0x10d ADD
0x10e SWAP1
0x10f DUP1
0x110 DUP1
0x111 CALLDATALOAD
0x112 SWAP1
0x113 PUSH1 0x20
0x115 ADD
0x116 SWAP1
0x117 DUP3
0x118 ADD
0x119 DUP1
0x11a CALLDATALOAD
0x11b SWAP1
0x11c PUSH1 0x20
0x11e ADD
0x11f SWAP1
0x120 DUP1
0x121 DUP1
0x122 PUSH1 0x1f
0x124 ADD
0x125 PUSH1 0x20
0x127 DUP1
0x128 SWAP2
0x129 DIV
0x12a MUL
0x12b PUSH1 0x20
0x12d ADD
0x12e PUSH1 0x40
0x130 MLOAD
0x131 SWAP1
0x132 DUP2
0x133 ADD
0x134 PUSH1 0x40
0x136 MSTORE
0x137 DUP1
0x138 SWAP4
0x139 SWAP3
0x13a SWAP2
0x13b SWAP1
0x13c DUP2
0x13d DUP2
0x13e MSTORE
0x13f PUSH1 0x20
0x141 ADD
0x142 DUP4
0x143 DUP4
0x144 DUP1
0x145 DUP3
0x146 DUP5
0x147 CALLDATACOPY
0x148 DUP3
0x149 ADD
0x14a SWAP2
0x14b POP
0x14c POP
0x14d POP
0x14e POP
0x14f POP
0x150 POP
0x151 SWAP2
0x152 SWAP3
0x153 SWAP2
0x154 SWAP3
0x155 SWAP1
0x156 POP
0x157 POP
0x158 POP
0x159 PUSH2 0x340
0x15c JUMP
---
0x102: JUMPDEST 
0x104: V65 = 0x15d
0x107: V66 = 0x4
0x10a: V67 = CALLDATASIZE
0x10b: V68 = SUB V67 0x4
0x10d: V69 = ADD 0x4 V68
0x111: V70 = CALLDATALOAD 0x4
0x113: V71 = 0x20
0x115: V72 = ADD 0x20 0x4
0x118: V73 = ADD 0x4 V70
0x11a: V74 = CALLDATALOAD V73
0x11c: V75 = 0x20
0x11e: V76 = ADD 0x20 V73
0x122: V77 = 0x1f
0x124: V78 = ADD 0x1f V74
0x125: V79 = 0x20
0x129: V80 = DIV V78 0x20
0x12a: V81 = MUL V80 0x20
0x12b: V82 = 0x20
0x12d: V83 = ADD 0x20 V81
0x12e: V84 = 0x40
0x130: V85 = M[0x40]
0x133: V86 = ADD V85 V83
0x134: V87 = 0x40
0x136: M[0x40] = V86
0x13e: M[V85] = V74
0x13f: V88 = 0x20
0x141: V89 = ADD 0x20 V85
0x147: CALLDATACOPY V89 V76 V74
0x149: V90 = ADD V89 V74
0x159: V91 = 0x340
0x15c: JUMP 0x340
---
Entry stack: [V11, V61]
Stack pops: 1
Stack additions: [0x15d, V85]
Exit stack: [V11, 0x15d, V85]

================================

Block 0x15d
[0x15d:0x17a]
---
Predecessors: [0x378]
Successors: []
---
0x15d JUMPDEST
0x15e PUSH1 0x40
0x160 MLOAD
0x161 DUP1
0x162 DUP3
0x163 PUSH1 0x0
0x165 NOT
0x166 AND
0x167 PUSH1 0x0
0x169 NOT
0x16a AND
0x16b DUP2
0x16c MSTORE
0x16d PUSH1 0x20
0x16f ADD
0x170 SWAP2
0x171 POP
0x172 POP
0x173 PUSH1 0x40
0x175 MLOAD
0x176 DUP1
0x177 SWAP2
0x178 SUB
0x179 SWAP1
0x17a RETURN
---
0x15d: JUMPDEST 
0x15e: V92 = 0x40
0x160: V93 = M[0x40]
0x163: V94 = 0x0
0x165: V95 = NOT 0x0
0x166: V96 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V260
0x167: V97 = 0x0
0x169: V98 = NOT 0x0
0x16a: V99 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V96
0x16c: M[V93] = V99
0x16d: V100 = 0x20
0x16f: V101 = ADD 0x20 V93
0x173: V102 = 0x40
0x175: V103 = M[0x40]
0x178: V104 = SUB V101 V103
0x17a: RETURN V103 V104
---
Entry stack: [V11, V260]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x17b
[0x17b:0x182]
---
Predecessors: [0x57]
Successors: [0x183, 0x187]
---
0x17b JUMPDEST
0x17c CALLVALUE
0x17d DUP1
0x17e ISZERO
0x17f PUSH2 0x187
0x182 JUMPI
---
0x17b: JUMPDEST 
0x17c: V105 = CALLVALUE
0x17e: V106 = ISZERO V105
0x17f: V107 = 0x187
0x182: JUMPI 0x187 V106
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V105]
Exit stack: [V11, V105]

================================

Block 0x183
[0x183:0x186]
---
Predecessors: [0x17b]
Successors: []
---
0x183 PUSH1 0x0
0x185 DUP1
0x186 REVERT
---
0x183: V108 = 0x0
0x186: REVERT 0x0 0x0
---
Entry stack: [V11, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V105]

================================

Block 0x187
[0x187:0x1a9]
---
Predecessors: [0x17b]
Successors: [0x3ac]
---
0x187 JUMPDEST
0x188 POP
0x189 PUSH2 0x1aa
0x18c PUSH1 0x4
0x18e DUP1
0x18f CALLDATASIZE
0x190 SUB
0x191 DUP2
0x192 ADD
0x193 SWAP1
0x194 DUP1
0x195 DUP1
0x196 CALLDATALOAD
0x197 PUSH1 0x0
0x199 NOT
0x19a AND
0x19b SWAP1
0x19c PUSH1 0x20
0x19e ADD
0x19f SWAP1
0x1a0 SWAP3
0x1a1 SWAP2
0x1a2 SWAP1
0x1a3 POP
0x1a4 POP
0x1a5 POP
0x1a6 PUSH2 0x3ac
0x1a9 JUMP
---
0x187: JUMPDEST 
0x189: V109 = 0x1aa
0x18c: V110 = 0x4
0x18f: V111 = CALLDATASIZE
0x190: V112 = SUB V111 0x4
0x192: V113 = ADD 0x4 V112
0x196: V114 = CALLDATALOAD 0x4
0x197: V115 = 0x0
0x199: V116 = NOT 0x0
0x19a: V117 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V114
0x19c: V118 = 0x20
0x19e: V119 = ADD 0x20 0x4
0x1a6: V120 = 0x3ac
0x1a9: JUMP 0x3ac
---
Entry stack: [V11, V105]
Stack pops: 1
Stack additions: [0x1aa, V117]
Exit stack: [V11, 0x1aa, V117]

================================

Block 0x1aa
[0x1aa:0x1ab]
---
Predecessors: [0x432]
Successors: []
---
0x1aa JUMPDEST
0x1ab STOP
---
0x1aa: JUMPDEST 
0x1ab: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ac
[0x1ac:0x1b3]
---
Predecessors: [0x62]
Successors: [0x435]
---
0x1ac JUMPDEST
0x1ad PUSH2 0x1b4
0x1b0 PUSH2 0x435
0x1b3 JUMP
---
0x1ac: JUMPDEST 
0x1ad: V121 = 0x1b4
0x1b0: V122 = 0x435
0x1b3: JUMP 0x435
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x1b4]
Exit stack: [V11, 0x1b4]

================================

Block 0x1b4
[0x1b4:0x1b5]
---
Predecessors: [0x4f7]
Successors: []
---
0x1b4 JUMPDEST
0x1b5 STOP
---
0x1b4: JUMPDEST 
0x1b5: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b6
[0x1b6:0x1bd]
---
Predecessors: [0x6d]
Successors: [0x1be, 0x1c2]
---
0x1b6 JUMPDEST
0x1b7 CALLVALUE
0x1b8 DUP1
0x1b9 ISZERO
0x1ba PUSH2 0x1c2
0x1bd JUMPI
---
0x1b6: JUMPDEST 
0x1b7: V123 = CALLVALUE
0x1b9: V124 = ISZERO V123
0x1ba: V125 = 0x1c2
0x1bd: JUMPI 0x1c2 V124
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V123]
Exit stack: [V11, V123]

================================

Block 0x1be
[0x1be:0x1c1]
---
Predecessors: [0x1b6]
Successors: []
---
0x1be PUSH1 0x0
0x1c0 DUP1
0x1c1 REVERT
---
0x1be: V126 = 0x0
0x1c1: REVERT 0x0 0x0
---
Entry stack: [V11, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V123]

================================

Block 0x1c2
[0x1c2:0x1e0]
---
Predecessors: [0x1b6]
Successors: [0x4f9]
---
0x1c2 JUMPDEST
0x1c3 POP
0x1c4 PUSH2 0x1e1
0x1c7 PUSH1 0x4
0x1c9 DUP1
0x1ca CALLDATASIZE
0x1cb SUB
0x1cc DUP2
0x1cd ADD
0x1ce SWAP1
0x1cf DUP1
0x1d0 DUP1
0x1d1 CALLDATALOAD
0x1d2 SWAP1
0x1d3 PUSH1 0x20
0x1d5 ADD
0x1d6 SWAP1
0x1d7 SWAP3
0x1d8 SWAP2
0x1d9 SWAP1
0x1da POP
0x1db POP
0x1dc POP
0x1dd PUSH2 0x4f9
0x1e0 JUMP
---
0x1c2: JUMPDEST 
0x1c4: V127 = 0x1e1
0x1c7: V128 = 0x4
0x1ca: V129 = CALLDATASIZE
0x1cb: V130 = SUB V129 0x4
0x1cd: V131 = ADD 0x4 V130
0x1d1: V132 = CALLDATALOAD 0x4
0x1d3: V133 = 0x20
0x1d5: V134 = ADD 0x20 0x4
0x1dd: V135 = 0x4f9
0x1e0: JUMP 0x4f9
---
Entry stack: [V11, V123]
Stack pops: 1
Stack additions: [0x1e1, V132]
Exit stack: [V11, 0x1e1, V132]

================================

Block 0x1e1
[0x1e1:0x1e2]
---
Predecessors: [0x557]
Successors: []
---
0x1e1 JUMPDEST
0x1e2 STOP
---
0x1e1: JUMPDEST 
0x1e2: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e3
[0x1e3:0x204]
---
Predecessors: [0x78]
Successors: [0x55a]
---
0x1e3 JUMPDEST
0x1e4 PUSH2 0x205
0x1e7 PUSH1 0x4
0x1e9 DUP1
0x1ea CALLDATASIZE
0x1eb SUB
0x1ec DUP2
0x1ed ADD
0x1ee SWAP1
0x1ef DUP1
0x1f0 DUP1
0x1f1 CALLDATALOAD
0x1f2 PUSH1 0x0
0x1f4 NOT
0x1f5 AND
0x1f6 SWAP1
0x1f7 PUSH1 0x20
0x1f9 ADD
0x1fa SWAP1
0x1fb SWAP3
0x1fc SWAP2
0x1fd SWAP1
0x1fe POP
0x1ff POP
0x200 POP
0x201 PUSH2 0x55a
0x204 JUMP
---
0x1e3: JUMPDEST 
0x1e4: V136 = 0x205
0x1e7: V137 = 0x4
0x1ea: V138 = CALLDATASIZE
0x1eb: V139 = SUB V138 0x4
0x1ed: V140 = ADD 0x4 V139
0x1f1: V141 = CALLDATALOAD 0x4
0x1f2: V142 = 0x0
0x1f4: V143 = NOT 0x0
0x1f5: V144 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V141
0x1f7: V145 = 0x20
0x1f9: V146 = ADD 0x20 0x4
0x201: V147 = 0x55a
0x204: JUMP 0x55a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x205, V144]
Exit stack: [V11, 0x205, V144]

================================

Block 0x205
[0x205:0x206]
---
Predecessors: [0x5eb]
Successors: []
---
0x205 JUMPDEST
0x206 STOP
---
0x205: JUMPDEST 
0x206: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x207
[0x207:0x236]
---
Predecessors: [0x85]
Successors: [0x237, 0x23d]
---
0x207 JUMPDEST
0x208 DUP2
0x209 DUP2
0x20a PUSH1 0x40
0x20c MLOAD
0x20d DUP1
0x20e DUP4
0x20f DUP4
0x210 DUP1
0x211 DUP3
0x212 DUP5
0x213 CALLDATACOPY
0x214 DUP3
0x215 ADD
0x216 SWAP2
0x217 POP
0x218 POP
0x219 SWAP3
0x21a POP
0x21b POP
0x21c POP
0x21d PUSH1 0x40
0x21f MLOAD
0x220 DUP1
0x221 SWAP2
0x222 SUB
0x223 SWAP1
0x224 SHA3
0x225 PUSH1 0x0
0x227 NOT
0x228 AND
0x229 PUSH1 0x0
0x22b SLOAD
0x22c PUSH1 0x0
0x22e NOT
0x22f AND
0x230 EQ
0x231 DUP1
0x232 ISZERO
0x233 PUSH2 0x23d
0x236 JUMPI
---
0x207: JUMPDEST 
0x20a: V148 = 0x40
0x20c: V149 = M[0x40]
0x213: CALLDATACOPY V149 V44 V42
0x215: V150 = ADD V149 V42
0x21d: V151 = 0x40
0x21f: V152 = M[0x40]
0x222: V153 = SUB V150 V152
0x224: V154 = SHA3 V152 V153
0x225: V155 = 0x0
0x227: V156 = NOT 0x0
0x228: V157 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V154
0x229: V158 = 0x0
0x22b: V159 = S[0x0]
0x22c: V160 = 0x0
0x22e: V161 = NOT 0x0
0x22f: V162 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V159
0x230: V163 = EQ V162 V157
0x232: V164 = ISZERO V163
0x233: V165 = 0x23d
0x236: JUMPI 0x23d V164
---
Entry stack: [V11, 0xb1, V44, V42]
Stack pops: 2
Stack additions: [S1, S0, V163]
Exit stack: [V11, 0xb1, V44, V42, V163]

================================

Block 0x237
[0x237:0x23c]
---
Predecessors: [0x207]
Successors: [0x23d]
---
0x237 POP
0x238 PUSH1 0x2
0x23a SLOAD
0x23b TIMESTAMP
0x23c GT
---
0x238: V166 = 0x2
0x23a: V167 = S[0x2]
0x23b: V168 = TIMESTAMP
0x23c: V169 = GT V168 V167
---
Entry stack: [V11, 0xb1, V44, V42, V163]
Stack pops: 1
Stack additions: [V169]
Exit stack: [V11, 0xb1, V44, V42, V169]

================================

Block 0x23d
[0x23d:0x242]
---
Predecessors: [0x207, 0x237]
Successors: [0x243, 0x2a1]
---
0x23d JUMPDEST
0x23e ISZERO
0x23f PUSH2 0x2a1
0x242 JUMPI
---
0x23d: JUMPDEST 
0x23e: V170 = ISZERO S0
0x23f: V171 = 0x2a1
0x242: JUMPI 0x2a1 V170
---
Entry stack: [V11, 0xb1, V44, V42, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb1, V44, V42]

================================

Block 0x243
[0x243:0x295]
---
Predecessors: [0x23d]
Successors: [0x296, 0x29f]
---
0x243 CALLER
0x244 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x259 AND
0x25a PUSH2 0x8fc
0x25d ADDRESS
0x25e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x273 AND
0x274 BALANCE
0x275 SWAP1
0x276 DUP2
0x277 ISZERO
0x278 MUL
0x279 SWAP1
0x27a PUSH1 0x40
0x27c MLOAD
0x27d PUSH1 0x0
0x27f PUSH1 0x40
0x281 MLOAD
0x282 DUP1
0x283 DUP4
0x284 SUB
0x285 DUP2
0x286 DUP6
0x287 DUP9
0x288 DUP9
0x289 CALL
0x28a SWAP4
0x28b POP
0x28c POP
0x28d POP
0x28e POP
0x28f ISZERO
0x290 DUP1
0x291 ISZERO
0x292 PUSH2 0x29f
0x295 JUMPI
---
0x243: V172 = CALLER
0x244: V173 = 0xffffffffffffffffffffffffffffffffffffffff
0x259: V174 = AND 0xffffffffffffffffffffffffffffffffffffffff V172
0x25a: V175 = 0x8fc
0x25d: V176 = ADDRESS
0x25e: V177 = 0xffffffffffffffffffffffffffffffffffffffff
0x273: V178 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x274: V179 = BALANCE V178
0x277: V180 = ISZERO V179
0x278: V181 = MUL V180 0x8fc
0x27a: V182 = 0x40
0x27c: V183 = M[0x40]
0x27d: V184 = 0x0
0x27f: V185 = 0x40
0x281: V186 = M[0x40]
0x284: V187 = SUB V183 V186
0x289: V188 = CALL V181 V174 V179 V186 V187 V186 0x0
0x28f: V189 = ISZERO V188
0x291: V190 = ISZERO V189
0x292: V191 = 0x29f
0x295: JUMPI 0x29f V190
---
Entry stack: [V11, 0xb1, V44, V42]
Stack pops: 0
Stack additions: [V189]
Exit stack: [V11, 0xb1, V44, V42, V189]

================================

Block 0x296
[0x296:0x29e]
---
Predecessors: [0x243]
Successors: []
---
0x296 RETURNDATASIZE
0x297 PUSH1 0x0
0x299 DUP1
0x29a RETURNDATACOPY
0x29b RETURNDATASIZE
0x29c PUSH1 0x0
0x29e REVERT
---
0x296: V192 = RETURNDATASIZE
0x297: V193 = 0x0
0x29a: RETURNDATACOPY 0x0 0x0 V192
0x29b: V194 = RETURNDATASIZE
0x29c: V195 = 0x0
0x29e: REVERT 0x0 V194
---
Entry stack: [V11, 0xb1, V44, V42, V189]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb1, V44, V42, V189]

================================

Block 0x29f
[0x29f:0x2a0]
---
Predecessors: [0x243]
Successors: [0x2a1]
---
0x29f JUMPDEST
0x2a0 POP
---
0x29f: JUMPDEST 
---
Entry stack: [V11, 0xb1, V44, V42, V189]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb1, V44, V42]

================================

Block 0x2a1
[0x2a1:0x2a4]
---
Predecessors: [0x23d, 0x29f]
Successors: [0xb1]
---
0x2a1 JUMPDEST
0x2a2 POP
0x2a3 POP
0x2a4 JUMP
---
0x2a1: JUMPDEST 
0x2a4: JUMP 0xb1
---
Entry stack: [V11, 0xb1, V44, V42]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a5
[0x2a5:0x2fb]
---
Predecessors: [0xbf]
Successors: [0x2fc, 0x33d]
---
0x2a5 JUMPDEST
0x2a6 PUSH1 0x3
0x2a8 PUSH1 0x0
0x2aa SWAP1
0x2ab SLOAD
0x2ac SWAP1
0x2ad PUSH2 0x100
0x2b0 EXP
0x2b1 SWAP1
0x2b2 DIV
0x2b3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c8 AND
0x2c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2de AND
0x2df CALLER
0x2e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f5 AND
0x2f6 EQ
0x2f7 ISZERO
0x2f8 PUSH2 0x33d
0x2fb JUMPI
---
0x2a5: JUMPDEST 
0x2a6: V196 = 0x3
0x2a8: V197 = 0x0
0x2ab: V198 = S[0x3]
0x2ad: V199 = 0x100
0x2b0: V200 = EXP 0x100 0x0
0x2b2: V201 = DIV V198 0x1
0x2b3: V202 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c8: V203 = AND 0xffffffffffffffffffffffffffffffffffffffff V201
0x2c9: V204 = 0xffffffffffffffffffffffffffffffffffffffff
0x2de: V205 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x2df: V206 = CALLER
0x2e0: V207 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f5: V208 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0x2f6: V209 = EQ V208 V205
0x2f7: V210 = ISZERO V209
0x2f8: V211 = 0x33d
0x2fb: JUMPI 0x33d V210
---
Entry stack: [V11, 0xf4, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xf4, V57]

================================

Block 0x2fc
[0x2fc:0x33c]
---
Predecessors: [0x2a5]
Successors: [0x33d]
---
0x2fc DUP1
0x2fd PUSH1 0x4
0x2ff PUSH1 0x0
0x301 PUSH2 0x100
0x304 EXP
0x305 DUP2
0x306 SLOAD
0x307 DUP2
0x308 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31d MUL
0x31e NOT
0x31f AND
0x320 SWAP1
0x321 DUP4
0x322 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x337 AND
0x338 MUL
0x339 OR
0x33a SWAP1
0x33b SSTORE
0x33c POP
---
0x2fd: V212 = 0x4
0x2ff: V213 = 0x0
0x301: V214 = 0x100
0x304: V215 = EXP 0x100 0x0
0x306: V216 = S[0x4]
0x308: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x31d: V218 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x31e: V219 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x31f: V220 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V216
0x322: V221 = 0xffffffffffffffffffffffffffffffffffffffff
0x337: V222 = AND 0xffffffffffffffffffffffffffffffffffffffff V57
0x338: V223 = MUL V222 0x1
0x339: V224 = OR V223 V220
0x33b: S[0x4] = V224
---
Entry stack: [V11, 0xf4, V57]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xf4, V57]

================================

Block 0x33d
[0x33d:0x33f]
---
Predecessors: [0x2a5, 0x2fc]
Successors: [0xf4]
---
0x33d JUMPDEST
0x33e POP
0x33f JUMP
---
0x33d: JUMPDEST 
0x33f: JUMP 0xf4
---
Entry stack: [V11, 0xf4, V57]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x340
[0x340:0x352]
---
Predecessors: [0x102]
Successors: [0x353]
---
0x340 JUMPDEST
0x341 PUSH1 0x0
0x343 DUP2
0x344 PUSH1 0x40
0x346 MLOAD
0x347 DUP1
0x348 DUP3
0x349 DUP1
0x34a MLOAD
0x34b SWAP1
0x34c PUSH1 0x20
0x34e ADD
0x34f SWAP1
0x350 DUP1
0x351 DUP4
0x352 DUP4
---
0x340: JUMPDEST 
0x341: V225 = 0x0
0x344: V226 = 0x40
0x346: V227 = M[0x40]
0x34a: V228 = M[V85]
0x34c: V229 = 0x20
0x34e: V230 = ADD 0x20 V85
---
Entry stack: [V11, 0x15d, V85]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V227, V227, V230, V228, V228, V227, V230]
Exit stack: [V11, 0x15d, V85, 0x0, V85, V227, V227, V230, V228, V228, V227, V230]

================================

Block 0x353
[0x353:0x35d]
---
Predecessors: [0x340, 0x35e]
Successors: [0x35e, 0x378]
---
0x353 JUMPDEST
0x354 PUSH1 0x20
0x356 DUP4
0x357 LT
0x358 ISZERO
0x359 ISZERO
0x35a PUSH2 0x378
0x35d JUMPI
---
0x353: JUMPDEST 
0x354: V231 = 0x20
0x357: V232 = LT S2 0x20
0x358: V233 = ISZERO V232
0x359: V234 = ISZERO V233
0x35a: V235 = 0x378
0x35d: JUMPI 0x378 V234
---
Entry stack: [V11, 0x15d, V85, 0x0, V85, V227, V227, V230, V228, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x15d, V85, 0x0, V85, V227, V227, V230, V228, S2, S1, S0]

================================

Block 0x35e
[0x35e:0x377]
---
Predecessors: [0x353]
Successors: [0x353]
---
0x35e DUP1
0x35f MLOAD
0x360 DUP3
0x361 MSTORE
0x362 PUSH1 0x20
0x364 DUP3
0x365 ADD
0x366 SWAP2
0x367 POP
0x368 PUSH1 0x20
0x36a DUP2
0x36b ADD
0x36c SWAP1
0x36d POP
0x36e PUSH1 0x20
0x370 DUP4
0x371 SUB
0x372 SWAP3
0x373 POP
0x374 PUSH2 0x353
0x377 JUMP
---
0x35f: V236 = M[S0]
0x361: M[S1] = V236
0x362: V237 = 0x20
0x365: V238 = ADD S1 0x20
0x368: V239 = 0x20
0x36b: V240 = ADD S0 0x20
0x36e: V241 = 0x20
0x371: V242 = SUB S2 0x20
0x374: V243 = 0x353
0x377: JUMP 0x353
---
Entry stack: [V11, 0x15d, V85, 0x0, V85, V227, V227, V230, V228, S2, S1, S0]
Stack pops: 3
Stack additions: [V242, V238, V240]
Exit stack: [V11, 0x15d, V85, 0x0, V85, V227, V227, V230, V228, V242, V238, V240]

================================

Block 0x378
[0x378:0x3ab]
---
Predecessors: [0x353]
Successors: [0x15d]
---
0x378 JUMPDEST
0x379 PUSH1 0x1
0x37b DUP4
0x37c PUSH1 0x20
0x37e SUB
0x37f PUSH2 0x100
0x382 EXP
0x383 SUB
0x384 DUP1
0x385 NOT
0x386 DUP3
0x387 MLOAD
0x388 AND
0x389 DUP2
0x38a DUP5
0x38b MLOAD
0x38c AND
0x38d DUP1
0x38e DUP3
0x38f OR
0x390 DUP6
0x391 MSTORE
0x392 POP
0x393 POP
0x394 POP
0x395 POP
0x396 POP
0x397 POP
0x398 SWAP1
0x399 POP
0x39a ADD
0x39b SWAP2
0x39c POP
0x39d POP
0x39e PUSH1 0x40
0x3a0 MLOAD
0x3a1 DUP1
0x3a2 SWAP2
0x3a3 SUB
0x3a4 SWAP1
0x3a5 SHA3
0x3a6 SWAP1
0x3a7 POP
0x3a8 SWAP2
0x3a9 SWAP1
0x3aa POP
0x3ab JUMP
---
0x378: JUMPDEST 
0x379: V244 = 0x1
0x37c: V245 = 0x20
0x37e: V246 = SUB 0x20 S2
0x37f: V247 = 0x100
0x382: V248 = EXP 0x100 V246
0x383: V249 = SUB V248 0x1
0x385: V250 = NOT V249
0x387: V251 = M[S0]
0x388: V252 = AND V251 V250
0x38b: V253 = M[S1]
0x38c: V254 = AND V253 V249
0x38f: V255 = OR V252 V254
0x391: M[S1] = V255
0x39a: V256 = ADD V228 V227
0x39e: V257 = 0x40
0x3a0: V258 = M[0x40]
0x3a3: V259 = SUB V256 V258
0x3a5: V260 = SHA3 V258 V259
0x3ab: JUMP 0x15d
---
Entry stack: [V11, 0x15d, V85, 0x0, V85, V227, V227, V230, V228, S2, S1, S0]
Stack pops: 11
Stack additions: [V260]
Exit stack: [V11, V260]

================================

Block 0x3ac
[0x3ac:0x3bf]
---
Predecessors: [0x187]
Successors: [0x3c0, 0x412]
---
0x3ac JUMPDEST
0x3ad PUSH1 0x0
0x3af SLOAD
0x3b0 PUSH1 0x0
0x3b2 NOT
0x3b3 AND
0x3b4 DUP2
0x3b5 PUSH1 0x0
0x3b7 NOT
0x3b8 AND
0x3b9 EQ
0x3ba DUP1
0x3bb ISZERO
0x3bc PUSH2 0x412
0x3bf JUMPI
---
0x3ac: JUMPDEST 
0x3ad: V261 = 0x0
0x3af: V262 = S[0x0]
0x3b0: V263 = 0x0
0x3b2: V264 = NOT 0x0
0x3b3: V265 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V262
0x3b5: V266 = 0x0
0x3b7: V267 = NOT 0x0
0x3b8: V268 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V117
0x3b9: V269 = EQ V268 V265
0x3bb: V270 = ISZERO V269
0x3bc: V271 = 0x412
0x3bf: JUMPI 0x412 V270
---
Entry stack: [V11, 0x1aa, V117]
Stack pops: 1
Stack additions: [S0, V269]
Exit stack: [V11, 0x1aa, V117, V269]

================================

Block 0x3c0
[0x3c0:0x411]
---
Predecessors: [0x3ac]
Successors: [0x412]
---
0x3c0 POP
0x3c1 PUSH1 0x3
0x3c3 PUSH1 0x0
0x3c5 SWAP1
0x3c6 SLOAD
0x3c7 SWAP1
0x3c8 PUSH2 0x100
0x3cb EXP
0x3cc SWAP1
0x3cd DIV
0x3ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e3 AND
0x3e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f9 AND
0x3fa CALLER
0x3fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x410 AND
0x411 EQ
---
0x3c1: V272 = 0x3
0x3c3: V273 = 0x0
0x3c6: V274 = S[0x3]
0x3c8: V275 = 0x100
0x3cb: V276 = EXP 0x100 0x0
0x3cd: V277 = DIV V274 0x1
0x3ce: V278 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e3: V279 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x3e4: V280 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f9: V281 = AND 0xffffffffffffffffffffffffffffffffffffffff V279
0x3fa: V282 = CALLER
0x3fb: V283 = 0xffffffffffffffffffffffffffffffffffffffff
0x410: V284 = AND 0xffffffffffffffffffffffffffffffffffffffff V282
0x411: V285 = EQ V284 V281
---
Entry stack: [V11, 0x1aa, V117, V269]
Stack pops: 1
Stack additions: [V285]
Exit stack: [V11, 0x1aa, V117, V285]

================================

Block 0x412
[0x412:0x417]
---
Predecessors: [0x3ac, 0x3c0]
Successors: [0x418, 0x432]
---
0x412 JUMPDEST
0x413 ISZERO
0x414 PUSH2 0x432
0x417 JUMPI
---
0x412: JUMPDEST 
0x413: V286 = ISZERO S0
0x414: V287 = 0x432
0x417: JUMPI 0x432 V286
---
Entry stack: [V11, 0x1aa, V117, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1aa, V117]

================================

Block 0x418
[0x418:0x431]
---
Predecessors: [0x412]
Successors: [0x432]
---
0x418 PUSH1 0x1
0x41a DUP1
0x41b PUSH1 0x0
0x41d PUSH2 0x100
0x420 EXP
0x421 DUP2
0x422 SLOAD
0x423 DUP2
0x424 PUSH1 0xff
0x426 MUL
0x427 NOT
0x428 AND
0x429 SWAP1
0x42a DUP4
0x42b ISZERO
0x42c ISZERO
0x42d MUL
0x42e OR
0x42f SWAP1
0x430 SSTORE
0x431 POP
---
0x418: V288 = 0x1
0x41b: V289 = 0x0
0x41d: V290 = 0x100
0x420: V291 = EXP 0x100 0x0
0x422: V292 = S[0x1]
0x424: V293 = 0xff
0x426: V294 = MUL 0xff 0x1
0x427: V295 = NOT 0xff
0x428: V296 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V292
0x42b: V297 = ISZERO 0x1
0x42c: V298 = ISZERO 0x0
0x42d: V299 = MUL 0x1 0x1
0x42e: V300 = OR 0x1 V296
0x430: S[0x1] = V300
---
Entry stack: [V11, 0x1aa, V117]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1aa, V117]

================================

Block 0x432
[0x432:0x434]
---
Predecessors: [0x412, 0x418]
Successors: [0x1aa]
---
0x432 JUMPDEST
0x433 POP
0x434 JUMP
---
0x432: JUMPDEST 
0x434: JUMP 0x1aa
---
Entry stack: [V11, 0x1aa, V117]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x435
[0x435:0x48c]
---
Predecessors: [0x1ac]
Successors: [0x48d, 0x493]
---
0x435 JUMPDEST
0x436 PUSH1 0x4
0x438 PUSH1 0x0
0x43a SWAP1
0x43b SLOAD
0x43c SWAP1
0x43d PUSH2 0x100
0x440 EXP
0x441 SWAP1
0x442 DIV
0x443 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x458 AND
0x459 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x46e AND
0x46f CALLER
0x470 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x485 AND
0x486 EQ
0x487 DUP1
0x488 ISZERO
0x489 PUSH2 0x493
0x48c JUMPI
---
0x435: JUMPDEST 
0x436: V301 = 0x4
0x438: V302 = 0x0
0x43b: V303 = S[0x4]
0x43d: V304 = 0x100
0x440: V305 = EXP 0x100 0x0
0x442: V306 = DIV V303 0x1
0x443: V307 = 0xffffffffffffffffffffffffffffffffffffffff
0x458: V308 = AND 0xffffffffffffffffffffffffffffffffffffffff V306
0x459: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x46e: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x46f: V311 = CALLER
0x470: V312 = 0xffffffffffffffffffffffffffffffffffffffff
0x485: V313 = AND 0xffffffffffffffffffffffffffffffffffffffff V311
0x486: V314 = EQ V313 V310
0x488: V315 = ISZERO V314
0x489: V316 = 0x493
0x48c: JUMPI 0x493 V315
---
Entry stack: [V11, 0x1b4]
Stack pops: 0
Stack additions: [V314]
Exit stack: [V11, 0x1b4, V314]

================================

Block 0x48d
[0x48d:0x492]
---
Predecessors: [0x435]
Successors: [0x493]
---
0x48d POP
0x48e PUSH1 0x2
0x490 SLOAD
0x491 TIMESTAMP
0x492 GT
---
0x48e: V317 = 0x2
0x490: V318 = S[0x2]
0x491: V319 = TIMESTAMP
0x492: V320 = GT V319 V318
---
Entry stack: [V11, 0x1b4, V314]
Stack pops: 1
Stack additions: [V320]
Exit stack: [V11, 0x1b4, V320]

================================

Block 0x493
[0x493:0x498]
---
Predecessors: [0x435, 0x48d]
Successors: [0x499, 0x4f7]
---
0x493 JUMPDEST
0x494 ISZERO
0x495 PUSH2 0x4f7
0x498 JUMPI
---
0x493: JUMPDEST 
0x494: V321 = ISZERO S0
0x495: V322 = 0x4f7
0x498: JUMPI 0x4f7 V321
---
Entry stack: [V11, 0x1b4, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1b4]

================================

Block 0x499
[0x499:0x4eb]
---
Predecessors: [0x493]
Successors: [0x4ec, 0x4f5]
---
0x499 CALLER
0x49a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4af AND
0x4b0 PUSH2 0x8fc
0x4b3 ADDRESS
0x4b4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c9 AND
0x4ca BALANCE
0x4cb SWAP1
0x4cc DUP2
0x4cd ISZERO
0x4ce MUL
0x4cf SWAP1
0x4d0 PUSH1 0x40
0x4d2 MLOAD
0x4d3 PUSH1 0x0
0x4d5 PUSH1 0x40
0x4d7 MLOAD
0x4d8 DUP1
0x4d9 DUP4
0x4da SUB
0x4db DUP2
0x4dc DUP6
0x4dd DUP9
0x4de DUP9
0x4df CALL
0x4e0 SWAP4
0x4e1 POP
0x4e2 POP
0x4e3 POP
0x4e4 POP
0x4e5 ISZERO
0x4e6 DUP1
0x4e7 ISZERO
0x4e8 PUSH2 0x4f5
0x4eb JUMPI
---
0x499: V323 = CALLER
0x49a: V324 = 0xffffffffffffffffffffffffffffffffffffffff
0x4af: V325 = AND 0xffffffffffffffffffffffffffffffffffffffff V323
0x4b0: V326 = 0x8fc
0x4b3: V327 = ADDRESS
0x4b4: V328 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c9: V329 = AND 0xffffffffffffffffffffffffffffffffffffffff V327
0x4ca: V330 = BALANCE V329
0x4cd: V331 = ISZERO V330
0x4ce: V332 = MUL V331 0x8fc
0x4d0: V333 = 0x40
0x4d2: V334 = M[0x40]
0x4d3: V335 = 0x0
0x4d5: V336 = 0x40
0x4d7: V337 = M[0x40]
0x4da: V338 = SUB V334 V337
0x4df: V339 = CALL V332 V325 V330 V337 V338 V337 0x0
0x4e5: V340 = ISZERO V339
0x4e7: V341 = ISZERO V340
0x4e8: V342 = 0x4f5
0x4eb: JUMPI 0x4f5 V341
---
Entry stack: [V11, 0x1b4]
Stack pops: 0
Stack additions: [V340]
Exit stack: [V11, 0x1b4, V340]

================================

Block 0x4ec
[0x4ec:0x4f4]
---
Predecessors: [0x499]
Successors: []
---
0x4ec RETURNDATASIZE
0x4ed PUSH1 0x0
0x4ef DUP1
0x4f0 RETURNDATACOPY
0x4f1 RETURNDATASIZE
0x4f2 PUSH1 0x0
0x4f4 REVERT
---
0x4ec: V343 = RETURNDATASIZE
0x4ed: V344 = 0x0
0x4f0: RETURNDATACOPY 0x0 0x0 V343
0x4f1: V345 = RETURNDATASIZE
0x4f2: V346 = 0x0
0x4f4: REVERT 0x0 V345
---
Entry stack: [V11, 0x1b4, V340]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1b4, V340]

================================

Block 0x4f5
[0x4f5:0x4f6]
---
Predecessors: [0x499]
Successors: [0x4f7]
---
0x4f5 JUMPDEST
0x4f6 POP
---
0x4f5: JUMPDEST 
---
Entry stack: [V11, 0x1b4, V340]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x1b4]

================================

Block 0x4f7
[0x4f7:0x4f8]
---
Predecessors: [0x493, 0x4f5]
Successors: [0x1b4]
---
0x4f7 JUMPDEST
0x4f8 JUMP
---
0x4f7: JUMPDEST 
0x4f8: JUMP 0x1b4
---
Entry stack: [V11, 0x1b4]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4f9
[0x4f9:0x54f]
---
Predecessors: [0x1c2]
Successors: [0x550, 0x557]
---
0x4f9 JUMPDEST
0x4fa PUSH1 0x3
0x4fc PUSH1 0x0
0x4fe SWAP1
0x4ff SLOAD
0x500 SWAP1
0x501 PUSH2 0x100
0x504 EXP
0x505 SWAP1
0x506 DIV
0x507 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x51c AND
0x51d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x532 AND
0x533 CALLER
0x534 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x549 AND
0x54a EQ
0x54b ISZERO
0x54c PUSH2 0x557
0x54f JUMPI
---
0x4f9: JUMPDEST 
0x4fa: V347 = 0x3
0x4fc: V348 = 0x0
0x4ff: V349 = S[0x3]
0x501: V350 = 0x100
0x504: V351 = EXP 0x100 0x0
0x506: V352 = DIV V349 0x1
0x507: V353 = 0xffffffffffffffffffffffffffffffffffffffff
0x51c: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V352
0x51d: V355 = 0xffffffffffffffffffffffffffffffffffffffff
0x532: V356 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0x533: V357 = CALLER
0x534: V358 = 0xffffffffffffffffffffffffffffffffffffffff
0x549: V359 = AND 0xffffffffffffffffffffffffffffffffffffffff V357
0x54a: V360 = EQ V359 V356
0x54b: V361 = ISZERO V360
0x54c: V362 = 0x557
0x54f: JUMPI 0x557 V361
---
Entry stack: [V11, 0x1e1, V132]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x1e1, V132]

================================

Block 0x550
[0x550:0x556]
---
Predecessors: [0x4f9]
Successors: [0x557]
---
0x550 DUP1
0x551 PUSH1 0x2
0x553 DUP2
0x554 SWAP1
0x555 SSTORE
0x556 POP
---
0x551: V363 = 0x2
0x555: S[0x2] = V132
---
Entry stack: [V11, 0x1e1, V132]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1e1, V132]

================================

Block 0x557
[0x557:0x559]
---
Predecessors: [0x4f9, 0x550]
Successors: [0x1e1]
---
0x557 JUMPDEST
0x558 POP
0x559 JUMP
---
0x557: JUMPDEST 
0x559: JUMP 0x1e1
---
Entry stack: [V11, 0x1e1, V132]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x55a
[0x55a:0x571]
---
Predecessors: [0x1e3]
Successors: [0x572, 0x57e]
---
0x55a JUMPDEST
0x55b PUSH1 0x1
0x55d PUSH1 0x0
0x55f SWAP1
0x560 SLOAD
0x561 SWAP1
0x562 PUSH2 0x100
0x565 EXP
0x566 SWAP1
0x567 DIV
0x568 PUSH1 0xff
0x56a AND
0x56b ISZERO
0x56c DUP1
0x56d ISZERO
0x56e PUSH2 0x57e
0x571 JUMPI
---
0x55a: JUMPDEST 
0x55b: V364 = 0x1
0x55d: V365 = 0x0
0x560: V366 = S[0x1]
0x562: V367 = 0x100
0x565: V368 = EXP 0x100 0x0
0x567: V369 = DIV V366 0x1
0x568: V370 = 0xff
0x56a: V371 = AND 0xff V369
0x56b: V372 = ISZERO V371
0x56d: V373 = ISZERO V372
0x56e: V374 = 0x57e
0x571: JUMPI 0x57e V373
---
Entry stack: [V11, 0x205, V144]
Stack pops: 0
Stack additions: [V372]
Exit stack: [V11, 0x205, V144, V372]

================================

Block 0x572
[0x572:0x57d]
---
Predecessors: [0x55a]
Successors: [0x57e]
---
0x572 POP
0x573 PUSH8 0xde0b6b3a7640000
0x57c CALLVALUE
0x57d GT
---
0x573: V375 = 0xde0b6b3a7640000
0x57c: V376 = CALLVALUE
0x57d: V377 = GT V376 0xde0b6b3a7640000
---
Entry stack: [V11, 0x205, V144, V372]
Stack pops: 1
Stack additions: [V377]
Exit stack: [V11, 0x205, V144, V377]

================================

Block 0x57e
[0x57e:0x583]
---
Predecessors: [0x55a, 0x572]
Successors: [0x584, 0x592]
---
0x57e JUMPDEST
0x57f DUP1
0x580 PUSH2 0x592
0x583 JUMPI
---
0x57e: JUMPDEST 
0x580: V378 = 0x592
0x583: JUMPI 0x592 S0
---
Entry stack: [V11, 0x205, V144, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x205, V144, S0]

================================

Block 0x584
[0x584:0x591]
---
Predecessors: [0x57e]
Successors: [0x592]
---
0x584 POP
0x585 PUSH1 0x0
0x587 PUSH1 0x1
0x589 MUL
0x58a PUSH1 0x0
0x58c SLOAD
0x58d PUSH1 0x0
0x58f NOT
0x590 AND
0x591 EQ
---
0x585: V379 = 0x0
0x587: V380 = 0x1
0x589: V381 = MUL 0x1 0x0
0x58a: V382 = 0x0
0x58c: V383 = S[0x0]
0x58d: V384 = 0x0
0x58f: V385 = NOT 0x0
0x590: V386 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V383
0x591: V387 = EQ V386 0x0
---
Entry stack: [V11, 0x205, V144, S0]
Stack pops: 1
Stack additions: [V387]
Exit stack: [V11, 0x205, V144, V387]

================================

Block 0x592
[0x592:0x597]
---
Predecessors: [0x57e, 0x584]
Successors: [0x598, 0x5eb]
---
0x592 JUMPDEST
0x593 ISZERO
0x594 PUSH2 0x5eb
0x597 JUMPI
---
0x592: JUMPDEST 
0x593: V388 = ISZERO S0
0x594: V389 = 0x5eb
0x597: JUMPI 0x5eb V388
---
Entry stack: [V11, 0x205, V144, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x205, V144]

================================

Block 0x598
[0x598:0x5ea]
---
Predecessors: [0x592]
Successors: [0x5eb]
---
0x598 DUP1
0x599 PUSH1 0x0
0x59b DUP2
0x59c PUSH1 0x0
0x59e NOT
0x59f AND
0x5a0 SWAP1
0x5a1 SSTORE
0x5a2 POP
0x5a3 CALLER
0x5a4 PUSH1 0x3
0x5a6 PUSH1 0x0
0x5a8 PUSH2 0x100
0x5ab EXP
0x5ac DUP2
0x5ad SLOAD
0x5ae DUP2
0x5af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5c4 MUL
0x5c5 NOT
0x5c6 AND
0x5c7 SWAP1
0x5c8 DUP4
0x5c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5de AND
0x5df MUL
0x5e0 OR
0x5e1 SWAP1
0x5e2 SSTORE
0x5e3 POP
0x5e4 TIMESTAMP
0x5e5 PUSH1 0x2
0x5e7 DUP2
0x5e8 SWAP1
0x5e9 SSTORE
0x5ea POP
---
0x599: V390 = 0x0
0x59c: V391 = 0x0
0x59e: V392 = NOT 0x0
0x59f: V393 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V144
0x5a1: S[0x0] = V393
0x5a3: V394 = CALLER
0x5a4: V395 = 0x3
0x5a6: V396 = 0x0
0x5a8: V397 = 0x100
0x5ab: V398 = EXP 0x100 0x0
0x5ad: V399 = S[0x3]
0x5af: V400 = 0xffffffffffffffffffffffffffffffffffffffff
0x5c4: V401 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x5c5: V402 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x5c6: V403 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V399
0x5c9: V404 = 0xffffffffffffffffffffffffffffffffffffffff
0x5de: V405 = AND 0xffffffffffffffffffffffffffffffffffffffff V394
0x5df: V406 = MUL V405 0x1
0x5e0: V407 = OR V406 V403
0x5e2: S[0x3] = V407
0x5e4: V408 = TIMESTAMP
0x5e5: V409 = 0x2
0x5e9: S[0x2] = V408
---
Entry stack: [V11, 0x205, V144]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x205, V144]

================================

Block 0x5eb
[0x5eb:0x5ed]
---
Predecessors: [0x592, 0x598]
Successors: [0x205]
---
0x5eb JUMPDEST
0x5ec POP
0x5ed JUMP
---
0x5eb: JUMPDEST 
0x5ed: JUMP 0x205
---
Entry stack: [V11, 0x205, V144]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x5ee
[0x5ee:0x62d]
---
Predecessors: []
Successors: []
---
0x5ee STOP
0x5ef LOG1
0x5f0 PUSH6 0x627a7a723058
0x5f7 SHA3
0x5f8 MISSING 0xb5
0x5f9 MLOAD
0x5fa DIV
0x5fb MISSING 0x2c
0x5fc MISSING 0x2a
0x5fd MISSING 0xaa
0x5fe PUSH22 0x3ac4f23198626d05234cd18663c140b10a51df3790da
0x615 PUSH24 0x12b10029
---
0x5ee: STOP 
0x5ef: LOG S0 S1 S2
0x5f0: V410 = 0x627a7a723058
0x5f7: V411 = SHA3 0x627a7a723058 S3
0x5f8: MISSING 0xb5
0x5f9: V412 = M[S0]
0x5fa: V413 = DIV V412 S1
0x5fb: MISSING 0x2c
0x5fc: MISSING 0x2a
0x5fd: MISSING 0xaa
0x5fe: V414 = 0x3ac4f23198626d05234cd18663c140b10a51df3790da
0x615: V415 = 0x12b10029
---
Entry stack: []
Stack pops: 0
Stack additions: [V411, V413, 0x12b10029, 0x3ac4f23198626d05234cd18663c140b10a51df3790da]
Exit stack: []

================================

Function 0:
Public function signature: 0x25f885d0
Entry block: 0x85
Exit block: 0x296
Body: 0x85, 0xb1, 0x207, 0x237, 0x23d, 0x243, 0x296, 0x29f, 0x2a1

Function 1:
Public function signature: 0x3f3c51c3
Entry block: 0xb3
Exit block: 0xf4
Body: 0xb3, 0xbb, 0xbf, 0xf4, 0x2a5, 0x2fc, 0x33d

Function 2:
Public function signature: 0x42fc63be
Entry block: 0xf6
Exit block: 0x15d
Body: 0xf6, 0xfe, 0x102, 0x15d, 0x340, 0x353, 0x35e, 0x378

Function 3:
Public function signature: 0x65d61ad6
Entry block: 0x17b
Exit block: 0x1aa
Body: 0x17b, 0x183, 0x187, 0x1aa, 0x3ac, 0x3c0, 0x412, 0x418, 0x432

Function 4:
Public function signature: 0xa1e564b1
Entry block: 0x1ac
Exit block: 0x4ec
Body: 0x1ac, 0x1b4, 0x435, 0x48d, 0x493, 0x499, 0x4ec, 0x4f5, 0x4f7

Function 5:
Public function signature: 0xa8276d97
Entry block: 0x1b6
Exit block: 0x1e1
Body: 0x1b6, 0x1be, 0x1c2, 0x1e1, 0x4f9, 0x550, 0x557

Function 6:
Public function signature: 0xdf9933e5
Entry block: 0x1e3
Exit block: 0x205
Body: 0x1e3, 0x205, 0x55a, 0x572, 0x57e, 0x584, 0x592, 0x598, 0x5eb

Function 7:
Public fallback function
Entry block: 0x83
Exit block: 0x83
Body: 0x83

