Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x77]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x77
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x77
0xc: JUMPI 0x77 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x9e]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1f6d4942
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x9e
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1f6d4942
0x3b: V13 = EQ V11 0x1f6d4942
0x3c: V14 = 0x9e
0x3f: JUMPI 0x9e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xde]
---
0x40 DUP1
0x41 PUSH4 0x2b8f2042
0x46 EQ
0x47 PUSH2 0xde
0x4a JUMPI
---
0x41: V15 = 0x2b8f2042
0x46: V16 = EQ 0x2b8f2042 V11
0x47: V17 = 0xde
0x4a: JUMPI 0xde V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xf3]
---
0x4b DUP1
0x4c PUSH4 0x8da5cb5b
0x51 EQ
0x52 PUSH2 0xf3
0x55 JUMPI
---
0x4c: V18 = 0x8da5cb5b
0x51: V19 = EQ 0x8da5cb5b V11
0x52: V20 = 0xf3
0x55: JUMPI 0xf3 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x131]
---
0x56 DUP1
0x57 PUSH4 0xa6f9dae1
0x5c EQ
0x5d PUSH2 0x131
0x60 JUMPI
---
0x57: V21 = 0xa6f9dae1
0x5c: V22 = EQ 0xa6f9dae1 V11
0x5d: V23 = 0x131
0x60: JUMPI 0x131 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x15f]
---
0x61 DUP1
0x62 PUSH4 0xdd1dffb7
0x67 EQ
0x68 PUSH2 0x15f
0x6b JUMPI
---
0x62: V24 = 0xdd1dffb7
0x67: V25 = EQ 0xdd1dffb7 V11
0x68: V26 = 0x15f
0x6b: JUMPI 0x15f V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x174]
---
0x6c DUP1
0x6d PUSH4 0xe9fad8ee
0x72 EQ
0x73 PUSH2 0x174
0x76 JUMPI
---
0x6d: V27 = 0xe9fad8ee
0x72: V28 = EQ 0xe9fad8ee V11
0x73: V29 = 0x174
0x76: JUMPI 0x174 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x86]
---
Predecessors: [0x0, 0x6c]
Successors: [0x87, 0x9c]
---
0x77 JUMPDEST
0x78 PUSH8 0x6f05b59d3b20000
0x81 CALLVALUE
0x82 LT
0x83 PUSH2 0x9c
0x86 JUMPI
---
0x77: JUMPDEST 
0x78: V30 = 0x6f05b59d3b20000
0x81: V31 = CALLVALUE
0x82: V32 = LT V31 0x6f05b59d3b20000
0x83: V33 = 0x9c
0x86: JUMPI 0x9c V32
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x87
[0x87:0x9b]
---
Predecessors: [0x77]
Successors: [0x9c]
---
0x87 CALLER
0x88 PUSH1 0x0
0x8a SWAP1
0x8b DUP2
0x8c MSTORE
0x8d PUSH1 0x2
0x8f PUSH1 0x20
0x91 MSTORE
0x92 PUSH1 0x40
0x94 SWAP1
0x95 SHA3
0x96 DUP1
0x97 SLOAD
0x98 CALLVALUE
0x99 ADD
0x9a SWAP1
0x9b SSTORE
---
0x87: V34 = CALLER
0x88: V35 = 0x0
0x8c: M[0x0] = V34
0x8d: V36 = 0x2
0x8f: V37 = 0x20
0x91: M[0x20] = 0x2
0x92: V38 = 0x40
0x95: V39 = SHA3 0x0 0x40
0x97: V40 = S[V39]
0x98: V41 = CALLVALUE
0x99: V42 = ADD V41 V40
0x9b: S[V39] = V42
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9c
[0x9c:0x9d]
---
Predecessors: [0x77, 0x87, 0x1ec, 0x225, 0x2d8]
Successors: []
---
0x9c JUMPDEST
0x9d STOP
---
0x9c: JUMPDEST 
0x9d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9e
[0x9e:0xa5]
---
Predecessors: [0xd]
Successors: [0xa6, 0xaa]
---
0x9e JUMPDEST
0x9f CALLVALUE
0xa0 DUP1
0xa1 ISZERO
0xa2 PUSH2 0xaa
0xa5 JUMPI
---
0x9e: JUMPDEST 
0x9f: V43 = CALLVALUE
0xa1: V44 = ISZERO V43
0xa2: V45 = 0xaa
0xa5: JUMPI 0xaa V44
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V43]
Exit stack: [V11, V43]

================================

Block 0xa6
[0xa6:0xa9]
---
Predecessors: [0x9e]
Successors: []
---
0xa6 PUSH1 0x0
0xa8 DUP1
0xa9 REVERT
---
0xa6: V46 = 0x0
0xa9: REVERT 0x0 0x0
---
Entry stack: [V11, V43]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V43]

================================

Block 0xaa
[0xaa:0xcb]
---
Predecessors: [0x9e]
Successors: [0x189]
---
0xaa JUMPDEST
0xab POP
0xac PUSH2 0xcc
0xaf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc4 PUSH1 0x4
0xc6 CALLDATALOAD
0xc7 AND
0xc8 PUSH2 0x189
0xcb JUMP
---
0xaa: JUMPDEST 
0xac: V47 = 0xcc
0xaf: V48 = 0xffffffffffffffffffffffffffffffffffffffff
0xc4: V49 = 0x4
0xc6: V50 = CALLDATALOAD 0x4
0xc7: V51 = AND V50 0xffffffffffffffffffffffffffffffffffffffff
0xc8: V52 = 0x189
0xcb: JUMP 0x189
---
Entry stack: [V11, V43]
Stack pops: 1
Stack additions: [0xcc, V51]
Exit stack: [V11, 0xcc, V51]

================================

Block 0xcc
[0xcc:0xdd]
---
Predecessors: [0x189, 0x261]
Successors: []
---
0xcc JUMPDEST
0xcd PUSH1 0x40
0xcf DUP1
0xd0 MLOAD
0xd1 SWAP2
0xd2 DUP3
0xd3 MSTORE
0xd4 MLOAD
0xd5 SWAP1
0xd6 DUP2
0xd7 SWAP1
0xd8 SUB
0xd9 PUSH1 0x20
0xdb ADD
0xdc SWAP1
0xdd RETURN
---
0xcc: JUMPDEST 
0xcd: V53 = 0x40
0xd0: V54 = M[0x40]
0xd3: M[V54] = S0
0xd4: V55 = M[0x40]
0xd8: V56 = SUB V54 V55
0xd9: V57 = 0x20
0xdb: V58 = ADD 0x20 V56
0xdd: RETURN V55 V58
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0xde
[0xde:0xe5]
---
Predecessors: [0x40]
Successors: [0xe6, 0xea]
---
0xde JUMPDEST
0xdf CALLVALUE
0xe0 DUP1
0xe1 ISZERO
0xe2 PUSH2 0xea
0xe5 JUMPI
---
0xde: JUMPDEST 
0xdf: V59 = CALLVALUE
0xe1: V60 = ISZERO V59
0xe2: V61 = 0xea
0xe5: JUMPI 0xea V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V59]
Exit stack: [V11, V59]

================================

Block 0xe6
[0xe6:0xe9]
---
Predecessors: [0xde]
Successors: []
---
0xe6 PUSH1 0x0
0xe8 DUP1
0xe9 REVERT
---
0xe6: V62 = 0x0
0xe9: REVERT 0x0 0x0
---
Entry stack: [V11, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V59]

================================

Block 0xea
[0xea:0xf2]
---
Predecessors: [0xde]
Successors: [0x19b]
---
0xea JUMPDEST
0xeb POP
0xec PUSH2 0x9c
0xef PUSH2 0x19b
0xf2 JUMP
---
0xea: JUMPDEST 
0xec: V63 = 0x9c
0xef: V64 = 0x19b
0xf2: JUMP 0x19b
---
Entry stack: [V11, V59]
Stack pops: 1
Stack additions: [0x9c]
Exit stack: [V11, 0x9c]

================================

Block 0xf3
[0xf3:0xfa]
---
Predecessors: [0x4b]
Successors: [0xfb, 0xff]
---
0xf3 JUMPDEST
0xf4 CALLVALUE
0xf5 DUP1
0xf6 ISZERO
0xf7 PUSH2 0xff
0xfa JUMPI
---
0xf3: JUMPDEST 
0xf4: V65 = CALLVALUE
0xf6: V66 = ISZERO V65
0xf7: V67 = 0xff
0xfa: JUMPI 0xff V66
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V65]
Exit stack: [V11, V65]

================================

Block 0xfb
[0xfb:0xfe]
---
Predecessors: [0xf3]
Successors: []
---
0xfb PUSH1 0x0
0xfd DUP1
0xfe REVERT
---
0xfb: V68 = 0x0
0xfe: REVERT 0x0 0x0
---
Entry stack: [V11, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V65]

================================

Block 0xff
[0xff:0x107]
---
Predecessors: [0xf3]
Successors: [0x1ef]
---
0xff JUMPDEST
0x100 POP
0x101 PUSH2 0x108
0x104 PUSH2 0x1ef
0x107 JUMP
---
0xff: JUMPDEST 
0x101: V69 = 0x108
0x104: V70 = 0x1ef
0x107: JUMP 0x1ef
---
Entry stack: [V11, V65]
Stack pops: 1
Stack additions: [0x108]
Exit stack: [V11, 0x108]

================================

Block 0x108
[0x108:0x130]
---
Predecessors: [0x1ef]
Successors: []
---
0x108 JUMPDEST
0x109 PUSH1 0x40
0x10b DUP1
0x10c MLOAD
0x10d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x122 SWAP1
0x123 SWAP3
0x124 AND
0x125 DUP3
0x126 MSTORE
0x127 MLOAD
0x128 SWAP1
0x129 DUP2
0x12a SWAP1
0x12b SUB
0x12c PUSH1 0x20
0x12e ADD
0x12f SWAP1
0x130 RETURN
---
0x108: JUMPDEST 
0x109: V71 = 0x40
0x10c: V72 = M[0x40]
0x10d: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x124: V74 = AND V135 0xffffffffffffffffffffffffffffffffffffffff
0x126: M[V72] = V74
0x127: V75 = M[0x40]
0x12b: V76 = SUB V72 V75
0x12c: V77 = 0x20
0x12e: V78 = ADD 0x20 V76
0x130: RETURN V75 V78
---
Entry stack: [V11, 0x108, V135]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x108]

================================

Block 0x131
[0x131:0x138]
---
Predecessors: [0x56]
Successors: [0x139, 0x13d]
---
0x131 JUMPDEST
0x132 CALLVALUE
0x133 DUP1
0x134 ISZERO
0x135 PUSH2 0x13d
0x138 JUMPI
---
0x131: JUMPDEST 
0x132: V79 = CALLVALUE
0x134: V80 = ISZERO V79
0x135: V81 = 0x13d
0x138: JUMPI 0x13d V80
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V79]
Exit stack: [V11, V79]

================================

Block 0x139
[0x139:0x13c]
---
Predecessors: [0x131]
Successors: []
---
0x139 PUSH1 0x0
0x13b DUP1
0x13c REVERT
---
0x139: V82 = 0x0
0x13c: REVERT 0x0 0x0
---
Entry stack: [V11, V79]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V79]

================================

Block 0x13d
[0x13d:0x15e]
---
Predecessors: [0x131]
Successors: [0x20b]
---
0x13d JUMPDEST
0x13e POP
0x13f PUSH2 0x9c
0x142 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x157 PUSH1 0x4
0x159 CALLDATALOAD
0x15a AND
0x15b PUSH2 0x20b
0x15e JUMP
---
0x13d: JUMPDEST 
0x13f: V83 = 0x9c
0x142: V84 = 0xffffffffffffffffffffffffffffffffffffffff
0x157: V85 = 0x4
0x159: V86 = CALLDATALOAD 0x4
0x15a: V87 = AND V86 0xffffffffffffffffffffffffffffffffffffffff
0x15b: V88 = 0x20b
0x15e: JUMP 0x20b
---
Entry stack: [V11, V79]
Stack pops: 1
Stack additions: [0x9c, V87]
Exit stack: [V11, 0x9c, V87]

================================

Block 0x15f
[0x15f:0x166]
---
Predecessors: [0x61]
Successors: [0x167, 0x16b]
---
0x15f JUMPDEST
0x160 CALLVALUE
0x161 DUP1
0x162 ISZERO
0x163 PUSH2 0x16b
0x166 JUMPI
---
0x15f: JUMPDEST 
0x160: V89 = CALLVALUE
0x162: V90 = ISZERO V89
0x163: V91 = 0x16b
0x166: JUMPI 0x16b V90
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V89]
Exit stack: [V11, V89]

================================

Block 0x167
[0x167:0x16a]
---
Predecessors: [0x15f]
Successors: []
---
0x167 PUSH1 0x0
0x169 DUP1
0x16a REVERT
---
0x167: V92 = 0x0
0x16a: REVERT 0x0 0x0
---
Entry stack: [V11, V89]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V89]

================================

Block 0x16b
[0x16b:0x173]
---
Predecessors: [0x15f]
Successors: [0x261]
---
0x16b JUMPDEST
0x16c POP
0x16d PUSH2 0xcc
0x170 PUSH2 0x261
0x173 JUMP
---
0x16b: JUMPDEST 
0x16d: V93 = 0xcc
0x170: V94 = 0x261
0x173: JUMP 0x261
---
Entry stack: [V11, V89]
Stack pops: 1
Stack additions: [0xcc]
Exit stack: [V11, 0xcc]

================================

Block 0x174
[0x174:0x17b]
---
Predecessors: [0x6c]
Successors: [0x17c, 0x180]
---
0x174 JUMPDEST
0x175 CALLVALUE
0x176 DUP1
0x177 ISZERO
0x178 PUSH2 0x180
0x17b JUMPI
---
0x174: JUMPDEST 
0x175: V95 = CALLVALUE
0x177: V96 = ISZERO V95
0x178: V97 = 0x180
0x17b: JUMPI 0x180 V96
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V95]
Exit stack: [V11, V95]

================================

Block 0x17c
[0x17c:0x17f]
---
Predecessors: [0x174]
Successors: []
---
0x17c PUSH1 0x0
0x17e DUP1
0x17f REVERT
---
0x17c: V98 = 0x0
0x17f: REVERT 0x0 0x0
---
Entry stack: [V11, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V95]

================================

Block 0x180
[0x180:0x188]
---
Predecessors: [0x174]
Successors: [0x266]
---
0x180 JUMPDEST
0x181 POP
0x182 PUSH2 0x9c
0x185 PUSH2 0x266
0x188 JUMP
---
0x180: JUMPDEST 
0x182: V99 = 0x9c
0x185: V100 = 0x266
0x188: JUMP 0x266
---
Entry stack: [V11, V95]
Stack pops: 1
Stack additions: [0x9c]
Exit stack: [V11, 0x9c]

================================

Block 0x189
[0x189:0x19a]
---
Predecessors: [0xaa]
Successors: [0xcc]
---
0x189 JUMPDEST
0x18a PUSH1 0x2
0x18c PUSH1 0x20
0x18e MSTORE
0x18f PUSH1 0x0
0x191 SWAP1
0x192 DUP2
0x193 MSTORE
0x194 PUSH1 0x40
0x196 SWAP1
0x197 SHA3
0x198 SLOAD
0x199 DUP2
0x19a JUMP
---
0x189: JUMPDEST 
0x18a: V101 = 0x2
0x18c: V102 = 0x20
0x18e: M[0x20] = 0x2
0x18f: V103 = 0x0
0x193: M[0x0] = V51
0x194: V104 = 0x40
0x197: V105 = SHA3 0x0 0x40
0x198: V106 = S[V105]
0x19a: JUMP 0xcc
---
Entry stack: [V11, 0xcc, V51]
Stack pops: 2
Stack additions: [S1, V106]
Exit stack: [V11, 0xcc, V106]

================================

Block 0x19b
[0x19b:0x1ba]
---
Predecessors: [0xea]
Successors: [0x1bb, 0x1bf]
---
0x19b JUMPDEST
0x19c PUSH1 0x0
0x19e SLOAD
0x19f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b4 AND
0x1b5 CALLER
0x1b6 EQ
0x1b7 PUSH2 0x1bf
0x1ba JUMPI
---
0x19b: JUMPDEST 
0x19c: V107 = 0x0
0x19e: V108 = S[0x0]
0x19f: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1b5: V111 = CALLER
0x1b6: V112 = EQ V111 V110
0x1b7: V113 = 0x1bf
0x1ba: JUMPI 0x1bf V112
---
Entry stack: [V11, 0x9c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c]

================================

Block 0x1bb
[0x1bb:0x1be]
---
Predecessors: [0x19b]
Successors: []
---
0x1bb PUSH1 0x0
0x1bd DUP1
0x1be REVERT
---
0x1bb: V114 = 0x0
0x1be: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c]

================================

Block 0x1bf
[0x1bf:0x1e2]
---
Predecessors: [0x19b]
Successors: [0x1e3, 0x1ec]
---
0x1bf JUMPDEST
0x1c0 PUSH1 0x40
0x1c2 MLOAD
0x1c3 CALLER
0x1c4 SWAP1
0x1c5 ADDRESS
0x1c6 BALANCE
0x1c7 DUP1
0x1c8 ISZERO
0x1c9 PUSH2 0x8fc
0x1cc MUL
0x1cd SWAP2
0x1ce PUSH1 0x0
0x1d0 DUP2
0x1d1 DUP2
0x1d2 DUP2
0x1d3 DUP6
0x1d4 DUP9
0x1d5 DUP9
0x1d6 CALL
0x1d7 SWAP4
0x1d8 POP
0x1d9 POP
0x1da POP
0x1db POP
0x1dc ISZERO
0x1dd DUP1
0x1de ISZERO
0x1df PUSH2 0x1ec
0x1e2 JUMPI
---
0x1bf: JUMPDEST 
0x1c0: V115 = 0x40
0x1c2: V116 = M[0x40]
0x1c3: V117 = CALLER
0x1c5: V118 = ADDRESS
0x1c6: V119 = BALANCE V118
0x1c8: V120 = ISZERO V119
0x1c9: V121 = 0x8fc
0x1cc: V122 = MUL 0x8fc V120
0x1ce: V123 = 0x0
0x1d6: V124 = CALL V122 V117 V119 V116 0x0 V116 0x0
0x1dc: V125 = ISZERO V124
0x1de: V126 = ISZERO V125
0x1df: V127 = 0x1ec
0x1e2: JUMPI 0x1ec V126
---
Entry stack: [V11, 0x9c]
Stack pops: 0
Stack additions: [V125]
Exit stack: [V11, 0x9c, V125]

================================

Block 0x1e3
[0x1e3:0x1eb]
---
Predecessors: [0x1bf]
Successors: []
---
0x1e3 RETURNDATASIZE
0x1e4 PUSH1 0x0
0x1e6 DUP1
0x1e7 RETURNDATACOPY
0x1e8 RETURNDATASIZE
0x1e9 PUSH1 0x0
0x1eb REVERT
---
0x1e3: V128 = RETURNDATASIZE
0x1e4: V129 = 0x0
0x1e7: RETURNDATACOPY 0x0 0x0 V128
0x1e8: V130 = RETURNDATASIZE
0x1e9: V131 = 0x0
0x1eb: REVERT 0x0 V130
---
Entry stack: [V11, 0x9c, V125]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c, V125]

================================

Block 0x1ec
[0x1ec:0x1ee]
---
Predecessors: [0x1bf, 0x281]
Successors: [0x9c]
---
0x1ec JUMPDEST
0x1ed POP
0x1ee JUMP
---
0x1ec: JUMPDEST 
0x1ee: JUMP 0x9c
---
Entry stack: [V11, 0x9c, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ef
[0x1ef:0x20a]
---
Predecessors: [0xff]
Successors: [0x108]
---
0x1ef JUMPDEST
0x1f0 PUSH1 0x1
0x1f2 SLOAD
0x1f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x208 AND
0x209 DUP2
0x20a JUMP
---
0x1ef: JUMPDEST 
0x1f0: V132 = 0x1
0x1f2: V133 = S[0x1]
0x1f3: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x208: V135 = AND 0xffffffffffffffffffffffffffffffffffffffff V133
0x20a: JUMP 0x108
---
Entry stack: [V11, 0x108]
Stack pops: 1
Stack additions: [S0, V135]
Exit stack: [V11, 0x108, V135]

================================

Block 0x20b
[0x20b:0x220]
---
Predecessors: [0x13d]
Successors: [0x221, 0x225]
---
0x20b JUMPDEST
0x20c CALLER
0x20d PUSH1 0x0
0x20f SWAP1
0x210 DUP2
0x211 MSTORE
0x212 PUSH1 0x2
0x214 PUSH1 0x20
0x216 MSTORE
0x217 PUSH1 0x40
0x219 DUP2
0x21a SHA3
0x21b SLOAD
0x21c GT
0x21d PUSH2 0x225
0x220 JUMPI
---
0x20b: JUMPDEST 
0x20c: V136 = CALLER
0x20d: V137 = 0x0
0x211: M[0x0] = V136
0x212: V138 = 0x2
0x214: V139 = 0x20
0x216: M[0x20] = 0x2
0x217: V140 = 0x40
0x21a: V141 = SHA3 0x0 0x40
0x21b: V142 = S[V141]
0x21c: V143 = GT V142 0x0
0x21d: V144 = 0x225
0x220: JUMPI 0x225 V143
---
Entry stack: [V11, 0x9c, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c, V87]

================================

Block 0x221
[0x221:0x224]
---
Predecessors: [0x20b]
Successors: []
---
0x221 PUSH1 0x0
0x223 DUP1
0x224 REVERT
---
0x221: V145 = 0x0
0x224: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9c, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c, V87]

================================

Block 0x225
[0x225:0x260]
---
Predecessors: [0x20b]
Successors: [0x9c]
---
0x225 JUMPDEST
0x226 PUSH1 0x1
0x228 DUP1
0x229 SLOAD
0x22a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23f NOT
0x240 AND
0x241 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x256 SWAP3
0x257 SWAP1
0x258 SWAP3
0x259 AND
0x25a SWAP2
0x25b SWAP1
0x25c SWAP2
0x25d OR
0x25e SWAP1
0x25f SSTORE
0x260 JUMP
---
0x225: JUMPDEST 
0x226: V146 = 0x1
0x229: V147 = S[0x1]
0x22a: V148 = 0xffffffffffffffffffffffffffffffffffffffff
0x23f: V149 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x240: V150 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V147
0x241: V151 = 0xffffffffffffffffffffffffffffffffffffffff
0x259: V152 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x25d: V153 = OR V152 V150
0x25f: S[0x1] = V153
0x260: JUMP 0x9c
---
Entry stack: [V11, 0x9c, V87]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x261
[0x261:0x265]
---
Predecessors: [0x16b]
Successors: [0xcc]
---
0x261 JUMPDEST
0x262 ADDRESS
0x263 BALANCE
0x264 SWAP1
0x265 JUMP
---
0x261: JUMPDEST 
0x262: V154 = ADDRESS
0x263: V155 = BALANCE V154
0x265: JUMP 0xcc
---
Entry stack: [V11, 0xcc]
Stack pops: 1
Stack additions: [V155]
Exit stack: [V11, V155]

================================

Block 0x266
[0x266:0x27c]
---
Predecessors: [0x180]
Successors: [0x27d, 0x281]
---
0x266 JUMPDEST
0x267 CALLER
0x268 PUSH1 0x0
0x26a SWAP1
0x26b DUP2
0x26c MSTORE
0x26d PUSH1 0x2
0x26f PUSH1 0x20
0x271 MSTORE
0x272 PUSH1 0x40
0x274 DUP2
0x275 SHA3
0x276 SLOAD
0x277 DUP2
0x278 LT
0x279 PUSH2 0x281
0x27c JUMPI
---
0x266: JUMPDEST 
0x267: V156 = CALLER
0x268: V157 = 0x0
0x26c: M[0x0] = V156
0x26d: V158 = 0x2
0x26f: V159 = 0x20
0x271: M[0x20] = 0x2
0x272: V160 = 0x40
0x275: V161 = SHA3 0x0 0x40
0x276: V162 = S[V161]
0x278: V163 = LT 0x0 V162
0x279: V164 = 0x281
0x27c: JUMPI 0x281 V163
---
Entry stack: [V11, 0x9c]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x9c, 0x0]

================================

Block 0x27d
[0x27d:0x280]
---
Predecessors: [0x266]
Successors: []
---
0x27d PUSH1 0x0
0x27f DUP1
0x280 REVERT
---
0x27d: V165 = 0x0
0x280: REVERT 0x0 0x0
---
Entry stack: [V11, 0x9c, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c, 0x0]

================================

Block 0x281
[0x281:0x29d]
---
Predecessors: [0x266]
Successors: [0x1ec, 0x29e]
---
0x281 JUMPDEST
0x282 POP
0x283 CALLER
0x284 PUSH1 0x0
0x286 SWAP1
0x287 DUP2
0x288 MSTORE
0x289 PUSH1 0x2
0x28b PUSH1 0x20
0x28d MSTORE
0x28e PUSH1 0x40
0x290 SWAP1
0x291 SHA3
0x292 SLOAD
0x293 PUSH1 0xa
0x295 DUP2
0x296 DIV
0x297 SWAP1
0x298 DUP2
0x299 GT
0x29a PUSH2 0x1ec
0x29d JUMPI
---
0x281: JUMPDEST 
0x283: V166 = CALLER
0x284: V167 = 0x0
0x288: M[0x0] = V166
0x289: V168 = 0x2
0x28b: V169 = 0x20
0x28d: M[0x20] = 0x2
0x28e: V170 = 0x40
0x291: V171 = SHA3 0x0 0x40
0x292: V172 = S[V171]
0x293: V173 = 0xa
0x296: V174 = DIV V172 0xa
0x299: V175 = GT V174 V172
0x29a: V176 = 0x1ec
0x29d: JUMPI 0x1ec V175
---
Entry stack: [V11, 0x9c, 0x0]
Stack pops: 1
Stack additions: [V174]
Exit stack: [V11, 0x9c, V174]

================================

Block 0x29e
[0x29e:0x2ce]
---
Predecessors: [0x281]
Successors: [0x2cf, 0x2d8]
---
0x29e CALLER
0x29f PUSH1 0x0
0x2a1 DUP2
0x2a2 DUP2
0x2a3 MSTORE
0x2a4 PUSH1 0x2
0x2a6 PUSH1 0x20
0x2a8 MSTORE
0x2a9 PUSH1 0x40
0x2ab DUP1
0x2ac DUP3
0x2ad SHA3
0x2ae DUP3
0x2af SWAP1
0x2b0 SSTORE
0x2b1 MLOAD
0x2b2 DUP4
0x2b3 ISZERO
0x2b4 PUSH2 0x8fc
0x2b7 MUL
0x2b8 SWAP2
0x2b9 DUP5
0x2ba SWAP2
0x2bb SWAP1
0x2bc DUP2
0x2bd DUP2
0x2be DUP2
0x2bf DUP6
0x2c0 DUP9
0x2c1 DUP9
0x2c2 CALL
0x2c3 SWAP4
0x2c4 POP
0x2c5 POP
0x2c6 POP
0x2c7 POP
0x2c8 ISZERO
0x2c9 DUP1
0x2ca ISZERO
0x2cb PUSH2 0x2d8
0x2ce JUMPI
---
0x29e: V177 = CALLER
0x29f: V178 = 0x0
0x2a3: M[0x0] = V177
0x2a4: V179 = 0x2
0x2a6: V180 = 0x20
0x2a8: M[0x20] = 0x2
0x2a9: V181 = 0x40
0x2ad: V182 = SHA3 0x0 0x40
0x2b0: S[V182] = 0x0
0x2b1: V183 = M[0x40]
0x2b3: V184 = ISZERO V174
0x2b4: V185 = 0x8fc
0x2b7: V186 = MUL 0x8fc V184
0x2c2: V187 = CALL V186 V177 V174 V183 0x0 V183 0x0
0x2c8: V188 = ISZERO V187
0x2ca: V189 = ISZERO V188
0x2cb: V190 = 0x2d8
0x2ce: JUMPI 0x2d8 V189
---
Entry stack: [V11, 0x9c, V174]
Stack pops: 1
Stack additions: [S0, V188]
Exit stack: [V11, 0x9c, V174, V188]

================================

Block 0x2cf
[0x2cf:0x2d7]
---
Predecessors: [0x29e]
Successors: []
---
0x2cf RETURNDATASIZE
0x2d0 PUSH1 0x0
0x2d2 DUP1
0x2d3 RETURNDATACOPY
0x2d4 RETURNDATASIZE
0x2d5 PUSH1 0x0
0x2d7 REVERT
---
0x2cf: V191 = RETURNDATASIZE
0x2d0: V192 = 0x0
0x2d3: RETURNDATACOPY 0x0 0x0 V191
0x2d4: V193 = RETURNDATASIZE
0x2d5: V194 = 0x0
0x2d7: REVERT 0x0 V193
---
Entry stack: [V11, 0x9c, V174, V188]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x9c, V174, V188]

================================

Block 0x2d8
[0x2d8:0x2db]
---
Predecessors: [0x29e]
Successors: [0x9c]
---
0x2d8 JUMPDEST
0x2d9 POP
0x2da POP
0x2db JUMP
---
0x2d8: JUMPDEST 
0x2db: JUMP 0x9c
---
Entry stack: [V11, 0x9c, V174, V188]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x2dc
[0x2dc:0x307]
---
Predecessors: []
Successors: []
---
0x2dc STOP
0x2dd LOG1
0x2de PUSH6 0x627a7a723058
0x2e5 SHA3
0x2e6 MISSING 0xd2
0x2e7 EXTCODEHASH
0x2e8 SIGNEXTEND
0x2e9 MISSING 0x5e
0x2ea MISSING 0xc9
0x2eb MISSING 0xc9
0x2ec PUSH5 0x140170112e
0x2f2 DUP8
0x2f3 MISSING 0x4c
0x2f4 POP
0x2f5 SAR
0x2f6 MISSING 0xf8
0x2f7 MISSING 0xc3
0x2f8 MISSING 0xdf
0x2f9 PC
0x2fa SHA3
0x2fb MISSING 0xda
0x2fc MISSING 0xfc
0x2fd SHR
0x2fe SWAP16
0x2ff SAR
0x300 MISSING 0xc
0x301 MISSING 0x5e
0x302 MISSING 0xaa
0x303 MISSING 0xf8
0x304 EXTCODECOPY
0x305 MISSING 0x5c
0x306 STOP
0x307 MISSING 0x29
---
0x2dc: STOP 
0x2dd: LOG S0 S1 S2
0x2de: V195 = 0x627a7a723058
0x2e5: V196 = SHA3 0x627a7a723058 S3
0x2e6: MISSING 0xd2
0x2e7: V197 = EXTCODEHASH S0
0x2e8: V198 = SIGNEXTEND V197 S1
0x2e9: MISSING 0x5e
0x2ea: MISSING 0xc9
0x2eb: MISSING 0xc9
0x2ec: V199 = 0x140170112e
0x2f3: MISSING 0x4c
0x2f5: V200 = SAR S1 S2
0x2f6: MISSING 0xf8
0x2f7: MISSING 0xc3
0x2f8: MISSING 0xdf
0x2f9: V201 = PC
0x2fa: V202 = SHA3 V201 S0
0x2fb: MISSING 0xda
0x2fc: MISSING 0xfc
0x2fd: V203 = SHR S0 S1
0x2ff: V204 = SAR S17 S2
0x300: MISSING 0xc
0x301: MISSING 0x5e
0x302: MISSING 0xaa
0x303: MISSING 0xf8
0x304: EXTCODECOPY S0 S1 S2 S3
0x305: MISSING 0x5c
0x306: STOP 
0x307: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V196, V198, S6, 0x140170112e, S0, S1, S2, S3, S4, S5, S6, V200, V202, V204, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, V203]
Exit stack: []

================================

Function 0:
Public function signature: 0x1f6d4942
Entry block: 0x9e
Exit block: 0xcc
Body: 0x9e, 0xa6, 0xaa, 0xcc, 0x189

Function 1:
Public function signature: 0x2b8f2042
Entry block: 0xde
Exit block: 0x9c
Body: 0x9c, 0xde, 0xe6, 0xea, 0x19b, 0x1bb, 0x1bf, 0x1e3, 0x1ec

Function 2:
Public function signature: 0x8da5cb5b
Entry block: 0xf3
Exit block: 0x108
Body: 0xf3, 0xfb, 0xff, 0x108, 0x1ef

Function 3:
Public function signature: 0xa6f9dae1
Entry block: 0x131
Exit block: 0x9c
Body: 0x9c, 0x131, 0x139, 0x13d, 0x20b, 0x221, 0x225

Function 4:
Public function signature: 0xdd1dffb7
Entry block: 0x15f
Exit block: 0xcc
Body: 0xcc, 0x15f, 0x167, 0x16b, 0x261

Function 5:
Public function signature: 0xe9fad8ee
Entry block: 0x174
Exit block: 0x9c
Body: 0x9c, 0x174, 0x17c, 0x180, 0x1ec, 0x266, 0x27d, 0x281, 0x29e, 0x2cf, 0x2d8

Function 6:
Public fallback function
Entry block: 0x77
Exit block: 0x9c
Body: 0x77, 0x87, 0x9c

