Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x41c0e1b5
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x41c0e1b5
0x3c: V13 = EQ 0x41c0e1b5 V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x84]
---
0x41 DUP1
0x42 PUSH4 0x4f057506
0x47 EQ
0x48 PUSH2 0x84
0x4b JUMPI
---
0x42: V15 = 0x4f057506
0x47: V16 = EQ 0x4f057506 V11
0x48: V17 = 0x84
0x4b: JUMPI 0x84 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xad]
---
0x4c DUP1
0x4d PUSH4 0x5f66d2a9
0x52 EQ
0x53 PUSH2 0xad
0x56 JUMPI
---
0x4d: V18 = 0x5f66d2a9
0x52: V19 = EQ 0x5f66d2a9 V11
0x53: V20 = 0xad
0x56: JUMPI 0xad V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xef]
---
0x57 DUP1
0x58 PUSH4 0xa6f9dae1
0x5d EQ
0x5e PUSH2 0xef
0x61 JUMPI
---
0x58: V21 = 0xa6f9dae1
0x5d: V22 = EQ 0xa6f9dae1 V11
0x5e: V23 = 0xef
0x61: JUMPI 0xef V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x128]
---
0x62 DUP1
0x63 PUSH4 0xd4e93292
0x68 EQ
0x69 PUSH2 0x128
0x6c JUMPI
---
0x63: V24 = 0xd4e93292
0x68: V25 = EQ 0xd4e93292 V11
0x69: V26 = 0x128
0x6c: JUMPI 0x128 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x75]
---
Predecessors: [0xd]
Successors: [0x76, 0x7a]
---
0x6f JUMPDEST
0x70 CALLVALUE
0x71 ISZERO
0x72 PUSH2 0x7a
0x75 JUMPI
---
0x6f: JUMPDEST 
0x70: V27 = CALLVALUE
0x71: V28 = ISZERO V27
0x72: V29 = 0x7a
0x75: JUMPI 0x7a V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x76
[0x76:0x79]
---
Predecessors: [0x6f]
Successors: []
---
0x76 PUSH1 0x0
0x78 DUP1
0x79 REVERT
---
0x76: V30 = 0x0
0x79: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x81]
---
Predecessors: [0x6f]
Successors: [0x132]
---
0x7a JUMPDEST
0x7b PUSH2 0x82
0x7e PUSH2 0x132
0x81 JUMP
---
0x7a: JUMPDEST 
0x7b: V31 = 0x82
0x7e: V32 = 0x132
0x81: JUMP 0x132
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V11, 0x82]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: []
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x84
[0x84:0x8a]
---
Predecessors: [0x41]
Successors: [0x8b, 0x8f]
---
0x84 JUMPDEST
0x85 CALLVALUE
0x86 ISZERO
0x87 PUSH2 0x8f
0x8a JUMPI
---
0x84: JUMPDEST 
0x85: V33 = CALLVALUE
0x86: V34 = ISZERO V33
0x87: V35 = 0x8f
0x8a: JUMPI 0x8f V34
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8b
[0x8b:0x8e]
---
Predecessors: [0x84]
Successors: []
---
0x8b PUSH1 0x0
0x8d DUP1
0x8e REVERT
---
0x8b: V36 = 0x0
0x8e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8f
[0x8f:0x96]
---
Predecessors: [0x84]
Successors: [0x1a6]
---
0x8f JUMPDEST
0x90 PUSH2 0x97
0x93 PUSH2 0x1a6
0x96 JUMP
---
0x8f: JUMPDEST 
0x90: V37 = 0x97
0x93: V38 = 0x1a6
0x96: JUMP 0x1a6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x97]
Exit stack: [V11, 0x97]

================================

Block 0x97
[0x97:0xac]
---
Predecessors: [0x1a6]
Successors: []
---
0x97 JUMPDEST
0x98 PUSH1 0x40
0x9a MLOAD
0x9b DUP1
0x9c DUP3
0x9d DUP2
0x9e MSTORE
0x9f PUSH1 0x20
0xa1 ADD
0xa2 SWAP2
0xa3 POP
0xa4 POP
0xa5 PUSH1 0x40
0xa7 MLOAD
0xa8 DUP1
0xa9 SWAP2
0xaa SUB
0xab SWAP1
0xac RETURN
---
0x97: JUMPDEST 
0x98: V39 = 0x40
0x9a: V40 = M[0x40]
0x9e: M[V40] = V96
0x9f: V41 = 0x20
0xa1: V42 = ADD 0x20 V40
0xa5: V43 = 0x40
0xa7: V44 = M[0x40]
0xaa: V45 = SUB V42 V44
0xac: RETURN V44 V45
---
Entry stack: [V11, 0x97, V96]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x97]

================================

Block 0xad
[0xad:0xb3]
---
Predecessors: [0x4c]
Successors: [0xb4, 0xb8]
---
0xad JUMPDEST
0xae CALLVALUE
0xaf ISZERO
0xb0 PUSH2 0xb8
0xb3 JUMPI
---
0xad: JUMPDEST 
0xae: V46 = CALLVALUE
0xaf: V47 = ISZERO V46
0xb0: V48 = 0xb8
0xb3: JUMPI 0xb8 V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb4
[0xb4:0xb7]
---
Predecessors: [0xad]
Successors: []
---
0xb4 PUSH1 0x0
0xb6 DUP1
0xb7 REVERT
---
0xb4: V49 = 0x0
0xb7: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xec]
---
Predecessors: [0xad]
Successors: [0x1ac]
---
0xb8 JUMPDEST
0xb9 PUSH2 0xed
0xbc PUSH1 0x4
0xbe DUP1
0xbf DUP1
0xc0 CALLDATALOAD
0xc1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd6 AND
0xd7 SWAP1
0xd8 PUSH1 0x20
0xda ADD
0xdb SWAP1
0xdc SWAP2
0xdd SWAP1
0xde DUP1
0xdf CALLDATALOAD
0xe0 SWAP1
0xe1 PUSH1 0x20
0xe3 ADD
0xe4 SWAP1
0xe5 SWAP2
0xe6 SWAP1
0xe7 POP
0xe8 POP
0xe9 PUSH2 0x1ac
0xec JUMP
---
0xb8: JUMPDEST 
0xb9: V50 = 0xed
0xbc: V51 = 0x4
0xc0: V52 = CALLDATALOAD 0x4
0xc1: V53 = 0xffffffffffffffffffffffffffffffffffffffff
0xd6: V54 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xd8: V55 = 0x20
0xda: V56 = ADD 0x20 0x4
0xdf: V57 = CALLDATALOAD 0x24
0xe1: V58 = 0x20
0xe3: V59 = ADD 0x20 0x24
0xe9: V60 = 0x1ac
0xec: JUMP 0x1ac
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xed, V54, V57]
Exit stack: [V11, 0xed, V54, V57]

================================

Block 0xed
[0xed:0xee]
---
Predecessors: [0x207]
Successors: []
---
0xed JUMPDEST
0xee STOP
---
0xed: JUMPDEST 
0xee: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xef
[0xef:0xf5]
---
Predecessors: [0x57]
Successors: [0xf6, 0xfa]
---
0xef JUMPDEST
0xf0 CALLVALUE
0xf1 ISZERO
0xf2 PUSH2 0xfa
0xf5 JUMPI
---
0xef: JUMPDEST 
0xf0: V61 = CALLVALUE
0xf1: V62 = ISZERO V61
0xf2: V63 = 0xfa
0xf5: JUMPI 0xfa V62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf6
[0xf6:0xf9]
---
Predecessors: [0xef]
Successors: []
---
0xf6 PUSH1 0x0
0xf8 DUP1
0xf9 REVERT
---
0xf6: V64 = 0x0
0xf9: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfa
[0xfa:0x125]
---
Predecessors: [0xef]
Successors: [0x253]
---
0xfa JUMPDEST
0xfb PUSH2 0x126
0xfe PUSH1 0x4
0x100 DUP1
0x101 DUP1
0x102 CALLDATALOAD
0x103 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x118 AND
0x119 SWAP1
0x11a PUSH1 0x20
0x11c ADD
0x11d SWAP1
0x11e SWAP2
0x11f SWAP1
0x120 POP
0x121 POP
0x122 PUSH2 0x253
0x125 JUMP
---
0xfa: JUMPDEST 
0xfb: V65 = 0x126
0xfe: V66 = 0x4
0x102: V67 = CALLDATALOAD 0x4
0x103: V68 = 0xffffffffffffffffffffffffffffffffffffffff
0x118: V69 = AND 0xffffffffffffffffffffffffffffffffffffffff V67
0x11a: V70 = 0x20
0x11c: V71 = ADD 0x20 0x4
0x122: V72 = 0x253
0x125: JUMP 0x253
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x126, V69]
Exit stack: [V11, 0x126, V69]

================================

Block 0x126
[0x126:0x127]
---
Predecessors: [0x253]
Successors: []
---
0x126 JUMPDEST
0x127 STOP
---
0x126: JUMPDEST 
0x127: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x128
[0x128:0x12f]
---
Predecessors: [0x62]
Successors: [0x256]
---
0x128 JUMPDEST
0x129 PUSH2 0x130
0x12c PUSH2 0x256
0x12f JUMP
---
0x128: JUMPDEST 
0x129: V73 = 0x130
0x12c: V74 = 0x256
0x12f: JUMP 0x256
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x130]
Exit stack: [V11, 0x130]

================================

Block 0x130
[0x130:0x131]
---
Predecessors: [0x3e3]
Successors: []
---
0x130 JUMPDEST
0x131 STOP
---
0x130: JUMPDEST 
0x131: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x132
[0x132:0x188]
---
Predecessors: [0x7a]
Successors: [0x189, 0x18d]
---
0x132 JUMPDEST
0x133 PUSH1 0x0
0x135 DUP1
0x136 SWAP1
0x137 SLOAD
0x138 SWAP1
0x139 PUSH2 0x100
0x13c EXP
0x13d SWAP1
0x13e DIV
0x13f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x154 AND
0x155 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16a AND
0x16b CALLER
0x16c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x181 AND
0x182 EQ
0x183 ISZERO
0x184 ISZERO
0x185 PUSH2 0x18d
0x188 JUMPI
---
0x132: JUMPDEST 
0x133: V75 = 0x0
0x137: V76 = S[0x0]
0x139: V77 = 0x100
0x13c: V78 = EXP 0x100 0x0
0x13e: V79 = DIV V76 0x1
0x13f: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x154: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x155: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x16a: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x16b: V84 = CALLER
0x16c: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x181: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x182: V87 = EQ V86 V83
0x183: V88 = ISZERO V87
0x184: V89 = ISZERO V88
0x185: V90 = 0x18d
0x188: JUMPI 0x18d V89
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0x189
[0x189:0x18c]
---
Predecessors: [0x132]
Successors: []
---
0x189 PUSH1 0x0
0x18b DUP1
0x18c REVERT
---
0x189: V91 = 0x0
0x18c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0x18d
[0x18d:0x1a5]
---
Predecessors: [0x132]
Successors: []
---
0x18d JUMPDEST
0x18e CALLER
0x18f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a4 AND
0x1a5 SELFDESTRUCT
---
0x18d: JUMPDEST 
0x18e: V92 = CALLER
0x18f: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x1a5: SELFDESTRUCT V94
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0x1a6
[0x1a6:0x1ab]
---
Predecessors: [0x8f]
Successors: [0x97]
---
0x1a6 JUMPDEST
0x1a7 PUSH1 0x2
0x1a9 SLOAD
0x1aa DUP2
0x1ab JUMP
---
0x1a6: JUMPDEST 
0x1a7: V95 = 0x2
0x1a9: V96 = S[0x2]
0x1ab: JUMP 0x97
---
Entry stack: [V11, 0x97]
Stack pops: 1
Stack additions: [S0, V96]
Exit stack: [V11, 0x97, V96]

================================

Block 0x1ac
[0x1ac:0x202]
---
Predecessors: [0xb8]
Successors: [0x203, 0x207]
---
0x1ac JUMPDEST
0x1ad PUSH1 0x0
0x1af DUP1
0x1b0 SWAP1
0x1b1 SLOAD
0x1b2 SWAP1
0x1b3 PUSH2 0x100
0x1b6 EXP
0x1b7 SWAP1
0x1b8 DIV
0x1b9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ce AND
0x1cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e4 AND
0x1e5 CALLER
0x1e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fb AND
0x1fc EQ
0x1fd ISZERO
0x1fe ISZERO
0x1ff PUSH2 0x207
0x202 JUMPI
---
0x1ac: JUMPDEST 
0x1ad: V97 = 0x0
0x1b1: V98 = S[0x0]
0x1b3: V99 = 0x100
0x1b6: V100 = EXP 0x100 0x0
0x1b8: V101 = DIV V98 0x1
0x1b9: V102 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ce: V103 = AND 0xffffffffffffffffffffffffffffffffffffffff V101
0x1cf: V104 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e4: V105 = AND 0xffffffffffffffffffffffffffffffffffffffff V103
0x1e5: V106 = CALLER
0x1e6: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fb: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1fc: V109 = EQ V108 V105
0x1fd: V110 = ISZERO V109
0x1fe: V111 = ISZERO V110
0x1ff: V112 = 0x207
0x202: JUMPI 0x207 V111
---
Entry stack: [V11, 0xed, V54, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xed, V54, V57]

================================

Block 0x203
[0x203:0x206]
---
Predecessors: [0x1ac]
Successors: []
---
0x203 PUSH1 0x0
0x205 DUP1
0x206 REVERT
---
0x203: V113 = 0x0
0x206: REVERT 0x0 0x0
---
Entry stack: [V11, 0xed, V54, V57]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xed, V54, V57]

================================

Block 0x207
[0x207:0x252]
---
Predecessors: [0x1ac]
Successors: [0xed]
---
0x207 JUMPDEST
0x208 DUP1
0x209 PUSH1 0x2
0x20b DUP2
0x20c SWAP1
0x20d SSTORE
0x20e POP
0x20f DUP2
0x210 PUSH1 0x3
0x212 PUSH1 0x0
0x214 PUSH2 0x100
0x217 EXP
0x218 DUP2
0x219 SLOAD
0x21a DUP2
0x21b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x230 MUL
0x231 NOT
0x232 AND
0x233 SWAP1
0x234 DUP4
0x235 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24a AND
0x24b MUL
0x24c OR
0x24d SWAP1
0x24e SSTORE
0x24f POP
0x250 POP
0x251 POP
0x252 JUMP
---
0x207: JUMPDEST 
0x209: V114 = 0x2
0x20d: S[0x2] = V57
0x210: V115 = 0x3
0x212: V116 = 0x0
0x214: V117 = 0x100
0x217: V118 = EXP 0x100 0x0
0x219: V119 = S[0x3]
0x21b: V120 = 0xffffffffffffffffffffffffffffffffffffffff
0x230: V121 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x231: V122 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x232: V123 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V119
0x235: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x24a: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V54
0x24b: V126 = MUL V125 0x1
0x24c: V127 = OR V126 V123
0x24e: S[0x3] = V127
0x252: JUMP 0xed
---
Entry stack: [V11, 0xed, V54, V57]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x253
[0x253:0x255]
---
Predecessors: [0xfa]
Successors: [0x126]
---
0x253 JUMPDEST
0x254 POP
0x255 JUMP
---
0x253: JUMPDEST 
0x255: JUMP 0x126
---
Entry stack: [V11, 0x126, V69]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x256
[0x256:0x2a1]
---
Predecessors: [0x128]
Successors: [0x2a2, 0x3e3]
---
0x256 JUMPDEST
0x257 CALLER
0x258 PUSH1 0x1
0x25a PUSH1 0x0
0x25c PUSH2 0x100
0x25f EXP
0x260 DUP2
0x261 SLOAD
0x262 DUP2
0x263 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x278 MUL
0x279 NOT
0x27a AND
0x27b SWAP1
0x27c DUP4
0x27d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x292 AND
0x293 MUL
0x294 OR
0x295 SWAP1
0x296 SSTORE
0x297 POP
0x298 PUSH1 0x2
0x29a SLOAD
0x29b CALLVALUE
0x29c GT
0x29d ISZERO
0x29e PUSH2 0x3e3
0x2a1 JUMPI
---
0x256: JUMPDEST 
0x257: V128 = CALLER
0x258: V129 = 0x1
0x25a: V130 = 0x0
0x25c: V131 = 0x100
0x25f: V132 = EXP 0x100 0x0
0x261: V133 = S[0x1]
0x263: V134 = 0xffffffffffffffffffffffffffffffffffffffff
0x278: V135 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x279: V136 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x27a: V137 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V133
0x27d: V138 = 0xffffffffffffffffffffffffffffffffffffffff
0x292: V139 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x293: V140 = MUL V139 0x1
0x294: V141 = OR V140 V137
0x296: S[0x1] = V141
0x298: V142 = 0x2
0x29a: V143 = S[0x2]
0x29b: V144 = CALLVALUE
0x29c: V145 = GT V144 V143
0x29d: V146 = ISZERO V145
0x29e: V147 = 0x3e3
0x2a1: JUMPI 0x3e3 V146
---
Entry stack: [V11, 0x130]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x130]

================================

Block 0x2a2
[0x2a2:0x3e2]
---
Predecessors: [0x256]
Successors: [0x3e3]
---
0x2a2 PUSH1 0x3
0x2a4 PUSH1 0x0
0x2a6 SWAP1
0x2a7 SLOAD
0x2a8 SWAP1
0x2a9 PUSH2 0x100
0x2ac EXP
0x2ad SWAP1
0x2ae DIV
0x2af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2c4 AND
0x2c5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2da AND
0x2db PUSH1 0x40
0x2dd MLOAD
0x2de DUP1
0x2df DUP1
0x2e0 PUSH32 0x6c6f674576656e74282900000000000000000000000000000000000000000000
0x301 DUP2
0x302 MSTORE
0x303 POP
0x304 PUSH1 0xa
0x306 ADD
0x307 SWAP1
0x308 POP
0x309 PUSH1 0x40
0x30b MLOAD
0x30c DUP1
0x30d SWAP2
0x30e SUB
0x30f SWAP1
0x310 SHA3
0x311 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x32f SWAP1
0x330 DIV
0x331 PUSH1 0x40
0x333 MLOAD
0x334 DUP2
0x335 PUSH4 0xffffffff
0x33a AND
0x33b PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x359 MUL
0x35a DUP2
0x35b MSTORE
0x35c PUSH1 0x4
0x35e ADD
0x35f PUSH1 0x0
0x361 PUSH1 0x40
0x363 MLOAD
0x364 DUP1
0x365 DUP4
0x366 SUB
0x367 DUP2
0x368 DUP7
0x369 PUSH2 0x646e
0x36c GAS
0x36d SUB
0x36e DELEGATECALL
0x36f SWAP3
0x370 POP
0x371 POP
0x372 POP
0x373 POP
0x374 PUSH1 0x1
0x376 PUSH1 0x0
0x378 SWAP1
0x379 SLOAD
0x37a SWAP1
0x37b PUSH2 0x100
0x37e EXP
0x37f SWAP1
0x380 DIV
0x381 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x396 AND
0x397 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ac AND
0x3ad PUSH2 0x8fc
0x3b0 ADDRESS
0x3b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c6 AND
0x3c7 BALANCE
0x3c8 SWAP1
0x3c9 DUP2
0x3ca ISZERO
0x3cb MUL
0x3cc SWAP1
0x3cd PUSH1 0x40
0x3cf MLOAD
0x3d0 PUSH1 0x0
0x3d2 PUSH1 0x40
0x3d4 MLOAD
0x3d5 DUP1
0x3d6 DUP4
0x3d7 SUB
0x3d8 DUP2
0x3d9 DUP6
0x3da DUP9
0x3db DUP9
0x3dc CALL
0x3dd SWAP4
0x3de POP
0x3df POP
0x3e0 POP
0x3e1 POP
0x3e2 POP
---
0x2a2: V148 = 0x3
0x2a4: V149 = 0x0
0x2a7: V150 = S[0x3]
0x2a9: V151 = 0x100
0x2ac: V152 = EXP 0x100 0x0
0x2ae: V153 = DIV V150 0x1
0x2af: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x2c4: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x2c5: V156 = 0xffffffffffffffffffffffffffffffffffffffff
0x2da: V157 = AND 0xffffffffffffffffffffffffffffffffffffffff V155
0x2db: V158 = 0x40
0x2dd: V159 = M[0x40]
0x2e0: V160 = 0x6c6f674576656e74282900000000000000000000000000000000000000000000
0x302: M[V159] = 0x6c6f674576656e74282900000000000000000000000000000000000000000000
0x304: V161 = 0xa
0x306: V162 = ADD 0xa V159
0x309: V163 = 0x40
0x30b: V164 = M[0x40]
0x30e: V165 = SUB V162 V164
0x310: V166 = SHA3 V164 V165
0x311: V167 = 0x100000000000000000000000000000000000000000000000000000000
0x330: V168 = DIV V166 0x100000000000000000000000000000000000000000000000000000000
0x331: V169 = 0x40
0x333: V170 = M[0x40]
0x335: V171 = 0xffffffff
0x33a: V172 = AND 0xffffffff V168
0x33b: V173 = 0x100000000000000000000000000000000000000000000000000000000
0x359: V174 = MUL 0x100000000000000000000000000000000000000000000000000000000 V172
0x35b: M[V170] = V174
0x35c: V175 = 0x4
0x35e: V176 = ADD 0x4 V170
0x35f: V177 = 0x0
0x361: V178 = 0x40
0x363: V179 = M[0x40]
0x366: V180 = SUB V176 V179
0x369: V181 = 0x646e
0x36c: V182 = GAS
0x36d: V183 = SUB V182 0x646e
0x36e: V184 = DELEGATECALL V183 V157 V179 V180 V179 0x0
0x374: V185 = 0x1
0x376: V186 = 0x0
0x379: V187 = S[0x1]
0x37b: V188 = 0x100
0x37e: V189 = EXP 0x100 0x0
0x380: V190 = DIV V187 0x1
0x381: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x396: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x397: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ac: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V192
0x3ad: V195 = 0x8fc
0x3b0: V196 = ADDRESS
0x3b1: V197 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c6: V198 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x3c7: V199 = BALANCE V198
0x3ca: V200 = ISZERO V199
0x3cb: V201 = MUL V200 0x8fc
0x3cd: V202 = 0x40
0x3cf: V203 = M[0x40]
0x3d0: V204 = 0x0
0x3d2: V205 = 0x40
0x3d4: V206 = M[0x40]
0x3d7: V207 = SUB V203 V206
0x3dc: V208 = CALL V201 V194 V199 V206 V207 V206 0x0
---
Entry stack: [V11, 0x130]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x130]

================================

Block 0x3e3
[0x3e3:0x3e4]
---
Predecessors: [0x256, 0x2a2]
Successors: [0x130]
---
0x3e3 JUMPDEST
0x3e4 JUMP
---
0x3e3: JUMPDEST 
0x3e4: JUMP 0x130
---
Entry stack: [V11, 0x130]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3e5
[0x3e5:0x417]
---
Predecessors: []
Successors: []
---
0x3e5 STOP
0x3e6 LOG1
0x3e7 PUSH6 0x627a7a723058
0x3ee SHA3
0x3ef MISSING 0xbe
0x3f0 SWAP4
0x3f1 MISSING 0xab
0x3f2 MISSING 0xf7
0x3f3 PUSH20 0x388dc43b319040350c01c32742640c67923c3e76
0x408 OR
0x409 MISSING 0xde
0x40a PUSH13 0x9c42a1900029
---
0x3e5: STOP 
0x3e6: LOG S0 S1 S2
0x3e7: V209 = 0x627a7a723058
0x3ee: V210 = SHA3 0x627a7a723058 S3
0x3ef: MISSING 0xbe
0x3f1: MISSING 0xab
0x3f2: MISSING 0xf7
0x3f3: V211 = 0x388dc43b319040350c01c32742640c67923c3e76
0x408: V212 = OR 0x388dc43b319040350c01c32742640c67923c3e76 S0
0x409: MISSING 0xde
0x40a: V213 = 0x9c42a1900029
---
Entry stack: []
Stack pops: 0
Stack additions: [V210, S4, S1, S2, S3, S0, V212, 0x9c42a1900029]
Exit stack: []

================================

Function 0:
Public function signature: 0x41c0e1b5
Entry block: 0x6f
Exit block: 0x18d
Body: 0x6f, 0x76, 0x7a, 0x132, 0x189, 0x18d

Function 1:
Public function signature: 0x4f057506
Entry block: 0x84
Exit block: 0x97
Body: 0x84, 0x8b, 0x8f, 0x97, 0x1a6

Function 2:
Public function signature: 0x5f66d2a9
Entry block: 0xad
Exit block: 0xed
Body: 0xad, 0xb4, 0xb8, 0xed, 0x1ac, 0x203, 0x207

Function 3:
Public function signature: 0xa6f9dae1
Entry block: 0xef
Exit block: 0x126
Body: 0xef, 0xf6, 0xfa, 0x126, 0x253

Function 4:
Public function signature: 0xd4e93292
Entry block: 0x128
Exit block: 0x130
Body: 0x128, 0x130, 0x256, 0x2a2, 0x3e3

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

