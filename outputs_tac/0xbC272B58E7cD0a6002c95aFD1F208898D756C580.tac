Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x3f7e2120
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x3f7e2120
0x3b: V13 = EQ V11 0x3f7e2120
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x76]
---
0x40 DUP1
0x41 PUSH4 0xae4ab7ce
0x46 EQ
0x47 PUSH2 0x76
0x4a JUMPI
---
0x41: V15 = 0xae4ab7ce
0x46: V16 = EQ 0xae4ab7ce V11
0x47: V17 = 0x76
0x4a: JUMPI 0x76 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x8a]
---
0x4b DUP1
0x4c PUSH4 0xbea948c8
0x51 EQ
0x52 PUSH2 0x8a
0x55 JUMPI
---
0x4c: V18 = 0xbea948c8
0x51: V19 = EQ 0xbea948c8 V11
0x52: V20 = 0x8a
0x55: JUMPI 0x8a V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x92]
---
0x56 DUP1
0x57 PUSH4 0xdac47a71
0x5c EQ
0x5d PUSH2 0x92
0x60 JUMPI
---
0x57: V21 = 0xdac47a71
0x5c: V22 = EQ 0xdac47a71 V11
0x5d: V23 = 0x92
0x60: JUMPI 0x92 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x10b, 0x19a, 0x216]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x69]
---
Predecessors: [0xd]
Successors: [0x6a, 0x6e]
---
0x63 JUMPDEST
0x64 CALLVALUE
0x65 ISZERO
0x66 PUSH2 0x6e
0x69 JUMPI
---
0x63: JUMPDEST 
0x64: V24 = CALLVALUE
0x65: V25 = ISZERO V24
0x66: V26 = 0x6e
0x69: JUMPI 0x6e V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6a
[0x6a:0x6d]
---
Predecessors: [0x63]
Successors: []
---
0x6a PUSH1 0x0
0x6c DUP1
0x6d REVERT
---
0x6a: V27 = 0x0
0x6d: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6e
[0x6e:0x75]
---
Predecessors: [0x63]
Successors: [0xa8]
---
0x6e JUMPDEST
0x6f PUSH2 0x61
0x72 PUSH2 0xa8
0x75 JUMP
---
0x6e: JUMPDEST 
0x6f: V28 = 0x61
0x72: V29 = 0xa8
0x75: JUMP 0xa8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x76
[0x76:0x89]
---
Predecessors: [0x40]
Successors: [0x10d]
---
0x76 JUMPDEST
0x77 PUSH2 0x61
0x7a PUSH1 0x1
0x7c PUSH1 0xa0
0x7e PUSH1 0x2
0x80 EXP
0x81 SUB
0x82 PUSH1 0x4
0x84 CALLDATALOAD
0x85 AND
0x86 PUSH2 0x10d
0x89 JUMP
---
0x76: JUMPDEST 
0x77: V30 = 0x61
0x7a: V31 = 0x1
0x7c: V32 = 0xa0
0x7e: V33 = 0x2
0x80: V34 = EXP 0x2 0xa0
0x81: V35 = SUB 0x10000000000000000000000000000000000000000 0x1
0x82: V36 = 0x4
0x84: V37 = CALLDATALOAD 0x4
0x85: V38 = AND V37 0xffffffffffffffffffffffffffffffffffffffff
0x86: V39 = 0x10d
0x89: JUMP 0x10d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, V38]
Exit stack: [V11, 0x61, V38]

================================

Block 0x8a
[0x8a:0x91]
---
Predecessors: [0x4b]
Successors: [0x19d]
---
0x8a JUMPDEST
0x8b PUSH2 0x61
0x8e PUSH2 0x19d
0x91 JUMP
---
0x8a: JUMPDEST 
0x8b: V40 = 0x61
0x8e: V41 = 0x19d
0x91: JUMP 0x19d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x92
[0x92:0x98]
---
Predecessors: [0x56]
Successors: [0x99, 0x9d]
---
0x92 JUMPDEST
0x93 CALLVALUE
0x94 ISZERO
0x95 PUSH2 0x9d
0x98 JUMPI
---
0x92: JUMPDEST 
0x93: V42 = CALLVALUE
0x94: V43 = ISZERO V42
0x95: V44 = 0x9d
0x98: JUMPI 0x9d V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x99
[0x99:0x9c]
---
Predecessors: [0x92]
Successors: []
---
0x99 PUSH1 0x0
0x9b DUP1
0x9c REVERT
---
0x99: V45 = 0x0
0x9c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9d
[0x9d:0xa7]
---
Predecessors: [0x92]
Successors: [0x1fe]
---
0x9d JUMPDEST
0x9e PUSH2 0x61
0xa1 PUSH1 0x4
0xa3 CALLDATALOAD
0xa4 PUSH2 0x1fe
0xa7 JUMP
---
0x9d: JUMPDEST 
0x9e: V46 = 0x61
0xa1: V47 = 0x4
0xa3: V48 = CALLDATALOAD 0x4
0xa4: V49 = 0x1fe
0xa7: JUMP 0x1fe
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, V48]
Exit stack: [V11, 0x61, V48]

================================

Block 0xa8
[0xa8:0xc0]
---
Predecessors: [0x6e]
Successors: [0xc1, 0xd0]
---
0xa8 JUMPDEST
0xa9 PUSH1 0x0
0xab SLOAD
0xac CALLER
0xad PUSH1 0x1
0xaf PUSH1 0xa0
0xb1 PUSH1 0x2
0xb3 EXP
0xb4 SUB
0xb5 SWAP1
0xb6 DUP2
0xb7 AND
0xb8 SWAP2
0xb9 AND
0xba EQ
0xbb DUP1
0xbc ISZERO
0xbd PUSH2 0xd0
0xc0 JUMPI
---
0xa8: JUMPDEST 
0xa9: V50 = 0x0
0xab: V51 = S[0x0]
0xac: V52 = CALLER
0xad: V53 = 0x1
0xaf: V54 = 0xa0
0xb1: V55 = 0x2
0xb3: V56 = EXP 0x2 0xa0
0xb4: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb7: V58 = AND 0xffffffffffffffffffffffffffffffffffffffff V52
0xb9: V59 = AND V51 0xffffffffffffffffffffffffffffffffffffffff
0xba: V60 = EQ V59 V58
0xbc: V61 = ISZERO V60
0xbd: V62 = 0xd0
0xc0: JUMPI 0xd0 V61
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V60]
Exit stack: [V11, 0x61, V60]

================================

Block 0xc1
[0xc1:0xcf]
---
Predecessors: [0xa8]
Successors: [0xd0]
---
0xc1 POP
0xc2 PUSH1 0x1
0xc4 SLOAD
0xc5 PUSH1 0x1
0xc7 PUSH1 0xa0
0xc9 PUSH1 0x2
0xcb EXP
0xcc SUB
0xcd AND
0xce ISZERO
0xcf ISZERO
---
0xc2: V63 = 0x1
0xc4: V64 = S[0x1]
0xc5: V65 = 0x1
0xc7: V66 = 0xa0
0xc9: V67 = 0x2
0xcb: V68 = EXP 0x2 0xa0
0xcc: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcd: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0xce: V71 = ISZERO V70
0xcf: V72 = ISZERO V71
---
Entry stack: [V11, 0x61, V60]
Stack pops: 1
Stack additions: [V72]
Exit stack: [V11, 0x61, V72]

================================

Block 0xd0
[0xd0:0xd5]
---
Predecessors: [0xa8, 0xc1]
Successors: [0xd6, 0x10b]
---
0xd0 JUMPDEST
0xd1 ISZERO
0xd2 PUSH2 0x10b
0xd5 JUMPI
---
0xd0: JUMPDEST 
0xd1: V73 = ISZERO S0
0xd2: V74 = 0x10b
0xd5: JUMPI 0x10b V73
---
Entry stack: [V11, 0x61, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0xd6
[0xd6:0x10a]
---
Predecessors: [0xd0]
Successors: [0x10b]
---
0xd6 PUSH1 0x1
0xd8 DUP1
0xd9 SLOAD
0xda PUSH21 0xff0000000000000000000000000000000000000000
0xf0 NOT
0xf1 AND
0xf2 PUSH21 0x10000000000000000000000000000000000000000
0x108 OR
0x109 SWAP1
0x10a SSTORE
---
0xd6: V75 = 0x1
0xd9: V76 = S[0x1]
0xda: V77 = 0xff0000000000000000000000000000000000000000
0xf0: V78 = NOT 0xff0000000000000000000000000000000000000000
0xf1: V79 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V76
0xf2: V80 = 0x10000000000000000000000000000000000000000
0x108: V81 = OR 0x10000000000000000000000000000000000000000 V79
0x10a: S[0x1] = V81
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x10b
[0x10b:0x10c]
---
Predecessors: [0xd0, 0xd6, 0x1bc, 0x1c2]
Successors: [0x61]
---
0x10b JUMPDEST
0x10c JUMP
---
0x10b: JUMPDEST 
0x10c: JUMP 0x61
---
Entry stack: [V11, 0x61]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x10d
[0x10d:0x132]
---
Predecessors: [0x76]
Successors: [0x133, 0x13f]
---
0x10d JUMPDEST
0x10e PUSH1 0x1
0x110 SLOAD
0x111 PUSH21 0x10000000000000000000000000000000000000000
0x127 SWAP1
0x128 DIV
0x129 PUSH1 0xff
0x12b AND
0x12c ISZERO
0x12d DUP1
0x12e ISZERO
0x12f PUSH2 0x13f
0x132 JUMPI
---
0x10d: JUMPDEST 
0x10e: V82 = 0x1
0x110: V83 = S[0x1]
0x111: V84 = 0x10000000000000000000000000000000000000000
0x128: V85 = DIV V83 0x10000000000000000000000000000000000000000
0x129: V86 = 0xff
0x12b: V87 = AND 0xff V85
0x12c: V88 = ISZERO V87
0x12e: V89 = ISZERO V88
0x12f: V90 = 0x13f
0x132: JUMPI 0x13f V89
---
Entry stack: [V11, 0x61, V38]
Stack pops: 0
Stack additions: [V88]
Exit stack: [V11, 0x61, V38, V88]

================================

Block 0x133
[0x133:0x13e]
---
Predecessors: [0x10d]
Successors: [0x13f]
---
0x133 POP
0x134 PUSH8 0xde0b6b3a7640000
0x13d CALLVALUE
0x13e GT
---
0x134: V91 = 0xde0b6b3a7640000
0x13d: V92 = CALLVALUE
0x13e: V93 = GT V92 0xde0b6b3a7640000
---
Entry stack: [V11, 0x61, V38, V88]
Stack pops: 1
Stack additions: [V93]
Exit stack: [V11, 0x61, V38, V93]

================================

Block 0x13f
[0x13f:0x144]
---
Predecessors: [0x10d, 0x133]
Successors: [0x145, 0x153]
---
0x13f JUMPDEST
0x140 DUP1
0x141 PUSH2 0x153
0x144 JUMPI
---
0x13f: JUMPDEST 
0x141: V94 = 0x153
0x144: JUMPI 0x153 S0
---
Entry stack: [V11, 0x61, V38, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x61, V38, S0]

================================

Block 0x145
[0x145:0x152]
---
Predecessors: [0x13f]
Successors: [0x153]
---
0x145 POP
0x146 PUSH1 0x0
0x148 SLOAD
0x149 PUSH1 0x1
0x14b PUSH1 0xa0
0x14d PUSH1 0x2
0x14f EXP
0x150 SUB
0x151 AND
0x152 ISZERO
---
0x146: V95 = 0x0
0x148: V96 = S[0x0]
0x149: V97 = 0x1
0x14b: V98 = 0xa0
0x14d: V99 = 0x2
0x14f: V100 = EXP 0x2 0xa0
0x150: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x151: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x152: V103 = ISZERO V102
---
Entry stack: [V11, 0x61, V38, S0]
Stack pops: 1
Stack additions: [V103]
Exit stack: [V11, 0x61, V38, V103]

================================

Block 0x153
[0x153:0x158]
---
Predecessors: [0x13f, 0x145]
Successors: [0x159, 0x19a]
---
0x153 JUMPDEST
0x154 ISZERO
0x155 PUSH2 0x19a
0x158 JUMPI
---
0x153: JUMPDEST 
0x154: V104 = ISZERO S0
0x155: V105 = 0x19a
0x158: JUMPI 0x19a V104
---
Entry stack: [V11, 0x61, V38, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x61, V38]

================================

Block 0x159
[0x159:0x199]
---
Predecessors: [0x153]
Successors: [0x19a]
---
0x159 PUSH1 0x0
0x15b DUP1
0x15c SLOAD
0x15d PUSH1 0x1
0x15f PUSH1 0xa0
0x161 PUSH1 0x2
0x163 EXP
0x164 SUB
0x165 CALLER
0x166 DUP2
0x167 AND
0x168 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17d NOT
0x17e SWAP3
0x17f DUP4
0x180 AND
0x181 OR
0x182 SWAP1
0x183 SWAP3
0x184 SSTORE
0x185 PUSH1 0x1
0x187 DUP1
0x188 SLOAD
0x189 SWAP3
0x18a DUP5
0x18b AND
0x18c SWAP3
0x18d SWAP1
0x18e SWAP2
0x18f AND
0x190 SWAP2
0x191 SWAP1
0x192 SWAP2
0x193 OR
0x194 SWAP1
0x195 SSTORE
0x196 TIMESTAMP
0x197 PUSH1 0x2
0x199 SSTORE
---
0x159: V106 = 0x0
0x15c: V107 = S[0x0]
0x15d: V108 = 0x1
0x15f: V109 = 0xa0
0x161: V110 = 0x2
0x163: V111 = EXP 0x2 0xa0
0x164: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x165: V113 = CALLER
0x167: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x168: V115 = 0xffffffffffffffffffffffffffffffffffffffff
0x17d: V116 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x180: V117 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V107
0x181: V118 = OR V117 V114
0x184: S[0x0] = V118
0x185: V119 = 0x1
0x188: V120 = S[0x1]
0x18b: V121 = AND V38 0xffffffffffffffffffffffffffffffffffffffff
0x18f: V122 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V120
0x193: V123 = OR V122 V121
0x195: S[0x1] = V123
0x196: V124 = TIMESTAMP
0x197: V125 = 0x2
0x199: S[0x2] = V124
---
Entry stack: [V11, 0x61, V38]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x61, V38]

================================

Block 0x19a
[0x19a:0x19c]
---
Predecessors: [0x153, 0x159, 0x1fe]
Successors: [0x61]
---
0x19a JUMPDEST
0x19b POP
0x19c JUMP
---
0x19a: JUMPDEST 
0x19c: JUMP 0x61
---
Entry stack: [V11, 0x61, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x19d
[0x19d:0x1b5]
---
Predecessors: [0x8a]
Successors: [0x1b6, 0x1bc]
---
0x19d JUMPDEST
0x19e PUSH1 0x1
0x1a0 SLOAD
0x1a1 CALLER
0x1a2 PUSH1 0x1
0x1a4 PUSH1 0xa0
0x1a6 PUSH1 0x2
0x1a8 EXP
0x1a9 SUB
0x1aa SWAP1
0x1ab DUP2
0x1ac AND
0x1ad SWAP2
0x1ae AND
0x1af EQ
0x1b0 DUP1
0x1b1 ISZERO
0x1b2 PUSH2 0x1bc
0x1b5 JUMPI
---
0x19d: JUMPDEST 
0x19e: V126 = 0x1
0x1a0: V127 = S[0x1]
0x1a1: V128 = CALLER
0x1a2: V129 = 0x1
0x1a4: V130 = 0xa0
0x1a6: V131 = 0x2
0x1a8: V132 = EXP 0x2 0xa0
0x1a9: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ac: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x1ae: V135 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x1af: V136 = EQ V135 V134
0x1b1: V137 = ISZERO V136
0x1b2: V138 = 0x1bc
0x1b5: JUMPI 0x1bc V137
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V136]
Exit stack: [V11, 0x61, V136]

================================

Block 0x1b6
[0x1b6:0x1bb]
---
Predecessors: [0x19d]
Successors: [0x1bc]
---
0x1b6 POP
0x1b7 PUSH1 0x2
0x1b9 SLOAD
0x1ba TIMESTAMP
0x1bb GT
---
0x1b7: V139 = 0x2
0x1b9: V140 = S[0x2]
0x1ba: V141 = TIMESTAMP
0x1bb: V142 = GT V141 V140
---
Entry stack: [V11, 0x61, V136]
Stack pops: 1
Stack additions: [V142]
Exit stack: [V11, 0x61, V142]

================================

Block 0x1bc
[0x1bc:0x1c1]
---
Predecessors: [0x19d, 0x1b6]
Successors: [0x10b, 0x1c2]
---
0x1bc JUMPDEST
0x1bd ISZERO
0x1be PUSH2 0x10b
0x1c1 JUMPI
---
0x1bc: JUMPDEST 
0x1bd: V143 = ISZERO S0
0x1be: V144 = 0x10b
0x1c1: JUMPI 0x10b V143
---
Entry stack: [V11, 0x61, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x1c2
[0x1c2:0x1f9]
---
Predecessors: [0x1bc]
Successors: [0x10b, 0x1fa]
---
0x1c2 CALLER
0x1c3 PUSH1 0x1
0x1c5 PUSH1 0xa0
0x1c7 PUSH1 0x2
0x1c9 EXP
0x1ca SUB
0x1cb AND
0x1cc PUSH2 0x8fc
0x1cf ADDRESS
0x1d0 PUSH1 0x1
0x1d2 PUSH1 0xa0
0x1d4 PUSH1 0x2
0x1d6 EXP
0x1d7 SUB
0x1d8 AND
0x1d9 BALANCE
0x1da SWAP1
0x1db DUP2
0x1dc ISZERO
0x1dd MUL
0x1de SWAP1
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 PUSH1 0x0
0x1e4 PUSH1 0x40
0x1e6 MLOAD
0x1e7 DUP1
0x1e8 DUP4
0x1e9 SUB
0x1ea DUP2
0x1eb DUP6
0x1ec DUP9
0x1ed DUP9
0x1ee CALL
0x1ef SWAP4
0x1f0 POP
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 ISZERO
0x1f5 ISZERO
0x1f6 PUSH2 0x10b
0x1f9 JUMPI
---
0x1c2: V145 = CALLER
0x1c3: V146 = 0x1
0x1c5: V147 = 0xa0
0x1c7: V148 = 0x2
0x1c9: V149 = EXP 0x2 0xa0
0x1ca: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cb: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x1cc: V152 = 0x8fc
0x1cf: V153 = ADDRESS
0x1d0: V154 = 0x1
0x1d2: V155 = 0xa0
0x1d4: V156 = 0x2
0x1d6: V157 = EXP 0x2 0xa0
0x1d7: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d8: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x1d9: V160 = BALANCE V159
0x1dc: V161 = ISZERO V160
0x1dd: V162 = MUL V161 0x8fc
0x1df: V163 = 0x40
0x1e1: V164 = M[0x40]
0x1e2: V165 = 0x0
0x1e4: V166 = 0x40
0x1e6: V167 = M[0x40]
0x1e9: V168 = SUB V164 V167
0x1ee: V169 = CALL V162 V151 V160 V167 V168 V167 0x0
0x1f4: V170 = ISZERO V169
0x1f5: V171 = ISZERO V170
0x1f6: V172 = 0x10b
0x1f9: JUMPI 0x10b V171
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x1fa
[0x1fa:0x1fd]
---
Predecessors: [0x1c2]
Successors: []
---
0x1fa PUSH1 0x0
0x1fc DUP1
0x1fd REVERT
---
0x1fa: V173 = 0x0
0x1fd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x1fe
[0x1fe:0x215]
---
Predecessors: [0x9d]
Successors: [0x19a, 0x216]
---
0x1fe JUMPDEST
0x1ff PUSH1 0x0
0x201 SLOAD
0x202 CALLER
0x203 PUSH1 0x1
0x205 PUSH1 0xa0
0x207 PUSH1 0x2
0x209 EXP
0x20a SUB
0x20b SWAP1
0x20c DUP2
0x20d AND
0x20e SWAP2
0x20f AND
0x210 EQ
0x211 ISZERO
0x212 PUSH2 0x19a
0x215 JUMPI
---
0x1fe: JUMPDEST 
0x1ff: V174 = 0x0
0x201: V175 = S[0x0]
0x202: V176 = CALLER
0x203: V177 = 0x1
0x205: V178 = 0xa0
0x207: V179 = 0x2
0x209: V180 = EXP 0x2 0xa0
0x20a: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20d: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x20f: V183 = AND V175 0xffffffffffffffffffffffffffffffffffffffff
0x210: V184 = EQ V183 V182
0x211: V185 = ISZERO V184
0x212: V186 = 0x19a
0x215: JUMPI 0x19a V185
---
Entry stack: [V11, 0x61, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V48]

================================

Block 0x216
[0x216:0x219]
---
Predecessors: [0x1fe]
Successors: [0x61]
---
0x216 PUSH1 0x2
0x218 SSTORE
0x219 JUMP
---
0x216: V187 = 0x2
0x218: S[0x2] = V48
0x219: JUMP 0x61
---
Entry stack: [V11, 0x61, V48]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x21a
[0x21a:0x255]
---
Predecessors: []
Successors: []
---
0x21a STOP
0x21b LOG1
0x21c PUSH6 0x627a7a723058
0x223 SHA3
0x224 PUSH1 0x17
0x226 MISSING 0xe8
0x227 PUSH7 0x7d82fe7401ccf0
0x22f GT
0x230 NUMBER
0x231 MISSING 0x5f
0x232 SGT
0x233 SWAP15
0x234 MISSING 0xa9
0x235 CALLDATALOAD
0x236 SWAP13
0x237 MISSING 0x29
0x238 PUSH29 0xbaeaa734498942bf1096cf0029
---
0x21a: STOP 
0x21b: LOG S0 S1 S2
0x21c: V188 = 0x627a7a723058
0x223: V189 = SHA3 0x627a7a723058 S3
0x224: V190 = 0x17
0x226: MISSING 0xe8
0x227: V191 = 0x7d82fe7401ccf0
0x22f: V192 = GT 0x7d82fe7401ccf0 S0
0x230: V193 = NUMBER
0x231: MISSING 0x5f
0x232: V194 = SGT S0 S1
0x234: MISSING 0xa9
0x235: V195 = CALLDATALOAD S0
0x237: MISSING 0x29
0x238: V196 = 0xbaeaa734498942bf1096cf0029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x17, V189, V193, V192, S16, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, V194, S13, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V195, 0xbaeaa734498942bf1096cf0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3f7e2120
Entry block: 0x63
Exit block: 0x61
Body: 0x61, 0x63, 0x6a, 0x6e, 0xa8, 0xc1, 0xd0, 0xd6, 0x10b

Function 1:
Public function signature: 0xae4ab7ce
Entry block: 0x76
Exit block: 0x61
Body: 0x61, 0x76, 0x10d, 0x133, 0x13f, 0x145, 0x153, 0x159, 0x19a

Function 2:
Public function signature: 0xbea948c8
Entry block: 0x8a
Exit block: 0x1fa
Body: 0x61, 0x8a, 0x10b, 0x19d, 0x1b6, 0x1bc, 0x1c2, 0x1fa

Function 3:
Public function signature: 0xdac47a71
Entry block: 0x92
Exit block: 0x61
Body: 0x61, 0x92, 0x99, 0x9d, 0x19a, 0x1fe, 0x216

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

