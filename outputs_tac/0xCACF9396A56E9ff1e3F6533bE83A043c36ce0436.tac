Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x5c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x5c
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x5c
0xa: JUMPI 0x5c V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x6d]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2e1a7d4d
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x6d
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2e1a7d4d
0x20: V14 = EQ V12 0x2e1a7d4d
0x21: V15 = 0x6d
0x24: JUMPI 0x6d V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x82]
---
0x25 DUP1
0x26 PUSH4 0x41c0e1b5
0x2b EQ
0x2c PUSH2 0x82
0x2f JUMPI
---
0x26: V16 = 0x41c0e1b5
0x2b: V17 = EQ 0x41c0e1b5 V12
0x2c: V18 = 0x82
0x2f: JUMPI 0x82 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x94]
---
0x30 DUP1
0x31 PUSH4 0xb4a99a4e
0x36 EQ
0x37 PUSH2 0x94
0x3a JUMPI
---
0x31: V19 = 0xb4a99a4e
0x36: V20 = EQ 0xb4a99a4e V12
0x37: V21 = 0x94
0x3a: JUMPI 0x94 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xc0]
---
0x3b DUP1
0x3c PUSH4 0xd0e30db0
0x41 EQ
0x42 PUSH2 0xc0
0x45 JUMPI
---
0x3c: V22 = 0xd0e30db0
0x41: V23 = EQ 0xd0e30db0 V12
0x42: V24 = 0xc0
0x45: JUMPI 0xc0 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0xca]
---
0x46 DUP1
0x47 PUSH4 0xe1c7392a
0x4c EQ
0x4d PUSH2 0xca
0x50 JUMPI
---
0x47: V25 = 0xe1c7392a
0x4c: V26 = EQ 0xe1c7392a V12
0x4d: V27 = 0xca
0x50: JUMPI 0xca V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0xdc]
---
0x51 DUP1
0x52 PUSH4 0xfc7e286d
0x57 EQ
0x58 PUSH2 0xdc
0x5b JUMPI
---
0x52: V28 = 0xfc7e286d
0x57: V29 = EQ 0xfc7e286d V12
0x58: V30 = 0xdc
0x5b: JUMPI 0xdc V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x5f]
---
Predecessors: [0x0, 0x51]
Successors: [0x60]
---
0x5c JUMPDEST
0x5d PUSH2 0x6b
---
0x5c: JUMPDEST 
0x5d: V31 = 0x6b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6b]
Exit stack: [V12, 0x6b]

================================

Block 0x60
[0x60:0x67]
---
Predecessors: [0x5c]
Successors: [0x10a]
---
0x60 JUMPDEST
0x61 PUSH2 0x68
0x64 PUSH2 0x10a
0x67 JUMP
---
0x60: JUMPDEST 
0x61: V32 = 0x68
0x64: V33 = 0x10a
0x67: JUMP 0x10a
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: [0x68]
Exit stack: [V12, 0x6b, 0x68]

================================

Block 0x68
[0x68:0x68]
---
Predecessors: [0x69, 0x11a, 0x1b9]
Successors: [0x69]
---
0x68 JUMPDEST
---
0x68: JUMPDEST 
---
Entry stack: [V12, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, S0]

================================

Block 0x69
[0x69:0x6a]
---
Predecessors: [0x68]
Successors: [0x68, 0x6b]
---
0x69 JUMPDEST
0x6a JUMP
---
0x69: JUMPDEST 
0x6a: JUMP S0
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x6b
[0x6b:0x6c]
---
Predecessors: [0x69, 0x1b5, 0x22e]
Successors: []
---
0x6b JUMPDEST
0x6c STOP
---
0x6b: JUMPDEST 
0x6c: STOP 
---
Entry stack: [V12, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S0]

================================

Block 0x6d
[0x6d:0x73]
---
Predecessors: [0xb]
Successors: [0x74, 0x75]
---
0x6d JUMPDEST
0x6e CALLVALUE
0x6f ISZERO
0x70 PUSH2 0x75
0x73 JUMPI
---
0x6d: JUMPDEST 
0x6e: V34 = CALLVALUE
0x6f: V35 = ISZERO V34
0x70: V36 = 0x75
0x73: JUMPI 0x75 V35
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x74
[0x74:0x74]
---
Predecessors: [0x6d]
Successors: []
---
0x74 INVALID
---
0x74: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6d]
Successors: [0x145]
---
0x75 JUMPDEST
0x76 PUSH2 0x6b
0x79 PUSH1 0x4
0x7b CALLDATALOAD
0x7c PUSH2 0x145
0x7f JUMP
---
0x75: JUMPDEST 
0x76: V37 = 0x6b
0x79: V38 = 0x4
0x7b: V39 = CALLDATALOAD 0x4
0x7c: V40 = 0x145
0x7f: JUMP 0x145
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6b, V39]
Exit stack: [V12, 0x6b, V39]

================================

Block 0x80
[0x80:0x81]
---
Predecessors: []
Successors: []
---
0x80 JUMPDEST
0x81 STOP
---
0x80: JUMPDEST 
0x81: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x82
[0x82:0x88]
---
Predecessors: [0x25]
Successors: [0x89, 0x8a]
---
0x82 JUMPDEST
0x83 CALLVALUE
0x84 ISZERO
0x85 PUSH2 0x8a
0x88 JUMPI
---
0x82: JUMPDEST 
0x83: V41 = CALLVALUE
0x84: V42 = ISZERO V41
0x85: V43 = 0x8a
0x88: JUMPI 0x8a V42
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x89
[0x89:0x89]
---
Predecessors: [0x82]
Successors: []
---
0x89 INVALID
---
0x89: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a
[0x8a:0x91]
---
Predecessors: [0x82]
Successors: [0x1b9]
---
0x8a JUMPDEST
0x8b PUSH2 0x6b
0x8e PUSH2 0x1b9
0x91 JUMP
---
0x8a: JUMPDEST 
0x8b: V44 = 0x6b
0x8e: V45 = 0x1b9
0x91: JUMP 0x1b9
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6b]
Exit stack: [V12, 0x6b]

================================

Block 0x92
[0x92:0x93]
---
Predecessors: []
Successors: []
---
0x92 JUMPDEST
0x93 STOP
---
0x92: JUMPDEST 
0x93: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x94
[0x94:0x9a]
---
Predecessors: [0x30]
Successors: [0x9b, 0x9c]
---
0x94 JUMPDEST
0x95 CALLVALUE
0x96 ISZERO
0x97 PUSH2 0x9c
0x9a JUMPI
---
0x94: JUMPDEST 
0x95: V46 = CALLVALUE
0x96: V47 = ISZERO V46
0x97: V48 = 0x9c
0x9a: JUMPI 0x9c V47
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9b
[0x9b:0x9b]
---
Predecessors: [0x94]
Successors: []
---
0x9b INVALID
---
0x9b: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x9c
[0x9c:0xa3]
---
Predecessors: [0x94]
Successors: [0x1f6]
---
0x9c JUMPDEST
0x9d PUSH2 0xa4
0xa0 PUSH2 0x1f6
0xa3 JUMP
---
0x9c: JUMPDEST 
0x9d: V49 = 0xa4
0xa0: V50 = 0x1f6
0xa3: JUMP 0x1f6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xa4]
Exit stack: [V12, 0xa4]

================================

Block 0xa4
[0xa4:0xbf]
---
Predecessors: [0x1f6]
Successors: []
---
0xa4 JUMPDEST
0xa5 PUSH1 0x40
0xa7 DUP1
0xa8 MLOAD
0xa9 PUSH1 0x1
0xab PUSH1 0xa0
0xad PUSH1 0x2
0xaf EXP
0xb0 SUB
0xb1 SWAP1
0xb2 SWAP3
0xb3 AND
0xb4 DUP3
0xb5 MSTORE
0xb6 MLOAD
0xb7 SWAP1
0xb8 DUP2
0xb9 SWAP1
0xba SUB
0xbb PUSH1 0x20
0xbd ADD
0xbe SWAP1
0xbf RETURN
---
0xa4: JUMPDEST 
0xa5: V51 = 0x40
0xa8: V52 = M[0x40]
0xa9: V53 = 0x1
0xab: V54 = 0xa0
0xad: V55 = 0x2
0xaf: V56 = EXP 0x2 0xa0
0xb0: V57 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb3: V58 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0xb5: M[V52] = V58
0xb6: V59 = M[0x40]
0xba: V60 = SUB V52 V59
0xbb: V61 = 0x20
0xbd: V62 = ADD 0x20 V60
0xbf: RETURN V59 V62
---
Entry stack: [V12, 0xa4, V197]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xa4]

================================

Block 0xc0
[0xc0:0xc7]
---
Predecessors: [0x3b]
Successors: [0x10a]
---
0xc0 JUMPDEST
0xc1 PUSH2 0x6b
0xc4 PUSH2 0x10a
0xc7 JUMP
---
0xc0: JUMPDEST 
0xc1: V63 = 0x6b
0xc4: V64 = 0x10a
0xc7: JUMP 0x10a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6b]
Exit stack: [V12, 0x6b]

================================

Block 0xc8
[0xc8:0xc9]
---
Predecessors: []
Successors: []
---
0xc8 JUMPDEST
0xc9 STOP
---
0xc8: JUMPDEST 
0xc9: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xca
[0xca:0xd0]
---
Predecessors: [0x46]
Successors: [0xd1, 0xd2]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc ISZERO
0xcd PUSH2 0xd2
0xd0 JUMPI
---
0xca: JUMPDEST 
0xcb: V65 = CALLVALUE
0xcc: V66 = ISZERO V65
0xcd: V67 = 0xd2
0xd0: JUMPI 0xd2 V66
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd1
[0xd1:0xd1]
---
Predecessors: [0xca]
Successors: []
---
0xd1 INVALID
---
0xd1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xd2
[0xd2:0xd9]
---
Predecessors: [0xca]
Successors: [0x205]
---
0xd2 JUMPDEST
0xd3 PUSH2 0x6b
0xd6 PUSH2 0x205
0xd9 JUMP
---
0xd2: JUMPDEST 
0xd3: V68 = 0x6b
0xd6: V69 = 0x205
0xd9: JUMP 0x205
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6b]
Exit stack: [V12, 0x6b]

================================

Block 0xda
[0xda:0xdb]
---
Predecessors: []
Successors: []
---
0xda JUMPDEST
0xdb STOP
---
0xda: JUMPDEST 
0xdb: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xdc
[0xdc:0xe2]
---
Predecessors: [0x51]
Successors: [0xe3, 0xe4]
---
0xdc JUMPDEST
0xdd CALLVALUE
0xde ISZERO
0xdf PUSH2 0xe4
0xe2 JUMPI
---
0xdc: JUMPDEST 
0xdd: V70 = CALLVALUE
0xde: V71 = ISZERO V70
0xdf: V72 = 0xe4
0xe2: JUMPI 0xe4 V71
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe3
[0xe3:0xe3]
---
Predecessors: [0xdc]
Successors: []
---
0xe3 INVALID
---
0xe3: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xe4
[0xe4:0xf7]
---
Predecessors: [0xdc]
Successors: [0x230]
---
0xe4 JUMPDEST
0xe5 PUSH2 0xf8
0xe8 PUSH1 0x1
0xea PUSH1 0xa0
0xec PUSH1 0x2
0xee EXP
0xef SUB
0xf0 PUSH1 0x4
0xf2 CALLDATALOAD
0xf3 AND
0xf4 PUSH2 0x230
0xf7 JUMP
---
0xe4: JUMPDEST 
0xe5: V73 = 0xf8
0xe8: V74 = 0x1
0xea: V75 = 0xa0
0xec: V76 = 0x2
0xee: V77 = EXP 0x2 0xa0
0xef: V78 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf0: V79 = 0x4
0xf2: V80 = CALLDATALOAD 0x4
0xf3: V81 = AND V80 0xffffffffffffffffffffffffffffffffffffffff
0xf4: V82 = 0x230
0xf7: JUMP 0x230
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xf8, V81]
Exit stack: [V12, 0xf8, V81]

================================

Block 0xf8
[0xf8:0x109]
---
Predecessors: [0x230]
Successors: []
---
0xf8 JUMPDEST
0xf9 PUSH1 0x40
0xfb DUP1
0xfc MLOAD
0xfd SWAP2
0xfe DUP3
0xff MSTORE
0x100 MLOAD
0x101 SWAP1
0x102 DUP2
0x103 SWAP1
0x104 SUB
0x105 PUSH1 0x20
0x107 ADD
0x108 SWAP1
0x109 RETURN
---
0xf8: JUMPDEST 
0xf9: V83 = 0x40
0xfc: V84 = M[0x40]
0xff: M[V84] = V216
0x100: V85 = M[0x40]
0x104: V86 = SUB V84 V85
0x105: V87 = 0x20
0x107: V88 = ADD 0x20 V86
0x109: RETURN V85 V88
---
Entry stack: [V12, 0xf8, V216]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xf8]

================================

Block 0x10a
[0x10a:0x119]
---
Predecessors: [0x60, 0xc0]
Successors: [0x11a, 0x13c]
---
0x10a JUMPDEST
0x10b PUSH8 0x16345785d8a0000
0x114 CALLVALUE
0x115 LT
0x116 PUSH2 0x13c
0x119 JUMPI
---
0x10a: JUMPDEST 
0x10b: V89 = 0x16345785d8a0000
0x114: V90 = CALLVALUE
0x115: V91 = LT V90 0x16345785d8a0000
0x116: V92 = 0x13c
0x119: JUMPI 0x13c V91
---
Entry stack: [V12, S1, {0x68, 0x6b}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x68, 0x6b}]

================================

Block 0x11a
[0x11a:0x13b]
---
Predecessors: [0x10a]
Successors: [0x68]
---
0x11a PUSH1 0x1
0x11c PUSH1 0xa0
0x11e PUSH1 0x2
0x120 EXP
0x121 SUB
0x122 CALLER
0x123 AND
0x124 PUSH1 0x0
0x126 SWAP1
0x127 DUP2
0x128 MSTORE
0x129 PUSH1 0x2
0x12b PUSH1 0x20
0x12d MSTORE
0x12e PUSH1 0x40
0x130 SWAP1
0x131 SHA3
0x132 DUP1
0x133 SLOAD
0x134 CALLVALUE
0x135 ADD
0x136 SWAP1
0x137 SSTORE
0x138 PUSH2 0x68
0x13b JUMP
---
0x11a: V93 = 0x1
0x11c: V94 = 0xa0
0x11e: V95 = 0x2
0x120: V96 = EXP 0x2 0xa0
0x121: V97 = SUB 0x10000000000000000000000000000000000000000 0x1
0x122: V98 = CALLER
0x123: V99 = AND V98 0xffffffffffffffffffffffffffffffffffffffff
0x124: V100 = 0x0
0x128: M[0x0] = V99
0x129: V101 = 0x2
0x12b: V102 = 0x20
0x12d: M[0x20] = 0x2
0x12e: V103 = 0x40
0x131: V104 = SHA3 0x0 0x40
0x133: V105 = S[V104]
0x134: V106 = CALLVALUE
0x135: V107 = ADD V106 V105
0x137: S[V104] = V107
0x138: V108 = 0x68
0x13b: JUMP 0x68
---
Entry stack: [V12, S1, {0x68, 0x6b}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x68, 0x6b}]

================================

Block 0x13c
[0x13c:0x141]
---
Predecessors: [0x10a]
Successors: []
---
0x13c JUMPDEST
0x13d PUSH1 0x0
0x13f PUSH1 0x0
0x141 REVERT
---
0x13c: JUMPDEST 
0x13d: V109 = 0x0
0x13f: V110 = 0x0
0x141: REVERT 0x0 0x0
---
Entry stack: [V12, S1, {0x68, 0x6b}]
Stack pops: 0
Stack additions: []
Exit stack: [V12, S1, {0x68, 0x6b}]

================================

Block 0x142
[0x142:0x142]
---
Predecessors: []
Successors: [0x143]
---
0x142 JUMPDEST
---
0x142: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x143
[0x143:0x144]
---
Predecessors: [0x142]
Successors: []
Has unresolved jump.
---
0x143 JUMPDEST
0x144 JUMP
---
0x143: JUMPDEST 
0x144: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x145
[0x145:0x15d]
---
Predecessors: [0x75]
Successors: [0x15e, 0x1b2]
---
0x145 JUMPDEST
0x146 PUSH1 0x0
0x148 DUP1
0x149 SLOAD
0x14a CALLER
0x14b PUSH1 0x1
0x14d PUSH1 0xa0
0x14f PUSH1 0x2
0x151 EXP
0x152 SUB
0x153 SWAP1
0x154 DUP2
0x155 AND
0x156 SWAP2
0x157 AND
0x158 EQ
0x159 ISZERO
0x15a PUSH2 0x1b2
0x15d JUMPI
---
0x145: JUMPDEST 
0x146: V111 = 0x0
0x149: V112 = S[0x0]
0x14a: V113 = CALLER
0x14b: V114 = 0x1
0x14d: V115 = 0xa0
0x14f: V116 = 0x2
0x151: V117 = EXP 0x2 0xa0
0x152: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x155: V119 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x157: V120 = AND V112 0xffffffffffffffffffffffffffffffffffffffff
0x158: V121 = EQ V120 V119
0x159: V122 = ISZERO V121
0x15a: V123 = 0x1b2
0x15d: JUMPI 0x1b2 V122
---
Entry stack: [V12, 0x6b, V39]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x6b, V39, 0x0]

================================

Block 0x15e
[0x15e:0x181]
---
Predecessors: [0x145]
Successors: [0x182, 0x187]
---
0x15e POP
0x15f PUSH1 0x1
0x161 PUSH1 0xa0
0x163 PUSH1 0x2
0x165 EXP
0x166 SUB
0x167 CALLER
0x168 AND
0x169 PUSH1 0x0
0x16b SWAP1
0x16c DUP2
0x16d MSTORE
0x16e PUSH1 0x2
0x170 PUSH1 0x20
0x172 MSTORE
0x173 PUSH1 0x40
0x175 SWAP1
0x176 SHA3
0x177 SLOAD
0x178 DUP1
0x179 DUP3
0x17a GT
0x17b DUP1
0x17c ISZERO
0x17d SWAP1
0x17e PUSH2 0x187
0x181 JUMPI
---
0x15f: V124 = 0x1
0x161: V125 = 0xa0
0x163: V126 = 0x2
0x165: V127 = EXP 0x2 0xa0
0x166: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x167: V129 = CALLER
0x168: V130 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x169: V131 = 0x0
0x16d: M[0x0] = V130
0x16e: V132 = 0x2
0x170: V133 = 0x20
0x172: M[0x20] = 0x2
0x173: V134 = 0x40
0x176: V135 = SHA3 0x0 0x40
0x177: V136 = S[V135]
0x17a: V137 = GT V39 V136
0x17c: V138 = ISZERO V137
0x17e: V139 = 0x187
0x181: JUMPI 0x187 V137
---
Entry stack: [V12, 0x6b, V39, 0x0]
Stack pops: 2
Stack additions: [S1, V136, V138]
Exit stack: [V12, 0x6b, V39, V136, V138]

================================

Block 0x182
[0x182:0x186]
---
Predecessors: [0x15e]
Successors: [0x187]
---
0x182 POP
0x183 PUSH1 0x0
0x185 DUP2
0x186 GT
---
0x183: V140 = 0x0
0x186: V141 = GT V136 0x0
---
Entry stack: [V12, 0x6b, V39, V136, V138]
Stack pops: 2
Stack additions: [S1, V141]
Exit stack: [V12, 0x6b, V39, V136, V141]

================================

Block 0x187
[0x187:0x18c]
---
Predecessors: [0x15e, 0x182]
Successors: [0x18d, 0x1b2]
---
0x187 JUMPDEST
0x188 ISZERO
0x189 PUSH2 0x1b2
0x18c JUMPI
---
0x187: JUMPDEST 
0x188: V142 = ISZERO S0
0x189: V143 = 0x1b2
0x18c: JUMPI 0x1b2 V142
---
Entry stack: [V12, 0x6b, V39, V136, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x6b, V39, V136]

================================

Block 0x18d
[0x18d:0x1b1]
---
Predecessors: [0x187]
Successors: [0x1b2]
---
0x18d PUSH1 0x40
0x18f MLOAD
0x190 PUSH1 0x1
0x192 PUSH1 0xa0
0x194 PUSH1 0x2
0x196 EXP
0x197 SUB
0x198 CALLER
0x199 AND
0x19a SWAP1
0x19b DUP4
0x19c ISZERO
0x19d PUSH2 0x8fc
0x1a0 MUL
0x1a1 SWAP1
0x1a2 DUP5
0x1a3 SWAP1
0x1a4 PUSH1 0x0
0x1a6 DUP2
0x1a7 DUP2
0x1a8 DUP2
0x1a9 DUP6
0x1aa DUP9
0x1ab DUP9
0x1ac CALL
0x1ad POP
0x1ae POP
0x1af POP
0x1b0 POP
0x1b1 POP
---
0x18d: V144 = 0x40
0x18f: V145 = M[0x40]
0x190: V146 = 0x1
0x192: V147 = 0xa0
0x194: V148 = 0x2
0x196: V149 = EXP 0x2 0xa0
0x197: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x198: V151 = CALLER
0x199: V152 = AND V151 0xffffffffffffffffffffffffffffffffffffffff
0x19c: V153 = ISZERO V39
0x19d: V154 = 0x8fc
0x1a0: V155 = MUL 0x8fc V153
0x1a4: V156 = 0x0
0x1ac: V157 = CALL V155 V152 V39 V145 0x0 V145 0x0
---
Entry stack: [V12, 0x6b, V39, V136]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x6b, V39, V136]

================================

Block 0x1b2
[0x1b2:0x1b2]
---
Predecessors: [0x145, 0x187, 0x18d]
Successors: [0x1b3]
---
0x1b2 JUMPDEST
---
0x1b2: JUMPDEST 
---
Entry stack: [V12, 0x6b, V39, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b, V39, S0]

================================

Block 0x1b3
[0x1b3:0x1b3]
---
Predecessors: [0x1b2]
Successors: [0x1b4]
---
0x1b3 JUMPDEST
---
0x1b3: JUMPDEST 
---
Entry stack: [V12, 0x6b, V39, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b, V39, S0]

================================

Block 0x1b4
[0x1b4:0x1b4]
---
Predecessors: [0x1b3]
Successors: [0x1b5]
---
0x1b4 JUMPDEST
---
0x1b4: JUMPDEST 
---
Entry stack: [V12, 0x6b, V39, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b, V39, S0]

================================

Block 0x1b5
[0x1b5:0x1b8]
---
Predecessors: [0x1b4]
Successors: [0x6b]
---
0x1b5 JUMPDEST
0x1b6 POP
0x1b7 POP
0x1b8 JUMP
---
0x1b5: JUMPDEST 
0x1b8: JUMP 0x6b
---
Entry stack: [V12, 0x6b, V39, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b9
[0x1b9:0x1d0]
---
Predecessors: [0x8a]
Successors: [0x68, 0x1d1]
---
0x1b9 JUMPDEST
0x1ba PUSH1 0x0
0x1bc SLOAD
0x1bd CALLER
0x1be PUSH1 0x1
0x1c0 PUSH1 0xa0
0x1c2 PUSH1 0x2
0x1c4 EXP
0x1c5 SUB
0x1c6 SWAP1
0x1c7 DUP2
0x1c8 AND
0x1c9 SWAP2
0x1ca AND
0x1cb EQ
0x1cc ISZERO
0x1cd PUSH2 0x68
0x1d0 JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V158 = 0x0
0x1bc: V159 = S[0x0]
0x1bd: V160 = CALLER
0x1be: V161 = 0x1
0x1c0: V162 = 0xa0
0x1c2: V163 = 0x2
0x1c4: V164 = EXP 0x2 0xa0
0x1c5: V165 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1c8: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x1ca: V167 = AND V159 0xffffffffffffffffffffffffffffffffffffffff
0x1cb: V168 = EQ V167 V166
0x1cc: V169 = ISZERO V168
0x1cd: V170 = 0x68
0x1d0: JUMPI 0x68 V169
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x1d1
[0x1d1:0x1e0]
---
Predecessors: [0x1b9]
Successors: [0x1e1, 0x1e6]
---
0x1d1 PUSH1 0x1
0x1d3 PUSH1 0xa0
0x1d5 PUSH1 0x2
0x1d7 EXP
0x1d8 SUB
0x1d9 ADDRESS
0x1da AND
0x1db BALANCE
0x1dc ISZERO
0x1dd PUSH2 0x1e6
0x1e0 JUMPI
---
0x1d1: V171 = 0x1
0x1d3: V172 = 0xa0
0x1d5: V173 = 0x2
0x1d7: V174 = EXP 0x2 0xa0
0x1d8: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d9: V176 = ADDRESS
0x1da: V177 = AND V176 0xffffffffffffffffffffffffffffffffffffffff
0x1db: V178 = BALANCE V177
0x1dc: V179 = ISZERO V178
0x1dd: V180 = 0x1e6
0x1e0: JUMPI 0x1e6 V179
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x1e1
[0x1e1:0x1e5]
---
Predecessors: [0x1d1]
Successors: []
---
0x1e1 PUSH1 0x0
0x1e3 PUSH1 0x0
0x1e5 REVERT
---
0x1e1: V181 = 0x0
0x1e3: V182 = 0x0
0x1e5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x1e6
[0x1e6:0x1f1]
---
Predecessors: [0x1d1]
Successors: []
---
0x1e6 JUMPDEST
0x1e7 CALLER
0x1e8 PUSH1 0x1
0x1ea PUSH1 0xa0
0x1ec PUSH1 0x2
0x1ee EXP
0x1ef SUB
0x1f0 AND
0x1f1 SELFDESTRUCT
---
0x1e6: JUMPDEST 
0x1e7: V183 = CALLER
0x1e8: V184 = 0x1
0x1ea: V185 = 0xa0
0x1ec: V186 = 0x2
0x1ee: V187 = EXP 0x2 0xa0
0x1ef: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f0: V189 = AND 0xffffffffffffffffffffffffffffffffffffffff V183
0x1f1: SELFDESTRUCT V189
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x1f2
[0x1f2:0x1f2]
---
Predecessors: []
Successors: [0x1f3]
---
0x1f2 JUMPDEST
---
0x1f2: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f3
[0x1f3:0x1f3]
---
Predecessors: [0x1f2]
Successors: [0x1f4]
---
0x1f3 JUMPDEST
---
0x1f3: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1f4
[0x1f4:0x1f5]
---
Predecessors: [0x1f3]
Successors: []
Has unresolved jump.
---
0x1f4 JUMPDEST
0x1f5 JUMP
---
0x1f4: JUMPDEST 
0x1f5: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1f6
[0x1f6:0x204]
---
Predecessors: [0x9c]
Successors: [0xa4]
---
0x1f6 JUMPDEST
0x1f7 PUSH1 0x1
0x1f9 SLOAD
0x1fa PUSH1 0x1
0x1fc PUSH1 0xa0
0x1fe PUSH1 0x2
0x200 EXP
0x201 SUB
0x202 AND
0x203 DUP2
0x204 JUMP
---
0x1f6: JUMPDEST 
0x1f7: V190 = 0x1
0x1f9: V191 = S[0x1]
0x1fa: V192 = 0x1
0x1fc: V193 = 0xa0
0x1fe: V194 = 0x2
0x200: V195 = EXP 0x2 0xa0
0x201: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x202: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x204: JUMP 0xa4
---
Entry stack: [V12, 0xa4]
Stack pops: 1
Stack additions: [S0, V197]
Exit stack: [V12, 0xa4, V197]

================================

Block 0x205
[0x205:0x22d]
---
Predecessors: [0xd2]
Successors: [0x22e]
---
0x205 JUMPDEST
0x206 PUSH1 0x1
0x208 DUP1
0x209 SLOAD
0x20a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x21f NOT
0x220 AND
0x221 CALLER
0x222 PUSH1 0x1
0x224 PUSH1 0xa0
0x226 PUSH1 0x2
0x228 EXP
0x229 SUB
0x22a AND
0x22b OR
0x22c SWAP1
0x22d SSTORE
---
0x205: JUMPDEST 
0x206: V198 = 0x1
0x209: V199 = S[0x1]
0x20a: V200 = 0xffffffffffffffffffffffffffffffffffffffff
0x21f: V201 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x220: V202 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V199
0x221: V203 = CALLER
0x222: V204 = 0x1
0x224: V205 = 0xa0
0x226: V206 = 0x2
0x228: V207 = EXP 0x2 0xa0
0x229: V208 = SUB 0x10000000000000000000000000000000000000000 0x1
0x22a: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V203
0x22b: V210 = OR V209 V202
0x22d: S[0x1] = V210
---
Entry stack: [V12, 0x6b]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6b]

================================

Block 0x22e
[0x22e:0x22f]
---
Predecessors: [0x205]
Successors: [0x6b]
---
0x22e JUMPDEST
0x22f JUMP
---
0x22e: JUMPDEST 
0x22f: JUMP 0x6b
---
Entry stack: [V12, 0x6b]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x230
[0x230:0x241]
---
Predecessors: [0xe4]
Successors: [0xf8]
---
0x230 JUMPDEST
0x231 PUSH1 0x2
0x233 PUSH1 0x20
0x235 MSTORE
0x236 PUSH1 0x0
0x238 SWAP1
0x239 DUP2
0x23a MSTORE
0x23b PUSH1 0x40
0x23d SWAP1
0x23e SHA3
0x23f SLOAD
0x240 DUP2
0x241 JUMP
---
0x230: JUMPDEST 
0x231: V211 = 0x2
0x233: V212 = 0x20
0x235: M[0x20] = 0x2
0x236: V213 = 0x0
0x23a: M[0x0] = V81
0x23b: V214 = 0x40
0x23e: V215 = SHA3 0x0 0x40
0x23f: V216 = S[V215]
0x241: JUMP 0xf8
---
Entry stack: [V12, 0xf8, V81]
Stack pops: 2
Stack additions: [S1, V216]
Exit stack: [V12, 0xf8, V216]

================================

Block 0x242
[0x242:0x24c]
---
Predecessors: []
Successors: [0x24d]
---
0x242 STOP
0x243 LOG1
0x244 PUSH6 0x627a7a723058
0x24b SHA3
0x24c ADDMOD
---
0x242: STOP 
0x243: LOG S0 S1 S2
0x244: V217 = 0x627a7a723058
0x24b: V218 = SHA3 0x627a7a723058 S3
0x24c: V219 = ADDMOD V218 S4 S5
---
Entry stack: []
Stack pops: 0
Stack additions: [V219]
Exit stack: []

================================

Block 0x24d
[0x24d:0x26d]
---
Predecessors: [0x242]
Successors: []
---
0x24d JUMPDEST
0x24e MISSING 0xd7
0x24f MISSING 0xca
0x250 EXTCODEHASH
0x251 MISSING 0xee
0x252 MISSING 0xb4
0x253 PUSH10 0x92d7de08c0f433f051de
0x25e SMOD
0x25f DUP1
0x260 MISSING 0xc1
0x261 LOG0
0x262 MUL
0x263 EXTCODEHASH
0x264 MISSING 0x4a
0x265 MISSING 0xc4
0x266 MISSING 0x1e
0x267 TIMESTAMP
0x268 MISSING 0xc9
0x269 STATICCALL
0x26a MISSING 0xfc
0x26b JUMPDEST
0x26c STOP
0x26d MISSING 0x29
---
0x24d: JUMPDEST 
0x24e: MISSING 0xd7
0x24f: MISSING 0xca
0x250: V220 = EXTCODEHASH S0
0x251: MISSING 0xee
0x252: MISSING 0xb4
0x253: V221 = 0x92d7de08c0f433f051de
0x25e: V222 = SMOD 0x92d7de08c0f433f051de S0
0x260: MISSING 0xc1
0x261: LOG S0 S1
0x262: V223 = MUL S2 S3
0x263: V224 = EXTCODEHASH V223
0x264: MISSING 0x4a
0x265: MISSING 0xc4
0x266: MISSING 0x1e
0x267: V225 = TIMESTAMP
0x268: MISSING 0xc9
0x269: V226 = STATICCALL S0 S1 S2 S3 S4 S5
0x26a: MISSING 0xfc
0x26b: JUMPDEST 
0x26c: STOP 
0x26d: MISSING 0x29
---
Entry stack: [V219]
Stack pops: 0
Stack additions: [V220, V222, V222, V224, V225, V226]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x6d
Exit block: 0x6b
Body: 0x6b, 0x6d, 0x74, 0x75, 0x145, 0x15e, 0x182, 0x187, 0x18d, 0x1b2, 0x1b3, 0x1b4, 0x1b5

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x82
Exit block: 0x6b
Body: 0x68, 0x69, 0x6b, 0x82, 0x89, 0x8a, 0x1b9, 0x1d1, 0x1e1, 0x1e6

Function 2:
Public function signature: 0xb4a99a4e
Entry block: 0x94
Exit block: 0xa4
Body: 0x94, 0x9b, 0x9c, 0xa4, 0x1f6

Function 3:
Public function signature: 0xd0e30db0
Entry block: 0xc0
Exit block: 0x6b
Body: 0x6b, 0xc0

Function 4:
Public function signature: 0xe1c7392a
Entry block: 0xca
Exit block: 0x6b
Body: 0x6b, 0xca, 0xd1, 0xd2, 0x205, 0x22e

Function 5:
Public function signature: 0xfc7e286d
Entry block: 0xdc
Exit block: 0xf8
Body: 0xdc, 0xe3, 0xe4, 0xf8, 0x230

Function 6:
Public fallback function
Entry block: 0x5c
Exit block: 0x6b
Body: 0x5c, 0x60, 0x68, 0x69, 0x6b

