Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x41]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x41
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x41
0xc: JUMPI 0x41 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x43]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x29f0a422
0x3c EQ
0x3d PUSH2 0x43
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x29f0a422
0x3c: V13 = EQ 0x29f0a422 V11
0x3d: V14 = 0x43
0x40: JUMPI 0x43 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x42]
---
Predecessors: [0x0, 0xd]
Successors: []
---
0x41 JUMPDEST
0x42 STOP
---
0x41: JUMPDEST 
0x42: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x43
[0x43:0x77]
---
Predecessors: [0xd]
Successors: [0x7a]
---
0x43 JUMPDEST
0x44 PUSH2 0x78
0x47 PUSH1 0x4
0x49 DUP1
0x4a DUP1
0x4b CALLDATALOAD
0x4c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x61 AND
0x62 SWAP1
0x63 PUSH1 0x20
0x65 ADD
0x66 SWAP1
0x67 SWAP2
0x68 SWAP1
0x69 DUP1
0x6a CALLDATALOAD
0x6b SWAP1
0x6c PUSH1 0x20
0x6e ADD
0x6f SWAP1
0x70 SWAP2
0x71 SWAP1
0x72 POP
0x73 POP
0x74 PUSH2 0x7a
0x77 JUMP
---
0x43: JUMPDEST 
0x44: V15 = 0x78
0x47: V16 = 0x4
0x4b: V17 = CALLDATALOAD 0x4
0x4c: V18 = 0xffffffffffffffffffffffffffffffffffffffff
0x61: V19 = AND 0xffffffffffffffffffffffffffffffffffffffff V17
0x63: V20 = 0x20
0x65: V21 = ADD 0x20 0x4
0x6a: V22 = CALLDATALOAD 0x24
0x6c: V23 = 0x20
0x6e: V24 = ADD 0x20 0x24
0x74: V25 = 0x7a
0x77: JUMP 0x7a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x78, V19, V22]
Exit stack: [V11, 0x78, V19, V22]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x1f5]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0xb1]
---
Predecessors: [0x43]
Successors: [0xb2, 0xb6]
---
0x7a JUMPDEST
0x7b PUSH1 0x0
0x7d ORIGIN
0x7e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x93 AND
0x94 CALLER
0x95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa AND
0xab EQ
0xac ISZERO
0xad ISZERO
0xae PUSH2 0xb6
0xb1 JUMPI
---
0x7a: JUMPDEST 
0x7b: V26 = 0x0
0x7d: V27 = ORIGIN
0x7e: V28 = 0xffffffffffffffffffffffffffffffffffffffff
0x93: V29 = AND 0xffffffffffffffffffffffffffffffffffffffff V27
0x94: V30 = CALLER
0x95: V31 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa: V32 = AND 0xffffffffffffffffffffffffffffffffffffffff V30
0xab: V33 = EQ V32 V29
0xac: V34 = ISZERO V33
0xad: V35 = ISZERO V34
0xae: V36 = 0xb6
0xb1: JUMPI 0xb6 V35
---
Entry stack: [V11, 0x78, V19, V22]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x78, V19, V22, 0x0]

================================

Block 0xb2
[0xb2:0xb5]
---
Predecessors: [0x7a]
Successors: []
---
0xb2 PUSH1 0x0
0xb4 DUP1
0xb5 REVERT
---
0xb2: V37 = 0x0
0xb5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x78, V19, V22, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x78, V19, V22, 0x0]

================================

Block 0xb6
[0xb6:0xfb]
---
Predecessors: [0x7a]
Successors: [0x1fa]
---
0xb6 JUMPDEST
0xb7 TIMESTAMP
0xb8 DUP2
0xb9 PUSH1 0x0
0xbb ADD
0xbc DUP2
0xbd SWAP1
0xbe SSTORE
0xbf POP
0xc0 ADDRESS
0xc1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd6 AND
0xd7 BALANCE
0xd8 DUP2
0xd9 PUSH1 0x1
0xdb ADD
0xdc DUP2
0xdd SWAP1
0xde SSTORE
0xdf POP
0xe0 CALLVALUE
0xe1 DUP2
0xe2 PUSH1 0x2
0xe4 ADD
0xe5 DUP2
0xe6 SWAP1
0xe7 SSTORE
0xe8 POP
0xe9 PUSH1 0x4
0xeb DUP1
0xec SLOAD
0xed DUP1
0xee PUSH1 0x1
0xf0 ADD
0xf1 DUP3
0xf2 DUP2
0xf3 PUSH2 0xfc
0xf6 SWAP2
0xf7 SWAP1
0xf8 PUSH2 0x1fa
0xfb JUMP
---
0xb6: JUMPDEST 
0xb7: V38 = TIMESTAMP
0xb9: V39 = 0x0
0xbb: V40 = ADD 0x0 0x0
0xbe: S[0x0] = V38
0xc0: V41 = ADDRESS
0xc1: V42 = 0xffffffffffffffffffffffffffffffffffffffff
0xd6: V43 = AND 0xffffffffffffffffffffffffffffffffffffffff V41
0xd7: V44 = BALANCE V43
0xd9: V45 = 0x1
0xdb: V46 = ADD 0x1 0x0
0xde: S[0x1] = V44
0xe0: V47 = CALLVALUE
0xe2: V48 = 0x2
0xe4: V49 = ADD 0x2 0x0
0xe7: S[0x2] = V47
0xe9: V50 = 0x4
0xec: V51 = S[0x4]
0xee: V52 = 0x1
0xf0: V53 = ADD 0x1 V51
0xf3: V54 = 0xfc
0xf8: V55 = 0x1fa
0xfb: JUMP 0x1fa
---
Entry stack: [V11, 0x78, V19, V22, 0x0]
Stack pops: 1
Stack additions: [S0, 0x4, V51, V53, 0xfc, 0x4, V53]
Exit stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53]

================================

Block 0xfc
[0xfc:0x143]
---
Predecessors: [0x227]
Successors: [0x144, 0x1f5]
---
0xfc JUMPDEST
0xfd SWAP2
0xfe PUSH1 0x0
0x100 MSTORE
0x101 PUSH1 0x20
0x103 PUSH1 0x0
0x105 SHA3
0x106 SWAP1
0x107 PUSH1 0x3
0x109 MUL
0x10a ADD
0x10b PUSH1 0x0
0x10d DUP4
0x10e SWAP1
0x10f SWAP2
0x110 SWAP1
0x111 SWAP2
0x112 POP
0x113 PUSH1 0x0
0x115 DUP3
0x116 ADD
0x117 SLOAD
0x118 DUP2
0x119 PUSH1 0x0
0x11b ADD
0x11c SSTORE
0x11d PUSH1 0x1
0x11f DUP3
0x120 ADD
0x121 SLOAD
0x122 DUP2
0x123 PUSH1 0x1
0x125 ADD
0x126 SSTORE
0x127 PUSH1 0x2
0x129 DUP3
0x12a ADD
0x12b SLOAD
0x12c DUP2
0x12d PUSH1 0x2
0x12f ADD
0x130 SSTORE
0x131 POP
0x132 POP
0x133 POP
0x134 PUSH8 0xde0b6b3a7640000
0x13d CALLVALUE
0x13e GT
0x13f ISZERO
0x140 PUSH2 0x1f5
0x143 JUMPI
---
0xfc: JUMPDEST 
0xfe: V56 = 0x0
0x100: M[0x0] = 0x4
0x101: V57 = 0x20
0x103: V58 = 0x0
0x105: V59 = SHA3 0x0 0x20
0x107: V60 = 0x3
0x109: V61 = MUL 0x3 V51
0x10a: V62 = ADD V61 V59
0x10b: V63 = 0x0
0x113: V64 = 0x0
0x116: V65 = ADD 0x0 0x0
0x117: V66 = S[0x0]
0x119: V67 = 0x0
0x11b: V68 = ADD 0x0 V62
0x11c: S[V68] = V66
0x11d: V69 = 0x1
0x120: V70 = ADD 0x0 0x1
0x121: V71 = S[0x1]
0x123: V72 = 0x1
0x125: V73 = ADD 0x1 V62
0x126: S[V73] = V71
0x127: V74 = 0x2
0x12a: V75 = ADD 0x0 0x2
0x12b: V76 = S[0x2]
0x12d: V77 = 0x2
0x12f: V78 = ADD 0x2 V62
0x130: S[V78] = V76
0x134: V79 = 0xde0b6b3a7640000
0x13d: V80 = CALLVALUE
0x13e: V81 = GT V80 0xde0b6b3a7640000
0x13f: V82 = ISZERO V81
0x140: V83 = 0x1f5
0x143: JUMPI 0x1f5 V82
---
Entry stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53]
Stack pops: 4
Stack additions: [S3]
Exit stack: [V11, 0x78, V19, V22, 0x0]

================================

Block 0x144
[0x144:0x1f4]
---
Predecessors: [0xfc]
Successors: [0x1f5]
---
0x144 PUSH1 0x3
0x146 PUSH1 0x0
0x148 SWAP1
0x149 SLOAD
0x14a SWAP1
0x14b PUSH2 0x100
0x14e EXP
0x14f SWAP1
0x150 DIV
0x151 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x166 AND
0x167 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17c AND
0x17d PUSH2 0x8fc
0x180 PUSH1 0x1
0x182 SLOAD
0x183 SWAP1
0x184 DUP2
0x185 ISZERO
0x186 MUL
0x187 SWAP1
0x188 PUSH1 0x40
0x18a MLOAD
0x18b PUSH1 0x0
0x18d PUSH1 0x40
0x18f MLOAD
0x190 DUP1
0x191 DUP4
0x192 SUB
0x193 DUP2
0x194 DUP6
0x195 DUP9
0x196 DUP9
0x197 CALL
0x198 SWAP4
0x199 POP
0x19a POP
0x19b POP
0x19c POP
0x19d POP
0x19e DUP3
0x19f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b4 AND
0x1b5 PUSH2 0x8fc
0x1b8 DUP4
0x1b9 SWAP1
0x1ba DUP2
0x1bb ISZERO
0x1bc MUL
0x1bd SWAP1
0x1be PUSH1 0x40
0x1c0 MLOAD
0x1c1 PUSH1 0x0
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 DUP1
0x1c7 DUP4
0x1c8 SUB
0x1c9 DUP2
0x1ca DUP6
0x1cb DUP9
0x1cc DUP9
0x1cd CALL
0x1ce SWAP4
0x1cf POP
0x1d0 POP
0x1d1 POP
0x1d2 POP
0x1d3 POP
0x1d4 PUSH1 0x1
0x1d6 SLOAD
0x1d7 PUSH1 0x0
0x1d9 DUP1
0x1da DUP3
0x1db DUP3
0x1dc SLOAD
0x1dd ADD
0x1de SWAP3
0x1df POP
0x1e0 POP
0x1e1 DUP2
0x1e2 SWAP1
0x1e3 SSTORE
0x1e4 POP
0x1e5 DUP2
0x1e6 PUSH1 0x2
0x1e8 PUSH1 0x0
0x1ea DUP3
0x1eb DUP3
0x1ec SLOAD
0x1ed ADD
0x1ee SWAP3
0x1ef POP
0x1f0 POP
0x1f1 DUP2
0x1f2 SWAP1
0x1f3 SSTORE
0x1f4 POP
---
0x144: V84 = 0x3
0x146: V85 = 0x0
0x149: V86 = S[0x3]
0x14b: V87 = 0x100
0x14e: V88 = EXP 0x100 0x0
0x150: V89 = DIV V86 0x1
0x151: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x166: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x167: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x17c: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x17d: V94 = 0x8fc
0x180: V95 = 0x1
0x182: V96 = S[0x1]
0x185: V97 = ISZERO V96
0x186: V98 = MUL V97 0x8fc
0x188: V99 = 0x40
0x18a: V100 = M[0x40]
0x18b: V101 = 0x0
0x18d: V102 = 0x40
0x18f: V103 = M[0x40]
0x192: V104 = SUB V100 V103
0x197: V105 = CALL V98 V93 V96 V103 V104 V103 0x0
0x19f: V106 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b4: V107 = AND 0xffffffffffffffffffffffffffffffffffffffff V19
0x1b5: V108 = 0x8fc
0x1bb: V109 = ISZERO V22
0x1bc: V110 = MUL V109 0x8fc
0x1be: V111 = 0x40
0x1c0: V112 = M[0x40]
0x1c1: V113 = 0x0
0x1c3: V114 = 0x40
0x1c5: V115 = M[0x40]
0x1c8: V116 = SUB V112 V115
0x1cd: V117 = CALL V110 V107 V22 V115 V116 V115 0x0
0x1d4: V118 = 0x1
0x1d6: V119 = S[0x1]
0x1d7: V120 = 0x0
0x1dc: V121 = S[0x0]
0x1dd: V122 = ADD V121 V119
0x1e3: S[0x0] = V122
0x1e6: V123 = 0x2
0x1e8: V124 = 0x0
0x1ec: V125 = S[0x2]
0x1ed: V126 = ADD V125 V22
0x1f3: S[0x2] = V126
---
Entry stack: [V11, 0x78, V19, V22, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x78, V19, V22, 0x0]

================================

Block 0x1f5
[0x1f5:0x1f9]
---
Predecessors: [0xfc, 0x144]
Successors: [0x78]
---
0x1f5 JUMPDEST
0x1f6 POP
0x1f7 POP
0x1f8 POP
0x1f9 JUMP
---
0x1f5: JUMPDEST 
0x1f9: JUMP 0x78
---
Entry stack: [V11, 0x78, V19, V22, 0x0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x1fa
[0x1fa:0x207]
---
Predecessors: [0xb6]
Successors: [0x208, 0x227]
---
0x1fa JUMPDEST
0x1fb DUP2
0x1fc SLOAD
0x1fd DUP2
0x1fe DUP4
0x1ff SSTORE
0x200 DUP2
0x201 DUP2
0x202 ISZERO
0x203 GT
0x204 PUSH2 0x227
0x207 JUMPI
---
0x1fa: JUMPDEST 
0x1fc: V127 = S[0x4]
0x1ff: S[0x4] = V53
0x202: V128 = ISZERO V127
0x203: V129 = GT V128 V53
0x204: V130 = 0x227
0x207: JUMPI 0x227 V129
---
Entry stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53]
Stack pops: 2
Stack additions: [S1, S0, V127]
Exit stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53, V127]

================================

Block 0x208
[0x208:0x225]
---
Predecessors: [0x1fa]
Successors: [0x22c]
---
0x208 PUSH1 0x3
0x20a MUL
0x20b DUP2
0x20c PUSH1 0x3
0x20e MUL
0x20f DUP4
0x210 PUSH1 0x0
0x212 MSTORE
0x213 PUSH1 0x20
0x215 PUSH1 0x0
0x217 SHA3
0x218 SWAP2
0x219 DUP3
0x21a ADD
0x21b SWAP2
0x21c ADD
0x21d PUSH2 0x226
0x220 SWAP2
0x221 SWAP1
0x222 PUSH2 0x22c
0x225 JUMP
---
0x208: V131 = 0x3
0x20a: V132 = MUL 0x3 V127
0x20c: V133 = 0x3
0x20e: V134 = MUL 0x3 V53
0x210: V135 = 0x0
0x212: M[0x0] = 0x4
0x213: V136 = 0x20
0x215: V137 = 0x0
0x217: V138 = SHA3 0x0 0x20
0x21a: V139 = ADD V138 V132
0x21c: V140 = ADD V138 V134
0x21d: V141 = 0x226
0x222: V142 = 0x22c
0x225: JUMP 0x22c
---
Entry stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53, V127]
Stack pops: 3
Stack additions: [S2, S1, 0x226, V139, V140]
Exit stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53, 0x226, V139, V140]

================================

Block 0x226
[0x226:0x226]
---
Predecessors: [0x260]
Successors: [0x227]
---
0x226 JUMPDEST
---
0x226: JUMPDEST 
---
Entry stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53, V139]

================================

Block 0x227
[0x227:0x22b]
---
Predecessors: [0x1fa, 0x226]
Successors: [0xfc]
---
0x227 JUMPDEST
0x228 POP
0x229 POP
0x22a POP
0x22b JUMP
---
0x227: JUMPDEST 
0x22b: JUMP 0xfc
---
Entry stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53]

================================

Block 0x22c
[0x22c:0x231]
---
Predecessors: [0x208]
Successors: [0x232]
---
0x22c JUMPDEST
0x22d PUSH2 0x260
0x230 SWAP2
0x231 SWAP1
---
0x22c: JUMPDEST 
0x22d: V143 = 0x260
---
Entry stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53, 0x226, V139, V140]
Stack pops: 2
Stack additions: [0x260, S1, S0]
Exit stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53, 0x226, 0x260, V139, V140]

================================

Block 0x232
[0x232:0x23a]
---
Predecessors: [0x22c, 0x23b]
Successors: [0x23b, 0x25c]
---
0x232 JUMPDEST
0x233 DUP1
0x234 DUP3
0x235 GT
0x236 ISZERO
0x237 PUSH2 0x25c
0x23a JUMPI
---
0x232: JUMPDEST 
0x235: V144 = GT V139 S0
0x236: V145 = ISZERO V144
0x237: V146 = 0x25c
0x23a: JUMPI 0x25c V145
---
Entry stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53, 0x226, 0x260, V139, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53, 0x226, 0x260, V139, S0]

================================

Block 0x23b
[0x23b:0x25b]
---
Predecessors: [0x232]
Successors: [0x232]
---
0x23b PUSH1 0x0
0x23d DUP1
0x23e DUP3
0x23f ADD
0x240 PUSH1 0x0
0x242 SWAP1
0x243 SSTORE
0x244 PUSH1 0x1
0x246 DUP3
0x247 ADD
0x248 PUSH1 0x0
0x24a SWAP1
0x24b SSTORE
0x24c PUSH1 0x2
0x24e DUP3
0x24f ADD
0x250 PUSH1 0x0
0x252 SWAP1
0x253 SSTORE
0x254 POP
0x255 PUSH1 0x3
0x257 ADD
0x258 PUSH2 0x232
0x25b JUMP
---
0x23b: V147 = 0x0
0x23f: V148 = ADD S0 0x0
0x240: V149 = 0x0
0x243: S[V148] = 0x0
0x244: V150 = 0x1
0x247: V151 = ADD S0 0x1
0x248: V152 = 0x0
0x24b: S[V151] = 0x0
0x24c: V153 = 0x2
0x24f: V154 = ADD S0 0x2
0x250: V155 = 0x0
0x253: S[V154] = 0x0
0x255: V156 = 0x3
0x257: V157 = ADD 0x3 S0
0x258: V158 = 0x232
0x25b: JUMP 0x232
---
Entry stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53, 0x226, 0x260, V139, S0]
Stack pops: 1
Stack additions: [V157]
Exit stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53, 0x226, 0x260, V139, V157]

================================

Block 0x25c
[0x25c:0x25f]
---
Predecessors: [0x232]
Successors: [0x260]
---
0x25c JUMPDEST
0x25d POP
0x25e SWAP1
0x25f JUMP
---
0x25c: JUMPDEST 
0x25f: JUMP 0x260
---
Entry stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53, 0x226, 0x260, V139, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53, 0x226, V139]

================================

Block 0x260
[0x260:0x262]
---
Predecessors: [0x25c]
Successors: [0x226]
---
0x260 JUMPDEST
0x261 SWAP1
0x262 JUMP
---
0x260: JUMPDEST 
0x262: JUMP 0x226
---
Entry stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53, 0x226, V139]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x78, V19, V22, 0x0, 0x4, V51, V53, 0xfc, 0x4, V53, V139]

================================

Block 0x263
[0x263:0x293]
---
Predecessors: []
Successors: []
---
0x263 STOP
0x264 LOG1
0x265 PUSH6 0x627a7a723058
0x26c SHA3
0x26d MISSING 0xb1
0x26e PUSH2 0x1a4e
0x271 JUMP
0x272 MOD
0x273 PUSH32 0xdc39865bb681bd84f07169e9ee1134bc1f14c76cd5656f58b80029
---
0x263: STOP 
0x264: LOG S0 S1 S2
0x265: V159 = 0x627a7a723058
0x26c: V160 = SHA3 0x627a7a723058 S3
0x26d: MISSING 0xb1
0x26e: V161 = 0x1a4e
0x271: THROW 
0x272: V162 = MOD S0 S1
0x273: V163 = 0xdc39865bb681bd84f07169e9ee1134bc1f14c76cd5656f58b80029
---
Entry stack: []
Stack pops: 0
Stack additions: [V160, 0xdc39865bb681bd84f07169e9ee1134bc1f14c76cd5656f58b80029, V162]
Exit stack: []

================================

Function 0:
Public function signature: 0x29f0a422
Entry block: 0x43
Exit block: 0x78
Body: 0x43, 0x78, 0x7a, 0xb2, 0xb6, 0xfc, 0x144, 0x1f5, 0x1fa, 0x208, 0x226, 0x227, 0x22c, 0x232, 0x23b, 0x25c, 0x260

Function 1:
Public fallback function
Entry block: 0x41
Exit block: 0x41
Body: 0x41

