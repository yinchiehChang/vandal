Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x6e]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1bc4c81b
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x6e
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1bc4c81b
0x3b: V13 = EQ V11 0x1bc4c81b
0x3c: V14 = 0x6e
0x3f: JUMPI 0x6e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xf8]
---
0x40 DUP1
0x41 PUSH4 0x2add78bb
0x46 EQ
0x47 PUSH2 0xf8
0x4a JUMPI
---
0x41: V15 = 0x2add78bb
0x46: V16 = EQ 0x2add78bb V11
0x47: V17 = 0xf8
0x4a: JUMPI 0xf8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x182]
---
0x4b DUP1
0x4c PUSH4 0x3853682c
0x51 EQ
0x52 PUSH2 0x182
0x55 JUMPI
---
0x4c: V18 = 0x3853682c
0x51: V19 = EQ 0x3853682c V11
0x52: V20 = 0x182
0x55: JUMPI 0x182 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x1ce]
---
0x56 DUP1
0x57 PUSH4 0x58e756b6
0x5c EQ
0x5d PUSH2 0x1ce
0x60 JUMPI
---
0x57: V21 = 0x58e756b6
0x5c: V22 = EQ 0x58e756b6 V11
0x5d: V23 = 0x1ce
0x60: JUMPI 0x1ce V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x21c]
---
0x61 DUP1
0x62 PUSH4 0x8df208b7
0x67 EQ
0x68 PUSH2 0x21c
0x6b JUMPI
---
0x62: V24 = 0x8df208b7
0x67: V25 = EQ 0x8df208b7 V11
0x68: V26 = 0x21c
0x6b: JUMPI 0x21c V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x0, 0x61, 0x35f, 0x424, 0x45e, 0x4d0, 0x54c]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]

================================

Block 0x6e
[0x6e:0x75]
---
Predecessors: [0xd]
Successors: [0x76, 0x7a]
---
0x6e JUMPDEST
0x6f CALLVALUE
0x70 DUP1
0x71 ISZERO
0x72 PUSH2 0x7a
0x75 JUMPI
---
0x6e: JUMPDEST 
0x6f: V27 = CALLVALUE
0x71: V28 = ISZERO V27
0x72: V29 = 0x7a
0x75: JUMPI 0x7a V28
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V27]
Exit stack: [V11, V27]

================================

Block 0x76
[0x76:0x79]
---
Predecessors: [0x6e]
Successors: []
---
0x76 PUSH1 0x0
0x78 DUP1
0x79 REVERT
---
0x76: V30 = 0x0
0x79: REVERT 0x0 0x0
---
Entry stack: [V11, V27]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V27]

================================

Block 0x7a
[0x7a:0x82]
---
Predecessors: [0x6e]
Successors: [0x224]
---
0x7a JUMPDEST
0x7b POP
0x7c PUSH2 0x83
0x7f PUSH2 0x224
0x82 JUMP
---
0x7a: JUMPDEST 
0x7c: V31 = 0x83
0x7f: V32 = 0x224
0x82: JUMP 0x224
---
Entry stack: [V11, V27]
Stack pops: 1
Stack additions: [0x83]
Exit stack: [V11, 0x83]

================================

Block 0x83
[0x83:0xa4]
---
Predecessors: [0x2a9]
Successors: [0xa5]
---
0x83 JUMPDEST
0x84 PUSH1 0x40
0x86 DUP1
0x87 MLOAD
0x88 PUSH1 0x20
0x8a DUP1
0x8b DUP3
0x8c MSTORE
0x8d DUP4
0x8e MLOAD
0x8f DUP2
0x90 DUP4
0x91 ADD
0x92 MSTORE
0x93 DUP4
0x94 MLOAD
0x95 SWAP2
0x96 SWAP3
0x97 DUP4
0x98 SWAP3
0x99 SWAP1
0x9a DUP4
0x9b ADD
0x9c SWAP2
0x9d DUP6
0x9e ADD
0x9f SWAP1
0xa0 DUP1
0xa1 DUP4
0xa2 DUP4
0xa3 PUSH1 0x0
---
0x83: JUMPDEST 
0x84: V33 = 0x40
0x87: V34 = M[0x40]
0x88: V35 = 0x20
0x8c: M[V34] = 0x20
0x8e: V36 = M[V149]
0x91: V37 = ADD V34 0x20
0x92: M[V37] = V36
0x94: V38 = M[V149]
0x9b: V39 = ADD V34 0x40
0x9e: V40 = ADD V149 0x20
0xa3: V41 = 0x0
---
Entry stack: [V11, 0x83, V149]
Stack pops: 1
Stack additions: [S0, V34, V34, V39, V40, V38, V38, V39, V40, 0x0]
Exit stack: [V11, 0x83, V149, V34, V34, V39, V40, V38, V38, V39, V40, 0x0]

================================

Block 0xa5
[0xa5:0xad]
---
Predecessors: [0x83, 0xae]
Successors: [0xae, 0xbd]
---
0xa5 JUMPDEST
0xa6 DUP4
0xa7 DUP2
0xa8 LT
0xa9 ISZERO
0xaa PUSH2 0xbd
0xad JUMPI
---
0xa5: JUMPDEST 
0xa8: V42 = LT S0 V38
0xa9: V43 = ISZERO V42
0xaa: V44 = 0xbd
0xad: JUMPI 0xbd V43
---
Entry stack: [V11, 0x83, V149, V34, V34, V39, V40, V38, V38, V39, V40, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x83, V149, V34, V34, V39, V40, V38, V38, V39, V40, S0]

================================

Block 0xae
[0xae:0xbc]
---
Predecessors: [0xa5]
Successors: [0xa5]
---
0xae DUP2
0xaf DUP2
0xb0 ADD
0xb1 MLOAD
0xb2 DUP4
0xb3 DUP3
0xb4 ADD
0xb5 MSTORE
0xb6 PUSH1 0x20
0xb8 ADD
0xb9 PUSH2 0xa5
0xbc JUMP
---
0xb0: V45 = ADD S0 V40
0xb1: V46 = M[V45]
0xb4: V47 = ADD S0 V39
0xb5: M[V47] = V46
0xb6: V48 = 0x20
0xb8: V49 = ADD 0x20 S0
0xb9: V50 = 0xa5
0xbc: JUMP 0xa5
---
Entry stack: [V11, 0x83, V149, V34, V34, V39, V40, V38, V38, V39, V40, S0]
Stack pops: 3
Stack additions: [S2, S1, V49]
Exit stack: [V11, 0x83, V149, V34, V34, V39, V40, V38, V38, V39, V40, V49]

================================

Block 0xbd
[0xbd:0xd0]
---
Predecessors: [0xa5]
Successors: [0xd1, 0xea]
---
0xbd JUMPDEST
0xbe POP
0xbf POP
0xc0 POP
0xc1 POP
0xc2 SWAP1
0xc3 POP
0xc4 SWAP1
0xc5 DUP2
0xc6 ADD
0xc7 SWAP1
0xc8 PUSH1 0x1f
0xca AND
0xcb DUP1
0xcc ISZERO
0xcd PUSH2 0xea
0xd0 JUMPI
---
0xbd: JUMPDEST 
0xc6: V51 = ADD V38 V39
0xc8: V52 = 0x1f
0xca: V53 = AND 0x1f V38
0xcc: V54 = ISZERO V53
0xcd: V55 = 0xea
0xd0: JUMPI 0xea V54
---
Entry stack: [V11, 0x83, V149, V34, V34, V39, V40, V38, V38, V39, V40, S0]
Stack pops: 7
Stack additions: [V51, V53]
Exit stack: [V11, 0x83, V149, V34, V34, V51, V53]

================================

Block 0xd1
[0xd1:0xe9]
---
Predecessors: [0xbd]
Successors: [0xea]
---
0xd1 DUP1
0xd2 DUP3
0xd3 SUB
0xd4 DUP1
0xd5 MLOAD
0xd6 PUSH1 0x1
0xd8 DUP4
0xd9 PUSH1 0x20
0xdb SUB
0xdc PUSH2 0x100
0xdf EXP
0xe0 SUB
0xe1 NOT
0xe2 AND
0xe3 DUP2
0xe4 MSTORE
0xe5 PUSH1 0x20
0xe7 ADD
0xe8 SWAP2
0xe9 POP
---
0xd3: V56 = SUB V51 V53
0xd5: V57 = M[V56]
0xd6: V58 = 0x1
0xd9: V59 = 0x20
0xdb: V60 = SUB 0x20 V53
0xdc: V61 = 0x100
0xdf: V62 = EXP 0x100 V60
0xe0: V63 = SUB V62 0x1
0xe1: V64 = NOT V63
0xe2: V65 = AND V64 V57
0xe4: M[V56] = V65
0xe5: V66 = 0x20
0xe7: V67 = ADD 0x20 V56
---
Entry stack: [V11, 0x83, V149, V34, V34, V51, V53]
Stack pops: 2
Stack additions: [V67, S0]
Exit stack: [V11, 0x83, V149, V34, V34, V67, V53]

================================

Block 0xea
[0xea:0xf7]
---
Predecessors: [0xbd, 0xd1]
Successors: []
---
0xea JUMPDEST
0xeb POP
0xec SWAP3
0xed POP
0xee POP
0xef POP
0xf0 PUSH1 0x40
0xf2 MLOAD
0xf3 DUP1
0xf4 SWAP2
0xf5 SUB
0xf6 SWAP1
0xf7 RETURN
---
0xea: JUMPDEST 
0xf0: V68 = 0x40
0xf2: V69 = M[0x40]
0xf5: V70 = SUB S1 V69
0xf7: RETURN V69 V70
---
Entry stack: [V11, 0x83, V149, V34, V34, S1, V53]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x83]

================================

Block 0xf8
[0xf8:0x181]
---
Predecessors: [0x40]
Successors: [0x2b1]
---
0xf8 JUMPDEST
0xf9 PUSH1 0x40
0xfb DUP1
0xfc MLOAD
0xfd PUSH1 0x20
0xff PUSH1 0x4
0x101 DUP1
0x102 CALLDATALOAD
0x103 DUP1
0x104 DUP3
0x105 ADD
0x106 CALLDATALOAD
0x107 PUSH1 0x1f
0x109 DUP2
0x10a ADD
0x10b DUP5
0x10c SWAP1
0x10d DIV
0x10e DUP5
0x10f MUL
0x110 DUP6
0x111 ADD
0x112 DUP5
0x113 ADD
0x114 SWAP1
0x115 SWAP6
0x116 MSTORE
0x117 DUP5
0x118 DUP5
0x119 MSTORE
0x11a PUSH2 0x6c
0x11d SWAP5
0x11e CALLDATASIZE
0x11f SWAP5
0x120 SWAP3
0x121 SWAP4
0x122 PUSH1 0x24
0x124 SWAP4
0x125 SWAP3
0x126 DUP5
0x127 ADD
0x128 SWAP2
0x129 SWAP1
0x12a DUP2
0x12b SWAP1
0x12c DUP5
0x12d ADD
0x12e DUP4
0x12f DUP3
0x130 DUP1
0x131 DUP3
0x132 DUP5
0x133 CALLDATACOPY
0x134 POP
0x135 POP
0x136 PUSH1 0x40
0x138 DUP1
0x139 MLOAD
0x13a PUSH1 0x20
0x13c PUSH1 0x1f
0x13e DUP10
0x13f CALLDATALOAD
0x140 DUP12
0x141 ADD
0x142 DUP1
0x143 CALLDATALOAD
0x144 SWAP2
0x145 DUP3
0x146 ADD
0x147 DUP4
0x148 SWAP1
0x149 DIV
0x14a DUP4
0x14b MUL
0x14c DUP5
0x14d ADD
0x14e DUP4
0x14f ADD
0x150 SWAP1
0x151 SWAP5
0x152 MSTORE
0x153 DUP1
0x154 DUP4
0x155 MSTORE
0x156 SWAP8
0x157 SWAP11
0x158 SWAP10
0x159 SWAP9
0x15a DUP2
0x15b ADD
0x15c SWAP8
0x15d SWAP2
0x15e SWAP7
0x15f POP
0x160 SWAP2
0x161 DUP3
0x162 ADD
0x163 SWAP5
0x164 POP
0x165 SWAP3
0x166 POP
0x167 DUP3
0x168 SWAP2
0x169 POP
0x16a DUP5
0x16b ADD
0x16c DUP4
0x16d DUP3
0x16e DUP1
0x16f DUP3
0x170 DUP5
0x171 CALLDATACOPY
0x172 POP
0x173 SWAP5
0x174 SWAP8
0x175 POP
0x176 PUSH2 0x2b1
0x179 SWAP7
0x17a POP
0x17b POP
0x17c POP
0x17d POP
0x17e POP
0x17f POP
0x180 POP
0x181 JUMP
---
0xf8: JUMPDEST 
0xf9: V71 = 0x40
0xfc: V72 = M[0x40]
0xfd: V73 = 0x20
0xff: V74 = 0x4
0x102: V75 = CALLDATALOAD 0x4
0x105: V76 = ADD 0x4 V75
0x106: V77 = CALLDATALOAD V76
0x107: V78 = 0x1f
0x10a: V79 = ADD V77 0x1f
0x10d: V80 = DIV V79 0x20
0x10f: V81 = MUL 0x20 V80
0x111: V82 = ADD V72 V81
0x113: V83 = ADD 0x20 V82
0x116: M[0x40] = V83
0x119: M[V72] = V77
0x11a: V84 = 0x6c
0x11e: V85 = CALLDATASIZE
0x122: V86 = 0x24
0x127: V87 = ADD 0x24 V75
0x12d: V88 = ADD V72 0x20
0x133: CALLDATACOPY V88 V87 V77
0x136: V89 = 0x40
0x139: V90 = M[0x40]
0x13a: V91 = 0x20
0x13c: V92 = 0x1f
0x13f: V93 = CALLDATALOAD 0x24
0x141: V94 = ADD 0x4 V93
0x143: V95 = CALLDATALOAD V94
0x146: V96 = ADD V95 0x1f
0x149: V97 = DIV V96 0x20
0x14b: V98 = MUL 0x20 V97
0x14d: V99 = ADD V90 V98
0x14f: V100 = ADD 0x20 V99
0x152: M[0x40] = V100
0x155: M[V90] = V95
0x15b: V101 = ADD 0x20 0x24
0x162: V102 = ADD 0x20 V94
0x16b: V103 = ADD V90 0x20
0x171: CALLDATACOPY V103 V102 V95
0x176: V104 = 0x2b1
0x181: JUMP 0x2b1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V72, V90]
Exit stack: [V11, 0x6c, V72, V90]

================================

Block 0x182
[0x182:0x1cd]
---
Predecessors: [0x4b]
Successors: [0x363]
---
0x182 JUMPDEST
0x183 PUSH1 0x40
0x185 DUP1
0x186 MLOAD
0x187 PUSH1 0x20
0x189 PUSH1 0x4
0x18b DUP1
0x18c CALLDATALOAD
0x18d DUP1
0x18e DUP3
0x18f ADD
0x190 CALLDATALOAD
0x191 PUSH1 0x1f
0x193 DUP2
0x194 ADD
0x195 DUP5
0x196 SWAP1
0x197 DIV
0x198 DUP5
0x199 MUL
0x19a DUP6
0x19b ADD
0x19c DUP5
0x19d ADD
0x19e SWAP1
0x19f SWAP6
0x1a0 MSTORE
0x1a1 DUP5
0x1a2 DUP5
0x1a3 MSTORE
0x1a4 PUSH2 0x6c
0x1a7 SWAP5
0x1a8 CALLDATASIZE
0x1a9 SWAP5
0x1aa SWAP3
0x1ab SWAP4
0x1ac PUSH1 0x24
0x1ae SWAP4
0x1af SWAP3
0x1b0 DUP5
0x1b1 ADD
0x1b2 SWAP2
0x1b3 SWAP1
0x1b4 DUP2
0x1b5 SWAP1
0x1b6 DUP5
0x1b7 ADD
0x1b8 DUP4
0x1b9 DUP3
0x1ba DUP1
0x1bb DUP3
0x1bc DUP5
0x1bd CALLDATACOPY
0x1be POP
0x1bf SWAP5
0x1c0 SWAP8
0x1c1 POP
0x1c2 PUSH2 0x363
0x1c5 SWAP7
0x1c6 POP
0x1c7 POP
0x1c8 POP
0x1c9 POP
0x1ca POP
0x1cb POP
0x1cc POP
0x1cd JUMP
---
0x182: JUMPDEST 
0x183: V105 = 0x40
0x186: V106 = M[0x40]
0x187: V107 = 0x20
0x189: V108 = 0x4
0x18c: V109 = CALLDATALOAD 0x4
0x18f: V110 = ADD 0x4 V109
0x190: V111 = CALLDATALOAD V110
0x191: V112 = 0x1f
0x194: V113 = ADD V111 0x1f
0x197: V114 = DIV V113 0x20
0x199: V115 = MUL 0x20 V114
0x19b: V116 = ADD V106 V115
0x19d: V117 = ADD 0x20 V116
0x1a0: M[0x40] = V117
0x1a3: M[V106] = V111
0x1a4: V118 = 0x6c
0x1a8: V119 = CALLDATASIZE
0x1ac: V120 = 0x24
0x1b1: V121 = ADD 0x24 V109
0x1b7: V122 = ADD V106 0x20
0x1bd: CALLDATACOPY V122 V121 V111
0x1c2: V123 = 0x363
0x1cd: JUMP 0x363
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V106]
Exit stack: [V11, 0x6c, V106]

================================

Block 0x1ce
[0x1ce:0x21b]
---
Predecessors: [0x56]
Successors: [0x427]
---
0x1ce JUMPDEST
0x1cf PUSH1 0x40
0x1d1 DUP1
0x1d2 MLOAD
0x1d3 PUSH1 0x20
0x1d5 PUSH1 0x4
0x1d7 DUP1
0x1d8 CALLDATALOAD
0x1d9 DUP1
0x1da DUP3
0x1db ADD
0x1dc CALLDATALOAD
0x1dd PUSH1 0x1f
0x1df DUP2
0x1e0 ADD
0x1e1 DUP5
0x1e2 SWAP1
0x1e3 DIV
0x1e4 DUP5
0x1e5 MUL
0x1e6 DUP6
0x1e7 ADD
0x1e8 DUP5
0x1e9 ADD
0x1ea SWAP1
0x1eb SWAP6
0x1ec MSTORE
0x1ed DUP5
0x1ee DUP5
0x1ef MSTORE
0x1f0 PUSH2 0x6c
0x1f3 SWAP5
0x1f4 CALLDATASIZE
0x1f5 SWAP5
0x1f6 SWAP3
0x1f7 SWAP4
0x1f8 PUSH1 0x24
0x1fa SWAP4
0x1fb SWAP3
0x1fc DUP5
0x1fd ADD
0x1fe SWAP2
0x1ff SWAP1
0x200 DUP2
0x201 SWAP1
0x202 DUP5
0x203 ADD
0x204 DUP4
0x205 DUP3
0x206 DUP1
0x207 DUP3
0x208 DUP5
0x209 CALLDATACOPY
0x20a POP
0x20b SWAP5
0x20c SWAP8
0x20d POP
0x20e POP
0x20f SWAP4
0x210 CALLDATALOAD
0x211 SWAP5
0x212 POP
0x213 PUSH2 0x427
0x216 SWAP4
0x217 POP
0x218 POP
0x219 POP
0x21a POP
0x21b JUMP
---
0x1ce: JUMPDEST 
0x1cf: V124 = 0x40
0x1d2: V125 = M[0x40]
0x1d3: V126 = 0x20
0x1d5: V127 = 0x4
0x1d8: V128 = CALLDATALOAD 0x4
0x1db: V129 = ADD 0x4 V128
0x1dc: V130 = CALLDATALOAD V129
0x1dd: V131 = 0x1f
0x1e0: V132 = ADD V130 0x1f
0x1e3: V133 = DIV V132 0x20
0x1e5: V134 = MUL 0x20 V133
0x1e7: V135 = ADD V125 V134
0x1e9: V136 = ADD 0x20 V135
0x1ec: M[0x40] = V136
0x1ef: M[V125] = V130
0x1f0: V137 = 0x6c
0x1f4: V138 = CALLDATASIZE
0x1f8: V139 = 0x24
0x1fd: V140 = ADD 0x24 V128
0x203: V141 = ADD V125 0x20
0x209: CALLDATACOPY V141 V140 V130
0x210: V142 = CALLDATALOAD 0x24
0x213: V143 = 0x427
0x21b: JUMP 0x427
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V125, V142]
Exit stack: [V11, 0x6c, V125, V142]

================================

Block 0x21c
[0x21c:0x223]
---
Predecessors: [0x61]
Successors: [0x465]
---
0x21c JUMPDEST
0x21d PUSH2 0x6c
0x220 PUSH2 0x465
0x223 JUMP
---
0x21c: JUMPDEST 
0x21d: V144 = 0x6c
0x220: V145 = 0x465
0x223: JUMP 0x465
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0x224
[0x224:0x262]
---
Predecessors: [0x7a]
Successors: [0x263, 0x2a9]
---
0x224 JUMPDEST
0x225 PUSH1 0x1
0x227 DUP1
0x228 SLOAD
0x229 PUSH1 0x40
0x22b DUP1
0x22c MLOAD
0x22d PUSH1 0x20
0x22f PUSH1 0x2
0x231 DUP5
0x232 DUP7
0x233 AND
0x234 ISZERO
0x235 PUSH2 0x100
0x238 MUL
0x239 PUSH1 0x0
0x23b NOT
0x23c ADD
0x23d SWAP1
0x23e SWAP5
0x23f AND
0x240 SWAP4
0x241 SWAP1
0x242 SWAP4
0x243 DIV
0x244 PUSH1 0x1f
0x246 DUP2
0x247 ADD
0x248 DUP5
0x249 SWAP1
0x24a DIV
0x24b DUP5
0x24c MUL
0x24d DUP3
0x24e ADD
0x24f DUP5
0x250 ADD
0x251 SWAP1
0x252 SWAP3
0x253 MSTORE
0x254 DUP2
0x255 DUP2
0x256 MSTORE
0x257 SWAP3
0x258 SWAP2
0x259 DUP4
0x25a ADD
0x25b DUP3
0x25c DUP3
0x25d DUP1
0x25e ISZERO
0x25f PUSH2 0x2a9
0x262 JUMPI
---
0x224: JUMPDEST 
0x225: V146 = 0x1
0x228: V147 = S[0x1]
0x229: V148 = 0x40
0x22c: V149 = M[0x40]
0x22d: V150 = 0x20
0x22f: V151 = 0x2
0x233: V152 = AND 0x1 V147
0x234: V153 = ISZERO V152
0x235: V154 = 0x100
0x238: V155 = MUL 0x100 V153
0x239: V156 = 0x0
0x23b: V157 = NOT 0x0
0x23c: V158 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V155
0x23f: V159 = AND V147 V158
0x243: V160 = DIV V159 0x2
0x244: V161 = 0x1f
0x247: V162 = ADD V160 0x1f
0x24a: V163 = DIV V162 0x20
0x24c: V164 = MUL 0x20 V163
0x24e: V165 = ADD V149 V164
0x250: V166 = ADD 0x20 V165
0x253: M[0x40] = V166
0x256: M[V149] = V160
0x25a: V167 = ADD V149 0x20
0x25e: V168 = ISZERO V160
0x25f: V169 = 0x2a9
0x262: JUMPI 0x2a9 V168
---
Entry stack: [V11, 0x83]
Stack pops: 0
Stack additions: [V149, 0x1, V160, V167, 0x1, V160]
Exit stack: [V11, 0x83, V149, 0x1, V160, V167, 0x1, V160]

================================

Block 0x263
[0x263:0x26a]
---
Predecessors: [0x224]
Successors: [0x26b, 0x27e]
---
0x263 DUP1
0x264 PUSH1 0x1f
0x266 LT
0x267 PUSH2 0x27e
0x26a JUMPI
---
0x264: V170 = 0x1f
0x266: V171 = LT 0x1f V160
0x267: V172 = 0x27e
0x26a: JUMPI 0x27e V171
---
Entry stack: [V11, 0x83, V149, 0x1, V160, V167, 0x1, V160]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x83, V149, 0x1, V160, V167, 0x1, V160]

================================

Block 0x26b
[0x26b:0x27d]
---
Predecessors: [0x263]
Successors: [0x2a9]
---
0x26b PUSH2 0x100
0x26e DUP1
0x26f DUP4
0x270 SLOAD
0x271 DIV
0x272 MUL
0x273 DUP4
0x274 MSTORE
0x275 SWAP2
0x276 PUSH1 0x20
0x278 ADD
0x279 SWAP2
0x27a PUSH2 0x2a9
0x27d JUMP
---
0x26b: V173 = 0x100
0x270: V174 = S[0x1]
0x271: V175 = DIV V174 0x100
0x272: V176 = MUL V175 0x100
0x274: M[V167] = V176
0x276: V177 = 0x20
0x278: V178 = ADD 0x20 V167
0x27a: V179 = 0x2a9
0x27d: JUMP 0x2a9
---
Entry stack: [V11, 0x83, V149, 0x1, V160, V167, 0x1, V160]
Stack pops: 3
Stack additions: [V178, S1, S0]
Exit stack: [V11, 0x83, V149, 0x1, V160, V178, 0x1, V160]

================================

Block 0x27e
[0x27e:0x28b]
---
Predecessors: [0x263]
Successors: [0x28c]
---
0x27e JUMPDEST
0x27f DUP3
0x280 ADD
0x281 SWAP2
0x282 SWAP1
0x283 PUSH1 0x0
0x285 MSTORE
0x286 PUSH1 0x20
0x288 PUSH1 0x0
0x28a SHA3
0x28b SWAP1
---
0x27e: JUMPDEST 
0x280: V180 = ADD V167 V160
0x283: V181 = 0x0
0x285: M[0x0] = 0x1
0x286: V182 = 0x20
0x288: V183 = 0x0
0x28a: V184 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x83, V149, 0x1, V160, V167, 0x1, V160]
Stack pops: 3
Stack additions: [V180, V184, S2]
Exit stack: [V11, 0x83, V149, 0x1, V160, V180, V184, V167]

================================

Block 0x28c
[0x28c:0x29f]
---
Predecessors: [0x27e, 0x28c]
Successors: [0x28c, 0x2a0]
---
0x28c JUMPDEST
0x28d DUP2
0x28e SLOAD
0x28f DUP2
0x290 MSTORE
0x291 SWAP1
0x292 PUSH1 0x1
0x294 ADD
0x295 SWAP1
0x296 PUSH1 0x20
0x298 ADD
0x299 DUP1
0x29a DUP4
0x29b GT
0x29c PUSH2 0x28c
0x29f JUMPI
---
0x28c: JUMPDEST 
0x28e: V185 = S[S1]
0x290: M[S0] = V185
0x292: V186 = 0x1
0x294: V187 = ADD 0x1 S1
0x296: V188 = 0x20
0x298: V189 = ADD 0x20 S0
0x29b: V190 = GT V180 V189
0x29c: V191 = 0x28c
0x29f: JUMPI 0x28c V190
---
Entry stack: [V11, 0x83, V149, 0x1, V160, V180, S1, S0]
Stack pops: 3
Stack additions: [S2, V187, V189]
Exit stack: [V11, 0x83, V149, 0x1, V160, V180, V187, V189]

================================

Block 0x2a0
[0x2a0:0x2a8]
---
Predecessors: [0x28c]
Successors: [0x2a9]
---
0x2a0 DUP3
0x2a1 SWAP1
0x2a2 SUB
0x2a3 PUSH1 0x1f
0x2a5 AND
0x2a6 DUP3
0x2a7 ADD
0x2a8 SWAP2
---
0x2a2: V192 = SUB V189 V180
0x2a3: V193 = 0x1f
0x2a5: V194 = AND 0x1f V192
0x2a7: V195 = ADD V180 V194
---
Entry stack: [V11, 0x83, V149, 0x1, V160, V180, V187, V189]
Stack pops: 3
Stack additions: [V195, S1, S2]
Exit stack: [V11, 0x83, V149, 0x1, V160, V195, V187, V180]

================================

Block 0x2a9
[0x2a9:0x2b0]
---
Predecessors: [0x224, 0x26b, 0x2a0]
Successors: [0x83]
---
0x2a9 JUMPDEST
0x2aa POP
0x2ab POP
0x2ac POP
0x2ad POP
0x2ae POP
0x2af DUP2
0x2b0 JUMP
---
0x2a9: JUMPDEST 
0x2b0: JUMP 0x83
---
Entry stack: [V11, 0x83, V149, 0x1, V160, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x83, V149]

================================

Block 0x2b1
[0x2b1:0x2ba]
---
Predecessors: [0xf8]
Successors: [0x2bb, 0x35f]
---
0x2b1 JUMPDEST
0x2b2 PUSH1 0x0
0x2b4 SLOAD
0x2b5 ISZERO
0x2b6 ISZERO
0x2b7 PUSH2 0x35f
0x2ba JUMPI
---
0x2b1: JUMPDEST 
0x2b2: V196 = 0x0
0x2b4: V197 = S[0x0]
0x2b5: V198 = ISZERO V197
0x2b6: V199 = ISZERO V198
0x2b7: V200 = 0x35f
0x2ba: JUMPI 0x35f V199
---
Entry stack: [V11, 0x6c, V72, V90]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V72, V90]

================================

Block 0x2bb
[0x2bb:0x2ca]
---
Predecessors: [0x2b1]
Successors: [0x2cb]
---
0x2bb DUP1
0x2bc PUSH1 0x40
0x2be MLOAD
0x2bf DUP1
0x2c0 DUP3
0x2c1 DUP1
0x2c2 MLOAD
0x2c3 SWAP1
0x2c4 PUSH1 0x20
0x2c6 ADD
0x2c7 SWAP1
0x2c8 DUP1
0x2c9 DUP4
0x2ca DUP4
---
0x2bc: V201 = 0x40
0x2be: V202 = M[0x40]
0x2c2: V203 = M[V90]
0x2c4: V204 = 0x20
0x2c6: V205 = ADD 0x20 V90
---
Entry stack: [V11, 0x6c, V72, V90]
Stack pops: 1
Stack additions: [S0, S0, V202, V202, V205, V203, V203, V202, V205]
Exit stack: [V11, 0x6c, V72, V90, V90, V202, V202, V205, V203, V203, V202, V205]

================================

Block 0x2cb
[0x2cb:0x2d3]
---
Predecessors: [0x2bb, 0x2d4]
Successors: [0x2d4, 0x2ea]
---
0x2cb JUMPDEST
0x2cc PUSH1 0x20
0x2ce DUP4
0x2cf LT
0x2d0 PUSH2 0x2ea
0x2d3 JUMPI
---
0x2cb: JUMPDEST 
0x2cc: V206 = 0x20
0x2cf: V207 = LT S2 0x20
0x2d0: V208 = 0x2ea
0x2d3: JUMPI 0x2ea V207
---
Entry stack: [V11, 0x6c, V72, V90, V90, V202, V202, V205, V203, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, V72, V90, V90, V202, V202, V205, V203, S2, S1, S0]

================================

Block 0x2d4
[0x2d4:0x2e9]
---
Predecessors: [0x2cb]
Successors: [0x2cb]
---
0x2d4 DUP1
0x2d5 MLOAD
0x2d6 DUP3
0x2d7 MSTORE
0x2d8 PUSH1 0x1f
0x2da NOT
0x2db SWAP1
0x2dc SWAP3
0x2dd ADD
0x2de SWAP2
0x2df PUSH1 0x20
0x2e1 SWAP2
0x2e2 DUP3
0x2e3 ADD
0x2e4 SWAP2
0x2e5 ADD
0x2e6 PUSH2 0x2cb
0x2e9 JUMP
---
0x2d5: V209 = M[S0]
0x2d7: M[S1] = V209
0x2d8: V210 = 0x1f
0x2da: V211 = NOT 0x1f
0x2dd: V212 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x2df: V213 = 0x20
0x2e3: V214 = ADD 0x20 S1
0x2e5: V215 = ADD 0x20 S0
0x2e6: V216 = 0x2cb
0x2e9: JUMP 0x2cb
---
Entry stack: [V11, 0x6c, V72, V90, V90, V202, V202, V205, V203, S2, S1, S0]
Stack pops: 3
Stack additions: [V212, V214, V215]
Exit stack: [V11, 0x6c, V72, V90, V90, V202, V202, V205, V203, V212, V214, V215]

================================

Block 0x2ea
[0x2ea:0x327]
---
Predecessors: [0x2cb]
Successors: [0x4d2]
---
0x2ea JUMPDEST
0x2eb MLOAD
0x2ec DUP2
0x2ed MLOAD
0x2ee PUSH1 0x20
0x2f0 SWAP4
0x2f1 DUP5
0x2f2 SUB
0x2f3 PUSH2 0x100
0x2f6 EXP
0x2f7 PUSH1 0x0
0x2f9 NOT
0x2fa ADD
0x2fb DUP1
0x2fc NOT
0x2fd SWAP1
0x2fe SWAP3
0x2ff AND
0x300 SWAP2
0x301 AND
0x302 OR
0x303 SWAP1
0x304 MSTORE
0x305 PUSH1 0x40
0x307 MLOAD
0x308 SWAP2
0x309 SWAP1
0x30a SWAP4
0x30b ADD
0x30c DUP2
0x30d SWAP1
0x30e SUB
0x30f SWAP1
0x310 SHA3
0x311 PUSH1 0x0
0x313 SSTORE
0x314 POP
0x315 DUP5
0x316 MLOAD
0x317 PUSH2 0x328
0x31a SWAP4
0x31b POP
0x31c PUSH1 0x1
0x31e SWAP3
0x31f POP
0x320 SWAP1
0x321 DUP6
0x322 ADD
0x323 SWAP1
0x324 PUSH2 0x4d2
0x327 JUMP
---
0x2ea: JUMPDEST 
0x2eb: V217 = M[S0]
0x2ed: V218 = M[S1]
0x2ee: V219 = 0x20
0x2f2: V220 = SUB 0x20 S2
0x2f3: V221 = 0x100
0x2f6: V222 = EXP 0x100 V220
0x2f7: V223 = 0x0
0x2f9: V224 = NOT 0x0
0x2fa: V225 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V222
0x2fc: V226 = NOT V225
0x2ff: V227 = AND V217 V226
0x301: V228 = AND V225 V218
0x302: V229 = OR V228 V227
0x304: M[S1] = V229
0x305: V230 = 0x40
0x307: V231 = M[0x40]
0x30b: V232 = ADD V202 V203
0x30e: V233 = SUB V232 V231
0x310: V234 = SHA3 V231 V233
0x311: V235 = 0x0
0x313: S[0x0] = V234
0x316: V236 = M[V72]
0x317: V237 = 0x328
0x31c: V238 = 0x1
0x322: V239 = ADD V72 0x20
0x324: V240 = 0x4d2
0x327: JUMP 0x4d2
---
Entry stack: [V11, 0x6c, V72, V90, V90, V202, V202, V205, V203, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, 0x328, 0x1, V239, V236]
Exit stack: [V11, 0x6c, V72, V90, 0x328, 0x1, V239, V236]

================================

Block 0x328
[0x328:0x35e]
---
Predecessors: [0x35f, 0x45e, 0x54c]
Successors: [0x35f]
---
0x328 JUMPDEST
0x329 POP
0x32a PUSH1 0x2
0x32c DUP1
0x32d SLOAD
0x32e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x343 NOT
0x344 AND
0x345 CALLER
0x346 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x35b AND
0x35c OR
0x35d SWAP1
0x35e SSTORE
---
0x328: JUMPDEST 
0x32a: V241 = 0x2
0x32d: V242 = S[0x2]
0x32e: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x343: V244 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x344: V245 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V242
0x345: V246 = CALLER
0x346: V247 = 0xffffffffffffffffffffffffffffffffffffffff
0x35b: V248 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x35c: V249 = OR V248 V245
0x35e: S[0x2] = V249
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4, S3, S2, S1]

================================

Block 0x35f
[0x35f:0x362]
---
Predecessors: [0x2b1, 0x328, 0x3de, 0x427]
Successors: [0x6c, 0x328, 0x45e]
---
0x35f JUMPDEST
0x360 POP
0x361 POP
0x362 JUMP
---
0x35f: JUMPDEST 
0x362: JUMP S2
---
Entry stack: [V11, 0x6c, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x6c, S4, S3]

================================

Block 0x363
[0x363:0x373]
---
Predecessors: [0x182]
Successors: [0x374]
---
0x363 JUMPDEST
0x364 DUP1
0x365 PUSH1 0x40
0x367 MLOAD
0x368 DUP1
0x369 DUP3
0x36a DUP1
0x36b MLOAD
0x36c SWAP1
0x36d PUSH1 0x20
0x36f ADD
0x370 SWAP1
0x371 DUP1
0x372 DUP4
0x373 DUP4
---
0x363: JUMPDEST 
0x365: V250 = 0x40
0x367: V251 = M[0x40]
0x36b: V252 = M[V106]
0x36d: V253 = 0x20
0x36f: V254 = ADD 0x20 V106
---
Entry stack: [V11, 0x6c, V106]
Stack pops: 1
Stack additions: [S0, S0, V251, V251, V254, V252, V252, V251, V254]
Exit stack: [V11, 0x6c, V106, V106, V251, V251, V254, V252, V252, V251, V254]

================================

Block 0x374
[0x374:0x37c]
---
Predecessors: [0x363, 0x37d]
Successors: [0x37d, 0x393]
---
0x374 JUMPDEST
0x375 PUSH1 0x20
0x377 DUP4
0x378 LT
0x379 PUSH2 0x393
0x37c JUMPI
---
0x374: JUMPDEST 
0x375: V255 = 0x20
0x378: V256 = LT S2 0x20
0x379: V257 = 0x393
0x37c: JUMPI 0x393 V256
---
Entry stack: [V11, 0x6c, V106, V106, V251, V251, V254, V252, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, V106, V106, V251, V251, V254, V252, S2, S1, S0]

================================

Block 0x37d
[0x37d:0x392]
---
Predecessors: [0x374]
Successors: [0x374]
---
0x37d DUP1
0x37e MLOAD
0x37f DUP3
0x380 MSTORE
0x381 PUSH1 0x1f
0x383 NOT
0x384 SWAP1
0x385 SWAP3
0x386 ADD
0x387 SWAP2
0x388 PUSH1 0x20
0x38a SWAP2
0x38b DUP3
0x38c ADD
0x38d SWAP2
0x38e ADD
0x38f PUSH2 0x374
0x392 JUMP
---
0x37e: V258 = M[S0]
0x380: M[S1] = V258
0x381: V259 = 0x1f
0x383: V260 = NOT 0x1f
0x386: V261 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x388: V262 = 0x20
0x38c: V263 = ADD 0x20 S1
0x38e: V264 = ADD 0x20 S0
0x38f: V265 = 0x374
0x392: JUMP 0x374
---
Entry stack: [V11, 0x6c, V106, V106, V251, V251, V254, V252, S2, S1, S0]
Stack pops: 3
Stack additions: [V261, V263, V264]
Exit stack: [V11, 0x6c, V106, V106, V251, V251, V254, V252, V261, V263, V264]

================================

Block 0x393
[0x393:0x3cb]
---
Predecessors: [0x374]
Successors: [0x3cc, 0x3d8]
---
0x393 JUMPDEST
0x394 MLOAD
0x395 DUP2
0x396 MLOAD
0x397 PUSH1 0x20
0x399 SWAP4
0x39a SWAP1
0x39b SWAP4
0x39c SUB
0x39d PUSH2 0x100
0x3a0 EXP
0x3a1 PUSH1 0x0
0x3a3 NOT
0x3a4 ADD
0x3a5 DUP1
0x3a6 NOT
0x3a7 SWAP1
0x3a8 SWAP2
0x3a9 AND
0x3aa SWAP3
0x3ab AND
0x3ac SWAP2
0x3ad SWAP1
0x3ae SWAP2
0x3af OR
0x3b0 SWAP1
0x3b1 MSTORE
0x3b2 PUSH1 0x40
0x3b4 MLOAD
0x3b5 SWAP3
0x3b6 ADD
0x3b7 DUP3
0x3b8 SWAP1
0x3b9 SUB
0x3ba SWAP1
0x3bb SWAP2
0x3bc SHA3
0x3bd PUSH1 0x0
0x3bf SLOAD
0x3c0 EQ
0x3c1 SWAP3
0x3c2 POP
0x3c3 POP
0x3c4 DUP2
0x3c5 ISZERO
0x3c6 SWAP1
0x3c7 POP
0x3c8 PUSH2 0x3d8
0x3cb JUMPI
---
0x393: JUMPDEST 
0x394: V266 = M[S0]
0x396: V267 = M[S1]
0x397: V268 = 0x20
0x39c: V269 = SUB 0x20 S2
0x39d: V270 = 0x100
0x3a0: V271 = EXP 0x100 V269
0x3a1: V272 = 0x0
0x3a3: V273 = NOT 0x0
0x3a4: V274 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V271
0x3a6: V275 = NOT V274
0x3a9: V276 = AND V266 V275
0x3ab: V277 = AND V267 V274
0x3af: V278 = OR V277 V276
0x3b1: M[S1] = V278
0x3b2: V279 = 0x40
0x3b4: V280 = M[0x40]
0x3b6: V281 = ADD V251 V252
0x3b9: V282 = SUB V281 V280
0x3bc: V283 = SHA3 V280 V282
0x3bd: V284 = 0x0
0x3bf: V285 = S[0x0]
0x3c0: V286 = EQ V285 V283
0x3c5: V287 = ISZERO V286
0x3c8: V288 = 0x3d8
0x3cb: JUMPI 0x3d8 V287
---
Entry stack: [V11, 0x6c, V106, V106, V251, V251, V254, V252, S2, S1, S0]
Stack pops: 8
Stack additions: [V286]
Exit stack: [V11, 0x6c, V106, V286]

================================

Block 0x3cc
[0x3cc:0x3d7]
---
Predecessors: [0x393]
Successors: [0x3d8]
---
0x3cc POP
0x3cd PUSH8 0xde0b6b3a7640000
0x3d6 CALLVALUE
0x3d7 GT
---
0x3cd: V289 = 0xde0b6b3a7640000
0x3d6: V290 = CALLVALUE
0x3d7: V291 = GT V290 0xde0b6b3a7640000
---
Entry stack: [V11, 0x6c, V106, V286]
Stack pops: 1
Stack additions: [V291]
Exit stack: [V11, 0x6c, V106, V291]

================================

Block 0x3d8
[0x3d8:0x3dd]
---
Predecessors: [0x393, 0x3cc]
Successors: [0x3de, 0x424]
---
0x3d8 JUMPDEST
0x3d9 ISZERO
0x3da PUSH2 0x424
0x3dd JUMPI
---
0x3d8: JUMPDEST 
0x3d9: V292 = ISZERO S0
0x3da: V293 = 0x424
0x3dd: JUMPI 0x424 V292
---
Entry stack: [V11, 0x6c, V106, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6c, V106]

================================

Block 0x3de
[0x3de:0x41a]
---
Predecessors: [0x3d8]
Successors: [0x35f, 0x41b]
---
0x3de PUSH1 0x40
0x3e0 MLOAD
0x3e1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f6 CALLER
0x3f7 DUP2
0x3f8 AND
0x3f9 SWAP2
0x3fa ADDRESS
0x3fb SWAP1
0x3fc SWAP2
0x3fd AND
0x3fe BALANCE
0x3ff DUP1
0x400 ISZERO
0x401 PUSH2 0x8fc
0x404 MUL
0x405 SWAP2
0x406 PUSH1 0x0
0x408 DUP2
0x409 DUP2
0x40a DUP2
0x40b DUP6
0x40c DUP9
0x40d DUP9
0x40e CALL
0x40f SWAP4
0x410 POP
0x411 POP
0x412 POP
0x413 POP
0x414 ISZERO
0x415 DUP1
0x416 ISZERO
0x417 PUSH2 0x35f
0x41a JUMPI
---
0x3de: V294 = 0x40
0x3e0: V295 = M[0x40]
0x3e1: V296 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f6: V297 = CALLER
0x3f8: V298 = AND 0xffffffffffffffffffffffffffffffffffffffff V297
0x3fa: V299 = ADDRESS
0x3fd: V300 = AND 0xffffffffffffffffffffffffffffffffffffffff V299
0x3fe: V301 = BALANCE V300
0x400: V302 = ISZERO V301
0x401: V303 = 0x8fc
0x404: V304 = MUL 0x8fc V302
0x406: V305 = 0x0
0x40e: V306 = CALL V304 V298 V301 V295 0x0 V295 0x0
0x414: V307 = ISZERO V306
0x416: V308 = ISZERO V307
0x417: V309 = 0x35f
0x41a: JUMPI 0x35f V308
---
Entry stack: [V11, 0x6c, V106]
Stack pops: 0
Stack additions: [V307]
Exit stack: [V11, 0x6c, V106, V307]

================================

Block 0x41b
[0x41b:0x423]
---
Predecessors: [0x3de]
Successors: []
---
0x41b RETURNDATASIZE
0x41c PUSH1 0x0
0x41e DUP1
0x41f RETURNDATACOPY
0x420 RETURNDATASIZE
0x421 PUSH1 0x0
0x423 REVERT
---
0x41b: V310 = RETURNDATASIZE
0x41c: V311 = 0x0
0x41f: RETURNDATACOPY 0x0 0x0 V310
0x420: V312 = RETURNDATASIZE
0x421: V313 = 0x0
0x423: REVERT 0x0 V312
---
Entry stack: [V11, 0x6c, V106, V307]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V106, V307]

================================

Block 0x424
[0x424:0x426]
---
Predecessors: [0x3d8, 0x48a]
Successors: [0x6c]
---
0x424 JUMPDEST
0x425 POP
0x426 JUMP
---
0x424: JUMPDEST 
0x426: JUMP 0x6c
---
Entry stack: [V11, 0x6c, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x427
[0x427:0x44b]
---
Predecessors: [0x1ce]
Successors: [0x35f, 0x44c]
---
0x427 JUMPDEST
0x428 PUSH1 0x2
0x42a SLOAD
0x42b CALLER
0x42c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x441 SWAP1
0x442 DUP2
0x443 AND
0x444 SWAP2
0x445 AND
0x446 EQ
0x447 ISZERO
0x448 PUSH2 0x35f
0x44b JUMPI
---
0x427: JUMPDEST 
0x428: V314 = 0x2
0x42a: V315 = S[0x2]
0x42b: V316 = CALLER
0x42c: V317 = 0xffffffffffffffffffffffffffffffffffffffff
0x443: V318 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x445: V319 = AND V315 0xffffffffffffffffffffffffffffffffffffffff
0x446: V320 = EQ V319 V318
0x447: V321 = ISZERO V320
0x448: V322 = 0x35f
0x44b: JUMPI 0x35f V321
---
Entry stack: [V11, 0x6c, V125, V142]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V125, V142]

================================

Block 0x44c
[0x44c:0x45d]
---
Predecessors: [0x427]
Successors: [0x4d2]
---
0x44c DUP2
0x44d MLOAD
0x44e PUSH2 0x45e
0x451 SWAP1
0x452 PUSH1 0x1
0x454 SWAP1
0x455 PUSH1 0x20
0x457 DUP6
0x458 ADD
0x459 SWAP1
0x45a PUSH2 0x4d2
0x45d JUMP
---
0x44d: V323 = M[V125]
0x44e: V324 = 0x45e
0x452: V325 = 0x1
0x455: V326 = 0x20
0x458: V327 = ADD V125 0x20
0x45a: V328 = 0x4d2
0x45d: JUMP 0x4d2
---
Entry stack: [V11, 0x6c, V125, V142]
Stack pops: 2
Stack additions: [S1, S0, 0x45e, 0x1, V327, V323]
Exit stack: [V11, 0x6c, V125, V142, 0x45e, 0x1, V327, V323]

================================

Block 0x45e
[0x45e:0x464]
---
Predecessors: [0x35f, 0x45e, 0x54c]
Successors: [0x6c, 0x328, 0x45e]
---
0x45e JUMPDEST
0x45f POP
0x460 PUSH1 0x0
0x462 SSTORE
0x463 POP
0x464 JUMP
---
0x45e: JUMPDEST 
0x460: V329 = 0x0
0x462: S[0x0] = S1
0x464: JUMP S3
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4]

================================

Block 0x465
[0x465:0x489]
---
Predecessors: [0x21c]
Successors: [0x48a, 0x4d0]
---
0x465 JUMPDEST
0x466 PUSH1 0x2
0x468 SLOAD
0x469 CALLER
0x46a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x47f SWAP1
0x480 DUP2
0x481 AND
0x482 SWAP2
0x483 AND
0x484 EQ
0x485 ISZERO
0x486 PUSH2 0x4d0
0x489 JUMPI
---
0x465: JUMPDEST 
0x466: V330 = 0x2
0x468: V331 = S[0x2]
0x469: V332 = CALLER
0x46a: V333 = 0xffffffffffffffffffffffffffffffffffffffff
0x481: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x483: V335 = AND V331 0xffffffffffffffffffffffffffffffffffffffff
0x484: V336 = EQ V335 V334
0x485: V337 = ISZERO V336
0x486: V338 = 0x4d0
0x489: JUMPI 0x4d0 V337
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x48a
[0x48a:0x4c6]
---
Predecessors: [0x465]
Successors: [0x424, 0x4c7]
---
0x48a PUSH1 0x40
0x48c MLOAD
0x48d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4a2 CALLER
0x4a3 DUP2
0x4a4 AND
0x4a5 SWAP2
0x4a6 ADDRESS
0x4a7 SWAP1
0x4a8 SWAP2
0x4a9 AND
0x4aa BALANCE
0x4ab DUP1
0x4ac ISZERO
0x4ad PUSH2 0x8fc
0x4b0 MUL
0x4b1 SWAP2
0x4b2 PUSH1 0x0
0x4b4 DUP2
0x4b5 DUP2
0x4b6 DUP2
0x4b7 DUP6
0x4b8 DUP9
0x4b9 DUP9
0x4ba CALL
0x4bb SWAP4
0x4bc POP
0x4bd POP
0x4be POP
0x4bf POP
0x4c0 ISZERO
0x4c1 DUP1
0x4c2 ISZERO
0x4c3 PUSH2 0x424
0x4c6 JUMPI
---
0x48a: V339 = 0x40
0x48c: V340 = M[0x40]
0x48d: V341 = 0xffffffffffffffffffffffffffffffffffffffff
0x4a2: V342 = CALLER
0x4a4: V343 = AND 0xffffffffffffffffffffffffffffffffffffffff V342
0x4a6: V344 = ADDRESS
0x4a9: V345 = AND 0xffffffffffffffffffffffffffffffffffffffff V344
0x4aa: V346 = BALANCE V345
0x4ac: V347 = ISZERO V346
0x4ad: V348 = 0x8fc
0x4b0: V349 = MUL 0x8fc V347
0x4b2: V350 = 0x0
0x4ba: V351 = CALL V349 V343 V346 V340 0x0 V340 0x0
0x4c0: V352 = ISZERO V351
0x4c2: V353 = ISZERO V352
0x4c3: V354 = 0x424
0x4c6: JUMPI 0x424 V353
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: [V352]
Exit stack: [V11, 0x6c, V352]

================================

Block 0x4c7
[0x4c7:0x4cf]
---
Predecessors: [0x48a]
Successors: []
---
0x4c7 RETURNDATASIZE
0x4c8 PUSH1 0x0
0x4ca DUP1
0x4cb RETURNDATACOPY
0x4cc RETURNDATASIZE
0x4cd PUSH1 0x0
0x4cf REVERT
---
0x4c7: V355 = RETURNDATASIZE
0x4c8: V356 = 0x0
0x4cb: RETURNDATACOPY 0x0 0x0 V355
0x4cc: V357 = RETURNDATASIZE
0x4cd: V358 = 0x0
0x4cf: REVERT 0x0 V357
---
Entry stack: [V11, 0x6c, V352]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V352]

================================

Block 0x4d0
[0x4d0:0x4d1]
---
Predecessors: [0x465]
Successors: [0x6c]
---
0x4d0 JUMPDEST
0x4d1 JUMP
---
0x4d0: JUMPDEST 
0x4d1: JUMP 0x6c
---
Entry stack: [V11, 0x6c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x4d2
[0x4d2:0x502]
---
Predecessors: [0x2ea, 0x44c]
Successors: [0x503, 0x513]
---
0x4d2 JUMPDEST
0x4d3 DUP3
0x4d4 DUP1
0x4d5 SLOAD
0x4d6 PUSH1 0x1
0x4d8 DUP2
0x4d9 PUSH1 0x1
0x4db AND
0x4dc ISZERO
0x4dd PUSH2 0x100
0x4e0 MUL
0x4e1 SUB
0x4e2 AND
0x4e3 PUSH1 0x2
0x4e5 SWAP1
0x4e6 DIV
0x4e7 SWAP1
0x4e8 PUSH1 0x0
0x4ea MSTORE
0x4eb PUSH1 0x20
0x4ed PUSH1 0x0
0x4ef SHA3
0x4f0 SWAP1
0x4f1 PUSH1 0x1f
0x4f3 ADD
0x4f4 PUSH1 0x20
0x4f6 SWAP1
0x4f7 DIV
0x4f8 DUP2
0x4f9 ADD
0x4fa SWAP3
0x4fb DUP3
0x4fc PUSH1 0x1f
0x4fe LT
0x4ff PUSH2 0x513
0x502 JUMPI
---
0x4d2: JUMPDEST 
0x4d5: V359 = S[0x1]
0x4d6: V360 = 0x1
0x4d9: V361 = 0x1
0x4db: V362 = AND 0x1 V359
0x4dc: V363 = ISZERO V362
0x4dd: V364 = 0x100
0x4e0: V365 = MUL 0x100 V363
0x4e1: V366 = SUB V365 0x1
0x4e2: V367 = AND V366 V359
0x4e3: V368 = 0x2
0x4e6: V369 = DIV V367 0x2
0x4e8: V370 = 0x0
0x4ea: M[0x0] = 0x1
0x4eb: V371 = 0x20
0x4ed: V372 = 0x0
0x4ef: V373 = SHA3 0x0 0x20
0x4f1: V374 = 0x1f
0x4f3: V375 = ADD 0x1f V369
0x4f4: V376 = 0x20
0x4f7: V377 = DIV V375 0x20
0x4f9: V378 = ADD V373 V377
0x4fc: V379 = 0x1f
0x4fe: V380 = LT 0x1f S0
0x4ff: V381 = 0x513
0x502: JUMPI 0x513 V380
---
Entry stack: [V11, 0x6c, S5, S4, {0x328, 0x45e}, 0x1, S1, S0]
Stack pops: 3
Stack additions: [S2, V378, S0, V373, S1]
Exit stack: [V11, 0x6c, S5, S4, {0x328, 0x45e}, 0x1, V378, S0, V373, S1]

================================

Block 0x503
[0x503:0x512]
---
Predecessors: [0x4d2]
Successors: [0x540]
---
0x503 DUP1
0x504 MLOAD
0x505 PUSH1 0xff
0x507 NOT
0x508 AND
0x509 DUP4
0x50a DUP1
0x50b ADD
0x50c OR
0x50d DUP6
0x50e SSTORE
0x50f PUSH2 0x540
0x512 JUMP
---
0x504: V382 = M[S0]
0x505: V383 = 0xff
0x507: V384 = NOT 0xff
0x508: V385 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V382
0x50b: V386 = ADD S2 S2
0x50c: V387 = OR V386 V385
0x50e: S[0x1] = V387
0x50f: V388 = 0x540
0x512: JUMP 0x540
---
Entry stack: [V11, 0x6c, S7, S6, {0x328, 0x45e}, 0x1, V378, S2, V373, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x328, 0x45e}, 0x1, V378, S2, V373, S0]

================================

Block 0x513
[0x513:0x521]
---
Predecessors: [0x4d2]
Successors: [0x522, 0x540]
---
0x513 JUMPDEST
0x514 DUP3
0x515 DUP1
0x516 ADD
0x517 PUSH1 0x1
0x519 ADD
0x51a DUP6
0x51b SSTORE
0x51c DUP3
0x51d ISZERO
0x51e PUSH2 0x540
0x521 JUMPI
---
0x513: JUMPDEST 
0x516: V389 = ADD S2 S2
0x517: V390 = 0x1
0x519: V391 = ADD 0x1 V389
0x51b: S[0x1] = V391
0x51d: V392 = ISZERO S2
0x51e: V393 = 0x540
0x521: JUMPI 0x540 V392
---
Entry stack: [V11, 0x6c, S7, S6, {0x328, 0x45e}, 0x1, V378, S2, V373, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x328, 0x45e}, 0x1, V378, S2, V373, S0]

================================

Block 0x522
[0x522:0x524]
---
Predecessors: [0x513]
Successors: [0x525]
---
0x522 SWAP2
0x523 DUP3
0x524 ADD
---
0x524: V394 = ADD S0 S2
---
Entry stack: [V11, 0x6c, S7, S6, {0x328, 0x45e}, 0x1, V378, S2, V373, S0]
Stack pops: 3
Stack additions: [S0, S1, V394]
Exit stack: [V11, 0x6c, S7, S6, {0x328, 0x45e}, 0x1, V378, S0, V373, V394]

================================

Block 0x525
[0x525:0x52d]
---
Predecessors: [0x522, 0x52e]
Successors: [0x52e, 0x540]
---
0x525 JUMPDEST
0x526 DUP3
0x527 DUP2
0x528 GT
0x529 ISZERO
0x52a PUSH2 0x540
0x52d JUMPI
---
0x525: JUMPDEST 
0x528: V395 = GT V394 S2
0x529: V396 = ISZERO V395
0x52a: V397 = 0x540
0x52d: JUMPI 0x540 V396
---
Entry stack: [V11, 0x6c, S7, S6, {0x328, 0x45e}, 0x1, V378, S2, S1, V394]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x328, 0x45e}, 0x1, V378, S2, S1, V394]

================================

Block 0x52e
[0x52e:0x53f]
---
Predecessors: [0x525]
Successors: [0x525]
---
0x52e DUP3
0x52f MLOAD
0x530 DUP3
0x531 SSTORE
0x532 SWAP2
0x533 PUSH1 0x20
0x535 ADD
0x536 SWAP2
0x537 SWAP1
0x538 PUSH1 0x1
0x53a ADD
0x53b SWAP1
0x53c PUSH2 0x525
0x53f JUMP
---
0x52f: V398 = M[S2]
0x531: S[S1] = V398
0x533: V399 = 0x20
0x535: V400 = ADD 0x20 S2
0x538: V401 = 0x1
0x53a: V402 = ADD 0x1 S1
0x53c: V403 = 0x525
0x53f: JUMP 0x525
---
Entry stack: [V11, 0x6c, S7, S6, {0x328, 0x45e}, 0x1, V378, S2, S1, V394]
Stack pops: 3
Stack additions: [V400, V402, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x328, 0x45e}, 0x1, V378, V400, V402, V394]

================================

Block 0x540
[0x540:0x54b]
---
Predecessors: [0x503, 0x513, 0x525]
Successors: [0x550]
---
0x540 JUMPDEST
0x541 POP
0x542 PUSH2 0x54c
0x545 SWAP3
0x546 SWAP2
0x547 POP
0x548 PUSH2 0x550
0x54b JUMP
---
0x540: JUMPDEST 
0x542: V404 = 0x54c
0x548: V405 = 0x550
0x54b: JUMP 0x550
---
Entry stack: [V11, 0x6c, S7, S6, {0x328, 0x45e}, 0x1, V378, S2, S1, S0]
Stack pops: 4
Stack additions: [0x54c, S3, S1]
Exit stack: [V11, 0x6c, S7, S6, {0x328, 0x45e}, 0x1, 0x54c, V378, S1]

================================

Block 0x54c
[0x54c:0x54f]
---
Predecessors: [0x556, 0x56a]
Successors: [0x6c, 0x328, 0x45e, 0x56a]
---
0x54c JUMPDEST
0x54d POP
0x54e SWAP1
0x54f JUMP
---
0x54c: JUMPDEST 
0x54f: JUMP {0x6c, 0x328, 0x45e, 0x56a}
---
Entry stack: [V11, 0x6c, S7, S6, {0x6c, 0x328, 0x45e}, S4, S3, {0x6c, 0x328, 0x45e, 0x56a}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x6c, S7, S6, {0x6c, 0x328, 0x45e}, S4, S3, S1]

================================

Block 0x550
[0x550:0x555]
---
Predecessors: [0x540]
Successors: [0x556]
---
0x550 JUMPDEST
0x551 PUSH2 0x56a
0x554 SWAP2
0x555 SWAP1
---
0x550: JUMPDEST 
0x551: V406 = 0x56a
---
Entry stack: [V11, 0x6c, S6, S5, {0x328, 0x45e}, 0x1, 0x54c, V378, S0]
Stack pops: 2
Stack additions: [0x56a, S1, S0]
Exit stack: [V11, 0x6c, S6, S5, {0x328, 0x45e}, 0x1, 0x54c, 0x56a, V378, S0]

================================

Block 0x556
[0x556:0x55e]
---
Predecessors: [0x550, 0x55f]
Successors: [0x54c, 0x55f]
---
0x556 JUMPDEST
0x557 DUP1
0x558 DUP3
0x559 GT
0x55a ISZERO
0x55b PUSH2 0x54c
0x55e JUMPI
---
0x556: JUMPDEST 
0x559: V407 = GT V378 S0
0x55a: V408 = ISZERO V407
0x55b: V409 = 0x54c
0x55e: JUMPI 0x54c V408
---
Entry stack: [V11, 0x6c, S7, S6, {0x328, 0x45e}, 0x1, 0x54c, 0x56a, V378, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x328, 0x45e}, 0x1, 0x54c, 0x56a, V378, S0]

================================

Block 0x55f
[0x55f:0x569]
---
Predecessors: [0x556]
Successors: [0x556]
---
0x55f PUSH1 0x0
0x561 DUP2
0x562 SSTORE
0x563 PUSH1 0x1
0x565 ADD
0x566 PUSH2 0x556
0x569 JUMP
---
0x55f: V410 = 0x0
0x562: S[S0] = 0x0
0x563: V411 = 0x1
0x565: V412 = ADD 0x1 S0
0x566: V413 = 0x556
0x569: JUMP 0x556
---
Entry stack: [V11, 0x6c, S7, S6, {0x328, 0x45e}, 0x1, 0x54c, 0x56a, V378, S0]
Stack pops: 1
Stack additions: [V412]
Exit stack: [V11, 0x6c, S7, S6, {0x328, 0x45e}, 0x1, 0x54c, 0x56a, V378, V412]

================================

Block 0x56a
[0x56a:0x56c]
---
Predecessors: [0x54c]
Successors: [0x54c]
---
0x56a JUMPDEST
0x56b SWAP1
0x56c JUMP
---
0x56a: JUMPDEST 
0x56c: JUMP S1
---
Entry stack: [V11, 0x6c, S5, S4, {0x6c, 0x328, 0x45e}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x6c, S5, S4, {0x6c, 0x328, 0x45e}, S2, S0]

================================

Block 0x56d
[0x56d:0x59f]
---
Predecessors: []
Successors: []
---
0x56d STOP
0x56e LOG1
0x56f PUSH6 0x627a7a723058
0x576 SHA3
0x577 SDIV
0x578 MISSING 0x25
0x579 PUSH13 0x7ed556b353f4813ab49156e8e0
0x587 ISZERO
0x588 MISSING 0xda
0x589 MISSING 0xf9
0x58a MISSING 0xb3
0x58b PUSH20 0x36da121c62a2e10e5611270029
---
0x56d: STOP 
0x56e: LOG S0 S1 S2
0x56f: V414 = 0x627a7a723058
0x576: V415 = SHA3 0x627a7a723058 S3
0x577: V416 = SDIV V415 S4
0x578: MISSING 0x25
0x579: V417 = 0x7ed556b353f4813ab49156e8e0
0x587: V418 = ISZERO 0x7ed556b353f4813ab49156e8e0
0x588: MISSING 0xda
0x589: MISSING 0xf9
0x58a: MISSING 0xb3
0x58b: V419 = 0x36da121c62a2e10e5611270029
---
Entry stack: []
Stack pops: 0
Stack additions: [V416, 0x0, 0x36da121c62a2e10e5611270029]
Exit stack: []

================================

Function 0:
Public function signature: 0x1bc4c81b
Entry block: 0x6e
Exit block: 0xea
Body: 0x6e, 0x76, 0x7a, 0x83, 0xa5, 0xae, 0xbd, 0xd1, 0xea, 0x224, 0x263, 0x26b, 0x27e, 0x28c, 0x2a0, 0x2a9

Function 1:
Public function signature: 0x2add78bb
Entry block: 0xf8
Exit block: 0x6c
Body: 0x6c, 0xf8, 0x2b1, 0x2bb, 0x2cb, 0x2d4, 0x2ea, 0x328, 0x35f, 0x45e

Function 2:
Public function signature: 0x3853682c
Entry block: 0x182
Exit block: 0x6c
Body: 0x6c, 0x182, 0x328, 0x35f, 0x363, 0x374, 0x37d, 0x393, 0x3cc, 0x3d8, 0x3de, 0x41b, 0x424, 0x45e

Function 3:
Public function signature: 0x58e756b6
Entry block: 0x1ce
Exit block: 0x6c
Body: 0x6c, 0x1ce, 0x328, 0x35f, 0x427, 0x44c, 0x45e

Function 4:
Public function signature: 0x8df208b7
Entry block: 0x21c
Exit block: 0x6c
Body: 0x6c, 0x21c, 0x424, 0x465, 0x48a, 0x4c7, 0x4d0

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0x6c
Body: 0x6c

Function 6:
Private function
Entry block: 0x4d2
Exit block: 0x54c
Body: 0x4d2, 0x503, 0x513, 0x522, 0x525, 0x52e, 0x540, 0x54c, 0x550, 0x556, 0x55f, 0x56a

