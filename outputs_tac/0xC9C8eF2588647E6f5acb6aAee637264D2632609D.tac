Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x57ea89b6
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x57ea89b6
0x3c: V13 = EQ 0x57ea89b6 V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x79]
---
0x41 DUP1
0x42 PUSH4 0x75f96ead
0x47 EQ
0x48 PUSH2 0x79
0x4b JUMPI
---
0x42: V15 = 0x75f96ead
0x47: V16 = EQ 0x75f96ead V11
0x48: V17 = 0x79
0x4b: JUMPI 0x79 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x91]
---
0x4c DUP1
0x4d PUSH4 0xb4a99a4e
0x52 EQ
0x53 PUSH2 0x91
0x56 JUMPI
---
0x4d: V18 = 0xb4a99a4e
0x52: V19 = EQ 0xb4a99a4e V11
0x53: V20 = 0x91
0x56: JUMPI 0x91 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xe6]
---
0x57 DUP1
0x58 PUSH4 0xc2610cda
0x5d EQ
0x5e PUSH2 0xe6
0x61 JUMPI
---
0x58: V21 = 0xc2610cda
0x5d: V22 = EQ 0xc2610cda V11
0x5e: V23 = 0xe6
0x61: JUMPI 0xe6 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6a]
---
Predecessors: [0xd]
Successors: [0x6b, 0x6f]
---
0x64 JUMPDEST
0x65 CALLVALUE
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x64: JUMPDEST 
0x65: V24 = CALLVALUE
0x66: V25 = ISZERO V24
0x67: V26 = 0x6f
0x6a: JUMPI 0x6f V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x64]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V27 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0x64]
Successors: [0x10f]
---
0x6f JUMPDEST
0x70 PUSH2 0x77
0x73 PUSH2 0x10f
0x76 JUMP
---
0x6f: JUMPDEST 
0x70: V28 = 0x77
0x73: V29 = 0x10f
0x76: JUMP 0x10f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x77
[0x77:0x78]
---
Predecessors: [0x1e2]
Successors: []
---
0x77 JUMPDEST
0x78 STOP
---
0x77: JUMPDEST 
0x78: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x79
[0x79:0x8e]
---
Predecessors: [0x41]
Successors: [0x1e4]
---
0x79 JUMPDEST
0x7a PUSH2 0x8f
0x7d PUSH1 0x4
0x7f DUP1
0x80 DUP1
0x81 CALLDATALOAD
0x82 SWAP1
0x83 PUSH1 0x20
0x85 ADD
0x86 SWAP1
0x87 SWAP2
0x88 SWAP1
0x89 POP
0x8a POP
0x8b PUSH2 0x1e4
0x8e JUMP
---
0x79: JUMPDEST 
0x7a: V30 = 0x8f
0x7d: V31 = 0x4
0x81: V32 = CALLDATALOAD 0x4
0x83: V33 = 0x20
0x85: V34 = ADD 0x20 0x4
0x8b: V35 = 0x1e4
0x8e: JUMP 0x1e4
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8f, V32]
Exit stack: [V11, 0x8f, V32]

================================

Block 0x8f
[0x8f:0x90]
---
Predecessors: [0x27e]
Successors: []
---
0x8f JUMPDEST
0x90 STOP
---
0x8f: JUMPDEST 
0x90: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x91
[0x91:0x97]
---
Predecessors: [0x4c]
Successors: [0x98, 0x9c]
---
0x91 JUMPDEST
0x92 CALLVALUE
0x93 ISZERO
0x94 PUSH2 0x9c
0x97 JUMPI
---
0x91: JUMPDEST 
0x92: V36 = CALLVALUE
0x93: V37 = ISZERO V36
0x94: V38 = 0x9c
0x97: JUMPI 0x9c V37
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x98
[0x98:0x9b]
---
Predecessors: [0x91]
Successors: []
---
0x98 PUSH1 0x0
0x9a DUP1
0x9b REVERT
---
0x98: V39 = 0x0
0x9b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9c
[0x9c:0xa3]
---
Predecessors: [0x91]
Successors: [0x281]
---
0x9c JUMPDEST
0x9d PUSH2 0xa4
0xa0 PUSH2 0x281
0xa3 JUMP
---
0x9c: JUMPDEST 
0x9d: V40 = 0xa4
0xa0: V41 = 0x281
0xa3: JUMP 0x281
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa4]
Exit stack: [V11, 0xa4]

================================

Block 0xa4
[0xa4:0xe5]
---
Predecessors: [0x281]
Successors: []
---
0xa4 JUMPDEST
0xa5 PUSH1 0x40
0xa7 MLOAD
0xa8 DUP1
0xa9 DUP3
0xaa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbf AND
0xc0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd5 AND
0xd6 DUP2
0xd7 MSTORE
0xd8 PUSH1 0x20
0xda ADD
0xdb SWAP2
0xdc POP
0xdd POP
0xde PUSH1 0x40
0xe0 MLOAD
0xe1 DUP1
0xe2 SWAP2
0xe3 SUB
0xe4 SWAP1
0xe5 RETURN
---
0xa4: JUMPDEST 
0xa5: V42 = 0x40
0xa7: V43 = M[0x40]
0xaa: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xbf: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0xc0: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xd5: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xd7: M[V43] = V47
0xd8: V48 = 0x20
0xda: V49 = ADD 0x20 V43
0xde: V50 = 0x40
0xe0: V51 = M[0x40]
0xe3: V52 = SUB V49 V51
0xe5: RETURN V51 V52
---
Entry stack: [V11, 0xa4, V159]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xa4]

================================

Block 0xe6
[0xe6:0xec]
---
Predecessors: [0x57]
Successors: [0xed, 0xf1]
---
0xe6 JUMPDEST
0xe7 CALLVALUE
0xe8 ISZERO
0xe9 PUSH2 0xf1
0xec JUMPI
---
0xe6: JUMPDEST 
0xe7: V53 = CALLVALUE
0xe8: V54 = ISZERO V53
0xe9: V55 = 0xf1
0xec: JUMPI 0xf1 V54
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xed
[0xed:0xf0]
---
Predecessors: [0xe6]
Successors: []
---
0xed PUSH1 0x0
0xef DUP1
0xf0 REVERT
---
0xed: V56 = 0x0
0xf0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf1
[0xf1:0xf8]
---
Predecessors: [0xe6]
Successors: [0x2a6]
---
0xf1 JUMPDEST
0xf2 PUSH2 0xf9
0xf5 PUSH2 0x2a6
0xf8 JUMP
---
0xf1: JUMPDEST 
0xf2: V57 = 0xf9
0xf5: V58 = 0x2a6
0xf8: JUMP 0x2a6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xf9]
Exit stack: [V11, 0xf9]

================================

Block 0xf9
[0xf9:0x10e]
---
Predecessors: [0x2a6]
Successors: []
---
0xf9 JUMPDEST
0xfa PUSH1 0x40
0xfc MLOAD
0xfd DUP1
0xfe DUP3
0xff DUP2
0x100 MSTORE
0x101 PUSH1 0x20
0x103 ADD
0x104 SWAP2
0x105 POP
0x106 POP
0x107 PUSH1 0x40
0x109 MLOAD
0x10a DUP1
0x10b SWAP2
0x10c SUB
0x10d SWAP1
0x10e RETURN
---
0xf9: JUMPDEST 
0xfa: V59 = 0x40
0xfc: V60 = M[0x40]
0x100: M[V60] = V161
0x101: V61 = 0x20
0x103: V62 = ADD 0x20 V60
0x107: V63 = 0x40
0x109: V64 = M[0x40]
0x10c: V65 = SUB V62 V64
0x10e: RETURN V64 V65
---
Entry stack: [V11, 0xf9, V161]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xf9]

================================

Block 0x10f
[0x10f:0x165]
---
Predecessors: [0x6f]
Successors: [0x166, 0x16a]
---
0x10f JUMPDEST
0x110 PUSH1 0x0
0x112 DUP1
0x113 SWAP1
0x114 SLOAD
0x115 SWAP1
0x116 PUSH2 0x100
0x119 EXP
0x11a SWAP1
0x11b DIV
0x11c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x131 AND
0x132 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x147 AND
0x148 CALLER
0x149 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x15e AND
0x15f EQ
0x160 ISZERO
0x161 ISZERO
0x162 PUSH2 0x16a
0x165 JUMPI
---
0x10f: JUMPDEST 
0x110: V66 = 0x0
0x114: V67 = S[0x0]
0x116: V68 = 0x100
0x119: V69 = EXP 0x100 0x0
0x11b: V70 = DIV V67 0x1
0x11c: V71 = 0xffffffffffffffffffffffffffffffffffffffff
0x131: V72 = AND 0xffffffffffffffffffffffffffffffffffffffff V70
0x132: V73 = 0xffffffffffffffffffffffffffffffffffffffff
0x147: V74 = AND 0xffffffffffffffffffffffffffffffffffffffff V72
0x148: V75 = CALLER
0x149: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x15e: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x15f: V78 = EQ V77 V74
0x160: V79 = ISZERO V78
0x161: V80 = ISZERO V79
0x162: V81 = 0x16a
0x165: JUMPI 0x16a V80
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x166
[0x166:0x169]
---
Predecessors: [0x10f]
Successors: []
---
0x166 PUSH1 0x0
0x168 DUP1
0x169 REVERT
---
0x166: V82 = 0x0
0x169: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x16a
[0x16a:0x1dd]
---
Predecessors: [0x10f]
Successors: [0x1de, 0x1e2]
---
0x16a JUMPDEST
0x16b PUSH1 0x0
0x16d DUP1
0x16e SWAP1
0x16f SLOAD
0x170 SWAP1
0x171 PUSH2 0x100
0x174 EXP
0x175 SWAP1
0x176 DIV
0x177 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x18c AND
0x18d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a2 AND
0x1a3 PUSH2 0x8fc
0x1a6 ADDRESS
0x1a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bc AND
0x1bd BALANCE
0x1be SWAP1
0x1bf DUP2
0x1c0 ISZERO
0x1c1 MUL
0x1c2 SWAP1
0x1c3 PUSH1 0x40
0x1c5 MLOAD
0x1c6 PUSH1 0x0
0x1c8 PUSH1 0x40
0x1ca MLOAD
0x1cb DUP1
0x1cc DUP4
0x1cd SUB
0x1ce DUP2
0x1cf DUP6
0x1d0 DUP9
0x1d1 DUP9
0x1d2 CALL
0x1d3 SWAP4
0x1d4 POP
0x1d5 POP
0x1d6 POP
0x1d7 POP
0x1d8 ISZERO
0x1d9 ISZERO
0x1da PUSH2 0x1e2
0x1dd JUMPI
---
0x16a: JUMPDEST 
0x16b: V83 = 0x0
0x16f: V84 = S[0x0]
0x171: V85 = 0x100
0x174: V86 = EXP 0x100 0x0
0x176: V87 = DIV V84 0x1
0x177: V88 = 0xffffffffffffffffffffffffffffffffffffffff
0x18c: V89 = AND 0xffffffffffffffffffffffffffffffffffffffff V87
0x18d: V90 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a2: V91 = AND 0xffffffffffffffffffffffffffffffffffffffff V89
0x1a3: V92 = 0x8fc
0x1a6: V93 = ADDRESS
0x1a7: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bc: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V93
0x1bd: V96 = BALANCE V95
0x1c0: V97 = ISZERO V96
0x1c1: V98 = MUL V97 0x8fc
0x1c3: V99 = 0x40
0x1c5: V100 = M[0x40]
0x1c6: V101 = 0x0
0x1c8: V102 = 0x40
0x1ca: V103 = M[0x40]
0x1cd: V104 = SUB V100 V103
0x1d2: V105 = CALL V98 V91 V96 V103 V104 V103 0x0
0x1d8: V106 = ISZERO V105
0x1d9: V107 = ISZERO V106
0x1da: V108 = 0x1e2
0x1dd: JUMPI 0x1e2 V107
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x1de
[0x1de:0x1e1]
---
Predecessors: [0x16a]
Successors: []
---
0x1de PUSH1 0x0
0x1e0 DUP1
0x1e1 REVERT
---
0x1de: V109 = 0x0
0x1e1: REVERT 0x0 0x0
---
Entry stack: [V11, 0x77]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x1e2
[0x1e2:0x1e3]
---
Predecessors: [0x16a]
Successors: [0x77]
---
0x1e2 JUMPDEST
0x1e3 JUMP
---
0x1e2: JUMPDEST 
0x1e3: JUMP 0x77
---
Entry stack: [V11, 0x77]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x1e4
[0x1e4:0x205]
---
Predecessors: [0x79]
Successors: [0x206, 0x20c]
---
0x1e4 JUMPDEST
0x1e5 ADDRESS
0x1e6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fb AND
0x1fc BALANCE
0x1fd CALLVALUE
0x1fe LT
0x1ff ISZERO
0x200 DUP1
0x201 ISZERO
0x202 PUSH2 0x20c
0x205 JUMPI
---
0x1e4: JUMPDEST 
0x1e5: V110 = ADDRESS
0x1e6: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fb: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1fc: V113 = BALANCE V112
0x1fd: V114 = CALLVALUE
0x1fe: V115 = LT V114 V113
0x1ff: V116 = ISZERO V115
0x201: V117 = ISZERO V116
0x202: V118 = 0x20c
0x205: JUMPI 0x20c V117
---
Entry stack: [V11, 0x8f, V32]
Stack pops: 0
Stack additions: [V116]
Exit stack: [V11, 0x8f, V32, V116]

================================

Block 0x206
[0x206:0x20b]
---
Predecessors: [0x1e4]
Successors: [0x20c]
---
0x206 POP
0x207 PUSH1 0x1
0x209 SLOAD
0x20a DUP2
0x20b EQ
---
0x207: V119 = 0x1
0x209: V120 = S[0x1]
0x20b: V121 = EQ V32 V120
---
Entry stack: [V11, 0x8f, V32, V116]
Stack pops: 2
Stack additions: [S1, V121]
Exit stack: [V11, 0x8f, V32, V121]

================================

Block 0x20c
[0x20c:0x212]
---
Predecessors: [0x1e4, 0x206]
Successors: [0x213, 0x21f]
---
0x20c JUMPDEST
0x20d DUP1
0x20e ISZERO
0x20f PUSH2 0x21f
0x212 JUMPI
---
0x20c: JUMPDEST 
0x20e: V122 = ISZERO S0
0x20f: V123 = 0x21f
0x212: JUMPI 0x21f V122
---
Entry stack: [V11, 0x8f, V32, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x8f, V32, S0]

================================

Block 0x213
[0x213:0x21e]
---
Predecessors: [0x20c]
Successors: [0x21f]
---
0x213 POP
0x214 PUSH7 0xb1a2bc2ec50000
0x21c CALLVALUE
0x21d LT
0x21e ISZERO
---
0x214: V124 = 0xb1a2bc2ec50000
0x21c: V125 = CALLVALUE
0x21d: V126 = LT V125 0xb1a2bc2ec50000
0x21e: V127 = ISZERO V126
---
Entry stack: [V11, 0x8f, V32, S0]
Stack pops: 1
Stack additions: [V127]
Exit stack: [V11, 0x8f, V32, V127]

================================

Block 0x21f
[0x21f:0x224]
---
Predecessors: [0x20c, 0x213]
Successors: [0x225, 0x27e]
---
0x21f JUMPDEST
0x220 ISZERO
0x221 PUSH2 0x27e
0x224 JUMPI
---
0x21f: JUMPDEST 
0x220: V128 = ISZERO S0
0x221: V129 = 0x27e
0x224: JUMPI 0x27e V128
---
Entry stack: [V11, 0x8f, V32, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8f, V32]

================================

Block 0x225
[0x225:0x278]
---
Predecessors: [0x21f]
Successors: [0x279, 0x27d]
---
0x225 CALLER
0x226 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23b AND
0x23c PUSH2 0x8fc
0x23f CALLVALUE
0x240 ADDRESS
0x241 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x256 AND
0x257 BALANCE
0x258 ADD
0x259 SWAP1
0x25a DUP2
0x25b ISZERO
0x25c MUL
0x25d SWAP1
0x25e PUSH1 0x40
0x260 MLOAD
0x261 PUSH1 0x0
0x263 PUSH1 0x40
0x265 MLOAD
0x266 DUP1
0x267 DUP4
0x268 SUB
0x269 DUP2
0x26a DUP6
0x26b DUP9
0x26c DUP9
0x26d CALL
0x26e SWAP4
0x26f POP
0x270 POP
0x271 POP
0x272 POP
0x273 ISZERO
0x274 ISZERO
0x275 PUSH2 0x27d
0x278 JUMPI
---
0x225: V130 = CALLER
0x226: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x23b: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x23c: V133 = 0x8fc
0x23f: V134 = CALLVALUE
0x240: V135 = ADDRESS
0x241: V136 = 0xffffffffffffffffffffffffffffffffffffffff
0x256: V137 = AND 0xffffffffffffffffffffffffffffffffffffffff V135
0x257: V138 = BALANCE V137
0x258: V139 = ADD V138 V134
0x25b: V140 = ISZERO V139
0x25c: V141 = MUL V140 0x8fc
0x25e: V142 = 0x40
0x260: V143 = M[0x40]
0x261: V144 = 0x0
0x263: V145 = 0x40
0x265: V146 = M[0x40]
0x268: V147 = SUB V143 V146
0x26d: V148 = CALL V141 V132 V139 V146 V147 V146 0x0
0x273: V149 = ISZERO V148
0x274: V150 = ISZERO V149
0x275: V151 = 0x27d
0x278: JUMPI 0x27d V150
---
Entry stack: [V11, 0x8f, V32]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f, V32]

================================

Block 0x279
[0x279:0x27c]
---
Predecessors: [0x225]
Successors: []
---
0x279 PUSH1 0x0
0x27b DUP1
0x27c REVERT
---
0x279: V152 = 0x0
0x27c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8f, V32]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f, V32]

================================

Block 0x27d
[0x27d:0x27d]
---
Predecessors: [0x225]
Successors: [0x27e]
---
0x27d JUMPDEST
---
0x27d: JUMPDEST 
---
Entry stack: [V11, 0x8f, V32]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f, V32]

================================

Block 0x27e
[0x27e:0x280]
---
Predecessors: [0x21f, 0x27d]
Successors: [0x8f]
---
0x27e JUMPDEST
0x27f POP
0x280 JUMP
---
0x27e: JUMPDEST 
0x280: JUMP 0x8f
---
Entry stack: [V11, 0x8f, V32]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x281
[0x281:0x2a5]
---
Predecessors: [0x9c]
Successors: [0xa4]
---
0x281 JUMPDEST
0x282 PUSH1 0x0
0x284 DUP1
0x285 SWAP1
0x286 SLOAD
0x287 SWAP1
0x288 PUSH2 0x100
0x28b EXP
0x28c SWAP1
0x28d DIV
0x28e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a3 AND
0x2a4 DUP2
0x2a5 JUMP
---
0x281: JUMPDEST 
0x282: V153 = 0x0
0x286: V154 = S[0x0]
0x288: V155 = 0x100
0x28b: V156 = EXP 0x100 0x0
0x28d: V157 = DIV V154 0x1
0x28e: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a3: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x2a5: JUMP 0xa4
---
Entry stack: [V11, 0xa4]
Stack pops: 1
Stack additions: [S0, V159]
Exit stack: [V11, 0xa4, V159]

================================

Block 0x2a6
[0x2a6:0x2ab]
---
Predecessors: [0xf1]
Successors: [0xf9]
---
0x2a6 JUMPDEST
0x2a7 PUSH1 0x1
0x2a9 SLOAD
0x2aa DUP2
0x2ab JUMP
---
0x2a6: JUMPDEST 
0x2a7: V160 = 0x1
0x2a9: V161 = S[0x1]
0x2ab: JUMP 0xf9
---
Entry stack: [V11, 0xf9]
Stack pops: 1
Stack additions: [S0, V161]
Exit stack: [V11, 0xf9, V161]

================================

Block 0x2ac
[0x2ac:0x2d7]
---
Predecessors: []
Successors: []
---
0x2ac STOP
0x2ad LOG1
0x2ae PUSH6 0x627a7a723058
0x2b5 SHA3
0x2b6 MISSING 0x28
0x2b7 EXTCODESIZE
0x2b8 GASLIMIT
0x2b9 PUSH9 0x309c5ee802787fed10
0x2c3 MISSING 0x5e
0x2c4 MSIZE
0x2c5 SLOAD
0x2c6 MISSING 0x4d
0x2c7 MISSING 0x5f
0x2c8 MISSING 0xbd
0x2c9 MSIZE
0x2ca PUSH8 0x1d6f16bb4e212846
0x2d3 EXTCODEHASH
0x2d4 MISSING 0xb0
0x2d5 DIV
0x2d6 STOP
0x2d7 MISSING 0x29
---
0x2ac: STOP 
0x2ad: LOG S0 S1 S2
0x2ae: V162 = 0x627a7a723058
0x2b5: V163 = SHA3 0x627a7a723058 S3
0x2b6: MISSING 0x28
0x2b7: V164 = EXTCODESIZE S0
0x2b8: V165 = GASLIMIT
0x2b9: V166 = 0x309c5ee802787fed10
0x2c3: MISSING 0x5e
0x2c4: V167 = MSIZE
0x2c5: V168 = S[V167]
0x2c6: MISSING 0x4d
0x2c7: MISSING 0x5f
0x2c8: MISSING 0xbd
0x2c9: V169 = MSIZE
0x2ca: V170 = 0x1d6f16bb4e212846
0x2d3: V171 = EXTCODEHASH 0x1d6f16bb4e212846
0x2d4: MISSING 0xb0
0x2d5: V172 = DIV S0 S1
0x2d6: STOP 
0x2d7: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V163, 0x309c5ee802787fed10, V165, V164, V168, V171, V169, V172]
Exit stack: []

================================

Function 0:
Public function signature: 0x57ea89b6
Entry block: 0x64
Exit block: 0x77
Body: 0x64, 0x6b, 0x6f, 0x77, 0x10f, 0x166, 0x16a, 0x1de, 0x1e2

Function 1:
Public function signature: 0x75f96ead
Entry block: 0x79
Exit block: 0x8f
Body: 0x79, 0x8f, 0x1e4, 0x206, 0x20c, 0x213, 0x21f, 0x225, 0x279, 0x27d, 0x27e

Function 2:
Public function signature: 0xb4a99a4e
Entry block: 0x91
Exit block: 0xa4
Body: 0x91, 0x98, 0x9c, 0xa4, 0x281

Function 3:
Public function signature: 0xc2610cda
Entry block: 0xe6
Exit block: 0xf9
Body: 0xe6, 0xed, 0xf1, 0xf9, 0x2a6

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

