Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x4c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x4c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x4c
0xc: JUMPI 0x4c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x4e]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3ccfd60b
0x3c EQ
0x3d PUSH2 0x4e
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3ccfd60b
0x3c: V13 = EQ 0x3ccfd60b V11
0x3d: V14 = 0x4e
0x40: JUMPI 0x4e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x58]
---
0x41 DUP1
0x42 PUSH4 0xa163a624
0x47 EQ
0x48 PUSH2 0x58
0x4b JUMPI
---
0x42: V15 = 0xa163a624
0x47: V16 = EQ 0xa163a624 V11
0x48: V17 = 0x58
0x4b: JUMPI 0x58 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x4d]
---
Predecessors: [0x0, 0x41]
Successors: []
---
0x4c JUMPDEST
0x4d STOP
---
0x4c: JUMPDEST 
0x4d: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4e
[0x4e:0x55]
---
Predecessors: [0xd]
Successors: [0x62]
---
0x4e JUMPDEST
0x4f PUSH2 0x56
0x52 PUSH2 0x62
0x55 JUMP
---
0x4e: JUMPDEST 
0x4f: V18 = 0x56
0x52: V19 = 0x62
0x55: JUMP 0x62
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x56]
Exit stack: [V11, 0x56]

================================

Block 0x56
[0x56:0x57]
---
Predecessors: [0x135]
Successors: []
---
0x56 JUMPDEST
0x57 STOP
---
0x56: JUMPDEST 
0x57: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x58
[0x58:0x5f]
---
Predecessors: [0x41]
Successors: [0x137]
---
0x58 JUMPDEST
0x59 PUSH2 0x60
0x5c PUSH2 0x137
0x5f JUMP
---
0x58: JUMPDEST 
0x59: V20 = 0x60
0x5c: V21 = 0x137
0x5f: JUMP 0x137
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x60]
Exit stack: [V11, 0x60]

================================

Block 0x60
[0x60:0x61]
---
Predecessors: [0x1da]
Successors: []
---
0x60 JUMPDEST
0x61 STOP
---
0x60: JUMPDEST 
0x61: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x62
[0x62:0xb8]
---
Predecessors: [0x4e]
Successors: [0xb9, 0xbd]
---
0x62 JUMPDEST
0x63 PUSH1 0x0
0x65 DUP1
0x66 SWAP1
0x67 SLOAD
0x68 SWAP1
0x69 PUSH2 0x100
0x6c EXP
0x6d SWAP1
0x6e DIV
0x6f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x84 AND
0x85 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9a AND
0x9b CALLER
0x9c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb1 AND
0xb2 EQ
0xb3 ISZERO
0xb4 ISZERO
0xb5 PUSH2 0xbd
0xb8 JUMPI
---
0x62: JUMPDEST 
0x63: V22 = 0x0
0x67: V23 = S[0x0]
0x69: V24 = 0x100
0x6c: V25 = EXP 0x100 0x0
0x6e: V26 = DIV V23 0x1
0x6f: V27 = 0xffffffffffffffffffffffffffffffffffffffff
0x84: V28 = AND 0xffffffffffffffffffffffffffffffffffffffff V26
0x85: V29 = 0xffffffffffffffffffffffffffffffffffffffff
0x9a: V30 = AND 0xffffffffffffffffffffffffffffffffffffffff V28
0x9b: V31 = CALLER
0x9c: V32 = 0xffffffffffffffffffffffffffffffffffffffff
0xb1: V33 = AND 0xffffffffffffffffffffffffffffffffffffffff V31
0xb2: V34 = EQ V33 V30
0xb3: V35 = ISZERO V34
0xb4: V36 = ISZERO V35
0xb5: V37 = 0xbd
0xb8: JUMPI 0xbd V36
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0xb9
[0xb9:0xbc]
---
Predecessors: [0x62]
Successors: []
---
0xb9 PUSH1 0x0
0xbb DUP1
0xbc REVERT
---
0xb9: V38 = 0x0
0xbc: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0xbd
[0xbd:0x130]
---
Predecessors: [0x62]
Successors: [0x131, 0x135]
---
0xbd JUMPDEST
0xbe PUSH1 0x0
0xc0 DUP1
0xc1 SWAP1
0xc2 SLOAD
0xc3 SWAP1
0xc4 PUSH2 0x100
0xc7 EXP
0xc8 SWAP1
0xc9 DIV
0xca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdf AND
0xe0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf5 AND
0xf6 PUSH2 0x8fc
0xf9 ADDRESS
0xfa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10f AND
0x110 BALANCE
0x111 SWAP1
0x112 DUP2
0x113 ISZERO
0x114 MUL
0x115 SWAP1
0x116 PUSH1 0x40
0x118 MLOAD
0x119 PUSH1 0x0
0x11b PUSH1 0x40
0x11d MLOAD
0x11e DUP1
0x11f DUP4
0x120 SUB
0x121 DUP2
0x122 DUP6
0x123 DUP9
0x124 DUP9
0x125 CALL
0x126 SWAP4
0x127 POP
0x128 POP
0x129 POP
0x12a POP
0x12b ISZERO
0x12c ISZERO
0x12d PUSH2 0x135
0x130 JUMPI
---
0xbd: JUMPDEST 
0xbe: V39 = 0x0
0xc2: V40 = S[0x0]
0xc4: V41 = 0x100
0xc7: V42 = EXP 0x100 0x0
0xc9: V43 = DIV V40 0x1
0xca: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xdf: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xe0: V46 = 0xffffffffffffffffffffffffffffffffffffffff
0xf5: V47 = AND 0xffffffffffffffffffffffffffffffffffffffff V45
0xf6: V48 = 0x8fc
0xf9: V49 = ADDRESS
0xfa: V50 = 0xffffffffffffffffffffffffffffffffffffffff
0x10f: V51 = AND 0xffffffffffffffffffffffffffffffffffffffff V49
0x110: V52 = BALANCE V51
0x113: V53 = ISZERO V52
0x114: V54 = MUL V53 0x8fc
0x116: V55 = 0x40
0x118: V56 = M[0x40]
0x119: V57 = 0x0
0x11b: V58 = 0x40
0x11d: V59 = M[0x40]
0x120: V60 = SUB V56 V59
0x125: V61 = CALL V54 V47 V52 V59 V60 V59 0x0
0x12b: V62 = ISZERO V61
0x12c: V63 = ISZERO V62
0x12d: V64 = 0x135
0x130: JUMPI 0x135 V63
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x131
[0x131:0x134]
---
Predecessors: [0xbd]
Successors: []
---
0x131 PUSH1 0x0
0x133 DUP1
0x134 REVERT
---
0x131: V65 = 0x0
0x134: REVERT 0x0 0x0
---
Entry stack: [V11, 0x56]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x56]

================================

Block 0x135
[0x135:0x136]
---
Predecessors: [0xbd]
Successors: [0x56]
---
0x135 JUMPDEST
0x136 JUMP
---
0x135: JUMPDEST 
0x136: JUMP 0x56
---
Entry stack: [V11, 0x56]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x137
[0x137:0x14d]
---
Predecessors: [0x58]
Successors: [0x14e, 0x1da]
---
0x137 JUMPDEST
0x138 PUSH1 0x0
0x13a DUP1
0x13b PUSH1 0x0
0x13d PUSH8 0xde0b6b3a7640000
0x146 CALLVALUE
0x147 LT
0x148 ISZERO
0x149 ISZERO
0x14a PUSH2 0x1da
0x14d JUMPI
---
0x137: JUMPDEST 
0x138: V66 = 0x0
0x13b: V67 = 0x0
0x13d: V68 = 0xde0b6b3a7640000
0x146: V69 = CALLVALUE
0x147: V70 = LT V69 0xde0b6b3a7640000
0x148: V71 = ISZERO V70
0x149: V72 = ISZERO V71
0x14a: V73 = 0x1da
0x14d: JUMPI 0x1da V72
---
Entry stack: [V11, 0x60]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x60, 0x0, 0x0, 0x0]

================================

Block 0x14e
[0x14e:0x15b]
---
Predecessors: [0x137]
Successors: [0x15c]
---
0x14e PUSH1 0x1
0x150 SWAP3
0x151 POP
0x152 PUSH1 0x0
0x154 SWAP2
0x155 POP
0x156 PUSH1 0x2
0x158 CALLVALUE
0x159 MUL
0x15a SWAP1
0x15b POP
---
0x14e: V74 = 0x1
0x152: V75 = 0x0
0x156: V76 = 0x2
0x158: V77 = CALLVALUE
0x159: V78 = MUL V77 0x2
---
Entry stack: [V11, 0x60, 0x0, 0x0, 0x0]
Stack pops: 3
Stack additions: [0x1, 0x0, V78]
Exit stack: [V11, 0x60, 0x1, 0x0, V78]

================================

Block 0x15c
[0x15c:0x163]
---
Predecessors: [0x14e, 0x186]
Successors: [0x164, 0x196]
---
0x15c JUMPDEST
0x15d PUSH1 0x1
0x15f ISZERO
0x160 PUSH2 0x196
0x163 JUMPI
---
0x15c: JUMPDEST 
0x15d: V79 = 0x1
0x15f: V80 = ISZERO 0x1
0x160: V81 = 0x196
0x163: JUMPI 0x196 0x0
---
Entry stack: [V11, 0x60, S2, S1, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x60, S2, S1, V78]

================================

Block 0x164
[0x164:0x171]
---
Predecessors: [0x15c]
Successors: [0x172, 0x176]
---
0x164 DUP2
0x165 PUSH1 0xff
0x167 AND
0x168 DUP4
0x169 PUSH1 0xff
0x16b AND
0x16c LT
0x16d ISZERO
0x16e PUSH2 0x176
0x171 JUMPI
---
0x165: V82 = 0xff
0x167: V83 = AND 0xff S1
0x169: V84 = 0xff
0x16b: V85 = AND 0xff S2
0x16c: V86 = LT V85 V83
0x16d: V87 = ISZERO V86
0x16e: V88 = 0x176
0x171: JUMPI 0x176 V87
---
Entry stack: [V11, 0x60, S2, S1, V78]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x60, S2, S1, V78]

================================

Block 0x172
[0x172:0x175]
---
Predecessors: [0x164]
Successors: [0x196]
---
0x172 PUSH2 0x196
0x175 JUMP
---
0x172: V89 = 0x196
0x175: JUMP 0x196
---
Entry stack: [V11, 0x60, S2, S1, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x60, S2, S1, V78]

================================

Block 0x176
[0x176:0x181]
---
Predecessors: [0x164]
Successors: [0x182, 0x186]
---
0x176 JUMPDEST
0x177 DUP1
0x178 DUP4
0x179 PUSH1 0xff
0x17b AND
0x17c GT
0x17d ISZERO
0x17e PUSH2 0x186
0x181 JUMPI
---
0x176: JUMPDEST 
0x179: V90 = 0xff
0x17b: V91 = AND 0xff S2
0x17c: V92 = GT V91 V78
0x17d: V93 = ISZERO V92
0x17e: V94 = 0x186
0x181: JUMPI 0x186 V93
---
Entry stack: [V11, 0x60, S2, S1, V78]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x60, S2, S1, V78]

================================

Block 0x182
[0x182:0x185]
---
Predecessors: [0x176]
Successors: [0x196]
---
0x182 PUSH2 0x196
0x185 JUMP
---
0x182: V95 = 0x196
0x185: JUMP 0x196
---
Entry stack: [V11, 0x60, S2, S1, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x60, S2, S1, V78]

================================

Block 0x186
[0x186:0x195]
---
Predecessors: [0x176]
Successors: [0x15c]
---
0x186 JUMPDEST
0x187 DUP3
0x188 SWAP2
0x189 POP
0x18a DUP3
0x18b DUP1
0x18c PUSH1 0x1
0x18e ADD
0x18f SWAP4
0x190 POP
0x191 POP
0x192 PUSH2 0x15c
0x195 JUMP
---
0x186: JUMPDEST 
0x18c: V96 = 0x1
0x18e: V97 = ADD 0x1 S2
0x192: V98 = 0x15c
0x195: JUMP 0x15c
---
Entry stack: [V11, 0x60, S2, S1, V78]
Stack pops: 3
Stack additions: [V97, S2, S0]
Exit stack: [V11, 0x60, V97, S2, V78]

================================

Block 0x196
[0x196:0x1d4]
---
Predecessors: [0x15c, 0x172, 0x182]
Successors: [0x1d5, 0x1d9]
---
0x196 JUMPDEST
0x197 CALLER
0x198 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ad AND
0x1ae PUSH2 0x8fc
0x1b1 DUP4
0x1b2 PUSH1 0xff
0x1b4 AND
0x1b5 SWAP1
0x1b6 DUP2
0x1b7 ISZERO
0x1b8 MUL
0x1b9 SWAP1
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd PUSH1 0x0
0x1bf PUSH1 0x40
0x1c1 MLOAD
0x1c2 DUP1
0x1c3 DUP4
0x1c4 SUB
0x1c5 DUP2
0x1c6 DUP6
0x1c7 DUP9
0x1c8 DUP9
0x1c9 CALL
0x1ca SWAP4
0x1cb POP
0x1cc POP
0x1cd POP
0x1ce POP
0x1cf ISZERO
0x1d0 ISZERO
0x1d1 PUSH2 0x1d9
0x1d4 JUMPI
---
0x196: JUMPDEST 
0x197: V99 = CALLER
0x198: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ad: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x1ae: V102 = 0x8fc
0x1b2: V103 = 0xff
0x1b4: V104 = AND 0xff S1
0x1b7: V105 = ISZERO V104
0x1b8: V106 = MUL V105 0x8fc
0x1ba: V107 = 0x40
0x1bc: V108 = M[0x40]
0x1bd: V109 = 0x0
0x1bf: V110 = 0x40
0x1c1: V111 = M[0x40]
0x1c4: V112 = SUB V108 V111
0x1c9: V113 = CALL V106 V101 V104 V111 V112 V111 0x0
0x1cf: V114 = ISZERO V113
0x1d0: V115 = ISZERO V114
0x1d1: V116 = 0x1d9
0x1d4: JUMPI 0x1d9 V115
---
Entry stack: [V11, 0x60, S2, S1, V78]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x60, S2, S1, V78]

================================

Block 0x1d5
[0x1d5:0x1d8]
---
Predecessors: [0x196]
Successors: []
---
0x1d5 PUSH1 0x0
0x1d7 DUP1
0x1d8 REVERT
---
0x1d5: V117 = 0x0
0x1d8: REVERT 0x0 0x0
---
Entry stack: [V11, 0x60, S2, S1, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x60, S2, S1, V78]

================================

Block 0x1d9
[0x1d9:0x1d9]
---
Predecessors: [0x196]
Successors: [0x1da]
---
0x1d9 JUMPDEST
---
0x1d9: JUMPDEST 
---
Entry stack: [V11, 0x60, S2, S1, V78]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x60, S2, S1, V78]

================================

Block 0x1da
[0x1da:0x1de]
---
Predecessors: [0x137, 0x1d9]
Successors: [0x60]
---
0x1da JUMPDEST
0x1db POP
0x1dc POP
0x1dd POP
0x1de JUMP
---
0x1da: JUMPDEST 
0x1de: JUMP 0x60
---
Entry stack: [V11, 0x60, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x1df
[0x1df:0x20d]
---
Predecessors: []
Successors: []
---
0x1df STOP
0x1e0 LOG1
0x1e1 PUSH6 0x627a7a723058
0x1e8 SHA3
0x1e9 SWAP12
0x1ea LOG1
0x1eb XOR
0x1ec BYTE
0x1ed MISSING 0xe7
0x1ee DUP4
0x1ef MISSING 0xc1
0x1f0 STOP
0x1f1 SELFDESTRUCT
0x1f2 EXTCODECOPY
0x1f3 MISSING 0xf
0x1f4 SMOD
0x1f5 MISSING 0xea
0x1f6 MISSING 0x2f
0x1f7 DUP2
0x1f8 MISSING 0xf9
0x1f9 MISSING 0xfc
0x1fa DUP12
0x1fb EXP
0x1fc MISSING 0x4f
0x1fd SWAP14
0x1fe MISSING 0xec
0x1ff MISSING 0xdf
0x200 MISSING 0xde
0x201 PUSH12 0xc6b71bbe118cb70029
---
0x1df: STOP 
0x1e0: LOG S0 S1 S2
0x1e1: V118 = 0x627a7a723058
0x1e8: V119 = SHA3 0x627a7a723058 S3
0x1ea: LOG S15 S4 S5
0x1eb: V120 = XOR S6 S7
0x1ec: V121 = BYTE V120 S8
0x1ed: MISSING 0xe7
0x1ef: MISSING 0xc1
0x1f0: STOP 
0x1f1: SELFDESTRUCT S0
0x1f2: EXTCODECOPY S0 S1 S2 S3
0x1f3: MISSING 0xf
0x1f4: V122 = SMOD S0 S1
0x1f5: MISSING 0xea
0x1f6: MISSING 0x2f
0x1f8: MISSING 0xf9
0x1f9: MISSING 0xfc
0x1fb: V123 = EXP S11 S0
0x1fc: MISSING 0x4f
0x1fe: MISSING 0xec
0x1ff: MISSING 0xdf
0x200: MISSING 0xde
0x201: V124 = 0xc6b71bbe118cb70029
---
Entry stack: []
Stack pops: 0
Stack additions: [V121, S9, S10, S11, S12, S13, S14, V119, S3, S0, S1, S2, S3, V122, S1, S0, S1, V123, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0, 0xc6b71bbe118cb70029]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ccfd60b
Entry block: 0x4e
Exit block: 0x56
Body: 0x4e, 0x56, 0x62, 0xb9, 0xbd, 0x131, 0x135

Function 1:
Public function signature: 0xa163a624
Entry block: 0x58
Exit block: 0x1d5
Body: 0x58, 0x60, 0x137, 0x14e, 0x15c, 0x164, 0x172, 0x176, 0x182, 0x186, 0x196, 0x1d5, 0x1d9, 0x1da

Function 2:
Public fallback function
Entry block: 0x4c
Exit block: 0x4c
Body: 0x4c

