Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xd8]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xd8
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xd8
0xa: JUMPI 0xd8 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x1ef]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x6fdde03
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x1ef
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x6fdde03
0x39: V12 = EQ V10 0x6fdde03
0x3a: V13 = 0x1ef
0x3d: JUMPI 0x1ef V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x27f]
---
0x3e DUP1
0x3f PUSH4 0x95ea7b3
0x44 EQ
0x45 PUSH2 0x27f
0x48 JUMPI
---
0x3f: V14 = 0x95ea7b3
0x44: V15 = EQ 0x95ea7b3 V10
0x45: V16 = 0x27f
0x48: JUMPI 0x27f V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x2b2]
---
0x49 DUP1
0x4a PUSH4 0xdcf4b8f
0x4f EQ
0x50 PUSH2 0x2b2
0x53 JUMPI
---
0x4a: V17 = 0xdcf4b8f
0x4f: V18 = EQ 0xdcf4b8f V10
0x50: V19 = 0x2b2
0x53: JUMPI 0x2b2 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x2d4]
---
0x54 DUP1
0x55 PUSH4 0x18160ddd
0x5a EQ
0x5b PUSH2 0x2d4
0x5e JUMPI
---
0x55: V20 = 0x18160ddd
0x5a: V21 = EQ 0x18160ddd V10
0x5b: V22 = 0x2d4
0x5e: JUMPI 0x2d4 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x2f6]
---
0x5f DUP1
0x60 PUSH4 0x23b872dd
0x65 EQ
0x66 PUSH2 0x2f6
0x69 JUMPI
---
0x60: V23 = 0x23b872dd
0x65: V24 = EQ 0x23b872dd V10
0x66: V25 = 0x2f6
0x69: JUMPI 0x2f6 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x32f]
---
0x6a DUP1
0x6b PUSH4 0x313ce567
0x70 EQ
0x71 PUSH2 0x32f
0x74 JUMPI
---
0x6b: V26 = 0x313ce567
0x70: V27 = EQ 0x313ce567 V10
0x71: V28 = 0x32f
0x74: JUMPI 0x32f V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x355]
---
0x75 DUP1
0x76 PUSH4 0x64acdb77
0x7b EQ
0x7c PUSH2 0x355
0x7f JUMPI
---
0x76: V29 = 0x64acdb77
0x7b: V30 = EQ 0x64acdb77 V10
0x7c: V31 = 0x355
0x7f: JUMPI 0x355 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x367]
---
0x80 DUP1
0x81 PUSH4 0x70a08231
0x86 EQ
0x87 PUSH2 0x367
0x8a JUMPI
---
0x81: V32 = 0x70a08231
0x86: V33 = EQ 0x70a08231 V10
0x87: V34 = 0x367
0x8a: JUMPI 0x367 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x395]
---
0x8b DUP1
0x8c PUSH4 0x8f580996
0x91 EQ
0x92 PUSH2 0x395
0x95 JUMPI
---
0x8c: V35 = 0x8f580996
0x91: V36 = EQ 0x8f580996 V10
0x92: V37 = 0x395
0x95: JUMPI 0x395 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x3a7]
---
0x96 DUP1
0x97 PUSH4 0x95d89b41
0x9c EQ
0x9d PUSH2 0x3a7
0xa0 JUMPI
---
0x97: V38 = 0x95d89b41
0x9c: V39 = EQ 0x95d89b41 V10
0x9d: V40 = 0x3a7
0xa0: JUMPI 0x3a7 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x437]
---
0xa1 DUP1
0xa2 PUSH4 0x98b01fe3
0xa7 EQ
0xa8 PUSH2 0x437
0xab JUMPI
---
0xa2: V41 = 0x98b01fe3
0xa7: V42 = EQ 0x98b01fe3 V10
0xa8: V43 = 0x437
0xab: JUMPI 0x437 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x459]
---
0xac DUP1
0xad PUSH4 0xa9059cbb
0xb2 EQ
0xb3 PUSH2 0x459
0xb6 JUMPI
---
0xad: V44 = 0xa9059cbb
0xb2: V45 = EQ 0xa9059cbb V10
0xb3: V46 = 0x459
0xb6: JUMPI 0x459 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x48c]
---
0xb7 DUP1
0xb8 PUSH4 0xc59d4847
0xbd EQ
0xbe PUSH2 0x48c
0xc1 JUMPI
---
0xb8: V47 = 0xc59d4847
0xbd: V48 = EQ 0xc59d4847 V10
0xbe: V49 = 0x48c
0xc1: JUMPI 0x48c V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x4c4]
---
0xc2 DUP1
0xc3 PUSH4 0xda040c0f
0xc8 EQ
0xc9 PUSH2 0x4c4
0xcc JUMPI
---
0xc3: V50 = 0xda040c0f
0xc8: V51 = EQ 0xda040c0f V10
0xc9: V52 = 0x4c4
0xcc: JUMPI 0x4c4 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x4e8]
---
0xcd DUP1
0xce PUSH4 0xdd62ed3e
0xd3 EQ
0xd4 PUSH2 0x4e8
0xd7 JUMPI
---
0xce: V53 = 0xdd62ed3e
0xd3: V54 = EQ 0xdd62ed3e V10
0xd4: V55 = 0x4e8
0xd7: JUMPI 0x4e8 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xdb]
---
Predecessors: [0x0, 0xcd]
Successors: [0xdc]
---
0xd8 JUMPDEST
0xd9 PUSH2 0x1ed
---
0xd8: JUMPDEST 
0xd9: V56 = 0x1ed
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ed]
Exit stack: [V10, 0x1ed]

================================

Block 0xdc
[0xdc:0xf2]
---
Predecessors: [0xd8]
Successors: [0xf3, 0xf8]
---
0xdc JUMPDEST
0xdd PUSH1 0x0
0xdf DUP1
0xe0 SLOAD
0xe1 DUP2
0xe2 SWAP1
0xe3 PUSH1 0xa0
0xe5 PUSH1 0x2
0xe7 EXP
0xe8 SWAP1
0xe9 DIV
0xea PUSH1 0xff
0xec AND
0xed ISZERO
0xee ISZERO
0xef PUSH2 0xf8
0xf2 JUMPI
---
0xdc: JUMPDEST 
0xdd: V57 = 0x0
0xe0: V58 = S[0x0]
0xe3: V59 = 0xa0
0xe5: V60 = 0x2
0xe7: V61 = EXP 0x2 0xa0
0xe9: V62 = DIV V58 0x10000000000000000000000000000000000000000
0xea: V63 = 0xff
0xec: V64 = AND 0xff V62
0xed: V65 = ISZERO V64
0xee: V66 = ISZERO V65
0xef: V67 = 0xf8
0xf2: JUMPI 0xf8 V66
---
Entry stack: [V10, 0x1ed]
Stack pops: 0
Stack additions: [0x0, 0x0]
Exit stack: [V10, 0x1ed, 0x0, 0x0]

================================

Block 0xf3
[0xf3:0xf7]
---
Predecessors: [0xdc]
Successors: []
---
0xf3 PUSH1 0x0
0xf5 PUSH1 0x0
0xf7 REVERT
---
0xf3: V68 = 0x0
0xf5: V69 = 0x0
0xf7: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1ed, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ed, 0x0, 0x0]

================================

Block 0xf8
[0xf8:0x10b]
---
Predecessors: [0xdc]
Successors: [0x10c, 0x111]
---
0xf8 JUMPDEST
0xf9 PUSH1 0x3
0xfb SLOAD
0xfc PUSH9 0x43c33c193756480000
0x106 SWAP1
0x107 LT
0x108 PUSH2 0x111
0x10b JUMPI
---
0xf8: JUMPDEST 
0xf9: V70 = 0x3
0xfb: V71 = S[0x3]
0xfc: V72 = 0x43c33c193756480000
0x107: V73 = LT V71 0x43c33c193756480000
0x108: V74 = 0x111
0x10b: JUMPI 0x111 V73
---
Entry stack: [V10, 0x1ed, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ed, 0x0, 0x0]

================================

Block 0x10c
[0x10c:0x110]
---
Predecessors: [0xf8]
Successors: []
---
0x10c PUSH1 0x0
0x10e PUSH1 0x0
0x110 REVERT
---
0x10c: V75 = 0x0
0x10e: V76 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1ed, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ed, 0x0, 0x0]

================================

Block 0x111
[0x111:0x118]
---
Predecessors: [0xf8]
Successors: [0x119, 0x11d]
---
0x111 JUMPDEST
0x112 CALLVALUE
0x113 ISZERO
0x114 ISZERO
0x115 PUSH2 0x11d
0x118 JUMPI
---
0x111: JUMPDEST 
0x112: V77 = CALLVALUE
0x113: V78 = ISZERO V77
0x114: V79 = ISZERO V78
0x115: V80 = 0x11d
0x118: JUMPI 0x11d V79
---
Entry stack: [V10, 0x1ed, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ed, 0x0, 0x0]

================================

Block 0x119
[0x119:0x11c]
---
Predecessors: [0x111]
Successors: [0x1e9]
---
0x119 PUSH2 0x1e9
0x11c JUMP
---
0x119: V81 = 0x1e9
0x11c: JUMP 0x1e9
---
Entry stack: [V10, 0x1ed, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ed, 0x0, 0x0]

================================

Block 0x11d
[0x11d:0x14c]
---
Predecessors: [0x111]
Successors: [0x14d, 0x14e]
---
0x11d JUMPDEST
0x11e PUSH1 0x0
0x120 DUP1
0x121 SLOAD
0x122 PUSH1 0x40
0x124 MLOAD
0x125 PUSH1 0x1
0x127 PUSH1 0xa0
0x129 PUSH1 0x2
0x12b EXP
0x12c SUB
0x12d SWAP1
0x12e SWAP2
0x12f AND
0x130 SWAP2
0x131 CALLVALUE
0x132 DUP1
0x133 ISZERO
0x134 PUSH2 0x8fc
0x137 MUL
0x138 SWAP3
0x139 SWAP1
0x13a SWAP2
0x13b DUP2
0x13c DUP2
0x13d DUP2
0x13e DUP6
0x13f DUP9
0x140 DUP9
0x141 CALL
0x142 SWAP4
0x143 POP
0x144 POP
0x145 POP
0x146 POP
0x147 ISZERO
0x148 ISZERO
0x149 PUSH2 0x14e
0x14c JUMPI
---
0x11d: JUMPDEST 
0x11e: V82 = 0x0
0x121: V83 = S[0x0]
0x122: V84 = 0x40
0x124: V85 = M[0x40]
0x125: V86 = 0x1
0x127: V87 = 0xa0
0x129: V88 = 0x2
0x12b: V89 = EXP 0x2 0xa0
0x12c: V90 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12f: V91 = AND V83 0xffffffffffffffffffffffffffffffffffffffff
0x131: V92 = CALLVALUE
0x133: V93 = ISZERO V92
0x134: V94 = 0x8fc
0x137: V95 = MUL 0x8fc V93
0x141: V96 = CALL V95 V91 V92 V85 0x0 V85 0x0
0x147: V97 = ISZERO V96
0x148: V98 = ISZERO V97
0x149: V99 = 0x14e
0x14c: JUMPI 0x14e V98
---
Entry stack: [V10, 0x1ed, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ed, 0x0, 0x0]

================================

Block 0x14d
[0x14d:0x14d]
---
Predecessors: [0x11d]
Successors: []
---
0x14d INVALID
---
0x14d: INVALID 
---
Entry stack: [V10, 0x1ed, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ed, 0x0, 0x0]

================================

Block 0x14e
[0x14e:0x16f]
---
Predecessors: [0x11d]
Successors: [0x170, 0x187]
---
0x14e JUMPDEST
0x14f PUSH1 0x3
0x151 DUP1
0x152 SLOAD
0x153 CALLVALUE
0x154 SWAP1
0x155 DUP2
0x156 ADD
0x157 SWAP1
0x158 SWAP2
0x159 SSTORE
0x15a PUSH2 0x3e8
0x15d DUP2
0x15e MUL
0x15f SWAP3
0x160 POP
0x161 PUSH8 0x214e8348c4f0000
0x16a SWAP1
0x16b LT
0x16c PUSH2 0x187
0x16f JUMPI
---
0x14e: JUMPDEST 
0x14f: V100 = 0x3
0x152: V101 = S[0x3]
0x153: V102 = CALLVALUE
0x156: V103 = ADD V102 V101
0x159: S[0x3] = V103
0x15a: V104 = 0x3e8
0x15e: V105 = MUL V102 0x3e8
0x161: V106 = 0x214e8348c4f0000
0x16b: V107 = LT V102 0x214e8348c4f0000
0x16c: V108 = 0x187
0x16f: JUMPI 0x187 V107
---
Entry stack: [V10, 0x1ed, 0x0, 0x0]
Stack pops: 2
Stack additions: [V105, S0]
Exit stack: [V10, 0x1ed, V105, 0x0]

================================

Block 0x170
[0x170:0x186]
---
Predecessors: [0x14e]
Successors: [0x187]
---
0x170 POP
0x171 PUSH1 0x3
0x173 SLOAD
0x174 PUSH1 0x4
0x176 DUP1
0x177 SLOAD
0x178 PUSH1 0x64
0x17a CALLVALUE
0x17b MUL
0x17c SWAP1
0x17d DUP2
0x17e ADD
0x17f SWAP1
0x180 SWAP2
0x181 SSTORE
0x182 SWAP2
0x183 ADD
0x184 DUP2
0x185 ADD
0x186 SWAP1
---
0x171: V109 = 0x3
0x173: V110 = S[0x3]
0x174: V111 = 0x4
0x177: V112 = S[0x4]
0x178: V113 = 0x64
0x17a: V114 = CALLVALUE
0x17b: V115 = MUL V114 0x64
0x17e: V116 = ADD V115 V112
0x181: S[0x4] = V116
0x183: V117 = ADD V105 V110
0x185: V118 = ADD V115 V117
---
Entry stack: [V10, 0x1ed, V105, 0x0]
Stack pops: 2
Stack additions: [V118, V115]
Exit stack: [V10, 0x1ed, V118, V115]

================================

Block 0x187
[0x187:0x1e8]
---
Predecessors: [0x14e, 0x170]
Successors: [0x1e9]
---
0x187 JUMPDEST
0x188 PUSH1 0x5
0x18a DUP1
0x18b SLOAD
0x18c DUP4
0x18d ADD
0x18e SWAP1
0x18f SSTORE
0x190 PUSH1 0x1
0x192 PUSH1 0xa0
0x194 PUSH1 0x2
0x196 EXP
0x197 SUB
0x198 CALLER
0x199 DUP2
0x19a AND
0x19b PUSH1 0x0
0x19d DUP2
0x19e DUP2
0x19f MSTORE
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0x20
0x1a4 SWAP1
0x1a5 DUP2
0x1a6 MSTORE
0x1a7 PUSH1 0x40
0x1a9 SWAP2
0x1aa DUP3
0x1ab SWAP1
0x1ac SHA3
0x1ad DUP1
0x1ae SLOAD
0x1af DUP8
0x1b0 ADD
0x1b1 SWAP1
0x1b2 SSTORE
0x1b3 DUP2
0x1b4 MLOAD
0x1b5 DUP7
0x1b6 DUP2
0x1b7 MSTORE
0x1b8 SWAP2
0x1b9 MLOAD
0x1ba SWAP3
0x1bb SWAP4
0x1bc ADDRESS
0x1bd AND
0x1be SWAP3
0x1bf PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1e0 SWAP3
0x1e1 DUP2
0x1e2 SWAP1
0x1e3 SUB
0x1e4 SWAP1
0x1e5 SWAP2
0x1e6 ADD
0x1e7 SWAP1
0x1e8 LOG3
---
0x187: JUMPDEST 
0x188: V119 = 0x5
0x18b: V120 = S[0x5]
0x18d: V121 = ADD S1 V120
0x18f: S[0x5] = V121
0x190: V122 = 0x1
0x192: V123 = 0xa0
0x194: V124 = 0x2
0x196: V125 = EXP 0x2 0xa0
0x197: V126 = SUB 0x10000000000000000000000000000000000000000 0x1
0x198: V127 = CALLER
0x19a: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x19b: V129 = 0x0
0x19f: M[0x0] = V128
0x1a0: V130 = 0x1
0x1a2: V131 = 0x20
0x1a6: M[0x20] = 0x1
0x1a7: V132 = 0x40
0x1ac: V133 = SHA3 0x0 0x40
0x1ae: V134 = S[V133]
0x1b0: V135 = ADD S1 V134
0x1b2: S[V133] = V135
0x1b4: V136 = M[0x40]
0x1b7: M[V136] = S1
0x1b9: V137 = M[0x40]
0x1bc: V138 = ADDRESS
0x1bd: V139 = AND V138 0xffffffffffffffffffffffffffffffffffffffff
0x1bf: V140 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1e3: V141 = SUB V136 V137
0x1e6: V142 = ADD 0x20 V141
0x1e8: LOG V137 V142 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V139 V128
---
Entry stack: [V10, 0x1ed, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x1ed, S1, S0]

================================

Block 0x1e9
[0x1e9:0x1ec]
---
Predecessors: [0x119, 0x187]
Successors: [0x1ed]
---
0x1e9 JUMPDEST
0x1ea POP
0x1eb POP
0x1ec JUMP
---
0x1e9: JUMPDEST 
0x1ec: JUMP 0x1ed
---
Entry stack: [V10, 0x1ed, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ed
[0x1ed:0x1ee]
---
Predecessors: [0x1e9, 0x783, 0x7e5]
Successors: []
---
0x1ed JUMPDEST
0x1ee STOP
---
0x1ed: JUMPDEST 
0x1ee: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1ef
[0x1ef:0x1f5]
---
Predecessors: [0xb]
Successors: [0x1f6, 0x1f7]
---
0x1ef JUMPDEST
0x1f0 CALLVALUE
0x1f1 ISZERO
0x1f2 PUSH2 0x1f7
0x1f5 JUMPI
---
0x1ef: JUMPDEST 
0x1f0: V143 = CALLVALUE
0x1f1: V144 = ISZERO V143
0x1f2: V145 = 0x1f7
0x1f5: JUMPI 0x1f7 V144
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f6
[0x1f6:0x1f6]
---
Predecessors: [0x1ef]
Successors: []
---
0x1f6 INVALID
---
0x1f6: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f7
[0x1f7:0x1fe]
---
Predecessors: [0x1ef]
Successors: [0x51c]
---
0x1f7 JUMPDEST
0x1f8 PUSH2 0x1ff
0x1fb PUSH2 0x51c
0x1fe JUMP
---
0x1f7: JUMPDEST 
0x1f8: V146 = 0x1ff
0x1fb: V147 = 0x51c
0x1fe: JUMP 0x51c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ff]
Exit stack: [V10, 0x1ff]

================================

Block 0x1ff
[0x1ff:0x224]
---
Predecessors: [0x55a, 0x825]
Successors: [0x225, 0x245]
---
0x1ff JUMPDEST
0x200 PUSH1 0x40
0x202 DUP1
0x203 MLOAD
0x204 PUSH1 0x20
0x206 DUP1
0x207 DUP3
0x208 MSTORE
0x209 DUP4
0x20a MLOAD
0x20b DUP2
0x20c DUP4
0x20d ADD
0x20e MSTORE
0x20f DUP4
0x210 MLOAD
0x211 SWAP2
0x212 SWAP3
0x213 DUP4
0x214 SWAP3
0x215 SWAP1
0x216 DUP4
0x217 ADD
0x218 SWAP2
0x219 DUP6
0x21a ADD
0x21b SWAP1
0x21c DUP1
0x21d DUP4
0x21e DUP4
0x21f DUP3
0x220 ISZERO
0x221 PUSH2 0x245
0x224 JUMPI
---
0x1ff: JUMPDEST 
0x200: V148 = 0x40
0x203: V149 = M[0x40]
0x204: V150 = 0x20
0x208: M[V149] = 0x20
0x20a: V151 = M[S0]
0x20d: V152 = ADD V149 0x20
0x20e: M[V152] = V151
0x210: V153 = M[S0]
0x217: V154 = ADD V149 0x40
0x21a: V155 = ADD S0 0x20
0x220: V156 = ISZERO V153
0x221: V157 = 0x245
0x224: JUMPI 0x245 V156
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [S0, V149, V149, V154, V155, V153, V153, V154, V155]
Exit stack: [V10, S0, V149, V149, V154, V155, V153, V153, V154, V155]

================================

Block 0x225
[0x225:0x232]
---
Predecessors: [0x1ff, 0x233, 0x3eb]
Successors: [0x233, 0x245]
---
0x225 JUMPDEST
0x226 DUP1
0x227 MLOAD
0x228 DUP3
0x229 MSTORE
0x22a PUSH1 0x20
0x22c DUP4
0x22d GT
0x22e ISZERO
0x22f PUSH2 0x245
0x232 JUMPI
---
0x225: JUMPDEST 
0x227: V158 = M[S0]
0x229: M[S1] = V158
0x22a: V159 = 0x20
0x22d: V160 = GT S2 0x20
0x22e: V161 = ISZERO V160
0x22f: V162 = 0x245
0x232: JUMPI 0x245 V161
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x233
[0x233:0x244]
---
Predecessors: [0x225]
Successors: [0x225]
---
0x233 PUSH1 0x1f
0x235 NOT
0x236 SWAP1
0x237 SWAP3
0x238 ADD
0x239 SWAP2
0x23a PUSH1 0x20
0x23c SWAP2
0x23d DUP3
0x23e ADD
0x23f SWAP2
0x240 ADD
0x241 PUSH2 0x225
0x244 JUMP
---
0x233: V163 = 0x1f
0x235: V164 = NOT 0x1f
0x238: V165 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x23a: V166 = 0x20
0x23e: V167 = ADD 0x20 S1
0x240: V168 = ADD 0x20 S0
0x241: V169 = 0x225
0x244: JUMP 0x225
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V165, V167, V168]
Exit stack: [V10, S8, S7, S6, S5, S4, S3, V165, V167, V168]

================================

Block 0x245
[0x245:0x257]
---
Predecessors: [0x1ff, 0x225, 0x3b7, 0x3dd]
Successors: [0x258, 0x271]
---
0x245 JUMPDEST
0x246 POP
0x247 POP
0x248 POP
0x249 SWAP1
0x24a POP
0x24b SWAP1
0x24c DUP2
0x24d ADD
0x24e SWAP1
0x24f PUSH1 0x1f
0x251 AND
0x252 DUP1
0x253 ISZERO
0x254 PUSH2 0x271
0x257 JUMPI
---
0x245: JUMPDEST 
0x24d: V170 = ADD S3 S5
0x24f: V171 = 0x1f
0x251: V172 = AND 0x1f S3
0x253: V173 = ISZERO V172
0x254: V174 = 0x271
0x257: JUMPI 0x271 V173
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V170, V172]
Exit stack: [V10, S8, S7, S6, V170, V172]

================================

Block 0x258
[0x258:0x270]
---
Predecessors: [0x245]
Successors: [0x271]
---
0x258 DUP1
0x259 DUP3
0x25a SUB
0x25b DUP1
0x25c MLOAD
0x25d PUSH1 0x1
0x25f DUP4
0x260 PUSH1 0x20
0x262 SUB
0x263 PUSH2 0x100
0x266 EXP
0x267 SUB
0x268 NOT
0x269 AND
0x26a DUP2
0x26b MSTORE
0x26c PUSH1 0x20
0x26e ADD
0x26f SWAP2
0x270 POP
---
0x25a: V175 = SUB V170 V172
0x25c: V176 = M[V175]
0x25d: V177 = 0x1
0x260: V178 = 0x20
0x262: V179 = SUB 0x20 V172
0x263: V180 = 0x100
0x266: V181 = EXP 0x100 V179
0x267: V182 = SUB V181 0x1
0x268: V183 = NOT V182
0x269: V184 = AND V183 V176
0x26b: M[V175] = V184
0x26c: V185 = 0x20
0x26e: V186 = ADD 0x20 V175
---
Entry stack: [V10, S4, S3, S2, V170, V172]
Stack pops: 2
Stack additions: [V186, S0]
Exit stack: [V10, S4, S3, S2, V186, V172]

================================

Block 0x271
[0x271:0x27e]
---
Predecessors: [0x245, 0x258, 0x3fd]
Successors: []
---
0x271 JUMPDEST
0x272 POP
0x273 SWAP3
0x274 POP
0x275 POP
0x276 POP
0x277 PUSH1 0x40
0x279 MLOAD
0x27a DUP1
0x27b SWAP2
0x27c SUB
0x27d SWAP1
0x27e RETURN
---
0x271: JUMPDEST 
0x277: V187 = 0x40
0x279: V188 = M[0x40]
0x27c: V189 = SUB S1 V188
0x27e: RETURN V188 V189
---
Entry stack: [V10, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x27f
[0x27f:0x285]
---
Predecessors: [0x3e]
Successors: [0x286, 0x287]
---
0x27f JUMPDEST
0x280 CALLVALUE
0x281 ISZERO
0x282 PUSH2 0x287
0x285 JUMPI
---
0x27f: JUMPDEST 
0x280: V190 = CALLVALUE
0x281: V191 = ISZERO V190
0x282: V192 = 0x287
0x285: JUMPI 0x287 V191
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x286
[0x286:0x286]
---
Predecessors: [0x27f]
Successors: []
---
0x286 INVALID
---
0x286: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x287
[0x287:0x29d]
---
Predecessors: [0x27f]
Successors: [0x55d]
---
0x287 JUMPDEST
0x288 PUSH2 0x29e
0x28b PUSH1 0x1
0x28d PUSH1 0xa0
0x28f PUSH1 0x2
0x291 EXP
0x292 SUB
0x293 PUSH1 0x4
0x295 CALLDATALOAD
0x296 AND
0x297 PUSH1 0x24
0x299 CALLDATALOAD
0x29a PUSH2 0x55d
0x29d JUMP
---
0x287: JUMPDEST 
0x288: V193 = 0x29e
0x28b: V194 = 0x1
0x28d: V195 = 0xa0
0x28f: V196 = 0x2
0x291: V197 = EXP 0x2 0xa0
0x292: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x293: V199 = 0x4
0x295: V200 = CALLDATALOAD 0x4
0x296: V201 = AND V200 0xffffffffffffffffffffffffffffffffffffffff
0x297: V202 = 0x24
0x299: V203 = CALLDATALOAD 0x24
0x29a: V204 = 0x55d
0x29d: JUMP 0x55d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x29e, V201, V203]
Exit stack: [V10, 0x29e, V201, V203]

================================

Block 0x29e
[0x29e:0x2b1]
---
Predecessors: [0x600, 0x736, 0x908, 0x92e]
Successors: []
---
0x29e JUMPDEST
0x29f PUSH1 0x40
0x2a1 DUP1
0x2a2 MLOAD
0x2a3 SWAP2
0x2a4 ISZERO
0x2a5 ISZERO
0x2a6 DUP3
0x2a7 MSTORE
0x2a8 MLOAD
0x2a9 SWAP1
0x2aa DUP2
0x2ab SWAP1
0x2ac SUB
0x2ad PUSH1 0x20
0x2af ADD
0x2b0 SWAP1
0x2b1 RETURN
---
0x29e: JUMPDEST 
0x29f: V205 = 0x40
0x2a2: V206 = M[0x40]
0x2a4: V207 = ISZERO S0
0x2a5: V208 = ISZERO V207
0x2a7: M[V206] = V208
0x2a8: V209 = M[0x40]
0x2ac: V210 = SUB V206 V209
0x2ad: V211 = 0x20
0x2af: V212 = ADD 0x20 V210
0x2b1: RETURN V209 V212
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x2b2
[0x2b2:0x2b8]
---
Predecessors: [0x49]
Successors: [0x2b9, 0x2ba]
---
0x2b2 JUMPDEST
0x2b3 CALLVALUE
0x2b4 ISZERO
0x2b5 PUSH2 0x2ba
0x2b8 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V213 = CALLVALUE
0x2b4: V214 = ISZERO V213
0x2b5: V215 = 0x2ba
0x2b8: JUMPI 0x2ba V214
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2b9
[0x2b9:0x2b9]
---
Predecessors: [0x2b2]
Successors: []
---
0x2b9 INVALID
---
0x2b9: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ba
[0x2ba:0x2c1]
---
Predecessors: [0x2b2]
Successors: [0x606]
---
0x2ba JUMPDEST
0x2bb PUSH2 0x2c2
0x2be PUSH2 0x606
0x2c1 JUMP
---
0x2ba: JUMPDEST 
0x2bb: V216 = 0x2c2
0x2be: V217 = 0x606
0x2c1: JUMP 0x606
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2c2]
Exit stack: [V10, 0x2c2]

================================

Block 0x2c2
[0x2c2:0x2d3]
---
Predecessors: [0x606, 0x60c, 0x79f, 0x828, 0x965]
Successors: []
---
0x2c2 JUMPDEST
0x2c3 PUSH1 0x40
0x2c5 DUP1
0x2c6 MLOAD
0x2c7 SWAP2
0x2c8 DUP3
0x2c9 MSTORE
0x2ca MLOAD
0x2cb SWAP1
0x2cc DUP2
0x2cd SWAP1
0x2ce SUB
0x2cf PUSH1 0x20
0x2d1 ADD
0x2d2 SWAP1
0x2d3 RETURN
---
0x2c2: JUMPDEST 
0x2c3: V218 = 0x40
0x2c6: V219 = M[0x40]
0x2c9: M[V219] = S0
0x2ca: V220 = M[0x40]
0x2ce: V221 = SUB V219 V220
0x2cf: V222 = 0x20
0x2d1: V223 = ADD 0x20 V221
0x2d3: RETURN V220 V223
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x2d4
[0x2d4:0x2da]
---
Predecessors: [0x54]
Successors: [0x2db, 0x2dc]
---
0x2d4 JUMPDEST
0x2d5 CALLVALUE
0x2d6 ISZERO
0x2d7 PUSH2 0x2dc
0x2da JUMPI
---
0x2d4: JUMPDEST 
0x2d5: V224 = CALLVALUE
0x2d6: V225 = ISZERO V224
0x2d7: V226 = 0x2dc
0x2da: JUMPI 0x2dc V225
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2db
[0x2db:0x2db]
---
Predecessors: [0x2d4]
Successors: []
---
0x2db INVALID
---
0x2db: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2dc
[0x2dc:0x2e3]
---
Predecessors: [0x2d4]
Successors: [0x60c]
---
0x2dc JUMPDEST
0x2dd PUSH2 0x2c2
0x2e0 PUSH2 0x60c
0x2e3 JUMP
---
0x2dc: JUMPDEST 
0x2dd: V227 = 0x2c2
0x2e0: V228 = 0x60c
0x2e3: JUMP 0x60c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2c2]
Exit stack: [V10, 0x2c2]

================================

Block 0x2e4
[0x2e4:0x2f5]
---
Predecessors: []
Successors: []
---
0x2e4 JUMPDEST
0x2e5 PUSH1 0x40
0x2e7 DUP1
0x2e8 MLOAD
0x2e9 SWAP2
0x2ea DUP3
0x2eb MSTORE
0x2ec MLOAD
0x2ed SWAP1
0x2ee DUP2
0x2ef SWAP1
0x2f0 SUB
0x2f1 PUSH1 0x20
0x2f3 ADD
0x2f4 SWAP1
0x2f5 RETURN
---
0x2e4: JUMPDEST 
0x2e5: V229 = 0x40
0x2e8: V230 = M[0x40]
0x2eb: M[V230] = S0
0x2ec: V231 = M[0x40]
0x2f0: V232 = SUB V230 V231
0x2f1: V233 = 0x20
0x2f3: V234 = ADD 0x20 V232
0x2f5: RETURN V231 V234
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2f6
[0x2f6:0x2fc]
---
Predecessors: [0x5f]
Successors: [0x2fd, 0x2fe]
---
0x2f6 JUMPDEST
0x2f7 CALLVALUE
0x2f8 ISZERO
0x2f9 PUSH2 0x2fe
0x2fc JUMPI
---
0x2f6: JUMPDEST 
0x2f7: V235 = CALLVALUE
0x2f8: V236 = ISZERO V235
0x2f9: V237 = 0x2fe
0x2fc: JUMPI 0x2fe V236
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2fd
[0x2fd:0x2fd]
---
Predecessors: [0x2f6]
Successors: []
---
0x2fd INVALID
---
0x2fd: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2fe
[0x2fe:0x31a]
---
Predecessors: [0x2f6]
Successors: [0x612]
---
0x2fe JUMPDEST
0x2ff PUSH2 0x29e
0x302 PUSH1 0x1
0x304 PUSH1 0xa0
0x306 PUSH1 0x2
0x308 EXP
0x309 SUB
0x30a PUSH1 0x4
0x30c CALLDATALOAD
0x30d DUP2
0x30e AND
0x30f SWAP1
0x310 PUSH1 0x24
0x312 CALLDATALOAD
0x313 AND
0x314 PUSH1 0x44
0x316 CALLDATALOAD
0x317 PUSH2 0x612
0x31a JUMP
---
0x2fe: JUMPDEST 
0x2ff: V238 = 0x29e
0x302: V239 = 0x1
0x304: V240 = 0xa0
0x306: V241 = 0x2
0x308: V242 = EXP 0x2 0xa0
0x309: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x30a: V244 = 0x4
0x30c: V245 = CALLDATALOAD 0x4
0x30e: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x310: V247 = 0x24
0x312: V248 = CALLDATALOAD 0x24
0x313: V249 = AND V248 0xffffffffffffffffffffffffffffffffffffffff
0x314: V250 = 0x44
0x316: V251 = CALLDATALOAD 0x44
0x317: V252 = 0x612
0x31a: JUMP 0x612
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x29e, V246, V249, V251]
Exit stack: [V10, 0x29e, V246, V249, V251]

================================

Block 0x31b
[0x31b:0x32e]
---
Predecessors: []
Successors: []
---
0x31b JUMPDEST
0x31c PUSH1 0x40
0x31e DUP1
0x31f MLOAD
0x320 SWAP2
0x321 ISZERO
0x322 ISZERO
0x323 DUP3
0x324 MSTORE
0x325 MLOAD
0x326 SWAP1
0x327 DUP2
0x328 SWAP1
0x329 SUB
0x32a PUSH1 0x20
0x32c ADD
0x32d SWAP1
0x32e RETURN
---
0x31b: JUMPDEST 
0x31c: V253 = 0x40
0x31f: V254 = M[0x40]
0x321: V255 = ISZERO S0
0x322: V256 = ISZERO V255
0x324: M[V254] = V256
0x325: V257 = M[0x40]
0x329: V258 = SUB V254 V257
0x32a: V259 = 0x20
0x32c: V260 = ADD 0x20 V258
0x32e: RETURN V257 V260
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x32f
[0x32f:0x335]
---
Predecessors: [0x6a]
Successors: [0x336, 0x337]
---
0x32f JUMPDEST
0x330 CALLVALUE
0x331 ISZERO
0x332 PUSH2 0x337
0x335 JUMPI
---
0x32f: JUMPDEST 
0x330: V261 = CALLVALUE
0x331: V262 = ISZERO V261
0x332: V263 = 0x337
0x335: JUMPI 0x337 V262
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x336
[0x336:0x336]
---
Predecessors: [0x32f]
Successors: []
---
0x336 INVALID
---
0x336: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x337
[0x337:0x33e]
---
Predecessors: [0x32f]
Successors: [0x742]
---
0x337 JUMPDEST
0x338 PUSH2 0x33f
0x33b PUSH2 0x742
0x33e JUMP
---
0x337: JUMPDEST 
0x338: V264 = 0x33f
0x33b: V265 = 0x742
0x33e: JUMP 0x742
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x33f]
Exit stack: [V10, 0x33f]

================================

Block 0x33f
[0x33f:0x354]
---
Predecessors: [0x745]
Successors: []
---
0x33f JUMPDEST
0x340 PUSH1 0x40
0x342 DUP1
0x343 MLOAD
0x344 PUSH1 0xff
0x346 SWAP1
0x347 SWAP3
0x348 AND
0x349 DUP3
0x34a MSTORE
0x34b MLOAD
0x34c SWAP1
0x34d DUP2
0x34e SWAP1
0x34f SUB
0x350 PUSH1 0x20
0x352 ADD
0x353 SWAP1
0x354 RETURN
---
0x33f: JUMPDEST 
0x340: V266 = 0x40
0x343: V267 = M[0x40]
0x344: V268 = 0xff
0x348: V269 = AND 0x12 0xff
0x34a: M[V267] = 0x12
0x34b: V270 = M[0x40]
0x34f: V271 = SUB V267 V270
0x350: V272 = 0x20
0x352: V273 = ADD 0x20 V271
0x354: RETURN V270 V273
---
Entry stack: [V10, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x355
[0x355:0x35b]
---
Predecessors: [0x75]
Successors: [0x35c, 0x35d]
---
0x355 JUMPDEST
0x356 CALLVALUE
0x357 ISZERO
0x358 PUSH2 0x35d
0x35b JUMPI
---
0x355: JUMPDEST 
0x356: V274 = CALLVALUE
0x357: V275 = ISZERO V274
0x358: V276 = 0x35d
0x35b: JUMPI 0x35d V275
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x35c
[0x35c:0x35c]
---
Predecessors: [0x355]
Successors: []
---
0x35c INVALID
---
0x35c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x35d
[0x35d:0x364]
---
Predecessors: [0x355]
Successors: [0x748]
---
0x35d JUMPDEST
0x35e PUSH2 0x1ed
0x361 PUSH2 0x748
0x364 JUMP
---
0x35d: JUMPDEST 
0x35e: V277 = 0x1ed
0x361: V278 = 0x748
0x364: JUMP 0x748
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ed]
Exit stack: [V10, 0x1ed]

================================

Block 0x365
[0x365:0x366]
---
Predecessors: []
Successors: []
---
0x365 JUMPDEST
0x366 STOP
---
0x365: JUMPDEST 
0x366: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x367
[0x367:0x36d]
---
Predecessors: [0x80]
Successors: [0x36e, 0x36f]
---
0x367 JUMPDEST
0x368 CALLVALUE
0x369 ISZERO
0x36a PUSH2 0x36f
0x36d JUMPI
---
0x367: JUMPDEST 
0x368: V279 = CALLVALUE
0x369: V280 = ISZERO V279
0x36a: V281 = 0x36f
0x36d: JUMPI 0x36f V280
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x36e
[0x36e:0x36e]
---
Predecessors: [0x367]
Successors: []
---
0x36e INVALID
---
0x36e: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x36f
[0x36f:0x382]
---
Predecessors: [0x367]
Successors: [0x785]
---
0x36f JUMPDEST
0x370 PUSH2 0x2c2
0x373 PUSH1 0x1
0x375 PUSH1 0xa0
0x377 PUSH1 0x2
0x379 EXP
0x37a SUB
0x37b PUSH1 0x4
0x37d CALLDATALOAD
0x37e AND
0x37f PUSH2 0x785
0x382 JUMP
---
0x36f: JUMPDEST 
0x370: V282 = 0x2c2
0x373: V283 = 0x1
0x375: V284 = 0xa0
0x377: V285 = 0x2
0x379: V286 = EXP 0x2 0xa0
0x37a: V287 = SUB 0x10000000000000000000000000000000000000000 0x1
0x37b: V288 = 0x4
0x37d: V289 = CALLDATALOAD 0x4
0x37e: V290 = AND V289 0xffffffffffffffffffffffffffffffffffffffff
0x37f: V291 = 0x785
0x382: JUMP 0x785
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2c2, V290]
Exit stack: [V10, 0x2c2, V290]

================================

Block 0x383
[0x383:0x394]
---
Predecessors: []
Successors: []
---
0x383 JUMPDEST
0x384 PUSH1 0x40
0x386 DUP1
0x387 MLOAD
0x388 SWAP2
0x389 DUP3
0x38a MSTORE
0x38b MLOAD
0x38c SWAP1
0x38d DUP2
0x38e SWAP1
0x38f SUB
0x390 PUSH1 0x20
0x392 ADD
0x393 SWAP1
0x394 RETURN
---
0x383: JUMPDEST 
0x384: V292 = 0x40
0x387: V293 = M[0x40]
0x38a: M[V293] = S0
0x38b: V294 = M[0x40]
0x38f: V295 = SUB V293 V294
0x390: V296 = 0x20
0x392: V297 = ADD 0x20 V295
0x394: RETURN V294 V297
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x395
[0x395:0x39b]
---
Predecessors: [0x8b]
Successors: [0x39c, 0x39d]
---
0x395 JUMPDEST
0x396 CALLVALUE
0x397 ISZERO
0x398 PUSH2 0x39d
0x39b JUMPI
---
0x395: JUMPDEST 
0x396: V298 = CALLVALUE
0x397: V299 = ISZERO V298
0x398: V300 = 0x39d
0x39b: JUMPI 0x39d V299
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x39c
[0x39c:0x39c]
---
Predecessors: [0x395]
Successors: []
---
0x39c INVALID
---
0x39c: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x39d
[0x39d:0x3a4]
---
Predecessors: [0x395]
Successors: [0x7a4]
---
0x39d JUMPDEST
0x39e PUSH2 0x1ed
0x3a1 PUSH2 0x7a4
0x3a4 JUMP
---
0x39d: JUMPDEST 
0x39e: V301 = 0x1ed
0x3a1: V302 = 0x7a4
0x3a4: JUMP 0x7a4
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ed]
Exit stack: [V10, 0x1ed]

================================

Block 0x3a5
[0x3a5:0x3a6]
---
Predecessors: []
Successors: []
---
0x3a5 JUMPDEST
0x3a6 STOP
---
0x3a5: JUMPDEST 
0x3a6: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3a7
[0x3a7:0x3ad]
---
Predecessors: [0x96]
Successors: [0x3ae, 0x3af]
---
0x3a7 JUMPDEST
0x3a8 CALLVALUE
0x3a9 ISZERO
0x3aa PUSH2 0x3af
0x3ad JUMPI
---
0x3a7: JUMPDEST 
0x3a8: V303 = CALLVALUE
0x3a9: V304 = ISZERO V303
0x3aa: V305 = 0x3af
0x3ad: JUMPI 0x3af V304
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3ae
[0x3ae:0x3ae]
---
Predecessors: [0x3a7]
Successors: []
---
0x3ae INVALID
---
0x3ae: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3af
[0x3af:0x3b6]
---
Predecessors: [0x3a7]
Successors: [0x7e7]
---
0x3af JUMPDEST
0x3b0 PUSH2 0x1ff
0x3b3 PUSH2 0x7e7
0x3b6 JUMP
---
0x3af: JUMPDEST 
0x3b0: V306 = 0x1ff
0x3b3: V307 = 0x7e7
0x3b6: JUMP 0x7e7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ff]
Exit stack: [V10, 0x1ff]

================================

Block 0x3b7
[0x3b7:0x3dc]
---
Predecessors: []
Successors: [0x245, 0x3dd]
---
0x3b7 JUMPDEST
0x3b8 PUSH1 0x40
0x3ba DUP1
0x3bb MLOAD
0x3bc PUSH1 0x20
0x3be DUP1
0x3bf DUP3
0x3c0 MSTORE
0x3c1 DUP4
0x3c2 MLOAD
0x3c3 DUP2
0x3c4 DUP4
0x3c5 ADD
0x3c6 MSTORE
0x3c7 DUP4
0x3c8 MLOAD
0x3c9 SWAP2
0x3ca SWAP3
0x3cb DUP4
0x3cc SWAP3
0x3cd SWAP1
0x3ce DUP4
0x3cf ADD
0x3d0 SWAP2
0x3d1 DUP6
0x3d2 ADD
0x3d3 SWAP1
0x3d4 DUP1
0x3d5 DUP4
0x3d6 DUP4
0x3d7 DUP3
0x3d8 ISZERO
0x3d9 PUSH2 0x245
0x3dc JUMPI
---
0x3b7: JUMPDEST 
0x3b8: V308 = 0x40
0x3bb: V309 = M[0x40]
0x3bc: V310 = 0x20
0x3c0: M[V309] = 0x20
0x3c2: V311 = M[S0]
0x3c5: V312 = ADD V309 0x20
0x3c6: M[V312] = V311
0x3c8: V313 = M[S0]
0x3cf: V314 = ADD V309 0x40
0x3d2: V315 = ADD S0 0x20
0x3d8: V316 = ISZERO V313
0x3d9: V317 = 0x245
0x3dc: JUMPI 0x245 V316
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V309, V309, V314, V315, V313, V313, V314, V315]
Exit stack: [S0, V309, V309, V314, V315, V313, V313, V314, V315]

================================

Block 0x3dd
[0x3dd:0x3ea]
---
Predecessors: [0x3b7]
Successors: [0x245, 0x3eb]
---
0x3dd JUMPDEST
0x3de DUP1
0x3df MLOAD
0x3e0 DUP3
0x3e1 MSTORE
0x3e2 PUSH1 0x20
0x3e4 DUP4
0x3e5 GT
0x3e6 ISZERO
0x3e7 PUSH2 0x245
0x3ea JUMPI
---
0x3dd: JUMPDEST 
0x3df: V318 = M[V315]
0x3e1: M[V314] = V318
0x3e2: V319 = 0x20
0x3e5: V320 = GT V313 0x20
0x3e6: V321 = ISZERO V320
0x3e7: V322 = 0x245
0x3ea: JUMPI 0x245 V321
---
Entry stack: [S8, V309, V309, V314, V315, V313, V313, V314, V315]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V309, V309, V314, V315, V313, V313, V314, V315]

================================

Block 0x3eb
[0x3eb:0x3fc]
---
Predecessors: [0x3dd]
Successors: [0x225]
---
0x3eb PUSH1 0x1f
0x3ed NOT
0x3ee SWAP1
0x3ef SWAP3
0x3f0 ADD
0x3f1 SWAP2
0x3f2 PUSH1 0x20
0x3f4 SWAP2
0x3f5 DUP3
0x3f6 ADD
0x3f7 SWAP2
0x3f8 ADD
0x3f9 PUSH2 0x225
0x3fc JUMP
---
0x3eb: V323 = 0x1f
0x3ed: V324 = NOT 0x1f
0x3f0: V325 = ADD V313 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x3f2: V326 = 0x20
0x3f6: V327 = ADD 0x20 V314
0x3f8: V328 = ADD 0x20 V315
0x3f9: V329 = 0x225
0x3fc: JUMP 0x225
---
Entry stack: [S8, V309, V309, V314, V315, V313, V313, V314, V315]
Stack pops: 3
Stack additions: [V325, V327, V328]
Exit stack: [S8, V309, V309, V314, V315, V313, V325, V327, V328]

================================

Block 0x3fd
[0x3fd:0x40f]
---
Predecessors: []
Successors: [0x271, 0x410]
---
0x3fd JUMPDEST
0x3fe POP
0x3ff POP
0x400 POP
0x401 SWAP1
0x402 POP
0x403 SWAP1
0x404 DUP2
0x405 ADD
0x406 SWAP1
0x407 PUSH1 0x1f
0x409 AND
0x40a DUP1
0x40b ISZERO
0x40c PUSH2 0x271
0x40f JUMPI
---
0x3fd: JUMPDEST 
0x405: V330 = ADD S3 S5
0x407: V331 = 0x1f
0x409: V332 = AND 0x1f S3
0x40b: V333 = ISZERO V332
0x40c: V334 = 0x271
0x40f: JUMPI 0x271 V333
---
Entry stack: []
Stack pops: 6
Stack additions: [V330, V332]
Exit stack: [V330, V332]

================================

Block 0x410
[0x410:0x428]
---
Predecessors: [0x3fd]
Successors: [0x429]
---
0x410 DUP1
0x411 DUP3
0x412 SUB
0x413 DUP1
0x414 MLOAD
0x415 PUSH1 0x1
0x417 DUP4
0x418 PUSH1 0x20
0x41a SUB
0x41b PUSH2 0x100
0x41e EXP
0x41f SUB
0x420 NOT
0x421 AND
0x422 DUP2
0x423 MSTORE
0x424 PUSH1 0x20
0x426 ADD
0x427 SWAP2
0x428 POP
---
0x412: V335 = SUB V330 V332
0x414: V336 = M[V335]
0x415: V337 = 0x1
0x418: V338 = 0x20
0x41a: V339 = SUB 0x20 V332
0x41b: V340 = 0x100
0x41e: V341 = EXP 0x100 V339
0x41f: V342 = SUB V341 0x1
0x420: V343 = NOT V342
0x421: V344 = AND V343 V336
0x423: M[V335] = V344
0x424: V345 = 0x20
0x426: V346 = ADD 0x20 V335
---
Entry stack: [V330, V332]
Stack pops: 2
Stack additions: [V346, S0]
Exit stack: [V346, V332]

================================

Block 0x429
[0x429:0x436]
---
Predecessors: [0x410]
Successors: []
---
0x429 JUMPDEST
0x42a POP
0x42b SWAP3
0x42c POP
0x42d POP
0x42e POP
0x42f PUSH1 0x40
0x431 MLOAD
0x432 DUP1
0x433 SWAP2
0x434 SUB
0x435 SWAP1
0x436 RETURN
---
0x429: JUMPDEST 
0x42f: V347 = 0x40
0x431: V348 = M[0x40]
0x434: V349 = SUB V346 V348
0x436: RETURN V348 V349
---
Entry stack: [V346, V332]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x437
[0x437:0x43d]
---
Predecessors: [0xa1]
Successors: [0x43e, 0x43f]
---
0x437 JUMPDEST
0x438 CALLVALUE
0x439 ISZERO
0x43a PUSH2 0x43f
0x43d JUMPI
---
0x437: JUMPDEST 
0x438: V350 = CALLVALUE
0x439: V351 = ISZERO V350
0x43a: V352 = 0x43f
0x43d: JUMPI 0x43f V351
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x43e
[0x43e:0x43e]
---
Predecessors: [0x437]
Successors: []
---
0x43e INVALID
---
0x43e: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x43f
[0x43f:0x446]
---
Predecessors: [0x437]
Successors: [0x828]
---
0x43f JUMPDEST
0x440 PUSH2 0x2c2
0x443 PUSH2 0x828
0x446 JUMP
---
0x43f: JUMPDEST 
0x440: V353 = 0x2c2
0x443: V354 = 0x828
0x446: JUMP 0x828
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2c2]
Exit stack: [V10, 0x2c2]

================================

Block 0x447
[0x447:0x458]
---
Predecessors: []
Successors: []
---
0x447 JUMPDEST
0x448 PUSH1 0x40
0x44a DUP1
0x44b MLOAD
0x44c SWAP2
0x44d DUP3
0x44e MSTORE
0x44f MLOAD
0x450 SWAP1
0x451 DUP2
0x452 SWAP1
0x453 SUB
0x454 PUSH1 0x20
0x456 ADD
0x457 SWAP1
0x458 RETURN
---
0x447: JUMPDEST 
0x448: V355 = 0x40
0x44b: V356 = M[0x40]
0x44e: M[V356] = S0
0x44f: V357 = M[0x40]
0x453: V358 = SUB V356 V357
0x454: V359 = 0x20
0x456: V360 = ADD 0x20 V358
0x458: RETURN V357 V360
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x459
[0x459:0x45f]
---
Predecessors: [0xac]
Successors: [0x460, 0x461]
---
0x459 JUMPDEST
0x45a CALLVALUE
0x45b ISZERO
0x45c PUSH2 0x461
0x45f JUMPI
---
0x459: JUMPDEST 
0x45a: V361 = CALLVALUE
0x45b: V362 = ISZERO V361
0x45c: V363 = 0x461
0x45f: JUMPI 0x461 V362
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x460
[0x460:0x460]
---
Predecessors: [0x459]
Successors: []
---
0x460 INVALID
---
0x460: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x461
[0x461:0x477]
---
Predecessors: [0x459]
Successors: [0x82e]
---
0x461 JUMPDEST
0x462 PUSH2 0x29e
0x465 PUSH1 0x1
0x467 PUSH1 0xa0
0x469 PUSH1 0x2
0x46b EXP
0x46c SUB
0x46d PUSH1 0x4
0x46f CALLDATALOAD
0x470 AND
0x471 PUSH1 0x24
0x473 CALLDATALOAD
0x474 PUSH2 0x82e
0x477 JUMP
---
0x461: JUMPDEST 
0x462: V364 = 0x29e
0x465: V365 = 0x1
0x467: V366 = 0xa0
0x469: V367 = 0x2
0x46b: V368 = EXP 0x2 0xa0
0x46c: V369 = SUB 0x10000000000000000000000000000000000000000 0x1
0x46d: V370 = 0x4
0x46f: V371 = CALLDATALOAD 0x4
0x470: V372 = AND V371 0xffffffffffffffffffffffffffffffffffffffff
0x471: V373 = 0x24
0x473: V374 = CALLDATALOAD 0x24
0x474: V375 = 0x82e
0x477: JUMP 0x82e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x29e, V372, V374]
Exit stack: [V10, 0x29e, V372, V374]

================================

Block 0x478
[0x478:0x48b]
---
Predecessors: []
Successors: []
---
0x478 JUMPDEST
0x479 PUSH1 0x40
0x47b DUP1
0x47c MLOAD
0x47d SWAP2
0x47e ISZERO
0x47f ISZERO
0x480 DUP3
0x481 MSTORE
0x482 MLOAD
0x483 SWAP1
0x484 DUP2
0x485 SWAP1
0x486 SUB
0x487 PUSH1 0x20
0x489 ADD
0x48a SWAP1
0x48b RETURN
---
0x478: JUMPDEST 
0x479: V376 = 0x40
0x47c: V377 = M[0x40]
0x47e: V378 = ISZERO S0
0x47f: V379 = ISZERO V378
0x481: M[V377] = V379
0x482: V380 = M[0x40]
0x486: V381 = SUB V377 V380
0x487: V382 = 0x20
0x489: V383 = ADD 0x20 V381
0x48b: RETURN V380 V383
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x48c
[0x48c:0x492]
---
Predecessors: [0xb7]
Successors: [0x493, 0x494]
---
0x48c JUMPDEST
0x48d CALLVALUE
0x48e ISZERO
0x48f PUSH2 0x494
0x492 JUMPI
---
0x48c: JUMPDEST 
0x48d: V384 = CALLVALUE
0x48e: V385 = ISZERO V384
0x48f: V386 = 0x494
0x492: JUMPI 0x494 V385
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x493
[0x493:0x493]
---
Predecessors: [0x48c]
Successors: []
---
0x493 INVALID
---
0x493: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x494
[0x494:0x49b]
---
Predecessors: [0x48c]
Successors: [0x911]
---
0x494 JUMPDEST
0x495 PUSH2 0x49c
0x498 PUSH2 0x911
0x49b JUMP
---
0x494: JUMPDEST 
0x495: V387 = 0x49c
0x498: V388 = 0x911
0x49b: JUMP 0x911
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x49c]
Exit stack: [V10, 0x49c]

================================

Block 0x49c
[0x49c:0x4c3]
---
Predecessors: [0x928]
Successors: []
---
0x49c JUMPDEST
0x49d PUSH1 0x40
0x49f DUP1
0x4a0 MLOAD
0x4a1 SWAP5
0x4a2 DUP6
0x4a3 MSTORE
0x4a4 PUSH1 0x20
0x4a6 DUP6
0x4a7 ADD
0x4a8 SWAP4
0x4a9 SWAP1
0x4aa SWAP4
0x4ab MSTORE
0x4ac DUP4
0x4ad DUP4
0x4ae ADD
0x4af SWAP2
0x4b0 SWAP1
0x4b1 SWAP2
0x4b2 MSTORE
0x4b3 ISZERO
0x4b4 ISZERO
0x4b5 PUSH1 0x60
0x4b7 DUP4
0x4b8 ADD
0x4b9 MSTORE
0x4ba MLOAD
0x4bb SWAP1
0x4bc DUP2
0x4bd SWAP1
0x4be SUB
0x4bf PUSH1 0x80
0x4c1 ADD
0x4c2 SWAP1
0x4c3 RETURN
---
0x49c: JUMPDEST 
0x49d: V389 = 0x40
0x4a0: V390 = M[0x40]
0x4a3: M[V390] = V703
0x4a4: V391 = 0x20
0x4a7: V392 = ADD V390 0x20
0x4ab: M[V392] = V705
0x4ae: V393 = ADD 0x40 V390
0x4b2: M[V393] = V707
0x4b3: V394 = ISZERO V715
0x4b4: V395 = ISZERO V394
0x4b5: V396 = 0x60
0x4b8: V397 = ADD V390 0x60
0x4b9: M[V397] = V395
0x4ba: V398 = M[0x40]
0x4be: V399 = SUB V390 V398
0x4bf: V400 = 0x80
0x4c1: V401 = ADD 0x80 V399
0x4c3: RETURN V398 V401
---
Entry stack: [V10, V703, V705, V707, V715]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x4c4
[0x4c4:0x4ca]
---
Predecessors: [0xc2]
Successors: [0x4cb, 0x4cc]
---
0x4c4 JUMPDEST
0x4c5 CALLVALUE
0x4c6 ISZERO
0x4c7 PUSH2 0x4cc
0x4ca JUMPI
---
0x4c4: JUMPDEST 
0x4c5: V402 = CALLVALUE
0x4c6: V403 = ISZERO V402
0x4c7: V404 = 0x4cc
0x4ca: JUMPI 0x4cc V403
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4cb
[0x4cb:0x4cb]
---
Predecessors: [0x4c4]
Successors: []
---
0x4cb INVALID
---
0x4cb: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4cc
[0x4cc:0x4d3]
---
Predecessors: [0x4c4]
Successors: [0x92e]
---
0x4cc JUMPDEST
0x4cd PUSH2 0x29e
0x4d0 PUSH2 0x92e
0x4d3 JUMP
---
0x4cc: JUMPDEST 
0x4cd: V405 = 0x29e
0x4d0: V406 = 0x92e
0x4d3: JUMP 0x92e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x29e]
Exit stack: [V10, 0x29e]

================================

Block 0x4d4
[0x4d4:0x4e7]
---
Predecessors: []
Successors: []
---
0x4d4 JUMPDEST
0x4d5 PUSH1 0x40
0x4d7 DUP1
0x4d8 MLOAD
0x4d9 SWAP2
0x4da ISZERO
0x4db ISZERO
0x4dc DUP3
0x4dd MSTORE
0x4de MLOAD
0x4df SWAP1
0x4e0 DUP2
0x4e1 SWAP1
0x4e2 SUB
0x4e3 PUSH1 0x20
0x4e5 ADD
0x4e6 SWAP1
0x4e7 RETURN
---
0x4d4: JUMPDEST 
0x4d5: V407 = 0x40
0x4d8: V408 = M[0x40]
0x4da: V409 = ISZERO S0
0x4db: V410 = ISZERO V409
0x4dd: M[V408] = V410
0x4de: V411 = M[0x40]
0x4e2: V412 = SUB V408 V411
0x4e3: V413 = 0x20
0x4e5: V414 = ADD 0x20 V412
0x4e7: RETURN V411 V414
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4e8
[0x4e8:0x4ee]
---
Predecessors: [0xcd]
Successors: [0x4ef, 0x4f0]
---
0x4e8 JUMPDEST
0x4e9 CALLVALUE
0x4ea ISZERO
0x4eb PUSH2 0x4f0
0x4ee JUMPI
---
0x4e8: JUMPDEST 
0x4e9: V415 = CALLVALUE
0x4ea: V416 = ISZERO V415
0x4eb: V417 = 0x4f0
0x4ee: JUMPI 0x4f0 V416
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4ef
[0x4ef:0x4ef]
---
Predecessors: [0x4e8]
Successors: []
---
0x4ef INVALID
---
0x4ef: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4f0
[0x4f0:0x509]
---
Predecessors: [0x4e8]
Successors: [0x93e]
---
0x4f0 JUMPDEST
0x4f1 PUSH2 0x2c2
0x4f4 PUSH1 0x1
0x4f6 PUSH1 0xa0
0x4f8 PUSH1 0x2
0x4fa EXP
0x4fb SUB
0x4fc PUSH1 0x4
0x4fe CALLDATALOAD
0x4ff DUP2
0x500 AND
0x501 SWAP1
0x502 PUSH1 0x24
0x504 CALLDATALOAD
0x505 AND
0x506 PUSH2 0x93e
0x509 JUMP
---
0x4f0: JUMPDEST 
0x4f1: V418 = 0x2c2
0x4f4: V419 = 0x1
0x4f6: V420 = 0xa0
0x4f8: V421 = 0x2
0x4fa: V422 = EXP 0x2 0xa0
0x4fb: V423 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fc: V424 = 0x4
0x4fe: V425 = CALLDATALOAD 0x4
0x500: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x502: V427 = 0x24
0x504: V428 = CALLDATALOAD 0x24
0x505: V429 = AND V428 0xffffffffffffffffffffffffffffffffffffffff
0x506: V430 = 0x93e
0x509: JUMP 0x93e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2c2, V426, V429]
Exit stack: [V10, 0x2c2, V426, V429]

================================

Block 0x50a
[0x50a:0x51b]
---
Predecessors: []
Successors: []
---
0x50a JUMPDEST
0x50b PUSH1 0x40
0x50d DUP1
0x50e MLOAD
0x50f SWAP2
0x510 DUP3
0x511 MSTORE
0x512 MLOAD
0x513 SWAP1
0x514 DUP2
0x515 SWAP1
0x516 SUB
0x517 PUSH1 0x20
0x519 ADD
0x51a SWAP1
0x51b RETURN
---
0x50a: JUMPDEST 
0x50b: V431 = 0x40
0x50e: V432 = M[0x40]
0x511: M[V432] = S0
0x512: V433 = M[0x40]
0x516: V434 = SUB V432 V433
0x517: V435 = 0x20
0x519: V436 = ADD 0x20 V434
0x51b: RETURN V433 V436
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x51c
[0x51c:0x523]
---
Predecessors: [0x1f7]
Successors: [0x96b]
---
0x51c JUMPDEST
0x51d PUSH2 0x524
0x520 PUSH2 0x96b
0x523 JUMP
---
0x51c: JUMPDEST 
0x51d: V437 = 0x524
0x520: V438 = 0x96b
0x523: JUMP 0x96b
---
Entry stack: [V10, 0x1ff]
Stack pops: 0
Stack additions: [0x524]
Exit stack: [V10, 0x1ff, 0x524]

================================

Block 0x524
[0x524:0x559]
---
Predecessors: [0x96b]
Successors: [0x55a]
---
0x524 JUMPDEST
0x525 POP
0x526 PUSH1 0x40
0x528 DUP1
0x529 MLOAD
0x52a DUP1
0x52b DUP3
0x52c ADD
0x52d SWAP1
0x52e SWAP2
0x52f MSTORE
0x530 PUSH1 0xb
0x532 DUP2
0x533 MSTORE
0x534 PUSH32 0x436f6c6c656765436f696e000000000000000000000000000000000000000000
0x555 PUSH1 0x20
0x557 DUP3
0x558 ADD
0x559 MSTORE
---
0x524: JUMPDEST 
0x526: V439 = 0x40
0x529: V440 = M[0x40]
0x52c: V441 = ADD 0x40 V440
0x52f: M[0x40] = V441
0x530: V442 = 0xb
0x533: M[V440] = 0xb
0x534: V443 = 0x436f6c6c656765436f696e000000000000000000000000000000000000000000
0x555: V444 = 0x20
0x558: V445 = ADD V440 0x20
0x559: M[V445] = 0x436f6c6c656765436f696e000000000000000000000000000000000000000000
---
Entry stack: [V10, 0x1ff, V739]
Stack pops: 1
Stack additions: [V440]
Exit stack: [V10, 0x1ff, V440]

================================

Block 0x55a
[0x55a:0x55c]
---
Predecessors: [0x524]
Successors: [0x1ff]
---
0x55a JUMPDEST
0x55b SWAP1
0x55c JUMP
---
0x55a: JUMPDEST 
0x55c: JUMP 0x1ff
---
Entry stack: [V10, 0x1ff, V440]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V440]

================================

Block 0x55d
[0x55d:0x568]
---
Predecessors: [0x287]
Successors: [0x569, 0x592]
---
0x55d JUMPDEST
0x55e PUSH1 0x0
0x560 DUP2
0x561 ISZERO
0x562 DUP1
0x563 ISZERO
0x564 SWAP1
0x565 PUSH2 0x592
0x568 JUMPI
---
0x55d: JUMPDEST 
0x55e: V446 = 0x0
0x561: V447 = ISZERO V203
0x563: V448 = ISZERO V447
0x565: V449 = 0x592
0x568: JUMPI 0x592 V447
---
Entry stack: [V10, 0x29e, V201, V203]
Stack pops: 1
Stack additions: [S0, 0x0, V448]
Exit stack: [V10, 0x29e, V201, V203, 0x0, V448]

================================

Block 0x569
[0x569:0x591]
---
Predecessors: [0x55d]
Successors: [0x592]
---
0x569 POP
0x56a PUSH1 0x1
0x56c PUSH1 0xa0
0x56e PUSH1 0x2
0x570 EXP
0x571 SUB
0x572 CALLER
0x573 DUP2
0x574 AND
0x575 PUSH1 0x0
0x577 SWAP1
0x578 DUP2
0x579 MSTORE
0x57a PUSH1 0x2
0x57c PUSH1 0x20
0x57e SWAP1
0x57f DUP2
0x580 MSTORE
0x581 PUSH1 0x40
0x583 DUP1
0x584 DUP4
0x585 SHA3
0x586 SWAP4
0x587 DUP8
0x588 AND
0x589 DUP4
0x58a MSTORE
0x58b SWAP3
0x58c SWAP1
0x58d MSTORE
0x58e SHA3
0x58f SLOAD
0x590 ISZERO
0x591 ISZERO
---
0x56a: V450 = 0x1
0x56c: V451 = 0xa0
0x56e: V452 = 0x2
0x570: V453 = EXP 0x2 0xa0
0x571: V454 = SUB 0x10000000000000000000000000000000000000000 0x1
0x572: V455 = CALLER
0x574: V456 = AND 0xffffffffffffffffffffffffffffffffffffffff V455
0x575: V457 = 0x0
0x579: M[0x0] = V456
0x57a: V458 = 0x2
0x57c: V459 = 0x20
0x580: M[0x20] = 0x2
0x581: V460 = 0x40
0x585: V461 = SHA3 0x0 0x40
0x588: V462 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x58a: M[0x0] = V462
0x58d: M[0x20] = V461
0x58e: V463 = SHA3 0x0 0x40
0x58f: V464 = S[V463]
0x590: V465 = ISZERO V464
0x591: V466 = ISZERO V465
---
Entry stack: [V10, 0x29e, V201, V203, 0x0, V448]
Stack pops: 4
Stack additions: [S3, S2, S1, V466]
Exit stack: [V10, 0x29e, V201, V203, 0x0, V466]

================================

Block 0x592
[0x592:0x597]
---
Predecessors: [0x55d, 0x569]
Successors: [0x598, 0x59f]
---
0x592 JUMPDEST
0x593 ISZERO
0x594 PUSH2 0x59f
0x597 JUMPI
---
0x592: JUMPDEST 
0x593: V467 = ISZERO S0
0x594: V468 = 0x59f
0x597: JUMPI 0x59f V467
---
Entry stack: [V10, 0x29e, V201, V203, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x29e, V201, V203, 0x0]

================================

Block 0x598
[0x598:0x59e]
---
Predecessors: [0x592]
Successors: [0x600]
---
0x598 POP
0x599 PUSH1 0x0
0x59b PUSH2 0x600
0x59e JUMP
---
0x599: V469 = 0x0
0x59b: V470 = 0x600
0x59e: JUMP 0x600
---
Entry stack: [V10, 0x29e, V201, V203, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x29e, V201, V203, 0x0]

================================

Block 0x59f
[0x59f:0x5ff]
---
Predecessors: [0x592]
Successors: [0x600]
---
0x59f JUMPDEST
0x5a0 PUSH1 0x1
0x5a2 PUSH1 0xa0
0x5a4 PUSH1 0x2
0x5a6 EXP
0x5a7 SUB
0x5a8 CALLER
0x5a9 DUP2
0x5aa AND
0x5ab PUSH1 0x0
0x5ad DUP2
0x5ae DUP2
0x5af MSTORE
0x5b0 PUSH1 0x2
0x5b2 PUSH1 0x20
0x5b4 SWAP1
0x5b5 DUP2
0x5b6 MSTORE
0x5b7 PUSH1 0x40
0x5b9 DUP1
0x5ba DUP4
0x5bb SHA3
0x5bc SWAP5
0x5bd DUP9
0x5be AND
0x5bf DUP1
0x5c0 DUP5
0x5c1 MSTORE
0x5c2 SWAP5
0x5c3 DUP3
0x5c4 MSTORE
0x5c5 SWAP2
0x5c6 DUP3
0x5c7 SWAP1
0x5c8 SHA3
0x5c9 DUP7
0x5ca SWAP1
0x5cb SSTORE
0x5cc DUP2
0x5cd MLOAD
0x5ce DUP7
0x5cf DUP2
0x5d0 MSTORE
0x5d1 SWAP2
0x5d2 MLOAD
0x5d3 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5f4 SWAP3
0x5f5 DUP2
0x5f6 SWAP1
0x5f7 SUB
0x5f8 SWAP1
0x5f9 SWAP2
0x5fa ADD
0x5fb SWAP1
0x5fc LOG3
0x5fd POP
0x5fe PUSH1 0x1
---
0x59f: JUMPDEST 
0x5a0: V471 = 0x1
0x5a2: V472 = 0xa0
0x5a4: V473 = 0x2
0x5a6: V474 = EXP 0x2 0xa0
0x5a7: V475 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a8: V476 = CALLER
0x5aa: V477 = AND 0xffffffffffffffffffffffffffffffffffffffff V476
0x5ab: V478 = 0x0
0x5af: M[0x0] = V477
0x5b0: V479 = 0x2
0x5b2: V480 = 0x20
0x5b6: M[0x20] = 0x2
0x5b7: V481 = 0x40
0x5bb: V482 = SHA3 0x0 0x40
0x5be: V483 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x5c1: M[0x0] = V483
0x5c4: M[0x20] = V482
0x5c8: V484 = SHA3 0x0 0x40
0x5cb: S[V484] = V203
0x5cd: V485 = M[0x40]
0x5d0: M[V485] = V203
0x5d2: V486 = M[0x40]
0x5d3: V487 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5f7: V488 = SUB V485 V486
0x5fa: V489 = ADD 0x20 V488
0x5fc: LOG V486 V489 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V477 V483
0x5fe: V490 = 0x1
---
Entry stack: [V10, 0x29e, V201, V203, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x29e, V201, V203, 0x1]

================================

Block 0x600
[0x600:0x605]
---
Predecessors: [0x598, 0x59f]
Successors: [0x29e]
---
0x600 JUMPDEST
0x601 SWAP3
0x602 SWAP2
0x603 POP
0x604 POP
0x605 JUMP
---
0x600: JUMPDEST 
0x605: JUMP 0x29e
---
Entry stack: [V10, 0x29e, V201, V203, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x606
[0x606:0x60b]
---
Predecessors: [0x2ba]
Successors: [0x2c2]
---
0x606 JUMPDEST
0x607 PUSH1 0x3
0x609 SLOAD
0x60a DUP2
0x60b JUMP
---
0x606: JUMPDEST 
0x607: V491 = 0x3
0x609: V492 = S[0x3]
0x60b: JUMP 0x2c2
---
Entry stack: [V10, 0x2c2]
Stack pops: 1
Stack additions: [S0, V492]
Exit stack: [V10, 0x2c2, V492]

================================

Block 0x60c
[0x60c:0x611]
---
Predecessors: [0x2dc]
Successors: [0x2c2]
---
0x60c JUMPDEST
0x60d PUSH1 0x5
0x60f SLOAD
0x610 DUP2
0x611 JUMP
---
0x60c: JUMPDEST 
0x60d: V493 = 0x5
0x60f: V494 = S[0x5]
0x611: JUMP 0x2c2
---
Entry stack: [V10, 0x2c2]
Stack pops: 1
Stack additions: [S0, V494]
Exit stack: [V10, 0x2c2, V494]

================================

Block 0x612
[0x612:0x622]
---
Predecessors: [0x2fe]
Successors: [0x623, 0x628]
---
0x612 JUMPDEST
0x613 PUSH1 0x0
0x615 DUP1
0x616 DUP1
0x617 DUP1
0x618 DUP1
0x619 DUP1
0x61a PUSH1 0x64
0x61c CALLDATASIZE
0x61d LT
0x61e ISZERO
0x61f PUSH2 0x628
0x622 JUMPI
---
0x612: JUMPDEST 
0x613: V495 = 0x0
0x61a: V496 = 0x64
0x61c: V497 = CALLDATASIZE
0x61d: V498 = LT V497 0x64
0x61e: V499 = ISZERO V498
0x61f: V500 = 0x628
0x622: JUMPI 0x628 V499
---
Entry stack: [V10, 0x29e, V246, V249, V251]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x29e, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x623
[0x623:0x627]
---
Predecessors: [0x612]
Successors: []
---
0x623 PUSH1 0x0
0x625 PUSH1 0x0
0x627 REVERT
---
0x623: V501 = 0x0
0x625: V502 = 0x0
0x627: REVERT 0x0 0x0
---
Entry stack: [V10, 0x29e, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x29e, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x628
[0x628:0x62f]
---
Predecessors: [0x612]
Successors: [0x630, 0x638]
---
0x628 JUMPDEST
0x629 DUP7
0x62a ISZERO
0x62b ISZERO
0x62c PUSH2 0x638
0x62f JUMPI
---
0x628: JUMPDEST 
0x62a: V503 = ISZERO V251
0x62b: V504 = ISZERO V503
0x62c: V505 = 0x638
0x62f: JUMPI 0x638 V504
---
Entry stack: [V10, 0x29e, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x29e, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x630
[0x630:0x637]
---
Predecessors: [0x628]
Successors: [0x735]
---
0x630 PUSH1 0x0
0x632 SWAP6
0x633 POP
0x634 PUSH2 0x735
0x637 JUMP
---
0x630: V506 = 0x0
0x634: V507 = 0x735
0x637: JUMP 0x735
---
Entry stack: [V10, 0x29e, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x29e, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x638
[0x638:0x694]
---
Predecessors: [0x628]
Successors: [0x695, 0x697]
---
0x638 JUMPDEST
0x639 POP
0x63a POP
0x63b POP
0x63c POP
0x63d PUSH1 0x1
0x63f PUSH1 0xa0
0x641 PUSH1 0x2
0x643 EXP
0x644 SUB
0x645 DUP6
0x646 DUP2
0x647 AND
0x648 PUSH1 0x0
0x64a SWAP1
0x64b DUP2
0x64c MSTORE
0x64d PUSH1 0x1
0x64f PUSH1 0x20
0x651 DUP2
0x652 DUP2
0x653 MSTORE
0x654 PUSH1 0x40
0x656 DUP1
0x657 DUP5
0x658 SHA3
0x659 SLOAD
0x65a PUSH1 0x2
0x65c DUP4
0x65d MSTORE
0x65e DUP2
0x65f DUP6
0x660 SHA3
0x661 CALLER
0x662 DUP8
0x663 AND
0x664 DUP7
0x665 MSTORE
0x666 DUP4
0x667 MSTORE
0x668 DUP2
0x669 DUP6
0x66a SHA3
0x66b SLOAD
0x66c SWAP6
0x66d DUP11
0x66e AND
0x66f DUP6
0x670 MSTORE
0x671 SWAP3
0x672 SWAP1
0x673 SWAP2
0x674 MSTORE
0x675 SWAP1
0x676 SWAP2
0x677 SHA3
0x678 SLOAD
0x679 SWAP1
0x67a SWAP3
0x67b POP
0x67c DUP5
0x67d DUP4
0x67e GT
0x67f DUP1
0x680 ISZERO
0x681 SWAP2
0x682 DUP7
0x683 DUP5
0x684 GT
0x685 ISZERO
0x686 SWAP2
0x687 DUP8
0x688 DUP3
0x689 ADD
0x68a SWAP2
0x68b SWAP1
0x68c SWAP2
0x68d GT
0x68e SWAP1
0x68f DUP4
0x690 SWAP1
0x691 PUSH2 0x697
0x694 JUMPI
---
0x638: JUMPDEST 
0x63d: V508 = 0x1
0x63f: V509 = 0xa0
0x641: V510 = 0x2
0x643: V511 = EXP 0x2 0xa0
0x644: V512 = SUB 0x10000000000000000000000000000000000000000 0x1
0x647: V513 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x648: V514 = 0x0
0x64c: M[0x0] = V513
0x64d: V515 = 0x1
0x64f: V516 = 0x20
0x653: M[0x20] = 0x1
0x654: V517 = 0x40
0x658: V518 = SHA3 0x0 0x40
0x659: V519 = S[V518]
0x65a: V520 = 0x2
0x65d: M[0x20] = 0x2
0x660: V521 = SHA3 0x0 0x40
0x661: V522 = CALLER
0x663: V523 = AND 0xffffffffffffffffffffffffffffffffffffffff V522
0x665: M[0x0] = V523
0x667: M[0x20] = V521
0x66a: V524 = SHA3 0x0 0x40
0x66b: V525 = S[V524]
0x66e: V526 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0x670: M[0x0] = V526
0x674: M[0x20] = 0x1
0x677: V527 = SHA3 0x0 0x40
0x678: V528 = S[V527]
0x67e: V529 = GT V519 V251
0x680: V530 = ISZERO V529
0x684: V531 = GT V525 V251
0x685: V532 = ISZERO V531
0x689: V533 = ADD V528 V251
0x68d: V534 = GT V533 V528
0x691: V535 = 0x697
0x694: JUMPI 0x697 V529
---
Entry stack: [V10, 0x29e, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V519, V525, V530, V532, V534, V530]
Exit stack: [V10, 0x29e, V246, V249, V251, 0x0, V519, V525, V530, V532, V534, V530]

================================

Block 0x695
[0x695:0x696]
---
Predecessors: [0x638]
Successors: [0x697]
---
0x695 POP
0x696 DUP2
---
0x695: NOP 
---
Entry stack: [V10, 0x29e, V246, V249, V251, 0x0, V519, V525, V530, V532, V534, V530]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V10, 0x29e, V246, V249, V251, 0x0, V519, V525, V530, V532, V534, V532]

================================

Block 0x697
[0x697:0x69d]
---
Predecessors: [0x638, 0x695]
Successors: [0x69e, 0x6a1]
---
0x697 JUMPDEST
0x698 DUP1
0x699 ISZERO
0x69a PUSH2 0x6a1
0x69d JUMPI
---
0x697: JUMPDEST 
0x699: V536 = ISZERO S0
0x69a: V537 = 0x6a1
0x69d: JUMPI 0x6a1 V536
---
Entry stack: [V10, 0x29e, V246, V249, V251, 0x0, V519, V525, V530, V532, V534, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x29e, V246, V249, V251, 0x0, V519, V525, V530, V532, V534, S0]

================================

Block 0x69e
[0x69e:0x6a0]
---
Predecessors: [0x697]
Successors: [0x6a1]
---
0x69e POP
0x69f DUP1
0x6a0 ISZERO
---
0x6a0: V538 = ISZERO V534
---
Entry stack: [V10, 0x29e, V246, V249, V251, 0x0, V519, V525, V530, V532, V534, S0]
Stack pops: 2
Stack additions: [S1, V538]
Exit stack: [V10, 0x29e, V246, V249, V251, 0x0, V519, V525, V530, V532, V534, V538]

================================

Block 0x6a1
[0x6a1:0x6a6]
---
Predecessors: [0x697, 0x69e]
Successors: [0x6a7, 0x730]
---
0x6a1 JUMPDEST
0x6a2 ISZERO
0x6a3 PUSH2 0x730
0x6a6 JUMPI
---
0x6a1: JUMPDEST 
0x6a2: V539 = ISZERO S0
0x6a3: V540 = 0x730
0x6a6: JUMPI 0x730 V539
---
Entry stack: [V10, 0x29e, V246, V249, V251, 0x0, V519, V525, V530, V532, V534, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x29e, V246, V249, V251, 0x0, V519, V525, V530, V532, V534]

================================

Block 0x6a7
[0x6a7:0x72f]
---
Predecessors: [0x6a1]
Successors: [0x735]
---
0x6a7 PUSH1 0x1
0x6a9 PUSH1 0xa0
0x6ab PUSH1 0x2
0x6ad EXP
0x6ae SUB
0x6af DUP1
0x6b0 DUP10
0x6b1 AND
0x6b2 PUSH1 0x0
0x6b4 DUP2
0x6b5 DUP2
0x6b6 MSTORE
0x6b7 PUSH1 0x1
0x6b9 PUSH1 0x20
0x6bb SWAP1
0x6bc DUP2
0x6bd MSTORE
0x6be PUSH1 0x40
0x6c0 DUP1
0x6c1 DUP4
0x6c2 SHA3
0x6c3 DUP1
0x6c4 SLOAD
0x6c5 DUP14
0x6c6 ADD
0x6c7 SWAP1
0x6c8 SSTORE
0x6c9 DUP14
0x6ca DUP6
0x6cb AND
0x6cc DUP1
0x6cd DUP5
0x6ce MSTORE
0x6cf DUP2
0x6d0 DUP5
0x6d1 SHA3
0x6d2 DUP1
0x6d3 SLOAD
0x6d4 DUP15
0x6d5 SWAP1
0x6d6 SUB
0x6d7 SWAP1
0x6d8 SSTORE
0x6d9 PUSH1 0x2
0x6db DUP4
0x6dc MSTORE
0x6dd DUP2
0x6de DUP5
0x6df SHA3
0x6e0 CALLER
0x6e1 SWAP1
0x6e2 SWAP7
0x6e3 AND
0x6e4 DUP5
0x6e5 MSTORE
0x6e6 SWAP5
0x6e7 DUP3
0x6e8 MSTORE
0x6e9 SWAP2
0x6ea DUP3
0x6eb SWAP1
0x6ec SHA3
0x6ed DUP1
0x6ee SLOAD
0x6ef DUP13
0x6f0 SWAP1
0x6f1 SUB
0x6f2 SWAP1
0x6f3 SSTORE
0x6f4 DUP2
0x6f5 MLOAD
0x6f6 DUP12
0x6f7 DUP2
0x6f8 MSTORE
0x6f9 SWAP2
0x6fa MLOAD
0x6fb SWAP3
0x6fc SWAP4
0x6fd SWAP3
0x6fe PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x71f SWAP3
0x720 DUP2
0x721 SWAP1
0x722 SUB
0x723 SWAP1
0x724 SWAP2
0x725 ADD
0x726 SWAP1
0x727 LOG3
0x728 PUSH1 0x1
0x72a SWAP6
0x72b POP
0x72c PUSH2 0x735
0x72f JUMP
---
0x6a7: V541 = 0x1
0x6a9: V542 = 0xa0
0x6ab: V543 = 0x2
0x6ad: V544 = EXP 0x2 0xa0
0x6ae: V545 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6b1: V546 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0x6b2: V547 = 0x0
0x6b6: M[0x0] = V546
0x6b7: V548 = 0x1
0x6b9: V549 = 0x20
0x6bd: M[0x20] = 0x1
0x6be: V550 = 0x40
0x6c2: V551 = SHA3 0x0 0x40
0x6c4: V552 = S[V551]
0x6c6: V553 = ADD V251 V552
0x6c8: S[V551] = V553
0x6cb: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x6ce: M[0x0] = V554
0x6d1: V555 = SHA3 0x0 0x40
0x6d3: V556 = S[V555]
0x6d6: V557 = SUB V556 V251
0x6d8: S[V555] = V557
0x6d9: V558 = 0x2
0x6dc: M[0x20] = 0x2
0x6df: V559 = SHA3 0x0 0x40
0x6e0: V560 = CALLER
0x6e3: V561 = AND 0xffffffffffffffffffffffffffffffffffffffff V560
0x6e5: M[0x0] = V561
0x6e8: M[0x20] = V559
0x6ec: V562 = SHA3 0x0 0x40
0x6ee: V563 = S[V562]
0x6f1: V564 = SUB V563 V251
0x6f3: S[V562] = V564
0x6f5: V565 = M[0x40]
0x6f8: M[V565] = V251
0x6fa: V566 = M[0x40]
0x6fe: V567 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x722: V568 = SUB V565 V566
0x725: V569 = ADD 0x20 V568
0x727: LOG V566 V569 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V554 V546
0x728: V570 = 0x1
0x72c: V571 = 0x735
0x72f: JUMP 0x735
---
Entry stack: [V10, 0x29e, V246, V249, V251, 0x0, V519, V525, V530, V532, V534]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x29e, V246, V249, V251, 0x1, V519, V525, V530, V532, V534]

================================

Block 0x730
[0x730:0x734]
---
Predecessors: [0x6a1]
Successors: [0x735]
---
0x730 JUMPDEST
0x731 PUSH1 0x0
0x733 SWAP6
0x734 POP
---
0x730: JUMPDEST 
0x731: V572 = 0x0
---
Entry stack: [V10, 0x29e, V246, V249, V251, 0x0, V519, V525, V530, V532, V534]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x29e, V246, V249, V251, 0x0, V519, V525, V530, V532, V534]

================================

Block 0x735
[0x735:0x735]
---
Predecessors: [0x630, 0x6a7, 0x730]
Successors: [0x736]
---
0x735 JUMPDEST
---
0x735: JUMPDEST 
---
Entry stack: [V10, 0x29e, V246, V249, V251, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x29e, V246, V249, V251, {0x0, 0x1}, S4, S3, S2, S1, S0]

================================

Block 0x736
[0x736:0x741]
---
Predecessors: [0x735]
Successors: [0x29e]
---
0x736 JUMPDEST
0x737 POP
0x738 POP
0x739 POP
0x73a POP
0x73b POP
0x73c SWAP4
0x73d SWAP3
0x73e POP
0x73f POP
0x740 POP
0x741 JUMP
---
0x736: JUMPDEST 
0x741: JUMP 0x29e
---
Entry stack: [V10, 0x29e, V246, V249, V251, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S5]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x742
[0x742:0x744]
---
Predecessors: [0x337]
Successors: [0x745]
---
0x742 JUMPDEST
0x743 PUSH1 0x12
---
0x742: JUMPDEST 
0x743: V573 = 0x12
---
Entry stack: [V10, 0x33f]
Stack pops: 0
Stack additions: [0x12]
Exit stack: [V10, 0x33f, 0x12]

================================

Block 0x745
[0x745:0x747]
---
Predecessors: [0x742]
Successors: [0x33f]
---
0x745 JUMPDEST
0x746 SWAP1
0x747 JUMP
---
0x745: JUMPDEST 
0x747: JUMP 0x33f
---
Entry stack: [V10, 0x33f, 0x12]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x12]

================================

Block 0x748
[0x748:0x75e]
---
Predecessors: [0x35d]
Successors: [0x75f, 0x764]
---
0x748 JUMPDEST
0x749 PUSH1 0x0
0x74b SLOAD
0x74c CALLER
0x74d PUSH1 0x1
0x74f PUSH1 0xa0
0x751 PUSH1 0x2
0x753 EXP
0x754 SUB
0x755 SWAP1
0x756 DUP2
0x757 AND
0x758 SWAP2
0x759 AND
0x75a EQ
0x75b PUSH2 0x764
0x75e JUMPI
---
0x748: JUMPDEST 
0x749: V574 = 0x0
0x74b: V575 = S[0x0]
0x74c: V576 = CALLER
0x74d: V577 = 0x1
0x74f: V578 = 0xa0
0x751: V579 = 0x2
0x753: V580 = EXP 0x2 0xa0
0x754: V581 = SUB 0x10000000000000000000000000000000000000000 0x1
0x757: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V576
0x759: V583 = AND V575 0xffffffffffffffffffffffffffffffffffffffff
0x75a: V584 = EQ V583 V582
0x75b: V585 = 0x764
0x75e: JUMPI 0x764 V584
---
Entry stack: [V10, 0x1ed]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ed]

================================

Block 0x75f
[0x75f:0x763]
---
Predecessors: [0x748]
Successors: []
---
0x75f PUSH1 0x0
0x761 PUSH1 0x0
0x763 REVERT
---
0x75f: V586 = 0x0
0x761: V587 = 0x0
0x763: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1ed]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ed]

================================

Block 0x764
[0x764:0x782]
---
Predecessors: [0x748]
Successors: [0x783]
---
0x764 JUMPDEST
0x765 PUSH1 0x0
0x767 DUP1
0x768 SLOAD
0x769 PUSH21 0xff0000000000000000000000000000000000000000
0x77f NOT
0x780 AND
0x781 SWAP1
0x782 SSTORE
---
0x764: JUMPDEST 
0x765: V588 = 0x0
0x768: V589 = S[0x0]
0x769: V590 = 0xff0000000000000000000000000000000000000000
0x77f: V591 = NOT 0xff0000000000000000000000000000000000000000
0x780: V592 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V589
0x782: S[0x0] = V592
---
Entry stack: [V10, 0x1ed]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ed]

================================

Block 0x783
[0x783:0x784]
---
Predecessors: [0x764]
Successors: [0x1ed]
---
0x783 JUMPDEST
0x784 JUMP
---
0x783: JUMPDEST 
0x784: JUMP 0x1ed
---
Entry stack: [V10, 0x1ed]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x785
[0x785:0x79e]
---
Predecessors: [0x36f]
Successors: [0x79f]
---
0x785 JUMPDEST
0x786 PUSH1 0x1
0x788 PUSH1 0xa0
0x78a PUSH1 0x2
0x78c EXP
0x78d SUB
0x78e DUP2
0x78f AND
0x790 PUSH1 0x0
0x792 SWAP1
0x793 DUP2
0x794 MSTORE
0x795 PUSH1 0x1
0x797 PUSH1 0x20
0x799 MSTORE
0x79a PUSH1 0x40
0x79c SWAP1
0x79d SHA3
0x79e SLOAD
---
0x785: JUMPDEST 
0x786: V593 = 0x1
0x788: V594 = 0xa0
0x78a: V595 = 0x2
0x78c: V596 = EXP 0x2 0xa0
0x78d: V597 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78f: V598 = AND V290 0xffffffffffffffffffffffffffffffffffffffff
0x790: V599 = 0x0
0x794: M[0x0] = V598
0x795: V600 = 0x1
0x797: V601 = 0x20
0x799: M[0x20] = 0x1
0x79a: V602 = 0x40
0x79d: V603 = SHA3 0x0 0x40
0x79e: V604 = S[V603]
---
Entry stack: [V10, 0x2c2, V290]
Stack pops: 1
Stack additions: [S0, V604]
Exit stack: [V10, 0x2c2, V290, V604]

================================

Block 0x79f
[0x79f:0x7a3]
---
Predecessors: [0x785]
Successors: [0x2c2]
---
0x79f JUMPDEST
0x7a0 SWAP2
0x7a1 SWAP1
0x7a2 POP
0x7a3 JUMP
---
0x79f: JUMPDEST 
0x7a3: JUMP 0x2c2
---
Entry stack: [V10, 0x2c2, V290, V604]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V604]

================================

Block 0x7a4
[0x7a4:0x7ba]
---
Predecessors: [0x39d]
Successors: [0x7bb, 0x7c0]
---
0x7a4 JUMPDEST
0x7a5 PUSH1 0x0
0x7a7 SLOAD
0x7a8 CALLER
0x7a9 PUSH1 0x1
0x7ab PUSH1 0xa0
0x7ad PUSH1 0x2
0x7af EXP
0x7b0 SUB
0x7b1 SWAP1
0x7b2 DUP2
0x7b3 AND
0x7b4 SWAP2
0x7b5 AND
0x7b6 EQ
0x7b7 PUSH2 0x7c0
0x7ba JUMPI
---
0x7a4: JUMPDEST 
0x7a5: V605 = 0x0
0x7a7: V606 = S[0x0]
0x7a8: V607 = CALLER
0x7a9: V608 = 0x1
0x7ab: V609 = 0xa0
0x7ad: V610 = 0x2
0x7af: V611 = EXP 0x2 0xa0
0x7b0: V612 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b3: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V607
0x7b5: V614 = AND V606 0xffffffffffffffffffffffffffffffffffffffff
0x7b6: V615 = EQ V614 V613
0x7b7: V616 = 0x7c0
0x7ba: JUMPI 0x7c0 V615
---
Entry stack: [V10, 0x1ed]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ed]

================================

Block 0x7bb
[0x7bb:0x7bf]
---
Predecessors: [0x7a4]
Successors: []
---
0x7bb PUSH1 0x0
0x7bd PUSH1 0x0
0x7bf REVERT
---
0x7bb: V617 = 0x0
0x7bd: V618 = 0x0
0x7bf: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1ed]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ed]

================================

Block 0x7c0
[0x7c0:0x7e4]
---
Predecessors: [0x7a4]
Successors: [0x7e5]
---
0x7c0 JUMPDEST
0x7c1 PUSH1 0x0
0x7c3 DUP1
0x7c4 SLOAD
0x7c5 PUSH21 0xff0000000000000000000000000000000000000000
0x7db NOT
0x7dc AND
0x7dd PUSH1 0xa0
0x7df PUSH1 0x2
0x7e1 EXP
0x7e2 OR
0x7e3 SWAP1
0x7e4 SSTORE
---
0x7c0: JUMPDEST 
0x7c1: V619 = 0x0
0x7c4: V620 = S[0x0]
0x7c5: V621 = 0xff0000000000000000000000000000000000000000
0x7db: V622 = NOT 0xff0000000000000000000000000000000000000000
0x7dc: V623 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V620
0x7dd: V624 = 0xa0
0x7df: V625 = 0x2
0x7e1: V626 = EXP 0x2 0xa0
0x7e2: V627 = OR 0x10000000000000000000000000000000000000000 V623
0x7e4: S[0x0] = V627
---
Entry stack: [V10, 0x1ed]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1ed]

================================

Block 0x7e5
[0x7e5:0x7e6]
---
Predecessors: [0x7c0]
Successors: [0x1ed]
---
0x7e5 JUMPDEST
0x7e6 JUMP
---
0x7e5: JUMPDEST 
0x7e6: JUMP 0x1ed
---
Entry stack: [V10, 0x1ed]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x7e7
[0x7e7:0x7ee]
---
Predecessors: [0x3af]
Successors: [0x96b]
---
0x7e7 JUMPDEST
0x7e8 PUSH2 0x7ef
0x7eb PUSH2 0x96b
0x7ee JUMP
---
0x7e7: JUMPDEST 
0x7e8: V628 = 0x7ef
0x7eb: V629 = 0x96b
0x7ee: JUMP 0x96b
---
Entry stack: [V10, 0x1ff]
Stack pops: 0
Stack additions: [0x7ef]
Exit stack: [V10, 0x1ff, 0x7ef]

================================

Block 0x7ef
[0x7ef:0x824]
---
Predecessors: [0x96b]
Successors: [0x825]
---
0x7ef JUMPDEST
0x7f0 POP
0x7f1 PUSH1 0x40
0x7f3 DUP1
0x7f4 MLOAD
0x7f5 DUP1
0x7f6 DUP3
0x7f7 ADD
0x7f8 SWAP1
0x7f9 SWAP2
0x7fa MSTORE
0x7fb PUSH1 0x3
0x7fd DUP2
0x7fe MSTORE
0x7ff PUSH32 0x434f430000000000000000000000000000000000000000000000000000000000
0x820 PUSH1 0x20
0x822 DUP3
0x823 ADD
0x824 MSTORE
---
0x7ef: JUMPDEST 
0x7f1: V630 = 0x40
0x7f4: V631 = M[0x40]
0x7f7: V632 = ADD 0x40 V631
0x7fa: M[0x40] = V632
0x7fb: V633 = 0x3
0x7fe: M[V631] = 0x3
0x7ff: V634 = 0x434f430000000000000000000000000000000000000000000000000000000000
0x820: V635 = 0x20
0x823: V636 = ADD V631 0x20
0x824: M[V636] = 0x434f430000000000000000000000000000000000000000000000000000000000
---
Entry stack: [V10, 0x1ff, V739]
Stack pops: 1
Stack additions: [V631]
Exit stack: [V10, 0x1ff, V631]

================================

Block 0x825
[0x825:0x827]
---
Predecessors: [0x7ef]
Successors: [0x1ff]
---
0x825 JUMPDEST
0x826 SWAP1
0x827 JUMP
---
0x825: JUMPDEST 
0x827: JUMP 0x1ff
---
Entry stack: [V10, 0x1ff, V631]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V631]

================================

Block 0x828
[0x828:0x82d]
---
Predecessors: [0x43f]
Successors: [0x2c2]
---
0x828 JUMPDEST
0x829 PUSH1 0x4
0x82b SLOAD
0x82c DUP2
0x82d JUMP
---
0x828: JUMPDEST 
0x829: V637 = 0x4
0x82b: V638 = S[0x4]
0x82d: JUMP 0x2c2
---
Entry stack: [V10, 0x2c2]
Stack pops: 1
Stack additions: [S0, V638]
Exit stack: [V10, 0x2c2, V638]

================================

Block 0x82e
[0x82e:0x83c]
---
Predecessors: [0x461]
Successors: [0x83d, 0x842]
---
0x82e JUMPDEST
0x82f PUSH1 0x0
0x831 DUP1
0x832 DUP1
0x833 DUP1
0x834 PUSH1 0x44
0x836 CALLDATASIZE
0x837 LT
0x838 ISZERO
0x839 PUSH2 0x842
0x83c JUMPI
---
0x82e: JUMPDEST 
0x82f: V639 = 0x0
0x834: V640 = 0x44
0x836: V641 = CALLDATASIZE
0x837: V642 = LT V641 0x44
0x838: V643 = ISZERO V642
0x839: V644 = 0x842
0x83c: JUMPI 0x842 V643
---
Entry stack: [V10, 0x29e, V372, V374]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x29e, V372, V374, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x83d
[0x83d:0x841]
---
Predecessors: [0x82e]
Successors: []
---
0x83d PUSH1 0x0
0x83f PUSH1 0x0
0x841 REVERT
---
0x83d: V645 = 0x0
0x83f: V646 = 0x0
0x841: REVERT 0x0 0x0
---
Entry stack: [V10, 0x29e, V372, V374, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x29e, V372, V374, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x842
[0x842:0x849]
---
Predecessors: [0x82e]
Successors: [0x84a, 0x852]
---
0x842 JUMPDEST
0x843 DUP5
0x844 ISZERO
0x845 ISZERO
0x846 PUSH2 0x852
0x849 JUMPI
---
0x842: JUMPDEST 
0x844: V647 = ISZERO V374
0x845: V648 = ISZERO V647
0x846: V649 = 0x852
0x849: JUMPI 0x852 V648
---
Entry stack: [V10, 0x29e, V372, V374, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x29e, V372, V374, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x84a
[0x84a:0x851]
---
Predecessors: [0x842]
Successors: [0x907]
---
0x84a PUSH1 0x0
0x84c SWAP4
0x84d POP
0x84e PUSH2 0x907
0x851 JUMP
---
0x84a: V650 = 0x0
0x84e: V651 = 0x907
0x851: JUMP 0x907
---
Entry stack: [V10, 0x29e, V372, V374, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V10, 0x29e, V372, V374, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x852
[0x852:0x889]
---
Predecessors: [0x842]
Successors: [0x88a, 0x88d]
---
0x852 JUMPDEST
0x853 POP
0x854 POP
0x855 POP
0x856 PUSH1 0x1
0x858 PUSH1 0xa0
0x85a PUSH1 0x2
0x85c EXP
0x85d SUB
0x85e CALLER
0x85f DUP2
0x860 AND
0x861 PUSH1 0x0
0x863 SWAP1
0x864 DUP2
0x865 MSTORE
0x866 PUSH1 0x1
0x868 PUSH1 0x20
0x86a MSTORE
0x86b PUSH1 0x40
0x86d DUP1
0x86e DUP3
0x86f SHA3
0x870 SLOAD
0x871 SWAP3
0x872 DUP7
0x873 AND
0x874 DUP3
0x875 MSTORE
0x876 SWAP1
0x877 SHA3
0x878 SLOAD
0x879 DUP4
0x87a DUP3
0x87b LT
0x87c DUP1
0x87d ISZERO
0x87e SWAP2
0x87f DUP1
0x880 DUP7
0x881 ADD
0x882 LT
0x883 SWAP1
0x884 DUP3
0x885 SWAP1
0x886 PUSH2 0x88d
0x889 JUMPI
---
0x852: JUMPDEST 
0x856: V652 = 0x1
0x858: V653 = 0xa0
0x85a: V654 = 0x2
0x85c: V655 = EXP 0x2 0xa0
0x85d: V656 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85e: V657 = CALLER
0x860: V658 = AND 0xffffffffffffffffffffffffffffffffffffffff V657
0x861: V659 = 0x0
0x865: M[0x0] = V658
0x866: V660 = 0x1
0x868: V661 = 0x20
0x86a: M[0x20] = 0x1
0x86b: V662 = 0x40
0x86f: V663 = SHA3 0x0 0x40
0x870: V664 = S[V663]
0x873: V665 = AND V372 0xffffffffffffffffffffffffffffffffffffffff
0x875: M[0x0] = V665
0x877: V666 = SHA3 0x0 0x40
0x878: V667 = S[V666]
0x87b: V668 = LT V664 V374
0x87d: V669 = ISZERO V668
0x881: V670 = ADD V374 V667
0x882: V671 = LT V670 V667
0x886: V672 = 0x88d
0x889: JUMPI 0x88d V668
---
Entry stack: [V10, 0x29e, V372, V374, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V664, V669, V671, V669]
Exit stack: [V10, 0x29e, V372, V374, 0x0, V664, V669, V671, V669]

================================

Block 0x88a
[0x88a:0x88c]
---
Predecessors: [0x852]
Successors: [0x88d]
---
0x88a POP
0x88b DUP1
0x88c ISZERO
---
0x88c: V673 = ISZERO V671
---
Entry stack: [V10, 0x29e, V372, V374, 0x0, V664, V669, V671, V669]
Stack pops: 2
Stack additions: [S1, V673]
Exit stack: [V10, 0x29e, V372, V374, 0x0, V664, V669, V671, V673]

================================

Block 0x88d
[0x88d:0x892]
---
Predecessors: [0x852, 0x88a]
Successors: [0x893, 0x902]
---
0x88d JUMPDEST
0x88e ISZERO
0x88f PUSH2 0x902
0x892 JUMPI
---
0x88d: JUMPDEST 
0x88e: V674 = ISZERO S0
0x88f: V675 = 0x902
0x892: JUMPI 0x902 V674
---
Entry stack: [V10, 0x29e, V372, V374, 0x0, V664, V669, V671, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x29e, V372, V374, 0x0, V664, V669, V671]

================================

Block 0x893
[0x893:0x901]
---
Predecessors: [0x88d]
Successors: [0x907]
---
0x893 PUSH1 0x1
0x895 PUSH1 0xa0
0x897 PUSH1 0x2
0x899 EXP
0x89a SUB
0x89b CALLER
0x89c DUP2
0x89d AND
0x89e PUSH1 0x0
0x8a0 DUP2
0x8a1 DUP2
0x8a2 MSTORE
0x8a3 PUSH1 0x1
0x8a5 PUSH1 0x20
0x8a7 SWAP1
0x8a8 DUP2
0x8a9 MSTORE
0x8aa PUSH1 0x40
0x8ac DUP1
0x8ad DUP4
0x8ae SHA3
0x8af DUP1
0x8b0 SLOAD
0x8b1 DUP12
0x8b2 SWAP1
0x8b3 SUB
0x8b4 SWAP1
0x8b5 SSTORE
0x8b6 SWAP4
0x8b7 DUP11
0x8b8 AND
0x8b9 DUP1
0x8ba DUP4
0x8bb MSTORE
0x8bc SWAP2
0x8bd DUP5
0x8be SWAP1
0x8bf SHA3
0x8c0 DUP1
0x8c1 SLOAD
0x8c2 DUP11
0x8c3 ADD
0x8c4 SWAP1
0x8c5 SSTORE
0x8c6 DUP4
0x8c7 MLOAD
0x8c8 DUP10
0x8c9 DUP2
0x8ca MSTORE
0x8cb SWAP4
0x8cc MLOAD
0x8cd SWAP2
0x8ce SWAP4
0x8cf PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8f0 SWAP3
0x8f1 SWAP1
0x8f2 DUP2
0x8f3 SWAP1
0x8f4 SUB
0x8f5 SWAP1
0x8f6 SWAP2
0x8f7 ADD
0x8f8 SWAP1
0x8f9 LOG3
0x8fa PUSH1 0x1
0x8fc SWAP4
0x8fd POP
0x8fe PUSH2 0x907
0x901 JUMP
---
0x893: V676 = 0x1
0x895: V677 = 0xa0
0x897: V678 = 0x2
0x899: V679 = EXP 0x2 0xa0
0x89a: V680 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89b: V681 = CALLER
0x89d: V682 = AND 0xffffffffffffffffffffffffffffffffffffffff V681
0x89e: V683 = 0x0
0x8a2: M[0x0] = V682
0x8a3: V684 = 0x1
0x8a5: V685 = 0x20
0x8a9: M[0x20] = 0x1
0x8aa: V686 = 0x40
0x8ae: V687 = SHA3 0x0 0x40
0x8b0: V688 = S[V687]
0x8b3: V689 = SUB V688 V374
0x8b5: S[V687] = V689
0x8b8: V690 = AND V372 0xffffffffffffffffffffffffffffffffffffffff
0x8bb: M[0x0] = V690
0x8bf: V691 = SHA3 0x0 0x40
0x8c1: V692 = S[V691]
0x8c3: V693 = ADD V374 V692
0x8c5: S[V691] = V693
0x8c7: V694 = M[0x40]
0x8ca: M[V694] = V374
0x8cc: V695 = M[0x40]
0x8cf: V696 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x8f4: V697 = SUB V694 V695
0x8f7: V698 = ADD 0x20 V697
0x8f9: LOG V695 V698 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V682 V690
0x8fa: V699 = 0x1
0x8fe: V700 = 0x907
0x901: JUMP 0x907
---
Entry stack: [V10, 0x29e, V372, V374, 0x0, V664, V669, V671]
Stack pops: 6
Stack additions: [S5, S4, 0x1, S2, S1, S0]
Exit stack: [V10, 0x29e, V372, V374, 0x1, V664, V669, V671]

================================

Block 0x902
[0x902:0x906]
---
Predecessors: [0x88d]
Successors: [0x907]
---
0x902 JUMPDEST
0x903 PUSH1 0x0
0x905 SWAP4
0x906 POP
---
0x902: JUMPDEST 
0x903: V701 = 0x0
---
Entry stack: [V10, 0x29e, V372, V374, 0x0, V664, V669, V671]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V10, 0x29e, V372, V374, 0x0, V664, V669, V671]

================================

Block 0x907
[0x907:0x907]
---
Predecessors: [0x84a, 0x893, 0x902]
Successors: [0x908]
---
0x907 JUMPDEST
---
0x907: JUMPDEST 
---
Entry stack: [V10, 0x29e, V372, V374, {0x0, 0x1}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x29e, V372, V374, {0x0, 0x1}, S2, S1, S0]

================================

Block 0x908
[0x908:0x910]
---
Predecessors: [0x907]
Successors: [0x29e]
---
0x908 JUMPDEST
0x909 POP
0x90a POP
0x90b POP
0x90c SWAP3
0x90d SWAP2
0x90e POP
0x90f POP
0x910 JUMP
---
0x908: JUMPDEST 
0x910: JUMP 0x29e
---
Entry stack: [V10, 0x29e, V372, V374, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x911
[0x911:0x927]
---
Predecessors: [0x494]
Successors: [0x928]
---
0x911 JUMPDEST
0x912 PUSH1 0x3
0x914 SLOAD
0x915 PUSH1 0x5
0x917 SLOAD
0x918 PUSH1 0x4
0x91a SLOAD
0x91b PUSH1 0x0
0x91d SLOAD
0x91e PUSH1 0xa0
0x920 PUSH1 0x2
0x922 EXP
0x923 SWAP1
0x924 DIV
0x925 PUSH1 0xff
0x927 AND
---
0x911: JUMPDEST 
0x912: V702 = 0x3
0x914: V703 = S[0x3]
0x915: V704 = 0x5
0x917: V705 = S[0x5]
0x918: V706 = 0x4
0x91a: V707 = S[0x4]
0x91b: V708 = 0x0
0x91d: V709 = S[0x0]
0x91e: V710 = 0xa0
0x920: V711 = 0x2
0x922: V712 = EXP 0x2 0xa0
0x924: V713 = DIV V709 0x10000000000000000000000000000000000000000
0x925: V714 = 0xff
0x927: V715 = AND 0xff V713
---
Entry stack: [V10, 0x49c]
Stack pops: 0
Stack additions: [V703, V705, V707, V715]
Exit stack: [V10, 0x49c, V703, V705, V707, V715]

================================

Block 0x928
[0x928:0x92d]
---
Predecessors: [0x911]
Successors: [0x49c]
---
0x928 JUMPDEST
0x929 SWAP1
0x92a SWAP2
0x92b SWAP3
0x92c SWAP4
0x92d JUMP
---
0x928: JUMPDEST 
0x92d: JUMP 0x49c
---
Entry stack: [V10, 0x49c, V703, V705, V707, V715]
Stack pops: 5
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, V703, V705, V707, V715]

================================

Block 0x92e
[0x92e:0x93d]
---
Predecessors: [0x4cc]
Successors: [0x29e]
---
0x92e JUMPDEST
0x92f PUSH1 0x0
0x931 SLOAD
0x932 PUSH1 0xa0
0x934 PUSH1 0x2
0x936 EXP
0x937 SWAP1
0x938 DIV
0x939 PUSH1 0xff
0x93b AND
0x93c DUP2
0x93d JUMP
---
0x92e: JUMPDEST 
0x92f: V716 = 0x0
0x931: V717 = S[0x0]
0x932: V718 = 0xa0
0x934: V719 = 0x2
0x936: V720 = EXP 0x2 0xa0
0x938: V721 = DIV V717 0x10000000000000000000000000000000000000000
0x939: V722 = 0xff
0x93b: V723 = AND 0xff V721
0x93d: JUMP 0x29e
---
Entry stack: [V10, 0x29e]
Stack pops: 1
Stack additions: [S0, V723]
Exit stack: [V10, 0x29e, V723]

================================

Block 0x93e
[0x93e:0x964]
---
Predecessors: [0x4f0]
Successors: [0x965]
---
0x93e JUMPDEST
0x93f PUSH1 0x1
0x941 PUSH1 0xa0
0x943 PUSH1 0x2
0x945 EXP
0x946 SUB
0x947 DUP1
0x948 DUP4
0x949 AND
0x94a PUSH1 0x0
0x94c SWAP1
0x94d DUP2
0x94e MSTORE
0x94f PUSH1 0x2
0x951 PUSH1 0x20
0x953 SWAP1
0x954 DUP2
0x955 MSTORE
0x956 PUSH1 0x40
0x958 DUP1
0x959 DUP4
0x95a SHA3
0x95b SWAP4
0x95c DUP6
0x95d AND
0x95e DUP4
0x95f MSTORE
0x960 SWAP3
0x961 SWAP1
0x962 MSTORE
0x963 SHA3
0x964 SLOAD
---
0x93e: JUMPDEST 
0x93f: V724 = 0x1
0x941: V725 = 0xa0
0x943: V726 = 0x2
0x945: V727 = EXP 0x2 0xa0
0x946: V728 = SUB 0x10000000000000000000000000000000000000000 0x1
0x949: V729 = AND V426 0xffffffffffffffffffffffffffffffffffffffff
0x94a: V730 = 0x0
0x94e: M[0x0] = V729
0x94f: V731 = 0x2
0x951: V732 = 0x20
0x955: M[0x20] = 0x2
0x956: V733 = 0x40
0x95a: V734 = SHA3 0x0 0x40
0x95d: V735 = AND V429 0xffffffffffffffffffffffffffffffffffffffff
0x95f: M[0x0] = V735
0x962: M[0x20] = V734
0x963: V736 = SHA3 0x0 0x40
0x964: V737 = S[V736]
---
Entry stack: [V10, 0x2c2, V426, V429]
Stack pops: 2
Stack additions: [S1, S0, V737]
Exit stack: [V10, 0x2c2, V426, V429, V737]

================================

Block 0x965
[0x965:0x96a]
---
Predecessors: [0x93e]
Successors: [0x2c2]
---
0x965 JUMPDEST
0x966 SWAP3
0x967 SWAP2
0x968 POP
0x969 POP
0x96a JUMP
---
0x965: JUMPDEST 
0x96a: JUMP 0x2c2
---
Entry stack: [V10, 0x2c2, V426, V429, V737]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V737]

================================

Block 0x96b
[0x96b:0x97c]
---
Predecessors: [0x51c, 0x7e7]
Successors: [0x524, 0x7ef]
---
0x96b JUMPDEST
0x96c PUSH1 0x40
0x96e DUP1
0x96f MLOAD
0x970 PUSH1 0x20
0x972 DUP2
0x973 ADD
0x974 SWAP1
0x975 SWAP2
0x976 MSTORE
0x977 PUSH1 0x0
0x979 DUP2
0x97a MSTORE
0x97b SWAP1
0x97c JUMP
---
0x96b: JUMPDEST 
0x96c: V738 = 0x40
0x96f: V739 = M[0x40]
0x970: V740 = 0x20
0x973: V741 = ADD V739 0x20
0x976: M[0x40] = V741
0x977: V742 = 0x0
0x97a: M[V739] = 0x0
0x97c: JUMP {0x524, 0x7ef}
---
Entry stack: [V10, 0x1ff, {0x524, 0x7ef}]
Stack pops: 1
Stack additions: [V739]
Exit stack: [V10, 0x1ff, V739]

================================

Block 0x97d
[0x97d:0x9ad]
---
Predecessors: []
Successors: []
---
0x97d STOP
0x97e LOG1
0x97f PUSH6 0x627a7a723058
0x986 SHA3
0x987 CALL
0x988 MISSING 0xd8
0x989 MISSING 0xe5
0x98a MISSING 0xf8
0x98b MISSING 0xeb
0x98c INVALID
0x98d MISSING 0x2d
0x98e COINBASE
0x98f MISSING 0x21
0x990 MISSING 0xe4
0x991 MLOAD
0x992 EXTCODECOPY
0x993 MISSING 0xdd
0x994 PUSH25 0xb7d25341d17e3e7c8651d438de662f6afd690029
---
0x97d: STOP 
0x97e: LOG S0 S1 S2
0x97f: V743 = 0x627a7a723058
0x986: V744 = SHA3 0x627a7a723058 S3
0x987: V745 = CALL V744 S4 S5 S6 S7 S8 S9
0x988: MISSING 0xd8
0x989: MISSING 0xe5
0x98a: MISSING 0xf8
0x98b: MISSING 0xeb
0x98c: INVALID 
0x98d: MISSING 0x2d
0x98e: V746 = COINBASE
0x98f: MISSING 0x21
0x990: MISSING 0xe4
0x991: V747 = M[S0]
0x992: EXTCODECOPY V747 S1 S2 S3
0x993: MISSING 0xdd
0x994: V748 = 0xb7d25341d17e3e7c8651d438de662f6afd690029
---
Entry stack: []
Stack pops: 0
Stack additions: [V745, V746, 0xb7d25341d17e3e7c8651d438de662f6afd690029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x1ef
Exit block: 0x271
Body: 0x1ef, 0x1f6, 0x1f7, 0x1ff, 0x225, 0x233, 0x245, 0x258, 0x271, 0x51c, 0x524, 0x55a

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x27f
Exit block: 0x29e
Body: 0x27f, 0x286, 0x287, 0x29e, 0x55d, 0x569, 0x592, 0x598, 0x59f, 0x600

Function 2:
Public function signature: 0xdcf4b8f
Entry block: 0x2b2
Exit block: 0x2c2
Body: 0x2b2, 0x2b9, 0x2ba, 0x2c2, 0x606

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x2d4
Exit block: 0x2c2
Body: 0x2c2, 0x2d4, 0x2db, 0x2dc, 0x60c

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x2f6
Exit block: 0x29e
Body: 0x29e, 0x2f6, 0x2fd, 0x2fe, 0x612, 0x623, 0x628, 0x630, 0x638, 0x695, 0x697, 0x69e, 0x6a1, 0x6a7, 0x730, 0x735, 0x736

Function 5:
Public function signature: 0x313ce567
Entry block: 0x32f
Exit block: 0x33f
Body: 0x32f, 0x336, 0x337, 0x33f, 0x742, 0x745

Function 6:
Public function signature: 0x64acdb77
Entry block: 0x355
Exit block: 0x1ed
Body: 0x1ed, 0x355, 0x35c, 0x35d, 0x748, 0x75f, 0x764, 0x783

Function 7:
Public function signature: 0x70a08231
Entry block: 0x367
Exit block: 0x2c2
Body: 0x2c2, 0x367, 0x36e, 0x36f, 0x785, 0x79f

Function 8:
Public function signature: 0x8f580996
Entry block: 0x395
Exit block: 0x1ed
Body: 0x1ed, 0x395, 0x39c, 0x39d, 0x7a4, 0x7bb, 0x7c0, 0x7e5

Function 9:
Public function signature: 0x95d89b41
Entry block: 0x3a7
Exit block: 0x271
Body: 0x1ff, 0x225, 0x233, 0x245, 0x258, 0x271, 0x3a7, 0x3ae, 0x3af, 0x7e7, 0x7ef, 0x825

Function 10:
Public function signature: 0x98b01fe3
Entry block: 0x437
Exit block: 0x2c2
Body: 0x2c2, 0x437, 0x43e, 0x43f, 0x828

Function 11:
Public function signature: 0xa9059cbb
Entry block: 0x459
Exit block: 0x29e
Body: 0x29e, 0x459, 0x460, 0x461, 0x82e, 0x83d, 0x842, 0x84a, 0x852, 0x88a, 0x88d, 0x893, 0x902, 0x907, 0x908

Function 12:
Public function signature: 0xc59d4847
Entry block: 0x48c
Exit block: 0x49c
Body: 0x48c, 0x493, 0x494, 0x49c, 0x911, 0x928

Function 13:
Public function signature: 0xda040c0f
Entry block: 0x4c4
Exit block: 0x29e
Body: 0x29e, 0x4c4, 0x4cb, 0x4cc, 0x92e

Function 14:
Public function signature: 0xdd62ed3e
Entry block: 0x4e8
Exit block: 0x2c2
Body: 0x2c2, 0x4e8, 0x4ef, 0x4f0, 0x93e, 0x965

Function 15:
Public fallback function
Entry block: 0xd8
Exit block: 0x1ed
Body: 0xd8, 0xdc, 0xf3, 0xf8, 0x10c, 0x111, 0x119, 0x11d, 0x14d, 0x14e, 0x170, 0x187, 0x1e9, 0x1ed

