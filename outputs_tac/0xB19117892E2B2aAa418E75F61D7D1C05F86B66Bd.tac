Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x6e]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x1f1c827f
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x6e
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x1f1c827f
0x3b: V13 = EQ V11 0x1f1c827f
0x3c: V14 = 0x6e
0x3f: JUMPI 0x6e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xf6]
---
0x40 DUP1
0x41 PUSH4 0x3e3ee859
0x46 EQ
0x47 PUSH2 0xf6
0x4a JUMPI
---
0x41: V15 = 0x3e3ee859
0x46: V16 = EQ 0x3e3ee859 V11
0x47: V17 = 0xf6
0x4a: JUMPI 0xf6 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x13e]
---
0x4b DUP1
0x4c PUSH4 0x648f0bde
0x51 EQ
0x52 PUSH2 0x13e
0x55 JUMPI
---
0x4c: V18 = 0x648f0bde
0x51: V19 = EQ 0x648f0bde V11
0x52: V20 = 0x13e
0x55: JUMPI 0x13e V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x151]
---
0x56 DUP1
0x57 PUSH4 0xc8166a8a
0x5c EQ
0x5d PUSH2 0x151
0x60 JUMPI
---
0x57: V21 = 0xc8166a8a
0x5c: V22 = EQ 0xc8166a8a V11
0x5d: V23 = 0x151
0x60: JUMPI 0x151 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x1db]
---
0x61 DUP1
0x62 PUSH4 0xf50ab247
0x67 EQ
0x68 PUSH2 0x1db
0x6b JUMPI
---
0x62: V24 = 0xf50ab247
0x67: V25 = EQ 0xf50ab247 V11
0x68: V26 = 0x1db
0x6b: JUMPI 0x1db V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x0, 0x61, 0x289, 0x2c0, 0x452, 0x4ce]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]

================================

Block 0x6e
[0x6e:0xf5]
---
Predecessors: [0xd]
Successors: [0x1e3]
---
0x6e JUMPDEST
0x6f PUSH2 0x6c
0x72 PUSH1 0x4
0x74 PUSH1 0x24
0x76 DUP2
0x77 CALLDATALOAD
0x78 DUP2
0x79 DUP2
0x7a ADD
0x7b SWAP1
0x7c DUP4
0x7d ADD
0x7e CALLDATALOAD
0x7f DUP1
0x80 PUSH1 0x20
0x82 PUSH1 0x1f
0x84 DUP3
0x85 ADD
0x86 DUP2
0x87 SWAP1
0x88 DIV
0x89 DUP2
0x8a MUL
0x8b ADD
0x8c PUSH1 0x40
0x8e MLOAD
0x8f SWAP1
0x90 DUP2
0x91 ADD
0x92 PUSH1 0x40
0x94 MSTORE
0x95 DUP2
0x96 DUP2
0x97 MSTORE
0x98 SWAP3
0x99 SWAP2
0x9a SWAP1
0x9b PUSH1 0x20
0x9d DUP5
0x9e ADD
0x9f DUP4
0xa0 DUP4
0xa1 DUP1
0xa2 DUP3
0xa3 DUP5
0xa4 CALLDATACOPY
0xa5 DUP3
0xa6 ADD
0xa7 SWAP2
0xa8 POP
0xa9 POP
0xaa POP
0xab POP
0xac POP
0xad POP
0xae SWAP2
0xaf SWAP1
0xb0 DUP1
0xb1 CALLDATALOAD
0xb2 SWAP1
0xb3 PUSH1 0x20
0xb5 ADD
0xb6 SWAP1
0xb7 DUP3
0xb8 ADD
0xb9 DUP1
0xba CALLDATALOAD
0xbb SWAP1
0xbc PUSH1 0x20
0xbe ADD
0xbf SWAP1
0xc0 DUP1
0xc1 DUP1
0xc2 PUSH1 0x1f
0xc4 ADD
0xc5 PUSH1 0x20
0xc7 DUP1
0xc8 SWAP2
0xc9 DIV
0xca MUL
0xcb PUSH1 0x20
0xcd ADD
0xce PUSH1 0x40
0xd0 MLOAD
0xd1 SWAP1
0xd2 DUP2
0xd3 ADD
0xd4 PUSH1 0x40
0xd6 MSTORE
0xd7 DUP2
0xd8 DUP2
0xd9 MSTORE
0xda SWAP3
0xdb SWAP2
0xdc SWAP1
0xdd PUSH1 0x20
0xdf DUP5
0xe0 ADD
0xe1 DUP4
0xe2 DUP4
0xe3 DUP1
0xe4 DUP3
0xe5 DUP5
0xe6 CALLDATACOPY
0xe7 POP
0xe8 SWAP5
0xe9 SWAP7
0xea POP
0xeb PUSH2 0x1e3
0xee SWAP6
0xef POP
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 POP
0xf5 JUMP
---
0x6e: JUMPDEST 
0x6f: V27 = 0x6c
0x72: V28 = 0x4
0x74: V29 = 0x24
0x77: V30 = CALLDATALOAD 0x4
0x7a: V31 = ADD V30 0x24
0x7d: V32 = ADD 0x4 V30
0x7e: V33 = CALLDATALOAD V32
0x80: V34 = 0x20
0x82: V35 = 0x1f
0x85: V36 = ADD V33 0x1f
0x88: V37 = DIV V36 0x20
0x8a: V38 = MUL 0x20 V37
0x8b: V39 = ADD V38 0x20
0x8c: V40 = 0x40
0x8e: V41 = M[0x40]
0x91: V42 = ADD V41 V39
0x92: V43 = 0x40
0x94: M[0x40] = V42
0x97: M[V41] = V33
0x9b: V44 = 0x20
0x9e: V45 = ADD V41 0x20
0xa4: CALLDATACOPY V45 V31 V33
0xa6: V46 = ADD V45 V33
0xb1: V47 = CALLDATALOAD 0x24
0xb3: V48 = 0x20
0xb5: V49 = ADD 0x20 0x24
0xb8: V50 = ADD 0x4 V47
0xba: V51 = CALLDATALOAD V50
0xbc: V52 = 0x20
0xbe: V53 = ADD 0x20 V50
0xc2: V54 = 0x1f
0xc4: V55 = ADD 0x1f V51
0xc5: V56 = 0x20
0xc9: V57 = DIV V55 0x20
0xca: V58 = MUL V57 0x20
0xcb: V59 = 0x20
0xcd: V60 = ADD 0x20 V58
0xce: V61 = 0x40
0xd0: V62 = M[0x40]
0xd3: V63 = ADD V62 V60
0xd4: V64 = 0x40
0xd6: M[0x40] = V63
0xd9: M[V62] = V51
0xdd: V65 = 0x20
0xe0: V66 = ADD V62 0x20
0xe6: CALLDATACOPY V66 V53 V51
0xeb: V67 = 0x1e3
0xf5: JUMP 0x1e3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V41, V62]
Exit stack: [V11, 0x6c, V41, V62]

================================

Block 0xf6
[0xf6:0x13d]
---
Predecessors: [0x40]
Successors: [0x28d]
---
0xf6 JUMPDEST
0xf7 PUSH2 0x6c
0xfa PUSH1 0x4
0xfc PUSH1 0x24
0xfe DUP2
0xff CALLDATALOAD
0x100 DUP2
0x101 DUP2
0x102 ADD
0x103 SWAP1
0x104 DUP4
0x105 ADD
0x106 CALLDATALOAD
0x107 DUP1
0x108 PUSH1 0x20
0x10a PUSH1 0x1f
0x10c DUP3
0x10d ADD
0x10e DUP2
0x10f SWAP1
0x110 DIV
0x111 DUP2
0x112 MUL
0x113 ADD
0x114 PUSH1 0x40
0x116 MLOAD
0x117 SWAP1
0x118 DUP2
0x119 ADD
0x11a PUSH1 0x40
0x11c MSTORE
0x11d DUP2
0x11e DUP2
0x11f MSTORE
0x120 SWAP3
0x121 SWAP2
0x122 SWAP1
0x123 PUSH1 0x20
0x125 DUP5
0x126 ADD
0x127 DUP4
0x128 DUP4
0x129 DUP1
0x12a DUP3
0x12b DUP5
0x12c CALLDATACOPY
0x12d POP
0x12e SWAP5
0x12f SWAP7
0x130 POP
0x131 POP
0x132 SWAP4
0x133 CALLDATALOAD
0x134 SWAP4
0x135 POP
0x136 PUSH2 0x28d
0x139 SWAP3
0x13a POP
0x13b POP
0x13c POP
0x13d JUMP
---
0xf6: JUMPDEST 
0xf7: V68 = 0x6c
0xfa: V69 = 0x4
0xfc: V70 = 0x24
0xff: V71 = CALLDATALOAD 0x4
0x102: V72 = ADD V71 0x24
0x105: V73 = ADD 0x4 V71
0x106: V74 = CALLDATALOAD V73
0x108: V75 = 0x20
0x10a: V76 = 0x1f
0x10d: V77 = ADD V74 0x1f
0x110: V78 = DIV V77 0x20
0x112: V79 = MUL 0x20 V78
0x113: V80 = ADD V79 0x20
0x114: V81 = 0x40
0x116: V82 = M[0x40]
0x119: V83 = ADD V82 V80
0x11a: V84 = 0x40
0x11c: M[0x40] = V83
0x11f: M[V82] = V74
0x123: V85 = 0x20
0x126: V86 = ADD V82 0x20
0x12c: CALLDATACOPY V86 V72 V74
0x133: V87 = CALLDATALOAD 0x24
0x136: V88 = 0x28d
0x13d: JUMP 0x28d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V82, V87]
Exit stack: [V11, 0x6c, V82, V87]

================================

Block 0x13e
[0x13e:0x150]
---
Predecessors: [0x4b]
Successors: [0x2c5]
---
0x13e JUMPDEST
0x13f PUSH2 0x6c
0x142 PUSH1 0x4
0x144 DUP1
0x145 CALLDATALOAD
0x146 PUSH1 0x24
0x148 DUP2
0x149 ADD
0x14a SWAP2
0x14b ADD
0x14c CALLDATALOAD
0x14d PUSH2 0x2c5
0x150 JUMP
---
0x13e: JUMPDEST 
0x13f: V89 = 0x6c
0x142: V90 = 0x4
0x145: V91 = CALLDATALOAD 0x4
0x146: V92 = 0x24
0x149: V93 = ADD V91 0x24
0x14b: V94 = ADD 0x4 V91
0x14c: V95 = CALLDATALOAD V94
0x14d: V96 = 0x2c5
0x150: JUMP 0x2c5
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V93, V95]
Exit stack: [V11, 0x6c, V93, V95]

================================

Block 0x151
[0x151:0x157]
---
Predecessors: [0x56]
Successors: [0x158, 0x15c]
---
0x151 JUMPDEST
0x152 CALLVALUE
0x153 ISZERO
0x154 PUSH2 0x15c
0x157 JUMPI
---
0x151: JUMPDEST 
0x152: V97 = CALLVALUE
0x153: V98 = ISZERO V97
0x154: V99 = 0x15c
0x157: JUMPI 0x15c V98
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x158
[0x158:0x15b]
---
Predecessors: [0x151]
Successors: []
---
0x158 PUSH1 0x0
0x15a DUP1
0x15b REVERT
---
0x158: V100 = 0x0
0x15b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x15c
[0x15c:0x163]
---
Predecessors: [0x151]
Successors: [0x35c]
---
0x15c JUMPDEST
0x15d PUSH2 0x164
0x160 PUSH2 0x35c
0x163 JUMP
---
0x15c: JUMPDEST 
0x15d: V101 = 0x164
0x160: V102 = 0x35c
0x163: JUMP 0x35c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x164]
Exit stack: [V11, 0x164]

================================

Block 0x164
[0x164:0x187]
---
Predecessors: [0x3f2]
Successors: [0x188]
---
0x164 JUMPDEST
0x165 PUSH1 0x40
0x167 MLOAD
0x168 PUSH1 0x20
0x16a DUP1
0x16b DUP3
0x16c MSTORE
0x16d DUP2
0x16e SWAP1
0x16f DUP2
0x170 ADD
0x171 DUP4
0x172 DUP2
0x173 DUP2
0x174 MLOAD
0x175 DUP2
0x176 MSTORE
0x177 PUSH1 0x20
0x179 ADD
0x17a SWAP2
0x17b POP
0x17c DUP1
0x17d MLOAD
0x17e SWAP1
0x17f PUSH1 0x20
0x181 ADD
0x182 SWAP1
0x183 DUP1
0x184 DUP4
0x185 DUP4
0x186 PUSH1 0x0
---
0x164: JUMPDEST 
0x165: V103 = 0x40
0x167: V104 = M[0x40]
0x168: V105 = 0x20
0x16c: M[V104] = 0x20
0x170: V106 = ADD V104 0x20
0x174: V107 = M[V308]
0x176: M[V106] = V107
0x177: V108 = 0x20
0x179: V109 = ADD 0x20 V106
0x17d: V110 = M[V308]
0x17f: V111 = 0x20
0x181: V112 = ADD 0x20 V308
0x186: V113 = 0x0
---
Entry stack: [V11, 0x164, V308]
Stack pops: 1
Stack additions: [S0, V104, V104, V109, V112, V110, V110, V109, V112, 0x0]
Exit stack: [V11, 0x164, V308, V104, V104, V109, V112, V110, V110, V109, V112, 0x0]

================================

Block 0x188
[0x188:0x190]
---
Predecessors: [0x164, 0x191]
Successors: [0x191, 0x1a0]
---
0x188 JUMPDEST
0x189 DUP4
0x18a DUP2
0x18b LT
0x18c ISZERO
0x18d PUSH2 0x1a0
0x190 JUMPI
---
0x188: JUMPDEST 
0x18b: V114 = LT S0 V110
0x18c: V115 = ISZERO V114
0x18d: V116 = 0x1a0
0x190: JUMPI 0x1a0 V115
---
Entry stack: [V11, 0x164, V308, V104, V104, V109, V112, V110, V110, V109, V112, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x164, V308, V104, V104, V109, V112, V110, V110, V109, V112, S0]

================================

Block 0x191
[0x191:0x19f]
---
Predecessors: [0x188]
Successors: [0x188]
---
0x191 DUP1
0x192 DUP3
0x193 ADD
0x194 MLOAD
0x195 DUP4
0x196 DUP3
0x197 ADD
0x198 MSTORE
0x199 PUSH1 0x20
0x19b ADD
0x19c PUSH2 0x188
0x19f JUMP
---
0x193: V117 = ADD V112 S0
0x194: V118 = M[V117]
0x197: V119 = ADD S0 V109
0x198: M[V119] = V118
0x199: V120 = 0x20
0x19b: V121 = ADD 0x20 S0
0x19c: V122 = 0x188
0x19f: JUMP 0x188
---
Entry stack: [V11, 0x164, V308, V104, V104, V109, V112, V110, V110, V109, V112, S0]
Stack pops: 3
Stack additions: [S2, S1, V121]
Exit stack: [V11, 0x164, V308, V104, V104, V109, V112, V110, V110, V109, V112, V121]

================================

Block 0x1a0
[0x1a0:0x1b3]
---
Predecessors: [0x188]
Successors: [0x1b4, 0x1cd]
---
0x1a0 JUMPDEST
0x1a1 POP
0x1a2 POP
0x1a3 POP
0x1a4 POP
0x1a5 SWAP1
0x1a6 POP
0x1a7 SWAP1
0x1a8 DUP2
0x1a9 ADD
0x1aa SWAP1
0x1ab PUSH1 0x1f
0x1ad AND
0x1ae DUP1
0x1af ISZERO
0x1b0 PUSH2 0x1cd
0x1b3 JUMPI
---
0x1a0: JUMPDEST 
0x1a9: V123 = ADD V110 V109
0x1ab: V124 = 0x1f
0x1ad: V125 = AND 0x1f V110
0x1af: V126 = ISZERO V125
0x1b0: V127 = 0x1cd
0x1b3: JUMPI 0x1cd V126
---
Entry stack: [V11, 0x164, V308, V104, V104, V109, V112, V110, V110, V109, V112, S0]
Stack pops: 7
Stack additions: [V123, V125]
Exit stack: [V11, 0x164, V308, V104, V104, V123, V125]

================================

Block 0x1b4
[0x1b4:0x1cc]
---
Predecessors: [0x1a0]
Successors: [0x1cd]
---
0x1b4 DUP1
0x1b5 DUP3
0x1b6 SUB
0x1b7 DUP1
0x1b8 MLOAD
0x1b9 PUSH1 0x1
0x1bb DUP4
0x1bc PUSH1 0x20
0x1be SUB
0x1bf PUSH2 0x100
0x1c2 EXP
0x1c3 SUB
0x1c4 NOT
0x1c5 AND
0x1c6 DUP2
0x1c7 MSTORE
0x1c8 PUSH1 0x20
0x1ca ADD
0x1cb SWAP2
0x1cc POP
---
0x1b6: V128 = SUB V123 V125
0x1b8: V129 = M[V128]
0x1b9: V130 = 0x1
0x1bc: V131 = 0x20
0x1be: V132 = SUB 0x20 V125
0x1bf: V133 = 0x100
0x1c2: V134 = EXP 0x100 V132
0x1c3: V135 = SUB V134 0x1
0x1c4: V136 = NOT V135
0x1c5: V137 = AND V136 V129
0x1c7: M[V128] = V137
0x1c8: V138 = 0x20
0x1ca: V139 = ADD 0x20 V128
---
Entry stack: [V11, 0x164, V308, V104, V104, V123, V125]
Stack pops: 2
Stack additions: [V139, S0]
Exit stack: [V11, 0x164, V308, V104, V104, V139, V125]

================================

Block 0x1cd
[0x1cd:0x1da]
---
Predecessors: [0x1a0, 0x1b4]
Successors: []
---
0x1cd JUMPDEST
0x1ce POP
0x1cf SWAP3
0x1d0 POP
0x1d1 POP
0x1d2 POP
0x1d3 PUSH1 0x40
0x1d5 MLOAD
0x1d6 DUP1
0x1d7 SWAP2
0x1d8 SUB
0x1d9 SWAP1
0x1da RETURN
---
0x1cd: JUMPDEST 
0x1d3: V140 = 0x40
0x1d5: V141 = M[0x40]
0x1d8: V142 = SUB S1 V141
0x1da: RETURN V141 V142
---
Entry stack: [V11, 0x164, V308, V104, V104, S1, V125]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x164]

================================

Block 0x1db
[0x1db:0x1e2]
---
Predecessors: [0x61]
Successors: [0x3fa]
---
0x1db JUMPDEST
0x1dc PUSH2 0x6c
0x1df PUSH2 0x3fa
0x1e2 JUMP
---
0x1db: JUMPDEST 
0x1dc: V143 = 0x6c
0x1df: V144 = 0x3fa
0x1e2: JUMP 0x3fa
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0x1e3
[0x1e3:0x1ec]
---
Predecessors: [0x6e]
Successors: [0x1ed, 0x289]
---
0x1e3 JUMPDEST
0x1e4 PUSH1 0x2
0x1e6 SLOAD
0x1e7 ISZERO
0x1e8 ISZERO
0x1e9 PUSH2 0x289
0x1ec JUMPI
---
0x1e3: JUMPDEST 
0x1e4: V145 = 0x2
0x1e6: V146 = S[0x2]
0x1e7: V147 = ISZERO V146
0x1e8: V148 = ISZERO V147
0x1e9: V149 = 0x289
0x1ec: JUMPI 0x289 V148
---
Entry stack: [V11, 0x6c, V41, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V41, V62]

================================

Block 0x1ed
[0x1ed:0x1fc]
---
Predecessors: [0x1e3]
Successors: [0x1fd]
---
0x1ed DUP1
0x1ee PUSH1 0x40
0x1f0 MLOAD
0x1f1 DUP1
0x1f2 DUP3
0x1f3 DUP1
0x1f4 MLOAD
0x1f5 SWAP1
0x1f6 PUSH1 0x20
0x1f8 ADD
0x1f9 SWAP1
0x1fa DUP1
0x1fb DUP4
0x1fc DUP4
---
0x1ee: V150 = 0x40
0x1f0: V151 = M[0x40]
0x1f4: V152 = M[V62]
0x1f6: V153 = 0x20
0x1f8: V154 = ADD 0x20 V62
---
Entry stack: [V11, 0x6c, V41, V62]
Stack pops: 1
Stack additions: [S0, S0, V151, V151, V154, V152, V152, V151, V154]
Exit stack: [V11, 0x6c, V41, V62, V62, V151, V151, V154, V152, V152, V151, V154]

================================

Block 0x1fd
[0x1fd:0x205]
---
Predecessors: [0x1ed, 0x206]
Successors: [0x206, 0x21c]
---
0x1fd JUMPDEST
0x1fe PUSH1 0x20
0x200 DUP4
0x201 LT
0x202 PUSH2 0x21c
0x205 JUMPI
---
0x1fd: JUMPDEST 
0x1fe: V155 = 0x20
0x201: V156 = LT S2 0x20
0x202: V157 = 0x21c
0x205: JUMPI 0x21c V156
---
Entry stack: [V11, 0x6c, V41, V62, V62, V151, V151, V154, V152, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, V41, V62, V62, V151, V151, V154, V152, S2, S1, S0]

================================

Block 0x206
[0x206:0x21b]
---
Predecessors: [0x1fd]
Successors: [0x1fd]
---
0x206 DUP1
0x207 MLOAD
0x208 DUP3
0x209 MSTORE
0x20a PUSH1 0x1f
0x20c NOT
0x20d SWAP1
0x20e SWAP3
0x20f ADD
0x210 SWAP2
0x211 PUSH1 0x20
0x213 SWAP2
0x214 DUP3
0x215 ADD
0x216 SWAP2
0x217 ADD
0x218 PUSH2 0x1fd
0x21b JUMP
---
0x207: V158 = M[S0]
0x209: M[S1] = V158
0x20a: V159 = 0x1f
0x20c: V160 = NOT 0x1f
0x20f: V161 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x211: V162 = 0x20
0x215: V163 = ADD 0x20 S1
0x217: V164 = ADD 0x20 S0
0x218: V165 = 0x1fd
0x21b: JUMP 0x1fd
---
Entry stack: [V11, 0x6c, V41, V62, V62, V151, V151, V154, V152, S2, S1, S0]
Stack pops: 3
Stack additions: [V161, V163, V164]
Exit stack: [V11, 0x6c, V41, V62, V62, V151, V151, V154, V152, V161, V163, V164]

================================

Block 0x21c
[0x21c:0x25e]
---
Predecessors: [0x1fd]
Successors: [0x454]
---
0x21c JUMPDEST
0x21d PUSH1 0x1
0x21f DUP4
0x220 PUSH1 0x20
0x222 SUB
0x223 PUSH2 0x100
0x226 EXP
0x227 SUB
0x228 DUP1
0x229 NOT
0x22a DUP3
0x22b MLOAD
0x22c AND
0x22d DUP2
0x22e DUP5
0x22f MLOAD
0x230 AND
0x231 OR
0x232 SWAP1
0x233 SWAP3
0x234 MSTORE
0x235 POP
0x236 POP
0x237 POP
0x238 SWAP2
0x239 SWAP1
0x23a SWAP2
0x23b ADD
0x23c SWAP3
0x23d POP
0x23e PUSH1 0x40
0x240 SWAP2
0x241 POP
0x242 POP
0x243 MLOAD
0x244 SWAP1
0x245 DUP2
0x246 SWAP1
0x247 SUB
0x248 SWAP1
0x249 SHA3
0x24a PUSH1 0x2
0x24c SSTORE
0x24d PUSH1 0x0
0x24f DUP3
0x250 DUP1
0x251 MLOAD
0x252 PUSH2 0x25f
0x255 SWAP3
0x256 SWAP2
0x257 PUSH1 0x20
0x259 ADD
0x25a SWAP1
0x25b PUSH2 0x454
0x25e JUMP
---
0x21c: JUMPDEST 
0x21d: V166 = 0x1
0x220: V167 = 0x20
0x222: V168 = SUB 0x20 S2
0x223: V169 = 0x100
0x226: V170 = EXP 0x100 V168
0x227: V171 = SUB V170 0x1
0x229: V172 = NOT V171
0x22b: V173 = M[S0]
0x22c: V174 = AND V173 V172
0x22f: V175 = M[S1]
0x230: V176 = AND V175 V171
0x231: V177 = OR V176 V174
0x234: M[S1] = V177
0x23b: V178 = ADD V152 V151
0x23e: V179 = 0x40
0x243: V180 = M[0x40]
0x247: V181 = SUB V178 V180
0x249: V182 = SHA3 V180 V181
0x24a: V183 = 0x2
0x24c: S[0x2] = V182
0x24d: V184 = 0x0
0x251: V185 = M[V41]
0x252: V186 = 0x25f
0x257: V187 = 0x20
0x259: V188 = ADD 0x20 V41
0x25b: V189 = 0x454
0x25e: JUMP 0x454
---
Entry stack: [V11, 0x6c, V41, V62, V62, V151, V151, V154, V152, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, 0x25f, 0x0, V188, V185]
Exit stack: [V11, 0x6c, V41, V62, 0x25f, 0x0, V188, V185]

================================

Block 0x25f
[0x25f:0x288]
---
Predecessors: [0x289, 0x2c0, 0x4ce]
Successors: [0x289]
---
0x25f JUMPDEST
0x260 POP
0x261 PUSH1 0x1
0x263 DUP1
0x264 SLOAD
0x265 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x27a NOT
0x27b AND
0x27c CALLER
0x27d PUSH1 0x1
0x27f PUSH1 0xa0
0x281 PUSH1 0x2
0x283 EXP
0x284 SUB
0x285 AND
0x286 OR
0x287 SWAP1
0x288 SSTORE
---
0x25f: JUMPDEST 
0x261: V190 = 0x1
0x264: V191 = S[0x1]
0x265: V192 = 0xffffffffffffffffffffffffffffffffffffffff
0x27a: V193 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x27b: V194 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V191
0x27c: V195 = CALLER
0x27d: V196 = 0x1
0x27f: V197 = 0xa0
0x281: V198 = 0x2
0x283: V199 = EXP 0x2 0xa0
0x284: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x285: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x286: V202 = OR V201 V194
0x288: S[0x1] = V202
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4, S3, S2, S1]

================================

Block 0x289
[0x289:0x28c]
---
Predecessors: [0x1e3, 0x25f, 0x31a, 0x320]
Successors: [0x6c, 0x25f, 0x2c0]
---
0x289 JUMPDEST
0x28a POP
0x28b POP
0x28c JUMP
---
0x289: JUMPDEST 
0x28c: JUMP S2
---
Entry stack: [V11, 0x6c, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x6c, S4, S3]

================================

Block 0x28d
[0x28d:0x2a3]
---
Predecessors: [0xf6]
Successors: [0x2a4, 0x2a8]
---
0x28d JUMPDEST
0x28e PUSH1 0x1
0x290 SLOAD
0x291 CALLER
0x292 PUSH1 0x1
0x294 PUSH1 0xa0
0x296 PUSH1 0x2
0x298 EXP
0x299 SUB
0x29a SWAP1
0x29b DUP2
0x29c AND
0x29d SWAP2
0x29e AND
0x29f EQ
0x2a0 PUSH2 0x2a8
0x2a3 JUMPI
---
0x28d: JUMPDEST 
0x28e: V203 = 0x1
0x290: V204 = S[0x1]
0x291: V205 = CALLER
0x292: V206 = 0x1
0x294: V207 = 0xa0
0x296: V208 = 0x2
0x298: V209 = EXP 0x2 0xa0
0x299: V210 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29c: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V205
0x29e: V212 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x29f: V213 = EQ V212 V211
0x2a0: V214 = 0x2a8
0x2a3: JUMPI 0x2a8 V213
---
Entry stack: [V11, 0x6c, V82, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V82, V87]

================================

Block 0x2a4
[0x2a4:0x2a7]
---
Predecessors: [0x28d]
Successors: []
---
0x2a4 PUSH1 0x0
0x2a6 DUP1
0x2a7 REVERT
---
0x2a4: V215 = 0x0
0x2a7: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V82, V87]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V82, V87]

================================

Block 0x2a8
[0x2a8:0x2bf]
---
Predecessors: [0x28d]
Successors: [0x454]
---
0x2a8 JUMPDEST
0x2a9 PUSH1 0x2
0x2ab DUP2
0x2ac SWAP1
0x2ad SSTORE
0x2ae PUSH1 0x0
0x2b0 DUP3
0x2b1 DUP1
0x2b2 MLOAD
0x2b3 PUSH2 0x2c0
0x2b6 SWAP3
0x2b7 SWAP2
0x2b8 PUSH1 0x20
0x2ba ADD
0x2bb SWAP1
0x2bc PUSH2 0x454
0x2bf JUMP
---
0x2a8: JUMPDEST 
0x2a9: V216 = 0x2
0x2ad: S[0x2] = V87
0x2ae: V217 = 0x0
0x2b2: V218 = M[V82]
0x2b3: V219 = 0x2c0
0x2b8: V220 = 0x20
0x2ba: V221 = ADD 0x20 V82
0x2bc: V222 = 0x454
0x2bf: JUMP 0x454
---
Entry stack: [V11, 0x6c, V82, V87]
Stack pops: 2
Stack additions: [S1, S0, 0x2c0, 0x0, V221, V218]
Exit stack: [V11, 0x6c, V82, V87, 0x2c0, 0x0, V221, V218]

================================

Block 0x2c0
[0x2c0:0x2c4]
---
Predecessors: [0x289, 0x2c0, 0x4ce]
Successors: [0x6c, 0x25f, 0x2c0]
---
0x2c0 JUMPDEST
0x2c1 POP
0x2c2 POP
0x2c3 POP
0x2c4 JUMP
---
0x2c0: JUMPDEST 
0x2c4: JUMP S3
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4]

================================

Block 0x2c5
[0x2c5:0x2e0]
---
Predecessors: [0x13e]
Successors: [0x2e1, 0x2e5]
---
0x2c5 JUMPDEST
0x2c6 ORIGIN
0x2c7 PUSH1 0x1
0x2c9 PUSH1 0xa0
0x2cb PUSH1 0x2
0x2cd EXP
0x2ce SUB
0x2cf AND
0x2d0 CALLER
0x2d1 PUSH1 0x1
0x2d3 PUSH1 0xa0
0x2d5 PUSH1 0x2
0x2d7 EXP
0x2d8 SUB
0x2d9 AND
0x2da EQ
0x2db ISZERO
0x2dc ISZERO
0x2dd PUSH2 0x2e5
0x2e0 JUMPI
---
0x2c5: JUMPDEST 
0x2c6: V223 = ORIGIN
0x2c7: V224 = 0x1
0x2c9: V225 = 0xa0
0x2cb: V226 = 0x2
0x2cd: V227 = EXP 0x2 0xa0
0x2ce: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cf: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x2d0: V230 = CALLER
0x2d1: V231 = 0x1
0x2d3: V232 = 0xa0
0x2d5: V233 = 0x2
0x2d7: V234 = EXP 0x2 0xa0
0x2d8: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d9: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x2da: V237 = EQ V236 V229
0x2db: V238 = ISZERO V237
0x2dc: V239 = ISZERO V238
0x2dd: V240 = 0x2e5
0x2e0: JUMPI 0x2e5 V239
---
Entry stack: [V11, 0x6c, V93, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V93, V95]

================================

Block 0x2e1
[0x2e1:0x2e4]
---
Predecessors: [0x2c5]
Successors: []
---
0x2e1 PUSH1 0x0
0x2e3 DUP1
0x2e4 REVERT
---
0x2e1: V241 = 0x0
0x2e4: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V93, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V93, V95]

================================

Block 0x2e5
[0x2e5:0x30d]
---
Predecessors: [0x2c5]
Successors: [0x30e, 0x31a]
---
0x2e5 JUMPDEST
0x2e6 DUP2
0x2e7 DUP2
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb DUP1
0x2ec DUP4
0x2ed DUP4
0x2ee DUP1
0x2ef DUP3
0x2f0 DUP5
0x2f1 CALLDATACOPY
0x2f2 DUP3
0x2f3 ADD
0x2f4 SWAP2
0x2f5 POP
0x2f6 POP
0x2f7 SWAP3
0x2f8 POP
0x2f9 POP
0x2fa POP
0x2fb PUSH1 0x40
0x2fd MLOAD
0x2fe SWAP1
0x2ff DUP2
0x300 SWAP1
0x301 SUB
0x302 SWAP1
0x303 SHA3
0x304 PUSH1 0x2
0x306 SLOAD
0x307 EQ
0x308 DUP1
0x309 ISZERO
0x30a PUSH2 0x31a
0x30d JUMPI
---
0x2e5: JUMPDEST 
0x2e8: V242 = 0x40
0x2ea: V243 = M[0x40]
0x2f1: CALLDATACOPY V243 V93 V95
0x2f3: V244 = ADD V243 V95
0x2fb: V245 = 0x40
0x2fd: V246 = M[0x40]
0x301: V247 = SUB V244 V246
0x303: V248 = SHA3 V246 V247
0x304: V249 = 0x2
0x306: V250 = S[0x2]
0x307: V251 = EQ V250 V248
0x309: V252 = ISZERO V251
0x30a: V253 = 0x31a
0x30d: JUMPI 0x31a V252
---
Entry stack: [V11, 0x6c, V93, V95]
Stack pops: 2
Stack additions: [S1, S0, V251]
Exit stack: [V11, 0x6c, V93, V95, V251]

================================

Block 0x30e
[0x30e:0x319]
---
Predecessors: [0x2e5]
Successors: [0x31a]
---
0x30e POP
0x30f PUSH8 0xde0b6b3a7640000
0x318 CALLVALUE
0x319 GT
---
0x30f: V254 = 0xde0b6b3a7640000
0x318: V255 = CALLVALUE
0x319: V256 = GT V255 0xde0b6b3a7640000
---
Entry stack: [V11, 0x6c, V93, V95, V251]
Stack pops: 1
Stack additions: [V256]
Exit stack: [V11, 0x6c, V93, V95, V256]

================================

Block 0x31a
[0x31a:0x31f]
---
Predecessors: [0x2e5, 0x30e]
Successors: [0x289, 0x320]
---
0x31a JUMPDEST
0x31b ISZERO
0x31c PUSH2 0x289
0x31f JUMPI
---
0x31a: JUMPDEST 
0x31b: V257 = ISZERO S0
0x31c: V258 = 0x289
0x31f: JUMPI 0x289 V257
---
Entry stack: [V11, 0x6c, V93, V95, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6c, V93, V95]

================================

Block 0x320
[0x320:0x357]
---
Predecessors: [0x31a]
Successors: [0x289, 0x358]
---
0x320 CALLER
0x321 PUSH1 0x1
0x323 PUSH1 0xa0
0x325 PUSH1 0x2
0x327 EXP
0x328 SUB
0x329 AND
0x32a PUSH2 0x8fc
0x32d ADDRESS
0x32e PUSH1 0x1
0x330 PUSH1 0xa0
0x332 PUSH1 0x2
0x334 EXP
0x335 SUB
0x336 AND
0x337 BALANCE
0x338 SWAP1
0x339 DUP2
0x33a ISZERO
0x33b MUL
0x33c SWAP1
0x33d PUSH1 0x40
0x33f MLOAD
0x340 PUSH1 0x0
0x342 PUSH1 0x40
0x344 MLOAD
0x345 DUP1
0x346 DUP4
0x347 SUB
0x348 DUP2
0x349 DUP6
0x34a DUP9
0x34b DUP9
0x34c CALL
0x34d SWAP4
0x34e POP
0x34f POP
0x350 POP
0x351 POP
0x352 ISZERO
0x353 ISZERO
0x354 PUSH2 0x289
0x357 JUMPI
---
0x320: V259 = CALLER
0x321: V260 = 0x1
0x323: V261 = 0xa0
0x325: V262 = 0x2
0x327: V263 = EXP 0x2 0xa0
0x328: V264 = SUB 0x10000000000000000000000000000000000000000 0x1
0x329: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x32a: V266 = 0x8fc
0x32d: V267 = ADDRESS
0x32e: V268 = 0x1
0x330: V269 = 0xa0
0x332: V270 = 0x2
0x334: V271 = EXP 0x2 0xa0
0x335: V272 = SUB 0x10000000000000000000000000000000000000000 0x1
0x336: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x337: V274 = BALANCE V273
0x33a: V275 = ISZERO V274
0x33b: V276 = MUL V275 0x8fc
0x33d: V277 = 0x40
0x33f: V278 = M[0x40]
0x340: V279 = 0x0
0x342: V280 = 0x40
0x344: V281 = M[0x40]
0x347: V282 = SUB V278 V281
0x34c: V283 = CALL V276 V265 V274 V281 V282 V281 0x0
0x352: V284 = ISZERO V283
0x353: V285 = ISZERO V284
0x354: V286 = 0x289
0x357: JUMPI 0x289 V285
---
Entry stack: [V11, 0x6c, V93, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V93, V95]

================================

Block 0x358
[0x358:0x35b]
---
Predecessors: [0x320]
Successors: []
---
0x358 PUSH1 0x0
0x35a DUP1
0x35b REVERT
---
0x358: V287 = 0x0
0x35b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c, V93, V95]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V93, V95]

================================

Block 0x35c
[0x35c:0x3ab]
---
Predecessors: [0x15c]
Successors: [0x3ac, 0x3f2]
---
0x35c JUMPDEST
0x35d PUSH1 0x0
0x35f DUP1
0x360 SLOAD
0x361 PUSH1 0x1
0x363 DUP2
0x364 PUSH1 0x1
0x366 AND
0x367 ISZERO
0x368 PUSH2 0x100
0x36b MUL
0x36c SUB
0x36d AND
0x36e PUSH1 0x2
0x370 SWAP1
0x371 DIV
0x372 DUP1
0x373 PUSH1 0x1f
0x375 ADD
0x376 PUSH1 0x20
0x378 DUP1
0x379 SWAP2
0x37a DIV
0x37b MUL
0x37c PUSH1 0x20
0x37e ADD
0x37f PUSH1 0x40
0x381 MLOAD
0x382 SWAP1
0x383 DUP2
0x384 ADD
0x385 PUSH1 0x40
0x387 MSTORE
0x388 DUP1
0x389 SWAP3
0x38a SWAP2
0x38b SWAP1
0x38c DUP2
0x38d DUP2
0x38e MSTORE
0x38f PUSH1 0x20
0x391 ADD
0x392 DUP3
0x393 DUP1
0x394 SLOAD
0x395 PUSH1 0x1
0x397 DUP2
0x398 PUSH1 0x1
0x39a AND
0x39b ISZERO
0x39c PUSH2 0x100
0x39f MUL
0x3a0 SUB
0x3a1 AND
0x3a2 PUSH1 0x2
0x3a4 SWAP1
0x3a5 DIV
0x3a6 DUP1
0x3a7 ISZERO
0x3a8 PUSH2 0x3f2
0x3ab JUMPI
---
0x35c: JUMPDEST 
0x35d: V288 = 0x0
0x360: V289 = S[0x0]
0x361: V290 = 0x1
0x364: V291 = 0x1
0x366: V292 = AND 0x1 V289
0x367: V293 = ISZERO V292
0x368: V294 = 0x100
0x36b: V295 = MUL 0x100 V293
0x36c: V296 = SUB V295 0x1
0x36d: V297 = AND V296 V289
0x36e: V298 = 0x2
0x371: V299 = DIV V297 0x2
0x373: V300 = 0x1f
0x375: V301 = ADD 0x1f V299
0x376: V302 = 0x20
0x37a: V303 = DIV V301 0x20
0x37b: V304 = MUL V303 0x20
0x37c: V305 = 0x20
0x37e: V306 = ADD 0x20 V304
0x37f: V307 = 0x40
0x381: V308 = M[0x40]
0x384: V309 = ADD V308 V306
0x385: V310 = 0x40
0x387: M[0x40] = V309
0x38e: M[V308] = V299
0x38f: V311 = 0x20
0x391: V312 = ADD 0x20 V308
0x394: V313 = S[0x0]
0x395: V314 = 0x1
0x398: V315 = 0x1
0x39a: V316 = AND 0x1 V313
0x39b: V317 = ISZERO V316
0x39c: V318 = 0x100
0x39f: V319 = MUL 0x100 V317
0x3a0: V320 = SUB V319 0x1
0x3a1: V321 = AND V320 V313
0x3a2: V322 = 0x2
0x3a5: V323 = DIV V321 0x2
0x3a7: V324 = ISZERO V323
0x3a8: V325 = 0x3f2
0x3ab: JUMPI 0x3f2 V324
---
Entry stack: [V11, 0x164]
Stack pops: 0
Stack additions: [V308, 0x0, V299, V312, 0x0, V323]
Exit stack: [V11, 0x164, V308, 0x0, V299, V312, 0x0, V323]

================================

Block 0x3ac
[0x3ac:0x3b3]
---
Predecessors: [0x35c]
Successors: [0x3b4, 0x3c7]
---
0x3ac DUP1
0x3ad PUSH1 0x1f
0x3af LT
0x3b0 PUSH2 0x3c7
0x3b3 JUMPI
---
0x3ad: V326 = 0x1f
0x3af: V327 = LT 0x1f V323
0x3b0: V328 = 0x3c7
0x3b3: JUMPI 0x3c7 V327
---
Entry stack: [V11, 0x164, V308, 0x0, V299, V312, 0x0, V323]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x164, V308, 0x0, V299, V312, 0x0, V323]

================================

Block 0x3b4
[0x3b4:0x3c6]
---
Predecessors: [0x3ac]
Successors: [0x3f2]
---
0x3b4 PUSH2 0x100
0x3b7 DUP1
0x3b8 DUP4
0x3b9 SLOAD
0x3ba DIV
0x3bb MUL
0x3bc DUP4
0x3bd MSTORE
0x3be SWAP2
0x3bf PUSH1 0x20
0x3c1 ADD
0x3c2 SWAP2
0x3c3 PUSH2 0x3f2
0x3c6 JUMP
---
0x3b4: V329 = 0x100
0x3b9: V330 = S[0x0]
0x3ba: V331 = DIV V330 0x100
0x3bb: V332 = MUL V331 0x100
0x3bd: M[V312] = V332
0x3bf: V333 = 0x20
0x3c1: V334 = ADD 0x20 V312
0x3c3: V335 = 0x3f2
0x3c6: JUMP 0x3f2
---
Entry stack: [V11, 0x164, V308, 0x0, V299, V312, 0x0, V323]
Stack pops: 3
Stack additions: [V334, S1, S0]
Exit stack: [V11, 0x164, V308, 0x0, V299, V334, 0x0, V323]

================================

Block 0x3c7
[0x3c7:0x3d4]
---
Predecessors: [0x3ac]
Successors: [0x3d5]
---
0x3c7 JUMPDEST
0x3c8 DUP3
0x3c9 ADD
0x3ca SWAP2
0x3cb SWAP1
0x3cc PUSH1 0x0
0x3ce MSTORE
0x3cf PUSH1 0x20
0x3d1 PUSH1 0x0
0x3d3 SHA3
0x3d4 SWAP1
---
0x3c7: JUMPDEST 
0x3c9: V336 = ADD V312 V323
0x3cc: V337 = 0x0
0x3ce: M[0x0] = 0x0
0x3cf: V338 = 0x20
0x3d1: V339 = 0x0
0x3d3: V340 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x164, V308, 0x0, V299, V312, 0x0, V323]
Stack pops: 3
Stack additions: [V336, V340, S2]
Exit stack: [V11, 0x164, V308, 0x0, V299, V336, V340, V312]

================================

Block 0x3d5
[0x3d5:0x3e8]
---
Predecessors: [0x3c7, 0x3d5]
Successors: [0x3d5, 0x3e9]
---
0x3d5 JUMPDEST
0x3d6 DUP2
0x3d7 SLOAD
0x3d8 DUP2
0x3d9 MSTORE
0x3da SWAP1
0x3db PUSH1 0x1
0x3dd ADD
0x3de SWAP1
0x3df PUSH1 0x20
0x3e1 ADD
0x3e2 DUP1
0x3e3 DUP4
0x3e4 GT
0x3e5 PUSH2 0x3d5
0x3e8 JUMPI
---
0x3d5: JUMPDEST 
0x3d7: V341 = S[S1]
0x3d9: M[S0] = V341
0x3db: V342 = 0x1
0x3dd: V343 = ADD 0x1 S1
0x3df: V344 = 0x20
0x3e1: V345 = ADD 0x20 S0
0x3e4: V346 = GT V336 V345
0x3e5: V347 = 0x3d5
0x3e8: JUMPI 0x3d5 V346
---
Entry stack: [V11, 0x164, V308, 0x0, V299, V336, S1, S0]
Stack pops: 3
Stack additions: [S2, V343, V345]
Exit stack: [V11, 0x164, V308, 0x0, V299, V336, V343, V345]

================================

Block 0x3e9
[0x3e9:0x3f1]
---
Predecessors: [0x3d5]
Successors: [0x3f2]
---
0x3e9 DUP3
0x3ea SWAP1
0x3eb SUB
0x3ec PUSH1 0x1f
0x3ee AND
0x3ef DUP3
0x3f0 ADD
0x3f1 SWAP2
---
0x3eb: V348 = SUB V345 V336
0x3ec: V349 = 0x1f
0x3ee: V350 = AND 0x1f V348
0x3f0: V351 = ADD V336 V350
---
Entry stack: [V11, 0x164, V308, 0x0, V299, V336, V343, V345]
Stack pops: 3
Stack additions: [V351, S1, S2]
Exit stack: [V11, 0x164, V308, 0x0, V299, V351, V343, V336]

================================

Block 0x3f2
[0x3f2:0x3f9]
---
Predecessors: [0x35c, 0x3b4, 0x3e9]
Successors: [0x164]
---
0x3f2 JUMPDEST
0x3f3 POP
0x3f4 POP
0x3f5 POP
0x3f6 POP
0x3f7 POP
0x3f8 DUP2
0x3f9 JUMP
---
0x3f2: JUMPDEST 
0x3f9: JUMP 0x164
---
Entry stack: [V11, 0x164, V308, 0x0, V299, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x164, V308]

================================

Block 0x3fa
[0x3fa:0x410]
---
Predecessors: [0x1db]
Successors: [0x411, 0x415]
---
0x3fa JUMPDEST
0x3fb PUSH1 0x1
0x3fd SLOAD
0x3fe CALLER
0x3ff PUSH1 0x1
0x401 PUSH1 0xa0
0x403 PUSH1 0x2
0x405 EXP
0x406 SUB
0x407 SWAP1
0x408 DUP2
0x409 AND
0x40a SWAP2
0x40b AND
0x40c EQ
0x40d PUSH2 0x415
0x410 JUMPI
---
0x3fa: JUMPDEST 
0x3fb: V352 = 0x1
0x3fd: V353 = S[0x1]
0x3fe: V354 = CALLER
0x3ff: V355 = 0x1
0x401: V356 = 0xa0
0x403: V357 = 0x2
0x405: V358 = EXP 0x2 0xa0
0x406: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x409: V360 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0x40b: V361 = AND V353 0xffffffffffffffffffffffffffffffffffffffff
0x40c: V362 = EQ V361 V360
0x40d: V363 = 0x415
0x410: JUMPI 0x415 V362
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x411
[0x411:0x414]
---
Predecessors: [0x3fa]
Successors: []
---
0x411 PUSH1 0x0
0x413 DUP1
0x414 REVERT
---
0x411: V364 = 0x0
0x414: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x415
[0x415:0x44d]
---
Predecessors: [0x3fa]
Successors: [0x44e, 0x452]
---
0x415 JUMPDEST
0x416 CALLER
0x417 PUSH1 0x1
0x419 PUSH1 0xa0
0x41b PUSH1 0x2
0x41d EXP
0x41e SUB
0x41f AND
0x420 PUSH2 0x8fc
0x423 ADDRESS
0x424 PUSH1 0x1
0x426 PUSH1 0xa0
0x428 PUSH1 0x2
0x42a EXP
0x42b SUB
0x42c AND
0x42d BALANCE
0x42e SWAP1
0x42f DUP2
0x430 ISZERO
0x431 MUL
0x432 SWAP1
0x433 PUSH1 0x40
0x435 MLOAD
0x436 PUSH1 0x0
0x438 PUSH1 0x40
0x43a MLOAD
0x43b DUP1
0x43c DUP4
0x43d SUB
0x43e DUP2
0x43f DUP6
0x440 DUP9
0x441 DUP9
0x442 CALL
0x443 SWAP4
0x444 POP
0x445 POP
0x446 POP
0x447 POP
0x448 ISZERO
0x449 ISZERO
0x44a PUSH2 0x452
0x44d JUMPI
---
0x415: JUMPDEST 
0x416: V365 = CALLER
0x417: V366 = 0x1
0x419: V367 = 0xa0
0x41b: V368 = 0x2
0x41d: V369 = EXP 0x2 0xa0
0x41e: V370 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41f: V371 = AND 0xffffffffffffffffffffffffffffffffffffffff V365
0x420: V372 = 0x8fc
0x423: V373 = ADDRESS
0x424: V374 = 0x1
0x426: V375 = 0xa0
0x428: V376 = 0x2
0x42a: V377 = EXP 0x2 0xa0
0x42b: V378 = SUB 0x10000000000000000000000000000000000000000 0x1
0x42c: V379 = AND 0xffffffffffffffffffffffffffffffffffffffff V373
0x42d: V380 = BALANCE V379
0x430: V381 = ISZERO V380
0x431: V382 = MUL V381 0x8fc
0x433: V383 = 0x40
0x435: V384 = M[0x40]
0x436: V385 = 0x0
0x438: V386 = 0x40
0x43a: V387 = M[0x40]
0x43d: V388 = SUB V384 V387
0x442: V389 = CALL V382 V371 V380 V387 V388 V387 0x0
0x448: V390 = ISZERO V389
0x449: V391 = ISZERO V390
0x44a: V392 = 0x452
0x44d: JUMPI 0x452 V391
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x44e
[0x44e:0x451]
---
Predecessors: [0x415]
Successors: []
---
0x44e PUSH1 0x0
0x450 DUP1
0x451 REVERT
---
0x44e: V393 = 0x0
0x451: REVERT 0x0 0x0
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x452
[0x452:0x453]
---
Predecessors: [0x415]
Successors: [0x6c]
---
0x452 JUMPDEST
0x453 JUMP
---
0x452: JUMPDEST 
0x453: JUMP 0x6c
---
Entry stack: [V11, 0x6c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x454
[0x454:0x484]
---
Predecessors: [0x21c, 0x2a8]
Successors: [0x485, 0x495]
---
0x454 JUMPDEST
0x455 DUP3
0x456 DUP1
0x457 SLOAD
0x458 PUSH1 0x1
0x45a DUP2
0x45b PUSH1 0x1
0x45d AND
0x45e ISZERO
0x45f PUSH2 0x100
0x462 MUL
0x463 SUB
0x464 AND
0x465 PUSH1 0x2
0x467 SWAP1
0x468 DIV
0x469 SWAP1
0x46a PUSH1 0x0
0x46c MSTORE
0x46d PUSH1 0x20
0x46f PUSH1 0x0
0x471 SHA3
0x472 SWAP1
0x473 PUSH1 0x1f
0x475 ADD
0x476 PUSH1 0x20
0x478 SWAP1
0x479 DIV
0x47a DUP2
0x47b ADD
0x47c SWAP3
0x47d DUP3
0x47e PUSH1 0x1f
0x480 LT
0x481 PUSH2 0x495
0x484 JUMPI
---
0x454: JUMPDEST 
0x457: V394 = S[0x0]
0x458: V395 = 0x1
0x45b: V396 = 0x1
0x45d: V397 = AND 0x1 V394
0x45e: V398 = ISZERO V397
0x45f: V399 = 0x100
0x462: V400 = MUL 0x100 V398
0x463: V401 = SUB V400 0x1
0x464: V402 = AND V401 V394
0x465: V403 = 0x2
0x468: V404 = DIV V402 0x2
0x46a: V405 = 0x0
0x46c: M[0x0] = 0x0
0x46d: V406 = 0x20
0x46f: V407 = 0x0
0x471: V408 = SHA3 0x0 0x20
0x473: V409 = 0x1f
0x475: V410 = ADD 0x1f V404
0x476: V411 = 0x20
0x479: V412 = DIV V410 0x20
0x47b: V413 = ADD V408 V412
0x47e: V414 = 0x1f
0x480: V415 = LT 0x1f S0
0x481: V416 = 0x495
0x484: JUMPI 0x495 V415
---
Entry stack: [V11, 0x6c, S5, S4, {0x25f, 0x2c0}, 0x0, S1, S0]
Stack pops: 3
Stack additions: [S2, V413, S0, V408, S1]
Exit stack: [V11, 0x6c, S5, S4, {0x25f, 0x2c0}, 0x0, V413, S0, V408, S1]

================================

Block 0x485
[0x485:0x494]
---
Predecessors: [0x454]
Successors: [0x4c2]
---
0x485 DUP1
0x486 MLOAD
0x487 PUSH1 0xff
0x489 NOT
0x48a AND
0x48b DUP4
0x48c DUP1
0x48d ADD
0x48e OR
0x48f DUP6
0x490 SSTORE
0x491 PUSH2 0x4c2
0x494 JUMP
---
0x486: V417 = M[S0]
0x487: V418 = 0xff
0x489: V419 = NOT 0xff
0x48a: V420 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V417
0x48d: V421 = ADD S2 S2
0x48e: V422 = OR V421 V420
0x490: S[0x0] = V422
0x491: V423 = 0x4c2
0x494: JUMP 0x4c2
---
Entry stack: [V11, 0x6c, S7, S6, {0x25f, 0x2c0}, 0x0, V413, S2, V408, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x25f, 0x2c0}, 0x0, V413, S2, V408, S0]

================================

Block 0x495
[0x495:0x4a3]
---
Predecessors: [0x454]
Successors: [0x4a4, 0x4c2]
---
0x495 JUMPDEST
0x496 DUP3
0x497 DUP1
0x498 ADD
0x499 PUSH1 0x1
0x49b ADD
0x49c DUP6
0x49d SSTORE
0x49e DUP3
0x49f ISZERO
0x4a0 PUSH2 0x4c2
0x4a3 JUMPI
---
0x495: JUMPDEST 
0x498: V424 = ADD S2 S2
0x499: V425 = 0x1
0x49b: V426 = ADD 0x1 V424
0x49d: S[0x0] = V426
0x49f: V427 = ISZERO S2
0x4a0: V428 = 0x4c2
0x4a3: JUMPI 0x4c2 V427
---
Entry stack: [V11, 0x6c, S7, S6, {0x25f, 0x2c0}, 0x0, V413, S2, V408, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x25f, 0x2c0}, 0x0, V413, S2, V408, S0]

================================

Block 0x4a4
[0x4a4:0x4a6]
---
Predecessors: [0x495]
Successors: [0x4a7]
---
0x4a4 SWAP2
0x4a5 DUP3
0x4a6 ADD
---
0x4a6: V429 = ADD S0 S2
---
Entry stack: [V11, 0x6c, S7, S6, {0x25f, 0x2c0}, 0x0, V413, S2, V408, S0]
Stack pops: 3
Stack additions: [S0, S1, V429]
Exit stack: [V11, 0x6c, S7, S6, {0x25f, 0x2c0}, 0x0, V413, S0, V408, V429]

================================

Block 0x4a7
[0x4a7:0x4af]
---
Predecessors: [0x4a4, 0x4b0]
Successors: [0x4b0, 0x4c2]
---
0x4a7 JUMPDEST
0x4a8 DUP3
0x4a9 DUP2
0x4aa GT
0x4ab ISZERO
0x4ac PUSH2 0x4c2
0x4af JUMPI
---
0x4a7: JUMPDEST 
0x4aa: V430 = GT V429 S2
0x4ab: V431 = ISZERO V430
0x4ac: V432 = 0x4c2
0x4af: JUMPI 0x4c2 V431
---
Entry stack: [V11, 0x6c, S7, S6, {0x25f, 0x2c0}, 0x0, V413, S2, S1, V429]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x25f, 0x2c0}, 0x0, V413, S2, S1, V429]

================================

Block 0x4b0
[0x4b0:0x4c1]
---
Predecessors: [0x4a7]
Successors: [0x4a7]
---
0x4b0 DUP3
0x4b1 MLOAD
0x4b2 DUP3
0x4b3 SSTORE
0x4b4 SWAP2
0x4b5 PUSH1 0x20
0x4b7 ADD
0x4b8 SWAP2
0x4b9 SWAP1
0x4ba PUSH1 0x1
0x4bc ADD
0x4bd SWAP1
0x4be PUSH2 0x4a7
0x4c1 JUMP
---
0x4b1: V433 = M[S2]
0x4b3: S[S1] = V433
0x4b5: V434 = 0x20
0x4b7: V435 = ADD 0x20 S2
0x4ba: V436 = 0x1
0x4bc: V437 = ADD 0x1 S1
0x4be: V438 = 0x4a7
0x4c1: JUMP 0x4a7
---
Entry stack: [V11, 0x6c, S7, S6, {0x25f, 0x2c0}, 0x0, V413, S2, S1, V429]
Stack pops: 3
Stack additions: [V435, V437, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x25f, 0x2c0}, 0x0, V413, V435, V437, V429]

================================

Block 0x4c2
[0x4c2:0x4cd]
---
Predecessors: [0x485, 0x495, 0x4a7]
Successors: [0x4d2]
---
0x4c2 JUMPDEST
0x4c3 POP
0x4c4 PUSH2 0x4ce
0x4c7 SWAP3
0x4c8 SWAP2
0x4c9 POP
0x4ca PUSH2 0x4d2
0x4cd JUMP
---
0x4c2: JUMPDEST 
0x4c4: V439 = 0x4ce
0x4ca: V440 = 0x4d2
0x4cd: JUMP 0x4d2
---
Entry stack: [V11, 0x6c, S7, S6, {0x25f, 0x2c0}, 0x0, V413, S2, S1, S0]
Stack pops: 4
Stack additions: [0x4ce, S3, S1]
Exit stack: [V11, 0x6c, S7, S6, {0x25f, 0x2c0}, 0x0, 0x4ce, V413, S1]

================================

Block 0x4ce
[0x4ce:0x4d1]
---
Predecessors: [0x4d8, 0x4ec]
Successors: [0x6c, 0x25f, 0x2c0, 0x4ec]
---
0x4ce JUMPDEST
0x4cf POP
0x4d0 SWAP1
0x4d1 JUMP
---
0x4ce: JUMPDEST 
0x4d1: JUMP {0x6c, 0x25f, 0x2c0, 0x4ec}
---
Entry stack: [V11, 0x6c, S7, S6, {0x6c, 0x25f, 0x2c0}, S4, S3, {0x6c, 0x25f, 0x2c0, 0x4ec}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x6c, S7, S6, {0x6c, 0x25f, 0x2c0}, S4, S3, S1]

================================

Block 0x4d2
[0x4d2:0x4d7]
---
Predecessors: [0x4c2]
Successors: [0x4d8]
---
0x4d2 JUMPDEST
0x4d3 PUSH2 0x4ec
0x4d6 SWAP2
0x4d7 SWAP1
---
0x4d2: JUMPDEST 
0x4d3: V441 = 0x4ec
---
Entry stack: [V11, 0x6c, S6, S5, {0x25f, 0x2c0}, 0x0, 0x4ce, V413, S0]
Stack pops: 2
Stack additions: [0x4ec, S1, S0]
Exit stack: [V11, 0x6c, S6, S5, {0x25f, 0x2c0}, 0x0, 0x4ce, 0x4ec, V413, S0]

================================

Block 0x4d8
[0x4d8:0x4e0]
---
Predecessors: [0x4d2, 0x4e1]
Successors: [0x4ce, 0x4e1]
---
0x4d8 JUMPDEST
0x4d9 DUP1
0x4da DUP3
0x4db GT
0x4dc ISZERO
0x4dd PUSH2 0x4ce
0x4e0 JUMPI
---
0x4d8: JUMPDEST 
0x4db: V442 = GT V413 S0
0x4dc: V443 = ISZERO V442
0x4dd: V444 = 0x4ce
0x4e0: JUMPI 0x4ce V443
---
Entry stack: [V11, 0x6c, S7, S6, {0x25f, 0x2c0}, 0x0, 0x4ce, 0x4ec, V413, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x25f, 0x2c0}, 0x0, 0x4ce, 0x4ec, V413, S0]

================================

Block 0x4e1
[0x4e1:0x4eb]
---
Predecessors: [0x4d8]
Successors: [0x4d8]
---
0x4e1 PUSH1 0x0
0x4e3 DUP2
0x4e4 SSTORE
0x4e5 PUSH1 0x1
0x4e7 ADD
0x4e8 PUSH2 0x4d8
0x4eb JUMP
---
0x4e1: V445 = 0x0
0x4e4: S[S0] = 0x0
0x4e5: V446 = 0x1
0x4e7: V447 = ADD 0x1 S0
0x4e8: V448 = 0x4d8
0x4eb: JUMP 0x4d8
---
Entry stack: [V11, 0x6c, S7, S6, {0x25f, 0x2c0}, 0x0, 0x4ce, 0x4ec, V413, S0]
Stack pops: 1
Stack additions: [V447]
Exit stack: [V11, 0x6c, S7, S6, {0x25f, 0x2c0}, 0x0, 0x4ce, 0x4ec, V413, V447]

================================

Block 0x4ec
[0x4ec:0x4ee]
---
Predecessors: [0x4ce]
Successors: [0x4ce]
---
0x4ec JUMPDEST
0x4ed SWAP1
0x4ee JUMP
---
0x4ec: JUMPDEST 
0x4ee: JUMP S1
---
Entry stack: [V11, 0x6c, S5, S4, {0x6c, 0x25f, 0x2c0}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x6c, S5, S4, {0x6c, 0x25f, 0x2c0}, S2, S0]

================================

Block 0x4ef
[0x4ef:0x4fa]
---
Predecessors: []
Successors: [0x4fb]
---
0x4ef STOP
0x4f0 LOG1
0x4f1 PUSH6 0x627a7a723058
0x4f8 SHA3
0x4f9 MISSING 0xe6
0x4fa ISZERO
---
0x4ef: STOP 
0x4f0: LOG S0 S1 S2
0x4f1: V449 = 0x627a7a723058
0x4f8: V450 = SHA3 0x627a7a723058 S3
0x4f9: MISSING 0xe6
0x4fa: V451 = ISZERO S0
---
Entry stack: []
Stack pops: 0
Stack additions: [V450, V451]
Exit stack: []

================================

Block 0x4fb
[0x4fb:0x51a]
---
Predecessors: [0x4ef]
Successors: []
---
0x4fb JUMPDEST
0x4fc OR
0x4fd MISSING 0xb5
0x4fe MISSING 0x4f
0x4ff DUP8
0x500 SHL
0x501 SWAP12
0x502 COINBASE
0x503 PUSH16 0xb3ca69bc020ab00f4f7f70c27c90ec7
0x514 CREATE2
0x515 MISSING 0xb5
0x516 MISSING 0xda
0x517 MISSING 0x1f
0x518 LT
0x519 STOP
0x51a MISSING 0x29
---
0x4fb: JUMPDEST 
0x4fc: V452 = OR V451 S1
0x4fd: MISSING 0xb5
0x4fe: MISSING 0x4f
0x500: V453 = SHL S7 S0
0x502: V454 = COINBASE
0x503: V455 = 0xb3ca69bc020ab00f4f7f70c27c90ec7
0x514: V456 = CREATE2 0xb3ca69bc020ab00f4f7f70c27c90ec7 V454 S12 S1
0x515: MISSING 0xb5
0x516: MISSING 0xda
0x517: MISSING 0x1f
0x518: V457 = LT S0 S1
0x519: STOP 
0x51a: MISSING 0x29
---
Entry stack: [V451]
Stack pops: 23
Stack additions: []
Exit stack: []

================================

Function 0:
Public function signature: 0x1f1c827f
Entry block: 0x6e
Exit block: 0x6c
Body: 0x6c, 0x6e, 0x1e3, 0x1ed, 0x1fd, 0x206, 0x21c, 0x25f, 0x289, 0x2c0

Function 1:
Public function signature: 0x3e3ee859
Entry block: 0xf6
Exit block: 0x6c
Body: 0x6c, 0xf6, 0x25f, 0x289, 0x28d, 0x2a4, 0x2a8, 0x2c0

Function 2:
Public function signature: 0x648f0bde
Entry block: 0x13e
Exit block: 0x6c
Body: 0x6c, 0x13e, 0x25f, 0x289, 0x2c0, 0x2c5, 0x2e1, 0x2e5, 0x30e, 0x31a, 0x320, 0x358

Function 3:
Public function signature: 0xc8166a8a
Entry block: 0x151
Exit block: 0x1cd
Body: 0x151, 0x158, 0x15c, 0x164, 0x188, 0x191, 0x1a0, 0x1b4, 0x1cd, 0x35c, 0x3ac, 0x3b4, 0x3c7, 0x3d5, 0x3e9, 0x3f2

Function 4:
Public function signature: 0xf50ab247
Entry block: 0x1db
Exit block: 0x6c
Body: 0x6c, 0x1db, 0x3fa, 0x411, 0x415, 0x44e, 0x452

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0x6c
Body: 0x6c

Function 6:
Private function
Entry block: 0x454
Exit block: 0x4ce
Body: 0x454, 0x485, 0x495, 0x4a4, 0x4a7, 0x4b0, 0x4c2, 0x4ce, 0x4d2, 0x4d8, 0x4e1, 0x4ec

