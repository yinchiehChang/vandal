Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x84]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x166eb4cb
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x84
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x166eb4cb
0x3b: V13 = EQ V11 0x166eb4cb
0x3c: V14 = 0x84
0x3f: JUMPI 0x84 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x92]
---
0x40 DUP1
0x41 PUSH4 0x251c1aa3
0x46 EQ
0x47 PUSH2 0x92
0x4a JUMPI
---
0x41: V15 = 0x251c1aa3
0x46: V16 = EQ 0x251c1aa3 V11
0x47: V17 = 0x92
0x4a: JUMPI 0x92 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xb7]
---
0x4b DUP1
0x4c PUSH4 0x81777b78
0x51 EQ
0x52 PUSH2 0xb7
0x55 JUMPI
---
0x4c: V18 = 0x81777b78
0x51: V19 = EQ 0x81777b78 V11
0x52: V20 = 0xb7
0x55: JUMPI 0xb7 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xca]
---
0x56 DUP1
0x57 PUSH4 0x87f24484
0x5c EQ
0x5d PUSH2 0xca
0x60 JUMPI
---
0x57: V21 = 0x87f24484
0x5c: V22 = EQ 0x87f24484 V11
0x5d: V23 = 0xca
0x60: JUMPI 0xca V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xdd]
---
0x61 DUP1
0x62 PUSH4 0x9f7e1fed
0x67 EQ
0x68 PUSH2 0xdd
0x6b JUMPI
---
0x62: V24 = 0x9f7e1fed
0x67: V25 = EQ 0x9f7e1fed V11
0x68: V26 = 0xdd
0x6b: JUMPI 0xdd V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0xf0]
---
0x6c DUP1
0x6d PUSH4 0xb456ecc5
0x72 EQ
0x73 PUSH2 0xf0
0x76 JUMPI
---
0x6d: V27 = 0xb456ecc5
0x72: V28 = EQ 0xb456ecc5 V11
0x73: V29 = 0xf0
0x76: JUMPI 0xf0 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x141]
---
0x77 DUP1
0x78 PUSH4 0xcf309012
0x7d EQ
0x7e PUSH2 0x141
0x81 JUMPI
---
0x78: V30 = 0xcf309012
0x7d: V31 = EQ 0xcf309012 V11
0x7e: V32 = 0x141
0x81: JUMPI 0x141 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x0, 0x77, 0x193, 0x2ec, 0x3b9]
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x91]
---
Predecessors: [0xd]
Successors: [0x168]
---
0x84 JUMPDEST
0x85 PUSH2 0x82
0x88 PUSH1 0x4
0x8a CALLDATALOAD
0x8b PUSH1 0x24
0x8d CALLDATALOAD
0x8e PUSH2 0x168
0x91 JUMP
---
0x84: JUMPDEST 
0x85: V33 = 0x82
0x88: V34 = 0x4
0x8a: V35 = CALLDATALOAD 0x4
0x8b: V36 = 0x24
0x8d: V37 = CALLDATALOAD 0x24
0x8e: V38 = 0x168
0x91: JUMP 0x168
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V35, V37]
Exit stack: [V11, 0x82, V35, V37]

================================

Block 0x92
[0x92:0x98]
---
Predecessors: [0x40]
Successors: [0x99, 0x9d]
---
0x92 JUMPDEST
0x93 CALLVALUE
0x94 ISZERO
0x95 PUSH2 0x9d
0x98 JUMPI
---
0x92: JUMPDEST 
0x93: V39 = CALLVALUE
0x94: V40 = ISZERO V39
0x95: V41 = 0x9d
0x98: JUMPI 0x9d V40
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x99
[0x99:0x9c]
---
Predecessors: [0x92]
Successors: []
---
0x99 PUSH1 0x0
0x9b DUP1
0x9c REVERT
---
0x99: V42 = 0x0
0x9c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9d
[0x9d:0xa4]
---
Predecessors: [0x92]
Successors: [0x197]
---
0x9d JUMPDEST
0x9e PUSH2 0xa5
0xa1 PUSH2 0x197
0xa4 JUMP
---
0x9d: JUMPDEST 
0x9e: V43 = 0xa5
0xa1: V44 = 0x197
0xa4: JUMP 0x197
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa5]
Exit stack: [V11, 0xa5]

================================

Block 0xa5
[0xa5:0xb6]
---
Predecessors: [0x197, 0x2f1, 0x3fc]
Successors: []
---
0xa5 JUMPDEST
0xa6 PUSH1 0x40
0xa8 MLOAD
0xa9 SWAP1
0xaa DUP2
0xab MSTORE
0xac PUSH1 0x20
0xae ADD
0xaf PUSH1 0x40
0xb1 MLOAD
0xb2 DUP1
0xb3 SWAP2
0xb4 SUB
0xb5 SWAP1
0xb6 RETURN
---
0xa5: JUMPDEST 
0xa6: V45 = 0x40
0xa8: V46 = M[0x40]
0xab: M[V46] = S0
0xac: V47 = 0x20
0xae: V48 = ADD 0x20 V46
0xaf: V49 = 0x40
0xb1: V50 = M[0x40]
0xb4: V51 = SUB V48 V50
0xb6: RETURN V50 V51
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0xb7
[0xb7:0xc9]
---
Predecessors: [0x4b]
Successors: [0x19d]
---
0xb7 JUMPDEST
0xb8 PUSH2 0x82
0xbb PUSH1 0x4
0xbd DUP1
0xbe CALLDATALOAD
0xbf PUSH1 0x24
0xc1 DUP2
0xc2 ADD
0xc3 SWAP2
0xc4 ADD
0xc5 CALLDATALOAD
0xc6 PUSH2 0x19d
0xc9 JUMP
---
0xb7: JUMPDEST 
0xb8: V52 = 0x82
0xbb: V53 = 0x4
0xbe: V54 = CALLDATALOAD 0x4
0xbf: V55 = 0x24
0xc2: V56 = ADD V54 0x24
0xc4: V57 = ADD 0x4 V54
0xc5: V58 = CALLDATALOAD V57
0xc6: V59 = 0x19d
0xc9: JUMP 0x19d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V56, V58]
Exit stack: [V11, 0x82, V56, V58]

================================

Block 0xca
[0xca:0xd0]
---
Predecessors: [0x56]
Successors: [0xd1, 0xd5]
---
0xca JUMPDEST
0xcb CALLVALUE
0xcc ISZERO
0xcd PUSH2 0xd5
0xd0 JUMPI
---
0xca: JUMPDEST 
0xcb: V60 = CALLVALUE
0xcc: V61 = ISZERO V60
0xcd: V62 = 0xd5
0xd0: JUMPI 0xd5 V61
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd1
[0xd1:0xd4]
---
Predecessors: [0xca]
Successors: []
---
0xd1 PUSH1 0x0
0xd3 DUP1
0xd4 REVERT
---
0xd1: V63 = 0x0
0xd4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd5
[0xd5:0xdc]
---
Predecessors: [0xca]
Successors: [0x2f1]
---
0xd5 JUMPDEST
0xd6 PUSH2 0xa5
0xd9 PUSH2 0x2f1
0xdc JUMP
---
0xd5: JUMPDEST 
0xd6: V64 = 0xa5
0xd9: V65 = 0x2f1
0xdc: JUMP 0x2f1
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa5]
Exit stack: [V11, 0xa5]

================================

Block 0xdd
[0xdd:0xef]
---
Predecessors: [0x61]
Successors: [0x2f7]
---
0xdd JUMPDEST
0xde PUSH2 0x82
0xe1 PUSH1 0x4
0xe3 DUP1
0xe4 CALLDATALOAD
0xe5 PUSH1 0x24
0xe7 DUP2
0xe8 ADD
0xe9 SWAP2
0xea ADD
0xeb CALLDATALOAD
0xec PUSH2 0x2f7
0xef JUMP
---
0xdd: JUMPDEST 
0xde: V66 = 0x82
0xe1: V67 = 0x4
0xe4: V68 = CALLDATALOAD 0x4
0xe5: V69 = 0x24
0xe8: V70 = ADD V68 0x24
0xea: V71 = ADD 0x4 V68
0xeb: V72 = CALLDATALOAD V71
0xec: V73 = 0x2f7
0xef: JUMP 0x2f7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V70, V72]
Exit stack: [V11, 0x82, V70, V72]

================================

Block 0xf0
[0xf0:0xf6]
---
Predecessors: [0x6c]
Successors: [0xf7, 0xfb]
---
0xf0 JUMPDEST
0xf1 CALLVALUE
0xf2 ISZERO
0xf3 PUSH2 0xfb
0xf6 JUMPI
---
0xf0: JUMPDEST 
0xf1: V74 = CALLVALUE
0xf2: V75 = ISZERO V74
0xf3: V76 = 0xfb
0xf6: JUMPI 0xfb V75
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xf7
[0xf7:0xfa]
---
Predecessors: [0xf0]
Successors: []
---
0xf7 PUSH1 0x0
0xf9 DUP1
0xfa REVERT
---
0xf7: V77 = 0x0
0xfa: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfb
[0xfb:0x140]
---
Predecessors: [0xf0]
Successors: [0x3ca]
---
0xfb JUMPDEST
0xfc PUSH2 0xa5
0xff PUSH1 0x4
0x101 PUSH1 0x24
0x103 DUP2
0x104 CALLDATALOAD
0x105 DUP2
0x106 DUP2
0x107 ADD
0x108 SWAP1
0x109 DUP4
0x10a ADD
0x10b CALLDATALOAD
0x10c DUP1
0x10d PUSH1 0x20
0x10f PUSH1 0x1f
0x111 DUP3
0x112 ADD
0x113 DUP2
0x114 SWAP1
0x115 DIV
0x116 DUP2
0x117 MUL
0x118 ADD
0x119 PUSH1 0x40
0x11b MLOAD
0x11c SWAP1
0x11d DUP2
0x11e ADD
0x11f PUSH1 0x40
0x121 MSTORE
0x122 DUP2
0x123 DUP2
0x124 MSTORE
0x125 SWAP3
0x126 SWAP2
0x127 SWAP1
0x128 PUSH1 0x20
0x12a DUP5
0x12b ADD
0x12c DUP4
0x12d DUP4
0x12e DUP1
0x12f DUP3
0x130 DUP5
0x131 CALLDATACOPY
0x132 POP
0x133 SWAP5
0x134 SWAP7
0x135 POP
0x136 PUSH2 0x3ca
0x139 SWAP6
0x13a POP
0x13b POP
0x13c POP
0x13d POP
0x13e POP
0x13f POP
0x140 JUMP
---
0xfb: JUMPDEST 
0xfc: V78 = 0xa5
0xff: V79 = 0x4
0x101: V80 = 0x24
0x104: V81 = CALLDATALOAD 0x4
0x107: V82 = ADD V81 0x24
0x10a: V83 = ADD 0x4 V81
0x10b: V84 = CALLDATALOAD V83
0x10d: V85 = 0x20
0x10f: V86 = 0x1f
0x112: V87 = ADD V84 0x1f
0x115: V88 = DIV V87 0x20
0x117: V89 = MUL 0x20 V88
0x118: V90 = ADD V89 0x20
0x119: V91 = 0x40
0x11b: V92 = M[0x40]
0x11e: V93 = ADD V92 V90
0x11f: V94 = 0x40
0x121: M[0x40] = V93
0x124: M[V92] = V84
0x128: V95 = 0x20
0x12b: V96 = ADD V92 0x20
0x131: CALLDATACOPY V96 V82 V84
0x136: V97 = 0x3ca
0x140: JUMP 0x3ca
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xa5, V92]
Exit stack: [V11, 0xa5, V92]

================================

Block 0x141
[0x141:0x147]
---
Predecessors: [0x77]
Successors: [0x148, 0x14c]
---
0x141 JUMPDEST
0x142 CALLVALUE
0x143 ISZERO
0x144 PUSH2 0x14c
0x147 JUMPI
---
0x141: JUMPDEST 
0x142: V98 = CALLVALUE
0x143: V99 = ISZERO V98
0x144: V100 = 0x14c
0x147: JUMPI 0x14c V99
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x148
[0x148:0x14b]
---
Predecessors: [0x141]
Successors: []
---
0x148 PUSH1 0x0
0x14a DUP1
0x14b REVERT
---
0x148: V101 = 0x0
0x14b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14c
[0x14c:0x153]
---
Predecessors: [0x141]
Successors: [0x42f]
---
0x14c JUMPDEST
0x14d PUSH2 0x154
0x150 PUSH2 0x42f
0x153 JUMP
---
0x14c: JUMPDEST 
0x14d: V102 = 0x154
0x150: V103 = 0x42f
0x153: JUMP 0x42f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x154]
Exit stack: [V11, 0x154]

================================

Block 0x154
[0x154:0x167]
---
Predecessors: [0x42f]
Successors: []
---
0x154 JUMPDEST
0x155 PUSH1 0x40
0x157 MLOAD
0x158 SWAP1
0x159 ISZERO
0x15a ISZERO
0x15b DUP2
0x15c MSTORE
0x15d PUSH1 0x20
0x15f ADD
0x160 PUSH1 0x40
0x162 MLOAD
0x163 DUP1
0x164 SWAP2
0x165 SUB
0x166 SWAP1
0x167 RETURN
---
0x154: JUMPDEST 
0x155: V104 = 0x40
0x157: V105 = M[0x40]
0x159: V106 = ISZERO V389
0x15a: V107 = ISZERO V106
0x15c: M[V105] = V107
0x15d: V108 = 0x20
0x15f: V109 = ADD 0x20 V105
0x160: V110 = 0x40
0x162: V111 = M[0x40]
0x165: V112 = SUB V109 V111
0x167: RETURN V111 V112
---
Entry stack: [V11, 0x154, V389]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x154]

================================

Block 0x168
[0x168:0x175]
---
Predecessors: [0x84]
Successors: [0x176, 0x182]
---
0x168 JUMPDEST
0x169 PUSH1 0x2
0x16b SLOAD
0x16c PUSH1 0xff
0x16e AND
0x16f ISZERO
0x170 DUP1
0x171 ISZERO
0x172 PUSH2 0x182
0x175 JUMPI
---
0x168: JUMPDEST 
0x169: V113 = 0x2
0x16b: V114 = S[0x2]
0x16c: V115 = 0xff
0x16e: V116 = AND 0xff V114
0x16f: V117 = ISZERO V116
0x171: V118 = ISZERO V117
0x172: V119 = 0x182
0x175: JUMPI 0x182 V118
---
Entry stack: [V11, 0x82, V35, V37]
Stack pops: 0
Stack additions: [V117]
Exit stack: [V11, 0x82, V35, V37, V117]

================================

Block 0x176
[0x176:0x181]
---
Predecessors: [0x168]
Successors: [0x182]
---
0x176 POP
0x177 PUSH8 0x429d069189e0000
0x180 CALLVALUE
0x181 GT
---
0x177: V120 = 0x429d069189e0000
0x180: V121 = CALLVALUE
0x181: V122 = GT V121 0x429d069189e0000
---
Entry stack: [V11, 0x82, V35, V37, V117]
Stack pops: 1
Stack additions: [V122]
Exit stack: [V11, 0x82, V35, V37, V122]

================================

Block 0x182
[0x182:0x187]
---
Predecessors: [0x168, 0x176]
Successors: [0x188, 0x193]
---
0x182 JUMPDEST
0x183 ISZERO
0x184 PUSH2 0x193
0x187 JUMPI
---
0x182: JUMPDEST 
0x183: V123 = ISZERO S0
0x184: V124 = 0x193
0x187: JUMPI 0x193 V123
---
Entry stack: [V11, 0x82, V35, V37, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x82, V35, V37]

================================

Block 0x188
[0x188:0x192]
---
Predecessors: [0x182]
Successors: [0x193]
---
0x188 TIMESTAMP
0x189 DUP2
0x18a ADD
0x18b PUSH1 0x1
0x18d SSTORE
0x18e PUSH1 0x0
0x190 DUP3
0x191 SWAP1
0x192 SSTORE
---
0x188: V125 = TIMESTAMP
0x18a: V126 = ADD V37 V125
0x18b: V127 = 0x1
0x18d: S[0x1] = V126
0x18e: V128 = 0x0
0x192: S[0x0] = V35
---
Entry stack: [V11, 0x82, V35, V37]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x82, V35, V37]

================================

Block 0x193
[0x193:0x196]
---
Predecessors: [0x182, 0x188]
Successors: [0x82]
---
0x193 JUMPDEST
0x194 POP
0x195 POP
0x196 JUMP
---
0x193: JUMPDEST 
0x196: JUMP 0x82
---
Entry stack: [V11, 0x82, V35, V37]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x197
[0x197:0x19c]
---
Predecessors: [0x9d]
Successors: [0xa5]
---
0x197 JUMPDEST
0x198 PUSH1 0x1
0x19a SLOAD
0x19b DUP2
0x19c JUMP
---
0x197: JUMPDEST 
0x198: V129 = 0x1
0x19a: V130 = S[0x1]
0x19c: JUMP 0xa5
---
Entry stack: [V11, 0xa5]
Stack pops: 1
Stack additions: [S0, V130]
Exit stack: [V11, 0xa5, V130]

================================

Block 0x19d
[0x19d:0x1de]
---
Predecessors: [0xb7]
Successors: [0x1df]
---
0x19d JUMPDEST
0x19e DUP2
0x19f DUP2
0x1a0 DUP1
0x1a1 DUP1
0x1a2 PUSH1 0x1f
0x1a4 ADD
0x1a5 PUSH1 0x20
0x1a7 DUP1
0x1a8 SWAP2
0x1a9 DIV
0x1aa MUL
0x1ab PUSH1 0x20
0x1ad ADD
0x1ae PUSH1 0x40
0x1b0 MLOAD
0x1b1 SWAP1
0x1b2 DUP2
0x1b3 ADD
0x1b4 PUSH1 0x40
0x1b6 MSTORE
0x1b7 DUP2
0x1b8 DUP2
0x1b9 MSTORE
0x1ba SWAP3
0x1bb SWAP2
0x1bc SWAP1
0x1bd PUSH1 0x20
0x1bf DUP5
0x1c0 ADD
0x1c1 DUP4
0x1c2 DUP4
0x1c3 DUP1
0x1c4 DUP3
0x1c5 DUP5
0x1c6 CALLDATACOPY
0x1c7 POP
0x1c8 DUP6
0x1c9 SWAP5
0x1ca POP
0x1cb PUSH1 0x40
0x1cd SWAP4
0x1ce POP
0x1cf POP
0x1d0 POP
0x1d1 POP
0x1d2 MLOAD
0x1d3 DUP1
0x1d4 DUP3
0x1d5 DUP1
0x1d6 MLOAD
0x1d7 SWAP1
0x1d8 PUSH1 0x20
0x1da ADD
0x1db SWAP1
0x1dc DUP1
0x1dd DUP4
0x1de DUP4
---
0x19d: JUMPDEST 
0x1a2: V131 = 0x1f
0x1a4: V132 = ADD 0x1f V58
0x1a5: V133 = 0x20
0x1a9: V134 = DIV V132 0x20
0x1aa: V135 = MUL V134 0x20
0x1ab: V136 = 0x20
0x1ad: V137 = ADD 0x20 V135
0x1ae: V138 = 0x40
0x1b0: V139 = M[0x40]
0x1b3: V140 = ADD V139 V137
0x1b4: V141 = 0x40
0x1b6: M[0x40] = V140
0x1b9: M[V139] = V58
0x1bd: V142 = 0x20
0x1c0: V143 = ADD V139 0x20
0x1c6: CALLDATACOPY V143 V56 V58
0x1cb: V144 = 0x40
0x1d2: V145 = M[0x40]
0x1d6: V146 = M[V139]
0x1d8: V147 = 0x20
0x1da: V148 = ADD 0x20 V139
---
Entry stack: [V11, 0x82, V56, V58]
Stack pops: 2
Stack additions: [S1, S0, V139, V139, V145, V145, V148, V146, V146, V145, V148]
Exit stack: [V11, 0x82, V56, V58, V139, V139, V145, V145, V148, V146, V146, V145, V148]

================================

Block 0x1df
[0x1df:0x1e7]
---
Predecessors: [0x19d, 0x1e8]
Successors: [0x1e8, 0x1fe]
---
0x1df JUMPDEST
0x1e0 PUSH1 0x20
0x1e2 DUP4
0x1e3 LT
0x1e4 PUSH2 0x1fe
0x1e7 JUMPI
---
0x1df: JUMPDEST 
0x1e0: V149 = 0x20
0x1e3: V150 = LT S2 0x20
0x1e4: V151 = 0x1fe
0x1e7: JUMPI 0x1fe V150
---
Entry stack: [V11, 0x82, V56, V58, V139, V139, V145, V145, V148, V146, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x82, V56, V58, V139, V139, V145, V145, V148, V146, S2, S1, S0]

================================

Block 0x1e8
[0x1e8:0x1fd]
---
Predecessors: [0x1df]
Successors: [0x1df]
---
0x1e8 DUP1
0x1e9 MLOAD
0x1ea DUP3
0x1eb MSTORE
0x1ec PUSH1 0x1f
0x1ee NOT
0x1ef SWAP1
0x1f0 SWAP3
0x1f1 ADD
0x1f2 SWAP2
0x1f3 PUSH1 0x20
0x1f5 SWAP2
0x1f6 DUP3
0x1f7 ADD
0x1f8 SWAP2
0x1f9 ADD
0x1fa PUSH2 0x1df
0x1fd JUMP
---
0x1e9: V152 = M[S0]
0x1eb: M[S1] = V152
0x1ec: V153 = 0x1f
0x1ee: V154 = NOT 0x1f
0x1f1: V155 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x1f3: V156 = 0x20
0x1f7: V157 = ADD 0x20 S1
0x1f9: V158 = ADD 0x20 S0
0x1fa: V159 = 0x1df
0x1fd: JUMP 0x1df
---
Entry stack: [V11, 0x82, V56, V58, V139, V139, V145, V145, V148, V146, S2, S1, S0]
Stack pops: 3
Stack additions: [V155, V157, V158]
Exit stack: [V11, 0x82, V56, V58, V139, V139, V145, V145, V148, V146, V155, V157, V158]

================================

Block 0x1fe
[0x1fe:0x235]
---
Predecessors: [0x1df]
Successors: [0x236, 0x23c]
---
0x1fe JUMPDEST
0x1ff PUSH1 0x1
0x201 DUP4
0x202 PUSH1 0x20
0x204 SUB
0x205 PUSH2 0x100
0x208 EXP
0x209 SUB
0x20a DUP1
0x20b NOT
0x20c DUP3
0x20d MLOAD
0x20e AND
0x20f DUP2
0x210 DUP5
0x211 MLOAD
0x212 AND
0x213 OR
0x214 SWAP1
0x215 SWAP3
0x216 MSTORE
0x217 POP
0x218 POP
0x219 POP
0x21a SWAP2
0x21b SWAP1
0x21c SWAP2
0x21d ADD
0x21e SWAP3
0x21f POP
0x220 PUSH1 0x40
0x222 SWAP2
0x223 POP
0x224 POP
0x225 MLOAD
0x226 SWAP1
0x227 DUP2
0x228 SWAP1
0x229 SUB
0x22a SWAP1
0x22b SHA3
0x22c PUSH1 0x0
0x22e SLOAD
0x22f EQ
0x230 DUP1
0x231 ISZERO
0x232 PUSH2 0x23c
0x235 JUMPI
---
0x1fe: JUMPDEST 
0x1ff: V160 = 0x1
0x202: V161 = 0x20
0x204: V162 = SUB 0x20 S2
0x205: V163 = 0x100
0x208: V164 = EXP 0x100 V162
0x209: V165 = SUB V164 0x1
0x20b: V166 = NOT V165
0x20d: V167 = M[S0]
0x20e: V168 = AND V167 V166
0x211: V169 = M[S1]
0x212: V170 = AND V169 V165
0x213: V171 = OR V170 V168
0x216: M[S1] = V171
0x21d: V172 = ADD V146 V145
0x220: V173 = 0x40
0x225: V174 = M[0x40]
0x229: V175 = SUB V172 V174
0x22b: V176 = SHA3 V174 V175
0x22c: V177 = 0x0
0x22e: V178 = S[0x0]
0x22f: V179 = EQ V178 V176
0x231: V180 = ISZERO V179
0x232: V181 = 0x23c
0x235: JUMPI 0x23c V180
---
Entry stack: [V11, 0x82, V56, V58, V139, V139, V145, V145, V148, V146, S2, S1, S0]
Stack pops: 8
Stack additions: [V179]
Exit stack: [V11, 0x82, V56, V58, V139, V179]

================================

Block 0x236
[0x236:0x23b]
---
Predecessors: [0x1fe]
Successors: [0x23c]
---
0x236 POP
0x237 PUSH1 0x1
0x239 SLOAD
0x23a TIMESTAMP
0x23b GT
---
0x237: V182 = 0x1
0x239: V183 = S[0x1]
0x23a: V184 = TIMESTAMP
0x23b: V185 = GT V184 V183
---
Entry stack: [V11, 0x82, V56, V58, V139, V179]
Stack pops: 1
Stack additions: [V185]
Exit stack: [V11, 0x82, V56, V58, V139, V185]

================================

Block 0x23c
[0x23c:0x242]
---
Predecessors: [0x1fe, 0x236]
Successors: [0x243, 0x259]
---
0x23c JUMPDEST
0x23d DUP1
0x23e ISZERO
0x23f PUSH2 0x259
0x242 JUMPI
---
0x23c: JUMPDEST 
0x23e: V186 = ISZERO S0
0x23f: V187 = 0x259
0x242: JUMPI 0x259 V186
---
Entry stack: [V11, 0x82, V56, V58, V139, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x82, V56, V58, V139, S0]

================================

Block 0x243
[0x243:0x258]
---
Predecessors: [0x23c]
Successors: [0x259]
---
0x243 POP
0x244 ORIGIN
0x245 PUSH1 0x1
0x247 PUSH1 0xa0
0x249 PUSH1 0x2
0x24b EXP
0x24c SUB
0x24d AND
0x24e CALLER
0x24f PUSH1 0x1
0x251 PUSH1 0xa0
0x253 PUSH1 0x2
0x255 EXP
0x256 SUB
0x257 AND
0x258 EQ
---
0x244: V188 = ORIGIN
0x245: V189 = 0x1
0x247: V190 = 0xa0
0x249: V191 = 0x2
0x24b: V192 = EXP 0x2 0xa0
0x24c: V193 = SUB 0x10000000000000000000000000000000000000000 0x1
0x24d: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x24e: V195 = CALLER
0x24f: V196 = 0x1
0x251: V197 = 0xa0
0x253: V198 = 0x2
0x255: V199 = EXP 0x2 0xa0
0x256: V200 = SUB 0x10000000000000000000000000000000000000000 0x1
0x257: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V195
0x258: V202 = EQ V201 V194
---
Entry stack: [V11, 0x82, V56, V58, V139, S0]
Stack pops: 1
Stack additions: [V202]
Exit stack: [V11, 0x82, V56, V58, V139, V202]

================================

Block 0x259
[0x259:0x25e]
---
Predecessors: [0x23c, 0x243]
Successors: [0x25f, 0x2ec]
---
0x259 JUMPDEST
0x25a ISZERO
0x25b PUSH2 0x2ec
0x25e JUMPI
---
0x259: JUMPDEST 
0x25a: V203 = ISZERO S0
0x25b: V204 = 0x2ec
0x25e: JUMPI 0x2ec V203
---
Entry stack: [V11, 0x82, V56, V58, V139, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x82, V56, V58, V139]

================================

Block 0x25f
[0x25f:0x286]
---
Predecessors: [0x259]
Successors: [0x287, 0x28d]
---
0x25f DUP3
0x260 DUP3
0x261 PUSH1 0x40
0x263 MLOAD
0x264 DUP1
0x265 DUP4
0x266 DUP4
0x267 DUP1
0x268 DUP3
0x269 DUP5
0x26a CALLDATACOPY
0x26b DUP3
0x26c ADD
0x26d SWAP2
0x26e POP
0x26f POP
0x270 SWAP3
0x271 POP
0x272 POP
0x273 POP
0x274 PUSH1 0x40
0x276 MLOAD
0x277 SWAP1
0x278 DUP2
0x279 SWAP1
0x27a SUB
0x27b SWAP1
0x27c SHA3
0x27d PUSH1 0x0
0x27f SLOAD
0x280 EQ
0x281 DUP1
0x282 ISZERO
0x283 PUSH2 0x28d
0x286 JUMPI
---
0x261: V205 = 0x40
0x263: V206 = M[0x40]
0x26a: CALLDATACOPY V206 V56 V58
0x26c: V207 = ADD V206 V58
0x274: V208 = 0x40
0x276: V209 = M[0x40]
0x27a: V210 = SUB V207 V209
0x27c: V211 = SHA3 V209 V210
0x27d: V212 = 0x0
0x27f: V213 = S[0x0]
0x280: V214 = EQ V213 V211
0x282: V215 = ISZERO V214
0x283: V216 = 0x28d
0x286: JUMPI 0x28d V215
---
Entry stack: [V11, 0x82, V56, V58, V139]
Stack pops: 3
Stack additions: [S2, S1, S0, V214]
Exit stack: [V11, 0x82, V56, V58, V139, V214]

================================

Block 0x287
[0x287:0x28c]
---
Predecessors: [0x25f]
Successors: [0x28d]
---
0x287 POP
0x288 PUSH1 0x1
0x28a SLOAD
0x28b TIMESTAMP
0x28c GT
---
0x288: V217 = 0x1
0x28a: V218 = S[0x1]
0x28b: V219 = TIMESTAMP
0x28c: V220 = GT V219 V218
---
Entry stack: [V11, 0x82, V56, V58, V139, V214]
Stack pops: 1
Stack additions: [V220]
Exit stack: [V11, 0x82, V56, V58, V139, V220]

================================

Block 0x28d
[0x28d:0x293]
---
Predecessors: [0x25f, 0x287]
Successors: [0x294, 0x2aa]
---
0x28d JUMPDEST
0x28e DUP1
0x28f ISZERO
0x290 PUSH2 0x2aa
0x293 JUMPI
---
0x28d: JUMPDEST 
0x28f: V221 = ISZERO S0
0x290: V222 = 0x2aa
0x293: JUMPI 0x2aa V221
---
Entry stack: [V11, 0x82, V56, V58, V139, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x82, V56, V58, V139, S0]

================================

Block 0x294
[0x294:0x2a9]
---
Predecessors: [0x28d]
Successors: [0x2aa]
---
0x294 POP
0x295 ORIGIN
0x296 PUSH1 0x1
0x298 PUSH1 0xa0
0x29a PUSH1 0x2
0x29c EXP
0x29d SUB
0x29e AND
0x29f CALLER
0x2a0 PUSH1 0x1
0x2a2 PUSH1 0xa0
0x2a4 PUSH1 0x2
0x2a6 EXP
0x2a7 SUB
0x2a8 AND
0x2a9 EQ
---
0x295: V223 = ORIGIN
0x296: V224 = 0x1
0x298: V225 = 0xa0
0x29a: V226 = 0x2
0x29c: V227 = EXP 0x2 0xa0
0x29d: V228 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29e: V229 = AND 0xffffffffffffffffffffffffffffffffffffffff V223
0x29f: V230 = CALLER
0x2a0: V231 = 0x1
0x2a2: V232 = 0xa0
0x2a4: V233 = 0x2
0x2a6: V234 = EXP 0x2 0xa0
0x2a7: V235 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a8: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x2a9: V237 = EQ V236 V229
---
Entry stack: [V11, 0x82, V56, V58, V139, S0]
Stack pops: 1
Stack additions: [V237]
Exit stack: [V11, 0x82, V56, V58, V139, V237]

================================

Block 0x2aa
[0x2aa:0x2af]
---
Predecessors: [0x28d, 0x294]
Successors: [0x2b0, 0x2ec]
---
0x2aa JUMPDEST
0x2ab ISZERO
0x2ac PUSH2 0x2ec
0x2af JUMPI
---
0x2aa: JUMPDEST 
0x2ab: V238 = ISZERO S0
0x2ac: V239 = 0x2ec
0x2af: JUMPI 0x2ec V238
---
Entry stack: [V11, 0x82, V56, V58, V139, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x82, V56, V58, V139]

================================

Block 0x2b0
[0x2b0:0x2e7]
---
Predecessors: [0x2aa]
Successors: [0x2e8, 0x2ec]
---
0x2b0 CALLER
0x2b1 PUSH1 0x1
0x2b3 PUSH1 0xa0
0x2b5 PUSH1 0x2
0x2b7 EXP
0x2b8 SUB
0x2b9 AND
0x2ba PUSH2 0x8fc
0x2bd ADDRESS
0x2be PUSH1 0x1
0x2c0 PUSH1 0xa0
0x2c2 PUSH1 0x2
0x2c4 EXP
0x2c5 SUB
0x2c6 AND
0x2c7 BALANCE
0x2c8 SWAP1
0x2c9 DUP2
0x2ca ISZERO
0x2cb MUL
0x2cc SWAP1
0x2cd PUSH1 0x40
0x2cf MLOAD
0x2d0 PUSH1 0x0
0x2d2 PUSH1 0x40
0x2d4 MLOAD
0x2d5 DUP1
0x2d6 DUP4
0x2d7 SUB
0x2d8 DUP2
0x2d9 DUP6
0x2da DUP9
0x2db DUP9
0x2dc CALL
0x2dd SWAP4
0x2de POP
0x2df POP
0x2e0 POP
0x2e1 POP
0x2e2 ISZERO
0x2e3 ISZERO
0x2e4 PUSH2 0x2ec
0x2e7 JUMPI
---
0x2b0: V240 = CALLER
0x2b1: V241 = 0x1
0x2b3: V242 = 0xa0
0x2b5: V243 = 0x2
0x2b7: V244 = EXP 0x2 0xa0
0x2b8: V245 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2b9: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x2ba: V247 = 0x8fc
0x2bd: V248 = ADDRESS
0x2be: V249 = 0x1
0x2c0: V250 = 0xa0
0x2c2: V251 = 0x2
0x2c4: V252 = EXP 0x2 0xa0
0x2c5: V253 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c6: V254 = AND 0xffffffffffffffffffffffffffffffffffffffff V248
0x2c7: V255 = BALANCE V254
0x2ca: V256 = ISZERO V255
0x2cb: V257 = MUL V256 0x8fc
0x2cd: V258 = 0x40
0x2cf: V259 = M[0x40]
0x2d0: V260 = 0x0
0x2d2: V261 = 0x40
0x2d4: V262 = M[0x40]
0x2d7: V263 = SUB V259 V262
0x2dc: V264 = CALL V257 V246 V255 V262 V263 V262 0x0
0x2e2: V265 = ISZERO V264
0x2e3: V266 = ISZERO V265
0x2e4: V267 = 0x2ec
0x2e7: JUMPI 0x2ec V266
---
Entry stack: [V11, 0x82, V56, V58, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V56, V58, V139]

================================

Block 0x2e8
[0x2e8:0x2eb]
---
Predecessors: [0x2b0]
Successors: []
---
0x2e8 PUSH1 0x0
0x2ea DUP1
0x2eb REVERT
---
0x2e8: V268 = 0x0
0x2eb: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V56, V58, V139]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V56, V58, V139]

================================

Block 0x2ec
[0x2ec:0x2f0]
---
Predecessors: [0x259, 0x2aa, 0x2b0, 0x3b3]
Successors: [0x82]
---
0x2ec JUMPDEST
0x2ed POP
0x2ee POP
0x2ef POP
0x2f0 JUMP
---
0x2ec: JUMPDEST 
0x2f0: JUMP 0x82
---
Entry stack: [V11, 0x82, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f1
[0x2f1:0x2f6]
---
Predecessors: [0xd5]
Successors: [0xa5]
---
0x2f1 JUMPDEST
0x2f2 PUSH1 0x0
0x2f4 SLOAD
0x2f5 DUP2
0x2f6 JUMP
---
0x2f1: JUMPDEST 
0x2f2: V269 = 0x0
0x2f4: V270 = S[0x0]
0x2f6: JUMP 0xa5
---
Entry stack: [V11, 0xa5]
Stack pops: 1
Stack additions: [S0, V270]
Exit stack: [V11, 0xa5, V270]

================================

Block 0x2f7
[0x2f7:0x338]
---
Predecessors: [0xdd]
Successors: [0x339]
---
0x2f7 JUMPDEST
0x2f8 DUP2
0x2f9 DUP2
0x2fa DUP1
0x2fb DUP1
0x2fc PUSH1 0x1f
0x2fe ADD
0x2ff PUSH1 0x20
0x301 DUP1
0x302 SWAP2
0x303 DIV
0x304 MUL
0x305 PUSH1 0x20
0x307 ADD
0x308 PUSH1 0x40
0x30a MLOAD
0x30b SWAP1
0x30c DUP2
0x30d ADD
0x30e PUSH1 0x40
0x310 MSTORE
0x311 DUP2
0x312 DUP2
0x313 MSTORE
0x314 SWAP3
0x315 SWAP2
0x316 SWAP1
0x317 PUSH1 0x20
0x319 DUP5
0x31a ADD
0x31b DUP4
0x31c DUP4
0x31d DUP1
0x31e DUP3
0x31f DUP5
0x320 CALLDATACOPY
0x321 POP
0x322 DUP6
0x323 SWAP5
0x324 POP
0x325 PUSH1 0x40
0x327 SWAP4
0x328 POP
0x329 POP
0x32a POP
0x32b POP
0x32c MLOAD
0x32d DUP1
0x32e DUP3
0x32f DUP1
0x330 MLOAD
0x331 SWAP1
0x332 PUSH1 0x20
0x334 ADD
0x335 SWAP1
0x336 DUP1
0x337 DUP4
0x338 DUP4
---
0x2f7: JUMPDEST 
0x2fc: V271 = 0x1f
0x2fe: V272 = ADD 0x1f V72
0x2ff: V273 = 0x20
0x303: V274 = DIV V272 0x20
0x304: V275 = MUL V274 0x20
0x305: V276 = 0x20
0x307: V277 = ADD 0x20 V275
0x308: V278 = 0x40
0x30a: V279 = M[0x40]
0x30d: V280 = ADD V279 V277
0x30e: V281 = 0x40
0x310: M[0x40] = V280
0x313: M[V279] = V72
0x317: V282 = 0x20
0x31a: V283 = ADD V279 0x20
0x320: CALLDATACOPY V283 V70 V72
0x325: V284 = 0x40
0x32c: V285 = M[0x40]
0x330: V286 = M[V279]
0x332: V287 = 0x20
0x334: V288 = ADD 0x20 V279
---
Entry stack: [V11, 0x82, V70, V72]
Stack pops: 2
Stack additions: [S1, S0, V279, V279, V285, V285, V288, V286, V286, V285, V288]
Exit stack: [V11, 0x82, V70, V72, V279, V279, V285, V285, V288, V286, V286, V285, V288]

================================

Block 0x339
[0x339:0x341]
---
Predecessors: [0x2f7, 0x342]
Successors: [0x342, 0x358]
---
0x339 JUMPDEST
0x33a PUSH1 0x20
0x33c DUP4
0x33d LT
0x33e PUSH2 0x358
0x341 JUMPI
---
0x339: JUMPDEST 
0x33a: V289 = 0x20
0x33d: V290 = LT S2 0x20
0x33e: V291 = 0x358
0x341: JUMPI 0x358 V290
---
Entry stack: [V11, 0x82, V70, V72, V279, V279, V285, V285, V288, V286, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x82, V70, V72, V279, V279, V285, V285, V288, V286, S2, S1, S0]

================================

Block 0x342
[0x342:0x357]
---
Predecessors: [0x339]
Successors: [0x339]
---
0x342 DUP1
0x343 MLOAD
0x344 DUP3
0x345 MSTORE
0x346 PUSH1 0x1f
0x348 NOT
0x349 SWAP1
0x34a SWAP3
0x34b ADD
0x34c SWAP2
0x34d PUSH1 0x20
0x34f SWAP2
0x350 DUP3
0x351 ADD
0x352 SWAP2
0x353 ADD
0x354 PUSH2 0x339
0x357 JUMP
---
0x343: V292 = M[S0]
0x345: M[S1] = V292
0x346: V293 = 0x1f
0x348: V294 = NOT 0x1f
0x34b: V295 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x34d: V296 = 0x20
0x351: V297 = ADD 0x20 S1
0x353: V298 = ADD 0x20 S0
0x354: V299 = 0x339
0x357: JUMP 0x339
---
Entry stack: [V11, 0x82, V70, V72, V279, V279, V285, V285, V288, V286, S2, S1, S0]
Stack pops: 3
Stack additions: [V295, V297, V298]
Exit stack: [V11, 0x82, V70, V72, V279, V279, V285, V285, V288, V286, V295, V297, V298]

================================

Block 0x358
[0x358:0x38f]
---
Predecessors: [0x339]
Successors: [0x390, 0x396]
---
0x358 JUMPDEST
0x359 PUSH1 0x1
0x35b DUP4
0x35c PUSH1 0x20
0x35e SUB
0x35f PUSH2 0x100
0x362 EXP
0x363 SUB
0x364 DUP1
0x365 NOT
0x366 DUP3
0x367 MLOAD
0x368 AND
0x369 DUP2
0x36a DUP5
0x36b MLOAD
0x36c AND
0x36d OR
0x36e SWAP1
0x36f SWAP3
0x370 MSTORE
0x371 POP
0x372 POP
0x373 POP
0x374 SWAP2
0x375 SWAP1
0x376 SWAP2
0x377 ADD
0x378 SWAP3
0x379 POP
0x37a PUSH1 0x40
0x37c SWAP2
0x37d POP
0x37e POP
0x37f MLOAD
0x380 SWAP1
0x381 DUP2
0x382 SWAP1
0x383 SUB
0x384 SWAP1
0x385 SHA3
0x386 PUSH1 0x0
0x388 SLOAD
0x389 EQ
0x38a DUP1
0x38b ISZERO
0x38c PUSH2 0x396
0x38f JUMPI
---
0x358: JUMPDEST 
0x359: V300 = 0x1
0x35c: V301 = 0x20
0x35e: V302 = SUB 0x20 S2
0x35f: V303 = 0x100
0x362: V304 = EXP 0x100 V302
0x363: V305 = SUB V304 0x1
0x365: V306 = NOT V305
0x367: V307 = M[S0]
0x368: V308 = AND V307 V306
0x36b: V309 = M[S1]
0x36c: V310 = AND V309 V305
0x36d: V311 = OR V310 V308
0x370: M[S1] = V311
0x377: V312 = ADD V286 V285
0x37a: V313 = 0x40
0x37f: V314 = M[0x40]
0x383: V315 = SUB V312 V314
0x385: V316 = SHA3 V314 V315
0x386: V317 = 0x0
0x388: V318 = S[0x0]
0x389: V319 = EQ V318 V316
0x38b: V320 = ISZERO V319
0x38c: V321 = 0x396
0x38f: JUMPI 0x396 V320
---
Entry stack: [V11, 0x82, V70, V72, V279, V279, V285, V285, V288, V286, S2, S1, S0]
Stack pops: 8
Stack additions: [V319]
Exit stack: [V11, 0x82, V70, V72, V279, V319]

================================

Block 0x390
[0x390:0x395]
---
Predecessors: [0x358]
Successors: [0x396]
---
0x390 POP
0x391 PUSH1 0x1
0x393 SLOAD
0x394 TIMESTAMP
0x395 GT
---
0x391: V322 = 0x1
0x393: V323 = S[0x1]
0x394: V324 = TIMESTAMP
0x395: V325 = GT V324 V323
---
Entry stack: [V11, 0x82, V70, V72, V279, V319]
Stack pops: 1
Stack additions: [V325]
Exit stack: [V11, 0x82, V70, V72, V279, V325]

================================

Block 0x396
[0x396:0x39c]
---
Predecessors: [0x358, 0x390]
Successors: [0x39d, 0x3b3]
---
0x396 JUMPDEST
0x397 DUP1
0x398 ISZERO
0x399 PUSH2 0x3b3
0x39c JUMPI
---
0x396: JUMPDEST 
0x398: V326 = ISZERO S0
0x399: V327 = 0x3b3
0x39c: JUMPI 0x3b3 V326
---
Entry stack: [V11, 0x82, V70, V72, V279, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x82, V70, V72, V279, S0]

================================

Block 0x39d
[0x39d:0x3b2]
---
Predecessors: [0x396]
Successors: [0x3b3]
---
0x39d POP
0x39e ORIGIN
0x39f PUSH1 0x1
0x3a1 PUSH1 0xa0
0x3a3 PUSH1 0x2
0x3a5 EXP
0x3a6 SUB
0x3a7 AND
0x3a8 CALLER
0x3a9 PUSH1 0x1
0x3ab PUSH1 0xa0
0x3ad PUSH1 0x2
0x3af EXP
0x3b0 SUB
0x3b1 AND
0x3b2 EQ
---
0x39e: V328 = ORIGIN
0x39f: V329 = 0x1
0x3a1: V330 = 0xa0
0x3a3: V331 = 0x2
0x3a5: V332 = EXP 0x2 0xa0
0x3a6: V333 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a7: V334 = AND 0xffffffffffffffffffffffffffffffffffffffff V328
0x3a8: V335 = CALLER
0x3a9: V336 = 0x1
0x3ab: V337 = 0xa0
0x3ad: V338 = 0x2
0x3af: V339 = EXP 0x2 0xa0
0x3b0: V340 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3b1: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V335
0x3b2: V342 = EQ V341 V334
---
Entry stack: [V11, 0x82, V70, V72, V279, S0]
Stack pops: 1
Stack additions: [V342]
Exit stack: [V11, 0x82, V70, V72, V279, V342]

================================

Block 0x3b3
[0x3b3:0x3b8]
---
Predecessors: [0x396, 0x39d]
Successors: [0x2ec, 0x3b9]
---
0x3b3 JUMPDEST
0x3b4 ISZERO
0x3b5 PUSH2 0x2ec
0x3b8 JUMPI
---
0x3b3: JUMPDEST 
0x3b4: V343 = ISZERO S0
0x3b5: V344 = 0x2ec
0x3b8: JUMPI 0x2ec V343
---
Entry stack: [V11, 0x82, V70, V72, V279, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x82, V70, V72, V279]

================================

Block 0x3b9
[0x3b9:0x3c9]
---
Predecessors: [0x3b3]
Successors: [0x82]
---
0x3b9 PUSH1 0x2
0x3bb DUP1
0x3bc SLOAD
0x3bd PUSH1 0xff
0x3bf NOT
0x3c0 AND
0x3c1 PUSH1 0x1
0x3c3 OR
0x3c4 SWAP1
0x3c5 SSTORE
0x3c6 POP
0x3c7 POP
0x3c8 POP
0x3c9 JUMP
---
0x3b9: V345 = 0x2
0x3bc: V346 = S[0x2]
0x3bd: V347 = 0xff
0x3bf: V348 = NOT 0xff
0x3c0: V349 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V346
0x3c1: V350 = 0x1
0x3c3: V351 = OR 0x1 V349
0x3c5: S[0x2] = V351
0x3c9: JUMP 0x82
---
Entry stack: [V11, 0x82, V70, V72, V279]
Stack pops: 4
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ca
[0x3ca:0x3dc]
---
Predecessors: [0xfb]
Successors: [0x3dd]
---
0x3ca JUMPDEST
0x3cb PUSH1 0x0
0x3cd DUP2
0x3ce PUSH1 0x40
0x3d0 MLOAD
0x3d1 DUP1
0x3d2 DUP3
0x3d3 DUP1
0x3d4 MLOAD
0x3d5 SWAP1
0x3d6 PUSH1 0x20
0x3d8 ADD
0x3d9 SWAP1
0x3da DUP1
0x3db DUP4
0x3dc DUP4
---
0x3ca: JUMPDEST 
0x3cb: V352 = 0x0
0x3ce: V353 = 0x40
0x3d0: V354 = M[0x40]
0x3d4: V355 = M[V92]
0x3d6: V356 = 0x20
0x3d8: V357 = ADD 0x20 V92
---
Entry stack: [V11, 0xa5, V92]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V354, V354, V357, V355, V355, V354, V357]
Exit stack: [V11, 0xa5, V92, 0x0, V92, V354, V354, V357, V355, V355, V354, V357]

================================

Block 0x3dd
[0x3dd:0x3e5]
---
Predecessors: [0x3ca, 0x3e6]
Successors: [0x3e6, 0x3fc]
---
0x3dd JUMPDEST
0x3de PUSH1 0x20
0x3e0 DUP4
0x3e1 LT
0x3e2 PUSH2 0x3fc
0x3e5 JUMPI
---
0x3dd: JUMPDEST 
0x3de: V358 = 0x20
0x3e1: V359 = LT S2 0x20
0x3e2: V360 = 0x3fc
0x3e5: JUMPI 0x3fc V359
---
Entry stack: [V11, 0xa5, V92, 0x0, V92, V354, V354, V357, V355, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0xa5, V92, 0x0, V92, V354, V354, V357, V355, S2, S1, S0]

================================

Block 0x3e6
[0x3e6:0x3fb]
---
Predecessors: [0x3dd]
Successors: [0x3dd]
---
0x3e6 DUP1
0x3e7 MLOAD
0x3e8 DUP3
0x3e9 MSTORE
0x3ea PUSH1 0x1f
0x3ec NOT
0x3ed SWAP1
0x3ee SWAP3
0x3ef ADD
0x3f0 SWAP2
0x3f1 PUSH1 0x20
0x3f3 SWAP2
0x3f4 DUP3
0x3f5 ADD
0x3f6 SWAP2
0x3f7 ADD
0x3f8 PUSH2 0x3dd
0x3fb JUMP
---
0x3e7: V361 = M[S0]
0x3e9: M[S1] = V361
0x3ea: V362 = 0x1f
0x3ec: V363 = NOT 0x1f
0x3ef: V364 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x3f1: V365 = 0x20
0x3f5: V366 = ADD 0x20 S1
0x3f7: V367 = ADD 0x20 S0
0x3f8: V368 = 0x3dd
0x3fb: JUMP 0x3dd
---
Entry stack: [V11, 0xa5, V92, 0x0, V92, V354, V354, V357, V355, S2, S1, S0]
Stack pops: 3
Stack additions: [V364, V366, V367]
Exit stack: [V11, 0xa5, V92, 0x0, V92, V354, V354, V357, V355, V364, V366, V367]

================================

Block 0x3fc
[0x3fc:0x42e]
---
Predecessors: [0x3dd]
Successors: [0xa5]
---
0x3fc JUMPDEST
0x3fd PUSH1 0x1
0x3ff DUP4
0x400 PUSH1 0x20
0x402 SUB
0x403 PUSH2 0x100
0x406 EXP
0x407 SUB
0x408 DUP1
0x409 NOT
0x40a DUP3
0x40b MLOAD
0x40c AND
0x40d DUP2
0x40e DUP5
0x40f MLOAD
0x410 AND
0x411 OR
0x412 SWAP1
0x413 SWAP3
0x414 MSTORE
0x415 POP
0x416 POP
0x417 POP
0x418 SWAP2
0x419 SWAP1
0x41a SWAP2
0x41b ADD
0x41c SWAP3
0x41d POP
0x41e PUSH1 0x40
0x420 SWAP2
0x421 POP
0x422 POP
0x423 MLOAD
0x424 DUP1
0x425 SWAP2
0x426 SUB
0x427 SWAP1
0x428 SHA3
0x429 SWAP1
0x42a POP
0x42b SWAP2
0x42c SWAP1
0x42d POP
0x42e JUMP
---
0x3fc: JUMPDEST 
0x3fd: V369 = 0x1
0x400: V370 = 0x20
0x402: V371 = SUB 0x20 S2
0x403: V372 = 0x100
0x406: V373 = EXP 0x100 V371
0x407: V374 = SUB V373 0x1
0x409: V375 = NOT V374
0x40b: V376 = M[S0]
0x40c: V377 = AND V376 V375
0x40f: V378 = M[S1]
0x410: V379 = AND V378 V374
0x411: V380 = OR V379 V377
0x414: M[S1] = V380
0x41b: V381 = ADD V355 V354
0x41e: V382 = 0x40
0x423: V383 = M[0x40]
0x426: V384 = SUB V381 V383
0x428: V385 = SHA3 V383 V384
0x42e: JUMP 0xa5
---
Entry stack: [V11, 0xa5, V92, 0x0, V92, V354, V354, V357, V355, S2, S1, S0]
Stack pops: 11
Stack additions: [V385]
Exit stack: [V11, V385]

================================

Block 0x42f
[0x42f:0x437]
---
Predecessors: [0x14c]
Successors: [0x154]
---
0x42f JUMPDEST
0x430 PUSH1 0x2
0x432 SLOAD
0x433 PUSH1 0xff
0x435 AND
0x436 DUP2
0x437 JUMP
---
0x42f: JUMPDEST 
0x430: V386 = 0x2
0x432: V387 = S[0x2]
0x433: V388 = 0xff
0x435: V389 = AND 0xff V387
0x437: JUMP 0x154
---
Entry stack: [V11, 0x154]
Stack pops: 1
Stack additions: [S0, V389]
Exit stack: [V11, 0x154, V389]

================================

Block 0x438
[0x438:0x463]
---
Predecessors: []
Successors: []
---
0x438 STOP
0x439 LOG1
0x43a PUSH6 0x627a7a723058
0x441 SHA3
0x442 PUSH26 0xa9d17ac16f79da494656eb03f08ae8921910530c8063e4e514c2
0x45d MISSING 0xbd
0x45e MISSING 0xb2
0x45f MISSING 0xc9
0x460 ORIGIN
0x461 EQ
0x462 STOP
0x463 MISSING 0x29
---
0x438: STOP 
0x439: LOG S0 S1 S2
0x43a: V390 = 0x627a7a723058
0x441: V391 = SHA3 0x627a7a723058 S3
0x442: V392 = 0xa9d17ac16f79da494656eb03f08ae8921910530c8063e4e514c2
0x45d: MISSING 0xbd
0x45e: MISSING 0xb2
0x45f: MISSING 0xc9
0x460: V393 = ORIGIN
0x461: V394 = EQ V393 S0
0x462: STOP 
0x463: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xa9d17ac16f79da494656eb03f08ae8921910530c8063e4e514c2, V391, V394]
Exit stack: []

================================

Function 0:
Public function signature: 0x166eb4cb
Entry block: 0x84
Exit block: 0x82
Body: 0x82, 0x84, 0x168, 0x176, 0x182, 0x188, 0x193

Function 1:
Public function signature: 0x251c1aa3
Entry block: 0x92
Exit block: 0xa5
Body: 0x92, 0x99, 0x9d, 0xa5, 0x197

Function 2:
Public function signature: 0x81777b78
Entry block: 0xb7
Exit block: 0x2e8
Body: 0x82, 0xb7, 0x19d, 0x1df, 0x1e8, 0x1fe, 0x236, 0x23c, 0x243, 0x259, 0x25f, 0x287, 0x28d, 0x294, 0x2aa, 0x2b0, 0x2e8, 0x2ec

Function 3:
Public function signature: 0x87f24484
Entry block: 0xca
Exit block: 0xa5
Body: 0xa5, 0xca, 0xd1, 0xd5, 0x2f1

Function 4:
Public function signature: 0x9f7e1fed
Entry block: 0xdd
Exit block: 0x82
Body: 0x82, 0xdd, 0x2ec, 0x2f7, 0x339, 0x342, 0x358, 0x390, 0x396, 0x39d, 0x3b3, 0x3b9

Function 5:
Public function signature: 0xb456ecc5
Entry block: 0xf0
Exit block: 0xa5
Body: 0xa5, 0xf0, 0xf7, 0xfb, 0x3ca, 0x3dd, 0x3e6, 0x3fc

Function 6:
Public function signature: 0xcf309012
Entry block: 0x141
Exit block: 0x154
Body: 0x141, 0x148, 0x14c, 0x154, 0x42f

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x82
Body: 0x82

