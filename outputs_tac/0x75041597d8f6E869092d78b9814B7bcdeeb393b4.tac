Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6d]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6d
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6d
0xc: JUMPI 0x6d V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x6f]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0xa6fbb05
0x3c EQ
0x3d PUSH2 0x6f
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0xa6fbb05
0x3c: V13 = EQ 0xa6fbb05 V11
0x3d: V14 = 0x6f
0x40: JUMPI 0x6f V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x8b]
---
0x41 DUP1
0x42 PUSH4 0x181ffc5f
0x47 EQ
0x48 PUSH2 0x8b
0x4b JUMPI
---
0x42: V15 = 0x181ffc5f
0x47: V16 = EQ 0x181ffc5f V11
0x48: V17 = 0x8b
0x4b: JUMPI 0x8b V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xae]
---
0x4c DUP1
0x4d PUSH4 0x31fd725a
0x52 EQ
0x53 PUSH2 0xae
0x56 JUMPI
---
0x4d: V18 = 0x31fd725a
0x52: V19 = EQ 0x31fd725a V11
0x53: V20 = 0xae
0x56: JUMPI 0xae V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xd5]
---
0x57 DUP1
0x58 PUSH4 0x87f24484
0x5d EQ
0x5e PUSH2 0xd5
0x61 JUMPI
---
0x58: V21 = 0x87f24484
0x5d: V22 = EQ 0x87f24484 V11
0x5e: V23 = 0xd5
0x61: JUMPI 0xd5 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x106]
---
0x62 DUP1
0x63 PUSH4 0xb456ecc5
0x68 EQ
0x69 PUSH2 0x106
0x6c JUMPI
---
0x63: V24 = 0xb456ecc5
0x68: V25 = EQ 0xb456ecc5 V11
0x69: V26 = 0x106
0x6c: JUMPI 0x106 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x6e]
---
Predecessors: [0x0, 0x62]
Successors: []
---
0x6d JUMPDEST
0x6e STOP
---
0x6d: JUMPDEST 
0x6e: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x88]
---
Predecessors: [0xd]
Successors: [0x17f]
---
0x6f JUMPDEST
0x70 PUSH2 0x89
0x73 PUSH1 0x4
0x75 DUP1
0x76 DUP1
0x77 CALLDATALOAD
0x78 PUSH1 0x0
0x7a NOT
0x7b AND
0x7c SWAP1
0x7d PUSH1 0x20
0x7f ADD
0x80 SWAP1
0x81 SWAP2
0x82 SWAP1
0x83 POP
0x84 POP
0x85 PUSH2 0x17f
0x88 JUMP
---
0x6f: JUMPDEST 
0x70: V27 = 0x89
0x73: V28 = 0x4
0x77: V29 = CALLDATALOAD 0x4
0x78: V30 = 0x0
0x7a: V31 = NOT 0x0
0x7b: V32 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V29
0x7d: V33 = 0x20
0x7f: V34 = ADD 0x20 0x4
0x85: V35 = 0x17f
0x88: JUMP 0x17f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x89, V32]
Exit stack: [V11, 0x89, V32]

================================

Block 0x89
[0x89:0x8a]
---
Predecessors: [0x1b4]
Successors: []
---
0x89 JUMPDEST
0x8a STOP
---
0x89: JUMPDEST 
0x8a: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x8b
[0x8b:0xab]
---
Predecessors: [0x41]
Successors: [0x1b7]
---
0x8b JUMPDEST
0x8c PUSH2 0xac
0x8f PUSH1 0x4
0x91 DUP1
0x92 DUP1
0x93 CALLDATALOAD
0x94 SWAP1
0x95 PUSH1 0x20
0x97 ADD
0x98 SWAP1
0x99 DUP3
0x9a ADD
0x9b DUP1
0x9c CALLDATALOAD
0x9d SWAP1
0x9e PUSH1 0x20
0xa0 ADD
0xa1 SWAP2
0xa2 SWAP1
0xa3 SWAP2
0xa4 SWAP3
0xa5 SWAP1
0xa6 POP
0xa7 POP
0xa8 PUSH2 0x1b7
0xab JUMP
---
0x8b: JUMPDEST 
0x8c: V36 = 0xac
0x8f: V37 = 0x4
0x93: V38 = CALLDATALOAD 0x4
0x95: V39 = 0x20
0x97: V40 = ADD 0x20 0x4
0x9a: V41 = ADD 0x4 V38
0x9c: V42 = CALLDATALOAD V41
0x9e: V43 = 0x20
0xa0: V44 = ADD 0x20 V41
0xa8: V45 = 0x1b7
0xab: JUMP 0x1b7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xac, V44, V42]
Exit stack: [V11, 0xac, V44, V42]

================================

Block 0xac
[0xac:0xad]
---
Predecessors: [0x23d]
Successors: []
---
0xac JUMPDEST
0xad STOP
---
0xac: JUMPDEST 
0xad: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xae
[0xae:0xb4]
---
Predecessors: [0x4c]
Successors: [0xb5, 0xb9]
---
0xae JUMPDEST
0xaf CALLVALUE
0xb0 ISZERO
0xb1 PUSH2 0xb9
0xb4 JUMPI
---
0xae: JUMPDEST 
0xaf: V46 = CALLVALUE
0xb0: V47 = ISZERO V46
0xb1: V48 = 0xb9
0xb4: JUMPI 0xb9 V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb5
[0xb5:0xb8]
---
Predecessors: [0xae]
Successors: []
---
0xb5 PUSH1 0x0
0xb7 DUP1
0xb8 REVERT
---
0xb5: V49 = 0x0
0xb8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb9
[0xb9:0xd2]
---
Predecessors: [0xae]
Successors: [0x241]
---
0xb9 JUMPDEST
0xba PUSH2 0xd3
0xbd PUSH1 0x4
0xbf DUP1
0xc0 DUP1
0xc1 CALLDATALOAD
0xc2 PUSH1 0x0
0xc4 NOT
0xc5 AND
0xc6 SWAP1
0xc7 PUSH1 0x20
0xc9 ADD
0xca SWAP1
0xcb SWAP2
0xcc SWAP1
0xcd POP
0xce POP
0xcf PUSH2 0x241
0xd2 JUMP
---
0xb9: JUMPDEST 
0xba: V50 = 0xd3
0xbd: V51 = 0x4
0xc1: V52 = CALLDATALOAD 0x4
0xc2: V53 = 0x0
0xc4: V54 = NOT 0x0
0xc5: V55 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V52
0xc7: V56 = 0x20
0xc9: V57 = ADD 0x20 0x4
0xcf: V58 = 0x241
0xd2: JUMP 0x241
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd3, V55]
Exit stack: [V11, 0xd3, V55]

================================

Block 0xd3
[0xd3:0xd4]
---
Predecessors: [0x26e]
Successors: []
---
0xd3 JUMPDEST
0xd4 STOP
---
0xd3: JUMPDEST 
0xd4: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xd5
[0xd5:0xdb]
---
Predecessors: [0x57]
Successors: [0xdc, 0xe0]
---
0xd5 JUMPDEST
0xd6 CALLVALUE
0xd7 ISZERO
0xd8 PUSH2 0xe0
0xdb JUMPI
---
0xd5: JUMPDEST 
0xd6: V59 = CALLVALUE
0xd7: V60 = ISZERO V59
0xd8: V61 = 0xe0
0xdb: JUMPI 0xe0 V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdc
[0xdc:0xdf]
---
Predecessors: [0xd5]
Successors: []
---
0xdc PUSH1 0x0
0xde DUP1
0xdf REVERT
---
0xdc: V62 = 0x0
0xdf: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe0
[0xe0:0xe7]
---
Predecessors: [0xd5]
Successors: [0x271]
---
0xe0 JUMPDEST
0xe1 PUSH2 0xe8
0xe4 PUSH2 0x271
0xe7 JUMP
---
0xe0: JUMPDEST 
0xe1: V63 = 0xe8
0xe4: V64 = 0x271
0xe7: JUMP 0x271
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xe8]
Exit stack: [V11, 0xe8]

================================

Block 0xe8
[0xe8:0x105]
---
Predecessors: [0x271]
Successors: []
---
0xe8 JUMPDEST
0xe9 PUSH1 0x40
0xeb MLOAD
0xec DUP1
0xed DUP3
0xee PUSH1 0x0
0xf0 NOT
0xf1 AND
0xf2 PUSH1 0x0
0xf4 NOT
0xf5 AND
0xf6 DUP2
0xf7 MSTORE
0xf8 PUSH1 0x20
0xfa ADD
0xfb SWAP2
0xfc POP
0xfd POP
0xfe PUSH1 0x40
0x100 MLOAD
0x101 DUP1
0x102 SWAP2
0x103 SUB
0x104 SWAP1
0x105 RETURN
---
0xe8: JUMPDEST 
0xe9: V65 = 0x40
0xeb: V66 = M[0x40]
0xee: V67 = 0x0
0xf0: V68 = NOT 0x0
0xf1: V69 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V203
0xf2: V70 = 0x0
0xf4: V71 = NOT 0x0
0xf5: V72 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V69
0xf7: M[V66] = V72
0xf8: V73 = 0x20
0xfa: V74 = ADD 0x20 V66
0xfe: V75 = 0x40
0x100: V76 = M[0x40]
0x103: V77 = SUB V74 V76
0x105: RETURN V76 V77
---
Entry stack: [V11, 0xe8, V203]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe8]

================================

Block 0x106
[0x106:0x10c]
---
Predecessors: [0x62]
Successors: [0x10d, 0x111]
---
0x106 JUMPDEST
0x107 CALLVALUE
0x108 ISZERO
0x109 PUSH2 0x111
0x10c JUMPI
---
0x106: JUMPDEST 
0x107: V78 = CALLVALUE
0x108: V79 = ISZERO V78
0x109: V80 = 0x111
0x10c: JUMPI 0x111 V79
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10d
[0x10d:0x110]
---
Predecessors: [0x106]
Successors: []
---
0x10d PUSH1 0x0
0x10f DUP1
0x110 REVERT
---
0x10d: V81 = 0x0
0x110: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x111
[0x111:0x160]
---
Predecessors: [0x106]
Successors: [0x277]
---
0x111 JUMPDEST
0x112 PUSH2 0x161
0x115 PUSH1 0x4
0x117 DUP1
0x118 DUP1
0x119 CALLDATALOAD
0x11a SWAP1
0x11b PUSH1 0x20
0x11d ADD
0x11e SWAP1
0x11f DUP3
0x120 ADD
0x121 DUP1
0x122 CALLDATALOAD
0x123 SWAP1
0x124 PUSH1 0x20
0x126 ADD
0x127 SWAP1
0x128 DUP1
0x129 DUP1
0x12a PUSH1 0x1f
0x12c ADD
0x12d PUSH1 0x20
0x12f DUP1
0x130 SWAP2
0x131 DIV
0x132 MUL
0x133 PUSH1 0x20
0x135 ADD
0x136 PUSH1 0x40
0x138 MLOAD
0x139 SWAP1
0x13a DUP2
0x13b ADD
0x13c PUSH1 0x40
0x13e MSTORE
0x13f DUP1
0x140 SWAP4
0x141 SWAP3
0x142 SWAP2
0x143 SWAP1
0x144 DUP2
0x145 DUP2
0x146 MSTORE
0x147 PUSH1 0x20
0x149 ADD
0x14a DUP4
0x14b DUP4
0x14c DUP1
0x14d DUP3
0x14e DUP5
0x14f CALLDATACOPY
0x150 DUP3
0x151 ADD
0x152 SWAP2
0x153 POP
0x154 POP
0x155 POP
0x156 POP
0x157 POP
0x158 POP
0x159 SWAP2
0x15a SWAP1
0x15b POP
0x15c POP
0x15d PUSH2 0x277
0x160 JUMP
---
0x111: JUMPDEST 
0x112: V82 = 0x161
0x115: V83 = 0x4
0x119: V84 = CALLDATALOAD 0x4
0x11b: V85 = 0x20
0x11d: V86 = ADD 0x20 0x4
0x120: V87 = ADD 0x4 V84
0x122: V88 = CALLDATALOAD V87
0x124: V89 = 0x20
0x126: V90 = ADD 0x20 V87
0x12a: V91 = 0x1f
0x12c: V92 = ADD 0x1f V88
0x12d: V93 = 0x20
0x131: V94 = DIV V92 0x20
0x132: V95 = MUL V94 0x20
0x133: V96 = 0x20
0x135: V97 = ADD 0x20 V95
0x136: V98 = 0x40
0x138: V99 = M[0x40]
0x13b: V100 = ADD V99 V97
0x13c: V101 = 0x40
0x13e: M[0x40] = V100
0x146: M[V99] = V88
0x147: V102 = 0x20
0x149: V103 = ADD 0x20 V99
0x14f: CALLDATACOPY V103 V90 V88
0x151: V104 = ADD V103 V88
0x15d: V105 = 0x277
0x160: JUMP 0x277
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x161, V99]
Exit stack: [V11, 0x161, V99]

================================

Block 0x161
[0x161:0x17e]
---
Predecessors: [0x2af]
Successors: []
---
0x161 JUMPDEST
0x162 PUSH1 0x40
0x164 MLOAD
0x165 DUP1
0x166 DUP3
0x167 PUSH1 0x0
0x169 NOT
0x16a AND
0x16b PUSH1 0x0
0x16d NOT
0x16e AND
0x16f DUP2
0x170 MSTORE
0x171 PUSH1 0x20
0x173 ADD
0x174 SWAP2
0x175 POP
0x176 POP
0x177 PUSH1 0x40
0x179 MLOAD
0x17a DUP1
0x17b SWAP2
0x17c SUB
0x17d SWAP1
0x17e RETURN
---
0x161: JUMPDEST 
0x162: V106 = 0x40
0x164: V107 = M[0x40]
0x167: V108 = 0x0
0x169: V109 = NOT 0x0
0x16a: V110 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V239
0x16b: V111 = 0x0
0x16d: V112 = NOT 0x0
0x16e: V113 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V110
0x170: M[V107] = V113
0x171: V114 = 0x20
0x173: V115 = ADD 0x20 V107
0x177: V116 = 0x40
0x179: V117 = M[0x40]
0x17c: V118 = SUB V115 V117
0x17e: RETURN V117 V118
---
Entry stack: [V11, V239]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x17f
[0x17f:0x195]
---
Predecessors: [0x6f]
Successors: [0x196, 0x1a3]
---
0x17f JUMPDEST
0x180 PUSH1 0x0
0x182 DUP1
0x183 SWAP1
0x184 SLOAD
0x185 SWAP1
0x186 PUSH2 0x100
0x189 EXP
0x18a SWAP1
0x18b DIV
0x18c PUSH1 0xff
0x18e AND
0x18f ISZERO
0x190 DUP1
0x191 ISZERO
0x192 PUSH2 0x1a3
0x195 JUMPI
---
0x17f: JUMPDEST 
0x180: V119 = 0x0
0x184: V120 = S[0x0]
0x186: V121 = 0x100
0x189: V122 = EXP 0x100 0x0
0x18b: V123 = DIV V120 0x1
0x18c: V124 = 0xff
0x18e: V125 = AND 0xff V123
0x18f: V126 = ISZERO V125
0x191: V127 = ISZERO V126
0x192: V128 = 0x1a3
0x195: JUMPI 0x1a3 V127
---
Entry stack: [V11, 0x89, V32]
Stack pops: 0
Stack additions: [V126]
Exit stack: [V11, 0x89, V32, V126]

================================

Block 0x196
[0x196:0x1a2]
---
Predecessors: [0x17f]
Successors: [0x1a3]
---
0x196 POP
0x197 PUSH8 0xde0b6b3a7640000
0x1a0 CALLVALUE
0x1a1 LT
0x1a2 ISZERO
---
0x197: V129 = 0xde0b6b3a7640000
0x1a0: V130 = CALLVALUE
0x1a1: V131 = LT V130 0xde0b6b3a7640000
0x1a2: V132 = ISZERO V131
---
Entry stack: [V11, 0x89, V32, V126]
Stack pops: 1
Stack additions: [V132]
Exit stack: [V11, 0x89, V32, V132]

================================

Block 0x1a3
[0x1a3:0x1a8]
---
Predecessors: [0x17f, 0x196]
Successors: [0x1a9, 0x1b4]
---
0x1a3 JUMPDEST
0x1a4 ISZERO
0x1a5 PUSH2 0x1b4
0x1a8 JUMPI
---
0x1a3: JUMPDEST 
0x1a4: V133 = ISZERO S0
0x1a5: V134 = 0x1b4
0x1a8: JUMPI 0x1b4 V133
---
Entry stack: [V11, 0x89, V32, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x89, V32]

================================

Block 0x1a9
[0x1a9:0x1b3]
---
Predecessors: [0x1a3]
Successors: [0x1b4]
---
0x1a9 DUP1
0x1aa PUSH1 0x1
0x1ac DUP2
0x1ad PUSH1 0x0
0x1af NOT
0x1b0 AND
0x1b1 SWAP1
0x1b2 SSTORE
0x1b3 POP
---
0x1aa: V135 = 0x1
0x1ad: V136 = 0x0
0x1af: V137 = NOT 0x0
0x1b0: V138 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V32
0x1b2: S[0x1] = V138
---
Entry stack: [V11, 0x89, V32]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x89, V32]

================================

Block 0x1b4
[0x1b4:0x1b6]
---
Predecessors: [0x1a3, 0x1a9]
Successors: [0x89]
---
0x1b4 JUMPDEST
0x1b5 POP
0x1b6 JUMP
---
0x1b4: JUMPDEST 
0x1b6: JUMP 0x89
---
Entry stack: [V11, 0x89, V32]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1b7
[0x1b7:0x1e5]
---
Predecessors: [0x8b]
Successors: [0x1e6, 0x23d]
---
0x1b7 JUMPDEST
0x1b8 DUP2
0x1b9 DUP2
0x1ba PUSH1 0x40
0x1bc MLOAD
0x1bd DUP1
0x1be DUP4
0x1bf DUP4
0x1c0 DUP1
0x1c1 DUP3
0x1c2 DUP5
0x1c3 CALLDATACOPY
0x1c4 DUP3
0x1c5 ADD
0x1c6 SWAP2
0x1c7 POP
0x1c8 POP
0x1c9 SWAP3
0x1ca POP
0x1cb POP
0x1cc POP
0x1cd PUSH1 0x40
0x1cf MLOAD
0x1d0 DUP1
0x1d1 SWAP2
0x1d2 SUB
0x1d3 SWAP1
0x1d4 SHA3
0x1d5 PUSH1 0x0
0x1d7 NOT
0x1d8 AND
0x1d9 PUSH1 0x1
0x1db SLOAD
0x1dc PUSH1 0x0
0x1de NOT
0x1df AND
0x1e0 EQ
0x1e1 ISZERO
0x1e2 PUSH2 0x23d
0x1e5 JUMPI
---
0x1b7: JUMPDEST 
0x1ba: V139 = 0x40
0x1bc: V140 = M[0x40]
0x1c3: CALLDATACOPY V140 V44 V42
0x1c5: V141 = ADD V140 V42
0x1cd: V142 = 0x40
0x1cf: V143 = M[0x40]
0x1d2: V144 = SUB V141 V143
0x1d4: V145 = SHA3 V143 V144
0x1d5: V146 = 0x0
0x1d7: V147 = NOT 0x0
0x1d8: V148 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V145
0x1d9: V149 = 0x1
0x1db: V150 = S[0x1]
0x1dc: V151 = 0x0
0x1de: V152 = NOT 0x0
0x1df: V153 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V150
0x1e0: V154 = EQ V153 V148
0x1e1: V155 = ISZERO V154
0x1e2: V156 = 0x23d
0x1e5: JUMPI 0x23d V155
---
Entry stack: [V11, 0xac, V44, V42]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xac, V44, V42]

================================

Block 0x1e6
[0x1e6:0x237]
---
Predecessors: [0x1b7]
Successors: [0x238, 0x23c]
---
0x1e6 CALLER
0x1e7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1fc AND
0x1fd PUSH2 0x8fc
0x200 ADDRESS
0x201 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x216 AND
0x217 BALANCE
0x218 SWAP1
0x219 DUP2
0x21a ISZERO
0x21b MUL
0x21c SWAP1
0x21d PUSH1 0x40
0x21f MLOAD
0x220 PUSH1 0x0
0x222 PUSH1 0x40
0x224 MLOAD
0x225 DUP1
0x226 DUP4
0x227 SUB
0x228 DUP2
0x229 DUP6
0x22a DUP9
0x22b DUP9
0x22c CALL
0x22d SWAP4
0x22e POP
0x22f POP
0x230 POP
0x231 POP
0x232 ISZERO
0x233 ISZERO
0x234 PUSH2 0x23c
0x237 JUMPI
---
0x1e6: V157 = CALLER
0x1e7: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x1fc: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x1fd: V160 = 0x8fc
0x200: V161 = ADDRESS
0x201: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x216: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x217: V164 = BALANCE V163
0x21a: V165 = ISZERO V164
0x21b: V166 = MUL V165 0x8fc
0x21d: V167 = 0x40
0x21f: V168 = M[0x40]
0x220: V169 = 0x0
0x222: V170 = 0x40
0x224: V171 = M[0x40]
0x227: V172 = SUB V168 V171
0x22c: V173 = CALL V166 V159 V164 V171 V172 V171 0x0
0x232: V174 = ISZERO V173
0x233: V175 = ISZERO V174
0x234: V176 = 0x23c
0x237: JUMPI 0x23c V175
---
Entry stack: [V11, 0xac, V44, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xac, V44, V42]

================================

Block 0x238
[0x238:0x23b]
---
Predecessors: [0x1e6]
Successors: []
---
0x238 PUSH1 0x0
0x23a DUP1
0x23b REVERT
---
0x238: V177 = 0x0
0x23b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xac, V44, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xac, V44, V42]

================================

Block 0x23c
[0x23c:0x23c]
---
Predecessors: [0x1e6]
Successors: [0x23d]
---
0x23c JUMPDEST
---
0x23c: JUMPDEST 
---
Entry stack: [V11, 0xac, V44, V42]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xac, V44, V42]

================================

Block 0x23d
[0x23d:0x240]
---
Predecessors: [0x1b7, 0x23c]
Successors: [0xac]
---
0x23d JUMPDEST
0x23e POP
0x23f POP
0x240 JUMP
---
0x23d: JUMPDEST 
0x240: JUMP 0xac
---
Entry stack: [V11, 0xac, V44, V42]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x241
[0x241:0x253]
---
Predecessors: [0xb9]
Successors: [0x254, 0x26e]
---
0x241 JUMPDEST
0x242 PUSH1 0x1
0x244 SLOAD
0x245 PUSH1 0x0
0x247 NOT
0x248 AND
0x249 DUP2
0x24a PUSH1 0x0
0x24c NOT
0x24d AND
0x24e EQ
0x24f ISZERO
0x250 PUSH2 0x26e
0x253 JUMPI
---
0x241: JUMPDEST 
0x242: V178 = 0x1
0x244: V179 = S[0x1]
0x245: V180 = 0x0
0x247: V181 = NOT 0x0
0x248: V182 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V179
0x24a: V183 = 0x0
0x24c: V184 = NOT 0x0
0x24d: V185 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V55
0x24e: V186 = EQ V185 V182
0x24f: V187 = ISZERO V186
0x250: V188 = 0x26e
0x253: JUMPI 0x26e V187
---
Entry stack: [V11, 0xd3, V55]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xd3, V55]

================================

Block 0x254
[0x254:0x26d]
---
Predecessors: [0x241]
Successors: [0x26e]
---
0x254 PUSH1 0x1
0x256 PUSH1 0x0
0x258 DUP1
0x259 PUSH2 0x100
0x25c EXP
0x25d DUP2
0x25e SLOAD
0x25f DUP2
0x260 PUSH1 0xff
0x262 MUL
0x263 NOT
0x264 AND
0x265 SWAP1
0x266 DUP4
0x267 ISZERO
0x268 ISZERO
0x269 MUL
0x26a OR
0x26b SWAP1
0x26c SSTORE
0x26d POP
---
0x254: V189 = 0x1
0x256: V190 = 0x0
0x259: V191 = 0x100
0x25c: V192 = EXP 0x100 0x0
0x25e: V193 = S[0x0]
0x260: V194 = 0xff
0x262: V195 = MUL 0xff 0x1
0x263: V196 = NOT 0xff
0x264: V197 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V193
0x267: V198 = ISZERO 0x1
0x268: V199 = ISZERO 0x0
0x269: V200 = MUL 0x1 0x1
0x26a: V201 = OR 0x1 V197
0x26c: S[0x0] = V201
---
Entry stack: [V11, 0xd3, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd3, V55]

================================

Block 0x26e
[0x26e:0x270]
---
Predecessors: [0x241, 0x254]
Successors: [0xd3]
---
0x26e JUMPDEST
0x26f POP
0x270 JUMP
---
0x26e: JUMPDEST 
0x270: JUMP 0xd3
---
Entry stack: [V11, 0xd3, V55]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x271
[0x271:0x276]
---
Predecessors: [0xe0]
Successors: [0xe8]
---
0x271 JUMPDEST
0x272 PUSH1 0x1
0x274 SLOAD
0x275 DUP2
0x276 JUMP
---
0x271: JUMPDEST 
0x272: V202 = 0x1
0x274: V203 = S[0x1]
0x276: JUMP 0xe8
---
Entry stack: [V11, 0xe8]
Stack pops: 1
Stack additions: [S0, V203]
Exit stack: [V11, 0xe8, V203]

================================

Block 0x277
[0x277:0x289]
---
Predecessors: [0x111]
Successors: [0x28a]
---
0x277 JUMPDEST
0x278 PUSH1 0x0
0x27a DUP2
0x27b PUSH1 0x40
0x27d MLOAD
0x27e DUP1
0x27f DUP3
0x280 DUP1
0x281 MLOAD
0x282 SWAP1
0x283 PUSH1 0x20
0x285 ADD
0x286 SWAP1
0x287 DUP1
0x288 DUP4
0x289 DUP4
---
0x277: JUMPDEST 
0x278: V204 = 0x0
0x27b: V205 = 0x40
0x27d: V206 = M[0x40]
0x281: V207 = M[V99]
0x283: V208 = 0x20
0x285: V209 = ADD 0x20 V99
---
Entry stack: [V11, 0x161, V99]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V206, V206, V209, V207, V207, V206, V209]
Exit stack: [V11, 0x161, V99, 0x0, V99, V206, V206, V209, V207, V207, V206, V209]

================================

Block 0x28a
[0x28a:0x294]
---
Predecessors: [0x277, 0x295]
Successors: [0x295, 0x2af]
---
0x28a JUMPDEST
0x28b PUSH1 0x20
0x28d DUP4
0x28e LT
0x28f ISZERO
0x290 ISZERO
0x291 PUSH2 0x2af
0x294 JUMPI
---
0x28a: JUMPDEST 
0x28b: V210 = 0x20
0x28e: V211 = LT S2 0x20
0x28f: V212 = ISZERO V211
0x290: V213 = ISZERO V212
0x291: V214 = 0x2af
0x294: JUMPI 0x2af V213
---
Entry stack: [V11, 0x161, V99, 0x0, V99, V206, V206, V209, V207, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x161, V99, 0x0, V99, V206, V206, V209, V207, S2, S1, S0]

================================

Block 0x295
[0x295:0x2ae]
---
Predecessors: [0x28a]
Successors: [0x28a]
---
0x295 DUP1
0x296 MLOAD
0x297 DUP3
0x298 MSTORE
0x299 PUSH1 0x20
0x29b DUP3
0x29c ADD
0x29d SWAP2
0x29e POP
0x29f PUSH1 0x20
0x2a1 DUP2
0x2a2 ADD
0x2a3 SWAP1
0x2a4 POP
0x2a5 PUSH1 0x20
0x2a7 DUP4
0x2a8 SUB
0x2a9 SWAP3
0x2aa POP
0x2ab PUSH2 0x28a
0x2ae JUMP
---
0x296: V215 = M[S0]
0x298: M[S1] = V215
0x299: V216 = 0x20
0x29c: V217 = ADD S1 0x20
0x29f: V218 = 0x20
0x2a2: V219 = ADD S0 0x20
0x2a5: V220 = 0x20
0x2a8: V221 = SUB S2 0x20
0x2ab: V222 = 0x28a
0x2ae: JUMP 0x28a
---
Entry stack: [V11, 0x161, V99, 0x0, V99, V206, V206, V209, V207, S2, S1, S0]
Stack pops: 3
Stack additions: [V221, V217, V219]
Exit stack: [V11, 0x161, V99, 0x0, V99, V206, V206, V209, V207, V221, V217, V219]

================================

Block 0x2af
[0x2af:0x2e2]
---
Predecessors: [0x28a]
Successors: [0x161]
---
0x2af JUMPDEST
0x2b0 PUSH1 0x1
0x2b2 DUP4
0x2b3 PUSH1 0x20
0x2b5 SUB
0x2b6 PUSH2 0x100
0x2b9 EXP
0x2ba SUB
0x2bb DUP1
0x2bc NOT
0x2bd DUP3
0x2be MLOAD
0x2bf AND
0x2c0 DUP2
0x2c1 DUP5
0x2c2 MLOAD
0x2c3 AND
0x2c4 DUP1
0x2c5 DUP3
0x2c6 OR
0x2c7 DUP6
0x2c8 MSTORE
0x2c9 POP
0x2ca POP
0x2cb POP
0x2cc POP
0x2cd POP
0x2ce POP
0x2cf SWAP1
0x2d0 POP
0x2d1 ADD
0x2d2 SWAP2
0x2d3 POP
0x2d4 POP
0x2d5 PUSH1 0x40
0x2d7 MLOAD
0x2d8 DUP1
0x2d9 SWAP2
0x2da SUB
0x2db SWAP1
0x2dc SHA3
0x2dd SWAP1
0x2de POP
0x2df SWAP2
0x2e0 SWAP1
0x2e1 POP
0x2e2 JUMP
---
0x2af: JUMPDEST 
0x2b0: V223 = 0x1
0x2b3: V224 = 0x20
0x2b5: V225 = SUB 0x20 S2
0x2b6: V226 = 0x100
0x2b9: V227 = EXP 0x100 V225
0x2ba: V228 = SUB V227 0x1
0x2bc: V229 = NOT V228
0x2be: V230 = M[S0]
0x2bf: V231 = AND V230 V229
0x2c2: V232 = M[S1]
0x2c3: V233 = AND V232 V228
0x2c6: V234 = OR V231 V233
0x2c8: M[S1] = V234
0x2d1: V235 = ADD V207 V206
0x2d5: V236 = 0x40
0x2d7: V237 = M[0x40]
0x2da: V238 = SUB V235 V237
0x2dc: V239 = SHA3 V237 V238
0x2e2: JUMP 0x161
---
Entry stack: [V11, 0x161, V99, 0x0, V99, V206, V206, V209, V207, S2, S1, S0]
Stack pops: 11
Stack additions: [V239]
Exit stack: [V11, V239]

================================

Block 0x2e3
[0x2e3:0x30e]
---
Predecessors: []
Successors: []
---
0x2e3 STOP
0x2e4 LOG1
0x2e5 PUSH6 0x627a7a723058
0x2ec SHA3
0x2ed MISSING 0xbb
0x2ee SHL
0x2ef PUSH14 0xbac151a37d7dbc28639db088815
0x2fe MISSING 0xd3
0x2ff EXTCODESIZE
0x300 SWAP15
0x301 MISSING 0x5c
0x302 RETURNDATASIZE
0x303 CALL
0x304 MISSING 0x5e
0x305 MISSING 0xbb
0x306 MULMOD
0x307 PUSH6 0xad80c0f76400
0x30e MISSING 0x29
---
0x2e3: STOP 
0x2e4: LOG S0 S1 S2
0x2e5: V240 = 0x627a7a723058
0x2ec: V241 = SHA3 0x627a7a723058 S3
0x2ed: MISSING 0xbb
0x2ee: V242 = SHL S0 S1
0x2ef: V243 = 0xbac151a37d7dbc28639db088815
0x2fe: MISSING 0xd3
0x2ff: V244 = EXTCODESIZE S0
0x301: MISSING 0x5c
0x302: V245 = RETURNDATASIZE
0x303: V246 = CALL V245 S0 S1 S2 S3 S4 S5
0x304: MISSING 0x5e
0x305: MISSING 0xbb
0x306: V247 = MULMOD S0 S1 S2
0x307: V248 = 0xad80c0f76400
0x30e: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V241, 0xbac151a37d7dbc28639db088815, V242, S15, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, V244, V246, 0xad80c0f76400, V247]
Exit stack: []

================================

Function 0:
Public function signature: 0xa6fbb05
Entry block: 0x6f
Exit block: 0x89
Body: 0x6f, 0x89, 0x17f, 0x196, 0x1a3, 0x1a9, 0x1b4

Function 1:
Public function signature: 0x181ffc5f
Entry block: 0x8b
Exit block: 0x238
Body: 0x8b, 0xac, 0x1b7, 0x1e6, 0x238, 0x23c, 0x23d

Function 2:
Public function signature: 0x31fd725a
Entry block: 0xae
Exit block: 0xd3
Body: 0xae, 0xb5, 0xb9, 0xd3, 0x241, 0x254, 0x26e

Function 3:
Public function signature: 0x87f24484
Entry block: 0xd5
Exit block: 0xe8
Body: 0xd5, 0xdc, 0xe0, 0xe8, 0x271

Function 4:
Public function signature: 0xb456ecc5
Entry block: 0x106
Exit block: 0x161
Body: 0x106, 0x10d, 0x111, 0x161, 0x277, 0x28a, 0x295, 0x2af

Function 5:
Public fallback function
Entry block: 0x6d
Exit block: 0x6d
Body: 0x6d

