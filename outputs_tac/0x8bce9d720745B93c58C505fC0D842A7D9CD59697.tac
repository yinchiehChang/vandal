Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x61]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x61
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x61
0xc: JUMPI 0x61 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x63]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x108d40f8
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x63
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x108d40f8
0x3b: V13 = EQ V11 0x108d40f8
0x3c: V14 = 0x63
0x3f: JUMPI 0x63 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x77]
---
0x40 DUP1
0x41 PUSH4 0x3f7e2120
0x46 EQ
0x47 PUSH2 0x77
0x4a JUMPI
---
0x41: V15 = 0x3f7e2120
0x46: V16 = EQ 0x3f7e2120 V11
0x47: V17 = 0x77
0x4a: JUMPI 0x77 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x8a]
---
0x4b DUP1
0x4c PUSH4 0xbea948c8
0x51 EQ
0x52 PUSH2 0x8a
0x55 JUMPI
---
0x4c: V18 = 0xbea948c8
0x51: V19 = EQ 0xbea948c8 V11
0x52: V20 = 0x8a
0x55: JUMPI 0x8a V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x92]
---
0x56 DUP1
0x57 PUSH4 0xdac47a71
0x5c EQ
0x5d PUSH2 0x92
0x60 JUMPI
---
0x57: V21 = 0xdac47a71
0x5c: V22 = EQ 0xdac47a71 V11
0x5d: V23 = 0x92
0x60: JUMPI 0x92 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x62]
---
Predecessors: [0x0, 0x56, 0x135, 0x19b, 0x216]
Successors: []
---
0x61 JUMPDEST
0x62 STOP
---
0x61: JUMPDEST 
0x62: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x63
[0x63:0x76]
---
Predecessors: [0xd]
Successors: [0xa8]
---
0x63 JUMPDEST
0x64 PUSH2 0x61
0x67 PUSH1 0x1
0x69 PUSH1 0xa0
0x6b PUSH1 0x2
0x6d EXP
0x6e SUB
0x6f PUSH1 0x4
0x71 CALLDATALOAD
0x72 AND
0x73 PUSH2 0xa8
0x76 JUMP
---
0x63: JUMPDEST 
0x64: V24 = 0x61
0x67: V25 = 0x1
0x69: V26 = 0xa0
0x6b: V27 = 0x2
0x6d: V28 = EXP 0x2 0xa0
0x6e: V29 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f: V30 = 0x4
0x71: V31 = CALLDATALOAD 0x4
0x72: V32 = AND V31 0xffffffffffffffffffffffffffffffffffffffff
0x73: V33 = 0xa8
0x76: JUMP 0xa8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, V32]
Exit stack: [V11, 0x61, V32]

================================

Block 0x77
[0x77:0x7d]
---
Predecessors: [0x40]
Successors: [0x7e, 0x82]
---
0x77 JUMPDEST
0x78 CALLVALUE
0x79 ISZERO
0x7a PUSH2 0x82
0x7d JUMPI
---
0x77: JUMPDEST 
0x78: V34 = CALLVALUE
0x79: V35 = ISZERO V34
0x7a: V36 = 0x82
0x7d: JUMPI 0x82 V35
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7e
[0x7e:0x81]
---
Predecessors: [0x77]
Successors: []
---
0x7e PUSH1 0x0
0x80 DUP1
0x81 REVERT
---
0x7e: V37 = 0x0
0x81: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x82
[0x82:0x89]
---
Predecessors: [0x77]
Successors: [0x138]
---
0x82 JUMPDEST
0x83 PUSH2 0x61
0x86 PUSH2 0x138
0x89 JUMP
---
0x82: JUMPDEST 
0x83: V38 = 0x61
0x86: V39 = 0x138
0x89: JUMP 0x138
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x8a
[0x8a:0x91]
---
Predecessors: [0x4b]
Successors: [0x19d]
---
0x8a JUMPDEST
0x8b PUSH2 0x61
0x8e PUSH2 0x19d
0x91 JUMP
---
0x8a: JUMPDEST 
0x8b: V40 = 0x61
0x8e: V41 = 0x19d
0x91: JUMP 0x19d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61]
Exit stack: [V11, 0x61]

================================

Block 0x92
[0x92:0x98]
---
Predecessors: [0x56]
Successors: [0x99, 0x9d]
---
0x92 JUMPDEST
0x93 CALLVALUE
0x94 ISZERO
0x95 PUSH2 0x9d
0x98 JUMPI
---
0x92: JUMPDEST 
0x93: V42 = CALLVALUE
0x94: V43 = ISZERO V42
0x95: V44 = 0x9d
0x98: JUMPI 0x9d V43
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x99
[0x99:0x9c]
---
Predecessors: [0x92]
Successors: []
---
0x99 PUSH1 0x0
0x9b DUP1
0x9c REVERT
---
0x99: V45 = 0x0
0x9c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x9d
[0x9d:0xa7]
---
Predecessors: [0x92]
Successors: [0x1fe]
---
0x9d JUMPDEST
0x9e PUSH2 0x61
0xa1 PUSH1 0x4
0xa3 CALLDATALOAD
0xa4 PUSH2 0x1fe
0xa7 JUMP
---
0x9d: JUMPDEST 
0x9e: V46 = 0x61
0xa1: V47 = 0x4
0xa3: V48 = CALLDATALOAD 0x4
0xa4: V49 = 0x1fe
0xa7: JUMP 0x1fe
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x61, V48]
Exit stack: [V11, 0x61, V48]

================================

Block 0xa8
[0xa8:0xcd]
---
Predecessors: [0x63]
Successors: [0xce, 0xda]
---
0xa8 JUMPDEST
0xa9 PUSH1 0x1
0xab SLOAD
0xac PUSH21 0x10000000000000000000000000000000000000000
0xc2 SWAP1
0xc3 DIV
0xc4 PUSH1 0xff
0xc6 AND
0xc7 ISZERO
0xc8 DUP1
0xc9 ISZERO
0xca PUSH2 0xda
0xcd JUMPI
---
0xa8: JUMPDEST 
0xa9: V50 = 0x1
0xab: V51 = S[0x1]
0xac: V52 = 0x10000000000000000000000000000000000000000
0xc3: V53 = DIV V51 0x10000000000000000000000000000000000000000
0xc4: V54 = 0xff
0xc6: V55 = AND 0xff V53
0xc7: V56 = ISZERO V55
0xc9: V57 = ISZERO V56
0xca: V58 = 0xda
0xcd: JUMPI 0xda V57
---
Entry stack: [V11, 0x61, V32]
Stack pops: 0
Stack additions: [V56]
Exit stack: [V11, 0x61, V32, V56]

================================

Block 0xce
[0xce:0xd9]
---
Predecessors: [0xa8]
Successors: [0xda]
---
0xce POP
0xcf PUSH8 0xde0b6b3a7640000
0xd8 CALLVALUE
0xd9 GT
---
0xcf: V59 = 0xde0b6b3a7640000
0xd8: V60 = CALLVALUE
0xd9: V61 = GT V60 0xde0b6b3a7640000
---
Entry stack: [V11, 0x61, V32, V56]
Stack pops: 1
Stack additions: [V61]
Exit stack: [V11, 0x61, V32, V61]

================================

Block 0xda
[0xda:0xdf]
---
Predecessors: [0xa8, 0xce]
Successors: [0xe0, 0xee]
---
0xda JUMPDEST
0xdb DUP1
0xdc PUSH2 0xee
0xdf JUMPI
---
0xda: JUMPDEST 
0xdc: V62 = 0xee
0xdf: JUMPI 0xee S0
---
Entry stack: [V11, 0x61, V32, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x61, V32, S0]

================================

Block 0xe0
[0xe0:0xed]
---
Predecessors: [0xda]
Successors: [0xee]
---
0xe0 POP
0xe1 PUSH1 0x0
0xe3 SLOAD
0xe4 PUSH1 0x1
0xe6 PUSH1 0xa0
0xe8 PUSH1 0x2
0xea EXP
0xeb SUB
0xec AND
0xed ISZERO
---
0xe1: V63 = 0x0
0xe3: V64 = S[0x0]
0xe4: V65 = 0x1
0xe6: V66 = 0xa0
0xe8: V67 = 0x2
0xea: V68 = EXP 0x2 0xa0
0xeb: V69 = SUB 0x10000000000000000000000000000000000000000 0x1
0xec: V70 = AND 0xffffffffffffffffffffffffffffffffffffffff V64
0xed: V71 = ISZERO V70
---
Entry stack: [V11, 0x61, V32, S0]
Stack pops: 1
Stack additions: [V71]
Exit stack: [V11, 0x61, V32, V71]

================================

Block 0xee
[0xee:0xf3]
---
Predecessors: [0xda, 0xe0]
Successors: [0xf4, 0x135]
---
0xee JUMPDEST
0xef ISZERO
0xf0 PUSH2 0x135
0xf3 JUMPI
---
0xee: JUMPDEST 
0xef: V72 = ISZERO S0
0xf0: V73 = 0x135
0xf3: JUMPI 0x135 V72
---
Entry stack: [V11, 0x61, V32, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x61, V32]

================================

Block 0xf4
[0xf4:0x134]
---
Predecessors: [0xee]
Successors: [0x135]
---
0xf4 PUSH1 0x0
0xf6 DUP1
0xf7 SLOAD
0xf8 PUSH1 0x1
0xfa PUSH1 0xa0
0xfc PUSH1 0x2
0xfe EXP
0xff SUB
0x100 CALLER
0x101 DUP2
0x102 AND
0x103 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x118 NOT
0x119 SWAP3
0x11a DUP4
0x11b AND
0x11c OR
0x11d SWAP1
0x11e SWAP3
0x11f SSTORE
0x120 PUSH1 0x1
0x122 DUP1
0x123 SLOAD
0x124 SWAP3
0x125 DUP5
0x126 AND
0x127 SWAP3
0x128 SWAP1
0x129 SWAP2
0x12a AND
0x12b SWAP2
0x12c SWAP1
0x12d SWAP2
0x12e OR
0x12f SWAP1
0x130 SSTORE
0x131 TIMESTAMP
0x132 PUSH1 0x2
0x134 SSTORE
---
0xf4: V74 = 0x0
0xf7: V75 = S[0x0]
0xf8: V76 = 0x1
0xfa: V77 = 0xa0
0xfc: V78 = 0x2
0xfe: V79 = EXP 0x2 0xa0
0xff: V80 = SUB 0x10000000000000000000000000000000000000000 0x1
0x100: V81 = CALLER
0x102: V82 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x103: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x118: V84 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x11b: V85 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V75
0x11c: V86 = OR V85 V82
0x11f: S[0x0] = V86
0x120: V87 = 0x1
0x123: V88 = S[0x1]
0x126: V89 = AND V32 0xffffffffffffffffffffffffffffffffffffffff
0x12a: V90 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V88
0x12e: V91 = OR V90 V89
0x130: S[0x1] = V91
0x131: V92 = TIMESTAMP
0x132: V93 = 0x2
0x134: S[0x2] = V92
---
Entry stack: [V11, 0x61, V32]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x61, V32]

================================

Block 0x135
[0x135:0x137]
---
Predecessors: [0xee, 0xf4, 0x1fe]
Successors: [0x61]
---
0x135 JUMPDEST
0x136 POP
0x137 JUMP
---
0x135: JUMPDEST 
0x137: JUMP 0x61
---
Entry stack: [V11, 0x61, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x138
[0x138:0x150]
---
Predecessors: [0x82]
Successors: [0x151, 0x160]
---
0x138 JUMPDEST
0x139 PUSH1 0x0
0x13b SLOAD
0x13c CALLER
0x13d PUSH1 0x1
0x13f PUSH1 0xa0
0x141 PUSH1 0x2
0x143 EXP
0x144 SUB
0x145 SWAP1
0x146 DUP2
0x147 AND
0x148 SWAP2
0x149 AND
0x14a EQ
0x14b DUP1
0x14c ISZERO
0x14d PUSH2 0x160
0x150 JUMPI
---
0x138: JUMPDEST 
0x139: V94 = 0x0
0x13b: V95 = S[0x0]
0x13c: V96 = CALLER
0x13d: V97 = 0x1
0x13f: V98 = 0xa0
0x141: V99 = 0x2
0x143: V100 = EXP 0x2 0xa0
0x144: V101 = SUB 0x10000000000000000000000000000000000000000 0x1
0x147: V102 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x149: V103 = AND V95 0xffffffffffffffffffffffffffffffffffffffff
0x14a: V104 = EQ V103 V102
0x14c: V105 = ISZERO V104
0x14d: V106 = 0x160
0x150: JUMPI 0x160 V105
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V104]
Exit stack: [V11, 0x61, V104]

================================

Block 0x151
[0x151:0x15f]
---
Predecessors: [0x138]
Successors: [0x160]
---
0x151 POP
0x152 PUSH1 0x1
0x154 SLOAD
0x155 PUSH1 0x1
0x157 PUSH1 0xa0
0x159 PUSH1 0x2
0x15b EXP
0x15c SUB
0x15d AND
0x15e ISZERO
0x15f ISZERO
---
0x152: V107 = 0x1
0x154: V108 = S[0x1]
0x155: V109 = 0x1
0x157: V110 = 0xa0
0x159: V111 = 0x2
0x15b: V112 = EXP 0x2 0xa0
0x15c: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x15d: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x15e: V115 = ISZERO V114
0x15f: V116 = ISZERO V115
---
Entry stack: [V11, 0x61, V104]
Stack pops: 1
Stack additions: [V116]
Exit stack: [V11, 0x61, V116]

================================

Block 0x160
[0x160:0x165]
---
Predecessors: [0x138, 0x151]
Successors: [0x166, 0x19b]
---
0x160 JUMPDEST
0x161 ISZERO
0x162 PUSH2 0x19b
0x165 JUMPI
---
0x160: JUMPDEST 
0x161: V117 = ISZERO S0
0x162: V118 = 0x19b
0x165: JUMPI 0x19b V117
---
Entry stack: [V11, 0x61, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x166
[0x166:0x19a]
---
Predecessors: [0x160]
Successors: [0x19b]
---
0x166 PUSH1 0x1
0x168 DUP1
0x169 SLOAD
0x16a PUSH21 0xff0000000000000000000000000000000000000000
0x180 NOT
0x181 AND
0x182 PUSH21 0x10000000000000000000000000000000000000000
0x198 OR
0x199 SWAP1
0x19a SSTORE
---
0x166: V119 = 0x1
0x169: V120 = S[0x1]
0x16a: V121 = 0xff0000000000000000000000000000000000000000
0x180: V122 = NOT 0xff0000000000000000000000000000000000000000
0x181: V123 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V120
0x182: V124 = 0x10000000000000000000000000000000000000000
0x198: V125 = OR 0x10000000000000000000000000000000000000000 V123
0x19a: S[0x1] = V125
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x19b
[0x19b:0x19c]
---
Predecessors: [0x160, 0x166, 0x1bc, 0x1c2]
Successors: [0x61]
---
0x19b JUMPDEST
0x19c JUMP
---
0x19b: JUMPDEST 
0x19c: JUMP 0x61
---
Entry stack: [V11, 0x61]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x19d
[0x19d:0x1b5]
---
Predecessors: [0x8a]
Successors: [0x1b6, 0x1bc]
---
0x19d JUMPDEST
0x19e PUSH1 0x1
0x1a0 SLOAD
0x1a1 CALLER
0x1a2 PUSH1 0x1
0x1a4 PUSH1 0xa0
0x1a6 PUSH1 0x2
0x1a8 EXP
0x1a9 SUB
0x1aa SWAP1
0x1ab DUP2
0x1ac AND
0x1ad SWAP2
0x1ae AND
0x1af EQ
0x1b0 DUP1
0x1b1 ISZERO
0x1b2 PUSH2 0x1bc
0x1b5 JUMPI
---
0x19d: JUMPDEST 
0x19e: V126 = 0x1
0x1a0: V127 = S[0x1]
0x1a1: V128 = CALLER
0x1a2: V129 = 0x1
0x1a4: V130 = 0xa0
0x1a6: V131 = 0x2
0x1a8: V132 = EXP 0x2 0xa0
0x1a9: V133 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1ac: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x1ae: V135 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x1af: V136 = EQ V135 V134
0x1b1: V137 = ISZERO V136
0x1b2: V138 = 0x1bc
0x1b5: JUMPI 0x1bc V137
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: [V136]
Exit stack: [V11, 0x61, V136]

================================

Block 0x1b6
[0x1b6:0x1bb]
---
Predecessors: [0x19d]
Successors: [0x1bc]
---
0x1b6 POP
0x1b7 PUSH1 0x2
0x1b9 SLOAD
0x1ba TIMESTAMP
0x1bb GT
---
0x1b7: V139 = 0x2
0x1b9: V140 = S[0x2]
0x1ba: V141 = TIMESTAMP
0x1bb: V142 = GT V141 V140
---
Entry stack: [V11, 0x61, V136]
Stack pops: 1
Stack additions: [V142]
Exit stack: [V11, 0x61, V142]

================================

Block 0x1bc
[0x1bc:0x1c1]
---
Predecessors: [0x19d, 0x1b6]
Successors: [0x19b, 0x1c2]
---
0x1bc JUMPDEST
0x1bd ISZERO
0x1be PUSH2 0x19b
0x1c1 JUMPI
---
0x1bc: JUMPDEST 
0x1bd: V143 = ISZERO S0
0x1be: V144 = 0x19b
0x1c1: JUMPI 0x19b V143
---
Entry stack: [V11, 0x61, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x1c2
[0x1c2:0x1f9]
---
Predecessors: [0x1bc]
Successors: [0x19b, 0x1fa]
---
0x1c2 CALLER
0x1c3 PUSH1 0x1
0x1c5 PUSH1 0xa0
0x1c7 PUSH1 0x2
0x1c9 EXP
0x1ca SUB
0x1cb AND
0x1cc PUSH2 0x8fc
0x1cf ADDRESS
0x1d0 PUSH1 0x1
0x1d2 PUSH1 0xa0
0x1d4 PUSH1 0x2
0x1d6 EXP
0x1d7 SUB
0x1d8 AND
0x1d9 BALANCE
0x1da SWAP1
0x1db DUP2
0x1dc ISZERO
0x1dd MUL
0x1de SWAP1
0x1df PUSH1 0x40
0x1e1 MLOAD
0x1e2 PUSH1 0x0
0x1e4 PUSH1 0x40
0x1e6 MLOAD
0x1e7 DUP1
0x1e8 DUP4
0x1e9 SUB
0x1ea DUP2
0x1eb DUP6
0x1ec DUP9
0x1ed DUP9
0x1ee CALL
0x1ef SWAP4
0x1f0 POP
0x1f1 POP
0x1f2 POP
0x1f3 POP
0x1f4 ISZERO
0x1f5 ISZERO
0x1f6 PUSH2 0x19b
0x1f9 JUMPI
---
0x1c2: V145 = CALLER
0x1c3: V146 = 0x1
0x1c5: V147 = 0xa0
0x1c7: V148 = 0x2
0x1c9: V149 = EXP 0x2 0xa0
0x1ca: V150 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1cb: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V145
0x1cc: V152 = 0x8fc
0x1cf: V153 = ADDRESS
0x1d0: V154 = 0x1
0x1d2: V155 = 0xa0
0x1d4: V156 = 0x2
0x1d6: V157 = EXP 0x2 0xa0
0x1d7: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1d8: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V153
0x1d9: V160 = BALANCE V159
0x1dc: V161 = ISZERO V160
0x1dd: V162 = MUL V161 0x8fc
0x1df: V163 = 0x40
0x1e1: V164 = M[0x40]
0x1e2: V165 = 0x0
0x1e4: V166 = 0x40
0x1e6: V167 = M[0x40]
0x1e9: V168 = SUB V164 V167
0x1ee: V169 = CALL V162 V151 V160 V167 V168 V167 0x0
0x1f4: V170 = ISZERO V169
0x1f5: V171 = ISZERO V170
0x1f6: V172 = 0x19b
0x1f9: JUMPI 0x19b V171
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x1fa
[0x1fa:0x1fd]
---
Predecessors: [0x1c2]
Successors: []
---
0x1fa PUSH1 0x0
0x1fc DUP1
0x1fd REVERT
---
0x1fa: V173 = 0x0
0x1fd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x61]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61]

================================

Block 0x1fe
[0x1fe:0x215]
---
Predecessors: [0x9d]
Successors: [0x135, 0x216]
---
0x1fe JUMPDEST
0x1ff PUSH1 0x0
0x201 SLOAD
0x202 CALLER
0x203 PUSH1 0x1
0x205 PUSH1 0xa0
0x207 PUSH1 0x2
0x209 EXP
0x20a SUB
0x20b SWAP1
0x20c DUP2
0x20d AND
0x20e SWAP2
0x20f AND
0x210 EQ
0x211 ISZERO
0x212 PUSH2 0x135
0x215 JUMPI
---
0x1fe: JUMPDEST 
0x1ff: V174 = 0x0
0x201: V175 = S[0x0]
0x202: V176 = CALLER
0x203: V177 = 0x1
0x205: V178 = 0xa0
0x207: V179 = 0x2
0x209: V180 = EXP 0x2 0xa0
0x20a: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20d: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x20f: V183 = AND V175 0xffffffffffffffffffffffffffffffffffffffff
0x210: V184 = EQ V183 V182
0x211: V185 = ISZERO V184
0x212: V186 = 0x135
0x215: JUMPI 0x135 V185
---
Entry stack: [V11, 0x61, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x61, V48]

================================

Block 0x216
[0x216:0x219]
---
Predecessors: [0x1fe]
Successors: [0x61]
---
0x216 PUSH1 0x2
0x218 SSTORE
0x219 JUMP
---
0x216: V187 = 0x2
0x218: S[0x2] = V48
0x219: JUMP 0x61
---
Entry stack: [V11, 0x61, V48]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x21a
[0x21a:0x251]
---
Predecessors: []
Successors: []
---
0x21a STOP
0x21b LOG1
0x21c PUSH6 0x627a7a723058
0x223 SHA3
0x224 MISSING 0xe9
0x225 PUSH25 0x913113d11cfeda72ac87b0c6f028b8f541a86d6cf2fac0a455
0x23f DUP14
0x240 GAS
0x241 PUSH16 0xb7e90029
---
0x21a: STOP 
0x21b: LOG S0 S1 S2
0x21c: V188 = 0x627a7a723058
0x223: V189 = SHA3 0x627a7a723058 S3
0x224: MISSING 0xe9
0x225: V190 = 0x913113d11cfeda72ac87b0c6f028b8f541a86d6cf2fac0a455
0x240: V191 = GAS
0x241: V192 = 0xb7e90029
---
Entry stack: []
Stack pops: 0
Stack additions: [V189, 0xb7e90029, V191, S12, 0x913113d11cfeda72ac87b0c6f028b8f541a86d6cf2fac0a455, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12]
Exit stack: []

================================

Function 0:
Public function signature: 0x108d40f8
Entry block: 0x63
Exit block: 0x61
Body: 0x61, 0x63, 0xa8, 0xce, 0xda, 0xe0, 0xee, 0xf4, 0x135

Function 1:
Public function signature: 0x3f7e2120
Entry block: 0x77
Exit block: 0x61
Body: 0x61, 0x77, 0x7e, 0x82, 0x138, 0x151, 0x160, 0x166, 0x19b

Function 2:
Public function signature: 0xbea948c8
Entry block: 0x8a
Exit block: 0x1fa
Body: 0x61, 0x8a, 0x19b, 0x19d, 0x1b6, 0x1bc, 0x1c2, 0x1fa

Function 3:
Public function signature: 0xdac47a71
Entry block: 0x92
Exit block: 0x61
Body: 0x61, 0x92, 0x99, 0x9d, 0x135, 0x1fe, 0x216

Function 4:
Public fallback function
Entry block: 0x61
Exit block: 0x61
Body: 0x61

