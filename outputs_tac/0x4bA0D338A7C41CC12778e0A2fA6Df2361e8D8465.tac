Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x67]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x67
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x67
0xa: JUMPI 0x67 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x70]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x2e1a7d4d
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x70
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x2e1a7d4d
0x20: V14 = EQ V12 0x2e1a7d4d
0x21: V15 = 0x70
0x24: JUMPI 0x70 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x85]
---
0x25 DUP1
0x26 PUSH4 0x4313b9e5
0x2b EQ
0x2c PUSH2 0x85
0x2f JUMPI
---
0x26: V16 = 0x4313b9e5
0x2b: V17 = EQ 0x4313b9e5 V12
0x2c: V18 = 0x85
0x2f: JUMPI 0x85 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x9a]
---
0x30 DUP1
0x31 PUSH4 0x8f32d59b
0x36 EQ
0x37 PUSH2 0x9a
0x3a JUMPI
---
0x31: V19 = 0x8f32d59b
0x36: V20 = EQ 0x8f32d59b V12
0x37: V21 = 0x9a
0x3a: JUMPI 0x9a V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0xbe]
---
0x3b DUP1
0x3c PUSH4 0xb4a99a4e
0x41 EQ
0x42 PUSH2 0xbe
0x45 JUMPI
---
0x3c: V22 = 0xb4a99a4e
0x41: V23 = EQ 0xb4a99a4e V12
0x42: V24 = 0xbe
0x45: JUMPI 0xbe V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0xea]
---
0x46 DUP1
0x47 PUSH4 0xd0e30db0
0x4c EQ
0x4d PUSH2 0xea
0x50 JUMPI
---
0x47: V25 = 0xd0e30db0
0x4c: V26 = EQ 0xd0e30db0 V12
0x4d: V27 = 0xea
0x50: JUMPI 0xea V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0xf4]
---
0x51 DUP1
0x52 PUSH4 0xec8cb281
0x57 EQ
0x58 PUSH2 0xf4
0x5b JUMPI
---
0x52: V28 = 0xec8cb281
0x57: V29 = EQ 0xec8cb281 V12
0x58: V30 = 0xf4
0x5b: JUMPI 0xf4 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x116]
---
0x5c DUP1
0x5d PUSH4 0xfc7e286d
0x62 EQ
0x63 PUSH2 0x116
0x66 JUMPI
---
0x5d: V31 = 0xfc7e286d
0x62: V32 = EQ 0xfc7e286d V12
0x63: V33 = 0x116
0x66: JUMPI 0x116 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x6a]
---
Predecessors: [0x0, 0x5c]
Successors: [0x6b]
---
0x67 JUMPDEST
0x68 PUSH2 0x6e
---
0x67: JUMPDEST 
0x68: V34 = 0x6e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6e]
Exit stack: [V12, 0x6e]

================================

Block 0x6b
[0x6b:0x6b]
---
Predecessors: [0x67, 0x22b]
Successors: [0x6c]
---
0x6b JUMPDEST
---
0x6b: JUMPDEST 
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x6b]
Successors: [0x6e]
---
0x6c JUMPDEST
0x6d JUMP
---
0x6c: JUMPDEST 
0x6d: JUMP 0x6e
---
Entry stack: [V12, 0x6e]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x6e
[0x6e:0x6f]
---
Predecessors: [0x6c, 0x1c0, 0x1f2, 0x25a]
Successors: []
---
0x6e JUMPDEST
0x6f STOP
---
0x6e: JUMPDEST 
0x6f: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x70
[0x70:0x76]
---
Predecessors: [0xb]
Successors: [0x77, 0x78]
---
0x70 JUMPDEST
0x71 CALLVALUE
0x72 ISZERO
0x73 PUSH2 0x78
0x76 JUMPI
---
0x70: JUMPDEST 
0x71: V35 = CALLVALUE
0x72: V36 = ISZERO V35
0x73: V37 = 0x78
0x76: JUMPI 0x78 V36
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x77
[0x77:0x77]
---
Predecessors: [0x70]
Successors: []
---
0x77 INVALID
---
0x77: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x70]
Successors: [0x144]
---
0x78 JUMPDEST
0x79 PUSH2 0x6e
0x7c PUSH1 0x4
0x7e CALLDATALOAD
0x7f PUSH2 0x144
0x82 JUMP
---
0x78: JUMPDEST 
0x79: V38 = 0x6e
0x7c: V39 = 0x4
0x7e: V40 = CALLDATALOAD 0x4
0x7f: V41 = 0x144
0x82: JUMP 0x144
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6e, V40]
Exit stack: [V12, 0x6e, V40]

================================

Block 0x83
[0x83:0x84]
---
Predecessors: []
Successors: []
---
0x83 JUMPDEST
0x84 STOP
---
0x83: JUMPDEST 
0x84: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x85
[0x85:0x8b]
---
Predecessors: [0x25]
Successors: [0x8c, 0x8d]
---
0x85 JUMPDEST
0x86 CALLVALUE
0x87 ISZERO
0x88 PUSH2 0x8d
0x8b JUMPI
---
0x85: JUMPDEST 
0x86: V42 = CALLVALUE
0x87: V43 = ISZERO V42
0x88: V44 = 0x8d
0x8b: JUMPI 0x8d V43
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8c
[0x8c:0x8c]
---
Predecessors: [0x85]
Successors: []
---
0x8c INVALID
---
0x8c: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x8d
[0x8d:0x97]
---
Predecessors: [0x85]
Successors: [0x1c4]
---
0x8d JUMPDEST
0x8e PUSH2 0x6e
0x91 PUSH1 0x4
0x93 CALLDATALOAD
0x94 PUSH2 0x1c4
0x97 JUMP
---
0x8d: JUMPDEST 
0x8e: V45 = 0x6e
0x91: V46 = 0x4
0x93: V47 = CALLDATALOAD 0x4
0x94: V48 = 0x1c4
0x97: JUMP 0x1c4
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6e, V47]
Exit stack: [V12, 0x6e, V47]

================================

Block 0x98
[0x98:0x99]
---
Predecessors: []
Successors: []
---
0x98 JUMPDEST
0x99 STOP
---
0x98: JUMPDEST 
0x99: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x9a
[0x9a:0xa0]
---
Predecessors: [0x30]
Successors: [0xa1, 0xa2]
---
0x9a JUMPDEST
0x9b CALLVALUE
0x9c ISZERO
0x9d PUSH2 0xa2
0xa0 JUMPI
---
0x9a: JUMPDEST 
0x9b: V49 = CALLVALUE
0x9c: V50 = ISZERO V49
0x9d: V51 = 0xa2
0xa0: JUMPI 0xa2 V50
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa1
[0xa1:0xa1]
---
Predecessors: [0x9a]
Successors: []
---
0xa1 INVALID
---
0xa1: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xa2
[0xa2:0xa9]
---
Predecessors: [0x9a]
Successors: [0x1f5]
---
0xa2 JUMPDEST
0xa3 PUSH2 0xaa
0xa6 PUSH2 0x1f5
0xa9 JUMP
---
0xa2: JUMPDEST 
0xa3: V52 = 0xaa
0xa6: V53 = 0x1f5
0xa9: JUMP 0x1f5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xaa]
Exit stack: [V12, 0xaa]

================================

Block 0xaa
[0xaa:0xbd]
---
Predecessors: [0x219]
Successors: []
---
0xaa JUMPDEST
0xab PUSH1 0x40
0xad DUP1
0xae MLOAD
0xaf SWAP2
0xb0 ISZERO
0xb1 ISZERO
0xb2 DUP3
0xb3 MSTORE
0xb4 MLOAD
0xb5 SWAP1
0xb6 DUP2
0xb7 SWAP1
0xb8 SUB
0xb9 PUSH1 0x20
0xbb ADD
0xbc SWAP1
0xbd RETURN
---
0xaa: JUMPDEST 
0xab: V54 = 0x40
0xae: V55 = M[0x40]
0xb0: V56 = ISZERO {0x0, 0x1}
0xb1: V57 = ISZERO V56
0xb3: M[V55] = V57
0xb4: V58 = M[0x40]
0xb8: V59 = SUB V55 V58
0xb9: V60 = 0x20
0xbb: V61 = ADD 0x20 V59
0xbd: RETURN V58 V61
---
Entry stack: [V12, 0x6e, V40, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x6e, V40, S1]

================================

Block 0xbe
[0xbe:0xc4]
---
Predecessors: [0x3b]
Successors: [0xc5, 0xc6]
---
0xbe JUMPDEST
0xbf CALLVALUE
0xc0 ISZERO
0xc1 PUSH2 0xc6
0xc4 JUMPI
---
0xbe: JUMPDEST 
0xbf: V62 = CALLVALUE
0xc0: V63 = ISZERO V62
0xc1: V64 = 0xc6
0xc4: JUMPI 0xc6 V63
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc5
[0xc5:0xc5]
---
Predecessors: [0xbe]
Successors: []
---
0xc5 INVALID
---
0xc5: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xc6
[0xc6:0xcd]
---
Predecessors: [0xbe]
Successors: [0x21c]
---
0xc6 JUMPDEST
0xc7 PUSH2 0xce
0xca PUSH2 0x21c
0xcd JUMP
---
0xc6: JUMPDEST 
0xc7: V65 = 0xce
0xca: V66 = 0x21c
0xcd: JUMP 0x21c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0xce]
Exit stack: [V12, 0xce]

================================

Block 0xce
[0xce:0xe9]
---
Predecessors: [0x21c]
Successors: []
---
0xce JUMPDEST
0xcf PUSH1 0x40
0xd1 DUP1
0xd2 MLOAD
0xd3 PUSH1 0x1
0xd5 PUSH1 0xa0
0xd7 PUSH1 0x2
0xd9 EXP
0xda SUB
0xdb SWAP1
0xdc SWAP3
0xdd AND
0xde DUP3
0xdf MSTORE
0xe0 MLOAD
0xe1 SWAP1
0xe2 DUP2
0xe3 SWAP1
0xe4 SUB
0xe5 PUSH1 0x20
0xe7 ADD
0xe8 SWAP1
0xe9 RETURN
---
0xce: JUMPDEST 
0xcf: V67 = 0x40
0xd2: V68 = M[0x40]
0xd3: V69 = 0x1
0xd5: V70 = 0xa0
0xd7: V71 = 0x2
0xd9: V72 = EXP 0x2 0xa0
0xda: V73 = SUB 0x10000000000000000000000000000000000000000 0x1
0xdd: V74 = AND V197 0xffffffffffffffffffffffffffffffffffffffff
0xdf: M[V68] = V74
0xe0: V75 = M[0x40]
0xe4: V76 = SUB V68 V75
0xe5: V77 = 0x20
0xe7: V78 = ADD 0x20 V76
0xe9: RETURN V75 V78
---
Entry stack: [V12, 0xce, V197]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0xce]

================================

Block 0xea
[0xea:0xf1]
---
Predecessors: [0x46]
Successors: [0x22b]
---
0xea JUMPDEST
0xeb PUSH2 0x6e
0xee PUSH2 0x22b
0xf1 JUMP
---
0xea: JUMPDEST 
0xeb: V79 = 0x6e
0xee: V80 = 0x22b
0xf1: JUMP 0x22b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x6e]
Exit stack: [V12, 0x6e]

================================

Block 0xf2
[0xf2:0xf3]
---
Predecessors: []
Successors: []
---
0xf2 JUMPDEST
0xf3 STOP
---
0xf2: JUMPDEST 
0xf3: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf4
[0xf4:0xfa]
---
Predecessors: [0x51]
Successors: [0xfb, 0xfc]
---
0xf4 JUMPDEST
0xf5 CALLVALUE
0xf6 ISZERO
0xf7 PUSH2 0xfc
0xfa JUMPI
---
0xf4: JUMPDEST 
0xf5: V81 = CALLVALUE
0xf6: V82 = ISZERO V81
0xf7: V83 = 0xfc
0xfa: JUMPI 0xfc V82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfb
[0xfb:0xfb]
---
Predecessors: [0xf4]
Successors: []
---
0xfb INVALID
---
0xfb: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xfc
[0xfc:0x103]
---
Predecessors: [0xf4]
Successors: [0x25c]
---
0xfc JUMPDEST
0xfd PUSH2 0x104
0x100 PUSH2 0x25c
0x103 JUMP
---
0xfc: JUMPDEST 
0xfd: V84 = 0x104
0x100: V85 = 0x25c
0x103: JUMP 0x25c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104]
Exit stack: [V12, 0x104]

================================

Block 0x104
[0x104:0x115]
---
Predecessors: [0x25c, 0x262]
Successors: []
---
0x104 JUMPDEST
0x105 PUSH1 0x40
0x107 DUP1
0x108 MLOAD
0x109 SWAP2
0x10a DUP3
0x10b MSTORE
0x10c MLOAD
0x10d SWAP1
0x10e DUP2
0x10f SWAP1
0x110 SUB
0x111 PUSH1 0x20
0x113 ADD
0x114 SWAP1
0x115 RETURN
---
0x104: JUMPDEST 
0x105: V86 = 0x40
0x108: V87 = M[0x40]
0x10b: M[V87] = S0
0x10c: V88 = M[0x40]
0x110: V89 = SUB V87 V88
0x111: V90 = 0x20
0x113: V91 = ADD 0x20 V89
0x115: RETURN V88 V91
---
Entry stack: [V12, 0x104, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x104]

================================

Block 0x116
[0x116:0x11c]
---
Predecessors: [0x5c]
Successors: [0x11d, 0x11e]
---
0x116 JUMPDEST
0x117 CALLVALUE
0x118 ISZERO
0x119 PUSH2 0x11e
0x11c JUMPI
---
0x116: JUMPDEST 
0x117: V92 = CALLVALUE
0x118: V93 = ISZERO V92
0x119: V94 = 0x11e
0x11c: JUMPI 0x11e V93
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11d
[0x11d:0x11d]
---
Predecessors: [0x116]
Successors: []
---
0x11d INVALID
---
0x11d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x11e
[0x11e:0x131]
---
Predecessors: [0x116]
Successors: [0x262]
---
0x11e JUMPDEST
0x11f PUSH2 0x104
0x122 PUSH1 0x1
0x124 PUSH1 0xa0
0x126 PUSH1 0x2
0x128 EXP
0x129 SUB
0x12a PUSH1 0x4
0x12c CALLDATALOAD
0x12d AND
0x12e PUSH2 0x262
0x131 JUMP
---
0x11e: JUMPDEST 
0x11f: V95 = 0x104
0x122: V96 = 0x1
0x124: V97 = 0xa0
0x126: V98 = 0x2
0x128: V99 = EXP 0x2 0xa0
0x129: V100 = SUB 0x10000000000000000000000000000000000000000 0x1
0x12a: V101 = 0x4
0x12c: V102 = CALLDATALOAD 0x4
0x12d: V103 = AND V102 0xffffffffffffffffffffffffffffffffffffffff
0x12e: V104 = 0x262
0x131: JUMP 0x262
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x104, V103]
Exit stack: [V12, 0x104, V103]

================================

Block 0x132
[0x132:0x143]
---
Predecessors: []
Successors: []
---
0x132 JUMPDEST
0x133 PUSH1 0x40
0x135 DUP1
0x136 MLOAD
0x137 SWAP2
0x138 DUP3
0x139 MSTORE
0x13a MLOAD
0x13b SWAP1
0x13c DUP2
0x13d SWAP1
0x13e SUB
0x13f PUSH1 0x20
0x141 ADD
0x142 SWAP1
0x143 RETURN
---
0x132: JUMPDEST 
0x133: V105 = 0x40
0x136: V106 = M[0x40]
0x139: M[V106] = S0
0x13a: V107 = M[0x40]
0x13e: V108 = SUB V106 V107
0x13f: V109 = 0x20
0x141: V110 = ADD 0x20 V108
0x143: RETURN V107 V110
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x144
[0x144:0x14d]
---
Predecessors: [0x78]
Successors: [0x1f5]
---
0x144 JUMPDEST
0x145 PUSH1 0x0
0x147 PUSH2 0x14e
0x14a PUSH2 0x1f5
0x14d JUMP
---
0x144: JUMPDEST 
0x145: V111 = 0x0
0x147: V112 = 0x14e
0x14a: V113 = 0x1f5
0x14d: JUMP 0x1f5
---
Entry stack: [V12, 0x6e, V40]
Stack pops: 0
Stack additions: [0x0, 0x14e]
Exit stack: [V12, 0x6e, V40, 0x0, 0x14e]

================================

Block 0x14e
[0x14e:0x154]
---
Predecessors: [0x219]
Successors: [0x155, 0x15c]
---
0x14e JUMPDEST
0x14f DUP1
0x150 ISZERO
0x151 PUSH2 0x15c
0x154 JUMPI
---
0x14e: JUMPDEST 
0x150: V114 = ISZERO {0x0, 0x1}
0x151: V115 = 0x15c
0x154: JUMPI 0x15c V114
---
Entry stack: [V12, 0x6e, V40, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x6e, V40, S1, {0x0, 0x1}]

================================

Block 0x155
[0x155:0x15b]
---
Predecessors: [0x14e]
Successors: [0x15c]
---
0x155 POP
0x156 PUSH1 0x2
0x158 SLOAD
0x159 TIMESTAMP
0x15a LT
0x15b ISZERO
---
0x156: V116 = 0x2
0x158: V117 = S[0x2]
0x159: V118 = TIMESTAMP
0x15a: V119 = LT V118 V117
0x15b: V120 = ISZERO V119
---
Entry stack: [V12, 0x6e, V40, S1, {0x0, 0x1}]
Stack pops: 1
Stack additions: [V120]
Exit stack: [V12, 0x6e, V40, S1, V120]

================================

Block 0x15c
[0x15c:0x161]
---
Predecessors: [0x14e, 0x155]
Successors: [0x162, 0x1bd]
---
0x15c JUMPDEST
0x15d ISZERO
0x15e PUSH2 0x1bd
0x161 JUMPI
---
0x15c: JUMPDEST 
0x15d: V121 = ISZERO S0
0x15e: V122 = 0x1bd
0x161: JUMPI 0x1bd V121
---
Entry stack: [V12, 0x6e, V40, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x6e, V40, S1]

================================

Block 0x162
[0x162:0x185]
---
Predecessors: [0x15c]
Successors: [0x186, 0x18b]
---
0x162 POP
0x163 PUSH1 0x1
0x165 PUSH1 0xa0
0x167 PUSH1 0x2
0x169 EXP
0x16a SUB
0x16b CALLER
0x16c AND
0x16d PUSH1 0x0
0x16f SWAP1
0x170 DUP2
0x171 MSTORE
0x172 PUSH1 0x1
0x174 PUSH1 0x20
0x176 MSTORE
0x177 PUSH1 0x40
0x179 SWAP1
0x17a SHA3
0x17b SLOAD
0x17c DUP1
0x17d DUP3
0x17e GT
0x17f DUP1
0x180 ISZERO
0x181 SWAP1
0x182 PUSH2 0x18b
0x185 JUMPI
---
0x163: V123 = 0x1
0x165: V124 = 0xa0
0x167: V125 = 0x2
0x169: V126 = EXP 0x2 0xa0
0x16a: V127 = SUB 0x10000000000000000000000000000000000000000 0x1
0x16b: V128 = CALLER
0x16c: V129 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x16d: V130 = 0x0
0x171: M[0x0] = V129
0x172: V131 = 0x1
0x174: V132 = 0x20
0x176: M[0x20] = 0x1
0x177: V133 = 0x40
0x17a: V134 = SHA3 0x0 0x40
0x17b: V135 = S[V134]
0x17e: V136 = GT V40 V135
0x180: V137 = ISZERO V136
0x182: V138 = 0x18b
0x185: JUMPI 0x18b V136
---
Entry stack: [V12, 0x6e, V40, S0]
Stack pops: 2
Stack additions: [S1, V135, V137]
Exit stack: [V12, 0x6e, V40, V135, V137]

================================

Block 0x186
[0x186:0x18a]
---
Predecessors: [0x162]
Successors: [0x18b]
---
0x186 POP
0x187 PUSH1 0x0
0x189 DUP2
0x18a GT
---
0x187: V139 = 0x0
0x18a: V140 = GT V135 0x0
---
Entry stack: [V12, 0x6e, V40, V135, V137]
Stack pops: 2
Stack additions: [S1, V140]
Exit stack: [V12, 0x6e, V40, V135, V140]

================================

Block 0x18b
[0x18b:0x190]
---
Predecessors: [0x162, 0x186]
Successors: [0x191, 0x1bd]
---
0x18b JUMPDEST
0x18c ISZERO
0x18d PUSH2 0x1bd
0x190 JUMPI
---
0x18b: JUMPDEST 
0x18c: V141 = ISZERO S0
0x18d: V142 = 0x1bd
0x190: JUMPI 0x1bd V141
---
Entry stack: [V12, 0x6e, V40, V135, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x6e, V40, V135]

================================

Block 0x191
[0x191:0x1bb]
---
Predecessors: [0x18b]
Successors: [0x1bc, 0x1bd]
---
0x191 PUSH1 0x40
0x193 MLOAD
0x194 PUSH1 0x1
0x196 PUSH1 0xa0
0x198 PUSH1 0x2
0x19a EXP
0x19b SUB
0x19c CALLER
0x19d AND
0x19e SWAP1
0x19f DUP4
0x1a0 ISZERO
0x1a1 PUSH2 0x8fc
0x1a4 MUL
0x1a5 SWAP1
0x1a6 DUP5
0x1a7 SWAP1
0x1a8 PUSH1 0x0
0x1aa DUP2
0x1ab DUP2
0x1ac DUP2
0x1ad DUP6
0x1ae DUP9
0x1af DUP9
0x1b0 CALL
0x1b1 SWAP4
0x1b2 POP
0x1b3 POP
0x1b4 POP
0x1b5 POP
0x1b6 ISZERO
0x1b7 ISZERO
0x1b8 PUSH2 0x1bd
0x1bb JUMPI
---
0x191: V143 = 0x40
0x193: V144 = M[0x40]
0x194: V145 = 0x1
0x196: V146 = 0xa0
0x198: V147 = 0x2
0x19a: V148 = EXP 0x2 0xa0
0x19b: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19c: V150 = CALLER
0x19d: V151 = AND V150 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V152 = ISZERO V40
0x1a1: V153 = 0x8fc
0x1a4: V154 = MUL 0x8fc V152
0x1a8: V155 = 0x0
0x1b0: V156 = CALL V154 V151 V40 V144 0x0 V144 0x0
0x1b6: V157 = ISZERO V156
0x1b7: V158 = ISZERO V157
0x1b8: V159 = 0x1bd
0x1bb: JUMPI 0x1bd V158
---
Entry stack: [V12, 0x6e, V40, V135]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x6e, V40, V135]

================================

Block 0x1bc
[0x1bc:0x1bc]
---
Predecessors: [0x191]
Successors: []
---
0x1bc INVALID
---
0x1bc: INVALID 
---
Entry stack: [V12, 0x6e, V40, V135]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V40, V135]

================================

Block 0x1bd
[0x1bd:0x1bd]
---
Predecessors: [0x15c, 0x18b, 0x191]
Successors: [0x1be]
---
0x1bd JUMPDEST
---
0x1bd: JUMPDEST 
---
Entry stack: [V12, 0x6e, V40, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V40, S0]

================================

Block 0x1be
[0x1be:0x1be]
---
Predecessors: [0x1bd]
Successors: [0x1bf]
---
0x1be JUMPDEST
---
0x1be: JUMPDEST 
---
Entry stack: [V12, 0x6e, V40, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V40, S0]

================================

Block 0x1bf
[0x1bf:0x1bf]
---
Predecessors: [0x1be]
Successors: [0x1c0]
---
0x1bf JUMPDEST
---
0x1bf: JUMPDEST 
---
Entry stack: [V12, 0x6e, V40, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e, V40, S0]

================================

Block 0x1c0
[0x1c0:0x1c3]
---
Predecessors: [0x1bf]
Successors: [0x6e]
---
0x1c0 JUMPDEST
0x1c1 POP
0x1c2 POP
0x1c3 JUMP
---
0x1c0: JUMPDEST 
0x1c3: JUMP 0x6e
---
Entry stack: [V12, 0x6e, V40, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x1c4
[0x1c4:0x1f1]
---
Predecessors: [0x8d]
Successors: [0x1f2]
---
0x1c4 JUMPDEST
0x1c5 PUSH1 0x3
0x1c7 DUP1
0x1c8 SLOAD
0x1c9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1de NOT
0x1df AND
0x1e0 CALLER
0x1e1 PUSH1 0x1
0x1e3 PUSH1 0xa0
0x1e5 PUSH1 0x2
0x1e7 EXP
0x1e8 SUB
0x1e9 AND
0x1ea OR
0x1eb SWAP1
0x1ec SSTORE
0x1ed PUSH1 0x2
0x1ef DUP2
0x1f0 SWAP1
0x1f1 SSTORE
---
0x1c4: JUMPDEST 
0x1c5: V160 = 0x3
0x1c8: V161 = S[0x3]
0x1c9: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x1de: V163 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1df: V164 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V161
0x1e0: V165 = CALLER
0x1e1: V166 = 0x1
0x1e3: V167 = 0xa0
0x1e5: V168 = 0x2
0x1e7: V169 = EXP 0x2 0xa0
0x1e8: V170 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1e9: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x1ea: V172 = OR V171 V164
0x1ec: S[0x3] = V172
0x1ed: V173 = 0x2
0x1f1: S[0x2] = V47
---
Entry stack: [V12, 0x6e, V47]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x6e, V47]

================================

Block 0x1f2
[0x1f2:0x1f4]
---
Predecessors: [0x1c4]
Successors: [0x6e]
---
0x1f2 JUMPDEST
0x1f3 POP
0x1f4 JUMP
---
0x1f2: JUMPDEST 
0x1f4: JUMP 0x6e
---
Entry stack: [V12, 0x6e, V47]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f5
[0x1f5:0x20d]
---
Predecessors: [0xa2, 0x144]
Successors: [0x20e, 0x215]
---
0x1f5 JUMPDEST
0x1f6 PUSH1 0x0
0x1f8 DUP1
0x1f9 SLOAD
0x1fa CALLER
0x1fb PUSH1 0x1
0x1fd PUSH1 0xa0
0x1ff PUSH1 0x2
0x201 EXP
0x202 SUB
0x203 SWAP1
0x204 DUP2
0x205 AND
0x206 SWAP2
0x207 AND
0x208 EQ
0x209 ISZERO
0x20a PUSH2 0x215
0x20d JUMPI
---
0x1f5: JUMPDEST 
0x1f6: V174 = 0x0
0x1f9: V175 = S[0x0]
0x1fa: V176 = CALLER
0x1fb: V177 = 0x1
0x1fd: V178 = 0xa0
0x1ff: V179 = 0x2
0x201: V180 = EXP 0x2 0xa0
0x202: V181 = SUB 0x10000000000000000000000000000000000000000 0x1
0x205: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V176
0x207: V183 = AND V175 0xffffffffffffffffffffffffffffffffffffffff
0x208: V184 = EQ V183 V182
0x209: V185 = ISZERO V184
0x20a: V186 = 0x215
0x20d: JUMPI 0x215 V185
---
Entry stack: [V12, 0x6e, V40, S1, {0xaa, 0x14e}]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x6e, V40, S1, {0xaa, 0x14e}, 0x0]

================================

Block 0x20e
[0x20e:0x214]
---
Predecessors: [0x1f5]
Successors: [0x219]
---
0x20e POP
0x20f PUSH1 0x1
0x211 PUSH2 0x219
0x214 JUMP
---
0x20f: V187 = 0x1
0x211: V188 = 0x219
0x214: JUMP 0x219
---
Entry stack: [V12, 0x6e, V40, S2, {0xaa, 0x14e}, 0x0]
Stack pops: 1
Stack additions: [0x1]
Exit stack: [V12, 0x6e, V40, S2, {0xaa, 0x14e}, 0x1]

================================

Block 0x215
[0x215:0x218]
---
Predecessors: [0x1f5]
Successors: [0x219]
---
0x215 JUMPDEST
0x216 POP
0x217 PUSH1 0x0
---
0x215: JUMPDEST 
0x217: V189 = 0x0
---
Entry stack: [V12, 0x6e, V40, S2, {0xaa, 0x14e}, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x6e, V40, S2, {0xaa, 0x14e}, 0x0]

================================

Block 0x219
[0x219:0x21b]
---
Predecessors: [0x20e, 0x215]
Successors: [0xaa, 0x14e]
---
0x219 JUMPDEST
0x21a SWAP1
0x21b JUMP
---
0x219: JUMPDEST 
0x21b: JUMP {0xaa, 0x14e}
---
Entry stack: [V12, 0x6e, V40, S2, {0xaa, 0x14e}, {0x0, 0x1}]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x6e, V40, S2, {0x0, 0x1}]

================================

Block 0x21c
[0x21c:0x22a]
---
Predecessors: [0xc6]
Successors: [0xce]
---
0x21c JUMPDEST
0x21d PUSH1 0x3
0x21f SLOAD
0x220 PUSH1 0x1
0x222 PUSH1 0xa0
0x224 PUSH1 0x2
0x226 EXP
0x227 SUB
0x228 AND
0x229 DUP2
0x22a JUMP
---
0x21c: JUMPDEST 
0x21d: V190 = 0x3
0x21f: V191 = S[0x3]
0x220: V192 = 0x1
0x222: V193 = 0xa0
0x224: V194 = 0x2
0x226: V195 = EXP 0x2 0xa0
0x227: V196 = SUB 0x10000000000000000000000000000000000000000 0x1
0x228: V197 = AND 0xffffffffffffffffffffffffffffffffffffffff V191
0x22a: JUMP 0xce
---
Entry stack: [V12, 0xce]
Stack pops: 1
Stack additions: [S0, V197]
Exit stack: [V12, 0xce, V197]

================================

Block 0x22b
[0x22b:0x23a]
---
Predecessors: [0xea]
Successors: [0x6b, 0x23b]
---
0x22b JUMPDEST
0x22c PUSH8 0x6f05b59d3b20000
0x235 CALLVALUE
0x236 LT
0x237 PUSH2 0x6b
0x23a JUMPI
---
0x22b: JUMPDEST 
0x22c: V198 = 0x6f05b59d3b20000
0x235: V199 = CALLVALUE
0x236: V200 = LT V199 0x6f05b59d3b20000
0x237: V201 = 0x6b
0x23a: JUMPI 0x6b V200
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x23b
[0x23b:0x258]
---
Predecessors: [0x22b]
Successors: [0x259]
---
0x23b PUSH1 0x1
0x23d PUSH1 0xa0
0x23f PUSH1 0x2
0x241 EXP
0x242 SUB
0x243 CALLER
0x244 AND
0x245 PUSH1 0x0
0x247 SWAP1
0x248 DUP2
0x249 MSTORE
0x24a PUSH1 0x1
0x24c PUSH1 0x20
0x24e MSTORE
0x24f PUSH1 0x40
0x251 SWAP1
0x252 SHA3
0x253 DUP1
0x254 SLOAD
0x255 CALLVALUE
0x256 ADD
0x257 SWAP1
0x258 SSTORE
---
0x23b: V202 = 0x1
0x23d: V203 = 0xa0
0x23f: V204 = 0x2
0x241: V205 = EXP 0x2 0xa0
0x242: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x243: V207 = CALLER
0x244: V208 = AND V207 0xffffffffffffffffffffffffffffffffffffffff
0x245: V209 = 0x0
0x249: M[0x0] = V208
0x24a: V210 = 0x1
0x24c: V211 = 0x20
0x24e: M[0x20] = 0x1
0x24f: V212 = 0x40
0x252: V213 = SHA3 0x0 0x40
0x254: V214 = S[V213]
0x255: V215 = CALLVALUE
0x256: V216 = ADD V215 V214
0x258: S[V213] = V216
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x259
[0x259:0x259]
---
Predecessors: [0x23b]
Successors: [0x25a]
---
0x259 JUMPDEST
---
0x259: JUMPDEST 
---
Entry stack: [V12, 0x6e]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x6e]

================================

Block 0x25a
[0x25a:0x25b]
---
Predecessors: [0x259]
Successors: [0x6e]
---
0x25a JUMPDEST
0x25b JUMP
---
0x25a: JUMPDEST 
0x25b: JUMP 0x6e
---
Entry stack: [V12, 0x6e]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x25c
[0x25c:0x261]
---
Predecessors: [0xfc]
Successors: [0x104]
---
0x25c JUMPDEST
0x25d PUSH1 0x2
0x25f SLOAD
0x260 DUP2
0x261 JUMP
---
0x25c: JUMPDEST 
0x25d: V217 = 0x2
0x25f: V218 = S[0x2]
0x261: JUMP 0x104
---
Entry stack: [V12, 0x104]
Stack pops: 1
Stack additions: [S0, V218]
Exit stack: [V12, 0x104, V218]

================================

Block 0x262
[0x262:0x273]
---
Predecessors: [0x11e]
Successors: [0x104]
---
0x262 JUMPDEST
0x263 PUSH1 0x1
0x265 PUSH1 0x20
0x267 MSTORE
0x268 PUSH1 0x0
0x26a SWAP1
0x26b DUP2
0x26c MSTORE
0x26d PUSH1 0x40
0x26f SWAP1
0x270 SHA3
0x271 SLOAD
0x272 DUP2
0x273 JUMP
---
0x262: JUMPDEST 
0x263: V219 = 0x1
0x265: V220 = 0x20
0x267: M[0x20] = 0x1
0x268: V221 = 0x0
0x26c: M[0x0] = V103
0x26d: V222 = 0x40
0x270: V223 = SHA3 0x0 0x40
0x271: V224 = S[V223]
0x273: JUMP 0x104
---
Entry stack: [V12, 0x104, V103]
Stack pops: 2
Stack additions: [S1, V224]
Exit stack: [V12, 0x104, V224]

================================

Block 0x274
[0x274:0x29f]
---
Predecessors: []
Successors: []
---
0x274 STOP
0x275 LOG1
0x276 PUSH6 0x627a7a723058
0x27d SHA3
0x27e MISSING 0xf8
0x27f MISSING 0xee
0x280 PUSH29 0xfb4fa1e06f1dbc08bda29f90fdfdfb0355a102aec677d8846f80e6d215
0x29e STOP
0x29f MISSING 0x29
---
0x274: STOP 
0x275: LOG S0 S1 S2
0x276: V225 = 0x627a7a723058
0x27d: V226 = SHA3 0x627a7a723058 S3
0x27e: MISSING 0xf8
0x27f: MISSING 0xee
0x280: V227 = 0xfb4fa1e06f1dbc08bda29f90fdfdfb0355a102aec677d8846f80e6d215
0x29e: STOP 
0x29f: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V226, 0xfb4fa1e06f1dbc08bda29f90fdfdfb0355a102aec677d8846f80e6d215]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x70
Exit block: 0x6e
Body: 0x6e, 0x70, 0x77, 0x78, 0x144, 0x14e, 0x155, 0x15c, 0x162, 0x186, 0x18b, 0x191, 0x1bc, 0x1bd, 0x1be, 0x1bf, 0x1c0

Function 1:
Public function signature: 0x4313b9e5
Entry block: 0x85
Exit block: 0x6e
Body: 0x6e, 0x85, 0x8c, 0x8d, 0x1c4, 0x1f2

Function 2:
Public function signature: 0x8f32d59b
Entry block: 0x9a
Exit block: 0xa1
Body: 0x9a, 0xa1, 0xa2, 0xaa

Function 3:
Public function signature: 0xb4a99a4e
Entry block: 0xbe
Exit block: 0xce
Body: 0xbe, 0xc5, 0xc6, 0xce, 0x21c

Function 4:
Public function signature: 0xd0e30db0
Entry block: 0xea
Exit block: 0x6e
Body: 0x6b, 0x6c, 0x6e, 0xea, 0x22b, 0x23b, 0x259, 0x25a

Function 5:
Public function signature: 0xec8cb281
Entry block: 0xf4
Exit block: 0x104
Body: 0xf4, 0xfb, 0xfc, 0x104, 0x25c

Function 6:
Public function signature: 0xfc7e286d
Entry block: 0x116
Exit block: 0x104
Body: 0x104, 0x116, 0x11d, 0x11e, 0x262

Function 7:
Public fallback function
Entry block: 0x67
Exit block: 0x6e
Body: 0x67, 0x6b, 0x6c, 0x6e

Function 8:
Private function
Entry block: 0x1f5
Exit block: 0x219
Body: 0x1f5, 0x20e, 0x215, 0x219

