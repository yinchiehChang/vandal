Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xeb]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xeb
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xeb
0xa: JUMPI 0xeb V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x1fc]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x6fdde03
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x1fc
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x6fdde03
0x20: V14 = EQ V12 0x6fdde03
0x21: V15 = 0x1fc
0x24: JUMPI 0x1fc V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x287]
---
0x25 DUP1
0x26 PUSH4 0x95ea7b3
0x2b EQ
0x2c PUSH2 0x287
0x2f JUMPI
---
0x26: V16 = 0x95ea7b3
0x2b: V17 = EQ 0x95ea7b3 V12
0x2c: V18 = 0x287
0x2f: JUMPI 0x287 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x2bd]
---
0x30 DUP1
0x31 PUSH4 0xdcf4b8f
0x36 EQ
0x37 PUSH2 0x2bd
0x3a JUMPI
---
0x31: V19 = 0xdcf4b8f
0x36: V20 = EQ 0xdcf4b8f V12
0x37: V21 = 0x2bd
0x3a: JUMPI 0x2bd V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x2e2]
---
0x3b DUP1
0x3c PUSH4 0x18160ddd
0x41 EQ
0x42 PUSH2 0x2e2
0x45 JUMPI
---
0x3c: V22 = 0x18160ddd
0x41: V23 = EQ 0x18160ddd V12
0x42: V24 = 0x2e2
0x45: JUMPI 0x2e2 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x307]
---
0x46 DUP1
0x47 PUSH4 0x23b872dd
0x4c EQ
0x4d PUSH2 0x307
0x50 JUMPI
---
0x47: V25 = 0x23b872dd
0x4c: V26 = EQ 0x23b872dd V12
0x4d: V27 = 0x307
0x50: JUMPI 0x307 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x343]
---
0x51 DUP1
0x52 PUSH4 0x313ce567
0x57 EQ
0x58 PUSH2 0x343
0x5b JUMPI
---
0x52: V28 = 0x313ce567
0x57: V29 = EQ 0x313ce567 V12
0x58: V30 = 0x343
0x5b: JUMPI 0x343 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x36c]
---
0x5c DUP1
0x5d PUSH4 0x4172d080
0x62 EQ
0x63 PUSH2 0x36c
0x66 JUMPI
---
0x5d: V31 = 0x4172d080
0x62: V32 = EQ 0x4172d080 V12
0x63: V33 = 0x36c
0x66: JUMPI 0x36c V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x391]
---
0x67 DUP1
0x68 PUSH4 0x580cf318
0x6d EQ
0x6e PUSH2 0x391
0x71 JUMPI
---
0x68: V34 = 0x580cf318
0x6d: V35 = EQ 0x580cf318 V12
0x6e: V36 = 0x391
0x71: JUMPI 0x391 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x3b6]
---
0x72 DUP1
0x73 PUSH4 0x64acdb77
0x78 EQ
0x79 PUSH2 0x3b6
0x7c JUMPI
---
0x73: V37 = 0x64acdb77
0x78: V38 = EQ 0x64acdb77 V12
0x79: V39 = 0x3b6
0x7c: JUMPI 0x3b6 V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x3cb]
---
0x7d DUP1
0x7e PUSH4 0x6f7920fd
0x83 EQ
0x84 PUSH2 0x3cb
0x87 JUMPI
---
0x7e: V40 = 0x6f7920fd
0x83: V41 = EQ 0x6f7920fd V12
0x84: V42 = 0x3cb
0x87: JUMPI 0x3cb V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x3f0]
---
0x88 DUP1
0x89 PUSH4 0x70a08231
0x8e EQ
0x8f PUSH2 0x3f0
0x92 JUMPI
---
0x89: V43 = 0x70a08231
0x8e: V44 = EQ 0x70a08231 V12
0x8f: V45 = 0x3f0
0x92: JUMPI 0x3f0 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x421]
---
0x93 DUP1
0x94 PUSH4 0x8f580996
0x99 EQ
0x9a PUSH2 0x421
0x9d JUMPI
---
0x94: V46 = 0x8f580996
0x99: V47 = EQ 0x8f580996 V12
0x9a: V48 = 0x421
0x9d: JUMPI 0x421 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x436]
---
0x9e DUP1
0x9f PUSH4 0x95d89b41
0xa4 EQ
0xa5 PUSH2 0x436
0xa8 JUMPI
---
0x9f: V49 = 0x95d89b41
0xa4: V50 = EQ 0x95d89b41 V12
0xa5: V51 = 0x436
0xa8: JUMPI 0x436 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x4c1]
---
0xa9 DUP1
0xaa PUSH4 0x98b01fe3
0xaf EQ
0xb0 PUSH2 0x4c1
0xb3 JUMPI
---
0xaa: V52 = 0x98b01fe3
0xaf: V53 = EQ 0x98b01fe3 V12
0xb0: V54 = 0x4c1
0xb3: JUMPI 0x4c1 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x4e6]
---
0xb4 DUP1
0xb5 PUSH4 0xa9059cbb
0xba EQ
0xbb PUSH2 0x4e6
0xbe JUMPI
---
0xb5: V55 = 0xa9059cbb
0xba: V56 = EQ 0xa9059cbb V12
0xbb: V57 = 0x4e6
0xbe: JUMPI 0x4e6 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x51c]
---
0xbf DUP1
0xc0 PUSH4 0xc59d4847
0xc5 EQ
0xc6 PUSH2 0x51c
0xc9 JUMPI
---
0xc0: V58 = 0xc59d4847
0xc5: V59 = EQ 0xc59d4847 V12
0xc6: V60 = 0x51c
0xc9: JUMPI 0x51c V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xd4]
---
Predecessors: [0xbf]
Successors: [0xd5, 0x560]
---
0xca DUP1
0xcb PUSH4 0xda040c0f
0xd0 EQ
0xd1 PUSH2 0x560
0xd4 JUMPI
---
0xcb: V61 = 0xda040c0f
0xd0: V62 = EQ 0xda040c0f V12
0xd1: V63 = 0x560
0xd4: JUMPI 0x560 V62
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xd5
[0xd5:0xdf]
---
Predecessors: [0xca]
Successors: [0xe0, 0x587]
---
0xd5 DUP1
0xd6 PUSH4 0xdd62ed3e
0xdb EQ
0xdc PUSH2 0x587
0xdf JUMPI
---
0xd6: V64 = 0xdd62ed3e
0xdb: V65 = EQ 0xdd62ed3e V12
0xdc: V66 = 0x587
0xdf: JUMPI 0x587 V65
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xe0
[0xe0:0xea]
---
Predecessors: [0xd5]
Successors: [0xeb, 0x5be]
---
0xe0 DUP1
0xe1 PUSH4 0xe58fc54c
0xe6 EQ
0xe7 PUSH2 0x5be
0xea JUMPI
---
0xe1: V67 = 0xe58fc54c
0xe6: V68 = EQ 0xe58fc54c V12
0xe7: V69 = 0x5be
0xea: JUMPI 0x5be V68
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xeb
[0xeb:0xee]
---
Predecessors: [0x0, 0xe0]
Successors: [0xef]
---
0xeb JUMPDEST
0xec PUSH2 0x1fa
---
0xeb: JUMPDEST 
0xec: V70 = 0x1fa
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1fa]
Exit stack: [V12, 0x1fa]

================================

Block 0xef
[0xef:0x102]
---
Predecessors: [0xeb]
Successors: [0x103, 0x107]
---
0xef JUMPDEST
0xf0 PUSH1 0x0
0xf2 DUP1
0xf3 SLOAD
0xf4 PUSH1 0xa0
0xf6 PUSH1 0x2
0xf8 EXP
0xf9 SWAP1
0xfa DIV
0xfb PUSH1 0xff
0xfd AND
0xfe ISZERO
0xff PUSH2 0x107
0x102 JUMPI
---
0xef: JUMPDEST 
0xf0: V71 = 0x0
0xf3: V72 = S[0x0]
0xf4: V73 = 0xa0
0xf6: V74 = 0x2
0xf8: V75 = EXP 0x2 0xa0
0xfa: V76 = DIV V72 0x10000000000000000000000000000000000000000
0xfb: V77 = 0xff
0xfd: V78 = AND 0xff V76
0xfe: V79 = ISZERO V78
0xff: V80 = 0x107
0x102: JUMPI 0x107 V79
---
Entry stack: [V12, 0x1fa]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x1fa, 0x0]

================================

Block 0x103
[0x103:0x106]
---
Predecessors: [0xef]
Successors: []
---
0x103 PUSH1 0x0
0x105 DUP1
0x106 REVERT
---
0x103: V81 = 0x0
0x106: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1fa, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1fa, 0x0]

================================

Block 0x107
[0x107:0x10e]
---
Predecessors: [0xef]
Successors: [0x10f, 0x113]
---
0x107 JUMPDEST
0x108 CALLVALUE
0x109 ISZERO
0x10a ISZERO
0x10b PUSH2 0x113
0x10e JUMPI
---
0x107: JUMPDEST 
0x108: V82 = CALLVALUE
0x109: V83 = ISZERO V82
0x10a: V84 = ISZERO V83
0x10b: V85 = 0x113
0x10e: JUMPI 0x113 V84
---
Entry stack: [V12, 0x1fa, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1fa, 0x0]

================================

Block 0x10f
[0x10f:0x112]
---
Predecessors: [0x107]
Successors: [0x1f7]
---
0x10f PUSH2 0x1f7
0x112 JUMP
---
0x10f: V86 = 0x1f7
0x112: JUMP 0x1f7
---
Entry stack: [V12, 0x1fa, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1fa, 0x0]

================================

Block 0x113
[0x113:0x142]
---
Predecessors: [0x107]
Successors: [0x143, 0x147]
---
0x113 JUMPDEST
0x114 PUSH1 0x0
0x116 SLOAD
0x117 PUSH1 0x1
0x119 PUSH1 0xa0
0x11b PUSH1 0x2
0x11d EXP
0x11e SUB
0x11f AND
0x120 CALLVALUE
0x121 DUP1
0x122 ISZERO
0x123 PUSH2 0x8fc
0x126 MUL
0x127 SWAP1
0x128 PUSH1 0x40
0x12a MLOAD
0x12b PUSH1 0x0
0x12d PUSH1 0x40
0x12f MLOAD
0x130 DUP1
0x131 DUP4
0x132 SUB
0x133 DUP2
0x134 DUP6
0x135 DUP9
0x136 DUP9
0x137 CALL
0x138 SWAP4
0x139 POP
0x13a POP
0x13b POP
0x13c POP
0x13d ISZERO
0x13e ISZERO
0x13f PUSH2 0x147
0x142 JUMPI
---
0x113: JUMPDEST 
0x114: V87 = 0x0
0x116: V88 = S[0x0]
0x117: V89 = 0x1
0x119: V90 = 0xa0
0x11b: V91 = 0x2
0x11d: V92 = EXP 0x2 0xa0
0x11e: V93 = SUB 0x10000000000000000000000000000000000000000 0x1
0x11f: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x120: V95 = CALLVALUE
0x122: V96 = ISZERO V95
0x123: V97 = 0x8fc
0x126: V98 = MUL 0x8fc V96
0x128: V99 = 0x40
0x12a: V100 = M[0x40]
0x12b: V101 = 0x0
0x12d: V102 = 0x40
0x12f: V103 = M[0x40]
0x132: V104 = SUB V100 V103
0x137: V105 = CALL V98 V94 V95 V103 V104 V103 0x0
0x13d: V106 = ISZERO V105
0x13e: V107 = ISZERO V106
0x13f: V108 = 0x147
0x142: JUMPI 0x147 V107
---
Entry stack: [V12, 0x1fa, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1fa, 0x0]

================================

Block 0x143
[0x143:0x146]
---
Predecessors: [0x113]
Successors: []
---
0x143 PUSH1 0x0
0x145 DUP1
0x146 REVERT
---
0x143: V109 = 0x0
0x146: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1fa, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1fa, 0x0]

================================

Block 0x147
[0x147:0x165]
---
Predecessors: [0x113]
Successors: [0x166, 0x16a]
---
0x147 JUMPDEST
0x148 PUSH1 0x3
0x14a DUP1
0x14b SLOAD
0x14c CALLVALUE
0x14d ADD
0x14e SWAP1
0x14f SSTORE
0x150 PUSH1 0x5
0x152 SLOAD
0x153 PUSH12 0x19d971e4fe8401e74000000
0x160 SWAP1
0x161 LT
0x162 PUSH2 0x16a
0x165 JUMPI
---
0x147: JUMPDEST 
0x148: V110 = 0x3
0x14b: V111 = S[0x3]
0x14c: V112 = CALLVALUE
0x14d: V113 = ADD V112 V111
0x14f: S[0x3] = V113
0x150: V114 = 0x5
0x152: V115 = S[0x5]
0x153: V116 = 0x19d971e4fe8401e74000000
0x161: V117 = LT V115 0x19d971e4fe8401e74000000
0x162: V118 = 0x16a
0x165: JUMPI 0x16a V117
---
Entry stack: [V12, 0x1fa, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1fa, 0x0]

================================

Block 0x166
[0x166:0x169]
---
Predecessors: [0x147]
Successors: []
---
0x166 PUSH1 0x0
0x168 DUP1
0x169 REVERT
---
0x166: V119 = 0x0
0x169: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1fa, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1fa, 0x0]

================================

Block 0x16a
[0x16a:0x175]
---
Predecessors: [0x147]
Successors: [0x5f1]
---
0x16a JUMPDEST
0x16b PUSH2 0x176
0x16e CALLVALUE
0x16f PUSH2 0x118
0x172 PUSH2 0x5f1
0x175 JUMP
---
0x16a: JUMPDEST 
0x16b: V120 = 0x176
0x16e: V121 = CALLVALUE
0x16f: V122 = 0x118
0x172: V123 = 0x5f1
0x175: JUMP 0x5f1
---
Entry stack: [V12, 0x1fa, 0x0]
Stack pops: 0
Stack additions: [0x176, V121, 0x118]
Exit stack: [V12, 0x1fa, 0x0, 0x176, V121, 0x118]

================================

Block 0x176
[0x176:0x1f2]
---
Predecessors: [0x619]
Successors: [0x620]
---
0x176 JUMPDEST
0x177 PUSH1 0x5
0x179 DUP1
0x17a SLOAD
0x17b DUP3
0x17c ADD
0x17d SWAP1
0x17e SSTORE
0x17f PUSH1 0x1
0x181 PUSH1 0xa0
0x183 PUSH1 0x2
0x185 EXP
0x186 SUB
0x187 CALLER
0x188 DUP2
0x189 AND
0x18a PUSH1 0x0
0x18c DUP2
0x18d DUP2
0x18e MSTORE
0x18f PUSH1 0x1
0x191 PUSH1 0x20
0x193 MSTORE
0x194 PUSH1 0x40
0x196 SWAP1
0x197 DUP2
0x198 SWAP1
0x199 SHA3
0x19a DUP1
0x19b SLOAD
0x19c DUP6
0x19d ADD
0x19e SWAP1
0x19f SSTORE
0x1a0 SWAP3
0x1a1 SWAP4
0x1a2 POP
0x1a3 SWAP2
0x1a4 ADDRESS
0x1a5 SWAP1
0x1a6 SWAP2
0x1a7 AND
0x1a8 SWAP1
0x1a9 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1ca SWAP1
0x1cb DUP5
0x1cc SWAP1
0x1cd MLOAD
0x1ce SWAP1
0x1cf DUP2
0x1d0 MSTORE
0x1d1 PUSH1 0x20
0x1d3 ADD
0x1d4 PUSH1 0x40
0x1d6 MLOAD
0x1d7 DUP1
0x1d8 SWAP2
0x1d9 SUB
0x1da SWAP1
0x1db LOG3
0x1dc PUSH2 0x1f3
0x1df PUSH12 0x19d971e4fe8401e74000000
0x1ec PUSH1 0x5
0x1ee SLOAD
0x1ef PUSH2 0x620
0x1f2 JUMP
---
0x176: JUMPDEST 
0x177: V124 = 0x5
0x17a: V125 = S[0x5]
0x17c: V126 = ADD V537 V125
0x17e: S[0x5] = V126
0x17f: V127 = 0x1
0x181: V128 = 0xa0
0x183: V129 = 0x2
0x185: V130 = EXP 0x2 0xa0
0x186: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x187: V132 = CALLER
0x189: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x18a: V134 = 0x0
0x18e: M[0x0] = V133
0x18f: V135 = 0x1
0x191: V136 = 0x20
0x193: M[0x20] = 0x1
0x194: V137 = 0x40
0x199: V138 = SHA3 0x0 0x40
0x19b: V139 = S[V138]
0x19d: V140 = ADD V537 V139
0x19f: S[V138] = V140
0x1a4: V141 = ADDRESS
0x1a7: V142 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x1a9: V143 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1cd: V144 = M[0x40]
0x1d0: M[V144] = V537
0x1d1: V145 = 0x20
0x1d3: V146 = ADD 0x20 V144
0x1d4: V147 = 0x40
0x1d6: V148 = M[0x40]
0x1d9: V149 = SUB V146 V148
0x1db: LOG V148 V149 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V142 V133
0x1dc: V150 = 0x1f3
0x1df: V151 = 0x19d971e4fe8401e74000000
0x1ec: V152 = 0x5
0x1ee: V153 = S[0x5]
0x1ef: V154 = 0x620
0x1f2: JUMP 0x620
---
Entry stack: [V12, 0x1fa, 0x0, V537]
Stack pops: 2
Stack additions: [S0, 0x1f3, 0x19d971e4fe8401e74000000, V153]
Exit stack: [V12, 0x1fa, V537, 0x1f3, 0x19d971e4fe8401e74000000, V153]

================================

Block 0x1f3
[0x1f3:0x1f6]
---
Predecessors: [0x634]
Successors: [0x1f7]
---
0x1f3 JUMPDEST
0x1f4 PUSH1 0x6
0x1f6 SSTORE
---
0x1f3: JUMPDEST 
0x1f4: V155 = 0x6
0x1f6: S[0x6] = V552
---
Entry stack: [V12, 0x1fa, V537, V552]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1fa, V537]

================================

Block 0x1f7
[0x1f7:0x1f9]
---
Predecessors: [0x10f, 0x1f3]
Successors: [0x1fa]
---
0x1f7 JUMPDEST
0x1f8 POP
0x1f9 JUMP
---
0x1f7: JUMPDEST 
0x1f9: JUMP 0x1fa
---
Entry stack: [V12, 0x1fa, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fa
[0x1fa:0x1fb]
---
Predecessors: [0x1f7, 0x8a6, 0x918]
Successors: []
---
0x1fa JUMPDEST
0x1fb STOP
---
0x1fa: JUMPDEST 
0x1fb: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fc
[0x1fc:0x202]
---
Predecessors: [0xb]
Successors: [0x203, 0x207]
---
0x1fc JUMPDEST
0x1fd CALLVALUE
0x1fe ISZERO
0x1ff PUSH2 0x207
0x202 JUMPI
---
0x1fc: JUMPDEST 
0x1fd: V156 = CALLVALUE
0x1fe: V157 = ISZERO V156
0x1ff: V158 = 0x207
0x202: JUMPI 0x207 V157
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x203
[0x203:0x206]
---
Predecessors: [0x1fc]
Successors: []
---
0x203 PUSH1 0x0
0x205 DUP1
0x206 REVERT
---
0x203: V159 = 0x0
0x206: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x207
[0x207:0x20e]
---
Predecessors: [0x1fc]
Successors: [0x63b]
---
0x207 JUMPDEST
0x208 PUSH2 0x20f
0x20b PUSH2 0x63b
0x20e JUMP
---
0x207: JUMPDEST 
0x208: V160 = 0x20f
0x20b: V161 = 0x63b
0x20e: JUMP 0x63b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x20f]
Exit stack: [V12, 0x20f]

================================

Block 0x20f
[0x20f:0x232]
---
Predecessors: [0x67a, 0x959]
Successors: [0x233]
---
0x20f JUMPDEST
0x210 PUSH1 0x40
0x212 MLOAD
0x213 PUSH1 0x20
0x215 DUP1
0x216 DUP3
0x217 MSTORE
0x218 DUP2
0x219 SWAP1
0x21a DUP2
0x21b ADD
0x21c DUP4
0x21d DUP2
0x21e DUP2
0x21f MLOAD
0x220 DUP2
0x221 MSTORE
0x222 PUSH1 0x20
0x224 ADD
0x225 SWAP2
0x226 POP
0x227 DUP1
0x228 MLOAD
0x229 SWAP1
0x22a PUSH1 0x20
0x22c ADD
0x22d SWAP1
0x22e DUP1
0x22f DUP4
0x230 DUP4
0x231 PUSH1 0x0
---
0x20f: JUMPDEST 
0x210: V162 = 0x40
0x212: V163 = M[0x40]
0x213: V164 = 0x20
0x217: M[V163] = 0x20
0x21b: V165 = ADD V163 0x20
0x21f: V166 = M[S0]
0x221: M[V165] = V166
0x222: V167 = 0x20
0x224: V168 = ADD 0x20 V165
0x228: V169 = M[S0]
0x22a: V170 = 0x20
0x22c: V171 = ADD 0x20 S0
0x231: V172 = 0x0
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: [S0, V163, V163, V168, V171, V169, V169, V168, V171, 0x0]
Exit stack: [V12, S0, V163, V163, V168, V171, V169, V169, V168, V171, 0x0]

================================

Block 0x233
[0x233:0x23b]
---
Predecessors: [0x20f, 0x244, 0x47e]
Successors: [0x23c, 0x24c]
---
0x233 JUMPDEST
0x234 DUP4
0x235 DUP2
0x236 LT
0x237 ISZERO
0x238 PUSH2 0x24c
0x23b JUMPI
---
0x233: JUMPDEST 
0x236: V173 = LT S0 S3
0x237: V174 = ISZERO V173
0x238: V175 = 0x24c
0x23b: JUMPI 0x24c V174
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x23c
[0x23c:0x243]
---
Predecessors: [0x233]
Successors: [0x244]
---
0x23c DUP1
0x23d DUP3
0x23e ADD
0x23f MLOAD
0x240 DUP2
0x241 DUP5
0x242 ADD
0x243 MSTORE
---
0x23e: V176 = ADD S1 S0
0x23f: V177 = M[V176]
0x242: V178 = ADD S2 S0
0x243: M[V178] = V177
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x244
[0x244:0x24b]
---
Predecessors: [0x23c]
Successors: [0x233]
---
0x244 JUMPDEST
0x245 PUSH1 0x20
0x247 ADD
0x248 PUSH2 0x233
0x24b JUMP
---
0x244: JUMPDEST 
0x245: V179 = 0x20
0x247: V180 = ADD 0x20 S0
0x248: V181 = 0x233
0x24b: JUMP 0x233
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V180]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, V180]

================================

Block 0x24c
[0x24c:0x25f]
---
Predecessors: [0x233, 0x46d]
Successors: [0x260, 0x279]
---
0x24c JUMPDEST
0x24d POP
0x24e POP
0x24f POP
0x250 POP
0x251 SWAP1
0x252 POP
0x253 SWAP1
0x254 DUP2
0x255 ADD
0x256 SWAP1
0x257 PUSH1 0x1f
0x259 AND
0x25a DUP1
0x25b ISZERO
0x25c PUSH2 0x279
0x25f JUMPI
---
0x24c: JUMPDEST 
0x255: V182 = ADD S4 S6
0x257: V183 = 0x1f
0x259: V184 = AND 0x1f S4
0x25b: V185 = ISZERO V184
0x25c: V186 = 0x279
0x25f: JUMPI 0x279 V185
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V182, V184]
Exit stack: [V12, S9, S8, S7, V182, V184]

================================

Block 0x260
[0x260:0x278]
---
Predecessors: [0x24c]
Successors: [0x279]
---
0x260 DUP1
0x261 DUP3
0x262 SUB
0x263 DUP1
0x264 MLOAD
0x265 PUSH1 0x1
0x267 DUP4
0x268 PUSH1 0x20
0x26a SUB
0x26b PUSH2 0x100
0x26e EXP
0x26f SUB
0x270 NOT
0x271 AND
0x272 DUP2
0x273 MSTORE
0x274 PUSH1 0x20
0x276 ADD
0x277 SWAP2
0x278 POP
---
0x262: V187 = SUB V182 V184
0x264: V188 = M[V187]
0x265: V189 = 0x1
0x268: V190 = 0x20
0x26a: V191 = SUB 0x20 V184
0x26b: V192 = 0x100
0x26e: V193 = EXP 0x100 V191
0x26f: V194 = SUB V193 0x1
0x270: V195 = NOT V194
0x271: V196 = AND V195 V188
0x273: M[V187] = V196
0x274: V197 = 0x20
0x276: V198 = ADD 0x20 V187
---
Entry stack: [V12, S4, S3, S2, V182, V184]
Stack pops: 2
Stack additions: [V198, S0]
Exit stack: [V12, S4, S3, S2, V198, V184]

================================

Block 0x279
[0x279:0x286]
---
Predecessors: [0x24c, 0x260, 0x486]
Successors: []
---
0x279 JUMPDEST
0x27a POP
0x27b SWAP3
0x27c POP
0x27d POP
0x27e POP
0x27f PUSH1 0x40
0x281 MLOAD
0x282 DUP1
0x283 SWAP2
0x284 SUB
0x285 SWAP1
0x286 RETURN
---
0x279: JUMPDEST 
0x27f: V199 = 0x40
0x281: V200 = M[0x40]
0x284: V201 = SUB S1 V200
0x286: RETURN V200 V201
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x287
[0x287:0x28d]
---
Predecessors: [0x25]
Successors: [0x28e, 0x292]
---
0x287 JUMPDEST
0x288 CALLVALUE
0x289 ISZERO
0x28a PUSH2 0x292
0x28d JUMPI
---
0x287: JUMPDEST 
0x288: V202 = CALLVALUE
0x289: V203 = ISZERO V202
0x28a: V204 = 0x292
0x28d: JUMPI 0x292 V203
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x28e
[0x28e:0x291]
---
Predecessors: [0x287]
Successors: []
---
0x28e PUSH1 0x0
0x290 DUP1
0x291 REVERT
---
0x28e: V205 = 0x0
0x291: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x292
[0x292:0x2a8]
---
Predecessors: [0x287]
Successors: [0x67d]
---
0x292 JUMPDEST
0x293 PUSH2 0x2a9
0x296 PUSH1 0x1
0x298 PUSH1 0xa0
0x29a PUSH1 0x2
0x29c EXP
0x29d SUB
0x29e PUSH1 0x4
0x2a0 CALLDATALOAD
0x2a1 AND
0x2a2 PUSH1 0x24
0x2a4 CALLDATALOAD
0x2a5 PUSH2 0x67d
0x2a8 JUMP
---
0x292: JUMPDEST 
0x293: V206 = 0x2a9
0x296: V207 = 0x1
0x298: V208 = 0xa0
0x29a: V209 = 0x2
0x29c: V210 = EXP 0x2 0xa0
0x29d: V211 = SUB 0x10000000000000000000000000000000000000000 0x1
0x29e: V212 = 0x4
0x2a0: V213 = CALLDATALOAD 0x4
0x2a1: V214 = AND V213 0xffffffffffffffffffffffffffffffffffffffff
0x2a2: V215 = 0x24
0x2a4: V216 = CALLDATALOAD 0x24
0x2a5: V217 = 0x67d
0x2a8: JUMP 0x67d
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a9, V214, V216]
Exit stack: [V12, 0x2a9, V214, V216]

================================

Block 0x2a9
[0x2a9:0x2bc]
---
Predecessors: [0x723, 0x84d, 0xa2b, 0xa61, 0xbb7]
Successors: []
---
0x2a9 JUMPDEST
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad SWAP1
0x2ae ISZERO
0x2af ISZERO
0x2b0 DUP2
0x2b1 MSTORE
0x2b2 PUSH1 0x20
0x2b4 ADD
0x2b5 PUSH1 0x40
0x2b7 MLOAD
0x2b8 DUP1
0x2b9 SWAP2
0x2ba SUB
0x2bb SWAP1
0x2bc RETURN
---
0x2a9: JUMPDEST 
0x2aa: V218 = 0x40
0x2ac: V219 = M[0x40]
0x2ae: V220 = ISZERO S0
0x2af: V221 = ISZERO V220
0x2b1: M[V219] = V221
0x2b2: V222 = 0x20
0x2b4: V223 = ADD 0x20 V219
0x2b5: V224 = 0x40
0x2b7: V225 = M[0x40]
0x2ba: V226 = SUB V223 V225
0x2bc: RETURN V225 V226
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x2bd
[0x2bd:0x2c3]
---
Predecessors: [0x30]
Successors: [0x2c4, 0x2c8]
---
0x2bd JUMPDEST
0x2be CALLVALUE
0x2bf ISZERO
0x2c0 PUSH2 0x2c8
0x2c3 JUMPI
---
0x2bd: JUMPDEST 
0x2be: V227 = CALLVALUE
0x2bf: V228 = ISZERO V227
0x2c0: V229 = 0x2c8
0x2c3: JUMPI 0x2c8 V228
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c4
[0x2c4:0x2c7]
---
Predecessors: [0x2bd]
Successors: []
---
0x2c4 PUSH1 0x0
0x2c6 DUP1
0x2c7 REVERT
---
0x2c4: V230 = 0x0
0x2c7: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2c8
[0x2c8:0x2cf]
---
Predecessors: [0x2bd]
Successors: [0x729]
---
0x2c8 JUMPDEST
0x2c9 PUSH2 0x2d0
0x2cc PUSH2 0x729
0x2cf JUMP
---
0x2c8: JUMPDEST 
0x2c9: V231 = 0x2d0
0x2cc: V232 = 0x729
0x2cf: JUMP 0x729
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d0]
Exit stack: [V12, 0x2d0]

================================

Block 0x2d0
[0x2d0:0x2e1]
---
Predecessors: [0x729, 0x72f, 0x85f, 0x865, 0x8a8, 0x8d2, 0x95c, 0xa98]
Successors: []
---
0x2d0 JUMPDEST
0x2d1 PUSH1 0x40
0x2d3 MLOAD
0x2d4 SWAP1
0x2d5 DUP2
0x2d6 MSTORE
0x2d7 PUSH1 0x20
0x2d9 ADD
0x2da PUSH1 0x40
0x2dc MLOAD
0x2dd DUP1
0x2de SWAP2
0x2df SUB
0x2e0 SWAP1
0x2e1 RETURN
---
0x2d0: JUMPDEST 
0x2d1: V233 = 0x40
0x2d3: V234 = M[0x40]
0x2d6: M[V234] = S0
0x2d7: V235 = 0x20
0x2d9: V236 = ADD 0x20 V234
0x2da: V237 = 0x40
0x2dc: V238 = M[0x40]
0x2df: V239 = SUB V236 V238
0x2e1: RETURN V238 V239
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x2e2
[0x2e2:0x2e8]
---
Predecessors: [0x3b]
Successors: [0x2e9, 0x2ed]
---
0x2e2 JUMPDEST
0x2e3 CALLVALUE
0x2e4 ISZERO
0x2e5 PUSH2 0x2ed
0x2e8 JUMPI
---
0x2e2: JUMPDEST 
0x2e3: V240 = CALLVALUE
0x2e4: V241 = ISZERO V240
0x2e5: V242 = 0x2ed
0x2e8: JUMPI 0x2ed V241
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e9
[0x2e9:0x2ec]
---
Predecessors: [0x2e2]
Successors: []
---
0x2e9 PUSH1 0x0
0x2eb DUP1
0x2ec REVERT
---
0x2e9: V243 = 0x0
0x2ec: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2ed
[0x2ed:0x2f4]
---
Predecessors: [0x2e2]
Successors: [0x72f]
---
0x2ed JUMPDEST
0x2ee PUSH2 0x2d0
0x2f1 PUSH2 0x72f
0x2f4 JUMP
---
0x2ed: JUMPDEST 
0x2ee: V244 = 0x2d0
0x2f1: V245 = 0x72f
0x2f4: JUMP 0x72f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d0]
Exit stack: [V12, 0x2d0]

================================

Block 0x2f5
[0x2f5:0x306]
---
Predecessors: []
Successors: []
---
0x2f5 JUMPDEST
0x2f6 PUSH1 0x40
0x2f8 MLOAD
0x2f9 SWAP1
0x2fa DUP2
0x2fb MSTORE
0x2fc PUSH1 0x20
0x2fe ADD
0x2ff PUSH1 0x40
0x301 MLOAD
0x302 DUP1
0x303 SWAP2
0x304 SUB
0x305 SWAP1
0x306 RETURN
---
0x2f5: JUMPDEST 
0x2f6: V246 = 0x40
0x2f8: V247 = M[0x40]
0x2fb: M[V247] = S0
0x2fc: V248 = 0x20
0x2fe: V249 = ADD 0x20 V247
0x2ff: V250 = 0x40
0x301: V251 = M[0x40]
0x304: V252 = SUB V249 V251
0x306: RETURN V251 V252
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x307
[0x307:0x30d]
---
Predecessors: [0x46]
Successors: [0x30e, 0x312]
---
0x307 JUMPDEST
0x308 CALLVALUE
0x309 ISZERO
0x30a PUSH2 0x312
0x30d JUMPI
---
0x307: JUMPDEST 
0x308: V253 = CALLVALUE
0x309: V254 = ISZERO V253
0x30a: V255 = 0x312
0x30d: JUMPI 0x312 V254
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x30e
[0x30e:0x311]
---
Predecessors: [0x307]
Successors: []
---
0x30e PUSH1 0x0
0x310 DUP1
0x311 REVERT
---
0x30e: V256 = 0x0
0x311: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x312
[0x312:0x32e]
---
Predecessors: [0x307]
Successors: [0x735]
---
0x312 JUMPDEST
0x313 PUSH2 0x2a9
0x316 PUSH1 0x1
0x318 PUSH1 0xa0
0x31a PUSH1 0x2
0x31c EXP
0x31d SUB
0x31e PUSH1 0x4
0x320 CALLDATALOAD
0x321 DUP2
0x322 AND
0x323 SWAP1
0x324 PUSH1 0x24
0x326 CALLDATALOAD
0x327 AND
0x328 PUSH1 0x44
0x32a CALLDATALOAD
0x32b PUSH2 0x735
0x32e JUMP
---
0x312: JUMPDEST 
0x313: V257 = 0x2a9
0x316: V258 = 0x1
0x318: V259 = 0xa0
0x31a: V260 = 0x2
0x31c: V261 = EXP 0x2 0xa0
0x31d: V262 = SUB 0x10000000000000000000000000000000000000000 0x1
0x31e: V263 = 0x4
0x320: V264 = CALLDATALOAD 0x4
0x322: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x324: V266 = 0x24
0x326: V267 = CALLDATALOAD 0x24
0x327: V268 = AND V267 0xffffffffffffffffffffffffffffffffffffffff
0x328: V269 = 0x44
0x32a: V270 = CALLDATALOAD 0x44
0x32b: V271 = 0x735
0x32e: JUMP 0x735
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a9, V265, V268, V270]
Exit stack: [V12, 0x2a9, V265, V268, V270]

================================

Block 0x32f
[0x32f:0x342]
---
Predecessors: []
Successors: []
---
0x32f JUMPDEST
0x330 PUSH1 0x40
0x332 MLOAD
0x333 SWAP1
0x334 ISZERO
0x335 ISZERO
0x336 DUP2
0x337 MSTORE
0x338 PUSH1 0x20
0x33a ADD
0x33b PUSH1 0x40
0x33d MLOAD
0x33e DUP1
0x33f SWAP2
0x340 SUB
0x341 SWAP1
0x342 RETURN
---
0x32f: JUMPDEST 
0x330: V272 = 0x40
0x332: V273 = M[0x40]
0x334: V274 = ISZERO S0
0x335: V275 = ISZERO V274
0x337: M[V273] = V275
0x338: V276 = 0x20
0x33a: V277 = ADD 0x20 V273
0x33b: V278 = 0x40
0x33d: V279 = M[0x40]
0x340: V280 = SUB V277 V279
0x342: RETURN V279 V280
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x343
[0x343:0x349]
---
Predecessors: [0x51]
Successors: [0x34a, 0x34e]
---
0x343 JUMPDEST
0x344 CALLVALUE
0x345 ISZERO
0x346 PUSH2 0x34e
0x349 JUMPI
---
0x343: JUMPDEST 
0x344: V281 = CALLVALUE
0x345: V282 = ISZERO V281
0x346: V283 = 0x34e
0x349: JUMPI 0x34e V282
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x34a
[0x34a:0x34d]
---
Predecessors: [0x343]
Successors: []
---
0x34a PUSH1 0x0
0x34c DUP1
0x34d REVERT
---
0x34a: V284 = 0x0
0x34d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x34e
[0x34e:0x355]
---
Predecessors: [0x343]
Successors: [0x859]
---
0x34e JUMPDEST
0x34f PUSH2 0x356
0x352 PUSH2 0x859
0x355 JUMP
---
0x34e: JUMPDEST 
0x34f: V285 = 0x356
0x352: V286 = 0x859
0x355: JUMP 0x859
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x356]
Exit stack: [V12, 0x356]

================================

Block 0x356
[0x356:0x36b]
---
Predecessors: [0x85c]
Successors: []
---
0x356 JUMPDEST
0x357 PUSH1 0x40
0x359 MLOAD
0x35a PUSH1 0xff
0x35c SWAP1
0x35d SWAP2
0x35e AND
0x35f DUP2
0x360 MSTORE
0x361 PUSH1 0x20
0x363 ADD
0x364 PUSH1 0x40
0x366 MLOAD
0x367 DUP1
0x368 SWAP2
0x369 SUB
0x36a SWAP1
0x36b RETURN
---
0x356: JUMPDEST 
0x357: V287 = 0x40
0x359: V288 = M[0x40]
0x35a: V289 = 0xff
0x35e: V290 = AND 0x12 0xff
0x360: M[V288] = 0x12
0x361: V291 = 0x20
0x363: V292 = ADD 0x20 V288
0x364: V293 = 0x40
0x366: V294 = M[0x40]
0x369: V295 = SUB V292 V294
0x36b: RETURN V294 V295
---
Entry stack: [V12, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x36c
[0x36c:0x372]
---
Predecessors: [0x5c]
Successors: [0x373, 0x377]
---
0x36c JUMPDEST
0x36d CALLVALUE
0x36e ISZERO
0x36f PUSH2 0x377
0x372 JUMPI
---
0x36c: JUMPDEST 
0x36d: V296 = CALLVALUE
0x36e: V297 = ISZERO V296
0x36f: V298 = 0x377
0x372: JUMPI 0x377 V297
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x373
[0x373:0x376]
---
Predecessors: [0x36c]
Successors: []
---
0x373 PUSH1 0x0
0x375 DUP1
0x376 REVERT
---
0x373: V299 = 0x0
0x376: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x377
[0x377:0x37e]
---
Predecessors: [0x36c]
Successors: [0x85f]
---
0x377 JUMPDEST
0x378 PUSH2 0x2d0
0x37b PUSH2 0x85f
0x37e JUMP
---
0x377: JUMPDEST 
0x378: V300 = 0x2d0
0x37b: V301 = 0x85f
0x37e: JUMP 0x85f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d0]
Exit stack: [V12, 0x2d0]

================================

Block 0x37f
[0x37f:0x390]
---
Predecessors: []
Successors: []
---
0x37f JUMPDEST
0x380 PUSH1 0x40
0x382 MLOAD
0x383 SWAP1
0x384 DUP2
0x385 MSTORE
0x386 PUSH1 0x20
0x388 ADD
0x389 PUSH1 0x40
0x38b MLOAD
0x38c DUP1
0x38d SWAP2
0x38e SUB
0x38f SWAP1
0x390 RETURN
---
0x37f: JUMPDEST 
0x380: V302 = 0x40
0x382: V303 = M[0x40]
0x385: M[V303] = S0
0x386: V304 = 0x20
0x388: V305 = ADD 0x20 V303
0x389: V306 = 0x40
0x38b: V307 = M[0x40]
0x38e: V308 = SUB V305 V307
0x390: RETURN V307 V308
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x391
[0x391:0x397]
---
Predecessors: [0x67]
Successors: [0x398, 0x39c]
---
0x391 JUMPDEST
0x392 CALLVALUE
0x393 ISZERO
0x394 PUSH2 0x39c
0x397 JUMPI
---
0x391: JUMPDEST 
0x392: V309 = CALLVALUE
0x393: V310 = ISZERO V309
0x394: V311 = 0x39c
0x397: JUMPI 0x39c V310
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x398
[0x398:0x39b]
---
Predecessors: [0x391]
Successors: []
---
0x398 PUSH1 0x0
0x39a DUP1
0x39b REVERT
---
0x398: V312 = 0x0
0x39b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x39c
[0x39c:0x3a3]
---
Predecessors: [0x391]
Successors: [0x865]
---
0x39c JUMPDEST
0x39d PUSH2 0x2d0
0x3a0 PUSH2 0x865
0x3a3 JUMP
---
0x39c: JUMPDEST 
0x39d: V313 = 0x2d0
0x3a0: V314 = 0x865
0x3a3: JUMP 0x865
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d0]
Exit stack: [V12, 0x2d0]

================================

Block 0x3a4
[0x3a4:0x3b5]
---
Predecessors: []
Successors: []
---
0x3a4 JUMPDEST
0x3a5 PUSH1 0x40
0x3a7 MLOAD
0x3a8 SWAP1
0x3a9 DUP2
0x3aa MSTORE
0x3ab PUSH1 0x20
0x3ad ADD
0x3ae PUSH1 0x40
0x3b0 MLOAD
0x3b1 DUP1
0x3b2 SWAP2
0x3b3 SUB
0x3b4 SWAP1
0x3b5 RETURN
---
0x3a4: JUMPDEST 
0x3a5: V315 = 0x40
0x3a7: V316 = M[0x40]
0x3aa: M[V316] = S0
0x3ab: V317 = 0x20
0x3ad: V318 = ADD 0x20 V316
0x3ae: V319 = 0x40
0x3b0: V320 = M[0x40]
0x3b3: V321 = SUB V318 V320
0x3b5: RETURN V320 V321
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3b6
[0x3b6:0x3bc]
---
Predecessors: [0x72]
Successors: [0x3bd, 0x3c1]
---
0x3b6 JUMPDEST
0x3b7 CALLVALUE
0x3b8 ISZERO
0x3b9 PUSH2 0x3c1
0x3bc JUMPI
---
0x3b6: JUMPDEST 
0x3b7: V322 = CALLVALUE
0x3b8: V323 = ISZERO V322
0x3b9: V324 = 0x3c1
0x3bc: JUMPI 0x3c1 V323
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3bd
[0x3bd:0x3c0]
---
Predecessors: [0x3b6]
Successors: []
---
0x3bd PUSH1 0x0
0x3bf DUP1
0x3c0 REVERT
---
0x3bd: V325 = 0x0
0x3c0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c1
[0x3c1:0x3c8]
---
Predecessors: [0x3b6]
Successors: [0x86b]
---
0x3c1 JUMPDEST
0x3c2 PUSH2 0x1fa
0x3c5 PUSH2 0x86b
0x3c8 JUMP
---
0x3c1: JUMPDEST 
0x3c2: V326 = 0x1fa
0x3c5: V327 = 0x86b
0x3c8: JUMP 0x86b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1fa]
Exit stack: [V12, 0x1fa]

================================

Block 0x3c9
[0x3c9:0x3ca]
---
Predecessors: []
Successors: []
---
0x3c9 JUMPDEST
0x3ca STOP
---
0x3c9: JUMPDEST 
0x3ca: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3cb
[0x3cb:0x3d1]
---
Predecessors: [0x7d]
Successors: [0x3d2, 0x3d6]
---
0x3cb JUMPDEST
0x3cc CALLVALUE
0x3cd ISZERO
0x3ce PUSH2 0x3d6
0x3d1 JUMPI
---
0x3cb: JUMPDEST 
0x3cc: V328 = CALLVALUE
0x3cd: V329 = ISZERO V328
0x3ce: V330 = 0x3d6
0x3d1: JUMPI 0x3d6 V329
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d2
[0x3d2:0x3d5]
---
Predecessors: [0x3cb]
Successors: []
---
0x3d2 PUSH1 0x0
0x3d4 DUP1
0x3d5 REVERT
---
0x3d2: V331 = 0x0
0x3d5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d6
[0x3d6:0x3dd]
---
Predecessors: [0x3cb]
Successors: [0x8a8]
---
0x3d6 JUMPDEST
0x3d7 PUSH2 0x2d0
0x3da PUSH2 0x8a8
0x3dd JUMP
---
0x3d6: JUMPDEST 
0x3d7: V332 = 0x2d0
0x3da: V333 = 0x8a8
0x3dd: JUMP 0x8a8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d0]
Exit stack: [V12, 0x2d0]

================================

Block 0x3de
[0x3de:0x3ef]
---
Predecessors: []
Successors: []
---
0x3de JUMPDEST
0x3df PUSH1 0x40
0x3e1 MLOAD
0x3e2 SWAP1
0x3e3 DUP2
0x3e4 MSTORE
0x3e5 PUSH1 0x20
0x3e7 ADD
0x3e8 PUSH1 0x40
0x3ea MLOAD
0x3eb DUP1
0x3ec SWAP2
0x3ed SUB
0x3ee SWAP1
0x3ef RETURN
---
0x3de: JUMPDEST 
0x3df: V334 = 0x40
0x3e1: V335 = M[0x40]
0x3e4: M[V335] = S0
0x3e5: V336 = 0x20
0x3e7: V337 = ADD 0x20 V335
0x3e8: V338 = 0x40
0x3ea: V339 = M[0x40]
0x3ed: V340 = SUB V337 V339
0x3ef: RETURN V339 V340
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3f0
[0x3f0:0x3f6]
---
Predecessors: [0x88]
Successors: [0x3f7, 0x3fb]
---
0x3f0 JUMPDEST
0x3f1 CALLVALUE
0x3f2 ISZERO
0x3f3 PUSH2 0x3fb
0x3f6 JUMPI
---
0x3f0: JUMPDEST 
0x3f1: V341 = CALLVALUE
0x3f2: V342 = ISZERO V341
0x3f3: V343 = 0x3fb
0x3f6: JUMPI 0x3fb V342
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3f7
[0x3f7:0x3fa]
---
Predecessors: [0x3f0]
Successors: []
---
0x3f7 PUSH1 0x0
0x3f9 DUP1
0x3fa REVERT
---
0x3f7: V344 = 0x0
0x3fa: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3fb
[0x3fb:0x40e]
---
Predecessors: [0x3f0]
Successors: [0x8b8]
---
0x3fb JUMPDEST
0x3fc PUSH2 0x2d0
0x3ff PUSH1 0x1
0x401 PUSH1 0xa0
0x403 PUSH1 0x2
0x405 EXP
0x406 SUB
0x407 PUSH1 0x4
0x409 CALLDATALOAD
0x40a AND
0x40b PUSH2 0x8b8
0x40e JUMP
---
0x3fb: JUMPDEST 
0x3fc: V345 = 0x2d0
0x3ff: V346 = 0x1
0x401: V347 = 0xa0
0x403: V348 = 0x2
0x405: V349 = EXP 0x2 0xa0
0x406: V350 = SUB 0x10000000000000000000000000000000000000000 0x1
0x407: V351 = 0x4
0x409: V352 = CALLDATALOAD 0x4
0x40a: V353 = AND V352 0xffffffffffffffffffffffffffffffffffffffff
0x40b: V354 = 0x8b8
0x40e: JUMP 0x8b8
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d0, V353]
Exit stack: [V12, 0x2d0, V353]

================================

Block 0x40f
[0x40f:0x420]
---
Predecessors: []
Successors: []
---
0x40f JUMPDEST
0x410 PUSH1 0x40
0x412 MLOAD
0x413 SWAP1
0x414 DUP2
0x415 MSTORE
0x416 PUSH1 0x20
0x418 ADD
0x419 PUSH1 0x40
0x41b MLOAD
0x41c DUP1
0x41d SWAP2
0x41e SUB
0x41f SWAP1
0x420 RETURN
---
0x40f: JUMPDEST 
0x410: V355 = 0x40
0x412: V356 = M[0x40]
0x415: M[V356] = S0
0x416: V357 = 0x20
0x418: V358 = ADD 0x20 V356
0x419: V359 = 0x40
0x41b: V360 = M[0x40]
0x41e: V361 = SUB V358 V360
0x420: RETURN V360 V361
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x421
[0x421:0x427]
---
Predecessors: [0x93]
Successors: [0x428, 0x42c]
---
0x421 JUMPDEST
0x422 CALLVALUE
0x423 ISZERO
0x424 PUSH2 0x42c
0x427 JUMPI
---
0x421: JUMPDEST 
0x422: V362 = CALLVALUE
0x423: V363 = ISZERO V362
0x424: V364 = 0x42c
0x427: JUMPI 0x42c V363
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x428
[0x428:0x42b]
---
Predecessors: [0x421]
Successors: []
---
0x428 PUSH1 0x0
0x42a DUP1
0x42b REVERT
---
0x428: V365 = 0x0
0x42b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x42c
[0x42c:0x433]
---
Predecessors: [0x421]
Successors: [0x8d7]
---
0x42c JUMPDEST
0x42d PUSH2 0x1fa
0x430 PUSH2 0x8d7
0x433 JUMP
---
0x42c: JUMPDEST 
0x42d: V366 = 0x1fa
0x430: V367 = 0x8d7
0x433: JUMP 0x8d7
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1fa]
Exit stack: [V12, 0x1fa]

================================

Block 0x434
[0x434:0x435]
---
Predecessors: []
Successors: []
---
0x434 JUMPDEST
0x435 STOP
---
0x434: JUMPDEST 
0x435: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x436
[0x436:0x43c]
---
Predecessors: [0x9e]
Successors: [0x43d, 0x441]
---
0x436 JUMPDEST
0x437 CALLVALUE
0x438 ISZERO
0x439 PUSH2 0x441
0x43c JUMPI
---
0x436: JUMPDEST 
0x437: V368 = CALLVALUE
0x438: V369 = ISZERO V368
0x439: V370 = 0x441
0x43c: JUMPI 0x441 V369
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x43d
[0x43d:0x440]
---
Predecessors: [0x436]
Successors: []
---
0x43d PUSH1 0x0
0x43f DUP1
0x440 REVERT
---
0x43d: V371 = 0x0
0x440: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x441
[0x441:0x448]
---
Predecessors: [0x436]
Successors: [0x91a]
---
0x441 JUMPDEST
0x442 PUSH2 0x20f
0x445 PUSH2 0x91a
0x448 JUMP
---
0x441: JUMPDEST 
0x442: V372 = 0x20f
0x445: V373 = 0x91a
0x448: JUMP 0x91a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x20f]
Exit stack: [V12, 0x20f]

================================

Block 0x449
[0x449:0x46c]
---
Predecessors: []
Successors: [0x46d]
---
0x449 JUMPDEST
0x44a PUSH1 0x40
0x44c MLOAD
0x44d PUSH1 0x20
0x44f DUP1
0x450 DUP3
0x451 MSTORE
0x452 DUP2
0x453 SWAP1
0x454 DUP2
0x455 ADD
0x456 DUP4
0x457 DUP2
0x458 DUP2
0x459 MLOAD
0x45a DUP2
0x45b MSTORE
0x45c PUSH1 0x20
0x45e ADD
0x45f SWAP2
0x460 POP
0x461 DUP1
0x462 MLOAD
0x463 SWAP1
0x464 PUSH1 0x20
0x466 ADD
0x467 SWAP1
0x468 DUP1
0x469 DUP4
0x46a DUP4
0x46b PUSH1 0x0
---
0x449: JUMPDEST 
0x44a: V374 = 0x40
0x44c: V375 = M[0x40]
0x44d: V376 = 0x20
0x451: M[V375] = 0x20
0x455: V377 = ADD V375 0x20
0x459: V378 = M[S0]
0x45b: M[V377] = V378
0x45c: V379 = 0x20
0x45e: V380 = ADD 0x20 V377
0x462: V381 = M[S0]
0x464: V382 = 0x20
0x466: V383 = ADD 0x20 S0
0x46b: V384 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V375, V375, V380, V383, V381, V381, V380, V383, 0x0]
Exit stack: [S0, V375, V375, V380, V383, V381, V381, V380, V383, 0x0]

================================

Block 0x46d
[0x46d:0x475]
---
Predecessors: [0x449]
Successors: [0x24c, 0x476]
---
0x46d JUMPDEST
0x46e DUP4
0x46f DUP2
0x470 LT
0x471 ISZERO
0x472 PUSH2 0x24c
0x475 JUMPI
---
0x46d: JUMPDEST 
0x470: V385 = LT 0x0 V381
0x471: V386 = ISZERO V385
0x472: V387 = 0x24c
0x475: JUMPI 0x24c V386
---
Entry stack: [S9, V375, V375, V380, V383, V381, V381, V380, V383, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V375, V375, V380, V383, V381, V381, V380, V383, 0x0]

================================

Block 0x476
[0x476:0x47d]
---
Predecessors: [0x46d]
Successors: [0x47e]
---
0x476 DUP1
0x477 DUP3
0x478 ADD
0x479 MLOAD
0x47a DUP2
0x47b DUP5
0x47c ADD
0x47d MSTORE
---
0x478: V388 = ADD V383 0x0
0x479: V389 = M[V388]
0x47c: V390 = ADD V380 0x0
0x47d: M[V390] = V389
---
Entry stack: [S9, V375, V375, V380, V383, V381, V381, V380, V383, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V375, V375, V380, V383, V381, V381, V380, V383, 0x0]

================================

Block 0x47e
[0x47e:0x485]
---
Predecessors: [0x476]
Successors: [0x233]
---
0x47e JUMPDEST
0x47f PUSH1 0x20
0x481 ADD
0x482 PUSH2 0x233
0x485 JUMP
---
0x47e: JUMPDEST 
0x47f: V391 = 0x20
0x481: V392 = ADD 0x20 0x0
0x482: V393 = 0x233
0x485: JUMP 0x233
---
Entry stack: [S9, V375, V375, V380, V383, V381, V381, V380, V383, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V375, V375, V380, V383, V381, V381, V380, V383, 0x20]

================================

Block 0x486
[0x486:0x499]
---
Predecessors: []
Successors: [0x279, 0x49a]
---
0x486 JUMPDEST
0x487 POP
0x488 POP
0x489 POP
0x48a POP
0x48b SWAP1
0x48c POP
0x48d SWAP1
0x48e DUP2
0x48f ADD
0x490 SWAP1
0x491 PUSH1 0x1f
0x493 AND
0x494 DUP1
0x495 ISZERO
0x496 PUSH2 0x279
0x499 JUMPI
---
0x486: JUMPDEST 
0x48f: V394 = ADD S4 S6
0x491: V395 = 0x1f
0x493: V396 = AND 0x1f S4
0x495: V397 = ISZERO V396
0x496: V398 = 0x279
0x499: JUMPI 0x279 V397
---
Entry stack: []
Stack pops: 7
Stack additions: [V394, V396]
Exit stack: [V394, V396]

================================

Block 0x49a
[0x49a:0x4b2]
---
Predecessors: [0x486]
Successors: [0x4b3]
---
0x49a DUP1
0x49b DUP3
0x49c SUB
0x49d DUP1
0x49e MLOAD
0x49f PUSH1 0x1
0x4a1 DUP4
0x4a2 PUSH1 0x20
0x4a4 SUB
0x4a5 PUSH2 0x100
0x4a8 EXP
0x4a9 SUB
0x4aa NOT
0x4ab AND
0x4ac DUP2
0x4ad MSTORE
0x4ae PUSH1 0x20
0x4b0 ADD
0x4b1 SWAP2
0x4b2 POP
---
0x49c: V399 = SUB V394 V396
0x49e: V400 = M[V399]
0x49f: V401 = 0x1
0x4a2: V402 = 0x20
0x4a4: V403 = SUB 0x20 V396
0x4a5: V404 = 0x100
0x4a8: V405 = EXP 0x100 V403
0x4a9: V406 = SUB V405 0x1
0x4aa: V407 = NOT V406
0x4ab: V408 = AND V407 V400
0x4ad: M[V399] = V408
0x4ae: V409 = 0x20
0x4b0: V410 = ADD 0x20 V399
---
Entry stack: [V394, V396]
Stack pops: 2
Stack additions: [V410, S0]
Exit stack: [V410, V396]

================================

Block 0x4b3
[0x4b3:0x4c0]
---
Predecessors: [0x49a]
Successors: []
---
0x4b3 JUMPDEST
0x4b4 POP
0x4b5 SWAP3
0x4b6 POP
0x4b7 POP
0x4b8 POP
0x4b9 PUSH1 0x40
0x4bb MLOAD
0x4bc DUP1
0x4bd SWAP2
0x4be SUB
0x4bf SWAP1
0x4c0 RETURN
---
0x4b3: JUMPDEST 
0x4b9: V411 = 0x40
0x4bb: V412 = M[0x40]
0x4be: V413 = SUB V410 V412
0x4c0: RETURN V412 V413
---
Entry stack: [V410, V396]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x4c1
[0x4c1:0x4c7]
---
Predecessors: [0xa9]
Successors: [0x4c8, 0x4cc]
---
0x4c1 JUMPDEST
0x4c2 CALLVALUE
0x4c3 ISZERO
0x4c4 PUSH2 0x4cc
0x4c7 JUMPI
---
0x4c1: JUMPDEST 
0x4c2: V414 = CALLVALUE
0x4c3: V415 = ISZERO V414
0x4c4: V416 = 0x4cc
0x4c7: JUMPI 0x4cc V415
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c8
[0x4c8:0x4cb]
---
Predecessors: [0x4c1]
Successors: []
---
0x4c8 PUSH1 0x0
0x4ca DUP1
0x4cb REVERT
---
0x4c8: V417 = 0x0
0x4cb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4cc
[0x4cc:0x4d3]
---
Predecessors: [0x4c1]
Successors: [0x95c]
---
0x4cc JUMPDEST
0x4cd PUSH2 0x2d0
0x4d0 PUSH2 0x95c
0x4d3 JUMP
---
0x4cc: JUMPDEST 
0x4cd: V418 = 0x2d0
0x4d0: V419 = 0x95c
0x4d3: JUMP 0x95c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d0]
Exit stack: [V12, 0x2d0]

================================

Block 0x4d4
[0x4d4:0x4e5]
---
Predecessors: []
Successors: []
---
0x4d4 JUMPDEST
0x4d5 PUSH1 0x40
0x4d7 MLOAD
0x4d8 SWAP1
0x4d9 DUP2
0x4da MSTORE
0x4db PUSH1 0x20
0x4dd ADD
0x4de PUSH1 0x40
0x4e0 MLOAD
0x4e1 DUP1
0x4e2 SWAP2
0x4e3 SUB
0x4e4 SWAP1
0x4e5 RETURN
---
0x4d4: JUMPDEST 
0x4d5: V420 = 0x40
0x4d7: V421 = M[0x40]
0x4da: M[V421] = S0
0x4db: V422 = 0x20
0x4dd: V423 = ADD 0x20 V421
0x4de: V424 = 0x40
0x4e0: V425 = M[0x40]
0x4e3: V426 = SUB V423 V425
0x4e5: RETURN V425 V426
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4e6
[0x4e6:0x4ec]
---
Predecessors: [0xb4]
Successors: [0x4ed, 0x4f1]
---
0x4e6 JUMPDEST
0x4e7 CALLVALUE
0x4e8 ISZERO
0x4e9 PUSH2 0x4f1
0x4ec JUMPI
---
0x4e6: JUMPDEST 
0x4e7: V427 = CALLVALUE
0x4e8: V428 = ISZERO V427
0x4e9: V429 = 0x4f1
0x4ec: JUMPI 0x4f1 V428
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4ed
[0x4ed:0x4f0]
---
Predecessors: [0x4e6]
Successors: []
---
0x4ed PUSH1 0x0
0x4ef DUP1
0x4f0 REVERT
---
0x4ed: V430 = 0x0
0x4f0: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4f1
[0x4f1:0x507]
---
Predecessors: [0x4e6]
Successors: [0x962]
---
0x4f1 JUMPDEST
0x4f2 PUSH2 0x2a9
0x4f5 PUSH1 0x1
0x4f7 PUSH1 0xa0
0x4f9 PUSH1 0x2
0x4fb EXP
0x4fc SUB
0x4fd PUSH1 0x4
0x4ff CALLDATALOAD
0x500 AND
0x501 PUSH1 0x24
0x503 CALLDATALOAD
0x504 PUSH2 0x962
0x507 JUMP
---
0x4f1: JUMPDEST 
0x4f2: V431 = 0x2a9
0x4f5: V432 = 0x1
0x4f7: V433 = 0xa0
0x4f9: V434 = 0x2
0x4fb: V435 = EXP 0x2 0xa0
0x4fc: V436 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fd: V437 = 0x4
0x4ff: V438 = CALLDATALOAD 0x4
0x500: V439 = AND V438 0xffffffffffffffffffffffffffffffffffffffff
0x501: V440 = 0x24
0x503: V441 = CALLDATALOAD 0x24
0x504: V442 = 0x962
0x507: JUMP 0x962
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a9, V439, V441]
Exit stack: [V12, 0x2a9, V439, V441]

================================

Block 0x508
[0x508:0x51b]
---
Predecessors: []
Successors: []
---
0x508 JUMPDEST
0x509 PUSH1 0x40
0x50b MLOAD
0x50c SWAP1
0x50d ISZERO
0x50e ISZERO
0x50f DUP2
0x510 MSTORE
0x511 PUSH1 0x20
0x513 ADD
0x514 PUSH1 0x40
0x516 MLOAD
0x517 DUP1
0x518 SWAP2
0x519 SUB
0x51a SWAP1
0x51b RETURN
---
0x508: JUMPDEST 
0x509: V443 = 0x40
0x50b: V444 = M[0x40]
0x50d: V445 = ISZERO S0
0x50e: V446 = ISZERO V445
0x510: M[V444] = V446
0x511: V447 = 0x20
0x513: V448 = ADD 0x20 V444
0x514: V449 = 0x40
0x516: V450 = M[0x40]
0x519: V451 = SUB V448 V450
0x51b: RETURN V450 V451
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x51c
[0x51c:0x522]
---
Predecessors: [0xbf]
Successors: [0x523, 0x527]
---
0x51c JUMPDEST
0x51d CALLVALUE
0x51e ISZERO
0x51f PUSH2 0x527
0x522 JUMPI
---
0x51c: JUMPDEST 
0x51d: V452 = CALLVALUE
0x51e: V453 = ISZERO V452
0x51f: V454 = 0x527
0x522: JUMPI 0x527 V453
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x523
[0x523:0x526]
---
Predecessors: [0x51c]
Successors: []
---
0x523 PUSH1 0x0
0x525 DUP1
0x526 REVERT
---
0x523: V455 = 0x0
0x526: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x527
[0x527:0x52e]
---
Predecessors: [0x51c]
Successors: [0xa34]
---
0x527 JUMPDEST
0x528 PUSH2 0x52f
0x52b PUSH2 0xa34
0x52e JUMP
---
0x527: JUMPDEST 
0x528: V456 = 0x52f
0x52b: V457 = 0xa34
0x52e: JUMP 0xa34
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x52f]
Exit stack: [V12, 0x52f]

================================

Block 0x52f
[0x52f:0x55f]
---
Predecessors: [0xa5a]
Successors: []
---
0x52f JUMPDEST
0x530 PUSH1 0x40
0x532 MLOAD
0x533 SWAP5
0x534 DUP6
0x535 MSTORE
0x536 PUSH1 0x20
0x538 DUP6
0x539 ADD
0x53a SWAP4
0x53b SWAP1
0x53c SWAP4
0x53d MSTORE
0x53e PUSH1 0x40
0x540 DUP1
0x541 DUP6
0x542 ADD
0x543 SWAP3
0x544 SWAP1
0x545 SWAP3
0x546 MSTORE
0x547 PUSH1 0x60
0x549 DUP5
0x54a ADD
0x54b MSTORE
0x54c SWAP1
0x54d ISZERO
0x54e ISZERO
0x54f PUSH1 0x80
0x551 DUP4
0x552 ADD
0x553 MSTORE
0x554 PUSH1 0xa0
0x556 SWAP1
0x557 SWAP2
0x558 ADD
0x559 SWAP1
0x55a MLOAD
0x55b DUP1
0x55c SWAP2
0x55d SUB
0x55e SWAP1
0x55f RETURN
---
0x52f: JUMPDEST 
0x530: V458 = 0x40
0x532: V459 = M[0x40]
0x535: M[V459] = V817
0x536: V460 = 0x20
0x539: V461 = ADD V459 0x20
0x53d: M[V461] = V819
0x53e: V462 = 0x40
0x542: V463 = ADD V459 0x40
0x546: M[V463] = 0x19d971e4fe8401e74000000
0x547: V464 = 0x60
0x54a: V465 = ADD V459 0x60
0x54b: M[V465] = V821
0x54d: V466 = ISZERO V830
0x54e: V467 = ISZERO V466
0x54f: V468 = 0x80
0x552: V469 = ADD V459 0x80
0x553: M[V469] = V467
0x554: V470 = 0xa0
0x558: V471 = ADD V459 0xa0
0x55a: V472 = M[0x40]
0x55d: V473 = SUB V471 V472
0x55f: RETURN V472 V473
---
Entry stack: [V12, V817, V819, 0x19d971e4fe8401e74000000, V821, V830]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x560
[0x560:0x566]
---
Predecessors: [0xca]
Successors: [0x567, 0x56b]
---
0x560 JUMPDEST
0x561 CALLVALUE
0x562 ISZERO
0x563 PUSH2 0x56b
0x566 JUMPI
---
0x560: JUMPDEST 
0x561: V474 = CALLVALUE
0x562: V475 = ISZERO V474
0x563: V476 = 0x56b
0x566: JUMPI 0x56b V475
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x567
[0x567:0x56a]
---
Predecessors: [0x560]
Successors: []
---
0x567 PUSH1 0x0
0x569 DUP1
0x56a REVERT
---
0x567: V477 = 0x0
0x56a: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x56b
[0x56b:0x572]
---
Predecessors: [0x560]
Successors: [0xa61]
---
0x56b JUMPDEST
0x56c PUSH2 0x2a9
0x56f PUSH2 0xa61
0x572 JUMP
---
0x56b: JUMPDEST 
0x56c: V478 = 0x2a9
0x56f: V479 = 0xa61
0x572: JUMP 0xa61
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a9]
Exit stack: [V12, 0x2a9]

================================

Block 0x573
[0x573:0x586]
---
Predecessors: []
Successors: []
---
0x573 JUMPDEST
0x574 PUSH1 0x40
0x576 MLOAD
0x577 SWAP1
0x578 ISZERO
0x579 ISZERO
0x57a DUP2
0x57b MSTORE
0x57c PUSH1 0x20
0x57e ADD
0x57f PUSH1 0x40
0x581 MLOAD
0x582 DUP1
0x583 SWAP2
0x584 SUB
0x585 SWAP1
0x586 RETURN
---
0x573: JUMPDEST 
0x574: V480 = 0x40
0x576: V481 = M[0x40]
0x578: V482 = ISZERO S0
0x579: V483 = ISZERO V482
0x57b: M[V481] = V483
0x57c: V484 = 0x20
0x57e: V485 = ADD 0x20 V481
0x57f: V486 = 0x40
0x581: V487 = M[0x40]
0x584: V488 = SUB V485 V487
0x586: RETURN V487 V488
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x587
[0x587:0x58d]
---
Predecessors: [0xd5]
Successors: [0x58e, 0x592]
---
0x587 JUMPDEST
0x588 CALLVALUE
0x589 ISZERO
0x58a PUSH2 0x592
0x58d JUMPI
---
0x587: JUMPDEST 
0x588: V489 = CALLVALUE
0x589: V490 = ISZERO V489
0x58a: V491 = 0x592
0x58d: JUMPI 0x592 V490
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x58e
[0x58e:0x591]
---
Predecessors: [0x587]
Successors: []
---
0x58e PUSH1 0x0
0x590 DUP1
0x591 REVERT
---
0x58e: V492 = 0x0
0x591: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x592
[0x592:0x5ab]
---
Predecessors: [0x587]
Successors: [0xa71]
---
0x592 JUMPDEST
0x593 PUSH2 0x2d0
0x596 PUSH1 0x1
0x598 PUSH1 0xa0
0x59a PUSH1 0x2
0x59c EXP
0x59d SUB
0x59e PUSH1 0x4
0x5a0 CALLDATALOAD
0x5a1 DUP2
0x5a2 AND
0x5a3 SWAP1
0x5a4 PUSH1 0x24
0x5a6 CALLDATALOAD
0x5a7 AND
0x5a8 PUSH2 0xa71
0x5ab JUMP
---
0x592: JUMPDEST 
0x593: V493 = 0x2d0
0x596: V494 = 0x1
0x598: V495 = 0xa0
0x59a: V496 = 0x2
0x59c: V497 = EXP 0x2 0xa0
0x59d: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59e: V499 = 0x4
0x5a0: V500 = CALLDATALOAD 0x4
0x5a2: V501 = AND 0xffffffffffffffffffffffffffffffffffffffff V500
0x5a4: V502 = 0x24
0x5a6: V503 = CALLDATALOAD 0x24
0x5a7: V504 = AND V503 0xffffffffffffffffffffffffffffffffffffffff
0x5a8: V505 = 0xa71
0x5ab: JUMP 0xa71
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2d0, V501, V504]
Exit stack: [V12, 0x2d0, V501, V504]

================================

Block 0x5ac
[0x5ac:0x5bd]
---
Predecessors: []
Successors: []
---
0x5ac JUMPDEST
0x5ad PUSH1 0x40
0x5af MLOAD
0x5b0 SWAP1
0x5b1 DUP2
0x5b2 MSTORE
0x5b3 PUSH1 0x20
0x5b5 ADD
0x5b6 PUSH1 0x40
0x5b8 MLOAD
0x5b9 DUP1
0x5ba SWAP2
0x5bb SUB
0x5bc SWAP1
0x5bd RETURN
---
0x5ac: JUMPDEST 
0x5ad: V506 = 0x40
0x5af: V507 = M[0x40]
0x5b2: M[V507] = S0
0x5b3: V508 = 0x20
0x5b5: V509 = ADD 0x20 V507
0x5b6: V510 = 0x40
0x5b8: V511 = M[0x40]
0x5bb: V512 = SUB V509 V511
0x5bd: RETURN V511 V512
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5be
[0x5be:0x5c4]
---
Predecessors: [0xe0]
Successors: [0x5c5, 0x5c9]
---
0x5be JUMPDEST
0x5bf CALLVALUE
0x5c0 ISZERO
0x5c1 PUSH2 0x5c9
0x5c4 JUMPI
---
0x5be: JUMPDEST 
0x5bf: V513 = CALLVALUE
0x5c0: V514 = ISZERO V513
0x5c1: V515 = 0x5c9
0x5c4: JUMPI 0x5c9 V514
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5c5
[0x5c5:0x5c8]
---
Predecessors: [0x5be]
Successors: []
---
0x5c5 PUSH1 0x0
0x5c7 DUP1
0x5c8 REVERT
---
0x5c5: V516 = 0x0
0x5c8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x5c9
[0x5c9:0x5dc]
---
Predecessors: [0x5be]
Successors: [0xa9e]
---
0x5c9 JUMPDEST
0x5ca PUSH2 0x2a9
0x5cd PUSH1 0x1
0x5cf PUSH1 0xa0
0x5d1 PUSH1 0x2
0x5d3 EXP
0x5d4 SUB
0x5d5 PUSH1 0x4
0x5d7 CALLDATALOAD
0x5d8 AND
0x5d9 PUSH2 0xa9e
0x5dc JUMP
---
0x5c9: JUMPDEST 
0x5ca: V517 = 0x2a9
0x5cd: V518 = 0x1
0x5cf: V519 = 0xa0
0x5d1: V520 = 0x2
0x5d3: V521 = EXP 0x2 0xa0
0x5d4: V522 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d5: V523 = 0x4
0x5d7: V524 = CALLDATALOAD 0x4
0x5d8: V525 = AND V524 0xffffffffffffffffffffffffffffffffffffffff
0x5d9: V526 = 0xa9e
0x5dc: JUMP 0xa9e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2a9, V525]
Exit stack: [V12, 0x2a9, V525]

================================

Block 0x5dd
[0x5dd:0x5f0]
---
Predecessors: []
Successors: []
---
0x5dd JUMPDEST
0x5de PUSH1 0x40
0x5e0 MLOAD
0x5e1 SWAP1
0x5e2 ISZERO
0x5e3 ISZERO
0x5e4 DUP2
0x5e5 MSTORE
0x5e6 PUSH1 0x20
0x5e8 ADD
0x5e9 PUSH1 0x40
0x5eb MLOAD
0x5ec DUP1
0x5ed SWAP2
0x5ee SUB
0x5ef SWAP1
0x5f0 RETURN
---
0x5dd: JUMPDEST 
0x5de: V527 = 0x40
0x5e0: V528 = M[0x40]
0x5e2: V529 = ISZERO S0
0x5e3: V530 = ISZERO V529
0x5e5: M[V528] = V530
0x5e6: V531 = 0x20
0x5e8: V532 = ADD 0x20 V528
0x5e9: V533 = 0x40
0x5eb: V534 = M[0x40]
0x5ee: V535 = SUB V532 V534
0x5f0: RETURN V534 V535
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x5f1
[0x5f1:0x5fd]
---
Predecessors: [0x16a]
Successors: [0x5fe, 0x60d]
---
0x5f1 JUMPDEST
0x5f2 PUSH1 0x0
0x5f4 DUP3
0x5f5 DUP3
0x5f6 MUL
0x5f7 DUP4
0x5f8 ISZERO
0x5f9 DUP1
0x5fa PUSH2 0x60d
0x5fd JUMPI
---
0x5f1: JUMPDEST 
0x5f2: V536 = 0x0
0x5f6: V537 = MUL 0x118 V121
0x5f8: V538 = ISZERO V121
0x5fa: V539 = 0x60d
0x5fd: JUMPI 0x60d V538
---
Entry stack: [V12, 0x1fa, 0x0, 0x176, V121, 0x118]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V537, V538]
Exit stack: [V12, 0x1fa, 0x0, 0x176, V121, 0x118, 0x0, V537, V538]

================================

Block 0x5fe
[0x5fe:0x608]
---
Predecessors: [0x5f1]
Successors: [0x609, 0x60a]
---
0x5fe POP
0x5ff DUP3
0x600 DUP5
0x601 DUP3
0x602 DUP2
0x603 ISZERO
0x604 ISZERO
0x605 PUSH2 0x60a
0x608 JUMPI
---
0x603: V540 = ISZERO V121
0x604: V541 = ISZERO V540
0x605: V542 = 0x60a
0x608: JUMPI 0x60a V541
---
Entry stack: [V12, 0x1fa, 0x0, 0x176, V121, 0x118, 0x0, V537, V538]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S3, S4, S1]
Exit stack: [V12, 0x1fa, 0x0, 0x176, V121, 0x118, 0x0, V537, 0x118, V121, V537]

================================

Block 0x609
[0x609:0x609]
---
Predecessors: [0x5fe]
Successors: []
---
0x609 INVALID
---
0x609: INVALID 
---
Entry stack: [V12, 0x1fa, 0x0, 0x176, V121, 0x118, 0x0, V537, 0x118, V121, V537]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1fa, 0x0, 0x176, V121, 0x118, 0x0, V537, 0x118, V121, V537]

================================

Block 0x60a
[0x60a:0x60c]
---
Predecessors: [0x5fe]
Successors: [0x60d]
---
0x60a JUMPDEST
0x60b DIV
0x60c EQ
---
0x60a: JUMPDEST 
0x60b: V543 = DIV V537 V121
0x60c: V544 = EQ V543 0x118
---
Entry stack: [V12, 0x1fa, 0x0, 0x176, V121, 0x118, 0x0, V537, 0x118, V121, V537]
Stack pops: 3
Stack additions: [V544]
Exit stack: [V12, 0x1fa, 0x0, 0x176, V121, 0x118, 0x0, V537, V544]

================================

Block 0x60d
[0x60d:0x613]
---
Predecessors: [0x5f1, 0x60a]
Successors: [0x614, 0x615]
---
0x60d JUMPDEST
0x60e ISZERO
0x60f ISZERO
0x610 PUSH2 0x615
0x613 JUMPI
---
0x60d: JUMPDEST 
0x60e: V545 = ISZERO S0
0x60f: V546 = ISZERO V545
0x610: V547 = 0x615
0x613: JUMPI 0x615 V546
---
Entry stack: [V12, 0x1fa, 0x0, 0x176, V121, 0x118, 0x0, V537, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1fa, 0x0, 0x176, V121, 0x118, 0x0, V537]

================================

Block 0x614
[0x614:0x614]
---
Predecessors: [0x60d]
Successors: []
---
0x614 INVALID
---
0x614: INVALID 
---
Entry stack: [V12, 0x1fa, 0x0, 0x176, V121, 0x118, 0x0, V537]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1fa, 0x0, 0x176, V121, 0x118, 0x0, V537]

================================

Block 0x615
[0x615:0x618]
---
Predecessors: [0x60d]
Successors: [0x619]
---
0x615 JUMPDEST
0x616 DUP1
0x617 SWAP2
0x618 POP
---
0x615: JUMPDEST 
---
Entry stack: [V12, 0x1fa, 0x0, 0x176, V121, 0x118, 0x0, V537]
Stack pops: 2
Stack additions: [S0, S0]
Exit stack: [V12, 0x1fa, 0x0, 0x176, V121, 0x118, V537, V537]

================================

Block 0x619
[0x619:0x61f]
---
Predecessors: [0x615]
Successors: [0x176]
---
0x619 JUMPDEST
0x61a POP
0x61b SWAP3
0x61c SWAP2
0x61d POP
0x61e POP
0x61f JUMP
---
0x619: JUMPDEST 
0x61f: JUMP 0x176
---
Entry stack: [V12, 0x1fa, 0x0, 0x176, V121, 0x118, V537, V537]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x1fa, 0x0, V537]

================================

Block 0x620
[0x620:0x62b]
---
Predecessors: [0x176]
Successors: [0x62c, 0x62d]
---
0x620 JUMPDEST
0x621 PUSH1 0x0
0x623 DUP1
0x624 DUP3
0x625 DUP5
0x626 LT
0x627 ISZERO
0x628 PUSH2 0x62d
0x62b JUMPI
---
0x620: JUMPDEST 
0x621: V548 = 0x0
0x626: V549 = LT 0x19d971e4fe8401e74000000 V153
0x627: V550 = ISZERO V549
0x628: V551 = 0x62d
0x62b: JUMPI 0x62d V550
---
Entry stack: [V12, 0x1fa, V537, 0x1f3, 0x19d971e4fe8401e74000000, V153]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0]
Exit stack: [V12, 0x1fa, V537, 0x1f3, 0x19d971e4fe8401e74000000, V153, 0x0, 0x0]

================================

Block 0x62c
[0x62c:0x62c]
---
Predecessors: [0x620]
Successors: []
---
0x62c INVALID
---
0x62c: INVALID 
---
Entry stack: [V12, 0x1fa, V537, 0x1f3, 0x19d971e4fe8401e74000000, V153, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1fa, V537, 0x1f3, 0x19d971e4fe8401e74000000, V153, 0x0, 0x0]

================================

Block 0x62d
[0x62d:0x633]
---
Predecessors: [0x620]
Successors: [0x634]
---
0x62d JUMPDEST
0x62e POP
0x62f POP
0x630 DUP1
0x631 DUP3
0x632 SUB
0x633 DUP1
---
0x62d: JUMPDEST 
0x632: V552 = SUB 0x19d971e4fe8401e74000000 V153
---
Entry stack: [V12, 0x1fa, V537, 0x1f3, 0x19d971e4fe8401e74000000, V153, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, V552, V552]
Exit stack: [V12, 0x1fa, V537, 0x1f3, 0x19d971e4fe8401e74000000, V153, V552, V552]

================================

Block 0x634
[0x634:0x63a]
---
Predecessors: [0x62d]
Successors: [0x1f3]
---
0x634 JUMPDEST
0x635 POP
0x636 SWAP3
0x637 SWAP2
0x638 POP
0x639 POP
0x63a JUMP
---
0x634: JUMPDEST 
0x63a: JUMP 0x1f3
---
Entry stack: [V12, 0x1fa, V537, 0x1f3, 0x19d971e4fe8401e74000000, V153, V552, V552]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V12, 0x1fa, V537, V552]

================================

Block 0x63b
[0x63b:0x642]
---
Predecessors: [0x207]
Successors: [0xbbe]
---
0x63b JUMPDEST
0x63c PUSH2 0x643
0x63f PUSH2 0xbbe
0x642 JUMP
---
0x63b: JUMPDEST 
0x63c: V553 = 0x643
0x63f: V554 = 0xbbe
0x642: JUMP 0xbbe
---
Entry stack: [V12, 0x20f]
Stack pops: 0
Stack additions: [0x643]
Exit stack: [V12, 0x20f, 0x643]

================================

Block 0x643
[0x643:0x679]
---
Predecessors: [0xbbe]
Successors: [0x67a]
---
0x643 JUMPDEST
0x644 PUSH1 0x40
0x646 DUP1
0x647 MLOAD
0x648 SWAP1
0x649 DUP2
0x64a ADD
0x64b PUSH1 0x40
0x64d MSTORE
0x64e PUSH1 0xe
0x650 DUP2
0x651 MSTORE
0x652 PUSH32 0x5068696c636f696e20546f6b656e000000000000000000000000000000000000
0x673 PUSH1 0x20
0x675 DUP3
0x676 ADD
0x677 MSTORE
0x678 SWAP1
0x679 POP
---
0x643: JUMPDEST 
0x644: V555 = 0x40
0x647: V556 = M[0x40]
0x64a: V557 = ADD V556 0x40
0x64b: V558 = 0x40
0x64d: M[0x40] = V557
0x64e: V559 = 0xe
0x651: M[V556] = 0xe
0x652: V560 = 0x5068696c636f696e20546f6b656e000000000000000000000000000000000000
0x673: V561 = 0x20
0x676: V562 = ADD V556 0x20
0x677: M[V562] = 0x5068696c636f696e20546f6b656e000000000000000000000000000000000000
---
Entry stack: [V12, 0x20f, V976]
Stack pops: 1
Stack additions: [V556]
Exit stack: [V12, 0x20f, V556]

================================

Block 0x67a
[0x67a:0x67c]
---
Predecessors: [0x643]
Successors: [0x20f]
---
0x67a JUMPDEST
0x67b SWAP1
0x67c JUMP
---
0x67a: JUMPDEST 
0x67c: JUMP 0x20f
---
Entry stack: [V12, 0x20f, V556]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V556]

================================

Block 0x67d
[0x67d:0x688]
---
Predecessors: [0x292]
Successors: [0x689, 0x6b2]
---
0x67d JUMPDEST
0x67e PUSH1 0x0
0x680 DUP2
0x681 ISZERO
0x682 DUP1
0x683 ISZERO
0x684 SWAP1
0x685 PUSH2 0x6b2
0x688 JUMPI
---
0x67d: JUMPDEST 
0x67e: V563 = 0x0
0x681: V564 = ISZERO V216
0x683: V565 = ISZERO V564
0x685: V566 = 0x6b2
0x688: JUMPI 0x6b2 V564
---
Entry stack: [V12, 0x2a9, V214, V216]
Stack pops: 1
Stack additions: [S0, 0x0, V565]
Exit stack: [V12, 0x2a9, V214, V216, 0x0, V565]

================================

Block 0x689
[0x689:0x6b1]
---
Predecessors: [0x67d]
Successors: [0x6b2]
---
0x689 POP
0x68a PUSH1 0x1
0x68c PUSH1 0xa0
0x68e PUSH1 0x2
0x690 EXP
0x691 SUB
0x692 CALLER
0x693 DUP2
0x694 AND
0x695 PUSH1 0x0
0x697 SWAP1
0x698 DUP2
0x699 MSTORE
0x69a PUSH1 0x2
0x69c PUSH1 0x20
0x69e SWAP1
0x69f DUP2
0x6a0 MSTORE
0x6a1 PUSH1 0x40
0x6a3 DUP1
0x6a4 DUP4
0x6a5 SHA3
0x6a6 SWAP4
0x6a7 DUP8
0x6a8 AND
0x6a9 DUP4
0x6aa MSTORE
0x6ab SWAP3
0x6ac SWAP1
0x6ad MSTORE
0x6ae SHA3
0x6af SLOAD
0x6b0 ISZERO
0x6b1 ISZERO
---
0x68a: V567 = 0x1
0x68c: V568 = 0xa0
0x68e: V569 = 0x2
0x690: V570 = EXP 0x2 0xa0
0x691: V571 = SUB 0x10000000000000000000000000000000000000000 0x1
0x692: V572 = CALLER
0x694: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V572
0x695: V574 = 0x0
0x699: M[0x0] = V573
0x69a: V575 = 0x2
0x69c: V576 = 0x20
0x6a0: M[0x20] = 0x2
0x6a1: V577 = 0x40
0x6a5: V578 = SHA3 0x0 0x40
0x6a8: V579 = AND V214 0xffffffffffffffffffffffffffffffffffffffff
0x6aa: M[0x0] = V579
0x6ad: M[0x20] = V578
0x6ae: V580 = SHA3 0x0 0x40
0x6af: V581 = S[V580]
0x6b0: V582 = ISZERO V581
0x6b1: V583 = ISZERO V582
---
Entry stack: [V12, 0x2a9, V214, V216, 0x0, V565]
Stack pops: 4
Stack additions: [S3, S2, S1, V583]
Exit stack: [V12, 0x2a9, V214, V216, 0x0, V583]

================================

Block 0x6b2
[0x6b2:0x6b7]
---
Predecessors: [0x67d, 0x689]
Successors: [0x6b8, 0x6bf]
---
0x6b2 JUMPDEST
0x6b3 ISZERO
0x6b4 PUSH2 0x6bf
0x6b7 JUMPI
---
0x6b2: JUMPDEST 
0x6b3: V584 = ISZERO S0
0x6b4: V585 = 0x6bf
0x6b7: JUMPI 0x6bf V584
---
Entry stack: [V12, 0x2a9, V214, V216, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2a9, V214, V216, 0x0]

================================

Block 0x6b8
[0x6b8:0x6be]
---
Predecessors: [0x6b2]
Successors: [0x723]
---
0x6b8 POP
0x6b9 PUSH1 0x0
0x6bb PUSH2 0x723
0x6be JUMP
---
0x6b9: V586 = 0x0
0x6bb: V587 = 0x723
0x6be: JUMP 0x723
---
Entry stack: [V12, 0x2a9, V214, V216, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x2a9, V214, V216, 0x0]

================================

Block 0x6bf
[0x6bf:0x722]
---
Predecessors: [0x6b2]
Successors: [0x723]
---
0x6bf JUMPDEST
0x6c0 PUSH1 0x1
0x6c2 PUSH1 0xa0
0x6c4 PUSH1 0x2
0x6c6 EXP
0x6c7 SUB
0x6c8 CALLER
0x6c9 DUP2
0x6ca AND
0x6cb PUSH1 0x0
0x6cd DUP2
0x6ce DUP2
0x6cf MSTORE
0x6d0 PUSH1 0x2
0x6d2 PUSH1 0x20
0x6d4 SWAP1
0x6d5 DUP2
0x6d6 MSTORE
0x6d7 PUSH1 0x40
0x6d9 DUP1
0x6da DUP4
0x6db SHA3
0x6dc SWAP5
0x6dd DUP9
0x6de AND
0x6df DUP1
0x6e0 DUP5
0x6e1 MSTORE
0x6e2 SWAP5
0x6e3 SWAP1
0x6e4 SWAP2
0x6e5 MSTORE
0x6e6 SWAP1
0x6e7 DUP2
0x6e8 SWAP1
0x6e9 SHA3
0x6ea DUP6
0x6eb SWAP1
0x6ec SSTORE
0x6ed PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x70e SWAP1
0x70f DUP6
0x710 SWAP1
0x711 MLOAD
0x712 SWAP1
0x713 DUP2
0x714 MSTORE
0x715 PUSH1 0x20
0x717 ADD
0x718 PUSH1 0x40
0x71a MLOAD
0x71b DUP1
0x71c SWAP2
0x71d SUB
0x71e SWAP1
0x71f LOG3
0x720 POP
0x721 PUSH1 0x1
---
0x6bf: JUMPDEST 
0x6c0: V588 = 0x1
0x6c2: V589 = 0xa0
0x6c4: V590 = 0x2
0x6c6: V591 = EXP 0x2 0xa0
0x6c7: V592 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6c8: V593 = CALLER
0x6ca: V594 = AND 0xffffffffffffffffffffffffffffffffffffffff V593
0x6cb: V595 = 0x0
0x6cf: M[0x0] = V594
0x6d0: V596 = 0x2
0x6d2: V597 = 0x20
0x6d6: M[0x20] = 0x2
0x6d7: V598 = 0x40
0x6db: V599 = SHA3 0x0 0x40
0x6de: V600 = AND V214 0xffffffffffffffffffffffffffffffffffffffff
0x6e1: M[0x0] = V600
0x6e5: M[0x20] = V599
0x6e9: V601 = SHA3 0x0 0x40
0x6ec: S[V601] = V216
0x6ed: V602 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x711: V603 = M[0x40]
0x714: M[V603] = V216
0x715: V604 = 0x20
0x717: V605 = ADD 0x20 V603
0x718: V606 = 0x40
0x71a: V607 = M[0x40]
0x71d: V608 = SUB V605 V607
0x71f: LOG V607 V608 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V594 V600
0x721: V609 = 0x1
---
Entry stack: [V12, 0x2a9, V214, V216, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V12, 0x2a9, V214, V216, 0x1]

================================

Block 0x723
[0x723:0x728]
---
Predecessors: [0x6b8, 0x6bf]
Successors: [0x2a9]
---
0x723 JUMPDEST
0x724 SWAP3
0x725 SWAP2
0x726 POP
0x727 POP
0x728 JUMP
---
0x723: JUMPDEST 
0x728: JUMP 0x2a9
---
Entry stack: [V12, 0x2a9, V214, V216, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x729
[0x729:0x72e]
---
Predecessors: [0x2c8]
Successors: [0x2d0]
---
0x729 JUMPDEST
0x72a PUSH1 0x3
0x72c SLOAD
0x72d DUP2
0x72e JUMP
---
0x729: JUMPDEST 
0x72a: V610 = 0x3
0x72c: V611 = S[0x3]
0x72e: JUMP 0x2d0
---
Entry stack: [V12, 0x2d0]
Stack pops: 1
Stack additions: [S0, V611]
Exit stack: [V12, 0x2d0, V611]

================================

Block 0x72f
[0x72f:0x734]
---
Predecessors: [0x2ed]
Successors: [0x2d0]
---
0x72f JUMPDEST
0x730 PUSH1 0x5
0x732 SLOAD
0x733 DUP2
0x734 JUMP
---
0x72f: JUMPDEST 
0x730: V612 = 0x5
0x732: V613 = S[0x5]
0x734: JUMP 0x2d0
---
Entry stack: [V12, 0x2d0]
Stack pops: 1
Stack additions: [S0, V613]
Exit stack: [V12, 0x2d0, V613]

================================

Block 0x735
[0x735:0x743]
---
Predecessors: [0x312]
Successors: [0x744, 0x74c]
---
0x735 JUMPDEST
0x736 PUSH1 0x0
0x738 DUP1
0x739 DUP1
0x73a DUP1
0x73b DUP1
0x73c DUP1
0x73d DUP7
0x73e ISZERO
0x73f ISZERO
0x740 PUSH2 0x74c
0x743 JUMPI
---
0x735: JUMPDEST 
0x736: V614 = 0x0
0x73e: V615 = ISZERO V270
0x73f: V616 = ISZERO V615
0x740: V617 = 0x74c
0x743: JUMPI 0x74c V616
---
Entry stack: [V12, 0x2a9, V265, V268, V270]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x2a9, V265, V268, V270, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x744
[0x744:0x74b]
---
Predecessors: [0x735]
Successors: [0x84c]
---
0x744 PUSH1 0x0
0x746 SWAP6
0x747 POP
0x748 PUSH2 0x84c
0x74b JUMP
---
0x744: V618 = 0x0
0x748: V619 = 0x84c
0x74b: JUMP 0x84c
---
Entry stack: [V12, 0x2a9, V265, V268, V270, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x2a9, V265, V268, V270, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x74c
[0x74c:0x7a8]
---
Predecessors: [0x735]
Successors: [0x7a9, 0x7ab]
---
0x74c JUMPDEST
0x74d POP
0x74e POP
0x74f POP
0x750 POP
0x751 PUSH1 0x1
0x753 PUSH1 0xa0
0x755 PUSH1 0x2
0x757 EXP
0x758 SUB
0x759 DUP6
0x75a DUP2
0x75b AND
0x75c PUSH1 0x0
0x75e SWAP1
0x75f DUP2
0x760 MSTORE
0x761 PUSH1 0x1
0x763 PUSH1 0x20
0x765 DUP2
0x766 DUP2
0x767 MSTORE
0x768 PUSH1 0x40
0x76a DUP1
0x76b DUP5
0x76c SHA3
0x76d SLOAD
0x76e PUSH1 0x2
0x770 DUP4
0x771 MSTORE
0x772 DUP2
0x773 DUP6
0x774 SHA3
0x775 CALLER
0x776 DUP8
0x777 AND
0x778 DUP7
0x779 MSTORE
0x77a DUP4
0x77b MSTORE
0x77c DUP2
0x77d DUP6
0x77e SHA3
0x77f SLOAD
0x780 SWAP6
0x781 DUP11
0x782 AND
0x783 DUP6
0x784 MSTORE
0x785 SWAP3
0x786 SWAP1
0x787 SWAP2
0x788 MSTORE
0x789 SWAP1
0x78a SWAP2
0x78b SHA3
0x78c SLOAD
0x78d SWAP1
0x78e SWAP3
0x78f POP
0x790 DUP5
0x791 DUP4
0x792 GT
0x793 DUP1
0x794 ISZERO
0x795 SWAP2
0x796 DUP7
0x797 DUP5
0x798 GT
0x799 ISZERO
0x79a SWAP2
0x79b DUP8
0x79c DUP3
0x79d ADD
0x79e SWAP2
0x79f SWAP1
0x7a0 SWAP2
0x7a1 GT
0x7a2 SWAP1
0x7a3 DUP4
0x7a4 SWAP1
0x7a5 PUSH2 0x7ab
0x7a8 JUMPI
---
0x74c: JUMPDEST 
0x751: V620 = 0x1
0x753: V621 = 0xa0
0x755: V622 = 0x2
0x757: V623 = EXP 0x2 0xa0
0x758: V624 = SUB 0x10000000000000000000000000000000000000000 0x1
0x75b: V625 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x75c: V626 = 0x0
0x760: M[0x0] = V625
0x761: V627 = 0x1
0x763: V628 = 0x20
0x767: M[0x20] = 0x1
0x768: V629 = 0x40
0x76c: V630 = SHA3 0x0 0x40
0x76d: V631 = S[V630]
0x76e: V632 = 0x2
0x771: M[0x20] = 0x2
0x774: V633 = SHA3 0x0 0x40
0x775: V634 = CALLER
0x777: V635 = AND 0xffffffffffffffffffffffffffffffffffffffff V634
0x779: M[0x0] = V635
0x77b: M[0x20] = V633
0x77e: V636 = SHA3 0x0 0x40
0x77f: V637 = S[V636]
0x782: V638 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0x784: M[0x0] = V638
0x788: M[0x20] = 0x1
0x78b: V639 = SHA3 0x0 0x40
0x78c: V640 = S[V639]
0x792: V641 = GT V631 V270
0x794: V642 = ISZERO V641
0x798: V643 = GT V637 V270
0x799: V644 = ISZERO V643
0x79d: V645 = ADD V640 V270
0x7a1: V646 = GT V645 V640
0x7a5: V647 = 0x7ab
0x7a8: JUMPI 0x7ab V641
---
Entry stack: [V12, 0x2a9, V265, V268, V270, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V631, V637, V642, V644, V646, V642]
Exit stack: [V12, 0x2a9, V265, V268, V270, 0x0, V631, V637, V642, V644, V646, V642]

================================

Block 0x7a9
[0x7a9:0x7aa]
---
Predecessors: [0x74c]
Successors: [0x7ab]
---
0x7a9 POP
0x7aa DUP2
---
0x7a9: NOP 
---
Entry stack: [V12, 0x2a9, V265, V268, V270, 0x0, V631, V637, V642, V644, V646, V642]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V12, 0x2a9, V265, V268, V270, 0x0, V631, V637, V642, V644, V646, V644]

================================

Block 0x7ab
[0x7ab:0x7b1]
---
Predecessors: [0x74c, 0x7a9]
Successors: [0x7b2, 0x7b5]
---
0x7ab JUMPDEST
0x7ac DUP1
0x7ad ISZERO
0x7ae PUSH2 0x7b5
0x7b1 JUMPI
---
0x7ab: JUMPDEST 
0x7ad: V648 = ISZERO S0
0x7ae: V649 = 0x7b5
0x7b1: JUMPI 0x7b5 V648
---
Entry stack: [V12, 0x2a9, V265, V268, V270, 0x0, V631, V637, V642, V644, V646, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x2a9, V265, V268, V270, 0x0, V631, V637, V642, V644, V646, S0]

================================

Block 0x7b2
[0x7b2:0x7b4]
---
Predecessors: [0x7ab]
Successors: [0x7b5]
---
0x7b2 POP
0x7b3 DUP1
0x7b4 ISZERO
---
0x7b4: V650 = ISZERO V646
---
Entry stack: [V12, 0x2a9, V265, V268, V270, 0x0, V631, V637, V642, V644, V646, S0]
Stack pops: 2
Stack additions: [S1, V650]
Exit stack: [V12, 0x2a9, V265, V268, V270, 0x0, V631, V637, V642, V644, V646, V650]

================================

Block 0x7b5
[0x7b5:0x7ba]
---
Predecessors: [0x7ab, 0x7b2]
Successors: [0x7bb, 0x847]
---
0x7b5 JUMPDEST
0x7b6 ISZERO
0x7b7 PUSH2 0x847
0x7ba JUMPI
---
0x7b5: JUMPDEST 
0x7b6: V651 = ISZERO S0
0x7b7: V652 = 0x847
0x7ba: JUMPI 0x847 V651
---
Entry stack: [V12, 0x2a9, V265, V268, V270, 0x0, V631, V637, V642, V644, V646, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2a9, V265, V268, V270, 0x0, V631, V637, V642, V644, V646]

================================

Block 0x7bb
[0x7bb:0x846]
---
Predecessors: [0x7b5]
Successors: [0x84c]
---
0x7bb PUSH1 0x1
0x7bd PUSH1 0xa0
0x7bf PUSH1 0x2
0x7c1 EXP
0x7c2 SUB
0x7c3 DUP1
0x7c4 DUP10
0x7c5 AND
0x7c6 PUSH1 0x0
0x7c8 DUP2
0x7c9 DUP2
0x7ca MSTORE
0x7cb PUSH1 0x1
0x7cd PUSH1 0x20
0x7cf SWAP1
0x7d0 DUP2
0x7d1 MSTORE
0x7d2 PUSH1 0x40
0x7d4 DUP1
0x7d5 DUP4
0x7d6 SHA3
0x7d7 DUP1
0x7d8 SLOAD
0x7d9 DUP14
0x7da ADD
0x7db SWAP1
0x7dc SSTORE
0x7dd DUP14
0x7de DUP6
0x7df AND
0x7e0 DUP1
0x7e1 DUP5
0x7e2 MSTORE
0x7e3 DUP2
0x7e4 DUP5
0x7e5 SHA3
0x7e6 DUP1
0x7e7 SLOAD
0x7e8 DUP15
0x7e9 SWAP1
0x7ea SUB
0x7eb SWAP1
0x7ec SSTORE
0x7ed PUSH1 0x2
0x7ef DUP4
0x7f0 MSTORE
0x7f1 DUP2
0x7f2 DUP5
0x7f3 SHA3
0x7f4 CALLER
0x7f5 SWAP1
0x7f6 SWAP7
0x7f7 AND
0x7f8 DUP5
0x7f9 MSTORE
0x7fa SWAP5
0x7fb SWAP1
0x7fc SWAP2
0x7fd MSTORE
0x7fe SWAP1
0x7ff DUP2
0x800 SWAP1
0x801 SHA3
0x802 DUP1
0x803 SLOAD
0x804 DUP12
0x805 SWAP1
0x806 SUB
0x807 SWAP1
0x808 SSTORE
0x809 SWAP1
0x80a SWAP2
0x80b SWAP1
0x80c PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x82d SWAP1
0x82e DUP11
0x82f SWAP1
0x830 MLOAD
0x831 SWAP1
0x832 DUP2
0x833 MSTORE
0x834 PUSH1 0x20
0x836 ADD
0x837 PUSH1 0x40
0x839 MLOAD
0x83a DUP1
0x83b SWAP2
0x83c SUB
0x83d SWAP1
0x83e LOG3
0x83f PUSH1 0x1
0x841 SWAP6
0x842 POP
0x843 PUSH2 0x84c
0x846 JUMP
---
0x7bb: V653 = 0x1
0x7bd: V654 = 0xa0
0x7bf: V655 = 0x2
0x7c1: V656 = EXP 0x2 0xa0
0x7c2: V657 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c5: V658 = AND V268 0xffffffffffffffffffffffffffffffffffffffff
0x7c6: V659 = 0x0
0x7ca: M[0x0] = V658
0x7cb: V660 = 0x1
0x7cd: V661 = 0x20
0x7d1: M[0x20] = 0x1
0x7d2: V662 = 0x40
0x7d6: V663 = SHA3 0x0 0x40
0x7d8: V664 = S[V663]
0x7da: V665 = ADD V270 V664
0x7dc: S[V663] = V665
0x7df: V666 = AND 0xffffffffffffffffffffffffffffffffffffffff V265
0x7e2: M[0x0] = V666
0x7e5: V667 = SHA3 0x0 0x40
0x7e7: V668 = S[V667]
0x7ea: V669 = SUB V668 V270
0x7ec: S[V667] = V669
0x7ed: V670 = 0x2
0x7f0: M[0x20] = 0x2
0x7f3: V671 = SHA3 0x0 0x40
0x7f4: V672 = CALLER
0x7f7: V673 = AND 0xffffffffffffffffffffffffffffffffffffffff V672
0x7f9: M[0x0] = V673
0x7fd: M[0x20] = V671
0x801: V674 = SHA3 0x0 0x40
0x803: V675 = S[V674]
0x806: V676 = SUB V675 V270
0x808: S[V674] = V676
0x80c: V677 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x830: V678 = M[0x40]
0x833: M[V678] = V270
0x834: V679 = 0x20
0x836: V680 = ADD 0x20 V678
0x837: V681 = 0x40
0x839: V682 = M[0x40]
0x83c: V683 = SUB V680 V682
0x83e: LOG V682 V683 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V666 V658
0x83f: V684 = 0x1
0x843: V685 = 0x84c
0x846: JUMP 0x84c
---
Entry stack: [V12, 0x2a9, V265, V268, V270, 0x0, V631, V637, V642, V644, V646]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x2a9, V265, V268, V270, 0x1, V631, V637, V642, V644, V646]

================================

Block 0x847
[0x847:0x84b]
---
Predecessors: [0x7b5]
Successors: [0x84c]
---
0x847 JUMPDEST
0x848 PUSH1 0x0
0x84a SWAP6
0x84b POP
---
0x847: JUMPDEST 
0x848: V686 = 0x0
---
Entry stack: [V12, 0x2a9, V265, V268, V270, 0x0, V631, V637, V642, V644, V646]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x2a9, V265, V268, V270, 0x0, V631, V637, V642, V644, V646]

================================

Block 0x84c
[0x84c:0x84c]
---
Predecessors: [0x744, 0x7bb, 0x847]
Successors: [0x84d]
---
0x84c JUMPDEST
---
0x84c: JUMPDEST 
---
Entry stack: [V12, 0x2a9, V265, V268, V270, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a9, V265, V268, V270, {0x0, 0x1}, S4, S3, S2, S1, S0]

================================

Block 0x84d
[0x84d:0x858]
---
Predecessors: [0x84c]
Successors: [0x2a9]
---
0x84d JUMPDEST
0x84e POP
0x84f POP
0x850 POP
0x851 POP
0x852 POP
0x853 SWAP4
0x854 SWAP3
0x855 POP
0x856 POP
0x857 POP
0x858 JUMP
---
0x84d: JUMPDEST 
0x858: JUMP 0x2a9
---
Entry stack: [V12, 0x2a9, V265, V268, V270, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S5]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x859
[0x859:0x85b]
---
Predecessors: [0x34e]
Successors: [0x85c]
---
0x859 JUMPDEST
0x85a PUSH1 0x12
---
0x859: JUMPDEST 
0x85a: V687 = 0x12
---
Entry stack: [V12, 0x356]
Stack pops: 0
Stack additions: [0x12]
Exit stack: [V12, 0x356, 0x12]

================================

Block 0x85c
[0x85c:0x85e]
---
Predecessors: [0x859]
Successors: [0x356]
---
0x85c JUMPDEST
0x85d SWAP1
0x85e JUMP
---
0x85c: JUMPDEST 
0x85e: JUMP 0x356
---
Entry stack: [V12, 0x356, 0x12]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x12]

================================

Block 0x85f
[0x85f:0x864]
---
Predecessors: [0x377]
Successors: [0x2d0]
---
0x85f JUMPDEST
0x860 PUSH2 0x118
0x863 DUP2
0x864 JUMP
---
0x85f: JUMPDEST 
0x860: V688 = 0x118
0x864: JUMP 0x2d0
---
Entry stack: [V12, 0x2d0]
Stack pops: 1
Stack additions: [S0, 0x118]
Exit stack: [V12, 0x2d0, 0x118]

================================

Block 0x865
[0x865:0x86a]
---
Predecessors: [0x39c]
Successors: [0x2d0]
---
0x865 JUMPDEST
0x866 PUSH1 0x6
0x868 SLOAD
0x869 DUP2
0x86a JUMP
---
0x865: JUMPDEST 
0x866: V689 = 0x6
0x868: V690 = S[0x6]
0x86a: JUMP 0x2d0
---
Entry stack: [V12, 0x2d0]
Stack pops: 1
Stack additions: [S0, V690]
Exit stack: [V12, 0x2d0, V690]

================================

Block 0x86b
[0x86b:0x882]
---
Predecessors: [0x3c1]
Successors: [0x883, 0x887]
---
0x86b JUMPDEST
0x86c PUSH1 0x0
0x86e SLOAD
0x86f CALLER
0x870 PUSH1 0x1
0x872 PUSH1 0xa0
0x874 PUSH1 0x2
0x876 EXP
0x877 SUB
0x878 SWAP1
0x879 DUP2
0x87a AND
0x87b SWAP2
0x87c AND
0x87d EQ
0x87e ISZERO
0x87f PUSH2 0x887
0x882 JUMPI
---
0x86b: JUMPDEST 
0x86c: V691 = 0x0
0x86e: V692 = S[0x0]
0x86f: V693 = CALLER
0x870: V694 = 0x1
0x872: V695 = 0xa0
0x874: V696 = 0x2
0x876: V697 = EXP 0x2 0xa0
0x877: V698 = SUB 0x10000000000000000000000000000000000000000 0x1
0x87a: V699 = AND 0xffffffffffffffffffffffffffffffffffffffff V693
0x87c: V700 = AND V692 0xffffffffffffffffffffffffffffffffffffffff
0x87d: V701 = EQ V700 V699
0x87e: V702 = ISZERO V701
0x87f: V703 = 0x887
0x882: JUMPI 0x887 V702
---
Entry stack: [V12, 0x1fa]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1fa]

================================

Block 0x883
[0x883:0x886]
---
Predecessors: [0x86b]
Successors: []
---
0x883 PUSH1 0x0
0x885 DUP1
0x886 REVERT
---
0x883: V704 = 0x0
0x886: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1fa]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1fa]

================================

Block 0x887
[0x887:0x8a5]
---
Predecessors: [0x86b]
Successors: [0x8a6]
---
0x887 JUMPDEST
0x888 PUSH1 0x0
0x88a DUP1
0x88b SLOAD
0x88c PUSH21 0xff0000000000000000000000000000000000000000
0x8a2 NOT
0x8a3 AND
0x8a4 SWAP1
0x8a5 SSTORE
---
0x887: JUMPDEST 
0x888: V705 = 0x0
0x88b: V706 = S[0x0]
0x88c: V707 = 0xff0000000000000000000000000000000000000000
0x8a2: V708 = NOT 0xff0000000000000000000000000000000000000000
0x8a3: V709 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V706
0x8a5: S[0x0] = V709
---
Entry stack: [V12, 0x1fa]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1fa]

================================

Block 0x8a6
[0x8a6:0x8a7]
---
Predecessors: [0x887]
Successors: [0x1fa]
---
0x8a6 JUMPDEST
0x8a7 JUMP
---
0x8a6: JUMPDEST 
0x8a7: JUMP 0x1fa
---
Entry stack: [V12, 0x1fa]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x8a8
[0x8a8:0x8b7]
---
Predecessors: [0x3d6]
Successors: [0x2d0]
---
0x8a8 JUMPDEST
0x8a9 PUSH12 0x19d971e4fe8401e74000000
0x8b6 DUP2
0x8b7 JUMP
---
0x8a8: JUMPDEST 
0x8a9: V710 = 0x19d971e4fe8401e74000000
0x8b7: JUMP 0x2d0
---
Entry stack: [V12, 0x2d0]
Stack pops: 1
Stack additions: [S0, 0x19d971e4fe8401e74000000]
Exit stack: [V12, 0x2d0, 0x19d971e4fe8401e74000000]

================================

Block 0x8b8
[0x8b8:0x8d1]
---
Predecessors: [0x3fb]
Successors: [0x8d2]
---
0x8b8 JUMPDEST
0x8b9 PUSH1 0x1
0x8bb PUSH1 0xa0
0x8bd PUSH1 0x2
0x8bf EXP
0x8c0 SUB
0x8c1 DUP2
0x8c2 AND
0x8c3 PUSH1 0x0
0x8c5 SWAP1
0x8c6 DUP2
0x8c7 MSTORE
0x8c8 PUSH1 0x1
0x8ca PUSH1 0x20
0x8cc MSTORE
0x8cd PUSH1 0x40
0x8cf SWAP1
0x8d0 SHA3
0x8d1 SLOAD
---
0x8b8: JUMPDEST 
0x8b9: V711 = 0x1
0x8bb: V712 = 0xa0
0x8bd: V713 = 0x2
0x8bf: V714 = EXP 0x2 0xa0
0x8c0: V715 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c2: V716 = AND V353 0xffffffffffffffffffffffffffffffffffffffff
0x8c3: V717 = 0x0
0x8c7: M[0x0] = V716
0x8c8: V718 = 0x1
0x8ca: V719 = 0x20
0x8cc: M[0x20] = 0x1
0x8cd: V720 = 0x40
0x8d0: V721 = SHA3 0x0 0x40
0x8d1: V722 = S[V721]
---
Entry stack: [V12, 0x2d0, V353]
Stack pops: 1
Stack additions: [S0, V722]
Exit stack: [V12, 0x2d0, V353, V722]

================================

Block 0x8d2
[0x8d2:0x8d6]
---
Predecessors: [0x8b8]
Successors: [0x2d0]
---
0x8d2 JUMPDEST
0x8d3 SWAP2
0x8d4 SWAP1
0x8d5 POP
0x8d6 JUMP
---
0x8d2: JUMPDEST 
0x8d6: JUMP 0x2d0
---
Entry stack: [V12, 0x2d0, V353, V722]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V722]

================================

Block 0x8d7
[0x8d7:0x8ee]
---
Predecessors: [0x42c]
Successors: [0x8ef, 0x8f3]
---
0x8d7 JUMPDEST
0x8d8 PUSH1 0x0
0x8da SLOAD
0x8db CALLER
0x8dc PUSH1 0x1
0x8de PUSH1 0xa0
0x8e0 PUSH1 0x2
0x8e2 EXP
0x8e3 SUB
0x8e4 SWAP1
0x8e5 DUP2
0x8e6 AND
0x8e7 SWAP2
0x8e8 AND
0x8e9 EQ
0x8ea ISZERO
0x8eb PUSH2 0x8f3
0x8ee JUMPI
---
0x8d7: JUMPDEST 
0x8d8: V723 = 0x0
0x8da: V724 = S[0x0]
0x8db: V725 = CALLER
0x8dc: V726 = 0x1
0x8de: V727 = 0xa0
0x8e0: V728 = 0x2
0x8e2: V729 = EXP 0x2 0xa0
0x8e3: V730 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8e6: V731 = AND 0xffffffffffffffffffffffffffffffffffffffff V725
0x8e8: V732 = AND V724 0xffffffffffffffffffffffffffffffffffffffff
0x8e9: V733 = EQ V732 V731
0x8ea: V734 = ISZERO V733
0x8eb: V735 = 0x8f3
0x8ee: JUMPI 0x8f3 V734
---
Entry stack: [V12, 0x1fa]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1fa]

================================

Block 0x8ef
[0x8ef:0x8f2]
---
Predecessors: [0x8d7]
Successors: []
---
0x8ef PUSH1 0x0
0x8f1 DUP1
0x8f2 REVERT
---
0x8ef: V736 = 0x0
0x8f2: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1fa]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1fa]

================================

Block 0x8f3
[0x8f3:0x917]
---
Predecessors: [0x8d7]
Successors: [0x918]
---
0x8f3 JUMPDEST
0x8f4 PUSH1 0x0
0x8f6 DUP1
0x8f7 SLOAD
0x8f8 PUSH21 0xff0000000000000000000000000000000000000000
0x90e NOT
0x90f AND
0x910 PUSH1 0xa0
0x912 PUSH1 0x2
0x914 EXP
0x915 OR
0x916 SWAP1
0x917 SSTORE
---
0x8f3: JUMPDEST 
0x8f4: V737 = 0x0
0x8f7: V738 = S[0x0]
0x8f8: V739 = 0xff0000000000000000000000000000000000000000
0x90e: V740 = NOT 0xff0000000000000000000000000000000000000000
0x90f: V741 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V738
0x910: V742 = 0xa0
0x912: V743 = 0x2
0x914: V744 = EXP 0x2 0xa0
0x915: V745 = OR 0x10000000000000000000000000000000000000000 V741
0x917: S[0x0] = V745
---
Entry stack: [V12, 0x1fa]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1fa]

================================

Block 0x918
[0x918:0x919]
---
Predecessors: [0x8f3]
Successors: [0x1fa]
---
0x918 JUMPDEST
0x919 JUMP
---
0x918: JUMPDEST 
0x919: JUMP 0x1fa
---
Entry stack: [V12, 0x1fa]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x91a
[0x91a:0x921]
---
Predecessors: [0x441]
Successors: [0xbbe]
---
0x91a JUMPDEST
0x91b PUSH2 0x922
0x91e PUSH2 0xbbe
0x921 JUMP
---
0x91a: JUMPDEST 
0x91b: V746 = 0x922
0x91e: V747 = 0xbbe
0x921: JUMP 0xbbe
---
Entry stack: [V12, 0x20f]
Stack pops: 0
Stack additions: [0x922]
Exit stack: [V12, 0x20f, 0x922]

================================

Block 0x922
[0x922:0x958]
---
Predecessors: [0xbbe]
Successors: [0x959]
---
0x922 JUMPDEST
0x923 PUSH1 0x40
0x925 DUP1
0x926 MLOAD
0x927 SWAP1
0x928 DUP2
0x929 ADD
0x92a PUSH1 0x40
0x92c MSTORE
0x92d PUSH1 0x3
0x92f DUP2
0x930 MSTORE
0x931 PUSH32 0x5048540000000000000000000000000000000000000000000000000000000000
0x952 PUSH1 0x20
0x954 DUP3
0x955 ADD
0x956 MSTORE
0x957 SWAP1
0x958 POP
---
0x922: JUMPDEST 
0x923: V748 = 0x40
0x926: V749 = M[0x40]
0x929: V750 = ADD V749 0x40
0x92a: V751 = 0x40
0x92c: M[0x40] = V750
0x92d: V752 = 0x3
0x930: M[V749] = 0x3
0x931: V753 = 0x5048540000000000000000000000000000000000000000000000000000000000
0x952: V754 = 0x20
0x955: V755 = ADD V749 0x20
0x956: M[V755] = 0x5048540000000000000000000000000000000000000000000000000000000000
---
Entry stack: [V12, 0x20f, V976]
Stack pops: 1
Stack additions: [V749]
Exit stack: [V12, 0x20f, V749]

================================

Block 0x959
[0x959:0x95b]
---
Predecessors: [0x922]
Successors: [0x20f]
---
0x959 JUMPDEST
0x95a SWAP1
0x95b JUMP
---
0x959: JUMPDEST 
0x95b: JUMP 0x20f
---
Entry stack: [V12, 0x20f, V749]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V749]

================================

Block 0x95c
[0x95c:0x961]
---
Predecessors: [0x4cc]
Successors: [0x2d0]
---
0x95c JUMPDEST
0x95d PUSH1 0x4
0x95f SLOAD
0x960 DUP2
0x961 JUMP
---
0x95c: JUMPDEST 
0x95d: V756 = 0x4
0x95f: V757 = S[0x4]
0x961: JUMP 0x2d0
---
Entry stack: [V12, 0x2d0]
Stack pops: 1
Stack additions: [S0, V757]
Exit stack: [V12, 0x2d0, V757]

================================

Block 0x962
[0x962:0x96e]
---
Predecessors: [0x4f1]
Successors: [0x96f, 0x977]
---
0x962 JUMPDEST
0x963 PUSH1 0x0
0x965 DUP1
0x966 DUP1
0x967 DUP1
0x968 DUP5
0x969 ISZERO
0x96a ISZERO
0x96b PUSH2 0x977
0x96e JUMPI
---
0x962: JUMPDEST 
0x963: V758 = 0x0
0x969: V759 = ISZERO V441
0x96a: V760 = ISZERO V759
0x96b: V761 = 0x977
0x96e: JUMPI 0x977 V760
---
Entry stack: [V12, 0x2a9, V439, V441]
Stack pops: 1
Stack additions: [S0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x2a9, V439, V441, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x96f
[0x96f:0x976]
---
Predecessors: [0x962]
Successors: [0xa2a]
---
0x96f PUSH1 0x0
0x971 SWAP4
0x972 POP
0x973 PUSH2 0xa2a
0x976 JUMP
---
0x96f: V762 = 0x0
0x973: V763 = 0xa2a
0x976: JUMP 0xa2a
---
Entry stack: [V12, 0x2a9, V439, V441, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x2a9, V439, V441, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x977
[0x977:0x9ae]
---
Predecessors: [0x962]
Successors: [0x9af, 0x9b2]
---
0x977 JUMPDEST
0x978 POP
0x979 POP
0x97a POP
0x97b PUSH1 0x1
0x97d PUSH1 0xa0
0x97f PUSH1 0x2
0x981 EXP
0x982 SUB
0x983 CALLER
0x984 DUP2
0x985 AND
0x986 PUSH1 0x0
0x988 SWAP1
0x989 DUP2
0x98a MSTORE
0x98b PUSH1 0x1
0x98d PUSH1 0x20
0x98f MSTORE
0x990 PUSH1 0x40
0x992 DUP1
0x993 DUP3
0x994 SHA3
0x995 SLOAD
0x996 SWAP3
0x997 DUP7
0x998 AND
0x999 DUP3
0x99a MSTORE
0x99b SWAP1
0x99c SHA3
0x99d SLOAD
0x99e DUP4
0x99f DUP3
0x9a0 LT
0x9a1 DUP1
0x9a2 ISZERO
0x9a3 SWAP2
0x9a4 DUP1
0x9a5 DUP7
0x9a6 ADD
0x9a7 LT
0x9a8 SWAP1
0x9a9 DUP3
0x9aa SWAP1
0x9ab PUSH2 0x9b2
0x9ae JUMPI
---
0x977: JUMPDEST 
0x97b: V764 = 0x1
0x97d: V765 = 0xa0
0x97f: V766 = 0x2
0x981: V767 = EXP 0x2 0xa0
0x982: V768 = SUB 0x10000000000000000000000000000000000000000 0x1
0x983: V769 = CALLER
0x985: V770 = AND 0xffffffffffffffffffffffffffffffffffffffff V769
0x986: V771 = 0x0
0x98a: M[0x0] = V770
0x98b: V772 = 0x1
0x98d: V773 = 0x20
0x98f: M[0x20] = 0x1
0x990: V774 = 0x40
0x994: V775 = SHA3 0x0 0x40
0x995: V776 = S[V775]
0x998: V777 = AND V439 0xffffffffffffffffffffffffffffffffffffffff
0x99a: M[0x0] = V777
0x99c: V778 = SHA3 0x0 0x40
0x99d: V779 = S[V778]
0x9a0: V780 = LT V776 V441
0x9a2: V781 = ISZERO V780
0x9a6: V782 = ADD V441 V779
0x9a7: V783 = LT V782 V779
0x9ab: V784 = 0x9b2
0x9ae: JUMPI 0x9b2 V780
---
Entry stack: [V12, 0x2a9, V439, V441, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V776, V781, V783, V781]
Exit stack: [V12, 0x2a9, V439, V441, 0x0, V776, V781, V783, V781]

================================

Block 0x9af
[0x9af:0x9b1]
---
Predecessors: [0x977]
Successors: [0x9b2]
---
0x9af POP
0x9b0 DUP1
0x9b1 ISZERO
---
0x9b1: V785 = ISZERO V783
---
Entry stack: [V12, 0x2a9, V439, V441, 0x0, V776, V781, V783, V781]
Stack pops: 2
Stack additions: [S1, V785]
Exit stack: [V12, 0x2a9, V439, V441, 0x0, V776, V781, V783, V785]

================================

Block 0x9b2
[0x9b2:0x9b7]
---
Predecessors: [0x977, 0x9af]
Successors: [0x9b8, 0xa25]
---
0x9b2 JUMPDEST
0x9b3 ISZERO
0x9b4 PUSH2 0xa25
0x9b7 JUMPI
---
0x9b2: JUMPDEST 
0x9b3: V786 = ISZERO S0
0x9b4: V787 = 0xa25
0x9b7: JUMPI 0xa25 V786
---
Entry stack: [V12, 0x2a9, V439, V441, 0x0, V776, V781, V783, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x2a9, V439, V441, 0x0, V776, V781, V783]

================================

Block 0x9b8
[0x9b8:0xa24]
---
Predecessors: [0x9b2]
Successors: [0xa2a]
---
0x9b8 PUSH1 0x1
0x9ba PUSH1 0xa0
0x9bc PUSH1 0x2
0x9be EXP
0x9bf SUB
0x9c0 CALLER
0x9c1 DUP2
0x9c2 AND
0x9c3 PUSH1 0x0
0x9c5 DUP2
0x9c6 DUP2
0x9c7 MSTORE
0x9c8 PUSH1 0x1
0x9ca PUSH1 0x20
0x9cc MSTORE
0x9cd PUSH1 0x40
0x9cf DUP1
0x9d0 DUP3
0x9d1 SHA3
0x9d2 DUP1
0x9d3 SLOAD
0x9d4 DUP11
0x9d5 SWAP1
0x9d6 SUB
0x9d7 SWAP1
0x9d8 SSTORE
0x9d9 SWAP3
0x9da DUP10
0x9db AND
0x9dc DUP1
0x9dd DUP3
0x9de MSTORE
0x9df SWAP1
0x9e0 DUP4
0x9e1 SWAP1
0x9e2 SHA3
0x9e3 DUP1
0x9e4 SLOAD
0x9e5 DUP10
0x9e6 ADD
0x9e7 SWAP1
0x9e8 SSTORE
0x9e9 SWAP2
0x9ea PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa0b SWAP1
0xa0c DUP9
0xa0d SWAP1
0xa0e MLOAD
0xa0f SWAP1
0xa10 DUP2
0xa11 MSTORE
0xa12 PUSH1 0x20
0xa14 ADD
0xa15 PUSH1 0x40
0xa17 MLOAD
0xa18 DUP1
0xa19 SWAP2
0xa1a SUB
0xa1b SWAP1
0xa1c LOG3
0xa1d PUSH1 0x1
0xa1f SWAP4
0xa20 POP
0xa21 PUSH2 0xa2a
0xa24 JUMP
---
0x9b8: V788 = 0x1
0x9ba: V789 = 0xa0
0x9bc: V790 = 0x2
0x9be: V791 = EXP 0x2 0xa0
0x9bf: V792 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c0: V793 = CALLER
0x9c2: V794 = AND 0xffffffffffffffffffffffffffffffffffffffff V793
0x9c3: V795 = 0x0
0x9c7: M[0x0] = V794
0x9c8: V796 = 0x1
0x9ca: V797 = 0x20
0x9cc: M[0x20] = 0x1
0x9cd: V798 = 0x40
0x9d1: V799 = SHA3 0x0 0x40
0x9d3: V800 = S[V799]
0x9d6: V801 = SUB V800 V441
0x9d8: S[V799] = V801
0x9db: V802 = AND V439 0xffffffffffffffffffffffffffffffffffffffff
0x9de: M[0x0] = V802
0x9e2: V803 = SHA3 0x0 0x40
0x9e4: V804 = S[V803]
0x9e6: V805 = ADD V441 V804
0x9e8: S[V803] = V805
0x9ea: V806 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa0e: V807 = M[0x40]
0xa11: M[V807] = V441
0xa12: V808 = 0x20
0xa14: V809 = ADD 0x20 V807
0xa15: V810 = 0x40
0xa17: V811 = M[0x40]
0xa1a: V812 = SUB V809 V811
0xa1c: LOG V811 V812 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V794 V802
0xa1d: V813 = 0x1
0xa21: V814 = 0xa2a
0xa24: JUMP 0xa2a
---
Entry stack: [V12, 0x2a9, V439, V441, 0x0, V776, V781, V783]
Stack pops: 6
Stack additions: [S5, S4, 0x1, S2, S1, S0]
Exit stack: [V12, 0x2a9, V439, V441, 0x1, V776, V781, V783]

================================

Block 0xa25
[0xa25:0xa29]
---
Predecessors: [0x9b2]
Successors: [0xa2a]
---
0xa25 JUMPDEST
0xa26 PUSH1 0x0
0xa28 SWAP4
0xa29 POP
---
0xa25: JUMPDEST 
0xa26: V815 = 0x0
---
Entry stack: [V12, 0x2a9, V439, V441, 0x0, V776, V781, V783]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x2a9, V439, V441, 0x0, V776, V781, V783]

================================

Block 0xa2a
[0xa2a:0xa2a]
---
Predecessors: [0x96f, 0x9b8, 0xa25]
Successors: [0xa2b]
---
0xa2a JUMPDEST
---
0xa2a: JUMPDEST 
---
Entry stack: [V12, 0x2a9, V439, V441, {0x0, 0x1}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a9, V439, V441, {0x0, 0x1}, S2, S1, S0]

================================

Block 0xa2b
[0xa2b:0xa33]
---
Predecessors: [0xa2a]
Successors: [0x2a9]
---
0xa2b JUMPDEST
0xa2c POP
0xa2d POP
0xa2e POP
0xa2f SWAP3
0xa30 SWAP2
0xa31 POP
0xa32 POP
0xa33 JUMP
---
0xa2b: JUMPDEST 
0xa33: JUMP 0x2a9
---
Entry stack: [V12, 0x2a9, V439, V441, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0xa34
[0xa34:0xa59]
---
Predecessors: [0x527]
Successors: [0xa5a]
---
0xa34 JUMPDEST
0xa35 PUSH1 0x3
0xa37 SLOAD
0xa38 PUSH1 0x5
0xa3a SLOAD
0xa3b PUSH1 0x6
0xa3d SLOAD
0xa3e PUSH1 0x0
0xa40 SLOAD
0xa41 PUSH12 0x19d971e4fe8401e74000000
0xa4e SWAP2
0xa4f SWAP1
0xa50 PUSH1 0xa0
0xa52 PUSH1 0x2
0xa54 EXP
0xa55 SWAP1
0xa56 DIV
0xa57 PUSH1 0xff
0xa59 AND
---
0xa34: JUMPDEST 
0xa35: V816 = 0x3
0xa37: V817 = S[0x3]
0xa38: V818 = 0x5
0xa3a: V819 = S[0x5]
0xa3b: V820 = 0x6
0xa3d: V821 = S[0x6]
0xa3e: V822 = 0x0
0xa40: V823 = S[0x0]
0xa41: V824 = 0x19d971e4fe8401e74000000
0xa50: V825 = 0xa0
0xa52: V826 = 0x2
0xa54: V827 = EXP 0x2 0xa0
0xa56: V828 = DIV V823 0x10000000000000000000000000000000000000000
0xa57: V829 = 0xff
0xa59: V830 = AND 0xff V828
---
Entry stack: [V12, 0x52f]
Stack pops: 0
Stack additions: [V817, V819, 0x19d971e4fe8401e74000000, V821, V830]
Exit stack: [V12, 0x52f, V817, V819, 0x19d971e4fe8401e74000000, V821, V830]

================================

Block 0xa5a
[0xa5a:0xa60]
---
Predecessors: [0xa34]
Successors: [0x52f]
---
0xa5a JUMPDEST
0xa5b SWAP1
0xa5c SWAP2
0xa5d SWAP3
0xa5e SWAP4
0xa5f SWAP5
0xa60 JUMP
---
0xa5a: JUMPDEST 
0xa60: JUMP 0x52f
---
Entry stack: [V12, 0x52f, V817, V819, 0x19d971e4fe8401e74000000, V821, V830]
Stack pops: 6
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, V817, V819, 0x19d971e4fe8401e74000000, V821, V830]

================================

Block 0xa61
[0xa61:0xa70]
---
Predecessors: [0x56b]
Successors: [0x2a9]
---
0xa61 JUMPDEST
0xa62 PUSH1 0x0
0xa64 SLOAD
0xa65 PUSH1 0xa0
0xa67 PUSH1 0x2
0xa69 EXP
0xa6a SWAP1
0xa6b DIV
0xa6c PUSH1 0xff
0xa6e AND
0xa6f DUP2
0xa70 JUMP
---
0xa61: JUMPDEST 
0xa62: V831 = 0x0
0xa64: V832 = S[0x0]
0xa65: V833 = 0xa0
0xa67: V834 = 0x2
0xa69: V835 = EXP 0x2 0xa0
0xa6b: V836 = DIV V832 0x10000000000000000000000000000000000000000
0xa6c: V837 = 0xff
0xa6e: V838 = AND 0xff V836
0xa70: JUMP 0x2a9
---
Entry stack: [V12, 0x2a9]
Stack pops: 1
Stack additions: [S0, V838]
Exit stack: [V12, 0x2a9, V838]

================================

Block 0xa71
[0xa71:0xa97]
---
Predecessors: [0x592]
Successors: [0xa98]
---
0xa71 JUMPDEST
0xa72 PUSH1 0x1
0xa74 PUSH1 0xa0
0xa76 PUSH1 0x2
0xa78 EXP
0xa79 SUB
0xa7a DUP1
0xa7b DUP4
0xa7c AND
0xa7d PUSH1 0x0
0xa7f SWAP1
0xa80 DUP2
0xa81 MSTORE
0xa82 PUSH1 0x2
0xa84 PUSH1 0x20
0xa86 SWAP1
0xa87 DUP2
0xa88 MSTORE
0xa89 PUSH1 0x40
0xa8b DUP1
0xa8c DUP4
0xa8d SHA3
0xa8e SWAP4
0xa8f DUP6
0xa90 AND
0xa91 DUP4
0xa92 MSTORE
0xa93 SWAP3
0xa94 SWAP1
0xa95 MSTORE
0xa96 SHA3
0xa97 SLOAD
---
0xa71: JUMPDEST 
0xa72: V839 = 0x1
0xa74: V840 = 0xa0
0xa76: V841 = 0x2
0xa78: V842 = EXP 0x2 0xa0
0xa79: V843 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa7c: V844 = AND V501 0xffffffffffffffffffffffffffffffffffffffff
0xa7d: V845 = 0x0
0xa81: M[0x0] = V844
0xa82: V846 = 0x2
0xa84: V847 = 0x20
0xa88: M[0x20] = 0x2
0xa89: V848 = 0x40
0xa8d: V849 = SHA3 0x0 0x40
0xa90: V850 = AND V504 0xffffffffffffffffffffffffffffffffffffffff
0xa92: M[0x0] = V850
0xa95: M[0x20] = V849
0xa96: V851 = SHA3 0x0 0x40
0xa97: V852 = S[V851]
---
Entry stack: [V12, 0x2d0, V501, V504]
Stack pops: 2
Stack additions: [S1, S0, V852]
Exit stack: [V12, 0x2d0, V501, V504, V852]

================================

Block 0xa98
[0xa98:0xa9d]
---
Predecessors: [0xa71]
Successors: [0x2d0]
---
0xa98 JUMPDEST
0xa99 SWAP3
0xa9a SWAP2
0xa9b POP
0xa9c POP
0xa9d JUMP
---
0xa98: JUMPDEST 
0xa9d: JUMP 0x2d0
---
Entry stack: [V12, 0x2d0, V501, V504, V852]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, V852]

================================

Block 0xa9e
[0xa9e:0xaba]
---
Predecessors: [0x5c9]
Successors: [0xabb, 0xabf]
---
0xa9e JUMPDEST
0xa9f PUSH1 0x0
0xaa1 DUP1
0xaa2 SLOAD
0xaa3 DUP2
0xaa4 SWAP1
0xaa5 DUP2
0xaa6 SWAP1
0xaa7 CALLER
0xaa8 PUSH1 0x1
0xaaa PUSH1 0xa0
0xaac PUSH1 0x2
0xaae EXP
0xaaf SUB
0xab0 SWAP1
0xab1 DUP2
0xab2 AND
0xab3 SWAP2
0xab4 AND
0xab5 EQ
0xab6 ISZERO
0xab7 PUSH2 0xabf
0xaba JUMPI
---
0xa9e: JUMPDEST 
0xa9f: V853 = 0x0
0xaa2: V854 = S[0x0]
0xaa7: V855 = CALLER
0xaa8: V856 = 0x1
0xaaa: V857 = 0xa0
0xaac: V858 = 0x2
0xaae: V859 = EXP 0x2 0xa0
0xaaf: V860 = SUB 0x10000000000000000000000000000000000000000 0x1
0xab2: V861 = AND 0xffffffffffffffffffffffffffffffffffffffff V855
0xab4: V862 = AND V854 0xffffffffffffffffffffffffffffffffffffffff
0xab5: V863 = EQ V862 V861
0xab6: V864 = ISZERO V863
0xab7: V865 = 0xabf
0xaba: JUMPI 0xabf V864
---
Entry stack: [V12, 0x2a9, V525]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x2a9, V525, 0x0, 0x0, 0x0]

================================

Block 0xabb
[0xabb:0xabe]
---
Predecessors: [0xa9e]
Successors: []
---
0xabb PUSH1 0x0
0xabd DUP1
0xabe REVERT
---
0xabb: V866 = 0x0
0xabe: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a9, V525, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a9, V525, 0x0, 0x0, 0x0]

================================

Block 0xabf
[0xabf:0xb14]
---
Predecessors: [0xa9e]
Successors: [0xb15, 0xb19]
---
0xabf JUMPDEST
0xac0 DUP4
0xac1 SWAP2
0xac2 POP
0xac3 DUP2
0xac4 PUSH1 0x1
0xac6 PUSH1 0xa0
0xac8 PUSH1 0x2
0xaca EXP
0xacb SUB
0xacc AND
0xacd PUSH4 0x70a08231
0xad2 ADDRESS
0xad3 PUSH1 0x0
0xad5 PUSH1 0x40
0xad7 MLOAD
0xad8 PUSH1 0x20
0xada ADD
0xadb MSTORE
0xadc PUSH1 0x40
0xade MLOAD
0xadf PUSH1 0xe0
0xae1 PUSH1 0x2
0xae3 EXP
0xae4 PUSH4 0xffffffff
0xae9 DUP5
0xaea AND
0xaeb MUL
0xaec DUP2
0xaed MSTORE
0xaee PUSH1 0x1
0xaf0 PUSH1 0xa0
0xaf2 PUSH1 0x2
0xaf4 EXP
0xaf5 SUB
0xaf6 SWAP1
0xaf7 SWAP2
0xaf8 AND
0xaf9 PUSH1 0x4
0xafb DUP3
0xafc ADD
0xafd MSTORE
0xafe PUSH1 0x24
0xb00 ADD
0xb01 PUSH1 0x20
0xb03 PUSH1 0x40
0xb05 MLOAD
0xb06 DUP1
0xb07 DUP4
0xb08 SUB
0xb09 DUP2
0xb0a PUSH1 0x0
0xb0c DUP8
0xb0d DUP1
0xb0e EXTCODESIZE
0xb0f ISZERO
0xb10 ISZERO
0xb11 PUSH2 0xb19
0xb14 JUMPI
---
0xabf: JUMPDEST 
0xac4: V867 = 0x1
0xac6: V868 = 0xa0
0xac8: V869 = 0x2
0xaca: V870 = EXP 0x2 0xa0
0xacb: V871 = SUB 0x10000000000000000000000000000000000000000 0x1
0xacc: V872 = AND 0xffffffffffffffffffffffffffffffffffffffff V525
0xacd: V873 = 0x70a08231
0xad2: V874 = ADDRESS
0xad3: V875 = 0x0
0xad5: V876 = 0x40
0xad7: V877 = M[0x40]
0xad8: V878 = 0x20
0xada: V879 = ADD 0x20 V877
0xadb: M[V879] = 0x0
0xadc: V880 = 0x40
0xade: V881 = M[0x40]
0xadf: V882 = 0xe0
0xae1: V883 = 0x2
0xae3: V884 = EXP 0x2 0xe0
0xae4: V885 = 0xffffffff
0xaea: V886 = AND 0x70a08231 0xffffffff
0xaeb: V887 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xaed: M[V881] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xaee: V888 = 0x1
0xaf0: V889 = 0xa0
0xaf2: V890 = 0x2
0xaf4: V891 = EXP 0x2 0xa0
0xaf5: V892 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaf8: V893 = AND V874 0xffffffffffffffffffffffffffffffffffffffff
0xaf9: V894 = 0x4
0xafc: V895 = ADD V881 0x4
0xafd: M[V895] = V893
0xafe: V896 = 0x24
0xb00: V897 = ADD 0x24 V881
0xb01: V898 = 0x20
0xb03: V899 = 0x40
0xb05: V900 = M[0x40]
0xb08: V901 = SUB V897 V900
0xb0a: V902 = 0x0
0xb0e: V903 = EXTCODESIZE V872
0xb0f: V904 = ISZERO V903
0xb10: V905 = ISZERO V904
0xb11: V906 = 0xb19
0xb14: JUMPI 0xb19 V905
---
Entry stack: [V12, 0x2a9, V525, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V872, 0x70a08231, V897, 0x20, V900, V901, V900, 0x0, V872]
Exit stack: [V12, 0x2a9, V525, 0x0, V525, 0x0, V872, 0x70a08231, V897, 0x20, V900, V901, V900, 0x0, V872]

================================

Block 0xb15
[0xb15:0xb18]
---
Predecessors: [0xabf]
Successors: []
---
0xb15 PUSH1 0x0
0xb17 DUP1
0xb18 REVERT
---
0xb15: V907 = 0x0
0xb18: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a9, V525, 0x0, V525, 0x0, V872, 0x70a08231, V897, 0x20, V900, V901, V900, 0x0, V872]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a9, V525, 0x0, V525, 0x0, V872, 0x70a08231, V897, 0x20, V900, V901, V900, 0x0, V872]

================================

Block 0xb19
[0xb19:0xb25]
---
Predecessors: [0xabf]
Successors: [0xb26, 0xb2a]
---
0xb19 JUMPDEST
0xb1a PUSH2 0x2c6
0xb1d GAS
0xb1e SUB
0xb1f CALL
0xb20 ISZERO
0xb21 ISZERO
0xb22 PUSH2 0xb2a
0xb25 JUMPI
---
0xb19: JUMPDEST 
0xb1a: V908 = 0x2c6
0xb1d: V909 = GAS
0xb1e: V910 = SUB V909 0x2c6
0xb1f: V911 = CALL V910 V872 0x0 V900 V901 V900 0x20
0xb20: V912 = ISZERO V911
0xb21: V913 = ISZERO V912
0xb22: V914 = 0xb2a
0xb25: JUMPI 0xb2a V913
---
Entry stack: [V12, 0x2a9, V525, 0x0, V525, 0x0, V872, 0x70a08231, V897, 0x20, V900, V901, V900, 0x0, V872]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x2a9, V525, 0x0, V525, 0x0, V872, 0x70a08231, V897]

================================

Block 0xb26
[0xb26:0xb29]
---
Predecessors: [0xb19]
Successors: []
---
0xb26 PUSH1 0x0
0xb28 DUP1
0xb29 REVERT
---
0xb26: V915 = 0x0
0xb29: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a9, V525, 0x0, V525, 0x0, V872, 0x70a08231, V897]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a9, V525, 0x0, V525, 0x0, V872, 0x70a08231, V897]

================================

Block 0xb2a
[0xb2a:0xb95]
---
Predecessors: [0xb19]
Successors: [0xb96, 0xb9a]
---
0xb2a JUMPDEST
0xb2b POP
0xb2c POP
0xb2d POP
0xb2e PUSH1 0x40
0xb30 MLOAD
0xb31 DUP1
0xb32 MLOAD
0xb33 PUSH1 0x0
0xb35 DUP1
0xb36 SLOAD
0xb37 SWAP2
0xb38 SWAP4
0xb39 POP
0xb3a PUSH1 0x1
0xb3c PUSH1 0xa0
0xb3e PUSH1 0x2
0xb40 EXP
0xb41 SUB
0xb42 DUP1
0xb43 DUP7
0xb44 AND
0xb45 SWAP4
0xb46 POP
0xb47 PUSH4 0xa9059cbb
0xb4c SWAP3
0xb4d AND
0xb4e SWAP1
0xb4f DUP5
0xb50 SWAP1
0xb51 PUSH1 0x40
0xb53 MLOAD
0xb54 PUSH1 0x20
0xb56 ADD
0xb57 MSTORE
0xb58 PUSH1 0x40
0xb5a MLOAD
0xb5b PUSH1 0xe0
0xb5d PUSH1 0x2
0xb5f EXP
0xb60 PUSH4 0xffffffff
0xb65 DUP6
0xb66 AND
0xb67 MUL
0xb68 DUP2
0xb69 MSTORE
0xb6a PUSH1 0x1
0xb6c PUSH1 0xa0
0xb6e PUSH1 0x2
0xb70 EXP
0xb71 SUB
0xb72 SWAP1
0xb73 SWAP3
0xb74 AND
0xb75 PUSH1 0x4
0xb77 DUP4
0xb78 ADD
0xb79 MSTORE
0xb7a PUSH1 0x24
0xb7c DUP3
0xb7d ADD
0xb7e MSTORE
0xb7f PUSH1 0x44
0xb81 ADD
0xb82 PUSH1 0x20
0xb84 PUSH1 0x40
0xb86 MLOAD
0xb87 DUP1
0xb88 DUP4
0xb89 SUB
0xb8a DUP2
0xb8b PUSH1 0x0
0xb8d DUP8
0xb8e DUP1
0xb8f EXTCODESIZE
0xb90 ISZERO
0xb91 ISZERO
0xb92 PUSH2 0xb9a
0xb95 JUMPI
---
0xb2a: JUMPDEST 
0xb2e: V916 = 0x40
0xb30: V917 = M[0x40]
0xb32: V918 = M[V917]
0xb33: V919 = 0x0
0xb36: V920 = S[0x0]
0xb3a: V921 = 0x1
0xb3c: V922 = 0xa0
0xb3e: V923 = 0x2
0xb40: V924 = EXP 0x2 0xa0
0xb41: V925 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb44: V926 = AND V525 0xffffffffffffffffffffffffffffffffffffffff
0xb47: V927 = 0xa9059cbb
0xb4d: V928 = AND V920 0xffffffffffffffffffffffffffffffffffffffff
0xb51: V929 = 0x40
0xb53: V930 = M[0x40]
0xb54: V931 = 0x20
0xb56: V932 = ADD 0x20 V930
0xb57: M[V932] = 0x0
0xb58: V933 = 0x40
0xb5a: V934 = M[0x40]
0xb5b: V935 = 0xe0
0xb5d: V936 = 0x2
0xb5f: V937 = EXP 0x2 0xe0
0xb60: V938 = 0xffffffff
0xb66: V939 = AND 0xa9059cbb 0xffffffff
0xb67: V940 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xb69: M[V934] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xb6a: V941 = 0x1
0xb6c: V942 = 0xa0
0xb6e: V943 = 0x2
0xb70: V944 = EXP 0x2 0xa0
0xb71: V945 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb74: V946 = AND V928 0xffffffffffffffffffffffffffffffffffffffff
0xb75: V947 = 0x4
0xb78: V948 = ADD V934 0x4
0xb79: M[V948] = V946
0xb7a: V949 = 0x24
0xb7d: V950 = ADD V934 0x24
0xb7e: M[V950] = V918
0xb7f: V951 = 0x44
0xb81: V952 = ADD 0x44 V934
0xb82: V953 = 0x20
0xb84: V954 = 0x40
0xb86: V955 = M[0x40]
0xb89: V956 = SUB V952 V955
0xb8b: V957 = 0x0
0xb8f: V958 = EXTCODESIZE V926
0xb90: V959 = ISZERO V958
0xb91: V960 = ISZERO V959
0xb92: V961 = 0xb9a
0xb95: JUMPI 0xb9a V960
---
Entry stack: [V12, 0x2a9, V525, 0x0, V525, 0x0, V872, 0x70a08231, V897]
Stack pops: 5
Stack additions: [S4, V918, V926, 0xa9059cbb, V952, 0x20, V955, V956, V955, 0x0, V926]
Exit stack: [V12, 0x2a9, V525, 0x0, V525, V918, V926, 0xa9059cbb, V952, 0x20, V955, V956, V955, 0x0, V926]

================================

Block 0xb96
[0xb96:0xb99]
---
Predecessors: [0xb2a]
Successors: []
---
0xb96 PUSH1 0x0
0xb98 DUP1
0xb99 REVERT
---
0xb96: V962 = 0x0
0xb99: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a9, V525, 0x0, V525, V918, V926, 0xa9059cbb, V952, 0x20, V955, V956, V955, 0x0, V926]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a9, V525, 0x0, V525, V918, V926, 0xa9059cbb, V952, 0x20, V955, V956, V955, 0x0, V926]

================================

Block 0xb9a
[0xb9a:0xba6]
---
Predecessors: [0xb2a]
Successors: [0xba7, 0xbab]
---
0xb9a JUMPDEST
0xb9b PUSH2 0x2c6
0xb9e GAS
0xb9f SUB
0xba0 CALL
0xba1 ISZERO
0xba2 ISZERO
0xba3 PUSH2 0xbab
0xba6 JUMPI
---
0xb9a: JUMPDEST 
0xb9b: V963 = 0x2c6
0xb9e: V964 = GAS
0xb9f: V965 = SUB V964 0x2c6
0xba0: V966 = CALL V965 V926 0x0 V955 V956 V955 0x20
0xba1: V967 = ISZERO V966
0xba2: V968 = ISZERO V967
0xba3: V969 = 0xbab
0xba6: JUMPI 0xbab V968
---
Entry stack: [V12, 0x2a9, V525, 0x0, V525, V918, V926, 0xa9059cbb, V952, 0x20, V955, V956, V955, 0x0, V926]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x2a9, V525, 0x0, V525, V918, V926, 0xa9059cbb, V952]

================================

Block 0xba7
[0xba7:0xbaa]
---
Predecessors: [0xb9a]
Successors: []
---
0xba7 PUSH1 0x0
0xba9 DUP1
0xbaa REVERT
---
0xba7: V970 = 0x0
0xbaa: REVERT 0x0 0x0
---
Entry stack: [V12, 0x2a9, V525, 0x0, V525, V918, V926, 0xa9059cbb, V952]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x2a9, V525, 0x0, V525, V918, V926, 0xa9059cbb, V952]

================================

Block 0xbab
[0xbab:0xbb6]
---
Predecessors: [0xb9a]
Successors: [0xbb7]
---
0xbab JUMPDEST
0xbac POP
0xbad POP
0xbae POP
0xbaf PUSH1 0x40
0xbb1 MLOAD
0xbb2 DUP1
0xbb3 MLOAD
0xbb4 SWAP4
0xbb5 POP
0xbb6 POP
---
0xbab: JUMPDEST 
0xbaf: V971 = 0x40
0xbb1: V972 = M[0x40]
0xbb3: V973 = M[V972]
---
Entry stack: [V12, 0x2a9, V525, 0x0, V525, V918, V926, 0xa9059cbb, V952]
Stack pops: 6
Stack additions: [V973, S4, S3]
Exit stack: [V12, 0x2a9, V525, V973, V525, V918]

================================

Block 0xbb7
[0xbb7:0xbbd]
---
Predecessors: [0xbab]
Successors: [0x2a9]
---
0xbb7 JUMPDEST
0xbb8 POP
0xbb9 POP
0xbba SWAP2
0xbbb SWAP1
0xbbc POP
0xbbd JUMP
---
0xbb7: JUMPDEST 
0xbbd: JUMP 0x2a9
---
Entry stack: [V12, 0x2a9, V525, V973, V525, V918]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V12, V973]

================================

Block 0xbbe
[0xbbe:0xbcf]
---
Predecessors: [0x63b, 0x91a]
Successors: [0x643, 0x922]
---
0xbbe JUMPDEST
0xbbf PUSH1 0x20
0xbc1 PUSH1 0x40
0xbc3 MLOAD
0xbc4 SWAP1
0xbc5 DUP2
0xbc6 ADD
0xbc7 PUSH1 0x40
0xbc9 MSTORE
0xbca PUSH1 0x0
0xbcc DUP2
0xbcd MSTORE
0xbce SWAP1
0xbcf JUMP
---
0xbbe: JUMPDEST 
0xbbf: V974 = 0x20
0xbc1: V975 = 0x40
0xbc3: V976 = M[0x40]
0xbc6: V977 = ADD V976 0x20
0xbc7: V978 = 0x40
0xbc9: M[0x40] = V977
0xbca: V979 = 0x0
0xbcd: M[V976] = 0x0
0xbcf: JUMP {0x643, 0x922}
---
Entry stack: [V12, 0x20f, {0x643, 0x922}]
Stack pops: 1
Stack additions: [V976]
Exit stack: [V12, 0x20f, V976]

================================

Block 0xbd0
[0xbd0:0xbfb]
---
Predecessors: []
Successors: []
---
0xbd0 STOP
0xbd1 LOG1
0xbd2 PUSH6 0x627a7a723058
0xbd9 SHA3
0xbda CALL
0xbdb NUMBER
0xbdc PUSH29 0xd820ae066b3058d71592bf77a5bfc3bc45d7723056dc50f0ae027c491a
0xbfa STOP
0xbfb MISSING 0x29
---
0xbd0: STOP 
0xbd1: LOG S0 S1 S2
0xbd2: V980 = 0x627a7a723058
0xbd9: V981 = SHA3 0x627a7a723058 S3
0xbda: V982 = CALL V981 S4 S5 S6 S7 S8 S9
0xbdb: V983 = NUMBER
0xbdc: V984 = 0xd820ae066b3058d71592bf77a5bfc3bc45d7723056dc50f0ae027c491a
0xbfa: STOP 
0xbfb: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0xd820ae066b3058d71592bf77a5bfc3bc45d7723056dc50f0ae027c491a, V983, V982]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x1fc
Exit block: 0x279
Body: 0x1fc, 0x203, 0x207, 0x20f, 0x233, 0x23c, 0x244, 0x24c, 0x260, 0x279, 0x63b, 0x643, 0x67a

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x287
Exit block: 0x2a9
Body: 0x287, 0x28e, 0x292, 0x2a9, 0x67d, 0x689, 0x6b2, 0x6b8, 0x6bf, 0x723

Function 2:
Public function signature: 0xdcf4b8f
Entry block: 0x2bd
Exit block: 0x2d0
Body: 0x2bd, 0x2c4, 0x2c8, 0x2d0, 0x729

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x2e2
Exit block: 0x2d0
Body: 0x2d0, 0x2e2, 0x2e9, 0x2ed, 0x72f

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x307
Exit block: 0x2a9
Body: 0x2a9, 0x307, 0x30e, 0x312, 0x735, 0x744, 0x74c, 0x7a9, 0x7ab, 0x7b2, 0x7b5, 0x7bb, 0x847, 0x84c, 0x84d

Function 5:
Public function signature: 0x313ce567
Entry block: 0x343
Exit block: 0x356
Body: 0x343, 0x34a, 0x34e, 0x356, 0x859, 0x85c

Function 6:
Public function signature: 0x4172d080
Entry block: 0x36c
Exit block: 0x2d0
Body: 0x2d0, 0x36c, 0x373, 0x377, 0x85f

Function 7:
Public function signature: 0x580cf318
Entry block: 0x391
Exit block: 0x2d0
Body: 0x2d0, 0x391, 0x398, 0x39c, 0x865

Function 8:
Public function signature: 0x64acdb77
Entry block: 0x3b6
Exit block: 0x1fa
Body: 0x1fa, 0x3b6, 0x3bd, 0x3c1, 0x86b, 0x883, 0x887, 0x8a6

Function 9:
Public function signature: 0x6f7920fd
Entry block: 0x3cb
Exit block: 0x2d0
Body: 0x2d0, 0x3cb, 0x3d2, 0x3d6, 0x8a8

Function 10:
Public function signature: 0x70a08231
Entry block: 0x3f0
Exit block: 0x2d0
Body: 0x2d0, 0x3f0, 0x3f7, 0x3fb, 0x8b8, 0x8d2

Function 11:
Public function signature: 0x8f580996
Entry block: 0x421
Exit block: 0x1fa
Body: 0x1fa, 0x421, 0x428, 0x42c, 0x8d7, 0x8ef, 0x8f3, 0x918

Function 12:
Public function signature: 0x95d89b41
Entry block: 0x436
Exit block: 0x279
Body: 0x20f, 0x233, 0x23c, 0x244, 0x24c, 0x260, 0x279, 0x436, 0x43d, 0x441, 0x91a, 0x922, 0x959

Function 13:
Public function signature: 0x98b01fe3
Entry block: 0x4c1
Exit block: 0x2d0
Body: 0x2d0, 0x4c1, 0x4c8, 0x4cc, 0x95c

Function 14:
Public function signature: 0xa9059cbb
Entry block: 0x4e6
Exit block: 0x2a9
Body: 0x2a9, 0x4e6, 0x4ed, 0x4f1, 0x962, 0x96f, 0x977, 0x9af, 0x9b2, 0x9b8, 0xa25, 0xa2a, 0xa2b

Function 15:
Public function signature: 0xc59d4847
Entry block: 0x51c
Exit block: 0x52f
Body: 0x51c, 0x523, 0x527, 0x52f, 0xa34, 0xa5a

Function 16:
Public function signature: 0xda040c0f
Entry block: 0x560
Exit block: 0x2a9
Body: 0x2a9, 0x560, 0x567, 0x56b, 0xa61

Function 17:
Public function signature: 0xdd62ed3e
Entry block: 0x587
Exit block: 0x2d0
Body: 0x2d0, 0x587, 0x58e, 0x592, 0xa71, 0xa98

Function 18:
Public function signature: 0xe58fc54c
Entry block: 0x5be
Exit block: 0x2a9
Body: 0x2a9, 0x5be, 0x5c5, 0x5c9, 0xa9e, 0xabb, 0xabf, 0xb15, 0xb19, 0xb26, 0xb2a, 0xb96, 0xb9a, 0xba7, 0xbab, 0xbb7

Function 19:
Public fallback function
Entry block: 0xeb
Exit block: 0x62c
Body: 0xeb, 0xef, 0x103, 0x107, 0x10f, 0x113, 0x143, 0x147, 0x166, 0x16a, 0x176, 0x1f3, 0x1f7, 0x1fa, 0x5f1, 0x5fe, 0x609, 0x60a, 0x60d, 0x614, 0x615, 0x619, 0x620, 0x62c, 0x62d, 0x634

