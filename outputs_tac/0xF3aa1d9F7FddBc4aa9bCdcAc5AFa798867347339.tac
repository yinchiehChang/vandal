Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x7f]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x7f
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x7f
0xc: JUMPI 0x7f V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x26]
---
Predecessors: [0x0]
Successors: [0x27, 0x84]
---
0xd PUSH4 0xffffffff
0x12 PUSH1 0xe0
0x14 PUSH1 0x2
0x16 EXP
0x17 PUSH1 0x0
0x19 CALLDATALOAD
0x1a DIV
0x1b AND
0x1c PUSH4 0x6fdde03
0x21 DUP2
0x22 EQ
0x23 PUSH2 0x84
0x26 JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0xe0
0x14: V8 = 0x2
0x16: V9 = EXP 0x2 0xe0
0x17: V10 = 0x0
0x19: V11 = CALLDATALOAD 0x0
0x1a: V12 = DIV V11 0x100000000000000000000000000000000000000000000000000000000
0x1b: V13 = AND V12 0xffffffff
0x1c: V14 = 0x6fdde03
0x22: V15 = EQ V13 0x6fdde03
0x23: V16 = 0x84
0x26: JUMPI 0x84 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x27
[0x27:0x31]
---
Predecessors: [0xd]
Successors: [0x32, 0x10e]
---
0x27 DUP1
0x28 PUSH4 0x18160ddd
0x2d EQ
0x2e PUSH2 0x10e
0x31 JUMPI
---
0x28: V17 = 0x18160ddd
0x2d: V18 = EQ 0x18160ddd V13
0x2e: V19 = 0x10e
0x31: JUMPI 0x10e V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x32
[0x32:0x3c]
---
Predecessors: [0x27]
Successors: [0x3d, 0x133]
---
0x32 DUP1
0x33 PUSH4 0x313ce567
0x38 EQ
0x39 PUSH2 0x133
0x3c JUMPI
---
0x33: V20 = 0x313ce567
0x38: V21 = EQ 0x313ce567 V13
0x39: V22 = 0x133
0x3c: JUMPI 0x133 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x3d
[0x3d:0x47]
---
Predecessors: [0x32]
Successors: [0x48, 0x15c]
---
0x3d DUP1
0x3e PUSH4 0x33a581d2
0x43 EQ
0x44 PUSH2 0x15c
0x47 JUMPI
---
0x3e: V23 = 0x33a581d2
0x43: V24 = EQ 0x33a581d2 V13
0x44: V25 = 0x15c
0x47: JUMPI 0x15c V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x48
[0x48:0x52]
---
Predecessors: [0x3d]
Successors: [0x53, 0x16f]
---
0x48 DUP1
0x49 PUSH4 0x70a08231
0x4e EQ
0x4f PUSH2 0x16f
0x52 JUMPI
---
0x49: V26 = 0x70a08231
0x4e: V27 = EQ 0x70a08231 V13
0x4f: V28 = 0x16f
0x52: JUMPI 0x16f V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x53
[0x53:0x5d]
---
Predecessors: [0x48]
Successors: [0x5e, 0x18e]
---
0x53 DUP1
0x54 PUSH4 0x95d89b41
0x59 EQ
0x5a PUSH2 0x18e
0x5d JUMPI
---
0x54: V29 = 0x95d89b41
0x59: V30 = EQ 0x95d89b41 V13
0x5a: V31 = 0x18e
0x5d: JUMPI 0x18e V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x5e
[0x5e:0x68]
---
Predecessors: [0x53]
Successors: [0x69, 0x1a1]
---
0x5e DUP1
0x5f PUSH4 0xa9059cbb
0x64 EQ
0x65 PUSH2 0x1a1
0x68 JUMPI
---
0x5f: V32 = 0xa9059cbb
0x64: V33 = EQ 0xa9059cbb V13
0x65: V34 = 0x1a1
0x68: JUMPI 0x1a1 V33
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x69
[0x69:0x73]
---
Predecessors: [0x5e]
Successors: [0x74, 0x1d7]
---
0x69 DUP1
0x6a PUSH4 0xbe45fd62
0x6f EQ
0x70 PUSH2 0x1d7
0x73 JUMPI
---
0x6a: V35 = 0xbe45fd62
0x6f: V36 = EQ 0xbe45fd62 V13
0x70: V37 = 0x1d7
0x73: JUMPI 0x1d7 V36
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x74
[0x74:0x7e]
---
Predecessors: [0x69]
Successors: [0x7f, 0x23c]
---
0x74 DUP1
0x75 PUSH4 0xf6368f8a
0x7a EQ
0x7b PUSH2 0x23c
0x7e JUMPI
---
0x75: V38 = 0xf6368f8a
0x7a: V39 = EQ 0xf6368f8a V13
0x7b: V40 = 0x23c
0x7e: JUMPI 0x23c V39
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7f
[0x7f:0x83]
---
Predecessors: [0x0, 0x74]
Successors: []
---
0x7f JUMPDEST
0x80 PUSH1 0x0
0x82 DUP1
0x83 REVERT
---
0x7f: JUMPDEST 
0x80: V41 = 0x0
0x83: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x84
[0x84:0x8a]
---
Predecessors: [0xd]
Successors: [0x8b, 0x8f]
---
0x84 JUMPDEST
0x85 CALLVALUE
0x86 ISZERO
0x87 PUSH2 0x8f
0x8a JUMPI
---
0x84: JUMPDEST 
0x85: V42 = CALLVALUE
0x86: V43 = ISZERO V42
0x87: V44 = 0x8f
0x8a: JUMPI 0x8f V43
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x8b
[0x8b:0x8e]
---
Predecessors: [0x84]
Successors: []
---
0x8b PUSH1 0x0
0x8d DUP1
0x8e REVERT
---
0x8b: V45 = 0x0
0x8e: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x8f
[0x8f:0x96]
---
Predecessors: [0x84]
Successors: [0x2e3]
---
0x8f JUMPDEST
0x90 PUSH2 0x97
0x93 PUSH2 0x2e3
0x96 JUMP
---
0x8f: JUMPDEST 
0x90: V46 = 0x97
0x93: V47 = 0x2e3
0x96: JUMP 0x2e3
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x97]
Exit stack: [V13, 0x97]

================================

Block 0x97
[0x97:0xba]
---
Predecessors: [0x381]
Successors: [0xbb]
---
0x97 JUMPDEST
0x98 PUSH1 0x40
0x9a MLOAD
0x9b PUSH1 0x20
0x9d DUP1
0x9e DUP3
0x9f MSTORE
0xa0 DUP2
0xa1 SWAP1
0xa2 DUP2
0xa3 ADD
0xa4 DUP4
0xa5 DUP2
0xa6 DUP2
0xa7 MLOAD
0xa8 DUP2
0xa9 MSTORE
0xaa PUSH1 0x20
0xac ADD
0xad SWAP2
0xae POP
0xaf DUP1
0xb0 MLOAD
0xb1 SWAP1
0xb2 PUSH1 0x20
0xb4 ADD
0xb5 SWAP1
0xb6 DUP1
0xb7 DUP4
0xb8 DUP4
0xb9 PUSH1 0x0
---
0x97: JUMPDEST 
0x98: V48 = 0x40
0x9a: V49 = M[0x40]
0x9b: V50 = 0x20
0x9f: M[V49] = 0x20
0xa3: V51 = ADD V49 0x20
0xa7: V52 = M[S0]
0xa9: M[V51] = V52
0xaa: V53 = 0x20
0xac: V54 = ADD 0x20 V51
0xb0: V55 = M[S0]
0xb2: V56 = 0x20
0xb4: V57 = ADD 0x20 S0
0xb9: V58 = 0x0
---
Entry stack: [V13, 0x1c3, V154, S1, S0]
Stack pops: 1
Stack additions: [S0, V49, V49, V54, V57, V55, V55, V54, V57, 0x0]
Exit stack: [V13, 0x1c3, V154, S1, S0, V49, V49, V54, V57, V55, V55, V54, V57, 0x0]

================================

Block 0xbb
[0xbb:0xc3]
---
Predecessors: [0x97, 0xc4]
Successors: [0xc4, 0xd3]
---
0xbb JUMPDEST
0xbc DUP4
0xbd DUP2
0xbe LT
0xbf ISZERO
0xc0 PUSH2 0xd3
0xc3 JUMPI
---
0xbb: JUMPDEST 
0xbe: V59 = LT S0 V55
0xbf: V60 = ISZERO V59
0xc0: V61 = 0xd3
0xc3: JUMPI 0xd3 V60
---
Entry stack: [V13, 0x1c3, V154, S10, S9, V49, V49, V54, V57, V55, V55, V54, V57, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, 0x1c3, V154, S10, S9, V49, V49, V54, V57, V55, V55, V54, V57, S0]

================================

Block 0xc4
[0xc4:0xd2]
---
Predecessors: [0xbb]
Successors: [0xbb]
---
0xc4 DUP1
0xc5 DUP3
0xc6 ADD
0xc7 MLOAD
0xc8 DUP4
0xc9 DUP3
0xca ADD
0xcb MSTORE
0xcc PUSH1 0x20
0xce ADD
0xcf PUSH2 0xbb
0xd2 JUMP
---
0xc6: V62 = ADD V57 S0
0xc7: V63 = M[V62]
0xca: V64 = ADD S0 V54
0xcb: M[V64] = V63
0xcc: V65 = 0x20
0xce: V66 = ADD 0x20 S0
0xcf: V67 = 0xbb
0xd2: JUMP 0xbb
---
Entry stack: [V13, 0x1c3, V154, S10, S9, V49, V49, V54, V57, V55, V55, V54, V57, S0]
Stack pops: 3
Stack additions: [S2, S1, V66]
Exit stack: [V13, 0x1c3, V154, S10, S9, V49, V49, V54, V57, V55, V55, V54, V57, V66]

================================

Block 0xd3
[0xd3:0xe6]
---
Predecessors: [0xbb]
Successors: [0xe7, 0x100]
---
0xd3 JUMPDEST
0xd4 POP
0xd5 POP
0xd6 POP
0xd7 POP
0xd8 SWAP1
0xd9 POP
0xda SWAP1
0xdb DUP2
0xdc ADD
0xdd SWAP1
0xde PUSH1 0x1f
0xe0 AND
0xe1 DUP1
0xe2 ISZERO
0xe3 PUSH2 0x100
0xe6 JUMPI
---
0xd3: JUMPDEST 
0xdc: V68 = ADD V55 V54
0xde: V69 = 0x1f
0xe0: V70 = AND 0x1f V55
0xe2: V71 = ISZERO V70
0xe3: V72 = 0x100
0xe6: JUMPI 0x100 V71
---
Entry stack: [V13, 0x1c3, V154, S10, S9, V49, V49, V54, V57, V55, V55, V54, V57, S0]
Stack pops: 7
Stack additions: [V68, V70]
Exit stack: [V13, 0x1c3, V154, S10, S9, V49, V49, V68, V70]

================================

Block 0xe7
[0xe7:0xff]
---
Predecessors: [0xd3]
Successors: [0x100]
---
0xe7 DUP1
0xe8 DUP3
0xe9 SUB
0xea DUP1
0xeb MLOAD
0xec PUSH1 0x1
0xee DUP4
0xef PUSH1 0x20
0xf1 SUB
0xf2 PUSH2 0x100
0xf5 EXP
0xf6 SUB
0xf7 NOT
0xf8 AND
0xf9 DUP2
0xfa MSTORE
0xfb PUSH1 0x20
0xfd ADD
0xfe SWAP2
0xff POP
---
0xe9: V73 = SUB V68 V70
0xeb: V74 = M[V73]
0xec: V75 = 0x1
0xef: V76 = 0x20
0xf1: V77 = SUB 0x20 V70
0xf2: V78 = 0x100
0xf5: V79 = EXP 0x100 V77
0xf6: V80 = SUB V79 0x1
0xf7: V81 = NOT V80
0xf8: V82 = AND V81 V74
0xfa: M[V73] = V82
0xfb: V83 = 0x20
0xfd: V84 = ADD 0x20 V73
---
Entry stack: [V13, 0x1c3, V154, S5, S4, V49, V49, V68, V70]
Stack pops: 2
Stack additions: [V84, S0]
Exit stack: [V13, 0x1c3, V154, S5, S4, V49, V49, V84, V70]

================================

Block 0x100
[0x100:0x10d]
---
Predecessors: [0xd3, 0xe7]
Successors: []
---
0x100 JUMPDEST
0x101 POP
0x102 SWAP3
0x103 POP
0x104 POP
0x105 POP
0x106 PUSH1 0x40
0x108 MLOAD
0x109 DUP1
0x10a SWAP2
0x10b SUB
0x10c SWAP1
0x10d RETURN
---
0x100: JUMPDEST 
0x106: V85 = 0x40
0x108: V86 = M[0x40]
0x10b: V87 = SUB S1 V86
0x10d: RETURN V86 V87
---
Entry stack: [V13, 0x1c3, V154, S5, S4, V49, V49, S1, V70]
Stack pops: 5
Stack additions: []
Exit stack: [V13, 0x1c3, V154, S5]

================================

Block 0x10e
[0x10e:0x114]
---
Predecessors: [0x27]
Successors: [0x115, 0x119]
---
0x10e JUMPDEST
0x10f CALLVALUE
0x110 ISZERO
0x111 PUSH2 0x119
0x114 JUMPI
---
0x10e: JUMPDEST 
0x10f: V88 = CALLVALUE
0x110: V89 = ISZERO V88
0x111: V90 = 0x119
0x114: JUMPI 0x119 V89
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x115
[0x115:0x118]
---
Predecessors: [0x10e]
Successors: []
---
0x115 PUSH1 0x0
0x117 DUP1
0x118 REVERT
---
0x115: V91 = 0x0
0x118: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x119
[0x119:0x120]
---
Predecessors: [0x10e]
Successors: [0x38b]
---
0x119 JUMPDEST
0x11a PUSH2 0x121
0x11d PUSH2 0x38b
0x120 JUMP
---
0x119: JUMPDEST 
0x11a: V92 = 0x121
0x11d: V93 = 0x38b
0x120: JUMP 0x38b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x121]
Exit stack: [V13, 0x121]

================================

Block 0x121
[0x121:0x132]
---
Predecessors: [0x38b, 0x39a, 0x3a0]
Successors: []
---
0x121 JUMPDEST
0x122 PUSH1 0x40
0x124 MLOAD
0x125 SWAP1
0x126 DUP2
0x127 MSTORE
0x128 PUSH1 0x20
0x12a ADD
0x12b PUSH1 0x40
0x12d MLOAD
0x12e DUP1
0x12f SWAP2
0x130 SUB
0x131 SWAP1
0x132 RETURN
---
0x121: JUMPDEST 
0x122: V94 = 0x40
0x124: V95 = M[0x40]
0x127: M[V95] = S0
0x128: V96 = 0x20
0x12a: V97 = ADD 0x20 V95
0x12b: V98 = 0x40
0x12d: V99 = M[0x40]
0x130: V100 = SUB V97 V99
0x132: RETURN V99 V100
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x133
[0x133:0x139]
---
Predecessors: [0x32]
Successors: [0x13a, 0x13e]
---
0x133 JUMPDEST
0x134 CALLVALUE
0x135 ISZERO
0x136 PUSH2 0x13e
0x139 JUMPI
---
0x133: JUMPDEST 
0x134: V101 = CALLVALUE
0x135: V102 = ISZERO V101
0x136: V103 = 0x13e
0x139: JUMPI 0x13e V102
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x13a
[0x13a:0x13d]
---
Predecessors: [0x133]
Successors: []
---
0x13a PUSH1 0x0
0x13c DUP1
0x13d REVERT
---
0x13a: V104 = 0x0
0x13d: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x13e
[0x13e:0x145]
---
Predecessors: [0x133]
Successors: [0x391]
---
0x13e JUMPDEST
0x13f PUSH2 0x146
0x142 PUSH2 0x391
0x145 JUMP
---
0x13e: JUMPDEST 
0x13f: V105 = 0x146
0x142: V106 = 0x391
0x145: JUMP 0x391
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x146]
Exit stack: [V13, 0x146]

================================

Block 0x146
[0x146:0x15b]
---
Predecessors: [0x391]
Successors: []
---
0x146 JUMPDEST
0x147 PUSH1 0x40
0x149 MLOAD
0x14a PUSH1 0xff
0x14c SWAP1
0x14d SWAP2
0x14e AND
0x14f DUP2
0x150 MSTORE
0x151 PUSH1 0x20
0x153 ADD
0x154 PUSH1 0x40
0x156 MLOAD
0x157 DUP1
0x158 SWAP2
0x159 SUB
0x15a SWAP1
0x15b RETURN
---
0x146: JUMPDEST 
0x147: V107 = 0x40
0x149: V108 = M[0x40]
0x14a: V109 = 0xff
0x14e: V110 = AND V327 0xff
0x150: M[V108] = V110
0x151: V111 = 0x20
0x153: V112 = ADD 0x20 V108
0x154: V113 = 0x40
0x156: V114 = M[0x40]
0x159: V115 = SUB V112 V114
0x15b: RETURN V114 V115
---
Entry stack: [V13, V327]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x15c
[0x15c:0x162]
---
Predecessors: [0x3d]
Successors: [0x163, 0x167]
---
0x15c JUMPDEST
0x15d CALLVALUE
0x15e ISZERO
0x15f PUSH2 0x167
0x162 JUMPI
---
0x15c: JUMPDEST 
0x15d: V116 = CALLVALUE
0x15e: V117 = ISZERO V116
0x15f: V118 = 0x167
0x162: JUMPI 0x167 V117
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x163
[0x163:0x166]
---
Predecessors: [0x15c]
Successors: []
---
0x163 PUSH1 0x0
0x165 DUP1
0x166 REVERT
---
0x163: V119 = 0x0
0x166: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x167
[0x167:0x16e]
---
Predecessors: [0x15c]
Successors: [0x39a]
---
0x167 JUMPDEST
0x168 PUSH2 0x121
0x16b PUSH2 0x39a
0x16e JUMP
---
0x167: JUMPDEST 
0x168: V120 = 0x121
0x16b: V121 = 0x39a
0x16e: JUMP 0x39a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x121]
Exit stack: [V13, 0x121]

================================

Block 0x16f
[0x16f:0x175]
---
Predecessors: [0x48]
Successors: [0x176, 0x17a]
---
0x16f JUMPDEST
0x170 CALLVALUE
0x171 ISZERO
0x172 PUSH2 0x17a
0x175 JUMPI
---
0x16f: JUMPDEST 
0x170: V122 = CALLVALUE
0x171: V123 = ISZERO V122
0x172: V124 = 0x17a
0x175: JUMPI 0x17a V123
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x176
[0x176:0x179]
---
Predecessors: [0x16f]
Successors: []
---
0x176 PUSH1 0x0
0x178 DUP1
0x179 REVERT
---
0x176: V125 = 0x0
0x179: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x17a
[0x17a:0x18d]
---
Predecessors: [0x16f]
Successors: [0x3a0]
---
0x17a JUMPDEST
0x17b PUSH2 0x121
0x17e PUSH1 0x1
0x180 PUSH1 0xa0
0x182 PUSH1 0x2
0x184 EXP
0x185 SUB
0x186 PUSH1 0x4
0x188 CALLDATALOAD
0x189 AND
0x18a PUSH2 0x3a0
0x18d JUMP
---
0x17a: JUMPDEST 
0x17b: V126 = 0x121
0x17e: V127 = 0x1
0x180: V128 = 0xa0
0x182: V129 = 0x2
0x184: V130 = EXP 0x2 0xa0
0x185: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x186: V132 = 0x4
0x188: V133 = CALLDATALOAD 0x4
0x189: V134 = AND V133 0xffffffffffffffffffffffffffffffffffffffff
0x18a: V135 = 0x3a0
0x18d: JUMP 0x3a0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x121, V134]
Exit stack: [V13, 0x121, V134]

================================

Block 0x18e
[0x18e:0x194]
---
Predecessors: [0x53]
Successors: [0x195, 0x199]
---
0x18e JUMPDEST
0x18f CALLVALUE
0x190 ISZERO
0x191 PUSH2 0x199
0x194 JUMPI
---
0x18e: JUMPDEST 
0x18f: V136 = CALLVALUE
0x190: V137 = ISZERO V136
0x191: V138 = 0x199
0x194: JUMPI 0x199 V137
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x195
[0x195:0x198]
---
Predecessors: [0x18e]
Successors: []
---
0x195 PUSH1 0x0
0x197 DUP1
0x198 REVERT
---
0x195: V139 = 0x0
0x198: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x199
[0x199:0x1a0]
---
Predecessors: [0x18e]
Successors: [0x3bb]
---
0x199 JUMPDEST
0x19a PUSH2 0x97
0x19d PUSH2 0x3bb
0x1a0 JUMP
---
0x199: JUMPDEST 
0x19a: V140 = 0x97
0x19d: V141 = 0x3bb
0x1a0: JUMP 0x3bb
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x97]
Exit stack: [V13, 0x97]

================================

Block 0x1a1
[0x1a1:0x1a7]
---
Predecessors: [0x5e]
Successors: [0x1a8, 0x1ac]
---
0x1a1 JUMPDEST
0x1a2 CALLVALUE
0x1a3 ISZERO
0x1a4 PUSH2 0x1ac
0x1a7 JUMPI
---
0x1a1: JUMPDEST 
0x1a2: V142 = CALLVALUE
0x1a3: V143 = ISZERO V142
0x1a4: V144 = 0x1ac
0x1a7: JUMPI 0x1ac V143
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1a8
[0x1a8:0x1ab]
---
Predecessors: [0x1a1]
Successors: []
---
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab REVERT
---
0x1a8: V145 = 0x0
0x1ab: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1ac
[0x1ac:0x1c2]
---
Predecessors: [0x1a1]
Successors: [0x42e]
---
0x1ac JUMPDEST
0x1ad PUSH2 0x1c3
0x1b0 PUSH1 0x1
0x1b2 PUSH1 0xa0
0x1b4 PUSH1 0x2
0x1b6 EXP
0x1b7 SUB
0x1b8 PUSH1 0x4
0x1ba CALLDATALOAD
0x1bb AND
0x1bc PUSH1 0x24
0x1be CALLDATALOAD
0x1bf PUSH2 0x42e
0x1c2 JUMP
---
0x1ac: JUMPDEST 
0x1ad: V146 = 0x1c3
0x1b0: V147 = 0x1
0x1b2: V148 = 0xa0
0x1b4: V149 = 0x2
0x1b6: V150 = EXP 0x2 0xa0
0x1b7: V151 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b8: V152 = 0x4
0x1ba: V153 = CALLDATALOAD 0x4
0x1bb: V154 = AND V153 0xffffffffffffffffffffffffffffffffffffffff
0x1bc: V155 = 0x24
0x1be: V156 = CALLDATALOAD 0x24
0x1bf: V157 = 0x42e
0x1c2: JUMP 0x42e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1c3, V154, V156]
Exit stack: [V13, 0x1c3, V154, V156]

================================

Block 0x1c3
[0x1c3:0x1d6]
---
Predecessors: [0x463, 0x497, 0x6e9, 0x86c]
Successors: []
---
0x1c3 JUMPDEST
0x1c4 PUSH1 0x40
0x1c6 MLOAD
0x1c7 SWAP1
0x1c8 ISZERO
0x1c9 ISZERO
0x1ca DUP2
0x1cb MSTORE
0x1cc PUSH1 0x20
0x1ce ADD
0x1cf PUSH1 0x40
0x1d1 MLOAD
0x1d2 DUP1
0x1d3 SWAP2
0x1d4 SUB
0x1d5 SWAP1
0x1d6 RETURN
---
0x1c3: JUMPDEST 
0x1c4: V158 = 0x40
0x1c6: V159 = M[0x40]
0x1c8: V160 = ISZERO 0x1
0x1c9: V161 = ISZERO 0x0
0x1cb: M[V159] = 0x1
0x1cc: V162 = 0x20
0x1ce: V163 = ADD 0x20 V159
0x1cf: V164 = 0x40
0x1d1: V165 = M[0x40]
0x1d4: V166 = SUB V163 V165
0x1d6: RETURN V165 V166
---
Entry stack: [V13, 0x1c3, S4, S3, S2, S1, 0x1]
Stack pops: 1
Stack additions: []
Exit stack: [V13, 0x1c3, S4, S3, S2, S1]

================================

Block 0x1d7
[0x1d7:0x1dd]
---
Predecessors: [0x69]
Successors: [0x1de, 0x1e2]
---
0x1d7 JUMPDEST
0x1d8 CALLVALUE
0x1d9 ISZERO
0x1da PUSH2 0x1e2
0x1dd JUMPI
---
0x1d7: JUMPDEST 
0x1d8: V167 = CALLVALUE
0x1d9: V168 = ISZERO V167
0x1da: V169 = 0x1e2
0x1dd: JUMPI 0x1e2 V168
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1de
[0x1de:0x1e1]
---
Predecessors: [0x1d7]
Successors: []
---
0x1de PUSH1 0x0
0x1e0 DUP1
0x1e1 REVERT
---
0x1de: V170 = 0x0
0x1e1: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x1e2
[0x1e2:0x23b]
---
Predecessors: [0x1d7]
Successors: [0x46a]
---
0x1e2 JUMPDEST
0x1e3 PUSH2 0x1c3
0x1e6 PUSH1 0x4
0x1e8 DUP1
0x1e9 CALLDATALOAD
0x1ea PUSH1 0x1
0x1ec PUSH1 0xa0
0x1ee PUSH1 0x2
0x1f0 EXP
0x1f1 SUB
0x1f2 AND
0x1f3 SWAP1
0x1f4 PUSH1 0x24
0x1f6 DUP1
0x1f7 CALLDATALOAD
0x1f8 SWAP2
0x1f9 SWAP1
0x1fa PUSH1 0x64
0x1fc SWAP1
0x1fd PUSH1 0x44
0x1ff CALLDATALOAD
0x200 SWAP1
0x201 DUP2
0x202 ADD
0x203 SWAP1
0x204 DUP4
0x205 ADD
0x206 CALLDATALOAD
0x207 DUP1
0x208 PUSH1 0x20
0x20a PUSH1 0x1f
0x20c DUP3
0x20d ADD
0x20e DUP2
0x20f SWAP1
0x210 DIV
0x211 DUP2
0x212 MUL
0x213 ADD
0x214 PUSH1 0x40
0x216 MLOAD
0x217 SWAP1
0x218 DUP2
0x219 ADD
0x21a PUSH1 0x40
0x21c MSTORE
0x21d DUP2
0x21e DUP2
0x21f MSTORE
0x220 SWAP3
0x221 SWAP2
0x222 SWAP1
0x223 PUSH1 0x20
0x225 DUP5
0x226 ADD
0x227 DUP4
0x228 DUP4
0x229 DUP1
0x22a DUP3
0x22b DUP5
0x22c CALLDATACOPY
0x22d POP
0x22e SWAP5
0x22f SWAP7
0x230 POP
0x231 PUSH2 0x46a
0x234 SWAP6
0x235 POP
0x236 POP
0x237 POP
0x238 POP
0x239 POP
0x23a POP
0x23b JUMP
---
0x1e2: JUMPDEST 
0x1e3: V171 = 0x1c3
0x1e6: V172 = 0x4
0x1e9: V173 = CALLDATALOAD 0x4
0x1ea: V174 = 0x1
0x1ec: V175 = 0xa0
0x1ee: V176 = 0x2
0x1f0: V177 = EXP 0x2 0xa0
0x1f1: V178 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1f2: V179 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x1f4: V180 = 0x24
0x1f7: V181 = CALLDATALOAD 0x24
0x1fa: V182 = 0x64
0x1fd: V183 = 0x44
0x1ff: V184 = CALLDATALOAD 0x44
0x202: V185 = ADD V184 0x24
0x205: V186 = ADD 0x4 V184
0x206: V187 = CALLDATALOAD V186
0x208: V188 = 0x20
0x20a: V189 = 0x1f
0x20d: V190 = ADD V187 0x1f
0x210: V191 = DIV V190 0x20
0x212: V192 = MUL 0x20 V191
0x213: V193 = ADD V192 0x20
0x214: V194 = 0x40
0x216: V195 = M[0x40]
0x219: V196 = ADD V195 V193
0x21a: V197 = 0x40
0x21c: M[0x40] = V196
0x21f: M[V195] = V187
0x223: V198 = 0x20
0x226: V199 = ADD V195 0x20
0x22c: CALLDATACOPY V199 V185 V187
0x231: V200 = 0x46a
0x23b: JUMP 0x46a
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1c3, V179, V181, V195]
Exit stack: [V13, 0x1c3, V179, V181, V195]

================================

Block 0x23c
[0x23c:0x242]
---
Predecessors: [0x74]
Successors: [0x243, 0x247]
---
0x23c JUMPDEST
0x23d CALLVALUE
0x23e ISZERO
0x23f PUSH2 0x247
0x242 JUMPI
---
0x23c: JUMPDEST 
0x23d: V201 = CALLVALUE
0x23e: V202 = ISZERO V201
0x23f: V203 = 0x247
0x242: JUMPI 0x247 V202
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x243
[0x243:0x246]
---
Predecessors: [0x23c]
Successors: []
---
0x243 PUSH1 0x0
0x245 DUP1
0x246 REVERT
---
0x243: V204 = 0x0
0x246: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x247
[0x247:0x2e2]
---
Predecessors: [0x23c]
Successors: [0x49e]
---
0x247 JUMPDEST
0x248 PUSH2 0x1c3
0x24b PUSH1 0x4
0x24d DUP1
0x24e CALLDATALOAD
0x24f PUSH1 0x1
0x251 PUSH1 0xa0
0x253 PUSH1 0x2
0x255 EXP
0x256 SUB
0x257 AND
0x258 SWAP1
0x259 PUSH1 0x24
0x25b DUP1
0x25c CALLDATALOAD
0x25d SWAP2
0x25e SWAP1
0x25f PUSH1 0x64
0x261 SWAP1
0x262 PUSH1 0x44
0x264 CALLDATALOAD
0x265 SWAP1
0x266 DUP2
0x267 ADD
0x268 SWAP1
0x269 DUP4
0x26a ADD
0x26b CALLDATALOAD
0x26c DUP1
0x26d PUSH1 0x20
0x26f PUSH1 0x1f
0x271 DUP3
0x272 ADD
0x273 DUP2
0x274 SWAP1
0x275 DIV
0x276 DUP2
0x277 MUL
0x278 ADD
0x279 PUSH1 0x40
0x27b MLOAD
0x27c SWAP1
0x27d DUP2
0x27e ADD
0x27f PUSH1 0x40
0x281 MSTORE
0x282 DUP2
0x283 DUP2
0x284 MSTORE
0x285 SWAP3
0x286 SWAP2
0x287 SWAP1
0x288 PUSH1 0x20
0x28a DUP5
0x28b ADD
0x28c DUP4
0x28d DUP4
0x28e DUP1
0x28f DUP3
0x290 DUP5
0x291 CALLDATACOPY
0x292 DUP3
0x293 ADD
0x294 SWAP2
0x295 POP
0x296 POP
0x297 POP
0x298 POP
0x299 POP
0x29a POP
0x29b SWAP2
0x29c SWAP1
0x29d DUP1
0x29e CALLDATALOAD
0x29f SWAP1
0x2a0 PUSH1 0x20
0x2a2 ADD
0x2a3 SWAP1
0x2a4 DUP3
0x2a5 ADD
0x2a6 DUP1
0x2a7 CALLDATALOAD
0x2a8 SWAP1
0x2a9 PUSH1 0x20
0x2ab ADD
0x2ac SWAP1
0x2ad DUP1
0x2ae DUP1
0x2af PUSH1 0x1f
0x2b1 ADD
0x2b2 PUSH1 0x20
0x2b4 DUP1
0x2b5 SWAP2
0x2b6 DIV
0x2b7 MUL
0x2b8 PUSH1 0x20
0x2ba ADD
0x2bb PUSH1 0x40
0x2bd MLOAD
0x2be SWAP1
0x2bf DUP2
0x2c0 ADD
0x2c1 PUSH1 0x40
0x2c3 MSTORE
0x2c4 DUP2
0x2c5 DUP2
0x2c6 MSTORE
0x2c7 SWAP3
0x2c8 SWAP2
0x2c9 SWAP1
0x2ca PUSH1 0x20
0x2cc DUP5
0x2cd ADD
0x2ce DUP4
0x2cf DUP4
0x2d0 DUP1
0x2d1 DUP3
0x2d2 DUP5
0x2d3 CALLDATACOPY
0x2d4 POP
0x2d5 SWAP5
0x2d6 SWAP7
0x2d7 POP
0x2d8 PUSH2 0x49e
0x2db SWAP6
0x2dc POP
0x2dd POP
0x2de POP
0x2df POP
0x2e0 POP
0x2e1 POP
0x2e2 JUMP
---
0x247: JUMPDEST 
0x248: V205 = 0x1c3
0x24b: V206 = 0x4
0x24e: V207 = CALLDATALOAD 0x4
0x24f: V208 = 0x1
0x251: V209 = 0xa0
0x253: V210 = 0x2
0x255: V211 = EXP 0x2 0xa0
0x256: V212 = SUB 0x10000000000000000000000000000000000000000 0x1
0x257: V213 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x259: V214 = 0x24
0x25c: V215 = CALLDATALOAD 0x24
0x25f: V216 = 0x64
0x262: V217 = 0x44
0x264: V218 = CALLDATALOAD 0x44
0x267: V219 = ADD V218 0x24
0x26a: V220 = ADD 0x4 V218
0x26b: V221 = CALLDATALOAD V220
0x26d: V222 = 0x20
0x26f: V223 = 0x1f
0x272: V224 = ADD V221 0x1f
0x275: V225 = DIV V224 0x20
0x277: V226 = MUL 0x20 V225
0x278: V227 = ADD V226 0x20
0x279: V228 = 0x40
0x27b: V229 = M[0x40]
0x27e: V230 = ADD V229 V227
0x27f: V231 = 0x40
0x281: M[0x40] = V230
0x284: M[V229] = V221
0x288: V232 = 0x20
0x28b: V233 = ADD V229 0x20
0x291: CALLDATACOPY V233 V219 V221
0x293: V234 = ADD V233 V221
0x29e: V235 = CALLDATALOAD 0x64
0x2a0: V236 = 0x20
0x2a2: V237 = ADD 0x20 0x64
0x2a5: V238 = ADD 0x4 V235
0x2a7: V239 = CALLDATALOAD V238
0x2a9: V240 = 0x20
0x2ab: V241 = ADD 0x20 V238
0x2af: V242 = 0x1f
0x2b1: V243 = ADD 0x1f V239
0x2b2: V244 = 0x20
0x2b6: V245 = DIV V243 0x20
0x2b7: V246 = MUL V245 0x20
0x2b8: V247 = 0x20
0x2ba: V248 = ADD 0x20 V246
0x2bb: V249 = 0x40
0x2bd: V250 = M[0x40]
0x2c0: V251 = ADD V250 V248
0x2c1: V252 = 0x40
0x2c3: M[0x40] = V251
0x2c6: M[V250] = V239
0x2ca: V253 = 0x20
0x2cd: V254 = ADD V250 0x20
0x2d3: CALLDATACOPY V254 V241 V239
0x2d8: V255 = 0x49e
0x2e2: JUMP 0x49e
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1c3, V213, V215, V229, V250]
Exit stack: [V13, 0x1c3, V213, V215, V229, V250]

================================

Block 0x2e3
[0x2e3:0x2ea]
---
Predecessors: [0x8f]
Successors: [0xa35]
---
0x2e3 JUMPDEST
0x2e4 PUSH2 0x2eb
0x2e7 PUSH2 0xa35
0x2ea JUMP
---
0x2e3: JUMPDEST 
0x2e4: V256 = 0x2eb
0x2e7: V257 = 0xa35
0x2ea: JUMP 0xa35
---
Entry stack: [V13, 0x97]
Stack pops: 0
Stack additions: [0x2eb]
Exit stack: [V13, 0x97, 0x2eb]

================================

Block 0x2eb
[0x2eb:0x33a]
---
Predecessors: [0xa35]
Successors: [0x33b, 0x381]
---
0x2eb JUMPDEST
0x2ec PUSH1 0x3
0x2ee DUP1
0x2ef SLOAD
0x2f0 PUSH1 0x1
0x2f2 DUP2
0x2f3 PUSH1 0x1
0x2f5 AND
0x2f6 ISZERO
0x2f7 PUSH2 0x100
0x2fa MUL
0x2fb SUB
0x2fc AND
0x2fd PUSH1 0x2
0x2ff SWAP1
0x300 DIV
0x301 DUP1
0x302 PUSH1 0x1f
0x304 ADD
0x305 PUSH1 0x20
0x307 DUP1
0x308 SWAP2
0x309 DIV
0x30a MUL
0x30b PUSH1 0x20
0x30d ADD
0x30e PUSH1 0x40
0x310 MLOAD
0x311 SWAP1
0x312 DUP2
0x313 ADD
0x314 PUSH1 0x40
0x316 MSTORE
0x317 DUP1
0x318 SWAP3
0x319 SWAP2
0x31a SWAP1
0x31b DUP2
0x31c DUP2
0x31d MSTORE
0x31e PUSH1 0x20
0x320 ADD
0x321 DUP3
0x322 DUP1
0x323 SLOAD
0x324 PUSH1 0x1
0x326 DUP2
0x327 PUSH1 0x1
0x329 AND
0x32a ISZERO
0x32b PUSH2 0x100
0x32e MUL
0x32f SUB
0x330 AND
0x331 PUSH1 0x2
0x333 SWAP1
0x334 DIV
0x335 DUP1
0x336 ISZERO
0x337 PUSH2 0x381
0x33a JUMPI
---
0x2eb: JUMPDEST 
0x2ec: V258 = 0x3
0x2ef: V259 = S[0x3]
0x2f0: V260 = 0x1
0x2f3: V261 = 0x1
0x2f5: V262 = AND 0x1 V259
0x2f6: V263 = ISZERO V262
0x2f7: V264 = 0x100
0x2fa: V265 = MUL 0x100 V263
0x2fb: V266 = SUB V265 0x1
0x2fc: V267 = AND V266 V259
0x2fd: V268 = 0x2
0x300: V269 = DIV V267 0x2
0x302: V270 = 0x1f
0x304: V271 = ADD 0x1f V269
0x305: V272 = 0x20
0x309: V273 = DIV V271 0x20
0x30a: V274 = MUL V273 0x20
0x30b: V275 = 0x20
0x30d: V276 = ADD 0x20 V274
0x30e: V277 = 0x40
0x310: V278 = M[0x40]
0x313: V279 = ADD V278 V276
0x314: V280 = 0x40
0x316: M[0x40] = V279
0x31d: M[V278] = V269
0x31e: V281 = 0x20
0x320: V282 = ADD 0x20 V278
0x323: V283 = S[0x3]
0x324: V284 = 0x1
0x327: V285 = 0x1
0x329: V286 = AND 0x1 V283
0x32a: V287 = ISZERO V286
0x32b: V288 = 0x100
0x32e: V289 = MUL 0x100 V287
0x32f: V290 = SUB V289 0x1
0x330: V291 = AND V290 V283
0x331: V292 = 0x2
0x334: V293 = DIV V291 0x2
0x336: V294 = ISZERO V293
0x337: V295 = 0x381
0x33a: JUMPI 0x381 V294
---
Entry stack: [V13, 0x1c3, V154, S2, {0x0, 0x97}, V908]
Stack pops: 0
Stack additions: [V278, 0x3, V269, V282, 0x3, V293]
Exit stack: [V13, 0x1c3, V154, S2, {0x0, 0x97}, V908, V278, 0x3, V269, V282, 0x3, V293]

================================

Block 0x33b
[0x33b:0x342]
---
Predecessors: [0x2eb]
Successors: [0x343, 0x356]
---
0x33b DUP1
0x33c PUSH1 0x1f
0x33e LT
0x33f PUSH2 0x356
0x342 JUMPI
---
0x33c: V296 = 0x1f
0x33e: V297 = LT 0x1f V293
0x33f: V298 = 0x356
0x342: JUMPI 0x356 V297
---
Entry stack: [V13, 0x1c3, V154, S8, {0x0, 0x97}, V908, V278, 0x3, V269, V282, 0x3, V293]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x1c3, V154, S8, {0x0, 0x97}, V908, V278, 0x3, V269, V282, 0x3, V293]

================================

Block 0x343
[0x343:0x355]
---
Predecessors: [0x33b]
Successors: [0x381]
---
0x343 PUSH2 0x100
0x346 DUP1
0x347 DUP4
0x348 SLOAD
0x349 DIV
0x34a MUL
0x34b DUP4
0x34c MSTORE
0x34d SWAP2
0x34e PUSH1 0x20
0x350 ADD
0x351 SWAP2
0x352 PUSH2 0x381
0x355 JUMP
---
0x343: V299 = 0x100
0x348: V300 = S[0x3]
0x349: V301 = DIV V300 0x100
0x34a: V302 = MUL V301 0x100
0x34c: M[V282] = V302
0x34e: V303 = 0x20
0x350: V304 = ADD 0x20 V282
0x352: V305 = 0x381
0x355: JUMP 0x381
---
Entry stack: [V13, 0x1c3, V154, S8, {0x0, 0x97}, V908, V278, 0x3, V269, V282, 0x3, V293]
Stack pops: 3
Stack additions: [V304, S1, S0]
Exit stack: [V13, 0x1c3, V154, S8, {0x0, 0x97}, V908, V278, 0x3, V269, V304, 0x3, V293]

================================

Block 0x356
[0x356:0x363]
---
Predecessors: [0x33b, 0x413]
Successors: [0x364]
---
0x356 JUMPDEST
0x357 DUP3
0x358 ADD
0x359 SWAP2
0x35a SWAP1
0x35b PUSH1 0x0
0x35d MSTORE
0x35e PUSH1 0x20
0x360 PUSH1 0x0
0x362 SHA3
0x363 SWAP1
---
0x356: JUMPDEST 
0x358: V306 = ADD S2 S0
0x35b: V307 = 0x0
0x35d: M[0x0] = {0x3, 0x4}
0x35e: V308 = 0x20
0x360: V309 = 0x0
0x362: V310 = SHA3 0x0 0x20
---
Entry stack: [V13, 0x1c3, V154, S8, {0x0, 0x97}, S6, S5, {0x3, 0x4}, S3, S2, {0x3, 0x4}, S0]
Stack pops: 3
Stack additions: [V306, V310, S2]
Exit stack: [V13, 0x1c3, V154, S8, {0x0, 0x97}, S6, S5, {0x3, 0x4}, S3, V306, V310, S2]

================================

Block 0x364
[0x364:0x377]
---
Predecessors: [0x356, 0x364]
Successors: [0x364, 0x378]
---
0x364 JUMPDEST
0x365 DUP2
0x366 SLOAD
0x367 DUP2
0x368 MSTORE
0x369 SWAP1
0x36a PUSH1 0x1
0x36c ADD
0x36d SWAP1
0x36e PUSH1 0x20
0x370 ADD
0x371 DUP1
0x372 DUP4
0x373 GT
0x374 PUSH2 0x364
0x377 JUMPI
---
0x364: JUMPDEST 
0x366: V311 = S[S1]
0x368: M[S0] = V311
0x36a: V312 = 0x1
0x36c: V313 = ADD 0x1 S1
0x36e: V314 = 0x20
0x370: V315 = ADD 0x20 S0
0x373: V316 = GT V306 V315
0x374: V317 = 0x364
0x377: JUMPI 0x364 V316
---
Entry stack: [V13, 0x1c3, V154, S8, {0x0, 0x97}, S6, S5, {0x3, 0x4}, S3, V306, S1, S0]
Stack pops: 3
Stack additions: [S2, V313, V315]
Exit stack: [V13, 0x1c3, V154, S8, {0x0, 0x97}, S6, S5, {0x3, 0x4}, S3, V306, V313, V315]

================================

Block 0x378
[0x378:0x380]
---
Predecessors: [0x364]
Successors: [0x381]
---
0x378 DUP3
0x379 SWAP1
0x37a SUB
0x37b PUSH1 0x1f
0x37d AND
0x37e DUP3
0x37f ADD
0x380 SWAP2
---
0x37a: V318 = SUB V315 V306
0x37b: V319 = 0x1f
0x37d: V320 = AND 0x1f V318
0x37f: V321 = ADD V306 V320
---
Entry stack: [V13, 0x1c3, V154, S8, {0x0, 0x97}, S6, S5, {0x3, 0x4}, S3, V306, V313, V315]
Stack pops: 3
Stack additions: [V321, S1, S2]
Exit stack: [V13, 0x1c3, V154, S8, {0x0, 0x97}, S6, S5, {0x3, 0x4}, S3, V321, V313, V306]

================================

Block 0x381
[0x381:0x38a]
---
Predecessors: [0x2eb, 0x343, 0x378, 0x3c3, 0x41b]
Successors: [0x97]
---
0x381 JUMPDEST
0x382 POP
0x383 POP
0x384 POP
0x385 POP
0x386 POP
0x387 SWAP1
0x388 POP
0x389 SWAP1
0x38a JUMP
---
0x381: JUMPDEST 
0x38a: JUMP {0x0, 0x97}
---
Entry stack: [V13, 0x1c3, V154, S8, {0x0, 0x97}, S6, S5, {0x3, 0x4}, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V13, 0x1c3, V154, S8, S5]

================================

Block 0x38b
[0x38b:0x390]
---
Predecessors: [0x119]
Successors: [0x121]
---
0x38b JUMPDEST
0x38c PUSH1 0x6
0x38e SLOAD
0x38f SWAP1
0x390 JUMP
---
0x38b: JUMPDEST 
0x38c: V322 = 0x6
0x38e: V323 = S[0x6]
0x390: JUMP 0x121
---
Entry stack: [V13, 0x121]
Stack pops: 1
Stack additions: [V323]
Exit stack: [V13, V323]

================================

Block 0x391
[0x391:0x399]
---
Predecessors: [0x13e]
Successors: [0x146]
---
0x391 JUMPDEST
0x392 PUSH1 0x5
0x394 SLOAD
0x395 PUSH1 0xff
0x397 AND
0x398 SWAP1
0x399 JUMP
---
0x391: JUMPDEST 
0x392: V324 = 0x5
0x394: V325 = S[0x5]
0x395: V326 = 0xff
0x397: V327 = AND 0xff V325
0x399: JUMP 0x146
---
Entry stack: [V13, 0x146]
Stack pops: 1
Stack additions: [V327]
Exit stack: [V13, V327]

================================

Block 0x39a
[0x39a:0x39f]
---
Predecessors: [0x167]
Successors: [0x121]
---
0x39a JUMPDEST
0x39b PUSH1 0x0
0x39d NOT
0x39e DUP2
0x39f JUMP
---
0x39a: JUMPDEST 
0x39b: V328 = 0x0
0x39d: V329 = NOT 0x0
0x39f: JUMP 0x121
---
Entry stack: [V13, 0x121]
Stack pops: 1
Stack additions: [S0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]
Exit stack: [V13, 0x121, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff]

================================

Block 0x3a0
[0x3a0:0x3ba]
---
Predecessors: [0x17a, 0x4af, 0x4c3, 0x4d5, 0x6f9, 0x711, 0x71d, 0x8ea, 0x901, 0x913]
Successors: [0x121, 0x4b8, 0x4cf, 0x4fa, 0x706, 0x8f6, 0x90d, 0x938]
---
0x3a0 JUMPDEST
0x3a1 PUSH1 0x1
0x3a3 PUSH1 0xa0
0x3a5 PUSH1 0x2
0x3a7 EXP
0x3a8 SUB
0x3a9 AND
0x3aa PUSH1 0x0
0x3ac SWAP1
0x3ad DUP2
0x3ae MSTORE
0x3af PUSH1 0x2
0x3b1 PUSH1 0x20
0x3b3 MSTORE
0x3b4 PUSH1 0x40
0x3b6 SWAP1
0x3b7 SHA3
0x3b8 SLOAD
0x3b9 SWAP1
0x3ba JUMP
---
0x3a0: JUMPDEST 
0x3a1: V330 = 0x1
0x3a3: V331 = 0xa0
0x3a5: V332 = 0x2
0x3a7: V333 = EXP 0x2 0xa0
0x3a8: V334 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a9: V335 = AND 0xffffffffffffffffffffffffffffffffffffffff S0
0x3aa: V336 = 0x0
0x3ae: M[0x0] = V335
0x3af: V337 = 0x2
0x3b1: V338 = 0x20
0x3b3: M[0x20] = 0x2
0x3b4: V339 = 0x40
0x3b7: V340 = SHA3 0x0 0x40
0x3b8: V341 = S[V340]
0x3ba: JUMP {0x121, 0x4b8, 0x4cf, 0x4fa, 0x706, 0x8f6, 0x90d, 0x938}
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, {0x121, 0x4b8, 0x4cf, 0x4fa, 0x706, 0x8f6, 0x90d, 0x938}, S0]
Stack pops: 2
Stack additions: [V341]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V341]

================================

Block 0x3bb
[0x3bb:0x3c2]
---
Predecessors: [0x199]
Successors: [0xa35]
---
0x3bb JUMPDEST
0x3bc PUSH2 0x3c3
0x3bf PUSH2 0xa35
0x3c2 JUMP
---
0x3bb: JUMPDEST 
0x3bc: V342 = 0x3c3
0x3bf: V343 = 0xa35
0x3c2: JUMP 0xa35
---
Entry stack: [V13, 0x97]
Stack pops: 0
Stack additions: [0x3c3]
Exit stack: [V13, 0x97, 0x3c3]

================================

Block 0x3c3
[0x3c3:0x412]
---
Predecessors: [0xa35]
Successors: [0x381, 0x413]
---
0x3c3 JUMPDEST
0x3c4 PUSH1 0x4
0x3c6 DUP1
0x3c7 SLOAD
0x3c8 PUSH1 0x1
0x3ca DUP2
0x3cb PUSH1 0x1
0x3cd AND
0x3ce ISZERO
0x3cf PUSH2 0x100
0x3d2 MUL
0x3d3 SUB
0x3d4 AND
0x3d5 PUSH1 0x2
0x3d7 SWAP1
0x3d8 DIV
0x3d9 DUP1
0x3da PUSH1 0x1f
0x3dc ADD
0x3dd PUSH1 0x20
0x3df DUP1
0x3e0 SWAP2
0x3e1 DIV
0x3e2 MUL
0x3e3 PUSH1 0x20
0x3e5 ADD
0x3e6 PUSH1 0x40
0x3e8 MLOAD
0x3e9 SWAP1
0x3ea DUP2
0x3eb ADD
0x3ec PUSH1 0x40
0x3ee MSTORE
0x3ef DUP1
0x3f0 SWAP3
0x3f1 SWAP2
0x3f2 SWAP1
0x3f3 DUP2
0x3f4 DUP2
0x3f5 MSTORE
0x3f6 PUSH1 0x20
0x3f8 ADD
0x3f9 DUP3
0x3fa DUP1
0x3fb SLOAD
0x3fc PUSH1 0x1
0x3fe DUP2
0x3ff PUSH1 0x1
0x401 AND
0x402 ISZERO
0x403 PUSH2 0x100
0x406 MUL
0x407 SUB
0x408 AND
0x409 PUSH1 0x2
0x40b SWAP1
0x40c DIV
0x40d DUP1
0x40e ISZERO
0x40f PUSH2 0x381
0x412 JUMPI
---
0x3c3: JUMPDEST 
0x3c4: V344 = 0x4
0x3c7: V345 = S[0x4]
0x3c8: V346 = 0x1
0x3cb: V347 = 0x1
0x3cd: V348 = AND 0x1 V345
0x3ce: V349 = ISZERO V348
0x3cf: V350 = 0x100
0x3d2: V351 = MUL 0x100 V349
0x3d3: V352 = SUB V351 0x1
0x3d4: V353 = AND V352 V345
0x3d5: V354 = 0x2
0x3d8: V355 = DIV V353 0x2
0x3da: V356 = 0x1f
0x3dc: V357 = ADD 0x1f V355
0x3dd: V358 = 0x20
0x3e1: V359 = DIV V357 0x20
0x3e2: V360 = MUL V359 0x20
0x3e3: V361 = 0x20
0x3e5: V362 = ADD 0x20 V360
0x3e6: V363 = 0x40
0x3e8: V364 = M[0x40]
0x3eb: V365 = ADD V364 V362
0x3ec: V366 = 0x40
0x3ee: M[0x40] = V365
0x3f5: M[V364] = V355
0x3f6: V367 = 0x20
0x3f8: V368 = ADD 0x20 V364
0x3fb: V369 = S[0x4]
0x3fc: V370 = 0x1
0x3ff: V371 = 0x1
0x401: V372 = AND 0x1 V369
0x402: V373 = ISZERO V372
0x403: V374 = 0x100
0x406: V375 = MUL 0x100 V373
0x407: V376 = SUB V375 0x1
0x408: V377 = AND V376 V369
0x409: V378 = 0x2
0x40c: V379 = DIV V377 0x2
0x40e: V380 = ISZERO V379
0x40f: V381 = 0x381
0x412: JUMPI 0x381 V380
---
Entry stack: [V13, 0x1c3, V154, S2, {0x0, 0x97}, V908]
Stack pops: 0
Stack additions: [V364, 0x4, V355, V368, 0x4, V379]
Exit stack: [V13, 0x1c3, V154, S2, {0x0, 0x97}, V908, V364, 0x4, V355, V368, 0x4, V379]

================================

Block 0x413
[0x413:0x41a]
---
Predecessors: [0x3c3]
Successors: [0x356, 0x41b]
---
0x413 DUP1
0x414 PUSH1 0x1f
0x416 LT
0x417 PUSH2 0x356
0x41a JUMPI
---
0x414: V382 = 0x1f
0x416: V383 = LT 0x1f V379
0x417: V384 = 0x356
0x41a: JUMPI 0x356 V383
---
Entry stack: [V13, 0x1c3, V154, S8, {0x0, 0x97}, V908, V364, 0x4, V355, V368, 0x4, V379]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x1c3, V154, S8, {0x0, 0x97}, V908, V364, 0x4, V355, V368, 0x4, V379]

================================

Block 0x41b
[0x41b:0x42d]
---
Predecessors: [0x413]
Successors: [0x381]
---
0x41b PUSH2 0x100
0x41e DUP1
0x41f DUP4
0x420 SLOAD
0x421 DIV
0x422 MUL
0x423 DUP4
0x424 MSTORE
0x425 SWAP2
0x426 PUSH1 0x20
0x428 ADD
0x429 SWAP2
0x42a PUSH2 0x381
0x42d JUMP
---
0x41b: V385 = 0x100
0x420: V386 = S[0x4]
0x421: V387 = DIV V386 0x100
0x422: V388 = MUL V387 0x100
0x424: M[V368] = V388
0x426: V389 = 0x20
0x428: V390 = ADD 0x20 V368
0x42a: V391 = 0x381
0x42d: JUMP 0x381
---
Entry stack: [V13, 0x1c3, V154, S8, {0x0, 0x97}, V908, V364, 0x4, V355, V368, 0x4, V379]
Stack pops: 3
Stack additions: [V390, S1, S0]
Exit stack: [V13, 0x1c3, V154, S8, {0x0, 0x97}, V908, V364, 0x4, V355, V390, 0x4, V379]

================================

Block 0x42e
[0x42e:0x437]
---
Predecessors: [0x1ac]
Successors: [0xa35]
---
0x42e JUMPDEST
0x42f PUSH1 0x0
0x431 PUSH2 0x438
0x434 PUSH2 0xa35
0x437 JUMP
---
0x42e: JUMPDEST 
0x42f: V392 = 0x0
0x431: V393 = 0x438
0x434: V394 = 0xa35
0x437: JUMP 0xa35
---
Entry stack: [V13, 0x1c3, V154, V156]
Stack pops: 0
Stack additions: [0x0, 0x438]
Exit stack: [V13, 0x1c3, V154, V156, 0x0, 0x438]

================================

Block 0x438
[0x438:0x440]
---
Predecessors: [0xa35]
Successors: [0x6f1]
---
0x438 JUMPDEST
0x439 PUSH2 0x441
0x43c DUP5
0x43d PUSH2 0x6f1
0x440 JUMP
---
0x438: JUMPDEST 
0x439: V395 = 0x441
0x43d: V396 = 0x6f1
0x440: JUMP 0x6f1
---
Entry stack: [V13, 0x1c3, V154, S2, {0x0, 0x97}, V908]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x441, S3]
Exit stack: [V13, 0x1c3, V154, S2, {0x0, 0x97}, V908, 0x441, V154]

================================

Block 0x441
[0x441:0x446]
---
Predecessors: [0x6f1]
Successors: [0x447, 0x458]
---
0x441 JUMPDEST
0x442 ISZERO
0x443 PUSH2 0x458
0x446 JUMPI
---
0x441: JUMPDEST 
0x442: V397 = ISZERO V622
0x443: V398 = 0x458
0x446: JUMPI 0x458 V397
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, V622]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, S1]

================================

Block 0x447
[0x447:0x450]
---
Predecessors: [0x441]
Successors: [0x6f9]
---
0x447 PUSH2 0x451
0x44a DUP5
0x44b DUP5
0x44c DUP4
0x44d PUSH2 0x6f9
0x450 JUMP
---
0x447: V399 = 0x451
0x44d: V400 = 0x6f9
0x450: JUMP 0x6f9
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x451, S3, S2, S0]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, 0x451, S3, S2, S0]

================================

Block 0x451
[0x451:0x457]
---
Predecessors: [0x6e9, 0x86c, 0x98b]
Successors: [0x463]
---
0x451 JUMPDEST
0x452 SWAP2
0x453 POP
0x454 PUSH2 0x463
0x457 JUMP
---
0x451: JUMPDEST 
0x454: V401 = 0x463
0x457: JUMP 0x463
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 3
Stack additions: [S0, S1]
Exit stack: [V13, S6, S5, S4, S3, 0x1, S1]

================================

Block 0x458
[0x458:0x462]
---
Predecessors: [0x441]
Successors: [0x8ea]
---
0x458 JUMPDEST
0x459 PUSH2 0x451
0x45c DUP5
0x45d DUP5
0x45e DUP4
0x45f PUSH2 0x8ea
0x462 JUMP
---
0x458: JUMPDEST 
0x459: V402 = 0x451
0x45f: V403 = 0x8ea
0x462: JUMP 0x8ea
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x451, S3, S2, S0]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, 0x451, S3, S2, S0]

================================

Block 0x463
[0x463:0x469]
---
Predecessors: [0x451]
Successors: [0x1c3]
---
0x463 JUMPDEST
0x464 POP
0x465 SWAP3
0x466 SWAP2
0x467 POP
0x468 POP
0x469 JUMP
---
0x463: JUMPDEST 
0x469: JUMP S4
---
Entry stack: [V13, S5, S4, S3, S2, 0x1, S0]
Stack pops: 5
Stack additions: [S1]
Exit stack: [V13, S5, 0x1]

================================

Block 0x46a
[0x46a:0x474]
---
Predecessors: [0x1e2]
Successors: [0x6f1]
---
0x46a JUMPDEST
0x46b PUSH1 0x0
0x46d PUSH2 0x475
0x470 DUP5
0x471 PUSH2 0x6f1
0x474 JUMP
---
0x46a: JUMPDEST 
0x46b: V404 = 0x0
0x46d: V405 = 0x475
0x471: V406 = 0x6f1
0x474: JUMP 0x6f1
---
Entry stack: [V13, 0x1c3, V179, V181, V195]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x475, S2]
Exit stack: [V13, 0x1c3, V179, V181, V195, 0x0, 0x475, V179]

================================

Block 0x475
[0x475:0x47a]
---
Predecessors: [0x6f1]
Successors: [0x47b, 0x48c]
---
0x475 JUMPDEST
0x476 ISZERO
0x477 PUSH2 0x48c
0x47a JUMPI
---
0x475: JUMPDEST 
0x476: V407 = ISZERO V622
0x477: V408 = 0x48c
0x47a: JUMPI 0x48c V407
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, V622]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, S1]

================================

Block 0x47b
[0x47b:0x484]
---
Predecessors: [0x475]
Successors: [0x6f9]
---
0x47b PUSH2 0x485
0x47e DUP5
0x47f DUP5
0x480 DUP5
0x481 PUSH2 0x6f9
0x484 JUMP
---
0x47b: V409 = 0x485
0x481: V410 = 0x6f9
0x484: JUMP 0x6f9
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x485, S3, S2, S1]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, 0x485, S3, S2, S1]

================================

Block 0x485
[0x485:0x48b]
---
Predecessors: [0x6e9, 0x86c, 0x98b]
Successors: [0x497]
---
0x485 JUMPDEST
0x486 SWAP1
0x487 POP
0x488 PUSH2 0x497
0x48b JUMP
---
0x485: JUMPDEST 
0x488: V411 = 0x497
0x48b: JUMP 0x497
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, S6, S5, S4, S3, S2, 0x1]

================================

Block 0x48c
[0x48c:0x496]
---
Predecessors: [0x475]
Successors: [0x8ea]
---
0x48c JUMPDEST
0x48d PUSH2 0x485
0x490 DUP5
0x491 DUP5
0x492 DUP5
0x493 PUSH2 0x8ea
0x496 JUMP
---
0x48c: JUMPDEST 
0x48d: V412 = 0x485
0x493: V413 = 0x8ea
0x496: JUMP 0x8ea
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x485, S3, S2, S1]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, 0x485, S3, S2, S1]

================================

Block 0x497
[0x497:0x49d]
---
Predecessors: [0x485]
Successors: [0x1c3]
---
0x497 JUMPDEST
0x498 SWAP4
0x499 SWAP3
0x49a POP
0x49b POP
0x49c POP
0x49d JUMP
---
0x497: JUMPDEST 
0x49d: JUMP S4
---
Entry stack: [V13, S5, S4, S3, S2, S1, 0x1]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, S5, 0x1]

================================

Block 0x49e
[0x49e:0x4a8]
---
Predecessors: [0x247]
Successors: [0x6f1]
---
0x49e JUMPDEST
0x49f PUSH1 0x0
0x4a1 PUSH2 0x4a9
0x4a4 DUP6
0x4a5 PUSH2 0x6f1
0x4a8 JUMP
---
0x49e: JUMPDEST 
0x49f: V414 = 0x0
0x4a1: V415 = 0x4a9
0x4a5: V416 = 0x6f1
0x4a8: JUMP 0x6f1
---
Entry stack: [V13, 0x1c3, V213, V215, V229, V250]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x0, 0x4a9, S3]
Exit stack: [V13, 0x1c3, V213, V215, V229, V250, 0x0, 0x4a9, V213]

================================

Block 0x4a9
[0x4a9:0x4ae]
---
Predecessors: [0x6f1]
Successors: [0x4af, 0x6db]
---
0x4a9 JUMPDEST
0x4aa ISZERO
0x4ab PUSH2 0x6db
0x4ae JUMPI
---
0x4a9: JUMPDEST 
0x4aa: V417 = ISZERO V622
0x4ab: V418 = 0x6db
0x4ae: JUMPI 0x6db V417
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, V622]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S6, S5, S4, S3, S2, S1]

================================

Block 0x4af
[0x4af:0x4b7]
---
Predecessors: [0x4a9]
Successors: [0x3a0]
---
0x4af DUP4
0x4b0 PUSH2 0x4b8
0x4b3 CALLER
0x4b4 PUSH2 0x3a0
0x4b7 JUMP
---
0x4b0: V419 = 0x4b8
0x4b3: V420 = CALLER
0x4b4: V421 = 0x3a0
0x4b7: JUMP 0x3a0
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, S3, 0x4b8, V420]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, S3, 0x4b8, V420]

================================

Block 0x4b8
[0x4b8:0x4be]
---
Predecessors: [0x3a0]
Successors: [0x4bf, 0x4c3]
---
0x4b8 JUMPDEST
0x4b9 LT
0x4ba ISZERO
0x4bb PUSH2 0x4c3
0x4be JUMPI
---
0x4b8: JUMPDEST 
0x4b9: V422 = LT V341 S1
0x4ba: V423 = ISZERO V422
0x4bb: V424 = 0x4c3
0x4be: JUMPI 0x4c3 V423
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V341]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x4bf
[0x4bf:0x4c2]
---
Predecessors: [0x4b8]
Successors: []
---
0x4bf PUSH1 0x0
0x4c1 DUP1
0x4c2 REVERT
---
0x4bf: V425 = 0x0
0x4c2: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x4c3
[0x4c3:0x4ce]
---
Predecessors: [0x4b8]
Successors: [0x3a0]
---
0x4c3 JUMPDEST
0x4c4 PUSH2 0x4d5
0x4c7 PUSH2 0x4cf
0x4ca CALLER
0x4cb PUSH2 0x3a0
0x4ce JUMP
---
0x4c3: JUMPDEST 
0x4c4: V426 = 0x4d5
0x4c7: V427 = 0x4cf
0x4ca: V428 = CALLER
0x4cb: V429 = 0x3a0
0x4ce: JUMP 0x3a0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x4d5, 0x4cf, V428]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x4d5, 0x4cf, V428]

================================

Block 0x4cf
[0x4cf:0x4d4]
---
Predecessors: [0x3a0]
Successors: [0xa08]
---
0x4cf JUMPDEST
0x4d0 DUP6
0x4d1 PUSH2 0xa08
0x4d4 JUMP
---
0x4cf: JUMPDEST 
0x4d1: V430 = 0xa08
0x4d4: JUMP 0xa08
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V341]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V341, S5]

================================

Block 0x4d5
[0x4d5:0x4f9]
---
Predecessors: [0xa17]
Successors: [0x3a0]
---
0x4d5 JUMPDEST
0x4d6 PUSH1 0x1
0x4d8 PUSH1 0xa0
0x4da PUSH1 0x2
0x4dc EXP
0x4dd SUB
0x4de CALLER
0x4df AND
0x4e0 PUSH1 0x0
0x4e2 SWAP1
0x4e3 DUP2
0x4e4 MSTORE
0x4e5 PUSH1 0x2
0x4e7 PUSH1 0x20
0x4e9 MSTORE
0x4ea PUSH1 0x40
0x4ec SWAP1
0x4ed SHA3
0x4ee SSTORE
0x4ef PUSH2 0x500
0x4f2 PUSH2 0x4fa
0x4f5 DUP7
0x4f6 PUSH2 0x3a0
0x4f9 JUMP
---
0x4d5: JUMPDEST 
0x4d6: V431 = 0x1
0x4d8: V432 = 0xa0
0x4da: V433 = 0x2
0x4dc: V434 = EXP 0x2 0xa0
0x4dd: V435 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4de: V436 = CALLER
0x4df: V437 = AND V436 0xffffffffffffffffffffffffffffffffffffffff
0x4e0: V438 = 0x0
0x4e4: M[0x0] = V437
0x4e5: V439 = 0x2
0x4e7: V440 = 0x20
0x4e9: M[0x20] = 0x2
0x4ea: V441 = 0x40
0x4ed: V442 = SHA3 0x0 0x40
0x4ee: S[V442] = V896
0x4ef: V443 = 0x500
0x4f2: V444 = 0x4fa
0x4f6: V445 = 0x3a0
0x4f9: JUMP 0x3a0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V896]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x500, 0x4fa, S5]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x500, 0x4fa, S5]

================================

Block 0x4fa
[0x4fa:0x4ff]
---
Predecessors: [0x3a0]
Successors: [0xa1d]
---
0x4fa JUMPDEST
0x4fb DUP6
0x4fc PUSH2 0xa1d
0x4ff JUMP
---
0x4fa: JUMPDEST 
0x4fc: V446 = 0xa1d
0x4ff: JUMP 0xa1d
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V341]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S5]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V341, S5]

================================

Block 0x500
[0x500:0x52e]
---
Predecessors: [0xa30]
Successors: [0x52f]
---
0x500 JUMPDEST
0x501 PUSH1 0x1
0x503 PUSH1 0xa0
0x505 PUSH1 0x2
0x507 EXP
0x508 SUB
0x509 DUP7
0x50a AND
0x50b PUSH1 0x0
0x50d DUP2
0x50e DUP2
0x50f MSTORE
0x510 PUSH1 0x2
0x512 PUSH1 0x20
0x514 MSTORE
0x515 PUSH1 0x40
0x517 DUP1
0x518 DUP3
0x519 SHA3
0x51a SWAP4
0x51b SWAP1
0x51c SWAP4
0x51d SSTORE
0x51e SWAP1
0x51f SWAP2
0x520 DUP5
0x521 SWAP1
0x522 MLOAD
0x523 DUP1
0x524 DUP3
0x525 DUP1
0x526 MLOAD
0x527 SWAP1
0x528 PUSH1 0x20
0x52a ADD
0x52b SWAP1
0x52c DUP1
0x52d DUP4
0x52e DUP4
---
0x500: JUMPDEST 
0x501: V447 = 0x1
0x503: V448 = 0xa0
0x505: V449 = 0x2
0x507: V450 = EXP 0x2 0xa0
0x508: V451 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50a: V452 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x50b: V453 = 0x0
0x50f: M[0x0] = V452
0x510: V454 = 0x2
0x512: V455 = 0x20
0x514: M[0x20] = 0x2
0x515: V456 = 0x40
0x519: V457 = SHA3 0x0 0x40
0x51d: S[V457] = V905
0x522: V458 = M[0x40]
0x526: V459 = M[S2]
0x528: V460 = 0x20
0x52a: V461 = ADD 0x20 S2
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V905]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V452, 0x0, S2, V458, V458, V461, V459, V459, V458, V461]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V452, 0x0, S2, V458, V458, V461, V459, V459, V458, V461]

================================

Block 0x52f
[0x52f:0x537]
---
Predecessors: [0x500, 0x538]
Successors: [0x538, 0x54e]
---
0x52f JUMPDEST
0x530 PUSH1 0x20
0x532 DUP4
0x533 LT
0x534 PUSH2 0x54e
0x537 JUMPI
---
0x52f: JUMPDEST 
0x530: V462 = 0x20
0x533: V463 = LT S2 0x20
0x534: V464 = 0x54e
0x537: JUMPI 0x54e V463
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V452, 0x0, S7, V458, V458, V461, V459, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V452, 0x0, S7, V458, V458, V461, V459, S2, S1, S0]

================================

Block 0x538
[0x538:0x54d]
---
Predecessors: [0x52f]
Successors: [0x52f]
---
0x538 DUP1
0x539 MLOAD
0x53a DUP3
0x53b MSTORE
0x53c PUSH1 0x1f
0x53e NOT
0x53f SWAP1
0x540 SWAP3
0x541 ADD
0x542 SWAP2
0x543 PUSH1 0x20
0x545 SWAP2
0x546 DUP3
0x547 ADD
0x548 SWAP2
0x549 ADD
0x54a PUSH2 0x52f
0x54d JUMP
---
0x539: V465 = M[S0]
0x53b: M[S1] = V465
0x53c: V466 = 0x1f
0x53e: V467 = NOT 0x1f
0x541: V468 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x543: V469 = 0x20
0x547: V470 = ADD 0x20 S1
0x549: V471 = ADD 0x20 S0
0x54a: V472 = 0x52f
0x54d: JUMP 0x52f
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V452, 0x0, S7, V458, V458, V461, V459, S2, S1, S0]
Stack pops: 3
Stack additions: [V468, V470, V471]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V452, 0x0, S7, V458, V458, V461, V459, V468, V470, V471]

================================

Block 0x54e
[0x54e:0x5c6]
---
Predecessors: [0x52f]
Successors: [0x5c7]
---
0x54e JUMPDEST
0x54f PUSH1 0x1
0x551 DUP4
0x552 PUSH1 0x20
0x554 SUB
0x555 PUSH2 0x100
0x558 EXP
0x559 SUB
0x55a DUP1
0x55b NOT
0x55c DUP3
0x55d MLOAD
0x55e AND
0x55f DUP2
0x560 DUP5
0x561 MLOAD
0x562 AND
0x563 OR
0x564 SWAP1
0x565 SWAP3
0x566 MSTORE
0x567 POP
0x568 POP
0x569 POP
0x56a SWAP2
0x56b SWAP1
0x56c SWAP2
0x56d ADD
0x56e SWAP3
0x56f POP
0x570 PUSH1 0x40
0x572 SWAP2
0x573 POP
0x574 POP
0x575 MLOAD
0x576 DUP1
0x577 SWAP2
0x578 SUB
0x579 SWAP1
0x57a SHA3
0x57b PUSH1 0xe0
0x57d PUSH1 0x2
0x57f EXP
0x580 SWAP1
0x581 DIV
0x582 SWAP1
0x583 CALLER
0x584 DUP8
0x585 DUP8
0x586 PUSH1 0x40
0x588 MLOAD
0x589 DUP6
0x58a PUSH4 0xffffffff
0x58f AND
0x590 PUSH1 0xe0
0x592 PUSH1 0x2
0x594 EXP
0x595 MUL
0x596 DUP2
0x597 MSTORE
0x598 PUSH1 0x4
0x59a ADD
0x59b DUP1
0x59c DUP5
0x59d PUSH1 0x1
0x59f PUSH1 0xa0
0x5a1 PUSH1 0x2
0x5a3 EXP
0x5a4 SUB
0x5a5 AND
0x5a6 PUSH1 0x1
0x5a8 PUSH1 0xa0
0x5aa PUSH1 0x2
0x5ac EXP
0x5ad SUB
0x5ae AND
0x5af DUP2
0x5b0 MSTORE
0x5b1 PUSH1 0x20
0x5b3 ADD
0x5b4 DUP4
0x5b5 DUP2
0x5b6 MSTORE
0x5b7 PUSH1 0x20
0x5b9 ADD
0x5ba DUP3
0x5bb DUP1
0x5bc MLOAD
0x5bd SWAP1
0x5be PUSH1 0x20
0x5c0 ADD
0x5c1 SWAP1
0x5c2 DUP1
0x5c3 DUP4
0x5c4 DUP4
0x5c5 PUSH1 0x0
---
0x54e: JUMPDEST 
0x54f: V473 = 0x1
0x552: V474 = 0x20
0x554: V475 = SUB 0x20 S2
0x555: V476 = 0x100
0x558: V477 = EXP 0x100 V475
0x559: V478 = SUB V477 0x1
0x55b: V479 = NOT V478
0x55d: V480 = M[S0]
0x55e: V481 = AND V480 V479
0x561: V482 = M[S1]
0x562: V483 = AND V482 V478
0x563: V484 = OR V483 V481
0x566: M[S1] = V484
0x56d: V485 = ADD V459 V458
0x570: V486 = 0x40
0x575: V487 = M[0x40]
0x578: V488 = SUB V485 V487
0x57a: V489 = SHA3 V487 V488
0x57b: V490 = 0xe0
0x57d: V491 = 0x2
0x57f: V492 = EXP 0x2 0xe0
0x581: V493 = DIV V489 0x100000000000000000000000000000000000000000000000000000000
0x583: V494 = CALLER
0x586: V495 = 0x40
0x588: V496 = M[0x40]
0x58a: V497 = 0xffffffff
0x58f: V498 = AND 0xffffffff V493
0x590: V499 = 0xe0
0x592: V500 = 0x2
0x594: V501 = EXP 0x2 0xe0
0x595: V502 = MUL 0x100000000000000000000000000000000000000000000000000000000 V498
0x597: M[V496] = V502
0x598: V503 = 0x4
0x59a: V504 = ADD 0x4 V496
0x59d: V505 = 0x1
0x59f: V506 = 0xa0
0x5a1: V507 = 0x2
0x5a3: V508 = EXP 0x2 0xa0
0x5a4: V509 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a5: V510 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x5a6: V511 = 0x1
0x5a8: V512 = 0xa0
0x5aa: V513 = 0x2
0x5ac: V514 = EXP 0x2 0xa0
0x5ad: V515 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ae: V516 = AND 0xffffffffffffffffffffffffffffffffffffffff V510
0x5b0: M[V504] = V516
0x5b1: V517 = 0x20
0x5b3: V518 = ADD 0x20 V504
0x5b6: M[V518] = S13
0x5b7: V519 = 0x20
0x5b9: V520 = ADD 0x20 V518
0x5bc: V521 = M[S12]
0x5be: V522 = 0x20
0x5c0: V523 = ADD 0x20 S12
0x5c5: V524 = 0x0
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V452, 0x0, S7, V458, V458, V461, V459, S2, S1, S0]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, V493, S8, V494, S13, S12, V504, V520, V523, V521, V521, V520, V523, 0x0]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, V452, V493, 0x0, V494, S13, S12, V504, V520, V523, V521, V521, V520, V523, 0x0]

================================

Block 0x5c7
[0x5c7:0x5cf]
---
Predecessors: [0x54e, 0x5d0]
Successors: [0x5d0, 0x5df]
---
0x5c7 JUMPDEST
0x5c8 DUP4
0x5c9 DUP2
0x5ca LT
0x5cb ISZERO
0x5cc PUSH2 0x5df
0x5cf JUMPI
---
0x5c7: JUMPDEST 
0x5ca: V525 = LT S0 V521
0x5cb: V526 = ISZERO V525
0x5cc: V527 = 0x5df
0x5cf: JUMPI 0x5df V526
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x0, V452, V493, 0x0, V494, S9, S8, V504, V520, V523, V521, V521, V520, V523, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x0, V452, V493, 0x0, V494, S9, S8, V504, V520, V523, V521, V521, V520, V523, S0]

================================

Block 0x5d0
[0x5d0:0x5de]
---
Predecessors: [0x5c7]
Successors: [0x5c7]
---
0x5d0 DUP1
0x5d1 DUP3
0x5d2 ADD
0x5d3 MLOAD
0x5d4 DUP4
0x5d5 DUP3
0x5d6 ADD
0x5d7 MSTORE
0x5d8 PUSH1 0x20
0x5da ADD
0x5db PUSH2 0x5c7
0x5de JUMP
---
0x5d2: V528 = ADD V523 S0
0x5d3: V529 = M[V528]
0x5d6: V530 = ADD S0 V520
0x5d7: M[V530] = V529
0x5d8: V531 = 0x20
0x5da: V532 = ADD 0x20 S0
0x5db: V533 = 0x5c7
0x5de: JUMP 0x5c7
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x0, V452, V493, 0x0, V494, S9, S8, V504, V520, V523, V521, V521, V520, V523, S0]
Stack pops: 3
Stack additions: [S2, S1, V532]
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x0, V452, V493, 0x0, V494, S9, S8, V504, V520, V523, V521, V521, V520, V523, V532]

================================

Block 0x5df
[0x5df:0x5f2]
---
Predecessors: [0x5c7]
Successors: [0x5f3, 0x60c]
---
0x5df JUMPDEST
0x5e0 POP
0x5e1 POP
0x5e2 POP
0x5e3 POP
0x5e4 SWAP1
0x5e5 POP
0x5e6 SWAP1
0x5e7 DUP2
0x5e8 ADD
0x5e9 SWAP1
0x5ea PUSH1 0x1f
0x5ec AND
0x5ed DUP1
0x5ee ISZERO
0x5ef PUSH2 0x60c
0x5f2 JUMPI
---
0x5df: JUMPDEST 
0x5e8: V534 = ADD V521 V520
0x5ea: V535 = 0x1f
0x5ec: V536 = AND 0x1f V521
0x5ee: V537 = ISZERO V536
0x5ef: V538 = 0x60c
0x5f2: JUMPI 0x60c V537
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x0, V452, V493, 0x0, V494, S9, S8, V504, V520, V523, V521, V521, V520, V523, S0]
Stack pops: 7
Stack additions: [V534, V536]
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, 0x0, V452, V493, 0x0, V494, S9, S8, V504, V534, V536]

================================

Block 0x5f3
[0x5f3:0x60b]
---
Predecessors: [0x5df]
Successors: [0x60c]
---
0x5f3 DUP1
0x5f4 DUP3
0x5f5 SUB
0x5f6 DUP1
0x5f7 MLOAD
0x5f8 PUSH1 0x1
0x5fa DUP4
0x5fb PUSH1 0x20
0x5fd SUB
0x5fe PUSH2 0x100
0x601 EXP
0x602 SUB
0x603 NOT
0x604 AND
0x605 DUP2
0x606 MSTORE
0x607 PUSH1 0x20
0x609 ADD
0x60a SWAP2
0x60b POP
---
0x5f5: V539 = SUB V534 V536
0x5f7: V540 = M[V539]
0x5f8: V541 = 0x1
0x5fb: V542 = 0x20
0x5fd: V543 = SUB 0x20 V536
0x5fe: V544 = 0x100
0x601: V545 = EXP 0x100 V543
0x602: V546 = SUB V545 0x1
0x603: V547 = NOT V546
0x604: V548 = AND V547 V540
0x606: M[V539] = V548
0x607: V549 = 0x20
0x609: V550 = ADD 0x20 V539
---
Entry stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x0, V452, V493, 0x0, V494, S4, S3, V504, V534, V536]
Stack pops: 2
Stack additions: [V550, S0]
Exit stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x0, V452, V493, 0x0, V494, S4, S3, V504, V550, V536]

================================

Block 0x60c
[0x60c:0x62e]
---
Predecessors: [0x5df, 0x5f3]
Successors: [0x62f, 0x630]
---
0x60c JUMPDEST
0x60d POP
0x60e SWAP4
0x60f POP
0x610 POP
0x611 POP
0x612 POP
0x613 PUSH1 0x0
0x615 PUSH1 0x40
0x617 MLOAD
0x618 DUP1
0x619 DUP4
0x61a SUB
0x61b DUP2
0x61c DUP6
0x61d DUP9
0x61e PUSH2 0x8796
0x621 GAS
0x622 SUB
0x623 CALL
0x624 SWAP4
0x625 POP
0x626 POP
0x627 POP
0x628 POP
0x629 ISZERO
0x62a ISZERO
0x62b PUSH2 0x630
0x62e JUMPI
---
0x60c: JUMPDEST 
0x613: V551 = 0x0
0x615: V552 = 0x40
0x617: V553 = M[0x40]
0x61a: V554 = SUB S1 V553
0x61e: V555 = 0x8796
0x621: V556 = GAS
0x622: V557 = SUB V556 0x8796
0x623: V558 = CALL V557 V452 0x0 V553 V554 V553 0x0
0x629: V559 = ISZERO V558
0x62a: V560 = ISZERO V559
0x62b: V561 = 0x630
0x62e: JUMPI 0x630 V560
---
Entry stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x0, V452, V493, 0x0, V494, S4, S3, V504, S1, V536]
Stack pops: 9
Stack additions: []
Exit stack: [V13, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, 0x0]

================================

Block 0x62f
[0x62f:0x62f]
---
Predecessors: [0x60c]
Successors: []
---
0x62f INVALID
---
0x62f: INVALID 
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]

================================

Block 0x630
[0x630:0x640]
---
Predecessors: [0x60c]
Successors: [0x641]
---
0x630 JUMPDEST
0x631 DUP3
0x632 PUSH1 0x40
0x634 MLOAD
0x635 DUP1
0x636 DUP3
0x637 DUP1
0x638 MLOAD
0x639 SWAP1
0x63a PUSH1 0x20
0x63c ADD
0x63d SWAP1
0x63e DUP1
0x63f DUP4
0x640 DUP4
---
0x630: JUMPDEST 
0x632: V562 = 0x40
0x634: V563 = M[0x40]
0x638: V564 = M[S2]
0x63a: V565 = 0x20
0x63c: V566 = ADD 0x20 S2
---
Entry stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0, S2, V563, V563, V566, V564, V564, V563, V566]
Exit stack: [V13, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0x0, S2, V563, V563, V566, V564, V564, V563, V566]

================================

Block 0x641
[0x641:0x649]
---
Predecessors: [0x630, 0x64a]
Successors: [0x64a, 0x660]
---
0x641 JUMPDEST
0x642 PUSH1 0x20
0x644 DUP4
0x645 LT
0x646 PUSH2 0x660
0x649 JUMPI
---
0x641: JUMPDEST 
0x642: V567 = 0x20
0x645: V568 = LT S2 0x20
0x646: V569 = 0x660
0x649: JUMPI 0x660 V568
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x0, S7, V563, V563, V566, V564, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x0, S7, V563, V563, V566, V564, S2, S1, S0]

================================

Block 0x64a
[0x64a:0x65f]
---
Predecessors: [0x641]
Successors: [0x641]
---
0x64a DUP1
0x64b MLOAD
0x64c DUP3
0x64d MSTORE
0x64e PUSH1 0x1f
0x650 NOT
0x651 SWAP1
0x652 SWAP3
0x653 ADD
0x654 SWAP2
0x655 PUSH1 0x20
0x657 SWAP2
0x658 DUP3
0x659 ADD
0x65a SWAP2
0x65b ADD
0x65c PUSH2 0x641
0x65f JUMP
---
0x64b: V570 = M[S0]
0x64d: M[S1] = V570
0x64e: V571 = 0x1f
0x650: V572 = NOT 0x1f
0x653: V573 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x655: V574 = 0x20
0x659: V575 = ADD 0x20 S1
0x65b: V576 = ADD 0x20 S0
0x65c: V577 = 0x641
0x65f: JUMP 0x641
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x0, S7, V563, V563, V566, V564, S2, S1, S0]
Stack pops: 3
Stack additions: [V573, V575, V576]
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x0, S7, V563, V563, V566, V564, V573, V575, V576]

================================

Block 0x660
[0x660:0x6da]
---
Predecessors: [0x641]
Successors: [0x6e9]
---
0x660 JUMPDEST
0x661 PUSH1 0x1
0x663 DUP4
0x664 PUSH1 0x20
0x666 SUB
0x667 PUSH2 0x100
0x66a EXP
0x66b SUB
0x66c DUP1
0x66d NOT
0x66e DUP3
0x66f MLOAD
0x670 AND
0x671 DUP2
0x672 DUP5
0x673 MLOAD
0x674 AND
0x675 OR
0x676 SWAP1
0x677 SWAP3
0x678 MSTORE
0x679 POP
0x67a POP
0x67b POP
0x67c SWAP2
0x67d SWAP1
0x67e SWAP2
0x67f ADD
0x680 SWAP3
0x681 POP
0x682 PUSH1 0x40
0x684 SWAP2
0x685 POP
0x686 POP
0x687 MLOAD
0x688 DUP1
0x689 SWAP2
0x68a SUB
0x68b SWAP1
0x68c SHA3
0x68d DUP6
0x68e PUSH1 0x1
0x690 PUSH1 0xa0
0x692 PUSH1 0x2
0x694 EXP
0x695 SUB
0x696 AND
0x697 CALLER
0x698 PUSH1 0x1
0x69a PUSH1 0xa0
0x69c PUSH1 0x2
0x69e EXP
0x69f SUB
0x6a0 AND
0x6a1 PUSH32 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x6c2 DUP8
0x6c3 PUSH1 0x40
0x6c5 MLOAD
0x6c6 SWAP1
0x6c7 DUP2
0x6c8 MSTORE
0x6c9 PUSH1 0x20
0x6cb ADD
0x6cc PUSH1 0x40
0x6ce MLOAD
0x6cf DUP1
0x6d0 SWAP2
0x6d1 SUB
0x6d2 SWAP1
0x6d3 LOG4
0x6d4 POP
0x6d5 PUSH1 0x1
0x6d7 PUSH2 0x6e9
0x6da JUMP
---
0x660: JUMPDEST 
0x661: V578 = 0x1
0x664: V579 = 0x20
0x666: V580 = SUB 0x20 S2
0x667: V581 = 0x100
0x66a: V582 = EXP 0x100 V580
0x66b: V583 = SUB V582 0x1
0x66d: V584 = NOT V583
0x66f: V585 = M[S0]
0x670: V586 = AND V585 V584
0x673: V587 = M[S1]
0x674: V588 = AND V587 V583
0x675: V589 = OR V588 V586
0x678: M[S1] = V589
0x67f: V590 = ADD V564 V563
0x682: V591 = 0x40
0x687: V592 = M[0x40]
0x68a: V593 = SUB V590 V592
0x68c: V594 = SHA3 V592 V593
0x68e: V595 = 0x1
0x690: V596 = 0xa0
0x692: V597 = 0x2
0x694: V598 = EXP 0x2 0xa0
0x695: V599 = SUB 0x10000000000000000000000000000000000000000 0x1
0x696: V600 = AND 0xffffffffffffffffffffffffffffffffffffffff S12
0x697: V601 = CALLER
0x698: V602 = 0x1
0x69a: V603 = 0xa0
0x69c: V604 = 0x2
0x69e: V605 = EXP 0x2 0xa0
0x69f: V606 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6a0: V607 = AND 0xffffffffffffffffffffffffffffffffffffffff V601
0x6a1: V608 = 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x6c3: V609 = 0x40
0x6c5: V610 = M[0x40]
0x6c8: M[V610] = S11
0x6c9: V611 = 0x20
0x6cb: V612 = ADD 0x20 V610
0x6cc: V613 = 0x40
0x6ce: V614 = M[0x40]
0x6d1: V615 = SUB V612 V614
0x6d3: LOG V614 V615 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16 V607 V600 V594
0x6d5: V616 = 0x1
0x6d7: V617 = 0x6e9
0x6da: JUMP 0x6e9
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x0, S7, V563, V563, V566, V564, S2, S1, S0]
Stack pops: 13
Stack additions: [S12, S11, S10, S9, 0x1]
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x1]

================================

Block 0x6db
[0x6db:0x6e5]
---
Predecessors: [0x4a9]
Successors: [0x8ea]
---
0x6db JUMPDEST
0x6dc PUSH2 0x6e6
0x6df DUP6
0x6e0 DUP6
0x6e1 DUP6
0x6e2 PUSH2 0x8ea
0x6e5 JUMP
---
0x6db: JUMPDEST 
0x6dc: V618 = 0x6e6
0x6e2: V619 = 0x8ea
0x6e5: JUMP 0x8ea
---
Entry stack: [V13, S5, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, 0x6e6, S4, S3, S2]
Exit stack: [V13, S5, S4, S3, S2, S1, S0, 0x6e6, S4, S3, S2]

================================

Block 0x6e6
[0x6e6:0x6e8]
---
Predecessors: [0x98b]
Successors: [0x6e9]
---
0x6e6 JUMPDEST
0x6e7 SWAP1
0x6e8 POP
---
0x6e6: JUMPDEST 
---
Entry stack: [V13, S6, S5, S4, S3, S2, S1, 0x1]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V13, S6, S5, S4, S3, S2, 0x1]

================================

Block 0x6e9
[0x6e9:0x6f0]
---
Predecessors: [0x660, 0x6e6]
Successors: [0x1c3, 0x451, 0x485]
---
0x6e9 JUMPDEST
0x6ea SWAP5
0x6eb SWAP4
0x6ec POP
0x6ed POP
0x6ee POP
0x6ef POP
0x6f0 JUMP
---
0x6e9: JUMPDEST 
0x6f0: JUMP S5
---
Entry stack: [V13, S5, S4, S3, S2, S1, 0x1]
Stack pops: 6
Stack additions: [S0]
Exit stack: [V13, 0x1]

================================

Block 0x6f1
[0x6f1:0x6f8]
---
Predecessors: [0x438, 0x46a, 0x49e]
Successors: [0x441, 0x475, 0x4a9]
---
0x6f1 JUMPDEST
0x6f2 PUSH1 0x0
0x6f4 SWAP1
0x6f5 EXTCODESIZE
0x6f6 GT
0x6f7 SWAP1
0x6f8 JUMP
---
0x6f1: JUMPDEST 
0x6f2: V620 = 0x0
0x6f5: V621 = EXTCODESIZE S0
0x6f6: V622 = GT V621 0x0
0x6f8: JUMP {0x441, 0x475, 0x4a9}
---
Entry stack: [V13, S7, S6, S5, S4, S3, S2, {0x441, 0x475, 0x4a9}, S0]
Stack pops: 2
Stack additions: [V622]
Exit stack: [V13, S7, S6, S5, S4, S3, S2, V622]

================================

Block 0x6f9
[0x6f9:0x705]
---
Predecessors: [0x447, 0x47b]
Successors: [0x3a0]
---
0x6f9 JUMPDEST
0x6fa PUSH1 0x0
0x6fc DUP1
0x6fd DUP4
0x6fe PUSH2 0x706
0x701 CALLER
0x702 PUSH2 0x3a0
0x705 JUMP
---
0x6f9: JUMPDEST 
0x6fa: V623 = 0x0
0x6fe: V624 = 0x706
0x701: V625 = CALLER
0x702: V626 = 0x3a0
0x705: JUMP 0x3a0
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, {0x451, 0x485}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, 0x0, S1, 0x706, V625]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, {0x451, 0x485}, S2, S1, S0, 0x0, 0x0, S1, 0x706, V625]

================================

Block 0x706
[0x706:0x70c]
---
Predecessors: [0x3a0]
Successors: [0x70d, 0x711]
---
0x706 JUMPDEST
0x707 LT
0x708 ISZERO
0x709 PUSH2 0x711
0x70c JUMPI
---
0x706: JUMPDEST 
0x707: V627 = LT V341 S1
0x708: V628 = ISZERO V627
0x709: V629 = 0x711
0x70c: JUMPI 0x711 V628
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V341]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x70d
[0x70d:0x710]
---
Predecessors: [0x706]
Successors: []
---
0x70d PUSH1 0x0
0x70f DUP1
0x710 REVERT
---
0x70d: V630 = 0x0
0x710: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x711
[0x711:0x71c]
---
Predecessors: [0x706]
Successors: [0x3a0]
---
0x711 JUMPDEST
0x712 PUSH2 0x71d
0x715 PUSH2 0x4cf
0x718 CALLER
0x719 PUSH2 0x3a0
0x71c JUMP
---
0x711: JUMPDEST 
0x712: V631 = 0x71d
0x715: V632 = 0x4cf
0x718: V633 = CALLER
0x719: V634 = 0x3a0
0x71c: JUMP 0x3a0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x71d, 0x4cf, V633]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x71d, 0x4cf, V633]

================================

Block 0x71d
[0x71d:0x741]
---
Predecessors: [0xa17]
Successors: [0x3a0]
---
0x71d JUMPDEST
0x71e PUSH1 0x1
0x720 PUSH1 0xa0
0x722 PUSH1 0x2
0x724 EXP
0x725 SUB
0x726 CALLER
0x727 AND
0x728 PUSH1 0x0
0x72a SWAP1
0x72b DUP2
0x72c MSTORE
0x72d PUSH1 0x2
0x72f PUSH1 0x20
0x731 MSTORE
0x732 PUSH1 0x40
0x734 SWAP1
0x735 SHA3
0x736 SSTORE
0x737 PUSH2 0x742
0x73a PUSH2 0x4fa
0x73d DUP7
0x73e PUSH2 0x3a0
0x741 JUMP
---
0x71d: JUMPDEST 
0x71e: V635 = 0x1
0x720: V636 = 0xa0
0x722: V637 = 0x2
0x724: V638 = EXP 0x2 0xa0
0x725: V639 = SUB 0x10000000000000000000000000000000000000000 0x1
0x726: V640 = CALLER
0x727: V641 = AND V640 0xffffffffffffffffffffffffffffffffffffffff
0x728: V642 = 0x0
0x72c: M[0x0] = V641
0x72d: V643 = 0x2
0x72f: V644 = 0x20
0x731: M[0x20] = 0x2
0x732: V645 = 0x40
0x735: V646 = SHA3 0x0 0x40
0x736: S[V646] = V896
0x737: V647 = 0x742
0x73a: V648 = 0x4fa
0x73e: V649 = 0x3a0
0x741: JUMP 0x3a0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V896]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, 0x742, 0x4fa, S5]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x742, 0x4fa, S5]

================================

Block 0x742
[0x742:0x7c2]
---
Predecessors: [0xa30]
Successors: [0x7c3]
---
0x742 JUMPDEST
0x743 PUSH1 0x1
0x745 PUSH1 0xa0
0x747 PUSH1 0x2
0x749 EXP
0x74a SUB
0x74b DUP7
0x74c AND
0x74d PUSH1 0x0
0x74f DUP2
0x750 DUP2
0x751 MSTORE
0x752 PUSH1 0x2
0x754 PUSH1 0x20
0x756 MSTORE
0x757 PUSH1 0x40
0x759 SWAP1
0x75a DUP2
0x75b SWAP1
0x75c SHA3
0x75d SWAP3
0x75e SWAP1
0x75f SWAP3
0x760 SSTORE
0x761 DUP7
0x762 SWAP3
0x763 POP
0x764 SWAP1
0x765 PUSH4 0xc0ee0b8a
0x76a SWAP1
0x76b CALLER
0x76c SWAP1
0x76d DUP8
0x76e SWAP1
0x76f DUP8
0x770 SWAP1
0x771 MLOAD
0x772 DUP5
0x773 PUSH4 0xffffffff
0x778 AND
0x779 PUSH1 0xe0
0x77b PUSH1 0x2
0x77d EXP
0x77e MUL
0x77f DUP2
0x780 MSTORE
0x781 PUSH1 0x4
0x783 ADD
0x784 DUP1
0x785 DUP5
0x786 PUSH1 0x1
0x788 PUSH1 0xa0
0x78a PUSH1 0x2
0x78c EXP
0x78d SUB
0x78e AND
0x78f PUSH1 0x1
0x791 PUSH1 0xa0
0x793 PUSH1 0x2
0x795 EXP
0x796 SUB
0x797 AND
0x798 DUP2
0x799 MSTORE
0x79a PUSH1 0x20
0x79c ADD
0x79d DUP4
0x79e DUP2
0x79f MSTORE
0x7a0 PUSH1 0x20
0x7a2 ADD
0x7a3 DUP1
0x7a4 PUSH1 0x20
0x7a6 ADD
0x7a7 DUP3
0x7a8 DUP2
0x7a9 SUB
0x7aa DUP3
0x7ab MSTORE
0x7ac DUP4
0x7ad DUP2
0x7ae DUP2
0x7af MLOAD
0x7b0 DUP2
0x7b1 MSTORE
0x7b2 PUSH1 0x20
0x7b4 ADD
0x7b5 SWAP2
0x7b6 POP
0x7b7 DUP1
0x7b8 MLOAD
0x7b9 SWAP1
0x7ba PUSH1 0x20
0x7bc ADD
0x7bd SWAP1
0x7be DUP1
0x7bf DUP4
0x7c0 DUP4
0x7c1 PUSH1 0x0
---
0x742: JUMPDEST 
0x743: V650 = 0x1
0x745: V651 = 0xa0
0x747: V652 = 0x2
0x749: V653 = EXP 0x2 0xa0
0x74a: V654 = SUB 0x10000000000000000000000000000000000000000 0x1
0x74c: V655 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x74d: V656 = 0x0
0x751: M[0x0] = V655
0x752: V657 = 0x2
0x754: V658 = 0x20
0x756: M[0x20] = 0x2
0x757: V659 = 0x40
0x75c: V660 = SHA3 0x0 0x40
0x760: S[V660] = V905
0x765: V661 = 0xc0ee0b8a
0x76b: V662 = CALLER
0x771: V663 = M[0x40]
0x773: V664 = 0xffffffff
0x778: V665 = AND 0xffffffff 0xc0ee0b8a
0x779: V666 = 0xe0
0x77b: V667 = 0x2
0x77d: V668 = EXP 0x2 0xe0
0x77e: V669 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xc0ee0b8a
0x780: M[V663] = 0xc0ee0b8a00000000000000000000000000000000000000000000000000000000
0x781: V670 = 0x4
0x783: V671 = ADD 0x4 V663
0x786: V672 = 0x1
0x788: V673 = 0xa0
0x78a: V674 = 0x2
0x78c: V675 = EXP 0x2 0xa0
0x78d: V676 = SUB 0x10000000000000000000000000000000000000000 0x1
0x78e: V677 = AND 0xffffffffffffffffffffffffffffffffffffffff V662
0x78f: V678 = 0x1
0x791: V679 = 0xa0
0x793: V680 = 0x2
0x795: V681 = EXP 0x2 0xa0
0x796: V682 = SUB 0x10000000000000000000000000000000000000000 0x1
0x797: V683 = AND 0xffffffffffffffffffffffffffffffffffffffff V677
0x799: M[V671] = V683
0x79a: V684 = 0x20
0x79c: V685 = ADD 0x20 V671
0x79f: M[V685] = S4
0x7a0: V686 = 0x20
0x7a2: V687 = ADD 0x20 V685
0x7a4: V688 = 0x20
0x7a6: V689 = ADD 0x20 V687
0x7a9: V690 = SUB V689 V671
0x7ab: M[V687] = V690
0x7af: V691 = M[S3]
0x7b1: M[V689] = V691
0x7b2: V692 = 0x20
0x7b4: V693 = ADD 0x20 V689
0x7b8: V694 = M[S3]
0x7ba: V695 = 0x20
0x7bc: V696 = ADD 0x20 S3
0x7c1: V697 = 0x0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V905]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S5, V655, 0xc0ee0b8a, V662, S4, S3, V671, V687, V693, V696, V694, V694, V693, V696, 0x0]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S5, V655, 0xc0ee0b8a, V662, S4, S3, V671, V687, V693, V696, V694, V694, V693, V696, 0x0]

================================

Block 0x7c3
[0x7c3:0x7cb]
---
Predecessors: [0x742, 0x7cc]
Successors: [0x7cc, 0x7db]
---
0x7c3 JUMPDEST
0x7c4 DUP4
0x7c5 DUP2
0x7c6 LT
0x7c7 ISZERO
0x7c8 PUSH2 0x7db
0x7cb JUMPI
---
0x7c3: JUMPDEST 
0x7c6: V698 = LT S0 V694
0x7c7: V699 = ISZERO V698
0x7c8: V700 = 0x7db
0x7cb: JUMPI 0x7db V699
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V655, 0xc0ee0b8a, V662, S10, S9, V671, V687, V693, V696, V694, V694, V693, V696, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V655, 0xc0ee0b8a, V662, S10, S9, V671, V687, V693, V696, V694, V694, V693, V696, S0]

================================

Block 0x7cc
[0x7cc:0x7da]
---
Predecessors: [0x7c3]
Successors: [0x7c3]
---
0x7cc DUP1
0x7cd DUP3
0x7ce ADD
0x7cf MLOAD
0x7d0 DUP4
0x7d1 DUP3
0x7d2 ADD
0x7d3 MSTORE
0x7d4 PUSH1 0x20
0x7d6 ADD
0x7d7 PUSH2 0x7c3
0x7da JUMP
---
0x7ce: V701 = ADD V696 S0
0x7cf: V702 = M[V701]
0x7d2: V703 = ADD S0 V693
0x7d3: M[V703] = V702
0x7d4: V704 = 0x20
0x7d6: V705 = ADD 0x20 S0
0x7d7: V706 = 0x7c3
0x7da: JUMP 0x7c3
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V655, 0xc0ee0b8a, V662, S10, S9, V671, V687, V693, V696, V694, V694, V693, V696, S0]
Stack pops: 3
Stack additions: [S2, S1, V705]
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V655, 0xc0ee0b8a, V662, S10, S9, V671, V687, V693, V696, V694, V694, V693, V696, V705]

================================

Block 0x7db
[0x7db:0x7ee]
---
Predecessors: [0x7c3]
Successors: [0x7ef, 0x808]
---
0x7db JUMPDEST
0x7dc POP
0x7dd POP
0x7de POP
0x7df POP
0x7e0 SWAP1
0x7e1 POP
0x7e2 SWAP1
0x7e3 DUP2
0x7e4 ADD
0x7e5 SWAP1
0x7e6 PUSH1 0x1f
0x7e8 AND
0x7e9 DUP1
0x7ea ISZERO
0x7eb PUSH2 0x808
0x7ee JUMPI
---
0x7db: JUMPDEST 
0x7e4: V707 = ADD V694 V693
0x7e6: V708 = 0x1f
0x7e8: V709 = AND 0x1f V694
0x7ea: V710 = ISZERO V709
0x7eb: V711 = 0x808
0x7ee: JUMPI 0x808 V710
---
Entry stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V655, 0xc0ee0b8a, V662, S10, S9, V671, V687, V693, V696, V694, V694, V693, V696, S0]
Stack pops: 7
Stack additions: [V707, V709]
Exit stack: [V13, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, V655, 0xc0ee0b8a, V662, S10, S9, V671, V687, V707, V709]

================================

Block 0x7ef
[0x7ef:0x807]
---
Predecessors: [0x7db]
Successors: [0x808]
---
0x7ef DUP1
0x7f0 DUP3
0x7f1 SUB
0x7f2 DUP1
0x7f3 MLOAD
0x7f4 PUSH1 0x1
0x7f6 DUP4
0x7f7 PUSH1 0x20
0x7f9 SUB
0x7fa PUSH2 0x100
0x7fd EXP
0x7fe SUB
0x7ff NOT
0x800 AND
0x801 DUP2
0x802 MSTORE
0x803 PUSH1 0x20
0x805 ADD
0x806 SWAP2
0x807 POP
---
0x7f1: V712 = SUB V707 V709
0x7f3: V713 = M[V712]
0x7f4: V714 = 0x1
0x7f7: V715 = 0x20
0x7f9: V716 = SUB 0x20 V709
0x7fa: V717 = 0x100
0x7fd: V718 = EXP 0x100 V716
0x7fe: V719 = SUB V718 0x1
0x7ff: V720 = NOT V719
0x800: V721 = AND V720 V713
0x802: M[V712] = V721
0x803: V722 = 0x20
0x805: V723 = ADD 0x20 V712
---
Entry stack: [V13, 0x1c3, S18, S17, S16, S15, {0x451, 0x485}, S13, S12, S11, 0x0, S9, V655, 0xc0ee0b8a, V662, S5, S4, V671, V687, V707, V709]
Stack pops: 2
Stack additions: [V723, S0]
Exit stack: [V13, 0x1c3, S18, S17, S16, S15, {0x451, 0x485}, S13, S12, S11, 0x0, S9, V655, 0xc0ee0b8a, V662, S5, S4, V671, V687, V723, V709]

================================

Block 0x808
[0x808:0x823]
---
Predecessors: [0x7db, 0x7ef]
Successors: [0x824, 0x828]
---
0x808 JUMPDEST
0x809 POP
0x80a SWAP5
0x80b POP
0x80c POP
0x80d POP
0x80e POP
0x80f POP
0x810 PUSH1 0x0
0x812 PUSH1 0x40
0x814 MLOAD
0x815 DUP1
0x816 DUP4
0x817 SUB
0x818 DUP2
0x819 PUSH1 0x0
0x81b DUP8
0x81c DUP1
0x81d EXTCODESIZE
0x81e ISZERO
0x81f ISZERO
0x820 PUSH2 0x828
0x823 JUMPI
---
0x808: JUMPDEST 
0x810: V724 = 0x0
0x812: V725 = 0x40
0x814: V726 = M[0x40]
0x817: V727 = SUB S1 V726
0x819: V728 = 0x0
0x81d: V729 = EXTCODESIZE V655
0x81e: V730 = ISZERO V729
0x81f: V731 = ISZERO V730
0x820: V732 = 0x828
0x823: JUMPI 0x828 V731
---
Entry stack: [V13, 0x1c3, S18, S17, S16, S15, {0x451, 0x485}, S13, S12, S11, 0x0, S9, V655, 0xc0ee0b8a, V662, S5, S4, V671, V687, S1, V709]
Stack pops: 9
Stack additions: [S8, S7, S1, 0x0, V726, V727, V726, 0x0, S8]
Exit stack: [V13, 0x1c3, S18, S17, S16, S15, {0x451, 0x485}, S13, S12, S11, 0x0, S9, V655, 0xc0ee0b8a, S1, 0x0, V726, V727, V726, 0x0, V655]

================================

Block 0x824
[0x824:0x827]
---
Predecessors: [0x808]
Successors: []
---
0x824 PUSH1 0x0
0x826 DUP1
0x827 REVERT
---
0x824: V733 = 0x0
0x827: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1c3, S18, S17, S16, S15, {0x451, 0x485}, S13, S12, S11, 0x0, S9, V655, 0xc0ee0b8a, S6, 0x0, V726, V727, V726, 0x0, V655]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1c3, S18, S17, S16, S15, {0x451, 0x485}, S13, S12, S11, 0x0, S9, V655, 0xc0ee0b8a, S6, 0x0, V726, V727, V726, 0x0, V655]

================================

Block 0x828
[0x828:0x834]
---
Predecessors: [0x808]
Successors: [0x835, 0x839]
---
0x828 JUMPDEST
0x829 PUSH2 0x2c6
0x82c GAS
0x82d SUB
0x82e CALL
0x82f ISZERO
0x830 ISZERO
0x831 PUSH2 0x839
0x834 JUMPI
---
0x828: JUMPDEST 
0x829: V734 = 0x2c6
0x82c: V735 = GAS
0x82d: V736 = SUB V735 0x2c6
0x82e: V737 = CALL V736 V655 0x0 V726 V727 V726 0x0
0x82f: V738 = ISZERO V737
0x830: V739 = ISZERO V738
0x831: V740 = 0x839
0x834: JUMPI 0x839 V739
---
Entry stack: [V13, 0x1c3, S18, S17, S16, S15, {0x451, 0x485}, S13, S12, S11, 0x0, S9, V655, 0xc0ee0b8a, S6, 0x0, V726, V727, V726, 0x0, V655]
Stack pops: 6
Stack additions: []
Exit stack: [V13, 0x1c3, S18, S17, S16, S15, {0x451, 0x485}, S13, S12, S11, 0x0, S9, V655, 0xc0ee0b8a, S6]

================================

Block 0x835
[0x835:0x838]
---
Predecessors: [0x828]
Successors: []
---
0x835 PUSH1 0x0
0x837 DUP1
0x838 REVERT
---
0x835: V741 = 0x0
0x838: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1c3, S12, S11, S10, S9, {0x451, 0x485}, S7, S6, S5, 0x0, S3, V655, 0xc0ee0b8a, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1c3, S12, S11, S10, S9, {0x451, 0x485}, S7, S6, S5, 0x0, S3, V655, 0xc0ee0b8a, S0]

================================

Block 0x839
[0x839:0x84c]
---
Predecessors: [0x828]
Successors: [0x84d]
---
0x839 JUMPDEST
0x83a POP
0x83b POP
0x83c POP
0x83d DUP3
0x83e PUSH1 0x40
0x840 MLOAD
0x841 DUP1
0x842 DUP3
0x843 DUP1
0x844 MLOAD
0x845 SWAP1
0x846 PUSH1 0x20
0x848 ADD
0x849 SWAP1
0x84a DUP1
0x84b DUP4
0x84c DUP4
---
0x839: JUMPDEST 
0x83e: V742 = 0x40
0x840: V743 = M[0x40]
0x844: V744 = M[S5]
0x846: V745 = 0x20
0x848: V746 = ADD 0x20 S5
---
Entry stack: [V13, 0x1c3, S12, S11, S10, S9, {0x451, 0x485}, S7, S6, S5, 0x0, S3, V655, 0xc0ee0b8a, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S5, V743, V743, V746, V744, V744, V743, V746]
Exit stack: [V13, 0x1c3, S12, S11, S10, S9, {0x451, 0x485}, S7, S6, S5, 0x0, S3, S5, V743, V743, V746, V744, V744, V743, V746]

================================

Block 0x84d
[0x84d:0x855]
---
Predecessors: [0x839, 0x856]
Successors: [0x856, 0x86c]
---
0x84d JUMPDEST
0x84e PUSH1 0x20
0x850 DUP4
0x851 LT
0x852 PUSH2 0x86c
0x855 JUMPI
---
0x84d: JUMPDEST 
0x84e: V747 = 0x20
0x851: V748 = LT S2 0x20
0x852: V749 = 0x86c
0x855: JUMPI 0x86c V748
---
Entry stack: [V13, 0x1c3, S17, S16, S15, S14, {0x451, 0x485}, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, 0x1c3, S17, S16, S15, S14, {0x451, 0x485}, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x856
[0x856:0x86b]
---
Predecessors: [0x84d]
Successors: [0x84d]
---
0x856 DUP1
0x857 MLOAD
0x858 DUP3
0x859 MSTORE
0x85a PUSH1 0x1f
0x85c NOT
0x85d SWAP1
0x85e SWAP3
0x85f ADD
0x860 SWAP2
0x861 PUSH1 0x20
0x863 SWAP2
0x864 DUP3
0x865 ADD
0x866 SWAP2
0x867 ADD
0x868 PUSH2 0x84d
0x86b JUMP
---
0x857: V750 = M[S0]
0x859: M[S1] = V750
0x85a: V751 = 0x1f
0x85c: V752 = NOT 0x1f
0x85f: V753 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x861: V754 = 0x20
0x865: V755 = ADD 0x20 S1
0x867: V756 = ADD 0x20 S0
0x868: V757 = 0x84d
0x86b: JUMP 0x84d
---
Entry stack: [V13, 0x1c3, S17, S16, S15, S14, {0x451, 0x485}, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V753, V755, V756]
Exit stack: [V13, 0x1c3, S17, S16, S15, S14, {0x451, 0x485}, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, V753, V755, V756]

================================

Block 0x86c
[0x86c:0x8e9]
---
Predecessors: [0x84d]
Successors: [0x1c3, 0x451, 0x485]
---
0x86c JUMPDEST
0x86d PUSH1 0x1
0x86f DUP4
0x870 PUSH1 0x20
0x872 SUB
0x873 PUSH2 0x100
0x876 EXP
0x877 SUB
0x878 DUP1
0x879 NOT
0x87a DUP3
0x87b MLOAD
0x87c AND
0x87d DUP2
0x87e DUP5
0x87f MLOAD
0x880 AND
0x881 OR
0x882 SWAP1
0x883 SWAP3
0x884 MSTORE
0x885 POP
0x886 POP
0x887 POP
0x888 SWAP2
0x889 SWAP1
0x88a SWAP2
0x88b ADD
0x88c SWAP3
0x88d POP
0x88e PUSH1 0x40
0x890 SWAP2
0x891 POP
0x892 POP
0x893 MLOAD
0x894 DUP1
0x895 SWAP2
0x896 SUB
0x897 SWAP1
0x898 SHA3
0x899 DUP6
0x89a PUSH1 0x1
0x89c PUSH1 0xa0
0x89e PUSH1 0x2
0x8a0 EXP
0x8a1 SUB
0x8a2 AND
0x8a3 CALLER
0x8a4 PUSH1 0x1
0x8a6 PUSH1 0xa0
0x8a8 PUSH1 0x2
0x8aa EXP
0x8ab SUB
0x8ac AND
0x8ad PUSH32 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x8ce DUP8
0x8cf PUSH1 0x40
0x8d1 MLOAD
0x8d2 SWAP1
0x8d3 DUP2
0x8d4 MSTORE
0x8d5 PUSH1 0x20
0x8d7 ADD
0x8d8 PUSH1 0x40
0x8da MLOAD
0x8db DUP1
0x8dc SWAP2
0x8dd SUB
0x8de SWAP1
0x8df LOG4
0x8e0 POP
0x8e1 PUSH1 0x1
0x8e3 SWAP5
0x8e4 SWAP4
0x8e5 POP
0x8e6 POP
0x8e7 POP
0x8e8 POP
0x8e9 JUMP
---
0x86c: JUMPDEST 
0x86d: V758 = 0x1
0x870: V759 = 0x20
0x872: V760 = SUB 0x20 S2
0x873: V761 = 0x100
0x876: V762 = EXP 0x100 V760
0x877: V763 = SUB V762 0x1
0x879: V764 = NOT V763
0x87b: V765 = M[S0]
0x87c: V766 = AND V765 V764
0x87f: V767 = M[S1]
0x880: V768 = AND V767 V763
0x881: V769 = OR V768 V766
0x884: M[S1] = V769
0x88b: V770 = ADD S3 S5
0x88e: V771 = 0x40
0x893: V772 = M[0x40]
0x896: V773 = SUB V770 V772
0x898: V774 = SHA3 V772 V773
0x89a: V775 = 0x1
0x89c: V776 = 0xa0
0x89e: V777 = 0x2
0x8a0: V778 = EXP 0x2 0xa0
0x8a1: V779 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8a2: V780 = AND 0xffffffffffffffffffffffffffffffffffffffff S12
0x8a3: V781 = CALLER
0x8a4: V782 = 0x1
0x8a6: V783 = 0xa0
0x8a8: V784 = 0x2
0x8aa: V785 = EXP 0x2 0xa0
0x8ab: V786 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ac: V787 = AND 0xffffffffffffffffffffffffffffffffffffffff V781
0x8ad: V788 = 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x8cf: V789 = 0x40
0x8d1: V790 = M[0x40]
0x8d4: M[V790] = S11
0x8d5: V791 = 0x20
0x8d7: V792 = ADD 0x20 V790
0x8d8: V793 = 0x40
0x8da: V794 = M[0x40]
0x8dd: V795 = SUB V792 V794
0x8df: LOG V794 V795 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16 V787 V780 V774
0x8e1: V796 = 0x1
0x8e9: JUMP {0x451, 0x485}
---
Entry stack: [V13, 0x1c3, S17, S16, S15, S14, {0x451, 0x485}, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 14
Stack additions: [0x1]
Exit stack: [V13, 0x1c3, S17, S16, S15, S14, 0x1]

================================

Block 0x8ea
[0x8ea:0x8f5]
---
Predecessors: [0x458, 0x48c, 0x6db]
Successors: [0x3a0]
---
0x8ea JUMPDEST
0x8eb PUSH1 0x0
0x8ed DUP3
0x8ee PUSH2 0x8f6
0x8f1 CALLER
0x8f2 PUSH2 0x3a0
0x8f5 JUMP
---
0x8ea: JUMPDEST 
0x8eb: V797 = 0x0
0x8ee: V798 = 0x8f6
0x8f1: V799 = CALLER
0x8f2: V800 = 0x3a0
0x8f5: JUMP 0x3a0
---
Entry stack: [V13, S9, S8, S7, S6, S5, S4, {0x451, 0x485, 0x6e6}, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, S1, 0x8f6, V799]
Exit stack: [V13, S9, S8, S7, S6, S5, S4, {0x451, 0x485, 0x6e6}, S2, S1, S0, 0x0, S1, 0x8f6, V799]

================================

Block 0x8f6
[0x8f6:0x8fc]
---
Predecessors: [0x3a0]
Successors: [0x8fd, 0x901]
---
0x8f6 JUMPDEST
0x8f7 LT
0x8f8 ISZERO
0x8f9 PUSH2 0x901
0x8fc JUMPI
---
0x8f6: JUMPDEST 
0x8f7: V801 = LT V341 S1
0x8f8: V802 = ISZERO V801
0x8f9: V803 = 0x901
0x8fc: JUMPI 0x901 V802
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V341]
Stack pops: 2
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x8fd
[0x8fd:0x900]
---
Predecessors: [0x8f6]
Successors: []
---
0x8fd PUSH1 0x0
0x8ff DUP1
0x900 REVERT
---
0x8fd: V804 = 0x0
0x900: REVERT 0x0 0x0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x901
[0x901:0x90c]
---
Predecessors: [0x8f6]
Successors: [0x3a0]
---
0x901 JUMPDEST
0x902 PUSH2 0x913
0x905 PUSH2 0x90d
0x908 CALLER
0x909 PUSH2 0x3a0
0x90c JUMP
---
0x901: JUMPDEST 
0x902: V805 = 0x913
0x905: V806 = 0x90d
0x908: V807 = CALLER
0x909: V808 = 0x3a0
0x90c: JUMP 0x3a0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: [0x913, 0x90d, V807]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x913, 0x90d, V807]

================================

Block 0x90d
[0x90d:0x912]
---
Predecessors: [0x3a0]
Successors: [0xa08]
---
0x90d JUMPDEST
0x90e DUP5
0x90f PUSH2 0xa08
0x912 JUMP
---
0x90d: JUMPDEST 
0x90f: V809 = 0xa08
0x912: JUMP 0xa08
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V341]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V341, S4]

================================

Block 0x913
[0x913:0x937]
---
Predecessors: [0xa17]
Successors: [0x3a0]
---
0x913 JUMPDEST
0x914 PUSH1 0x1
0x916 PUSH1 0xa0
0x918 PUSH1 0x2
0x91a EXP
0x91b SUB
0x91c CALLER
0x91d AND
0x91e PUSH1 0x0
0x920 SWAP1
0x921 DUP2
0x922 MSTORE
0x923 PUSH1 0x2
0x925 PUSH1 0x20
0x927 MSTORE
0x928 PUSH1 0x40
0x92a SWAP1
0x92b SHA3
0x92c SSTORE
0x92d PUSH2 0x93e
0x930 PUSH2 0x938
0x933 DUP6
0x934 PUSH2 0x3a0
0x937 JUMP
---
0x913: JUMPDEST 
0x914: V810 = 0x1
0x916: V811 = 0xa0
0x918: V812 = 0x2
0x91a: V813 = EXP 0x2 0xa0
0x91b: V814 = SUB 0x10000000000000000000000000000000000000000 0x1
0x91c: V815 = CALLER
0x91d: V816 = AND V815 0xffffffffffffffffffffffffffffffffffffffff
0x91e: V817 = 0x0
0x922: M[0x0] = V816
0x923: V818 = 0x2
0x925: V819 = 0x20
0x927: M[0x20] = 0x2
0x928: V820 = 0x40
0x92b: V821 = SHA3 0x0 0x40
0x92c: S[V821] = V896
0x92d: V822 = 0x93e
0x930: V823 = 0x938
0x934: V824 = 0x3a0
0x937: JUMP 0x3a0
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V896]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, 0x93e, 0x938, S4]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, 0x93e, 0x938, S4]

================================

Block 0x938
[0x938:0x93d]
---
Predecessors: [0x3a0]
Successors: [0xa1d]
---
0x938 JUMPDEST
0x939 DUP5
0x93a PUSH2 0xa1d
0x93d JUMP
---
0x938: JUMPDEST 
0x93a: V825 = 0xa1d
0x93d: JUMP 0xa1d
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V341]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V341, S4]

================================

Block 0x93e
[0x93e:0x96b]
---
Predecessors: [0xa30]
Successors: [0x96c]
---
0x93e JUMPDEST
0x93f PUSH1 0x1
0x941 PUSH1 0xa0
0x943 PUSH1 0x2
0x945 EXP
0x946 SUB
0x947 DUP6
0x948 AND
0x949 PUSH1 0x0
0x94b SWAP1
0x94c DUP2
0x94d MSTORE
0x94e PUSH1 0x2
0x950 PUSH1 0x20
0x952 MSTORE
0x953 PUSH1 0x40
0x955 SWAP1
0x956 DUP2
0x957 SWAP1
0x958 SHA3
0x959 SWAP2
0x95a SWAP1
0x95b SWAP2
0x95c SSTORE
0x95d DUP3
0x95e SWAP1
0x95f MLOAD
0x960 DUP1
0x961 DUP3
0x962 DUP1
0x963 MLOAD
0x964 SWAP1
0x965 PUSH1 0x20
0x967 ADD
0x968 SWAP1
0x969 DUP1
0x96a DUP4
0x96b DUP4
---
0x93e: JUMPDEST 
0x93f: V826 = 0x1
0x941: V827 = 0xa0
0x943: V828 = 0x2
0x945: V829 = EXP 0x2 0xa0
0x946: V830 = SUB 0x10000000000000000000000000000000000000000 0x1
0x948: V831 = AND S4 0xffffffffffffffffffffffffffffffffffffffff
0x949: V832 = 0x0
0x94d: M[0x0] = V831
0x94e: V833 = 0x2
0x950: V834 = 0x20
0x952: M[0x20] = 0x2
0x953: V835 = 0x40
0x958: V836 = SHA3 0x0 0x40
0x95c: S[V836] = V905
0x95f: V837 = M[0x40]
0x963: V838 = M[S2]
0x965: V839 = 0x20
0x967: V840 = ADD 0x20 S2
---
Entry stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V905]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S2, V837, V837, V840, V838, V838, V837, V840]
Exit stack: [V13, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S2, V837, V837, V840, V838, V838, V837, V840]

================================

Block 0x96c
[0x96c:0x974]
---
Predecessors: [0x93e, 0x975]
Successors: [0x975, 0x98b]
---
0x96c JUMPDEST
0x96d PUSH1 0x20
0x96f DUP4
0x970 LT
0x971 PUSH2 0x98b
0x974 JUMPI
---
0x96c: JUMPDEST 
0x96d: V841 = 0x20
0x970: V842 = LT S2 0x20
0x971: V843 = 0x98b
0x974: JUMPI 0x98b V842
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x975
[0x975:0x98a]
---
Predecessors: [0x96c]
Successors: [0x96c]
---
0x975 DUP1
0x976 MLOAD
0x977 DUP3
0x978 MSTORE
0x979 PUSH1 0x1f
0x97b NOT
0x97c SWAP1
0x97d SWAP3
0x97e ADD
0x97f SWAP2
0x980 PUSH1 0x20
0x982 SWAP2
0x983 DUP3
0x984 ADD
0x985 SWAP2
0x986 ADD
0x987 PUSH2 0x96c
0x98a JUMP
---
0x976: V844 = M[S0]
0x978: M[S1] = V844
0x979: V845 = 0x1f
0x97b: V846 = NOT 0x1f
0x97e: V847 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x980: V848 = 0x20
0x984: V849 = ADD 0x20 S1
0x986: V850 = ADD 0x20 S0
0x987: V851 = 0x96c
0x98a: JUMP 0x96c
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, {0x451, 0x485, 0x6e6}, S11, S10, S9, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V847, V849, V850]
Exit stack: [V13, S18, S17, S16, S15, S14, S13, {0x451, 0x485, 0x6e6}, S11, S10, S9, 0x0, S7, S6, S5, S4, S3, V847, V849, V850]

================================

Block 0x98b
[0x98b:0xa07]
---
Predecessors: [0x96c]
Successors: [0x451, 0x485, 0x6e6]
---
0x98b JUMPDEST
0x98c PUSH1 0x1
0x98e DUP4
0x98f PUSH1 0x20
0x991 SUB
0x992 PUSH2 0x100
0x995 EXP
0x996 SUB
0x997 DUP1
0x998 NOT
0x999 DUP3
0x99a MLOAD
0x99b AND
0x99c DUP2
0x99d DUP5
0x99e MLOAD
0x99f AND
0x9a0 OR
0x9a1 SWAP1
0x9a2 SWAP3
0x9a3 MSTORE
0x9a4 POP
0x9a5 POP
0x9a6 POP
0x9a7 SWAP2
0x9a8 SWAP1
0x9a9 SWAP2
0x9aa ADD
0x9ab SWAP3
0x9ac POP
0x9ad PUSH1 0x40
0x9af SWAP2
0x9b0 POP
0x9b1 POP
0x9b2 MLOAD
0x9b3 DUP1
0x9b4 SWAP2
0x9b5 SUB
0x9b6 SWAP1
0x9b7 SHA3
0x9b8 DUP5
0x9b9 PUSH1 0x1
0x9bb PUSH1 0xa0
0x9bd PUSH1 0x2
0x9bf EXP
0x9c0 SUB
0x9c1 AND
0x9c2 CALLER
0x9c3 PUSH1 0x1
0x9c5 PUSH1 0xa0
0x9c7 PUSH1 0x2
0x9c9 EXP
0x9ca SUB
0x9cb AND
0x9cc PUSH32 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x9ed DUP7
0x9ee PUSH1 0x40
0x9f0 MLOAD
0x9f1 SWAP1
0x9f2 DUP2
0x9f3 MSTORE
0x9f4 PUSH1 0x20
0x9f6 ADD
0x9f7 PUSH1 0x40
0x9f9 MLOAD
0x9fa DUP1
0x9fb SWAP2
0x9fc SUB
0x9fd SWAP1
0x9fe LOG4
0x9ff POP
0xa00 PUSH1 0x1
0xa02 SWAP4
0xa03 SWAP3
0xa04 POP
0xa05 POP
0xa06 POP
0xa07 JUMP
---
0x98b: JUMPDEST 
0x98c: V852 = 0x1
0x98f: V853 = 0x20
0x991: V854 = SUB 0x20 S2
0x992: V855 = 0x100
0x995: V856 = EXP 0x100 V854
0x996: V857 = SUB V856 0x1
0x998: V858 = NOT V857
0x99a: V859 = M[S0]
0x99b: V860 = AND V859 V858
0x99e: V861 = M[S1]
0x99f: V862 = AND V861 V857
0x9a0: V863 = OR V862 V860
0x9a3: M[S1] = V863
0x9aa: V864 = ADD S3 S5
0x9ad: V865 = 0x40
0x9b2: V866 = M[0x40]
0x9b5: V867 = SUB V864 V866
0x9b7: V868 = SHA3 V866 V867
0x9b9: V869 = 0x1
0x9bb: V870 = 0xa0
0x9bd: V871 = 0x2
0x9bf: V872 = EXP 0x2 0xa0
0x9c0: V873 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c1: V874 = AND 0xffffffffffffffffffffffffffffffffffffffff S11
0x9c2: V875 = CALLER
0x9c3: V876 = 0x1
0x9c5: V877 = 0xa0
0x9c7: V878 = 0x2
0x9c9: V879 = EXP 0x2 0xa0
0x9ca: V880 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9cb: V881 = AND 0xffffffffffffffffffffffffffffffffffffffff V875
0x9cc: V882 = 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16
0x9ee: V883 = 0x40
0x9f0: V884 = M[0x40]
0x9f3: M[V884] = S10
0x9f4: V885 = 0x20
0x9f6: V886 = ADD 0x20 V884
0x9f7: V887 = 0x40
0x9f9: V888 = M[0x40]
0x9fc: V889 = SUB V886 V888
0x9fe: LOG V888 V889 0xe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16 V881 V874 V868
0xa00: V890 = 0x1
0xa07: JUMP {0x451, 0x485, 0x6e6}
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, {0x451, 0x485, 0x6e6}, S11, S10, S9, 0x0, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 13
Stack additions: [0x1]
Exit stack: [V13, S18, S17, S16, S15, S14, S13, 0x1]

================================

Block 0xa08
[0xa08:0xa12]
---
Predecessors: [0x4cf, 0x90d]
Successors: [0xa13, 0xa17]
---
0xa08 JUMPDEST
0xa09 PUSH1 0x0
0xa0b DUP2
0xa0c DUP4
0xa0d LT
0xa0e ISZERO
0xa0f PUSH2 0xa17
0xa12 JUMPI
---
0xa08: JUMPDEST 
0xa09: V891 = 0x0
0xa0d: V892 = LT V341 S0
0xa0e: V893 = ISZERO V892
0xa0f: V894 = 0xa17
0xa12: JUMPI 0xa17 V893
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V341, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V341, S0, 0x0]

================================

Block 0xa13
[0xa13:0xa16]
---
Predecessors: [0xa08]
Successors: []
---
0xa13 PUSH1 0x0
0xa15 DUP1
0xa16 REVERT
---
0xa13: V895 = 0x0
0xa16: REVERT 0x0 0x0
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, {0x4d5, 0x71d, 0x913}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, {0x4d5, 0x71d, 0x913}, S2, S1, 0x0]

================================

Block 0xa17
[0xa17:0xa1c]
---
Predecessors: [0xa08]
Successors: [0x4d5, 0x71d, 0x913]
---
0xa17 JUMPDEST
0xa18 POP
0xa19 SWAP1
0xa1a SUB
0xa1b SWAP1
0xa1c JUMP
---
0xa17: JUMPDEST 
0xa1a: V896 = SUB S2 S1
0xa1c: JUMP {0x4d5, 0x71d, 0x913}
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, {0x4d5, 0x71d, 0x913}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V896]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V896]

================================

Block 0xa1d
[0xa1d:0xa2b]
---
Predecessors: [0x4fa, 0x938]
Successors: [0xa2c, 0xa30]
---
0xa1d JUMPDEST
0xa1e PUSH1 0x0
0xa20 DUP2
0xa21 PUSH1 0x0
0xa23 NOT
0xa24 SUB
0xa25 DUP4
0xa26 GT
0xa27 ISZERO
0xa28 PUSH2 0xa30
0xa2b JUMPI
---
0xa1d: JUMPDEST 
0xa1e: V897 = 0x0
0xa21: V898 = 0x0
0xa23: V899 = NOT 0x0
0xa24: V900 = SUB 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff S0
0xa26: V901 = GT V341 V900
0xa27: V902 = ISZERO V901
0xa28: V903 = 0xa30
0xa2b: JUMPI 0xa30 V902
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V341, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V341, S0, 0x0]

================================

Block 0xa2c
[0xa2c:0xa2f]
---
Predecessors: [0xa1d]
Successors: []
---
0xa2c PUSH1 0x0
0xa2e DUP1
0xa2f REVERT
---
0xa2c: V904 = 0x0
0xa2f: REVERT 0x0 0x0
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, {0x500, 0x742, 0x93e}, S2, S1, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, {0x500, 0x742, 0x93e}, S2, S1, 0x0]

================================

Block 0xa30
[0xa30:0xa34]
---
Predecessors: [0xa1d]
Successors: [0x500, 0x742, 0x93e]
---
0xa30 JUMPDEST
0xa31 POP
0xa32 ADD
0xa33 SWAP1
0xa34 JUMP
---
0xa30: JUMPDEST 
0xa32: V905 = ADD S1 S2
0xa34: JUMP {0x500, 0x742, 0x93e}
---
Entry stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, {0x500, 0x742, 0x93e}, S2, S1, 0x0]
Stack pops: 4
Stack additions: [V905]
Exit stack: [V13, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, 0x0, V905]

================================

Block 0xa35
[0xa35:0xa46]
---
Predecessors: [0x2e3, 0x3bb, 0x42e]
Successors: [0x2eb, 0x3c3, 0x438]
---
0xa35 JUMPDEST
0xa36 PUSH1 0x20
0xa38 PUSH1 0x40
0xa3a MLOAD
0xa3b SWAP1
0xa3c DUP2
0xa3d ADD
0xa3e PUSH1 0x40
0xa40 MSTORE
0xa41 PUSH1 0x0
0xa43 DUP2
0xa44 MSTORE
0xa45 SWAP1
0xa46 JUMP
---
0xa35: JUMPDEST 
0xa36: V906 = 0x20
0xa38: V907 = 0x40
0xa3a: V908 = M[0x40]
0xa3d: V909 = ADD V908 0x20
0xa3e: V910 = 0x40
0xa40: M[0x40] = V909
0xa41: V911 = 0x0
0xa44: M[V908] = 0x0
0xa46: JUMP {0x2eb, 0x3c3, 0x438}
---
Entry stack: [V13, 0x1c3, V154, S2, {0x0, 0x97}, {0x2eb, 0x3c3, 0x438}]
Stack pops: 1
Stack additions: [V908]
Exit stack: [V13, 0x1c3, V154, S2, {0x0, 0x97}, V908]

================================

Block 0xa47
[0xa47:0xa79]
---
Predecessors: []
Successors: []
---
0xa47 STOP
0xa48 LOG1
0xa49 PUSH6 0x627a7a723058
0xa50 SHA3
0xa51 DUP16
0xa52 MISSING 0x49
0xa53 MISSING 0x46
0xa54 CREATE
0xa55 CALLDATACOPY
0xa56 MISSING 0xe
0xa57 SWAP4
0xa58 MISSING 0x5f
0xa59 PUSH32 0xaa6393af661908f5db440e07ac9dc872c4b3331005589d0029
---
0xa47: STOP 
0xa48: LOG S0 S1 S2
0xa49: V912 = 0x627a7a723058
0xa50: V913 = SHA3 0x627a7a723058 S3
0xa52: MISSING 0x49
0xa53: MISSING 0x46
0xa54: V914 = CREATE S0 S1 S2
0xa55: CALLDATACOPY V914 S3 S4
0xa56: MISSING 0xe
0xa58: MISSING 0x5f
0xa59: V915 = 0xaa6393af661908f5db440e07ac9dc872c4b3331005589d0029
---
Entry stack: []
Stack pops: 0
Stack additions: [S18, V913, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S4, S1, S2, S3, S0, 0xaa6393af661908f5db440e07ac9dc872c4b3331005589d0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x84
Exit block: 0x100
Body: 0x84, 0x8b, 0x8f, 0x97, 0xbb, 0xc4, 0xd3, 0xe7, 0x100, 0x2e3, 0x2eb, 0x33b, 0x343, 0x356, 0x364, 0x378, 0x381

Function 1:
Public function signature: 0x18160ddd
Entry block: 0x10e
Exit block: 0x121
Body: 0x10e, 0x115, 0x119, 0x121, 0x38b

Function 2:
Public function signature: 0x313ce567
Entry block: 0x133
Exit block: 0x146
Body: 0x133, 0x13a, 0x13e, 0x146, 0x391

Function 3:
Public function signature: 0x33a581d2
Entry block: 0x15c
Exit block: 0x121
Body: 0x121, 0x15c, 0x163, 0x167, 0x39a

Function 4:
Public function signature: 0x70a08231
Entry block: 0x16f
Exit block: 0x121
Body: 0x121, 0x16f, 0x176, 0x17a

Function 5:
Public function signature: 0x95d89b41
Entry block: 0x18e
Exit block: 0x100
Body: 0x97, 0xbb, 0xc4, 0xd3, 0xe7, 0x100, 0x18e, 0x195, 0x199, 0x356, 0x364, 0x378, 0x381, 0x3bb, 0x3c3, 0x413, 0x41b

Function 6:
Public function signature: 0xa9059cbb
Entry block: 0x1a1
Exit block: 0x1c3
Body: 0x1a1, 0x1a8, 0x1ac, 0x1c3, 0x42e, 0x438, 0x441, 0x447, 0x451, 0x458, 0x463, 0x475, 0x47b, 0x485, 0x48c, 0x497, 0x4a9, 0x4af, 0x4b8, 0x4bf, 0x4c3, 0x4cf, 0x6db, 0x6e6, 0x6f1

Function 7:
Public function signature: 0xbe45fd62
Entry block: 0x1d7
Exit block: 0x1c3
Body: 0x1c3, 0x1d7, 0x1de, 0x1e2, 0x46a, 0x475, 0x47b, 0x485, 0x48c, 0x497

Function 8:
Public function signature: 0xf6368f8a
Entry block: 0x23c
Exit block: 0x1c3
Body: 0x1c3, 0x23c, 0x243, 0x247, 0x49e, 0x4a9, 0x4af, 0x4b8, 0x4bf, 0x4c3, 0x4cf, 0x6db, 0x6e6

Function 9:
Public fallback function
Entry block: 0x7f
Exit block: 0x7f
Body: 0x7f

Function 10:
Private function
Entry block: 0x8ea
Exit block: 0x98b
Body: 0x4d5, 0x4fa, 0x500, 0x52f, 0x538, 0x54e, 0x5c7, 0x5d0, 0x5df, 0x5f3, 0x60c, 0x630, 0x641, 0x64a, 0x660, 0x6e9, 0x71d, 0x742, 0x7c3, 0x7cc, 0x7db, 0x7ef, 0x808, 0x828, 0x839, 0x84d, 0x856, 0x86c, 0x8ea, 0x8f6, 0x901, 0x90d, 0x913, 0x938, 0x93e, 0x96c, 0x975, 0x98b, 0xa08, 0xa17, 0xa1d, 0xa30

Function 11:
Private function
Entry block: 0x6f9
Exit block: 0x98b
Body: 0x4cf, 0x4d5, 0x4fa, 0x500, 0x52f, 0x538, 0x54e, 0x5c7, 0x5d0, 0x5df, 0x5f3, 0x60c, 0x630, 0x641, 0x64a, 0x660, 0x6e6, 0x6e9, 0x6f9, 0x706, 0x711, 0x71d, 0x742, 0x7c3, 0x7cc, 0x7db, 0x7ef, 0x808, 0x828, 0x839, 0x84d, 0x856, 0x86c, 0x913, 0x938, 0x93e, 0x96c, 0x975, 0x98b, 0xa08, 0xa17, 0xa1d, 0xa30

