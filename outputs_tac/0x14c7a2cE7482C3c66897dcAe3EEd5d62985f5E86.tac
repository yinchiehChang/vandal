Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xd8]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xd8
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xd8
0xa: JUMPI 0xd8 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x1be]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x6fdde03
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x1be
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x6fdde03
0x39: V12 = EQ V10 0x6fdde03
0x3a: V13 = 0x1be
0x3d: JUMPI 0x1be V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x24e]
---
0x3e DUP1
0x3f PUSH4 0x95ea7b3
0x44 EQ
0x45 PUSH2 0x24e
0x48 JUMPI
---
0x3f: V14 = 0x95ea7b3
0x44: V15 = EQ 0x95ea7b3 V10
0x45: V16 = 0x24e
0x48: JUMPI 0x24e V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x281]
---
0x49 DUP1
0x4a PUSH4 0xdcf4b8f
0x4f EQ
0x50 PUSH2 0x281
0x53 JUMPI
---
0x4a: V17 = 0xdcf4b8f
0x4f: V18 = EQ 0xdcf4b8f V10
0x50: V19 = 0x281
0x53: JUMPI 0x281 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x2a3]
---
0x54 DUP1
0x55 PUSH4 0x18160ddd
0x5a EQ
0x5b PUSH2 0x2a3
0x5e JUMPI
---
0x55: V20 = 0x18160ddd
0x5a: V21 = EQ 0x18160ddd V10
0x5b: V22 = 0x2a3
0x5e: JUMPI 0x2a3 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x2c5]
---
0x5f DUP1
0x60 PUSH4 0x23b872dd
0x65 EQ
0x66 PUSH2 0x2c5
0x69 JUMPI
---
0x60: V23 = 0x23b872dd
0x65: V24 = EQ 0x23b872dd V10
0x66: V25 = 0x2c5
0x69: JUMPI 0x2c5 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x2fe]
---
0x6a DUP1
0x6b PUSH4 0x313ce567
0x70 EQ
0x71 PUSH2 0x2fe
0x74 JUMPI
---
0x6b: V26 = 0x313ce567
0x70: V27 = EQ 0x313ce567 V10
0x71: V28 = 0x2fe
0x74: JUMPI 0x2fe V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x324]
---
0x75 DUP1
0x76 PUSH4 0x64acdb77
0x7b EQ
0x7c PUSH2 0x324
0x7f JUMPI
---
0x76: V29 = 0x64acdb77
0x7b: V30 = EQ 0x64acdb77 V10
0x7c: V31 = 0x324
0x7f: JUMPI 0x324 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x336]
---
0x80 DUP1
0x81 PUSH4 0x70a08231
0x86 EQ
0x87 PUSH2 0x336
0x8a JUMPI
---
0x81: V32 = 0x70a08231
0x86: V33 = EQ 0x70a08231 V10
0x87: V34 = 0x336
0x8a: JUMPI 0x336 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x364]
---
0x8b DUP1
0x8c PUSH4 0x8f580996
0x91 EQ
0x92 PUSH2 0x364
0x95 JUMPI
---
0x8c: V35 = 0x8f580996
0x91: V36 = EQ 0x8f580996 V10
0x92: V37 = 0x364
0x95: JUMPI 0x364 V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x376]
---
0x96 DUP1
0x97 PUSH4 0x95d89b41
0x9c EQ
0x9d PUSH2 0x376
0xa0 JUMPI
---
0x97: V38 = 0x95d89b41
0x9c: V39 = EQ 0x95d89b41 V10
0x9d: V40 = 0x376
0xa0: JUMPI 0x376 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x406]
---
0xa1 DUP1
0xa2 PUSH4 0x9ee484ce
0xa7 EQ
0xa8 PUSH2 0x406
0xab JUMPI
---
0xa2: V41 = 0x9ee484ce
0xa7: V42 = EQ 0x9ee484ce V10
0xa8: V43 = 0x406
0xab: JUMPI 0x406 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x436]
---
0xac DUP1
0xad PUSH4 0xa9059cbb
0xb2 EQ
0xb3 PUSH2 0x436
0xb6 JUMPI
---
0xad: V44 = 0xa9059cbb
0xb2: V45 = EQ 0xa9059cbb V10
0xb3: V46 = 0x436
0xb6: JUMPI 0x436 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x469]
---
0xb7 DUP1
0xb8 PUSH4 0xc59d4847
0xbd EQ
0xbe PUSH2 0x469
0xc1 JUMPI
---
0xb8: V47 = 0xc59d4847
0xbd: V48 = EQ 0xc59d4847 V10
0xbe: V49 = 0x469
0xc1: JUMPI 0x469 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x499]
---
0xc2 DUP1
0xc3 PUSH4 0xda040c0f
0xc8 EQ
0xc9 PUSH2 0x499
0xcc JUMPI
---
0xc3: V50 = 0xda040c0f
0xc8: V51 = EQ 0xda040c0f V10
0xc9: V52 = 0x499
0xcc: JUMPI 0x499 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x4bd]
---
0xcd DUP1
0xce PUSH4 0xdd62ed3e
0xd3 EQ
0xd4 PUSH2 0x4bd
0xd7 JUMPI
---
0xce: V53 = 0xdd62ed3e
0xd3: V54 = EQ 0xdd62ed3e V10
0xd4: V55 = 0x4bd
0xd7: JUMPI 0x4bd V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xdb]
---
Predecessors: [0x0, 0xcd]
Successors: [0xdc]
---
0xd8 JUMPDEST
0xd9 PUSH2 0x1bc
---
0xd8: JUMPDEST 
0xd9: V56 = 0x1bc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1bc]
Exit stack: [V10, 0x1bc]

================================

Block 0xdc
[0xdc:0xf0]
---
Predecessors: [0xd8]
Successors: [0xf1, 0xf6]
---
0xdc JUMPDEST
0xdd PUSH1 0x0
0xdf DUP1
0xe0 SLOAD
0xe1 PUSH1 0xa0
0xe3 PUSH1 0x2
0xe5 EXP
0xe6 SWAP1
0xe7 DIV
0xe8 PUSH1 0xff
0xea AND
0xeb ISZERO
0xec ISZERO
0xed PUSH2 0xf6
0xf0 JUMPI
---
0xdc: JUMPDEST 
0xdd: V57 = 0x0
0xe0: V58 = S[0x0]
0xe1: V59 = 0xa0
0xe3: V60 = 0x2
0xe5: V61 = EXP 0x2 0xa0
0xe7: V62 = DIV V58 0x10000000000000000000000000000000000000000
0xe8: V63 = 0xff
0xea: V64 = AND 0xff V62
0xeb: V65 = ISZERO V64
0xec: V66 = ISZERO V65
0xed: V67 = 0xf6
0xf0: JUMPI 0xf6 V66
---
Entry stack: [V10, 0x1bc]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x1bc, 0x0]

================================

Block 0xf1
[0xf1:0xf5]
---
Predecessors: [0xdc]
Successors: []
---
0xf1 PUSH1 0x0
0xf3 PUSH1 0x0
0xf5 REVERT
---
0xf1: V68 = 0x0
0xf3: V69 = 0x0
0xf5: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1bc, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1bc, 0x0]

================================

Block 0xf6
[0xf6:0xfd]
---
Predecessors: [0xdc]
Successors: [0xfe, 0x102]
---
0xf6 JUMPDEST
0xf7 CALLVALUE
0xf8 ISZERO
0xf9 ISZERO
0xfa PUSH2 0x102
0xfd JUMPI
---
0xf6: JUMPDEST 
0xf7: V70 = CALLVALUE
0xf8: V71 = ISZERO V70
0xf9: V72 = ISZERO V71
0xfa: V73 = 0x102
0xfd: JUMPI 0x102 V72
---
Entry stack: [V10, 0x1bc, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1bc, 0x0]

================================

Block 0xfe
[0xfe:0x101]
---
Predecessors: [0xf6]
Successors: [0x1b9]
---
0xfe PUSH2 0x1b9
0x101 JUMP
---
0xfe: V74 = 0x1b9
0x101: JUMP 0x1b9
---
Entry stack: [V10, 0x1bc, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1bc, 0x0]

================================

Block 0x102
[0x102:0x131]
---
Predecessors: [0xf6]
Successors: [0x132, 0x133]
---
0x102 JUMPDEST
0x103 PUSH1 0x0
0x105 DUP1
0x106 SLOAD
0x107 PUSH1 0x40
0x109 MLOAD
0x10a PUSH1 0x1
0x10c PUSH1 0xa0
0x10e PUSH1 0x2
0x110 EXP
0x111 SUB
0x112 SWAP1
0x113 SWAP2
0x114 AND
0x115 SWAP2
0x116 CALLVALUE
0x117 DUP1
0x118 ISZERO
0x119 PUSH2 0x8fc
0x11c MUL
0x11d SWAP3
0x11e SWAP1
0x11f SWAP2
0x120 DUP2
0x121 DUP2
0x122 DUP2
0x123 DUP6
0x124 DUP9
0x125 DUP9
0x126 CALL
0x127 SWAP4
0x128 POP
0x129 POP
0x12a POP
0x12b POP
0x12c ISZERO
0x12d ISZERO
0x12e PUSH2 0x133
0x131 JUMPI
---
0x102: JUMPDEST 
0x103: V75 = 0x0
0x106: V76 = S[0x0]
0x107: V77 = 0x40
0x109: V78 = M[0x40]
0x10a: V79 = 0x1
0x10c: V80 = 0xa0
0x10e: V81 = 0x2
0x110: V82 = EXP 0x2 0xa0
0x111: V83 = SUB 0x10000000000000000000000000000000000000000 0x1
0x114: V84 = AND V76 0xffffffffffffffffffffffffffffffffffffffff
0x116: V85 = CALLVALUE
0x118: V86 = ISZERO V85
0x119: V87 = 0x8fc
0x11c: V88 = MUL 0x8fc V86
0x126: V89 = CALL V88 V84 V85 V78 0x0 V78 0x0
0x12c: V90 = ISZERO V89
0x12d: V91 = ISZERO V90
0x12e: V92 = 0x133
0x131: JUMPI 0x133 V91
---
Entry stack: [V10, 0x1bc, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1bc, 0x0]

================================

Block 0x132
[0x132:0x132]
---
Predecessors: [0x102]
Successors: []
---
0x132 INVALID
---
0x132: INVALID 
---
Entry stack: [V10, 0x1bc, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1bc, 0x0]

================================

Block 0x133
[0x133:0x152]
---
Predecessors: [0x102]
Successors: [0x153, 0x157]
---
0x133 JUMPDEST
0x134 POP
0x135 PUSH1 0x3
0x137 DUP1
0x138 SLOAD
0x139 CALLVALUE
0x13a SWAP1
0x13b DUP2
0x13c ADD
0x13d SWAP1
0x13e SWAP2
0x13f SSTORE
0x140 PUSH1 0xd
0x142 DUP2
0x143 MUL
0x144 SWAP1
0x145 PUSH7 0x2386f26fc10000
0x14d SWAP1
0x14e LT
0x14f PUSH2 0x157
0x152 JUMPI
---
0x133: JUMPDEST 
0x135: V93 = 0x3
0x138: V94 = S[0x3]
0x139: V95 = CALLVALUE
0x13c: V96 = ADD V95 V94
0x13f: S[0x3] = V96
0x140: V97 = 0xd
0x143: V98 = MUL V95 0xd
0x145: V99 = 0x2386f26fc10000
0x14e: V100 = LT V95 0x2386f26fc10000
0x14f: V101 = 0x157
0x152: JUMPI 0x157 V100
---
Entry stack: [V10, 0x1bc, 0x0]
Stack pops: 1
Stack additions: [V98]
Exit stack: [V10, 0x1bc, V98]

================================

Block 0x153
[0x153:0x156]
---
Predecessors: [0x133]
Successors: [0x157]
---
0x153 PUSH1 0x3
0x155 SLOAD
0x156 ADD
---
0x153: V102 = 0x3
0x155: V103 = S[0x3]
0x156: V104 = ADD V103 V98
---
Entry stack: [V10, 0x1bc, V98]
Stack pops: 1
Stack additions: [V104]
Exit stack: [V10, 0x1bc, V104]

================================

Block 0x157
[0x157:0x1b8]
---
Predecessors: [0x133, 0x153]
Successors: [0x1b9]
---
0x157 JUMPDEST
0x158 PUSH1 0x4
0x15a DUP1
0x15b SLOAD
0x15c DUP3
0x15d ADD
0x15e SWAP1
0x15f SSTORE
0x160 PUSH1 0x1
0x162 PUSH1 0xa0
0x164 PUSH1 0x2
0x166 EXP
0x167 SUB
0x168 CALLER
0x169 DUP2
0x16a AND
0x16b PUSH1 0x0
0x16d DUP2
0x16e DUP2
0x16f MSTORE
0x170 PUSH1 0x1
0x172 PUSH1 0x20
0x174 SWAP1
0x175 DUP2
0x176 MSTORE
0x177 PUSH1 0x40
0x179 SWAP2
0x17a DUP3
0x17b SWAP1
0x17c SHA3
0x17d DUP1
0x17e SLOAD
0x17f DUP7
0x180 ADD
0x181 SWAP1
0x182 SSTORE
0x183 DUP2
0x184 MLOAD
0x185 DUP6
0x186 DUP2
0x187 MSTORE
0x188 SWAP2
0x189 MLOAD
0x18a SWAP3
0x18b SWAP4
0x18c ADDRESS
0x18d AND
0x18e SWAP3
0x18f PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1b0 SWAP3
0x1b1 DUP2
0x1b2 SWAP1
0x1b3 SUB
0x1b4 SWAP1
0x1b5 SWAP2
0x1b6 ADD
0x1b7 SWAP1
0x1b8 LOG3
---
0x157: JUMPDEST 
0x158: V105 = 0x4
0x15b: V106 = S[0x4]
0x15d: V107 = ADD S0 V106
0x15f: S[0x4] = V107
0x160: V108 = 0x1
0x162: V109 = 0xa0
0x164: V110 = 0x2
0x166: V111 = EXP 0x2 0xa0
0x167: V112 = SUB 0x10000000000000000000000000000000000000000 0x1
0x168: V113 = CALLER
0x16a: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x16b: V115 = 0x0
0x16f: M[0x0] = V114
0x170: V116 = 0x1
0x172: V117 = 0x20
0x176: M[0x20] = 0x1
0x177: V118 = 0x40
0x17c: V119 = SHA3 0x0 0x40
0x17e: V120 = S[V119]
0x180: V121 = ADD S0 V120
0x182: S[V119] = V121
0x184: V122 = M[0x40]
0x187: M[V122] = S0
0x189: V123 = M[0x40]
0x18c: V124 = ADDRESS
0x18d: V125 = AND V124 0xffffffffffffffffffffffffffffffffffffffff
0x18f: V126 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1b3: V127 = SUB V122 V123
0x1b6: V128 = ADD 0x20 V127
0x1b8: LOG V123 V128 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V125 V114
---
Entry stack: [V10, 0x1bc, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1bc, S0]

================================

Block 0x1b9
[0x1b9:0x1bb]
---
Predecessors: [0xfe, 0x157]
Successors: [0x1bc]
---
0x1b9 JUMPDEST
0x1ba POP
0x1bb JUMP
---
0x1b9: JUMPDEST 
0x1bb: JUMP 0x1bc
---
Entry stack: [V10, 0x1bc, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x1bc
[0x1bc:0x1bd]
---
Predecessors: [0x1b9, 0x758, 0x7ba]
Successors: []
---
0x1bc JUMPDEST
0x1bd STOP
---
0x1bc: JUMPDEST 
0x1bd: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1be
[0x1be:0x1c4]
---
Predecessors: [0xb]
Successors: [0x1c5, 0x1c6]
---
0x1be JUMPDEST
0x1bf CALLVALUE
0x1c0 ISZERO
0x1c1 PUSH2 0x1c6
0x1c4 JUMPI
---
0x1be: JUMPDEST 
0x1bf: V129 = CALLVALUE
0x1c0: V130 = ISZERO V129
0x1c1: V131 = 0x1c6
0x1c4: JUMPI 0x1c6 V130
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c5
[0x1c5:0x1c5]
---
Predecessors: [0x1be]
Successors: []
---
0x1c5 INVALID
---
0x1c5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1c6
[0x1c6:0x1cd]
---
Predecessors: [0x1be]
Successors: [0x4f1]
---
0x1c6 JUMPDEST
0x1c7 PUSH2 0x1ce
0x1ca PUSH2 0x4f1
0x1cd JUMP
---
0x1c6: JUMPDEST 
0x1c7: V132 = 0x1ce
0x1ca: V133 = 0x4f1
0x1cd: JUMP 0x4f1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ce]
Exit stack: [V10, 0x1ce]

================================

Block 0x1ce
[0x1ce:0x1f3]
---
Predecessors: [0x52f, 0x7fa]
Successors: [0x1f4, 0x214]
---
0x1ce JUMPDEST
0x1cf PUSH1 0x40
0x1d1 DUP1
0x1d2 MLOAD
0x1d3 PUSH1 0x20
0x1d5 DUP1
0x1d6 DUP3
0x1d7 MSTORE
0x1d8 DUP4
0x1d9 MLOAD
0x1da DUP2
0x1db DUP4
0x1dc ADD
0x1dd MSTORE
0x1de DUP4
0x1df MLOAD
0x1e0 SWAP2
0x1e1 SWAP3
0x1e2 DUP4
0x1e3 SWAP3
0x1e4 SWAP1
0x1e5 DUP4
0x1e6 ADD
0x1e7 SWAP2
0x1e8 DUP6
0x1e9 ADD
0x1ea SWAP1
0x1eb DUP1
0x1ec DUP4
0x1ed DUP4
0x1ee DUP3
0x1ef ISZERO
0x1f0 PUSH2 0x214
0x1f3 JUMPI
---
0x1ce: JUMPDEST 
0x1cf: V134 = 0x40
0x1d2: V135 = M[0x40]
0x1d3: V136 = 0x20
0x1d7: M[V135] = 0x20
0x1d9: V137 = M[S0]
0x1dc: V138 = ADD V135 0x20
0x1dd: M[V138] = V137
0x1df: V139 = M[S0]
0x1e6: V140 = ADD V135 0x40
0x1e9: V141 = ADD S0 0x20
0x1ef: V142 = ISZERO V139
0x1f0: V143 = 0x214
0x1f3: JUMPI 0x214 V142
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [S0, V135, V135, V140, V141, V139, V139, V140, V141]
Exit stack: [V10, S0, V135, V135, V140, V141, V139, V139, V140, V141]

================================

Block 0x1f4
[0x1f4:0x201]
---
Predecessors: [0x1ce, 0x202, 0x3ba]
Successors: [0x202, 0x214]
---
0x1f4 JUMPDEST
0x1f5 DUP1
0x1f6 MLOAD
0x1f7 DUP3
0x1f8 MSTORE
0x1f9 PUSH1 0x20
0x1fb DUP4
0x1fc GT
0x1fd ISZERO
0x1fe PUSH2 0x214
0x201 JUMPI
---
0x1f4: JUMPDEST 
0x1f6: V144 = M[S0]
0x1f8: M[S1] = V144
0x1f9: V145 = 0x20
0x1fc: V146 = GT S2 0x20
0x1fd: V147 = ISZERO V146
0x1fe: V148 = 0x214
0x201: JUMPI 0x214 V147
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x202
[0x202:0x213]
---
Predecessors: [0x1f4]
Successors: [0x1f4]
---
0x202 PUSH1 0x1f
0x204 NOT
0x205 SWAP1
0x206 SWAP3
0x207 ADD
0x208 SWAP2
0x209 PUSH1 0x20
0x20b SWAP2
0x20c DUP3
0x20d ADD
0x20e SWAP2
0x20f ADD
0x210 PUSH2 0x1f4
0x213 JUMP
---
0x202: V149 = 0x1f
0x204: V150 = NOT 0x1f
0x207: V151 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x209: V152 = 0x20
0x20d: V153 = ADD 0x20 S1
0x20f: V154 = ADD 0x20 S0
0x210: V155 = 0x1f4
0x213: JUMP 0x1f4
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V151, V153, V154]
Exit stack: [V10, S8, S7, S6, S5, S4, S3, V151, V153, V154]

================================

Block 0x214
[0x214:0x226]
---
Predecessors: [0x1ce, 0x1f4, 0x386, 0x3ac]
Successors: [0x227, 0x240]
---
0x214 JUMPDEST
0x215 POP
0x216 POP
0x217 POP
0x218 SWAP1
0x219 POP
0x21a SWAP1
0x21b DUP2
0x21c ADD
0x21d SWAP1
0x21e PUSH1 0x1f
0x220 AND
0x221 DUP1
0x222 ISZERO
0x223 PUSH2 0x240
0x226 JUMPI
---
0x214: JUMPDEST 
0x21c: V156 = ADD S3 S5
0x21e: V157 = 0x1f
0x220: V158 = AND 0x1f S3
0x222: V159 = ISZERO V158
0x223: V160 = 0x240
0x226: JUMPI 0x240 V159
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V156, V158]
Exit stack: [V10, S8, S7, S6, V156, V158]

================================

Block 0x227
[0x227:0x23f]
---
Predecessors: [0x214]
Successors: [0x240]
---
0x227 DUP1
0x228 DUP3
0x229 SUB
0x22a DUP1
0x22b MLOAD
0x22c PUSH1 0x1
0x22e DUP4
0x22f PUSH1 0x20
0x231 SUB
0x232 PUSH2 0x100
0x235 EXP
0x236 SUB
0x237 NOT
0x238 AND
0x239 DUP2
0x23a MSTORE
0x23b PUSH1 0x20
0x23d ADD
0x23e SWAP2
0x23f POP
---
0x229: V161 = SUB V156 V158
0x22b: V162 = M[V161]
0x22c: V163 = 0x1
0x22f: V164 = 0x20
0x231: V165 = SUB 0x20 V158
0x232: V166 = 0x100
0x235: V167 = EXP 0x100 V165
0x236: V168 = SUB V167 0x1
0x237: V169 = NOT V168
0x238: V170 = AND V169 V162
0x23a: M[V161] = V170
0x23b: V171 = 0x20
0x23d: V172 = ADD 0x20 V161
---
Entry stack: [V10, S4, S3, S2, V156, V158]
Stack pops: 2
Stack additions: [V172, S0]
Exit stack: [V10, S4, S3, S2, V172, V158]

================================

Block 0x240
[0x240:0x24d]
---
Predecessors: [0x214, 0x227, 0x3cc]
Successors: []
---
0x240 JUMPDEST
0x241 POP
0x242 SWAP3
0x243 POP
0x244 POP
0x245 POP
0x246 PUSH1 0x40
0x248 MLOAD
0x249 DUP1
0x24a SWAP2
0x24b SUB
0x24c SWAP1
0x24d RETURN
---
0x240: JUMPDEST 
0x246: V173 = 0x40
0x248: V174 = M[0x40]
0x24b: V175 = SUB S1 V174
0x24d: RETURN V174 V175
---
Entry stack: [V10, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x24e
[0x24e:0x254]
---
Predecessors: [0x3e]
Successors: [0x255, 0x256]
---
0x24e JUMPDEST
0x24f CALLVALUE
0x250 ISZERO
0x251 PUSH2 0x256
0x254 JUMPI
---
0x24e: JUMPDEST 
0x24f: V176 = CALLVALUE
0x250: V177 = ISZERO V176
0x251: V178 = 0x256
0x254: JUMPI 0x256 V177
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x255
[0x255:0x255]
---
Predecessors: [0x24e]
Successors: []
---
0x255 INVALID
---
0x255: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x256
[0x256:0x26c]
---
Predecessors: [0x24e]
Successors: [0x532]
---
0x256 JUMPDEST
0x257 PUSH2 0x26d
0x25a PUSH1 0x1
0x25c PUSH1 0xa0
0x25e PUSH1 0x2
0x260 EXP
0x261 SUB
0x262 PUSH1 0x4
0x264 CALLDATALOAD
0x265 AND
0x266 PUSH1 0x24
0x268 CALLDATALOAD
0x269 PUSH2 0x532
0x26c JUMP
---
0x256: JUMPDEST 
0x257: V179 = 0x26d
0x25a: V180 = 0x1
0x25c: V181 = 0xa0
0x25e: V182 = 0x2
0x260: V183 = EXP 0x2 0xa0
0x261: V184 = SUB 0x10000000000000000000000000000000000000000 0x1
0x262: V185 = 0x4
0x264: V186 = CALLDATALOAD 0x4
0x265: V187 = AND V186 0xffffffffffffffffffffffffffffffffffffffff
0x266: V188 = 0x24
0x268: V189 = CALLDATALOAD 0x24
0x269: V190 = 0x532
0x26c: JUMP 0x532
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x26d, V187, V189]
Exit stack: [V10, 0x26d, V187, V189]

================================

Block 0x26d
[0x26d:0x280]
---
Predecessors: [0x5d5, 0x70b, 0x93a, 0xa1b, 0xa3d]
Successors: []
---
0x26d JUMPDEST
0x26e PUSH1 0x40
0x270 DUP1
0x271 MLOAD
0x272 SWAP2
0x273 ISZERO
0x274 ISZERO
0x275 DUP3
0x276 MSTORE
0x277 MLOAD
0x278 SWAP1
0x279 DUP2
0x27a SWAP1
0x27b SUB
0x27c PUSH1 0x20
0x27e ADD
0x27f SWAP1
0x280 RETURN
---
0x26d: JUMPDEST 
0x26e: V191 = 0x40
0x271: V192 = M[0x40]
0x273: V193 = ISZERO S0
0x274: V194 = ISZERO V193
0x276: M[V192] = V194
0x277: V195 = M[0x40]
0x27b: V196 = SUB V192 V195
0x27c: V197 = 0x20
0x27e: V198 = ADD 0x20 V196
0x280: RETURN V195 V198
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x281
[0x281:0x287]
---
Predecessors: [0x49]
Successors: [0x288, 0x289]
---
0x281 JUMPDEST
0x282 CALLVALUE
0x283 ISZERO
0x284 PUSH2 0x289
0x287 JUMPI
---
0x281: JUMPDEST 
0x282: V199 = CALLVALUE
0x283: V200 = ISZERO V199
0x284: V201 = 0x289
0x287: JUMPI 0x289 V200
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x288
[0x288:0x288]
---
Predecessors: [0x281]
Successors: []
---
0x288 INVALID
---
0x288: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x289
[0x289:0x290]
---
Predecessors: [0x281]
Successors: [0x5db]
---
0x289 JUMPDEST
0x28a PUSH2 0x291
0x28d PUSH2 0x5db
0x290 JUMP
---
0x289: JUMPDEST 
0x28a: V202 = 0x291
0x28d: V203 = 0x5db
0x290: JUMP 0x5db
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x291]
Exit stack: [V10, 0x291]

================================

Block 0x291
[0x291:0x2a2]
---
Predecessors: [0x5db, 0x5e1, 0x774, 0xa74]
Successors: []
---
0x291 JUMPDEST
0x292 PUSH1 0x40
0x294 DUP1
0x295 MLOAD
0x296 SWAP2
0x297 DUP3
0x298 MSTORE
0x299 MLOAD
0x29a SWAP1
0x29b DUP2
0x29c SWAP1
0x29d SUB
0x29e PUSH1 0x20
0x2a0 ADD
0x2a1 SWAP1
0x2a2 RETURN
---
0x291: JUMPDEST 
0x292: V204 = 0x40
0x295: V205 = M[0x40]
0x298: M[V205] = S0
0x299: V206 = M[0x40]
0x29d: V207 = SUB V205 V206
0x29e: V208 = 0x20
0x2a0: V209 = ADD 0x20 V207
0x2a2: RETURN V206 V209
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x2a3
[0x2a3:0x2a9]
---
Predecessors: [0x54]
Successors: [0x2aa, 0x2ab]
---
0x2a3 JUMPDEST
0x2a4 CALLVALUE
0x2a5 ISZERO
0x2a6 PUSH2 0x2ab
0x2a9 JUMPI
---
0x2a3: JUMPDEST 
0x2a4: V210 = CALLVALUE
0x2a5: V211 = ISZERO V210
0x2a6: V212 = 0x2ab
0x2a9: JUMPI 0x2ab V211
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2aa
[0x2aa:0x2aa]
---
Predecessors: [0x2a3]
Successors: []
---
0x2aa INVALID
---
0x2aa: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2ab
[0x2ab:0x2b2]
---
Predecessors: [0x2a3]
Successors: [0x5e1]
---
0x2ab JUMPDEST
0x2ac PUSH2 0x291
0x2af PUSH2 0x5e1
0x2b2 JUMP
---
0x2ab: JUMPDEST 
0x2ac: V213 = 0x291
0x2af: V214 = 0x5e1
0x2b2: JUMP 0x5e1
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x291]
Exit stack: [V10, 0x291]

================================

Block 0x2b3
[0x2b3:0x2c4]
---
Predecessors: []
Successors: []
---
0x2b3 JUMPDEST
0x2b4 PUSH1 0x40
0x2b6 DUP1
0x2b7 MLOAD
0x2b8 SWAP2
0x2b9 DUP3
0x2ba MSTORE
0x2bb MLOAD
0x2bc SWAP1
0x2bd DUP2
0x2be SWAP1
0x2bf SUB
0x2c0 PUSH1 0x20
0x2c2 ADD
0x2c3 SWAP1
0x2c4 RETURN
---
0x2b3: JUMPDEST 
0x2b4: V215 = 0x40
0x2b7: V216 = M[0x40]
0x2ba: M[V216] = S0
0x2bb: V217 = M[0x40]
0x2bf: V218 = SUB V216 V217
0x2c0: V219 = 0x20
0x2c2: V220 = ADD 0x20 V218
0x2c4: RETURN V217 V220
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2c5
[0x2c5:0x2cb]
---
Predecessors: [0x5f]
Successors: [0x2cc, 0x2cd]
---
0x2c5 JUMPDEST
0x2c6 CALLVALUE
0x2c7 ISZERO
0x2c8 PUSH2 0x2cd
0x2cb JUMPI
---
0x2c5: JUMPDEST 
0x2c6: V221 = CALLVALUE
0x2c7: V222 = ISZERO V221
0x2c8: V223 = 0x2cd
0x2cb: JUMPI 0x2cd V222
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cc
[0x2cc:0x2cc]
---
Predecessors: [0x2c5]
Successors: []
---
0x2cc INVALID
---
0x2cc: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2cd
[0x2cd:0x2e9]
---
Predecessors: [0x2c5]
Successors: [0x5e7]
---
0x2cd JUMPDEST
0x2ce PUSH2 0x26d
0x2d1 PUSH1 0x1
0x2d3 PUSH1 0xa0
0x2d5 PUSH1 0x2
0x2d7 EXP
0x2d8 SUB
0x2d9 PUSH1 0x4
0x2db CALLDATALOAD
0x2dc DUP2
0x2dd AND
0x2de SWAP1
0x2df PUSH1 0x24
0x2e1 CALLDATALOAD
0x2e2 AND
0x2e3 PUSH1 0x44
0x2e5 CALLDATALOAD
0x2e6 PUSH2 0x5e7
0x2e9 JUMP
---
0x2cd: JUMPDEST 
0x2ce: V224 = 0x26d
0x2d1: V225 = 0x1
0x2d3: V226 = 0xa0
0x2d5: V227 = 0x2
0x2d7: V228 = EXP 0x2 0xa0
0x2d8: V229 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d9: V230 = 0x4
0x2db: V231 = CALLDATALOAD 0x4
0x2dd: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V231
0x2df: V233 = 0x24
0x2e1: V234 = CALLDATALOAD 0x24
0x2e2: V235 = AND V234 0xffffffffffffffffffffffffffffffffffffffff
0x2e3: V236 = 0x44
0x2e5: V237 = CALLDATALOAD 0x44
0x2e6: V238 = 0x5e7
0x2e9: JUMP 0x5e7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x26d, V232, V235, V237]
Exit stack: [V10, 0x26d, V232, V235, V237]

================================

Block 0x2ea
[0x2ea:0x2fd]
---
Predecessors: []
Successors: []
---
0x2ea JUMPDEST
0x2eb PUSH1 0x40
0x2ed DUP1
0x2ee MLOAD
0x2ef SWAP2
0x2f0 ISZERO
0x2f1 ISZERO
0x2f2 DUP3
0x2f3 MSTORE
0x2f4 MLOAD
0x2f5 SWAP1
0x2f6 DUP2
0x2f7 SWAP1
0x2f8 SUB
0x2f9 PUSH1 0x20
0x2fb ADD
0x2fc SWAP1
0x2fd RETURN
---
0x2ea: JUMPDEST 
0x2eb: V239 = 0x40
0x2ee: V240 = M[0x40]
0x2f0: V241 = ISZERO S0
0x2f1: V242 = ISZERO V241
0x2f3: M[V240] = V242
0x2f4: V243 = M[0x40]
0x2f8: V244 = SUB V240 V243
0x2f9: V245 = 0x20
0x2fb: V246 = ADD 0x20 V244
0x2fd: RETURN V243 V246
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2fe
[0x2fe:0x304]
---
Predecessors: [0x6a]
Successors: [0x305, 0x306]
---
0x2fe JUMPDEST
0x2ff CALLVALUE
0x300 ISZERO
0x301 PUSH2 0x306
0x304 JUMPI
---
0x2fe: JUMPDEST 
0x2ff: V247 = CALLVALUE
0x300: V248 = ISZERO V247
0x301: V249 = 0x306
0x304: JUMPI 0x306 V248
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x305
[0x305:0x305]
---
Predecessors: [0x2fe]
Successors: []
---
0x305 INVALID
---
0x305: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x306
[0x306:0x30d]
---
Predecessors: [0x2fe]
Successors: [0x717]
---
0x306 JUMPDEST
0x307 PUSH2 0x30e
0x30a PUSH2 0x717
0x30d JUMP
---
0x306: JUMPDEST 
0x307: V250 = 0x30e
0x30a: V251 = 0x717
0x30d: JUMP 0x717
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x30e]
Exit stack: [V10, 0x30e]

================================

Block 0x30e
[0x30e:0x323]
---
Predecessors: [0x71a]
Successors: []
---
0x30e JUMPDEST
0x30f PUSH1 0x40
0x311 DUP1
0x312 MLOAD
0x313 PUSH1 0xff
0x315 SWAP1
0x316 SWAP3
0x317 AND
0x318 DUP3
0x319 MSTORE
0x31a MLOAD
0x31b SWAP1
0x31c DUP2
0x31d SWAP1
0x31e SUB
0x31f PUSH1 0x20
0x321 ADD
0x322 SWAP1
0x323 RETURN
---
0x30e: JUMPDEST 
0x30f: V252 = 0x40
0x312: V253 = M[0x40]
0x313: V254 = 0xff
0x317: V255 = AND 0x12 0xff
0x319: M[V253] = 0x12
0x31a: V256 = M[0x40]
0x31e: V257 = SUB V253 V256
0x31f: V258 = 0x20
0x321: V259 = ADD 0x20 V257
0x323: RETURN V256 V259
---
Entry stack: [V10, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x324
[0x324:0x32a]
---
Predecessors: [0x75]
Successors: [0x32b, 0x32c]
---
0x324 JUMPDEST
0x325 CALLVALUE
0x326 ISZERO
0x327 PUSH2 0x32c
0x32a JUMPI
---
0x324: JUMPDEST 
0x325: V260 = CALLVALUE
0x326: V261 = ISZERO V260
0x327: V262 = 0x32c
0x32a: JUMPI 0x32c V261
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x32b
[0x32b:0x32b]
---
Predecessors: [0x324]
Successors: []
---
0x32b INVALID
---
0x32b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x32c
[0x32c:0x333]
---
Predecessors: [0x324]
Successors: [0x71d]
---
0x32c JUMPDEST
0x32d PUSH2 0x1bc
0x330 PUSH2 0x71d
0x333 JUMP
---
0x32c: JUMPDEST 
0x32d: V263 = 0x1bc
0x330: V264 = 0x71d
0x333: JUMP 0x71d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1bc]
Exit stack: [V10, 0x1bc]

================================

Block 0x334
[0x334:0x335]
---
Predecessors: []
Successors: []
---
0x334 JUMPDEST
0x335 STOP
---
0x334: JUMPDEST 
0x335: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x336
[0x336:0x33c]
---
Predecessors: [0x80]
Successors: [0x33d, 0x33e]
---
0x336 JUMPDEST
0x337 CALLVALUE
0x338 ISZERO
0x339 PUSH2 0x33e
0x33c JUMPI
---
0x336: JUMPDEST 
0x337: V265 = CALLVALUE
0x338: V266 = ISZERO V265
0x339: V267 = 0x33e
0x33c: JUMPI 0x33e V266
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33d
[0x33d:0x33d]
---
Predecessors: [0x336]
Successors: []
---
0x33d INVALID
---
0x33d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x33e
[0x33e:0x351]
---
Predecessors: [0x336]
Successors: [0x75a]
---
0x33e JUMPDEST
0x33f PUSH2 0x291
0x342 PUSH1 0x1
0x344 PUSH1 0xa0
0x346 PUSH1 0x2
0x348 EXP
0x349 SUB
0x34a PUSH1 0x4
0x34c CALLDATALOAD
0x34d AND
0x34e PUSH2 0x75a
0x351 JUMP
---
0x33e: JUMPDEST 
0x33f: V268 = 0x291
0x342: V269 = 0x1
0x344: V270 = 0xa0
0x346: V271 = 0x2
0x348: V272 = EXP 0x2 0xa0
0x349: V273 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34a: V274 = 0x4
0x34c: V275 = CALLDATALOAD 0x4
0x34d: V276 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0x34e: V277 = 0x75a
0x351: JUMP 0x75a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x291, V276]
Exit stack: [V10, 0x291, V276]

================================

Block 0x352
[0x352:0x363]
---
Predecessors: []
Successors: []
---
0x352 JUMPDEST
0x353 PUSH1 0x40
0x355 DUP1
0x356 MLOAD
0x357 SWAP2
0x358 DUP3
0x359 MSTORE
0x35a MLOAD
0x35b SWAP1
0x35c DUP2
0x35d SWAP1
0x35e SUB
0x35f PUSH1 0x20
0x361 ADD
0x362 SWAP1
0x363 RETURN
---
0x352: JUMPDEST 
0x353: V278 = 0x40
0x356: V279 = M[0x40]
0x359: M[V279] = S0
0x35a: V280 = M[0x40]
0x35e: V281 = SUB V279 V280
0x35f: V282 = 0x20
0x361: V283 = ADD 0x20 V281
0x363: RETURN V280 V283
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x364
[0x364:0x36a]
---
Predecessors: [0x8b]
Successors: [0x36b, 0x36c]
---
0x364 JUMPDEST
0x365 CALLVALUE
0x366 ISZERO
0x367 PUSH2 0x36c
0x36a JUMPI
---
0x364: JUMPDEST 
0x365: V284 = CALLVALUE
0x366: V285 = ISZERO V284
0x367: V286 = 0x36c
0x36a: JUMPI 0x36c V285
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x36b
[0x36b:0x36b]
---
Predecessors: [0x364]
Successors: []
---
0x36b INVALID
---
0x36b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x36c
[0x36c:0x373]
---
Predecessors: [0x364]
Successors: [0x779]
---
0x36c JUMPDEST
0x36d PUSH2 0x1bc
0x370 PUSH2 0x779
0x373 JUMP
---
0x36c: JUMPDEST 
0x36d: V287 = 0x1bc
0x370: V288 = 0x779
0x373: JUMP 0x779
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1bc]
Exit stack: [V10, 0x1bc]

================================

Block 0x374
[0x374:0x375]
---
Predecessors: []
Successors: []
---
0x374 JUMPDEST
0x375 STOP
---
0x374: JUMPDEST 
0x375: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x376
[0x376:0x37c]
---
Predecessors: [0x96]
Successors: [0x37d, 0x37e]
---
0x376 JUMPDEST
0x377 CALLVALUE
0x378 ISZERO
0x379 PUSH2 0x37e
0x37c JUMPI
---
0x376: JUMPDEST 
0x377: V289 = CALLVALUE
0x378: V290 = ISZERO V289
0x379: V291 = 0x37e
0x37c: JUMPI 0x37e V290
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x37d
[0x37d:0x37d]
---
Predecessors: [0x376]
Successors: []
---
0x37d INVALID
---
0x37d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x37e
[0x37e:0x385]
---
Predecessors: [0x376]
Successors: [0x7bc]
---
0x37e JUMPDEST
0x37f PUSH2 0x1ce
0x382 PUSH2 0x7bc
0x385 JUMP
---
0x37e: JUMPDEST 
0x37f: V292 = 0x1ce
0x382: V293 = 0x7bc
0x385: JUMP 0x7bc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1ce]
Exit stack: [V10, 0x1ce]

================================

Block 0x386
[0x386:0x3ab]
---
Predecessors: []
Successors: [0x214, 0x3ac]
---
0x386 JUMPDEST
0x387 PUSH1 0x40
0x389 DUP1
0x38a MLOAD
0x38b PUSH1 0x20
0x38d DUP1
0x38e DUP3
0x38f MSTORE
0x390 DUP4
0x391 MLOAD
0x392 DUP2
0x393 DUP4
0x394 ADD
0x395 MSTORE
0x396 DUP4
0x397 MLOAD
0x398 SWAP2
0x399 SWAP3
0x39a DUP4
0x39b SWAP3
0x39c SWAP1
0x39d DUP4
0x39e ADD
0x39f SWAP2
0x3a0 DUP6
0x3a1 ADD
0x3a2 SWAP1
0x3a3 DUP1
0x3a4 DUP4
0x3a5 DUP4
0x3a6 DUP3
0x3a7 ISZERO
0x3a8 PUSH2 0x214
0x3ab JUMPI
---
0x386: JUMPDEST 
0x387: V294 = 0x40
0x38a: V295 = M[0x40]
0x38b: V296 = 0x20
0x38f: M[V295] = 0x20
0x391: V297 = M[S0]
0x394: V298 = ADD V295 0x20
0x395: M[V298] = V297
0x397: V299 = M[S0]
0x39e: V300 = ADD V295 0x40
0x3a1: V301 = ADD S0 0x20
0x3a7: V302 = ISZERO V299
0x3a8: V303 = 0x214
0x3ab: JUMPI 0x214 V302
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V295, V295, V300, V301, V299, V299, V300, V301]
Exit stack: [S0, V295, V295, V300, V301, V299, V299, V300, V301]

================================

Block 0x3ac
[0x3ac:0x3b9]
---
Predecessors: [0x386]
Successors: [0x214, 0x3ba]
---
0x3ac JUMPDEST
0x3ad DUP1
0x3ae MLOAD
0x3af DUP3
0x3b0 MSTORE
0x3b1 PUSH1 0x20
0x3b3 DUP4
0x3b4 GT
0x3b5 ISZERO
0x3b6 PUSH2 0x214
0x3b9 JUMPI
---
0x3ac: JUMPDEST 
0x3ae: V304 = M[V301]
0x3b0: M[V300] = V304
0x3b1: V305 = 0x20
0x3b4: V306 = GT V299 0x20
0x3b5: V307 = ISZERO V306
0x3b6: V308 = 0x214
0x3b9: JUMPI 0x214 V307
---
Entry stack: [S8, V295, V295, V300, V301, V299, V299, V300, V301]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V295, V295, V300, V301, V299, V299, V300, V301]

================================

Block 0x3ba
[0x3ba:0x3cb]
---
Predecessors: [0x3ac]
Successors: [0x1f4]
---
0x3ba PUSH1 0x1f
0x3bc NOT
0x3bd SWAP1
0x3be SWAP3
0x3bf ADD
0x3c0 SWAP2
0x3c1 PUSH1 0x20
0x3c3 SWAP2
0x3c4 DUP3
0x3c5 ADD
0x3c6 SWAP2
0x3c7 ADD
0x3c8 PUSH2 0x1f4
0x3cb JUMP
---
0x3ba: V309 = 0x1f
0x3bc: V310 = NOT 0x1f
0x3bf: V311 = ADD V299 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x3c1: V312 = 0x20
0x3c5: V313 = ADD 0x20 V300
0x3c7: V314 = ADD 0x20 V301
0x3c8: V315 = 0x1f4
0x3cb: JUMP 0x1f4
---
Entry stack: [S8, V295, V295, V300, V301, V299, V299, V300, V301]
Stack pops: 3
Stack additions: [V311, V313, V314]
Exit stack: [S8, V295, V295, V300, V301, V299, V311, V313, V314]

================================

Block 0x3cc
[0x3cc:0x3de]
---
Predecessors: []
Successors: [0x240, 0x3df]
---
0x3cc JUMPDEST
0x3cd POP
0x3ce POP
0x3cf POP
0x3d0 SWAP1
0x3d1 POP
0x3d2 SWAP1
0x3d3 DUP2
0x3d4 ADD
0x3d5 SWAP1
0x3d6 PUSH1 0x1f
0x3d8 AND
0x3d9 DUP1
0x3da ISZERO
0x3db PUSH2 0x240
0x3de JUMPI
---
0x3cc: JUMPDEST 
0x3d4: V316 = ADD S3 S5
0x3d6: V317 = 0x1f
0x3d8: V318 = AND 0x1f S3
0x3da: V319 = ISZERO V318
0x3db: V320 = 0x240
0x3de: JUMPI 0x240 V319
---
Entry stack: []
Stack pops: 6
Stack additions: [V316, V318]
Exit stack: [V316, V318]

================================

Block 0x3df
[0x3df:0x3f7]
---
Predecessors: [0x3cc]
Successors: [0x3f8]
---
0x3df DUP1
0x3e0 DUP3
0x3e1 SUB
0x3e2 DUP1
0x3e3 MLOAD
0x3e4 PUSH1 0x1
0x3e6 DUP4
0x3e7 PUSH1 0x20
0x3e9 SUB
0x3ea PUSH2 0x100
0x3ed EXP
0x3ee SUB
0x3ef NOT
0x3f0 AND
0x3f1 DUP2
0x3f2 MSTORE
0x3f3 PUSH1 0x20
0x3f5 ADD
0x3f6 SWAP2
0x3f7 POP
---
0x3e1: V321 = SUB V316 V318
0x3e3: V322 = M[V321]
0x3e4: V323 = 0x1
0x3e7: V324 = 0x20
0x3e9: V325 = SUB 0x20 V318
0x3ea: V326 = 0x100
0x3ed: V327 = EXP 0x100 V325
0x3ee: V328 = SUB V327 0x1
0x3ef: V329 = NOT V328
0x3f0: V330 = AND V329 V322
0x3f2: M[V321] = V330
0x3f3: V331 = 0x20
0x3f5: V332 = ADD 0x20 V321
---
Entry stack: [V316, V318]
Stack pops: 2
Stack additions: [V332, S0]
Exit stack: [V332, V318]

================================

Block 0x3f8
[0x3f8:0x405]
---
Predecessors: [0x3df]
Successors: []
---
0x3f8 JUMPDEST
0x3f9 POP
0x3fa SWAP3
0x3fb POP
0x3fc POP
0x3fd POP
0x3fe PUSH1 0x40
0x400 MLOAD
0x401 DUP1
0x402 SWAP2
0x403 SUB
0x404 SWAP1
0x405 RETURN
---
0x3f8: JUMPDEST 
0x3fe: V333 = 0x40
0x400: V334 = M[0x40]
0x403: V335 = SUB V332 V334
0x405: RETURN V334 V335
---
Entry stack: [V332, V318]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x406
[0x406:0x40c]
---
Predecessors: [0xa1]
Successors: [0x40d, 0x40e]
---
0x406 JUMPDEST
0x407 CALLVALUE
0x408 ISZERO
0x409 PUSH2 0x40e
0x40c JUMPI
---
0x406: JUMPDEST 
0x407: V336 = CALLVALUE
0x408: V337 = ISZERO V336
0x409: V338 = 0x40e
0x40c: JUMPI 0x40e V337
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x40d
[0x40d:0x40d]
---
Predecessors: [0x406]
Successors: []
---
0x40d INVALID
---
0x40d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x40e
[0x40e:0x421]
---
Predecessors: [0x406]
Successors: [0x7fd]
---
0x40e JUMPDEST
0x40f PUSH2 0x26d
0x412 PUSH1 0x1
0x414 PUSH1 0xa0
0x416 PUSH1 0x2
0x418 EXP
0x419 SUB
0x41a PUSH1 0x4
0x41c CALLDATALOAD
0x41d AND
0x41e PUSH2 0x7fd
0x421 JUMP
---
0x40e: JUMPDEST 
0x40f: V339 = 0x26d
0x412: V340 = 0x1
0x414: V341 = 0xa0
0x416: V342 = 0x2
0x418: V343 = EXP 0x2 0xa0
0x419: V344 = SUB 0x10000000000000000000000000000000000000000 0x1
0x41a: V345 = 0x4
0x41c: V346 = CALLDATALOAD 0x4
0x41d: V347 = AND V346 0xffffffffffffffffffffffffffffffffffffffff
0x41e: V348 = 0x7fd
0x421: JUMP 0x7fd
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x26d, V347]
Exit stack: [V10, 0x26d, V347]

================================

Block 0x422
[0x422:0x435]
---
Predecessors: []
Successors: []
---
0x422 JUMPDEST
0x423 PUSH1 0x40
0x425 DUP1
0x426 MLOAD
0x427 SWAP2
0x428 ISZERO
0x429 ISZERO
0x42a DUP3
0x42b MSTORE
0x42c MLOAD
0x42d SWAP1
0x42e DUP2
0x42f SWAP1
0x430 SUB
0x431 PUSH1 0x20
0x433 ADD
0x434 SWAP1
0x435 RETURN
---
0x422: JUMPDEST 
0x423: V349 = 0x40
0x426: V350 = M[0x40]
0x428: V351 = ISZERO S0
0x429: V352 = ISZERO V351
0x42b: M[V350] = V352
0x42c: V353 = M[0x40]
0x430: V354 = SUB V350 V353
0x431: V355 = 0x20
0x433: V356 = ADD 0x20 V354
0x435: RETURN V353 V356
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x436
[0x436:0x43c]
---
Predecessors: [0xac]
Successors: [0x43d, 0x43e]
---
0x436 JUMPDEST
0x437 CALLVALUE
0x438 ISZERO
0x439 PUSH2 0x43e
0x43c JUMPI
---
0x436: JUMPDEST 
0x437: V357 = CALLVALUE
0x438: V358 = ISZERO V357
0x439: V359 = 0x43e
0x43c: JUMPI 0x43e V358
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x43d
[0x43d:0x43d]
---
Predecessors: [0x436]
Successors: []
---
0x43d INVALID
---
0x43d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x43e
[0x43e:0x454]
---
Predecessors: [0x436]
Successors: [0x941]
---
0x43e JUMPDEST
0x43f PUSH2 0x26d
0x442 PUSH1 0x1
0x444 PUSH1 0xa0
0x446 PUSH1 0x2
0x448 EXP
0x449 SUB
0x44a PUSH1 0x4
0x44c CALLDATALOAD
0x44d AND
0x44e PUSH1 0x24
0x450 CALLDATALOAD
0x451 PUSH2 0x941
0x454 JUMP
---
0x43e: JUMPDEST 
0x43f: V360 = 0x26d
0x442: V361 = 0x1
0x444: V362 = 0xa0
0x446: V363 = 0x2
0x448: V364 = EXP 0x2 0xa0
0x449: V365 = SUB 0x10000000000000000000000000000000000000000 0x1
0x44a: V366 = 0x4
0x44c: V367 = CALLDATALOAD 0x4
0x44d: V368 = AND V367 0xffffffffffffffffffffffffffffffffffffffff
0x44e: V369 = 0x24
0x450: V370 = CALLDATALOAD 0x24
0x451: V371 = 0x941
0x454: JUMP 0x941
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x26d, V368, V370]
Exit stack: [V10, 0x26d, V368, V370]

================================

Block 0x455
[0x455:0x468]
---
Predecessors: []
Successors: []
---
0x455 JUMPDEST
0x456 PUSH1 0x40
0x458 DUP1
0x459 MLOAD
0x45a SWAP2
0x45b ISZERO
0x45c ISZERO
0x45d DUP3
0x45e MSTORE
0x45f MLOAD
0x460 SWAP1
0x461 DUP2
0x462 SWAP1
0x463 SUB
0x464 PUSH1 0x20
0x466 ADD
0x467 SWAP1
0x468 RETURN
---
0x455: JUMPDEST 
0x456: V372 = 0x40
0x459: V373 = M[0x40]
0x45b: V374 = ISZERO S0
0x45c: V375 = ISZERO V374
0x45e: M[V373] = V375
0x45f: V376 = M[0x40]
0x463: V377 = SUB V373 V376
0x464: V378 = 0x20
0x466: V379 = ADD 0x20 V377
0x468: RETURN V376 V379
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x469
[0x469:0x46f]
---
Predecessors: [0xb7]
Successors: [0x470, 0x471]
---
0x469 JUMPDEST
0x46a CALLVALUE
0x46b ISZERO
0x46c PUSH2 0x471
0x46f JUMPI
---
0x469: JUMPDEST 
0x46a: V380 = CALLVALUE
0x46b: V381 = ISZERO V380
0x46c: V382 = 0x471
0x46f: JUMPI 0x471 V381
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x470
[0x470:0x470]
---
Predecessors: [0x469]
Successors: []
---
0x470 INVALID
---
0x470: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x471
[0x471:0x478]
---
Predecessors: [0x469]
Successors: [0xa24]
---
0x471 JUMPDEST
0x472 PUSH2 0x479
0x475 PUSH2 0xa24
0x478 JUMP
---
0x471: JUMPDEST 
0x472: V383 = 0x479
0x475: V384 = 0xa24
0x478: JUMP 0xa24
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x479]
Exit stack: [V10, 0x479]

================================

Block 0x479
[0x479:0x498]
---
Predecessors: [0xa38]
Successors: []
---
0x479 JUMPDEST
0x47a PUSH1 0x40
0x47c DUP1
0x47d MLOAD
0x47e SWAP4
0x47f DUP5
0x480 MSTORE
0x481 PUSH1 0x20
0x483 DUP5
0x484 ADD
0x485 SWAP3
0x486 SWAP1
0x487 SWAP3
0x488 MSTORE
0x489 ISZERO
0x48a ISZERO
0x48b DUP3
0x48c DUP3
0x48d ADD
0x48e MSTORE
0x48f MLOAD
0x490 SWAP1
0x491 DUP2
0x492 SWAP1
0x493 SUB
0x494 PUSH1 0x60
0x496 ADD
0x497 SWAP1
0x498 RETURN
---
0x479: JUMPDEST 
0x47a: V385 = 0x40
0x47d: V386 = M[0x40]
0x480: M[V386] = V800
0x481: V387 = 0x20
0x484: V388 = ADD V386 0x20
0x488: M[V388] = V802
0x489: V389 = ISZERO V810
0x48a: V390 = ISZERO V389
0x48d: V391 = ADD 0x40 V386
0x48e: M[V391] = V390
0x48f: V392 = M[0x40]
0x493: V393 = SUB V386 V392
0x494: V394 = 0x60
0x496: V395 = ADD 0x60 V393
0x498: RETURN V392 V395
---
Entry stack: [V10, V800, V802, V810]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x499
[0x499:0x49f]
---
Predecessors: [0xc2]
Successors: [0x4a0, 0x4a1]
---
0x499 JUMPDEST
0x49a CALLVALUE
0x49b ISZERO
0x49c PUSH2 0x4a1
0x49f JUMPI
---
0x499: JUMPDEST 
0x49a: V396 = CALLVALUE
0x49b: V397 = ISZERO V396
0x49c: V398 = 0x4a1
0x49f: JUMPI 0x4a1 V397
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4a0
[0x4a0:0x4a0]
---
Predecessors: [0x499]
Successors: []
---
0x4a0 INVALID
---
0x4a0: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4a1
[0x4a1:0x4a8]
---
Predecessors: [0x499]
Successors: [0xa3d]
---
0x4a1 JUMPDEST
0x4a2 PUSH2 0x26d
0x4a5 PUSH2 0xa3d
0x4a8 JUMP
---
0x4a1: JUMPDEST 
0x4a2: V399 = 0x26d
0x4a5: V400 = 0xa3d
0x4a8: JUMP 0xa3d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x26d]
Exit stack: [V10, 0x26d]

================================

Block 0x4a9
[0x4a9:0x4bc]
---
Predecessors: []
Successors: []
---
0x4a9 JUMPDEST
0x4aa PUSH1 0x40
0x4ac DUP1
0x4ad MLOAD
0x4ae SWAP2
0x4af ISZERO
0x4b0 ISZERO
0x4b1 DUP3
0x4b2 MSTORE
0x4b3 MLOAD
0x4b4 SWAP1
0x4b5 DUP2
0x4b6 SWAP1
0x4b7 SUB
0x4b8 PUSH1 0x20
0x4ba ADD
0x4bb SWAP1
0x4bc RETURN
---
0x4a9: JUMPDEST 
0x4aa: V401 = 0x40
0x4ad: V402 = M[0x40]
0x4af: V403 = ISZERO S0
0x4b0: V404 = ISZERO V403
0x4b2: M[V402] = V404
0x4b3: V405 = M[0x40]
0x4b7: V406 = SUB V402 V405
0x4b8: V407 = 0x20
0x4ba: V408 = ADD 0x20 V406
0x4bc: RETURN V405 V408
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4bd
[0x4bd:0x4c3]
---
Predecessors: [0xcd]
Successors: [0x4c4, 0x4c5]
---
0x4bd JUMPDEST
0x4be CALLVALUE
0x4bf ISZERO
0x4c0 PUSH2 0x4c5
0x4c3 JUMPI
---
0x4bd: JUMPDEST 
0x4be: V409 = CALLVALUE
0x4bf: V410 = ISZERO V409
0x4c0: V411 = 0x4c5
0x4c3: JUMPI 0x4c5 V410
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4c4
[0x4c4:0x4c4]
---
Predecessors: [0x4bd]
Successors: []
---
0x4c4 INVALID
---
0x4c4: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4c5
[0x4c5:0x4de]
---
Predecessors: [0x4bd]
Successors: [0xa4d]
---
0x4c5 JUMPDEST
0x4c6 PUSH2 0x291
0x4c9 PUSH1 0x1
0x4cb PUSH1 0xa0
0x4cd PUSH1 0x2
0x4cf EXP
0x4d0 SUB
0x4d1 PUSH1 0x4
0x4d3 CALLDATALOAD
0x4d4 DUP2
0x4d5 AND
0x4d6 SWAP1
0x4d7 PUSH1 0x24
0x4d9 CALLDATALOAD
0x4da AND
0x4db PUSH2 0xa4d
0x4de JUMP
---
0x4c5: JUMPDEST 
0x4c6: V412 = 0x291
0x4c9: V413 = 0x1
0x4cb: V414 = 0xa0
0x4cd: V415 = 0x2
0x4cf: V416 = EXP 0x2 0xa0
0x4d0: V417 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d1: V418 = 0x4
0x4d3: V419 = CALLDATALOAD 0x4
0x4d5: V420 = AND 0xffffffffffffffffffffffffffffffffffffffff V419
0x4d7: V421 = 0x24
0x4d9: V422 = CALLDATALOAD 0x24
0x4da: V423 = AND V422 0xffffffffffffffffffffffffffffffffffffffff
0x4db: V424 = 0xa4d
0x4de: JUMP 0xa4d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x291, V420, V423]
Exit stack: [V10, 0x291, V420, V423]

================================

Block 0x4df
[0x4df:0x4f0]
---
Predecessors: []
Successors: []
---
0x4df JUMPDEST
0x4e0 PUSH1 0x40
0x4e2 DUP1
0x4e3 MLOAD
0x4e4 SWAP2
0x4e5 DUP3
0x4e6 MSTORE
0x4e7 MLOAD
0x4e8 SWAP1
0x4e9 DUP2
0x4ea SWAP1
0x4eb SUB
0x4ec PUSH1 0x20
0x4ee ADD
0x4ef SWAP1
0x4f0 RETURN
---
0x4df: JUMPDEST 
0x4e0: V425 = 0x40
0x4e3: V426 = M[0x40]
0x4e6: M[V426] = S0
0x4e7: V427 = M[0x40]
0x4eb: V428 = SUB V426 V427
0x4ec: V429 = 0x20
0x4ee: V430 = ADD 0x20 V428
0x4f0: RETURN V427 V430
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4f1
[0x4f1:0x4f8]
---
Predecessors: [0x1c6]
Successors: [0xa7a]
---
0x4f1 JUMPDEST
0x4f2 PUSH2 0x4f9
0x4f5 PUSH2 0xa7a
0x4f8 JUMP
---
0x4f1: JUMPDEST 
0x4f2: V431 = 0x4f9
0x4f5: V432 = 0xa7a
0x4f8: JUMP 0xa7a
---
Entry stack: [V10, 0x1ce]
Stack pops: 0
Stack additions: [0x4f9]
Exit stack: [V10, 0x1ce, 0x4f9]

================================

Block 0x4f9
[0x4f9:0x52e]
---
Predecessors: [0xa7a]
Successors: [0x52f]
---
0x4f9 JUMPDEST
0x4fa POP
0x4fb PUSH1 0x40
0x4fd DUP1
0x4fe MLOAD
0x4ff DUP1
0x500 DUP3
0x501 ADD
0x502 SWAP1
0x503 SWAP2
0x504 MSTORE
0x505 PUSH1 0xf
0x507 DUP2
0x508 MSTORE
0x509 PUSH32 0x446575732056756c7420546f6b656e0000000000000000000000000000000000
0x52a PUSH1 0x20
0x52c DUP3
0x52d ADD
0x52e MSTORE
---
0x4f9: JUMPDEST 
0x4fb: V433 = 0x40
0x4fe: V434 = M[0x40]
0x501: V435 = ADD 0x40 V434
0x504: M[0x40] = V435
0x505: V436 = 0xf
0x508: M[V434] = 0xf
0x509: V437 = 0x446575732056756c7420546f6b656e0000000000000000000000000000000000
0x52a: V438 = 0x20
0x52d: V439 = ADD V434 0x20
0x52e: M[V439] = 0x446575732056756c7420546f6b656e0000000000000000000000000000000000
---
Entry stack: [V10, 0x1ce, V834]
Stack pops: 1
Stack additions: [V434]
Exit stack: [V10, 0x1ce, V434]

================================

Block 0x52f
[0x52f:0x531]
---
Predecessors: [0x4f9]
Successors: [0x1ce]
---
0x52f JUMPDEST
0x530 SWAP1
0x531 JUMP
---
0x52f: JUMPDEST 
0x531: JUMP 0x1ce
---
Entry stack: [V10, 0x1ce, V434]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V434]

================================

Block 0x532
[0x532:0x53d]
---
Predecessors: [0x256]
Successors: [0x53e, 0x567]
---
0x532 JUMPDEST
0x533 PUSH1 0x0
0x535 DUP2
0x536 ISZERO
0x537 DUP1
0x538 ISZERO
0x539 SWAP1
0x53a PUSH2 0x567
0x53d JUMPI
---
0x532: JUMPDEST 
0x533: V440 = 0x0
0x536: V441 = ISZERO V189
0x538: V442 = ISZERO V441
0x53a: V443 = 0x567
0x53d: JUMPI 0x567 V441
---
Entry stack: [V10, 0x26d, V187, V189]
Stack pops: 1
Stack additions: [S0, 0x0, V442]
Exit stack: [V10, 0x26d, V187, V189, 0x0, V442]

================================

Block 0x53e
[0x53e:0x566]
---
Predecessors: [0x532]
Successors: [0x567]
---
0x53e POP
0x53f PUSH1 0x1
0x541 PUSH1 0xa0
0x543 PUSH1 0x2
0x545 EXP
0x546 SUB
0x547 CALLER
0x548 DUP2
0x549 AND
0x54a PUSH1 0x0
0x54c SWAP1
0x54d DUP2
0x54e MSTORE
0x54f PUSH1 0x2
0x551 PUSH1 0x20
0x553 SWAP1
0x554 DUP2
0x555 MSTORE
0x556 PUSH1 0x40
0x558 DUP1
0x559 DUP4
0x55a SHA3
0x55b SWAP4
0x55c DUP8
0x55d AND
0x55e DUP4
0x55f MSTORE
0x560 SWAP3
0x561 SWAP1
0x562 MSTORE
0x563 SHA3
0x564 SLOAD
0x565 ISZERO
0x566 ISZERO
---
0x53f: V444 = 0x1
0x541: V445 = 0xa0
0x543: V446 = 0x2
0x545: V447 = EXP 0x2 0xa0
0x546: V448 = SUB 0x10000000000000000000000000000000000000000 0x1
0x547: V449 = CALLER
0x549: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V449
0x54a: V451 = 0x0
0x54e: M[0x0] = V450
0x54f: V452 = 0x2
0x551: V453 = 0x20
0x555: M[0x20] = 0x2
0x556: V454 = 0x40
0x55a: V455 = SHA3 0x0 0x40
0x55d: V456 = AND V187 0xffffffffffffffffffffffffffffffffffffffff
0x55f: M[0x0] = V456
0x562: M[0x20] = V455
0x563: V457 = SHA3 0x0 0x40
0x564: V458 = S[V457]
0x565: V459 = ISZERO V458
0x566: V460 = ISZERO V459
---
Entry stack: [V10, 0x26d, V187, V189, 0x0, V442]
Stack pops: 4
Stack additions: [S3, S2, S1, V460]
Exit stack: [V10, 0x26d, V187, V189, 0x0, V460]

================================

Block 0x567
[0x567:0x56c]
---
Predecessors: [0x532, 0x53e]
Successors: [0x56d, 0x574]
---
0x567 JUMPDEST
0x568 ISZERO
0x569 PUSH2 0x574
0x56c JUMPI
---
0x567: JUMPDEST 
0x568: V461 = ISZERO S0
0x569: V462 = 0x574
0x56c: JUMPI 0x574 V461
---
Entry stack: [V10, 0x26d, V187, V189, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x26d, V187, V189, 0x0]

================================

Block 0x56d
[0x56d:0x573]
---
Predecessors: [0x567]
Successors: [0x5d5]
---
0x56d POP
0x56e PUSH1 0x0
0x570 PUSH2 0x5d5
0x573 JUMP
---
0x56e: V463 = 0x0
0x570: V464 = 0x5d5
0x573: JUMP 0x5d5
---
Entry stack: [V10, 0x26d, V187, V189, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x26d, V187, V189, 0x0]

================================

Block 0x574
[0x574:0x5d4]
---
Predecessors: [0x567]
Successors: [0x5d5]
---
0x574 JUMPDEST
0x575 PUSH1 0x1
0x577 PUSH1 0xa0
0x579 PUSH1 0x2
0x57b EXP
0x57c SUB
0x57d CALLER
0x57e DUP2
0x57f AND
0x580 PUSH1 0x0
0x582 DUP2
0x583 DUP2
0x584 MSTORE
0x585 PUSH1 0x2
0x587 PUSH1 0x20
0x589 SWAP1
0x58a DUP2
0x58b MSTORE
0x58c PUSH1 0x40
0x58e DUP1
0x58f DUP4
0x590 SHA3
0x591 SWAP5
0x592 DUP9
0x593 AND
0x594 DUP1
0x595 DUP5
0x596 MSTORE
0x597 SWAP5
0x598 DUP3
0x599 MSTORE
0x59a SWAP2
0x59b DUP3
0x59c SWAP1
0x59d SHA3
0x59e DUP7
0x59f SWAP1
0x5a0 SSTORE
0x5a1 DUP2
0x5a2 MLOAD
0x5a3 DUP7
0x5a4 DUP2
0x5a5 MSTORE
0x5a6 SWAP2
0x5a7 MLOAD
0x5a8 PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5c9 SWAP3
0x5ca DUP2
0x5cb SWAP1
0x5cc SUB
0x5cd SWAP1
0x5ce SWAP2
0x5cf ADD
0x5d0 SWAP1
0x5d1 LOG3
0x5d2 POP
0x5d3 PUSH1 0x1
---
0x574: JUMPDEST 
0x575: V465 = 0x1
0x577: V466 = 0xa0
0x579: V467 = 0x2
0x57b: V468 = EXP 0x2 0xa0
0x57c: V469 = SUB 0x10000000000000000000000000000000000000000 0x1
0x57d: V470 = CALLER
0x57f: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x580: V472 = 0x0
0x584: M[0x0] = V471
0x585: V473 = 0x2
0x587: V474 = 0x20
0x58b: M[0x20] = 0x2
0x58c: V475 = 0x40
0x590: V476 = SHA3 0x0 0x40
0x593: V477 = AND V187 0xffffffffffffffffffffffffffffffffffffffff
0x596: M[0x0] = V477
0x599: M[0x20] = V476
0x59d: V478 = SHA3 0x0 0x40
0x5a0: S[V478] = V189
0x5a2: V479 = M[0x40]
0x5a5: M[V479] = V189
0x5a7: V480 = M[0x40]
0x5a8: V481 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5cc: V482 = SUB V479 V480
0x5cf: V483 = ADD 0x20 V482
0x5d1: LOG V480 V483 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V471 V477
0x5d3: V484 = 0x1
---
Entry stack: [V10, 0x26d, V187, V189, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x26d, V187, V189, 0x1]

================================

Block 0x5d5
[0x5d5:0x5da]
---
Predecessors: [0x56d, 0x574]
Successors: [0x26d]
---
0x5d5 JUMPDEST
0x5d6 SWAP3
0x5d7 SWAP2
0x5d8 POP
0x5d9 POP
0x5da JUMP
---
0x5d5: JUMPDEST 
0x5da: JUMP 0x26d
---
Entry stack: [V10, 0x26d, V187, V189, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x5db
[0x5db:0x5e0]
---
Predecessors: [0x289]
Successors: [0x291]
---
0x5db JUMPDEST
0x5dc PUSH1 0x3
0x5de SLOAD
0x5df DUP2
0x5e0 JUMP
---
0x5db: JUMPDEST 
0x5dc: V485 = 0x3
0x5de: V486 = S[0x3]
0x5e0: JUMP 0x291
---
Entry stack: [V10, 0x291]
Stack pops: 1
Stack additions: [S0, V486]
Exit stack: [V10, 0x291, V486]

================================

Block 0x5e1
[0x5e1:0x5e6]
---
Predecessors: [0x2ab]
Successors: [0x291]
---
0x5e1 JUMPDEST
0x5e2 PUSH1 0x4
0x5e4 SLOAD
0x5e5 DUP2
0x5e6 JUMP
---
0x5e1: JUMPDEST 
0x5e2: V487 = 0x4
0x5e4: V488 = S[0x4]
0x5e6: JUMP 0x291
---
Entry stack: [V10, 0x291]
Stack pops: 1
Stack additions: [S0, V488]
Exit stack: [V10, 0x291, V488]

================================

Block 0x5e7
[0x5e7:0x5f7]
---
Predecessors: [0x2cd]
Successors: [0x5f8, 0x5fd]
---
0x5e7 JUMPDEST
0x5e8 PUSH1 0x0
0x5ea DUP1
0x5eb DUP1
0x5ec DUP1
0x5ed DUP1
0x5ee DUP1
0x5ef PUSH1 0x64
0x5f1 CALLDATASIZE
0x5f2 LT
0x5f3 ISZERO
0x5f4 PUSH2 0x5fd
0x5f7 JUMPI
---
0x5e7: JUMPDEST 
0x5e8: V489 = 0x0
0x5ef: V490 = 0x64
0x5f1: V491 = CALLDATASIZE
0x5f2: V492 = LT V491 0x64
0x5f3: V493 = ISZERO V492
0x5f4: V494 = 0x5fd
0x5f7: JUMPI 0x5fd V493
---
Entry stack: [V10, 0x26d, V232, V235, V237]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x26d, V232, V235, V237, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5f8
[0x5f8:0x5fc]
---
Predecessors: [0x5e7]
Successors: []
---
0x5f8 PUSH1 0x0
0x5fa PUSH1 0x0
0x5fc REVERT
---
0x5f8: V495 = 0x0
0x5fa: V496 = 0x0
0x5fc: REVERT 0x0 0x0
---
Entry stack: [V10, 0x26d, V232, V235, V237, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x26d, V232, V235, V237, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x5fd
[0x5fd:0x604]
---
Predecessors: [0x5e7]
Successors: [0x605, 0x60d]
---
0x5fd JUMPDEST
0x5fe DUP7
0x5ff ISZERO
0x600 ISZERO
0x601 PUSH2 0x60d
0x604 JUMPI
---
0x5fd: JUMPDEST 
0x5ff: V497 = ISZERO V237
0x600: V498 = ISZERO V497
0x601: V499 = 0x60d
0x604: JUMPI 0x60d V498
---
Entry stack: [V10, 0x26d, V232, V235, V237, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x26d, V232, V235, V237, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x605
[0x605:0x60c]
---
Predecessors: [0x5fd]
Successors: [0x70a]
---
0x605 PUSH1 0x0
0x607 SWAP6
0x608 POP
0x609 PUSH2 0x70a
0x60c JUMP
---
0x605: V500 = 0x0
0x609: V501 = 0x70a
0x60c: JUMP 0x70a
---
Entry stack: [V10, 0x26d, V232, V235, V237, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x26d, V232, V235, V237, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x60d
[0x60d:0x669]
---
Predecessors: [0x5fd]
Successors: [0x66a, 0x66c]
---
0x60d JUMPDEST
0x60e POP
0x60f POP
0x610 POP
0x611 POP
0x612 PUSH1 0x1
0x614 PUSH1 0xa0
0x616 PUSH1 0x2
0x618 EXP
0x619 SUB
0x61a DUP6
0x61b DUP2
0x61c AND
0x61d PUSH1 0x0
0x61f SWAP1
0x620 DUP2
0x621 MSTORE
0x622 PUSH1 0x1
0x624 PUSH1 0x20
0x626 DUP2
0x627 DUP2
0x628 MSTORE
0x629 PUSH1 0x40
0x62b DUP1
0x62c DUP5
0x62d SHA3
0x62e SLOAD
0x62f PUSH1 0x2
0x631 DUP4
0x632 MSTORE
0x633 DUP2
0x634 DUP6
0x635 SHA3
0x636 CALLER
0x637 DUP8
0x638 AND
0x639 DUP7
0x63a MSTORE
0x63b DUP4
0x63c MSTORE
0x63d DUP2
0x63e DUP6
0x63f SHA3
0x640 SLOAD
0x641 SWAP6
0x642 DUP11
0x643 AND
0x644 DUP6
0x645 MSTORE
0x646 SWAP3
0x647 SWAP1
0x648 SWAP2
0x649 MSTORE
0x64a SWAP1
0x64b SWAP2
0x64c SHA3
0x64d SLOAD
0x64e SWAP1
0x64f SWAP3
0x650 POP
0x651 DUP5
0x652 DUP4
0x653 GT
0x654 DUP1
0x655 ISZERO
0x656 SWAP2
0x657 DUP7
0x658 DUP5
0x659 GT
0x65a ISZERO
0x65b SWAP2
0x65c DUP8
0x65d DUP3
0x65e ADD
0x65f SWAP2
0x660 SWAP1
0x661 SWAP2
0x662 GT
0x663 SWAP1
0x664 DUP4
0x665 SWAP1
0x666 PUSH2 0x66c
0x669 JUMPI
---
0x60d: JUMPDEST 
0x612: V502 = 0x1
0x614: V503 = 0xa0
0x616: V504 = 0x2
0x618: V505 = EXP 0x2 0xa0
0x619: V506 = SUB 0x10000000000000000000000000000000000000000 0x1
0x61c: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x61d: V508 = 0x0
0x621: M[0x0] = V507
0x622: V509 = 0x1
0x624: V510 = 0x20
0x628: M[0x20] = 0x1
0x629: V511 = 0x40
0x62d: V512 = SHA3 0x0 0x40
0x62e: V513 = S[V512]
0x62f: V514 = 0x2
0x632: M[0x20] = 0x2
0x635: V515 = SHA3 0x0 0x40
0x636: V516 = CALLER
0x638: V517 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x63a: M[0x0] = V517
0x63c: M[0x20] = V515
0x63f: V518 = SHA3 0x0 0x40
0x640: V519 = S[V518]
0x643: V520 = AND V235 0xffffffffffffffffffffffffffffffffffffffff
0x645: M[0x0] = V520
0x649: M[0x20] = 0x1
0x64c: V521 = SHA3 0x0 0x40
0x64d: V522 = S[V521]
0x653: V523 = GT V513 V237
0x655: V524 = ISZERO V523
0x659: V525 = GT V519 V237
0x65a: V526 = ISZERO V525
0x65e: V527 = ADD V522 V237
0x662: V528 = GT V527 V522
0x666: V529 = 0x66c
0x669: JUMPI 0x66c V523
---
Entry stack: [V10, 0x26d, V232, V235, V237, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V513, V519, V524, V526, V528, V524]
Exit stack: [V10, 0x26d, V232, V235, V237, 0x0, V513, V519, V524, V526, V528, V524]

================================

Block 0x66a
[0x66a:0x66b]
---
Predecessors: [0x60d]
Successors: [0x66c]
---
0x66a POP
0x66b DUP2
---
0x66a: NOP 
---
Entry stack: [V10, 0x26d, V232, V235, V237, 0x0, V513, V519, V524, V526, V528, V524]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V10, 0x26d, V232, V235, V237, 0x0, V513, V519, V524, V526, V528, V526]

================================

Block 0x66c
[0x66c:0x672]
---
Predecessors: [0x60d, 0x66a]
Successors: [0x673, 0x676]
---
0x66c JUMPDEST
0x66d DUP1
0x66e ISZERO
0x66f PUSH2 0x676
0x672 JUMPI
---
0x66c: JUMPDEST 
0x66e: V530 = ISZERO S0
0x66f: V531 = 0x676
0x672: JUMPI 0x676 V530
---
Entry stack: [V10, 0x26d, V232, V235, V237, 0x0, V513, V519, V524, V526, V528, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x26d, V232, V235, V237, 0x0, V513, V519, V524, V526, V528, S0]

================================

Block 0x673
[0x673:0x675]
---
Predecessors: [0x66c]
Successors: [0x676]
---
0x673 POP
0x674 DUP1
0x675 ISZERO
---
0x675: V532 = ISZERO V528
---
Entry stack: [V10, 0x26d, V232, V235, V237, 0x0, V513, V519, V524, V526, V528, S0]
Stack pops: 2
Stack additions: [S1, V532]
Exit stack: [V10, 0x26d, V232, V235, V237, 0x0, V513, V519, V524, V526, V528, V532]

================================

Block 0x676
[0x676:0x67b]
---
Predecessors: [0x66c, 0x673]
Successors: [0x67c, 0x705]
---
0x676 JUMPDEST
0x677 ISZERO
0x678 PUSH2 0x705
0x67b JUMPI
---
0x676: JUMPDEST 
0x677: V533 = ISZERO S0
0x678: V534 = 0x705
0x67b: JUMPI 0x705 V533
---
Entry stack: [V10, 0x26d, V232, V235, V237, 0x0, V513, V519, V524, V526, V528, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x26d, V232, V235, V237, 0x0, V513, V519, V524, V526, V528]

================================

Block 0x67c
[0x67c:0x704]
---
Predecessors: [0x676]
Successors: [0x70a]
---
0x67c PUSH1 0x1
0x67e PUSH1 0xa0
0x680 PUSH1 0x2
0x682 EXP
0x683 SUB
0x684 DUP1
0x685 DUP10
0x686 AND
0x687 PUSH1 0x0
0x689 DUP2
0x68a DUP2
0x68b MSTORE
0x68c PUSH1 0x1
0x68e PUSH1 0x20
0x690 SWAP1
0x691 DUP2
0x692 MSTORE
0x693 PUSH1 0x40
0x695 DUP1
0x696 DUP4
0x697 SHA3
0x698 DUP1
0x699 SLOAD
0x69a DUP14
0x69b ADD
0x69c SWAP1
0x69d SSTORE
0x69e DUP14
0x69f DUP6
0x6a0 AND
0x6a1 DUP1
0x6a2 DUP5
0x6a3 MSTORE
0x6a4 DUP2
0x6a5 DUP5
0x6a6 SHA3
0x6a7 DUP1
0x6a8 SLOAD
0x6a9 DUP15
0x6aa SWAP1
0x6ab SUB
0x6ac SWAP1
0x6ad SSTORE
0x6ae PUSH1 0x2
0x6b0 DUP4
0x6b1 MSTORE
0x6b2 DUP2
0x6b3 DUP5
0x6b4 SHA3
0x6b5 CALLER
0x6b6 SWAP1
0x6b7 SWAP7
0x6b8 AND
0x6b9 DUP5
0x6ba MSTORE
0x6bb SWAP5
0x6bc DUP3
0x6bd MSTORE
0x6be SWAP2
0x6bf DUP3
0x6c0 SWAP1
0x6c1 SHA3
0x6c2 DUP1
0x6c3 SLOAD
0x6c4 DUP13
0x6c5 SWAP1
0x6c6 SUB
0x6c7 SWAP1
0x6c8 SSTORE
0x6c9 DUP2
0x6ca MLOAD
0x6cb DUP12
0x6cc DUP2
0x6cd MSTORE
0x6ce SWAP2
0x6cf MLOAD
0x6d0 SWAP3
0x6d1 SWAP4
0x6d2 SWAP3
0x6d3 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x6f4 SWAP3
0x6f5 DUP2
0x6f6 SWAP1
0x6f7 SUB
0x6f8 SWAP1
0x6f9 SWAP2
0x6fa ADD
0x6fb SWAP1
0x6fc LOG3
0x6fd PUSH1 0x1
0x6ff SWAP6
0x700 POP
0x701 PUSH2 0x70a
0x704 JUMP
---
0x67c: V535 = 0x1
0x67e: V536 = 0xa0
0x680: V537 = 0x2
0x682: V538 = EXP 0x2 0xa0
0x683: V539 = SUB 0x10000000000000000000000000000000000000000 0x1
0x686: V540 = AND V235 0xffffffffffffffffffffffffffffffffffffffff
0x687: V541 = 0x0
0x68b: M[0x0] = V540
0x68c: V542 = 0x1
0x68e: V543 = 0x20
0x692: M[0x20] = 0x1
0x693: V544 = 0x40
0x697: V545 = SHA3 0x0 0x40
0x699: V546 = S[V545]
0x69b: V547 = ADD V237 V546
0x69d: S[V545] = V547
0x6a0: V548 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x6a3: M[0x0] = V548
0x6a6: V549 = SHA3 0x0 0x40
0x6a8: V550 = S[V549]
0x6ab: V551 = SUB V550 V237
0x6ad: S[V549] = V551
0x6ae: V552 = 0x2
0x6b1: M[0x20] = 0x2
0x6b4: V553 = SHA3 0x0 0x40
0x6b5: V554 = CALLER
0x6b8: V555 = AND 0xffffffffffffffffffffffffffffffffffffffff V554
0x6ba: M[0x0] = V555
0x6bd: M[0x20] = V553
0x6c1: V556 = SHA3 0x0 0x40
0x6c3: V557 = S[V556]
0x6c6: V558 = SUB V557 V237
0x6c8: S[V556] = V558
0x6ca: V559 = M[0x40]
0x6cd: M[V559] = V237
0x6cf: V560 = M[0x40]
0x6d3: V561 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x6f7: V562 = SUB V559 V560
0x6fa: V563 = ADD 0x20 V562
0x6fc: LOG V560 V563 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V548 V540
0x6fd: V564 = 0x1
0x701: V565 = 0x70a
0x704: JUMP 0x70a
---
Entry stack: [V10, 0x26d, V232, V235, V237, 0x0, V513, V519, V524, V526, V528]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x26d, V232, V235, V237, 0x1, V513, V519, V524, V526, V528]

================================

Block 0x705
[0x705:0x709]
---
Predecessors: [0x676]
Successors: [0x70a]
---
0x705 JUMPDEST
0x706 PUSH1 0x0
0x708 SWAP6
0x709 POP
---
0x705: JUMPDEST 
0x706: V566 = 0x0
---
Entry stack: [V10, 0x26d, V232, V235, V237, 0x0, V513, V519, V524, V526, V528]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x26d, V232, V235, V237, 0x0, V513, V519, V524, V526, V528]

================================

Block 0x70a
[0x70a:0x70a]
---
Predecessors: [0x605, 0x67c, 0x705]
Successors: [0x70b]
---
0x70a JUMPDEST
---
0x70a: JUMPDEST 
---
Entry stack: [V10, 0x26d, V232, V235, V237, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x26d, V232, V235, V237, {0x0, 0x1}, S4, S3, S2, S1, S0]

================================

Block 0x70b
[0x70b:0x716]
---
Predecessors: [0x70a]
Successors: [0x26d]
---
0x70b JUMPDEST
0x70c POP
0x70d POP
0x70e POP
0x70f POP
0x710 POP
0x711 SWAP4
0x712 SWAP3
0x713 POP
0x714 POP
0x715 POP
0x716 JUMP
---
0x70b: JUMPDEST 
0x716: JUMP 0x26d
---
Entry stack: [V10, 0x26d, V232, V235, V237, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S5]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x717
[0x717:0x719]
---
Predecessors: [0x306]
Successors: [0x71a]
---
0x717 JUMPDEST
0x718 PUSH1 0x12
---
0x717: JUMPDEST 
0x718: V567 = 0x12
---
Entry stack: [V10, 0x30e]
Stack pops: 0
Stack additions: [0x12]
Exit stack: [V10, 0x30e, 0x12]

================================

Block 0x71a
[0x71a:0x71c]
---
Predecessors: [0x717]
Successors: [0x30e]
---
0x71a JUMPDEST
0x71b SWAP1
0x71c JUMP
---
0x71a: JUMPDEST 
0x71c: JUMP 0x30e
---
Entry stack: [V10, 0x30e, 0x12]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x12]

================================

Block 0x71d
[0x71d:0x733]
---
Predecessors: [0x32c]
Successors: [0x734, 0x739]
---
0x71d JUMPDEST
0x71e PUSH1 0x0
0x720 SLOAD
0x721 CALLER
0x722 PUSH1 0x1
0x724 PUSH1 0xa0
0x726 PUSH1 0x2
0x728 EXP
0x729 SUB
0x72a SWAP1
0x72b DUP2
0x72c AND
0x72d SWAP2
0x72e AND
0x72f EQ
0x730 PUSH2 0x739
0x733 JUMPI
---
0x71d: JUMPDEST 
0x71e: V568 = 0x0
0x720: V569 = S[0x0]
0x721: V570 = CALLER
0x722: V571 = 0x1
0x724: V572 = 0xa0
0x726: V573 = 0x2
0x728: V574 = EXP 0x2 0xa0
0x729: V575 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72c: V576 = AND 0xffffffffffffffffffffffffffffffffffffffff V570
0x72e: V577 = AND V569 0xffffffffffffffffffffffffffffffffffffffff
0x72f: V578 = EQ V577 V576
0x730: V579 = 0x739
0x733: JUMPI 0x739 V578
---
Entry stack: [V10, 0x1bc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1bc]

================================

Block 0x734
[0x734:0x738]
---
Predecessors: [0x71d]
Successors: []
---
0x734 PUSH1 0x0
0x736 PUSH1 0x0
0x738 REVERT
---
0x734: V580 = 0x0
0x736: V581 = 0x0
0x738: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1bc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1bc]

================================

Block 0x739
[0x739:0x757]
---
Predecessors: [0x71d]
Successors: [0x758]
---
0x739 JUMPDEST
0x73a PUSH1 0x0
0x73c DUP1
0x73d SLOAD
0x73e PUSH21 0xff0000000000000000000000000000000000000000
0x754 NOT
0x755 AND
0x756 SWAP1
0x757 SSTORE
---
0x739: JUMPDEST 
0x73a: V582 = 0x0
0x73d: V583 = S[0x0]
0x73e: V584 = 0xff0000000000000000000000000000000000000000
0x754: V585 = NOT 0xff0000000000000000000000000000000000000000
0x755: V586 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V583
0x757: S[0x0] = V586
---
Entry stack: [V10, 0x1bc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1bc]

================================

Block 0x758
[0x758:0x759]
---
Predecessors: [0x739]
Successors: [0x1bc]
---
0x758 JUMPDEST
0x759 JUMP
---
0x758: JUMPDEST 
0x759: JUMP 0x1bc
---
Entry stack: [V10, 0x1bc]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x75a
[0x75a:0x773]
---
Predecessors: [0x33e]
Successors: [0x774]
---
0x75a JUMPDEST
0x75b PUSH1 0x1
0x75d PUSH1 0xa0
0x75f PUSH1 0x2
0x761 EXP
0x762 SUB
0x763 DUP2
0x764 AND
0x765 PUSH1 0x0
0x767 SWAP1
0x768 DUP2
0x769 MSTORE
0x76a PUSH1 0x1
0x76c PUSH1 0x20
0x76e MSTORE
0x76f PUSH1 0x40
0x771 SWAP1
0x772 SHA3
0x773 SLOAD
---
0x75a: JUMPDEST 
0x75b: V587 = 0x1
0x75d: V588 = 0xa0
0x75f: V589 = 0x2
0x761: V590 = EXP 0x2 0xa0
0x762: V591 = SUB 0x10000000000000000000000000000000000000000 0x1
0x764: V592 = AND V276 0xffffffffffffffffffffffffffffffffffffffff
0x765: V593 = 0x0
0x769: M[0x0] = V592
0x76a: V594 = 0x1
0x76c: V595 = 0x20
0x76e: M[0x20] = 0x1
0x76f: V596 = 0x40
0x772: V597 = SHA3 0x0 0x40
0x773: V598 = S[V597]
---
Entry stack: [V10, 0x291, V276]
Stack pops: 1
Stack additions: [S0, V598]
Exit stack: [V10, 0x291, V276, V598]

================================

Block 0x774
[0x774:0x778]
---
Predecessors: [0x75a]
Successors: [0x291]
---
0x774 JUMPDEST
0x775 SWAP2
0x776 SWAP1
0x777 POP
0x778 JUMP
---
0x774: JUMPDEST 
0x778: JUMP 0x291
---
Entry stack: [V10, 0x291, V276, V598]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V598]

================================

Block 0x779
[0x779:0x78f]
---
Predecessors: [0x36c]
Successors: [0x790, 0x795]
---
0x779 JUMPDEST
0x77a PUSH1 0x0
0x77c SLOAD
0x77d CALLER
0x77e PUSH1 0x1
0x780 PUSH1 0xa0
0x782 PUSH1 0x2
0x784 EXP
0x785 SUB
0x786 SWAP1
0x787 DUP2
0x788 AND
0x789 SWAP2
0x78a AND
0x78b EQ
0x78c PUSH2 0x795
0x78f JUMPI
---
0x779: JUMPDEST 
0x77a: V599 = 0x0
0x77c: V600 = S[0x0]
0x77d: V601 = CALLER
0x77e: V602 = 0x1
0x780: V603 = 0xa0
0x782: V604 = 0x2
0x784: V605 = EXP 0x2 0xa0
0x785: V606 = SUB 0x10000000000000000000000000000000000000000 0x1
0x788: V607 = AND 0xffffffffffffffffffffffffffffffffffffffff V601
0x78a: V608 = AND V600 0xffffffffffffffffffffffffffffffffffffffff
0x78b: V609 = EQ V608 V607
0x78c: V610 = 0x795
0x78f: JUMPI 0x795 V609
---
Entry stack: [V10, 0x1bc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1bc]

================================

Block 0x790
[0x790:0x794]
---
Predecessors: [0x779]
Successors: []
---
0x790 PUSH1 0x0
0x792 PUSH1 0x0
0x794 REVERT
---
0x790: V611 = 0x0
0x792: V612 = 0x0
0x794: REVERT 0x0 0x0
---
Entry stack: [V10, 0x1bc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1bc]

================================

Block 0x795
[0x795:0x7b9]
---
Predecessors: [0x779]
Successors: [0x7ba]
---
0x795 JUMPDEST
0x796 PUSH1 0x0
0x798 DUP1
0x799 SLOAD
0x79a PUSH21 0xff0000000000000000000000000000000000000000
0x7b0 NOT
0x7b1 AND
0x7b2 PUSH1 0xa0
0x7b4 PUSH1 0x2
0x7b6 EXP
0x7b7 OR
0x7b8 SWAP1
0x7b9 SSTORE
---
0x795: JUMPDEST 
0x796: V613 = 0x0
0x799: V614 = S[0x0]
0x79a: V615 = 0xff0000000000000000000000000000000000000000
0x7b0: V616 = NOT 0xff0000000000000000000000000000000000000000
0x7b1: V617 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V614
0x7b2: V618 = 0xa0
0x7b4: V619 = 0x2
0x7b6: V620 = EXP 0x2 0xa0
0x7b7: V621 = OR 0x10000000000000000000000000000000000000000 V617
0x7b9: S[0x0] = V621
---
Entry stack: [V10, 0x1bc]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x1bc]

================================

Block 0x7ba
[0x7ba:0x7bb]
---
Predecessors: [0x795]
Successors: [0x1bc]
---
0x7ba JUMPDEST
0x7bb JUMP
---
0x7ba: JUMPDEST 
0x7bb: JUMP 0x1bc
---
Entry stack: [V10, 0x1bc]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x7bc
[0x7bc:0x7c3]
---
Predecessors: [0x37e]
Successors: [0xa7a]
---
0x7bc JUMPDEST
0x7bd PUSH2 0x7c4
0x7c0 PUSH2 0xa7a
0x7c3 JUMP
---
0x7bc: JUMPDEST 
0x7bd: V622 = 0x7c4
0x7c0: V623 = 0xa7a
0x7c3: JUMP 0xa7a
---
Entry stack: [V10, 0x1ce]
Stack pops: 0
Stack additions: [0x7c4]
Exit stack: [V10, 0x1ce, 0x7c4]

================================

Block 0x7c4
[0x7c4:0x7f9]
---
Predecessors: [0xa7a]
Successors: [0x7fa]
---
0x7c4 JUMPDEST
0x7c5 POP
0x7c6 PUSH1 0x40
0x7c8 DUP1
0x7c9 MLOAD
0x7ca DUP1
0x7cb DUP3
0x7cc ADD
0x7cd SWAP1
0x7ce SWAP2
0x7cf MSTORE
0x7d0 PUSH1 0x4
0x7d2 DUP2
0x7d3 MSTORE
0x7d4 PUSH32 0x4445555300000000000000000000000000000000000000000000000000000000
0x7f5 PUSH1 0x20
0x7f7 DUP3
0x7f8 ADD
0x7f9 MSTORE
---
0x7c4: JUMPDEST 
0x7c6: V624 = 0x40
0x7c9: V625 = M[0x40]
0x7cc: V626 = ADD 0x40 V625
0x7cf: M[0x40] = V626
0x7d0: V627 = 0x4
0x7d3: M[V625] = 0x4
0x7d4: V628 = 0x4445555300000000000000000000000000000000000000000000000000000000
0x7f5: V629 = 0x20
0x7f8: V630 = ADD V625 0x20
0x7f9: M[V630] = 0x4445555300000000000000000000000000000000000000000000000000000000
---
Entry stack: [V10, 0x1ce, V834]
Stack pops: 1
Stack additions: [V625]
Exit stack: [V10, 0x1ce, V625]

================================

Block 0x7fa
[0x7fa:0x7fc]
---
Predecessors: [0x7c4]
Successors: [0x1ce]
---
0x7fa JUMPDEST
0x7fb SWAP1
0x7fc JUMP
---
0x7fa: JUMPDEST 
0x7fc: JUMP 0x1ce
---
Entry stack: [V10, 0x1ce, V625]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V625]

================================

Block 0x7fd
[0x7fd:0x818]
---
Predecessors: [0x40e]
Successors: [0x819, 0x81e]
---
0x7fd JUMPDEST
0x7fe PUSH1 0x0
0x800 DUP1
0x801 SLOAD
0x802 DUP2
0x803 SWAP1
0x804 DUP2
0x805 SWAP1
0x806 CALLER
0x807 PUSH1 0x1
0x809 PUSH1 0xa0
0x80b PUSH1 0x2
0x80d EXP
0x80e SUB
0x80f SWAP1
0x810 DUP2
0x811 AND
0x812 SWAP2
0x813 AND
0x814 EQ
0x815 PUSH2 0x81e
0x818 JUMPI
---
0x7fd: JUMPDEST 
0x7fe: V631 = 0x0
0x801: V632 = S[0x0]
0x806: V633 = CALLER
0x807: V634 = 0x1
0x809: V635 = 0xa0
0x80b: V636 = 0x2
0x80d: V637 = EXP 0x2 0xa0
0x80e: V638 = SUB 0x10000000000000000000000000000000000000000 0x1
0x811: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V633
0x813: V640 = AND V632 0xffffffffffffffffffffffffffffffffffffffff
0x814: V641 = EQ V640 V639
0x815: V642 = 0x81e
0x818: JUMPI 0x81e V641
---
Entry stack: [V10, 0x26d, V347]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, 0x26d, V347, 0x0, 0x0, 0x0]

================================

Block 0x819
[0x819:0x81d]
---
Predecessors: [0x7fd]
Successors: []
---
0x819 PUSH1 0x0
0x81b PUSH1 0x0
0x81d REVERT
---
0x819: V643 = 0x0
0x81b: V644 = 0x0
0x81d: REVERT 0x0 0x0
---
Entry stack: [V10, 0x26d, V347, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x26d, V347, 0x0, 0x0, 0x0]

================================

Block 0x81e
[0x81e:0x898]
---
Predecessors: [0x7fd]
Successors: [0x899, 0x89a]
---
0x81e JUMPDEST
0x81f DUP4
0x820 SWAP2
0x821 POP
0x822 DUP2
0x823 PUSH1 0x1
0x825 PUSH1 0xa0
0x827 PUSH1 0x2
0x829 EXP
0x82a SUB
0x82b AND
0x82c PUSH4 0x70a08231
0x831 ADDRESS
0x832 PUSH1 0x0
0x834 PUSH1 0x40
0x836 MLOAD
0x837 PUSH1 0x20
0x839 ADD
0x83a MSTORE
0x83b PUSH1 0x40
0x83d MLOAD
0x83e DUP3
0x83f PUSH4 0xffffffff
0x844 AND
0x845 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x863 MUL
0x864 DUP2
0x865 MSTORE
0x866 PUSH1 0x4
0x868 ADD
0x869 DUP1
0x86a DUP3
0x86b PUSH1 0x1
0x86d PUSH1 0xa0
0x86f PUSH1 0x2
0x871 EXP
0x872 SUB
0x873 AND
0x874 PUSH1 0x1
0x876 PUSH1 0xa0
0x878 PUSH1 0x2
0x87a EXP
0x87b SUB
0x87c AND
0x87d DUP2
0x87e MSTORE
0x87f PUSH1 0x20
0x881 ADD
0x882 SWAP2
0x883 POP
0x884 POP
0x885 PUSH1 0x20
0x887 PUSH1 0x40
0x889 MLOAD
0x88a DUP1
0x88b DUP4
0x88c SUB
0x88d DUP2
0x88e PUSH1 0x0
0x890 DUP8
0x891 DUP1
0x892 EXTCODESIZE
0x893 ISZERO
0x894 ISZERO
0x895 PUSH2 0x89a
0x898 JUMPI
---
0x81e: JUMPDEST 
0x823: V645 = 0x1
0x825: V646 = 0xa0
0x827: V647 = 0x2
0x829: V648 = EXP 0x2 0xa0
0x82a: V649 = SUB 0x10000000000000000000000000000000000000000 0x1
0x82b: V650 = AND 0xffffffffffffffffffffffffffffffffffffffff V347
0x82c: V651 = 0x70a08231
0x831: V652 = ADDRESS
0x832: V653 = 0x0
0x834: V654 = 0x40
0x836: V655 = M[0x40]
0x837: V656 = 0x20
0x839: V657 = ADD 0x20 V655
0x83a: M[V657] = 0x0
0x83b: V658 = 0x40
0x83d: V659 = M[0x40]
0x83f: V660 = 0xffffffff
0x844: V661 = AND 0xffffffff 0x70a08231
0x845: V662 = 0x100000000000000000000000000000000000000000000000000000000
0x863: V663 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x865: M[V659] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x866: V664 = 0x4
0x868: V665 = ADD 0x4 V659
0x86b: V666 = 0x1
0x86d: V667 = 0xa0
0x86f: V668 = 0x2
0x871: V669 = EXP 0x2 0xa0
0x872: V670 = SUB 0x10000000000000000000000000000000000000000 0x1
0x873: V671 = AND 0xffffffffffffffffffffffffffffffffffffffff V652
0x874: V672 = 0x1
0x876: V673 = 0xa0
0x878: V674 = 0x2
0x87a: V675 = EXP 0x2 0xa0
0x87b: V676 = SUB 0x10000000000000000000000000000000000000000 0x1
0x87c: V677 = AND 0xffffffffffffffffffffffffffffffffffffffff V671
0x87e: M[V665] = V677
0x87f: V678 = 0x20
0x881: V679 = ADD 0x20 V665
0x885: V680 = 0x20
0x887: V681 = 0x40
0x889: V682 = M[0x40]
0x88c: V683 = SUB V679 V682
0x88e: V684 = 0x0
0x892: V685 = EXTCODESIZE V650
0x893: V686 = ISZERO V685
0x894: V687 = ISZERO V686
0x895: V688 = 0x89a
0x898: JUMPI 0x89a V687
---
Entry stack: [V10, 0x26d, V347, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V650, 0x70a08231, V679, 0x20, V682, V683, V682, 0x0, V650]
Exit stack: [V10, 0x26d, V347, 0x0, V347, 0x0, V650, 0x70a08231, V679, 0x20, V682, V683, V682, 0x0, V650]

================================

Block 0x899
[0x899:0x899]
---
Predecessors: [0x81e]
Successors: []
---
0x899 INVALID
---
0x899: INVALID 
---
Entry stack: [V10, 0x26d, V347, 0x0, V347, 0x0, V650, 0x70a08231, V679, 0x20, V682, V683, V682, 0x0, V650]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x26d, V347, 0x0, V347, 0x0, V650, 0x70a08231, V679, 0x20, V682, V683, V682, 0x0, V650]

================================

Block 0x89a
[0x89a:0x8a6]
---
Predecessors: [0x81e]
Successors: [0x8a7, 0x8a8]
---
0x89a JUMPDEST
0x89b PUSH2 0x2c6
0x89e GAS
0x89f SUB
0x8a0 CALL
0x8a1 ISZERO
0x8a2 ISZERO
0x8a3 PUSH2 0x8a8
0x8a6 JUMPI
---
0x89a: JUMPDEST 
0x89b: V689 = 0x2c6
0x89e: V690 = GAS
0x89f: V691 = SUB V690 0x2c6
0x8a0: V692 = CALL V691 V650 0x0 V682 V683 V682 0x20
0x8a1: V693 = ISZERO V692
0x8a2: V694 = ISZERO V693
0x8a3: V695 = 0x8a8
0x8a6: JUMPI 0x8a8 V694
---
Entry stack: [V10, 0x26d, V347, 0x0, V347, 0x0, V650, 0x70a08231, V679, 0x20, V682, V683, V682, 0x0, V650]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x26d, V347, 0x0, V347, 0x0, V650, 0x70a08231, V679]

================================

Block 0x8a7
[0x8a7:0x8a7]
---
Predecessors: [0x89a]
Successors: []
---
0x8a7 INVALID
---
0x8a7: INVALID 
---
Entry stack: [V10, 0x26d, V347, 0x0, V347, 0x0, V650, 0x70a08231, V679]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x26d, V347, 0x0, V347, 0x0, V650, 0x70a08231, V679]

================================

Block 0x8a8
[0x8a8:0x920]
---
Predecessors: [0x89a]
Successors: [0x921, 0x922]
---
0x8a8 JUMPDEST
0x8a9 POP
0x8aa POP
0x8ab PUSH1 0x40
0x8ad DUP1
0x8ae MLOAD
0x8af DUP1
0x8b0 MLOAD
0x8b1 PUSH1 0x0
0x8b3 DUP1
0x8b4 SLOAD
0x8b5 PUSH1 0x20
0x8b7 SWAP4
0x8b8 DUP5
0x8b9 ADD
0x8ba DUP3
0x8bb SWAP1
0x8bc MSTORE
0x8bd DUP5
0x8be MLOAD
0x8bf PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x8e0 DUP2
0x8e1 MSTORE
0x8e2 PUSH1 0x1
0x8e4 PUSH1 0xa0
0x8e6 PUSH1 0x2
0x8e8 EXP
0x8e9 SUB
0x8ea SWAP2
0x8eb DUP3
0x8ec AND
0x8ed PUSH1 0x4
0x8ef DUP3
0x8f0 ADD
0x8f1 MSTORE
0x8f2 PUSH1 0x24
0x8f4 DUP2
0x8f5 ADD
0x8f6 DUP5
0x8f7 SWAP1
0x8f8 MSTORE
0x8f9 SWAP5
0x8fa MLOAD
0x8fb SWAP3
0x8fc SWAP7
0x8fd POP
0x8fe DUP8
0x8ff AND
0x900 SWAP5
0x901 POP
0x902 PUSH4 0xa9059cbb
0x907 SWAP4
0x908 PUSH1 0x44
0x90a DUP1
0x90b DUP3
0x90c ADD
0x90d SWAP5
0x90e SWAP4
0x90f SWAP3
0x910 SWAP2
0x911 DUP4
0x912 SWAP1
0x913 SUB
0x914 ADD
0x915 SWAP1
0x916 DUP3
0x917 SWAP1
0x918 DUP8
0x919 DUP1
0x91a EXTCODESIZE
0x91b ISZERO
0x91c ISZERO
0x91d PUSH2 0x922
0x920 JUMPI
---
0x8a8: JUMPDEST 
0x8ab: V696 = 0x40
0x8ae: V697 = M[0x40]
0x8b0: V698 = M[V697]
0x8b1: V699 = 0x0
0x8b4: V700 = S[0x0]
0x8b5: V701 = 0x20
0x8b9: V702 = ADD 0x20 V697
0x8bc: M[V702] = 0x0
0x8be: V703 = M[0x40]
0x8bf: V704 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x8e1: M[V703] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x8e2: V705 = 0x1
0x8e4: V706 = 0xa0
0x8e6: V707 = 0x2
0x8e8: V708 = EXP 0x2 0xa0
0x8e9: V709 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ec: V710 = AND 0xffffffffffffffffffffffffffffffffffffffff V700
0x8ed: V711 = 0x4
0x8f0: V712 = ADD V703 0x4
0x8f1: M[V712] = V710
0x8f2: V713 = 0x24
0x8f5: V714 = ADD V703 0x24
0x8f8: M[V714] = V698
0x8fa: V715 = M[0x40]
0x8ff: V716 = AND V347 0xffffffffffffffffffffffffffffffffffffffff
0x902: V717 = 0xa9059cbb
0x908: V718 = 0x44
0x90c: V719 = ADD V703 0x44
0x913: V720 = SUB V703 V715
0x914: V721 = ADD V720 0x44
0x91a: V722 = EXTCODESIZE V716
0x91b: V723 = ISZERO V722
0x91c: V724 = ISZERO V723
0x91d: V725 = 0x922
0x920: JUMPI 0x922 V724
---
Entry stack: [V10, 0x26d, V347, 0x0, V347, 0x0, V650, 0x70a08231, V679]
Stack pops: 5
Stack additions: [S4, V698, V716, 0xa9059cbb, V719, 0x20, V715, V721, V715, 0x0, V716]
Exit stack: [V10, 0x26d, V347, 0x0, V347, V698, V716, 0xa9059cbb, V719, 0x20, V715, V721, V715, 0x0, V716]

================================

Block 0x921
[0x921:0x921]
---
Predecessors: [0x8a8]
Successors: []
---
0x921 INVALID
---
0x921: INVALID 
---
Entry stack: [V10, 0x26d, V347, 0x0, V347, V698, V716, 0xa9059cbb, V719, 0x20, V715, V721, V715, 0x0, V716]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x26d, V347, 0x0, V347, V698, V716, 0xa9059cbb, V719, 0x20, V715, V721, V715, 0x0, V716]

================================

Block 0x922
[0x922:0x92e]
---
Predecessors: [0x8a8]
Successors: [0x92f, 0x930]
---
0x922 JUMPDEST
0x923 PUSH2 0x2c6
0x926 GAS
0x927 SUB
0x928 CALL
0x929 ISZERO
0x92a ISZERO
0x92b PUSH2 0x930
0x92e JUMPI
---
0x922: JUMPDEST 
0x923: V726 = 0x2c6
0x926: V727 = GAS
0x927: V728 = SUB V727 0x2c6
0x928: V729 = CALL V728 V716 0x0 V715 V721 V715 0x20
0x929: V730 = ISZERO V729
0x92a: V731 = ISZERO V730
0x92b: V732 = 0x930
0x92e: JUMPI 0x930 V731
---
Entry stack: [V10, 0x26d, V347, 0x0, V347, V698, V716, 0xa9059cbb, V719, 0x20, V715, V721, V715, 0x0, V716]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x26d, V347, 0x0, V347, V698, V716, 0xa9059cbb, V719]

================================

Block 0x92f
[0x92f:0x92f]
---
Predecessors: [0x922]
Successors: []
---
0x92f INVALID
---
0x92f: INVALID 
---
Entry stack: [V10, 0x26d, V347, 0x0, V347, V698, V716, 0xa9059cbb, V719]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x26d, V347, 0x0, V347, V698, V716, 0xa9059cbb, V719]

================================

Block 0x930
[0x930:0x939]
---
Predecessors: [0x922]
Successors: [0x93a]
---
0x930 JUMPDEST
0x931 POP
0x932 POP
0x933 PUSH1 0x40
0x935 MLOAD
0x936 MLOAD
0x937 SWAP4
0x938 POP
0x939 POP
---
0x930: JUMPDEST 
0x933: V733 = 0x40
0x935: V734 = M[0x40]
0x936: V735 = M[V734]
---
Entry stack: [V10, 0x26d, V347, 0x0, V347, V698, V716, 0xa9059cbb, V719]
Stack pops: 6
Stack additions: [V735, S4, S3]
Exit stack: [V10, 0x26d, V347, V735, V347, V698]

================================

Block 0x93a
[0x93a:0x940]
---
Predecessors: [0x930]
Successors: [0x26d]
---
0x93a JUMPDEST
0x93b POP
0x93c POP
0x93d SWAP2
0x93e SWAP1
0x93f POP
0x940 JUMP
---
0x93a: JUMPDEST 
0x940: JUMP 0x26d
---
Entry stack: [V10, 0x26d, V347, V735, V347, V698]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V10, V735]

================================

Block 0x941
[0x941:0x94f]
---
Predecessors: [0x43e]
Successors: [0x950, 0x955]
---
0x941 JUMPDEST
0x942 PUSH1 0x0
0x944 DUP1
0x945 DUP1
0x946 DUP1
0x947 PUSH1 0x44
0x949 CALLDATASIZE
0x94a LT
0x94b ISZERO
0x94c PUSH2 0x955
0x94f JUMPI
---
0x941: JUMPDEST 
0x942: V736 = 0x0
0x947: V737 = 0x44
0x949: V738 = CALLDATASIZE
0x94a: V739 = LT V738 0x44
0x94b: V740 = ISZERO V739
0x94c: V741 = 0x955
0x94f: JUMPI 0x955 V740
---
Entry stack: [V10, 0x26d, V368, V370]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x26d, V368, V370, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x950
[0x950:0x954]
---
Predecessors: [0x941]
Successors: []
---
0x950 PUSH1 0x0
0x952 PUSH1 0x0
0x954 REVERT
---
0x950: V742 = 0x0
0x952: V743 = 0x0
0x954: REVERT 0x0 0x0
---
Entry stack: [V10, 0x26d, V368, V370, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x26d, V368, V370, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x955
[0x955:0x95c]
---
Predecessors: [0x941]
Successors: [0x95d, 0x965]
---
0x955 JUMPDEST
0x956 DUP5
0x957 ISZERO
0x958 ISZERO
0x959 PUSH2 0x965
0x95c JUMPI
---
0x955: JUMPDEST 
0x957: V744 = ISZERO V370
0x958: V745 = ISZERO V744
0x959: V746 = 0x965
0x95c: JUMPI 0x965 V745
---
Entry stack: [V10, 0x26d, V368, V370, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x26d, V368, V370, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x95d
[0x95d:0x964]
---
Predecessors: [0x955]
Successors: [0xa1a]
---
0x95d PUSH1 0x0
0x95f SWAP4
0x960 POP
0x961 PUSH2 0xa1a
0x964 JUMP
---
0x95d: V747 = 0x0
0x961: V748 = 0xa1a
0x964: JUMP 0xa1a
---
Entry stack: [V10, 0x26d, V368, V370, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V10, 0x26d, V368, V370, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x965
[0x965:0x99c]
---
Predecessors: [0x955]
Successors: [0x99d, 0x9a0]
---
0x965 JUMPDEST
0x966 POP
0x967 POP
0x968 POP
0x969 PUSH1 0x1
0x96b PUSH1 0xa0
0x96d PUSH1 0x2
0x96f EXP
0x970 SUB
0x971 CALLER
0x972 DUP2
0x973 AND
0x974 PUSH1 0x0
0x976 SWAP1
0x977 DUP2
0x978 MSTORE
0x979 PUSH1 0x1
0x97b PUSH1 0x20
0x97d MSTORE
0x97e PUSH1 0x40
0x980 DUP1
0x981 DUP3
0x982 SHA3
0x983 SLOAD
0x984 SWAP3
0x985 DUP7
0x986 AND
0x987 DUP3
0x988 MSTORE
0x989 SWAP1
0x98a SHA3
0x98b SLOAD
0x98c DUP4
0x98d DUP3
0x98e LT
0x98f DUP1
0x990 ISZERO
0x991 SWAP2
0x992 DUP1
0x993 DUP7
0x994 ADD
0x995 LT
0x996 SWAP1
0x997 DUP3
0x998 SWAP1
0x999 PUSH2 0x9a0
0x99c JUMPI
---
0x965: JUMPDEST 
0x969: V749 = 0x1
0x96b: V750 = 0xa0
0x96d: V751 = 0x2
0x96f: V752 = EXP 0x2 0xa0
0x970: V753 = SUB 0x10000000000000000000000000000000000000000 0x1
0x971: V754 = CALLER
0x973: V755 = AND 0xffffffffffffffffffffffffffffffffffffffff V754
0x974: V756 = 0x0
0x978: M[0x0] = V755
0x979: V757 = 0x1
0x97b: V758 = 0x20
0x97d: M[0x20] = 0x1
0x97e: V759 = 0x40
0x982: V760 = SHA3 0x0 0x40
0x983: V761 = S[V760]
0x986: V762 = AND V368 0xffffffffffffffffffffffffffffffffffffffff
0x988: M[0x0] = V762
0x98a: V763 = SHA3 0x0 0x40
0x98b: V764 = S[V763]
0x98e: V765 = LT V761 V370
0x990: V766 = ISZERO V765
0x994: V767 = ADD V370 V764
0x995: V768 = LT V767 V764
0x999: V769 = 0x9a0
0x99c: JUMPI 0x9a0 V765
---
Entry stack: [V10, 0x26d, V368, V370, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V761, V766, V768, V766]
Exit stack: [V10, 0x26d, V368, V370, 0x0, V761, V766, V768, V766]

================================

Block 0x99d
[0x99d:0x99f]
---
Predecessors: [0x965]
Successors: [0x9a0]
---
0x99d POP
0x99e DUP1
0x99f ISZERO
---
0x99f: V770 = ISZERO V768
---
Entry stack: [V10, 0x26d, V368, V370, 0x0, V761, V766, V768, V766]
Stack pops: 2
Stack additions: [S1, V770]
Exit stack: [V10, 0x26d, V368, V370, 0x0, V761, V766, V768, V770]

================================

Block 0x9a0
[0x9a0:0x9a5]
---
Predecessors: [0x965, 0x99d]
Successors: [0x9a6, 0xa15]
---
0x9a0 JUMPDEST
0x9a1 ISZERO
0x9a2 PUSH2 0xa15
0x9a5 JUMPI
---
0x9a0: JUMPDEST 
0x9a1: V771 = ISZERO S0
0x9a2: V772 = 0xa15
0x9a5: JUMPI 0xa15 V771
---
Entry stack: [V10, 0x26d, V368, V370, 0x0, V761, V766, V768, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x26d, V368, V370, 0x0, V761, V766, V768]

================================

Block 0x9a6
[0x9a6:0xa14]
---
Predecessors: [0x9a0]
Successors: [0xa1a]
---
0x9a6 PUSH1 0x1
0x9a8 PUSH1 0xa0
0x9aa PUSH1 0x2
0x9ac EXP
0x9ad SUB
0x9ae CALLER
0x9af DUP2
0x9b0 AND
0x9b1 PUSH1 0x0
0x9b3 DUP2
0x9b4 DUP2
0x9b5 MSTORE
0x9b6 PUSH1 0x1
0x9b8 PUSH1 0x20
0x9ba SWAP1
0x9bb DUP2
0x9bc MSTORE
0x9bd PUSH1 0x40
0x9bf DUP1
0x9c0 DUP4
0x9c1 SHA3
0x9c2 DUP1
0x9c3 SLOAD
0x9c4 DUP12
0x9c5 SWAP1
0x9c6 SUB
0x9c7 SWAP1
0x9c8 SSTORE
0x9c9 SWAP4
0x9ca DUP11
0x9cb AND
0x9cc DUP1
0x9cd DUP4
0x9ce MSTORE
0x9cf SWAP2
0x9d0 DUP5
0x9d1 SWAP1
0x9d2 SHA3
0x9d3 DUP1
0x9d4 SLOAD
0x9d5 DUP11
0x9d6 ADD
0x9d7 SWAP1
0x9d8 SSTORE
0x9d9 DUP4
0x9da MLOAD
0x9db DUP10
0x9dc DUP2
0x9dd MSTORE
0x9de SWAP4
0x9df MLOAD
0x9e0 SWAP2
0x9e1 SWAP4
0x9e2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa03 SWAP3
0xa04 SWAP1
0xa05 DUP2
0xa06 SWAP1
0xa07 SUB
0xa08 SWAP1
0xa09 SWAP2
0xa0a ADD
0xa0b SWAP1
0xa0c LOG3
0xa0d PUSH1 0x1
0xa0f SWAP4
0xa10 POP
0xa11 PUSH2 0xa1a
0xa14 JUMP
---
0x9a6: V773 = 0x1
0x9a8: V774 = 0xa0
0x9aa: V775 = 0x2
0x9ac: V776 = EXP 0x2 0xa0
0x9ad: V777 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ae: V778 = CALLER
0x9b0: V779 = AND 0xffffffffffffffffffffffffffffffffffffffff V778
0x9b1: V780 = 0x0
0x9b5: M[0x0] = V779
0x9b6: V781 = 0x1
0x9b8: V782 = 0x20
0x9bc: M[0x20] = 0x1
0x9bd: V783 = 0x40
0x9c1: V784 = SHA3 0x0 0x40
0x9c3: V785 = S[V784]
0x9c6: V786 = SUB V785 V370
0x9c8: S[V784] = V786
0x9cb: V787 = AND V368 0xffffffffffffffffffffffffffffffffffffffff
0x9ce: M[0x0] = V787
0x9d2: V788 = SHA3 0x0 0x40
0x9d4: V789 = S[V788]
0x9d6: V790 = ADD V370 V789
0x9d8: S[V788] = V790
0x9da: V791 = M[0x40]
0x9dd: M[V791] = V370
0x9df: V792 = M[0x40]
0x9e2: V793 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xa07: V794 = SUB V791 V792
0xa0a: V795 = ADD 0x20 V794
0xa0c: LOG V792 V795 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V779 V787
0xa0d: V796 = 0x1
0xa11: V797 = 0xa1a
0xa14: JUMP 0xa1a
---
Entry stack: [V10, 0x26d, V368, V370, 0x0, V761, V766, V768]
Stack pops: 6
Stack additions: [S5, S4, 0x1, S2, S1, S0]
Exit stack: [V10, 0x26d, V368, V370, 0x1, V761, V766, V768]

================================

Block 0xa15
[0xa15:0xa19]
---
Predecessors: [0x9a0]
Successors: [0xa1a]
---
0xa15 JUMPDEST
0xa16 PUSH1 0x0
0xa18 SWAP4
0xa19 POP
---
0xa15: JUMPDEST 
0xa16: V798 = 0x0
---
Entry stack: [V10, 0x26d, V368, V370, 0x0, V761, V766, V768]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V10, 0x26d, V368, V370, 0x0, V761, V766, V768]

================================

Block 0xa1a
[0xa1a:0xa1a]
---
Predecessors: [0x95d, 0x9a6, 0xa15]
Successors: [0xa1b]
---
0xa1a JUMPDEST
---
0xa1a: JUMPDEST 
---
Entry stack: [V10, 0x26d, V368, V370, {0x0, 0x1}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x26d, V368, V370, {0x0, 0x1}, S2, S1, S0]

================================

Block 0xa1b
[0xa1b:0xa23]
---
Predecessors: [0xa1a]
Successors: [0x26d]
---
0xa1b JUMPDEST
0xa1c POP
0xa1d POP
0xa1e POP
0xa1f SWAP3
0xa20 SWAP2
0xa21 POP
0xa22 POP
0xa23 JUMP
---
0xa1b: JUMPDEST 
0xa23: JUMP 0x26d
---
Entry stack: [V10, 0x26d, V368, V370, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0xa24
[0xa24:0xa37]
---
Predecessors: [0x471]
Successors: [0xa38]
---
0xa24 JUMPDEST
0xa25 PUSH1 0x3
0xa27 SLOAD
0xa28 PUSH1 0x4
0xa2a SLOAD
0xa2b PUSH1 0x0
0xa2d SLOAD
0xa2e PUSH1 0xa0
0xa30 PUSH1 0x2
0xa32 EXP
0xa33 SWAP1
0xa34 DIV
0xa35 PUSH1 0xff
0xa37 AND
---
0xa24: JUMPDEST 
0xa25: V799 = 0x3
0xa27: V800 = S[0x3]
0xa28: V801 = 0x4
0xa2a: V802 = S[0x4]
0xa2b: V803 = 0x0
0xa2d: V804 = S[0x0]
0xa2e: V805 = 0xa0
0xa30: V806 = 0x2
0xa32: V807 = EXP 0x2 0xa0
0xa34: V808 = DIV V804 0x10000000000000000000000000000000000000000
0xa35: V809 = 0xff
0xa37: V810 = AND 0xff V808
---
Entry stack: [V10, 0x479]
Stack pops: 0
Stack additions: [V800, V802, V810]
Exit stack: [V10, 0x479, V800, V802, V810]

================================

Block 0xa38
[0xa38:0xa3c]
---
Predecessors: [0xa24]
Successors: [0x479]
---
0xa38 JUMPDEST
0xa39 SWAP1
0xa3a SWAP2
0xa3b SWAP3
0xa3c JUMP
---
0xa38: JUMPDEST 
0xa3c: JUMP 0x479
---
Entry stack: [V10, 0x479, V800, V802, V810]
Stack pops: 4
Stack additions: [S2, S1, S0]
Exit stack: [V10, V800, V802, V810]

================================

Block 0xa3d
[0xa3d:0xa4c]
---
Predecessors: [0x4a1]
Successors: [0x26d]
---
0xa3d JUMPDEST
0xa3e PUSH1 0x0
0xa40 SLOAD
0xa41 PUSH1 0xa0
0xa43 PUSH1 0x2
0xa45 EXP
0xa46 SWAP1
0xa47 DIV
0xa48 PUSH1 0xff
0xa4a AND
0xa4b DUP2
0xa4c JUMP
---
0xa3d: JUMPDEST 
0xa3e: V811 = 0x0
0xa40: V812 = S[0x0]
0xa41: V813 = 0xa0
0xa43: V814 = 0x2
0xa45: V815 = EXP 0x2 0xa0
0xa47: V816 = DIV V812 0x10000000000000000000000000000000000000000
0xa48: V817 = 0xff
0xa4a: V818 = AND 0xff V816
0xa4c: JUMP 0x26d
---
Entry stack: [V10, 0x26d]
Stack pops: 1
Stack additions: [S0, V818]
Exit stack: [V10, 0x26d, V818]

================================

Block 0xa4d
[0xa4d:0xa73]
---
Predecessors: [0x4c5]
Successors: [0xa74]
---
0xa4d JUMPDEST
0xa4e PUSH1 0x1
0xa50 PUSH1 0xa0
0xa52 PUSH1 0x2
0xa54 EXP
0xa55 SUB
0xa56 DUP1
0xa57 DUP4
0xa58 AND
0xa59 PUSH1 0x0
0xa5b SWAP1
0xa5c DUP2
0xa5d MSTORE
0xa5e PUSH1 0x2
0xa60 PUSH1 0x20
0xa62 SWAP1
0xa63 DUP2
0xa64 MSTORE
0xa65 PUSH1 0x40
0xa67 DUP1
0xa68 DUP4
0xa69 SHA3
0xa6a SWAP4
0xa6b DUP6
0xa6c AND
0xa6d DUP4
0xa6e MSTORE
0xa6f SWAP3
0xa70 SWAP1
0xa71 MSTORE
0xa72 SHA3
0xa73 SLOAD
---
0xa4d: JUMPDEST 
0xa4e: V819 = 0x1
0xa50: V820 = 0xa0
0xa52: V821 = 0x2
0xa54: V822 = EXP 0x2 0xa0
0xa55: V823 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa58: V824 = AND V420 0xffffffffffffffffffffffffffffffffffffffff
0xa59: V825 = 0x0
0xa5d: M[0x0] = V824
0xa5e: V826 = 0x2
0xa60: V827 = 0x20
0xa64: M[0x20] = 0x2
0xa65: V828 = 0x40
0xa69: V829 = SHA3 0x0 0x40
0xa6c: V830 = AND V423 0xffffffffffffffffffffffffffffffffffffffff
0xa6e: M[0x0] = V830
0xa71: M[0x20] = V829
0xa72: V831 = SHA3 0x0 0x40
0xa73: V832 = S[V831]
---
Entry stack: [V10, 0x291, V420, V423]
Stack pops: 2
Stack additions: [S1, S0, V832]
Exit stack: [V10, 0x291, V420, V423, V832]

================================

Block 0xa74
[0xa74:0xa79]
---
Predecessors: [0xa4d]
Successors: [0x291]
---
0xa74 JUMPDEST
0xa75 SWAP3
0xa76 SWAP2
0xa77 POP
0xa78 POP
0xa79 JUMP
---
0xa74: JUMPDEST 
0xa79: JUMP 0x291
---
Entry stack: [V10, 0x291, V420, V423, V832]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V832]

================================

Block 0xa7a
[0xa7a:0xa8b]
---
Predecessors: [0x4f1, 0x7bc]
Successors: [0x4f9, 0x7c4]
---
0xa7a JUMPDEST
0xa7b PUSH1 0x40
0xa7d DUP1
0xa7e MLOAD
0xa7f PUSH1 0x20
0xa81 DUP2
0xa82 ADD
0xa83 SWAP1
0xa84 SWAP2
0xa85 MSTORE
0xa86 PUSH1 0x0
0xa88 DUP2
0xa89 MSTORE
0xa8a SWAP1
0xa8b JUMP
---
0xa7a: JUMPDEST 
0xa7b: V833 = 0x40
0xa7e: V834 = M[0x40]
0xa7f: V835 = 0x20
0xa82: V836 = ADD V834 0x20
0xa85: M[0x40] = V836
0xa86: V837 = 0x0
0xa89: M[V834] = 0x0
0xa8b: JUMP {0x4f9, 0x7c4}
---
Entry stack: [V10, 0x1ce, {0x4f9, 0x7c4}]
Stack pops: 1
Stack additions: [V834]
Exit stack: [V10, 0x1ce, V834]

================================

Block 0xa8c
[0xa8c:0xab7]
---
Predecessors: []
Successors: []
---
0xa8c STOP
0xa8d LOG1
0xa8e PUSH6 0x627a7a723058
0xa95 SHA3
0xa96 MISSING 0x27
0xa97 MISSING 0xa9
0xa98 PUSH14 0x149f396abc160b123e2ac8e4a629
0xaa7 MISSING 0xe6
0xaa8 PUSH14 0xa47072caa61d3e64598a76f22000
0xab7 MISSING 0x29
---
0xa8c: STOP 
0xa8d: LOG S0 S1 S2
0xa8e: V838 = 0x627a7a723058
0xa95: V839 = SHA3 0x627a7a723058 S3
0xa96: MISSING 0x27
0xa97: MISSING 0xa9
0xa98: V840 = 0x149f396abc160b123e2ac8e4a629
0xaa7: MISSING 0xe6
0xaa8: V841 = 0xa47072caa61d3e64598a76f22000
0xab7: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V839, 0x149f396abc160b123e2ac8e4a629, 0xa47072caa61d3e64598a76f22000]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x1be
Exit block: 0x240
Body: 0x1be, 0x1c5, 0x1c6, 0x1ce, 0x1f4, 0x202, 0x214, 0x227, 0x240, 0x4f1, 0x4f9, 0x52f

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x24e
Exit block: 0x26d
Body: 0x24e, 0x255, 0x256, 0x26d, 0x532, 0x53e, 0x567, 0x56d, 0x574, 0x5d5

Function 2:
Public function signature: 0xdcf4b8f
Entry block: 0x281
Exit block: 0x291
Body: 0x281, 0x288, 0x289, 0x291, 0x5db

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x2a3
Exit block: 0x291
Body: 0x291, 0x2a3, 0x2aa, 0x2ab, 0x5e1

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x2c5
Exit block: 0x26d
Body: 0x26d, 0x2c5, 0x2cc, 0x2cd, 0x5e7, 0x5f8, 0x5fd, 0x605, 0x60d, 0x66a, 0x66c, 0x673, 0x676, 0x67c, 0x705, 0x70a, 0x70b

Function 5:
Public function signature: 0x313ce567
Entry block: 0x2fe
Exit block: 0x30e
Body: 0x2fe, 0x305, 0x306, 0x30e, 0x717, 0x71a

Function 6:
Public function signature: 0x64acdb77
Entry block: 0x324
Exit block: 0x1bc
Body: 0x1bc, 0x324, 0x32b, 0x32c, 0x71d, 0x734, 0x739, 0x758

Function 7:
Public function signature: 0x70a08231
Entry block: 0x336
Exit block: 0x291
Body: 0x291, 0x336, 0x33d, 0x33e, 0x75a, 0x774

Function 8:
Public function signature: 0x8f580996
Entry block: 0x364
Exit block: 0x1bc
Body: 0x1bc, 0x364, 0x36b, 0x36c, 0x779, 0x790, 0x795, 0x7ba

Function 9:
Public function signature: 0x95d89b41
Entry block: 0x376
Exit block: 0x240
Body: 0x1ce, 0x1f4, 0x202, 0x214, 0x227, 0x240, 0x376, 0x37d, 0x37e, 0x7bc, 0x7c4, 0x7fa

Function 10:
Public function signature: 0x9ee484ce
Entry block: 0x406
Exit block: 0x26d
Body: 0x26d, 0x406, 0x40d, 0x40e, 0x7fd, 0x819, 0x81e, 0x899, 0x89a, 0x8a7, 0x8a8, 0x921, 0x922, 0x92f, 0x930, 0x93a

Function 11:
Public function signature: 0xa9059cbb
Entry block: 0x436
Exit block: 0x26d
Body: 0x26d, 0x436, 0x43d, 0x43e, 0x941, 0x950, 0x955, 0x95d, 0x965, 0x99d, 0x9a0, 0x9a6, 0xa15, 0xa1a, 0xa1b

Function 12:
Public function signature: 0xc59d4847
Entry block: 0x469
Exit block: 0x479
Body: 0x469, 0x470, 0x471, 0x479, 0xa24, 0xa38

Function 13:
Public function signature: 0xda040c0f
Entry block: 0x499
Exit block: 0x26d
Body: 0x26d, 0x499, 0x4a0, 0x4a1, 0xa3d

Function 14:
Public function signature: 0xdd62ed3e
Entry block: 0x4bd
Exit block: 0x291
Body: 0x291, 0x4bd, 0x4c4, 0x4c5, 0xa4d, 0xa74

Function 15:
Public fallback function
Entry block: 0xd8
Exit block: 0x1bc
Body: 0xd8, 0xdc, 0xf1, 0xf6, 0xfe, 0x102, 0x132, 0x133, 0x153, 0x157, 0x1b9, 0x1bc

