Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x65372147
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x65372147
0x3c: V13 = EQ 0x65372147 V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x95]
---
0x41 DUP1
0x42 PUSH4 0xab5783c4
0x47 EQ
0x48 PUSH2 0x95
0x4b JUMPI
---
0x42: V15 = 0xab5783c4
0x47: V16 = EQ 0xab5783c4 V11
0x48: V17 = 0x95
0x4b: JUMPI 0x95 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xb8]
---
0x4c DUP1
0x4d PUSH4 0xb2c3609b
0x52 EQ
0x53 PUSH2 0xb8
0x56 JUMPI
---
0x4d: V18 = 0xb2c3609b
0x52: V19 = EQ 0xb2c3609b V11
0x53: V20 = 0xb8
0x56: JUMPI 0xb8 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xdb]
---
0x57 DUP1
0x58 PUSH4 0xf1b6315e
0x5d EQ
0x5e PUSH2 0xdb
0x61 JUMPI
---
0x58: V21 = 0xf1b6315e
0x5d: V22 = EQ 0xf1b6315e V11
0x5e: V23 = 0xdb
0x61: JUMPI 0xdb V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0xd]
Successors: [0x6c, 0x70]
---
0x64 JUMPDEST
0x65 CALLVALUE
0x66 DUP1
0x67 ISZERO
0x68 PUSH2 0x70
0x6b JUMPI
---
0x64: JUMPDEST 
0x65: V24 = CALLVALUE
0x67: V25 = ISZERO V24
0x68: V26 = 0x70
0x6b: JUMPI 0x70 V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6c
[0x6c:0x6f]
---
Predecessors: [0x64]
Successors: []
---
0x6c PUSH1 0x0
0x6e DUP1
0x6f REVERT
---
0x6c: V27 = 0x0
0x6f: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x70
[0x70:0x78]
---
Predecessors: [0x64]
Successors: [0xfe]
---
0x70 JUMPDEST
0x71 POP
0x72 PUSH2 0x79
0x75 PUSH2 0xfe
0x78 JUMP
---
0x70: JUMPDEST 
0x72: V28 = 0x79
0x75: V29 = 0xfe
0x78: JUMP 0xfe
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x79]
Exit stack: [V11, 0x79]

================================

Block 0x79
[0x79:0x94]
---
Predecessors: [0xfe]
Successors: []
---
0x79 JUMPDEST
0x7a PUSH1 0x40
0x7c MLOAD
0x7d DUP1
0x7e DUP3
0x7f PUSH1 0xff
0x81 AND
0x82 PUSH1 0xff
0x84 AND
0x85 DUP2
0x86 MSTORE
0x87 PUSH1 0x20
0x89 ADD
0x8a SWAP2
0x8b POP
0x8c POP
0x8d PUSH1 0x40
0x8f MLOAD
0x90 DUP1
0x91 SWAP2
0x92 SUB
0x93 SWAP1
0x94 RETURN
---
0x79: JUMPDEST 
0x7a: V30 = 0x40
0x7c: V31 = M[0x40]
0x7f: V32 = 0xff
0x81: V33 = AND 0xff V80
0x82: V34 = 0xff
0x84: V35 = AND 0xff V33
0x86: M[V31] = V35
0x87: V36 = 0x20
0x89: V37 = ADD 0x20 V31
0x8d: V38 = 0x40
0x8f: V39 = M[0x40]
0x92: V40 = SUB V37 V39
0x94: RETURN V39 V40
---
Entry stack: [V11, 0x79, V80]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x79]

================================

Block 0x95
[0x95:0xb5]
---
Predecessors: [0x41]
Successors: [0x110]
---
0x95 JUMPDEST
0x96 PUSH2 0xb6
0x99 PUSH1 0x4
0x9b DUP1
0x9c CALLDATASIZE
0x9d SUB
0x9e DUP2
0x9f ADD
0xa0 SWAP1
0xa1 DUP1
0xa2 DUP1
0xa3 CALLDATALOAD
0xa4 PUSH1 0xff
0xa6 AND
0xa7 SWAP1
0xa8 PUSH1 0x20
0xaa ADD
0xab SWAP1
0xac SWAP3
0xad SWAP2
0xae SWAP1
0xaf POP
0xb0 POP
0xb1 POP
0xb2 PUSH2 0x110
0xb5 JUMP
---
0x95: JUMPDEST 
0x96: V41 = 0xb6
0x99: V42 = 0x4
0x9c: V43 = CALLDATASIZE
0x9d: V44 = SUB V43 0x4
0x9f: V45 = ADD 0x4 V44
0xa3: V46 = CALLDATALOAD 0x4
0xa4: V47 = 0xff
0xa6: V48 = AND 0xff V46
0xa8: V49 = 0x20
0xaa: V50 = ADD 0x20 0x4
0xb2: V51 = 0x110
0xb5: JUMP 0x110
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb6, V48]
Exit stack: [V11, 0xb6, V48]

================================

Block 0xb6
[0xb6:0xb7]
---
Predecessors: [0x1d8, 0x2c3]
Successors: []
---
0xb6 JUMPDEST
0xb7 STOP
---
0xb6: JUMPDEST 
0xb7: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb8
[0xb8:0xd8]
---
Predecessors: [0x4c]
Successors: [0x1db]
---
0xb8 JUMPDEST
0xb9 PUSH2 0xd9
0xbc PUSH1 0x4
0xbe DUP1
0xbf CALLDATASIZE
0xc0 SUB
0xc1 DUP2
0xc2 ADD
0xc3 SWAP1
0xc4 DUP1
0xc5 DUP1
0xc6 CALLDATALOAD
0xc7 PUSH1 0xff
0xc9 AND
0xca SWAP1
0xcb PUSH1 0x20
0xcd ADD
0xce SWAP1
0xcf SWAP3
0xd0 SWAP2
0xd1 SWAP1
0xd2 POP
0xd3 POP
0xd4 POP
0xd5 PUSH2 0x1db
0xd8 JUMP
---
0xb8: JUMPDEST 
0xb9: V52 = 0xd9
0xbc: V53 = 0x4
0xbf: V54 = CALLDATASIZE
0xc0: V55 = SUB V54 0x4
0xc2: V56 = ADD 0x4 V55
0xc6: V57 = CALLDATALOAD 0x4
0xc7: V58 = 0xff
0xc9: V59 = AND 0xff V57
0xcb: V60 = 0x20
0xcd: V61 = ADD 0x20 0x4
0xd5: V62 = 0x1db
0xd8: JUMP 0x1db
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xd9, V59]
Exit stack: [V11, 0xd9, V59]

================================

Block 0xd9
[0xd9:0xda]
---
Predecessors: [0x1d8, 0x2c3]
Successors: []
---
0xd9 JUMPDEST
0xda STOP
---
0xd9: JUMPDEST 
0xda: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xdb
[0xdb:0xfb]
---
Predecessors: [0x57]
Successors: [0x2c6]
---
0xdb JUMPDEST
0xdc PUSH2 0xfc
0xdf PUSH1 0x4
0xe1 DUP1
0xe2 CALLDATASIZE
0xe3 SUB
0xe4 DUP2
0xe5 ADD
0xe6 SWAP1
0xe7 DUP1
0xe8 DUP1
0xe9 CALLDATALOAD
0xea PUSH1 0xff
0xec AND
0xed SWAP1
0xee PUSH1 0x20
0xf0 ADD
0xf1 SWAP1
0xf2 SWAP3
0xf3 SWAP2
0xf4 SWAP1
0xf5 POP
0xf6 POP
0xf7 POP
0xf8 PUSH2 0x2c6
0xfb JUMP
---
0xdb: JUMPDEST 
0xdc: V63 = 0xfc
0xdf: V64 = 0x4
0xe2: V65 = CALLDATASIZE
0xe3: V66 = SUB V65 0x4
0xe5: V67 = ADD 0x4 V66
0xe9: V68 = CALLDATALOAD 0x4
0xea: V69 = 0xff
0xec: V70 = AND 0xff V68
0xee: V71 = 0x20
0xf0: V72 = ADD 0x20 0x4
0xf8: V73 = 0x2c6
0xfb: JUMP 0x2c6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfc, V70]
Exit stack: [V11, 0xfc, V70]

================================

Block 0xfc
[0xfc:0xfd]
---
Predecessors: [0x33c]
Successors: []
---
0xfc JUMPDEST
0xfd STOP
---
0xfc: JUMPDEST 
0xfd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfe
[0xfe:0x10f]
---
Predecessors: [0x70]
Successors: [0x79]
---
0xfe JUMPDEST
0xff PUSH1 0x0
0x101 DUP1
0x102 SWAP1
0x103 SLOAD
0x104 SWAP1
0x105 PUSH2 0x100
0x108 EXP
0x109 SWAP1
0x10a DIV
0x10b PUSH1 0xff
0x10d AND
0x10e DUP2
0x10f JUMP
---
0xfe: JUMPDEST 
0xff: V74 = 0x0
0x103: V75 = S[0x0]
0x105: V76 = 0x100
0x108: V77 = EXP 0x100 0x0
0x10a: V78 = DIV V75 0x1
0x10b: V79 = 0xff
0x10d: V80 = AND 0xff V78
0x10f: JUMP 0x79
---
Entry stack: [V11, 0x79]
Stack pops: 1
Stack additions: [S0, V80]
Exit stack: [V11, 0x79, V80]

================================

Block 0x110
[0x110:0x167]
---
Predecessors: [0x95]
Successors: [0x168, 0x16c]
---
0x110 JUMPDEST
0x111 PUSH1 0x0
0x113 PUSH1 0x2
0x115 SWAP1
0x116 SLOAD
0x117 SWAP1
0x118 PUSH2 0x100
0x11b EXP
0x11c SWAP1
0x11d DIV
0x11e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x133 AND
0x134 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x149 AND
0x14a CALLER
0x14b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x160 AND
0x161 EQ
0x162 ISZERO
0x163 ISZERO
0x164 PUSH2 0x16c
0x167 JUMPI
---
0x110: JUMPDEST 
0x111: V81 = 0x0
0x113: V82 = 0x2
0x116: V83 = S[0x0]
0x118: V84 = 0x100
0x11b: V85 = EXP 0x100 0x2
0x11d: V86 = DIV V83 0x10000
0x11e: V87 = 0xffffffffffffffffffffffffffffffffffffffff
0x133: V88 = AND 0xffffffffffffffffffffffffffffffffffffffff V86
0x134: V89 = 0xffffffffffffffffffffffffffffffffffffffff
0x149: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V88
0x14a: V91 = CALLER
0x14b: V92 = 0xffffffffffffffffffffffffffffffffffffffff
0x160: V93 = AND 0xffffffffffffffffffffffffffffffffffffffff V91
0x161: V94 = EQ V93 V90
0x162: V95 = ISZERO V94
0x163: V96 = ISZERO V95
0x164: V97 = 0x16c
0x167: JUMPI 0x16c V96
---
Entry stack: [V11, 0xb6, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb6, V48]

================================

Block 0x168
[0x168:0x16b]
---
Predecessors: [0x110]
Successors: []
---
0x168 PUSH1 0x0
0x16a DUP1
0x16b REVERT
---
0x168: V98 = 0x0
0x16b: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb6, V48]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb6, V48]

================================

Block 0x16c
[0x16c:0x173]
---
Predecessors: [0x110]
Successors: [0x33f]
---
0x16c JUMPDEST
0x16d PUSH2 0x174
0x170 PUSH2 0x33f
0x173 JUMP
---
0x16c: JUMPDEST 
0x16d: V99 = 0x174
0x170: V100 = 0x33f
0x173: JUMP 0x33f
---
Entry stack: [V11, 0xb6, V48]
Stack pops: 0
Stack additions: [0x174]
Exit stack: [V11, 0xb6, V48, 0x174]

================================

Block 0x174
[0x174:0x19d]
---
Predecessors: [0x33f]
Successors: [0x19e, 0x1d8]
---
0x174 JUMPDEST
0x175 DUP1
0x176 PUSH1 0x0
0x178 DUP1
0x179 PUSH2 0x100
0x17c EXP
0x17d DUP2
0x17e SLOAD
0x17f DUP2
0x180 PUSH1 0xff
0x182 MUL
0x183 NOT
0x184 AND
0x185 SWAP1
0x186 DUP4
0x187 PUSH1 0xff
0x189 AND
0x18a MUL
0x18b OR
0x18c SWAP1
0x18d SSTORE
0x18e POP
0x18f PUSH7 0x1c6bf526340000
0x197 CALLVALUE
0x198 GT
0x199 ISZERO
0x19a PUSH2 0x1d8
0x19d JUMPI
---
0x174: JUMPDEST 
0x176: V101 = 0x0
0x179: V102 = 0x100
0x17c: V103 = EXP 0x100 0x0
0x17e: V104 = S[0x0]
0x180: V105 = 0xff
0x182: V106 = MUL 0xff 0x1
0x183: V107 = NOT 0xff
0x184: V108 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V104
0x187: V109 = 0xff
0x189: V110 = AND 0xff S0
0x18a: V111 = MUL V110 0x1
0x18b: V112 = OR V111 V108
0x18d: S[0x0] = V112
0x18f: V113 = 0x1c6bf526340000
0x197: V114 = CALLVALUE
0x198: V115 = GT V114 0x1c6bf526340000
0x199: V116 = ISZERO V115
0x19a: V117 = 0x1d8
0x19d: JUMPI 0x1d8 V116
---
Entry stack: [V11, {0xb6, 0xd9}, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, {0xb6, 0xd9}, S0]

================================

Block 0x19e
[0x19e:0x1d7]
---
Predecessors: [0x174]
Successors: []
---
0x19e PUSH1 0x0
0x1a0 PUSH1 0x2
0x1a2 SWAP1
0x1a3 SLOAD
0x1a4 SWAP1
0x1a5 PUSH2 0x100
0x1a8 EXP
0x1a9 SWAP1
0x1aa DIV
0x1ab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c0 AND
0x1c1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d6 AND
0x1d7 SELFDESTRUCT
---
0x19e: V118 = 0x0
0x1a0: V119 = 0x2
0x1a3: V120 = S[0x0]
0x1a5: V121 = 0x100
0x1a8: V122 = EXP 0x100 0x2
0x1aa: V123 = DIV V120 0x10000
0x1ab: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c0: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x1c1: V126 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d6: V127 = AND 0xffffffffffffffffffffffffffffffffffffffff V125
0x1d7: SELFDESTRUCT V127
---
Entry stack: [V11, {0xb6, 0xd9}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xb6, 0xd9}, S0]

================================

Block 0x1d8
[0x1d8:0x1da]
---
Predecessors: [0x174]
Successors: [0xb6, 0xd9]
---
0x1d8 JUMPDEST
0x1d9 POP
0x1da JUMP
---
0x1d8: JUMPDEST 
0x1da: JUMP {0xb6, 0xd9}
---
Entry stack: [V11, {0xb6, 0xd9}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x1db
[0x1db:0x210]
---
Predecessors: [0xb8]
Successors: [0x211, 0x215]
---
0x1db JUMPDEST
0x1dc ORIGIN
0x1dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f2 AND
0x1f3 CALLER
0x1f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x209 AND
0x20a EQ
0x20b ISZERO
0x20c ISZERO
0x20d PUSH2 0x215
0x210 JUMPI
---
0x1db: JUMPDEST 
0x1dc: V128 = ORIGIN
0x1dd: V129 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f2: V130 = AND 0xffffffffffffffffffffffffffffffffffffffff V128
0x1f3: V131 = CALLER
0x1f4: V132 = 0xffffffffffffffffffffffffffffffffffffffff
0x209: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V131
0x20a: V134 = EQ V133 V130
0x20b: V135 = ISZERO V134
0x20c: V136 = ISZERO V135
0x20d: V137 = 0x215
0x210: JUMPI 0x215 V136
---
Entry stack: [V11, 0xd9, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd9, V59]

================================

Block 0x211
[0x211:0x214]
---
Predecessors: [0x1db]
Successors: []
---
0x211 PUSH1 0x0
0x213 DUP1
0x214 REVERT
---
0x211: V138 = 0x0
0x214: REVERT 0x0 0x0
---
Entry stack: [V11, 0xd9, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd9, V59]

================================

Block 0x215
[0x215:0x232]
---
Predecessors: [0x1db]
Successors: [0x233, 0x23e]
---
0x215 JUMPDEST
0x216 DUP1
0x217 PUSH1 0xff
0x219 AND
0x21a PUSH1 0x0
0x21c DUP1
0x21d SWAP1
0x21e SLOAD
0x21f SWAP1
0x220 PUSH2 0x100
0x223 EXP
0x224 SWAP1
0x225 DIV
0x226 PUSH1 0xff
0x228 AND
0x229 PUSH1 0xff
0x22b AND
0x22c EQ
0x22d DUP1
0x22e ISZERO
0x22f PUSH2 0x23e
0x232 JUMPI
---
0x215: JUMPDEST 
0x217: V139 = 0xff
0x219: V140 = AND 0xff V59
0x21a: V141 = 0x0
0x21e: V142 = S[0x0]
0x220: V143 = 0x100
0x223: V144 = EXP 0x100 0x0
0x225: V145 = DIV V142 0x1
0x226: V146 = 0xff
0x228: V147 = AND 0xff V145
0x229: V148 = 0xff
0x22b: V149 = AND 0xff V147
0x22c: V150 = EQ V149 V140
0x22e: V151 = ISZERO V150
0x22f: V152 = 0x23e
0x232: JUMPI 0x23e V151
---
Entry stack: [V11, 0xd9, V59]
Stack pops: 1
Stack additions: [S0, V150]
Exit stack: [V11, 0xd9, V59, V150]

================================

Block 0x233
[0x233:0x23d]
---
Predecessors: [0x215]
Successors: [0x23e]
---
0x233 POP
0x234 PUSH7 0x2386f26fc10000
0x23c CALLVALUE
0x23d GT
---
0x234: V153 = 0x2386f26fc10000
0x23c: V154 = CALLVALUE
0x23d: V155 = GT V154 0x2386f26fc10000
---
Entry stack: [V11, 0xd9, V59, V150]
Stack pops: 1
Stack additions: [V155]
Exit stack: [V11, 0xd9, V59, V155]

================================

Block 0x23e
[0x23e:0x244]
---
Predecessors: [0x215, 0x233]
Successors: [0x245, 0x257]
---
0x23e JUMPDEST
0x23f DUP1
0x240 ISZERO
0x241 PUSH2 0x257
0x244 JUMPI
---
0x23e: JUMPDEST 
0x240: V156 = ISZERO S0
0x241: V157 = 0x257
0x244: JUMPI 0x257 V156
---
Entry stack: [V11, 0xd9, V59, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xd9, V59, S0]

================================

Block 0x245
[0x245:0x256]
---
Predecessors: [0x23e]
Successors: [0x257]
---
0x245 POP
0x246 PUSH1 0x0
0x248 PUSH1 0x1
0x24a SWAP1
0x24b SLOAD
0x24c SWAP1
0x24d PUSH2 0x100
0x250 EXP
0x251 SWAP1
0x252 DIV
0x253 PUSH1 0xff
0x255 AND
0x256 ISZERO
---
0x246: V158 = 0x0
0x248: V159 = 0x1
0x24b: V160 = S[0x0]
0x24d: V161 = 0x100
0x250: V162 = EXP 0x100 0x1
0x252: V163 = DIV V160 0x100
0x253: V164 = 0xff
0x255: V165 = AND 0xff V163
0x256: V166 = ISZERO V165
---
Entry stack: [V11, 0xd9, V59, S0]
Stack pops: 1
Stack additions: [V166]
Exit stack: [V11, 0xd9, V59, V166]

================================

Block 0x257
[0x257:0x25c]
---
Predecessors: [0x23e, 0x245]
Successors: [0x25d, 0x2c3]
---
0x257 JUMPDEST
0x258 ISZERO
0x259 PUSH2 0x2c3
0x25c JUMPI
---
0x257: JUMPDEST 
0x258: V167 = ISZERO S0
0x259: V168 = 0x2c3
0x25c: JUMPI 0x2c3 V167
---
Entry stack: [V11, 0xd9, V59, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xd9, V59]

================================

Block 0x25d
[0x25d:0x2af]
---
Predecessors: [0x257]
Successors: [0x2b0, 0x2b9]
---
0x25d CALLER
0x25e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x273 AND
0x274 PUSH2 0x8fc
0x277 ADDRESS
0x278 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28d AND
0x28e BALANCE
0x28f SWAP1
0x290 DUP2
0x291 ISZERO
0x292 MUL
0x293 SWAP1
0x294 PUSH1 0x40
0x296 MLOAD
0x297 PUSH1 0x0
0x299 PUSH1 0x40
0x29b MLOAD
0x29c DUP1
0x29d DUP4
0x29e SUB
0x29f DUP2
0x2a0 DUP6
0x2a1 DUP9
0x2a2 DUP9
0x2a3 CALL
0x2a4 SWAP4
0x2a5 POP
0x2a6 POP
0x2a7 POP
0x2a8 POP
0x2a9 ISZERO
0x2aa DUP1
0x2ab ISZERO
0x2ac PUSH2 0x2b9
0x2af JUMPI
---
0x25d: V169 = CALLER
0x25e: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x273: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x274: V172 = 0x8fc
0x277: V173 = ADDRESS
0x278: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x28d: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x28e: V176 = BALANCE V175
0x291: V177 = ISZERO V176
0x292: V178 = MUL V177 0x8fc
0x294: V179 = 0x40
0x296: V180 = M[0x40]
0x297: V181 = 0x0
0x299: V182 = 0x40
0x29b: V183 = M[0x40]
0x29e: V184 = SUB V180 V183
0x2a3: V185 = CALL V178 V171 V176 V183 V184 V183 0x0
0x2a9: V186 = ISZERO V185
0x2ab: V187 = ISZERO V186
0x2ac: V188 = 0x2b9
0x2af: JUMPI 0x2b9 V187
---
Entry stack: [V11, 0xd9, V59]
Stack pops: 0
Stack additions: [V186]
Exit stack: [V11, 0xd9, V59, V186]

================================

Block 0x2b0
[0x2b0:0x2b8]
---
Predecessors: [0x25d]
Successors: []
---
0x2b0 RETURNDATASIZE
0x2b1 PUSH1 0x0
0x2b3 DUP1
0x2b4 RETURNDATACOPY
0x2b5 RETURNDATASIZE
0x2b6 PUSH1 0x0
0x2b8 REVERT
---
0x2b0: V189 = RETURNDATASIZE
0x2b1: V190 = 0x0
0x2b4: RETURNDATACOPY 0x0 0x0 V189
0x2b5: V191 = RETURNDATASIZE
0x2b6: V192 = 0x0
0x2b8: REVERT 0x0 V191
---
Entry stack: [V11, 0xd9, V59, V186]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xd9, V59, V186]

================================

Block 0x2b9
[0x2b9:0x2c1]
---
Predecessors: [0x25d]
Successors: [0x33f]
---
0x2b9 JUMPDEST
0x2ba POP
0x2bb PUSH2 0x2c2
0x2be PUSH2 0x33f
0x2c1 JUMP
---
0x2b9: JUMPDEST 
0x2bb: V193 = 0x2c2
0x2be: V194 = 0x33f
0x2c1: JUMP 0x33f
---
Entry stack: [V11, 0xd9, V59, V186]
Stack pops: 1
Stack additions: [0x2c2]
Exit stack: [V11, 0xd9, V59, 0x2c2]

================================

Block 0x2c2
[0x2c2:0x2c2]
---
Predecessors: [0x33f]
Successors: [0x2c3]
---
0x2c2 JUMPDEST
---
0x2c2: JUMPDEST 
---
Entry stack: [V11, {0xb6, 0xd9}, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, {0xb6, 0xd9}, S0]

================================

Block 0x2c3
[0x2c3:0x2c5]
---
Predecessors: [0x257, 0x2c2]
Successors: [0xb6, 0xd9]
---
0x2c3 JUMPDEST
0x2c4 POP
0x2c5 JUMP
---
0x2c3: JUMPDEST 
0x2c5: JUMP {0xb6, 0xd9}
---
Entry stack: [V11, {0xb6, 0xd9}, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2c6
[0x2c6:0x2e0]
---
Predecessors: [0xdb]
Successors: [0x2e1, 0x33c]
---
0x2c6 JUMPDEST
0x2c7 PUSH1 0x0
0x2c9 DUP1
0x2ca PUSH1 0x0
0x2cc SWAP1
0x2cd SLOAD
0x2ce SWAP1
0x2cf PUSH2 0x100
0x2d2 EXP
0x2d3 SWAP1
0x2d4 DIV
0x2d5 PUSH1 0xff
0x2d7 AND
0x2d8 PUSH1 0xff
0x2da AND
0x2db EQ
0x2dc ISZERO
0x2dd PUSH2 0x33c
0x2e0 JUMPI
---
0x2c6: JUMPDEST 
0x2c7: V195 = 0x0
0x2ca: V196 = 0x0
0x2cd: V197 = S[0x0]
0x2cf: V198 = 0x100
0x2d2: V199 = EXP 0x100 0x0
0x2d4: V200 = DIV V197 0x1
0x2d5: V201 = 0xff
0x2d7: V202 = AND 0xff V200
0x2d8: V203 = 0xff
0x2da: V204 = AND 0xff V202
0x2db: V205 = EQ V204 0x0
0x2dc: V206 = ISZERO V205
0x2dd: V207 = 0x33c
0x2e0: JUMPI 0x33c V206
---
Entry stack: [V11, 0xfc, V70]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfc, V70]

================================

Block 0x2e1
[0x2e1:0x33b]
---
Predecessors: [0x2c6]
Successors: [0x33c]
---
0x2e1 DUP1
0x2e2 PUSH1 0x0
0x2e4 DUP1
0x2e5 PUSH2 0x100
0x2e8 EXP
0x2e9 DUP2
0x2ea SLOAD
0x2eb DUP2
0x2ec PUSH1 0xff
0x2ee MUL
0x2ef NOT
0x2f0 AND
0x2f1 SWAP1
0x2f2 DUP4
0x2f3 PUSH1 0xff
0x2f5 AND
0x2f6 MUL
0x2f7 OR
0x2f8 SWAP1
0x2f9 SSTORE
0x2fa POP
0x2fb CALLER
0x2fc PUSH1 0x0
0x2fe PUSH1 0x2
0x300 PUSH2 0x100
0x303 EXP
0x304 DUP2
0x305 SLOAD
0x306 DUP2
0x307 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x31c MUL
0x31d NOT
0x31e AND
0x31f SWAP1
0x320 DUP4
0x321 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x336 AND
0x337 MUL
0x338 OR
0x339 SWAP1
0x33a SSTORE
0x33b POP
---
0x2e2: V208 = 0x0
0x2e5: V209 = 0x100
0x2e8: V210 = EXP 0x100 0x0
0x2ea: V211 = S[0x0]
0x2ec: V212 = 0xff
0x2ee: V213 = MUL 0xff 0x1
0x2ef: V214 = NOT 0xff
0x2f0: V215 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V211
0x2f3: V216 = 0xff
0x2f5: V217 = AND 0xff V70
0x2f6: V218 = MUL V217 0x1
0x2f7: V219 = OR V218 V215
0x2f9: S[0x0] = V219
0x2fb: V220 = CALLER
0x2fc: V221 = 0x0
0x2fe: V222 = 0x2
0x300: V223 = 0x100
0x303: V224 = EXP 0x100 0x2
0x305: V225 = S[0x0]
0x307: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x31c: V227 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x10000
0x31d: V228 = NOT 0xffffffffffffffffffffffffffffffffffffffff0000
0x31e: V229 = AND 0xffffffffffffffffffff0000000000000000000000000000000000000000ffff V225
0x321: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x336: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x337: V232 = MUL V231 0x10000
0x338: V233 = OR V232 V229
0x33a: S[0x0] = V233
---
Entry stack: [V11, 0xfc, V70]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xfc, V70]

================================

Block 0x33c
[0x33c:0x33e]
---
Predecessors: [0x2c6, 0x2e1]
Successors: [0xfc]
---
0x33c JUMPDEST
0x33d POP
0x33e JUMP
---
0x33c: JUMPDEST 
0x33e: JUMP 0xfc
---
Entry stack: [V11, 0xfc, V70]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x33f
[0x33f:0x35b]
---
Predecessors: [0x16c, 0x2b9]
Successors: [0x174, 0x2c2]
---
0x33f JUMPDEST
0x340 PUSH1 0x1
0x342 PUSH1 0x0
0x344 PUSH1 0x1
0x346 PUSH2 0x100
0x349 EXP
0x34a DUP2
0x34b SLOAD
0x34c DUP2
0x34d PUSH1 0xff
0x34f MUL
0x350 NOT
0x351 AND
0x352 SWAP1
0x353 DUP4
0x354 ISZERO
0x355 ISZERO
0x356 MUL
0x357 OR
0x358 SWAP1
0x359 SSTORE
0x35a POP
0x35b JUMP
---
0x33f: JUMPDEST 
0x340: V234 = 0x1
0x342: V235 = 0x0
0x344: V236 = 0x1
0x346: V237 = 0x100
0x349: V238 = EXP 0x100 0x1
0x34b: V239 = S[0x0]
0x34d: V240 = 0xff
0x34f: V241 = MUL 0xff 0x100
0x350: V242 = NOT 0xff00
0x351: V243 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V239
0x354: V244 = ISZERO 0x1
0x355: V245 = ISZERO 0x0
0x356: V246 = MUL 0x1 0x100
0x357: V247 = OR 0x100 V243
0x359: S[0x0] = V247
0x35b: JUMP {0x174, 0x2c2}
---
Entry stack: [V11, {0xb6, 0xd9}, S1, {0x174, 0x2c2}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, {0xb6, 0xd9}, S1]

================================

Block 0x35c
[0x35c:0x387]
---
Predecessors: []
Successors: []
---
0x35c STOP
0x35d LOG1
0x35e PUSH6 0x627a7a723058
0x365 SHA3
0x366 CALLDATASIZE
0x367 CODESIZE
0x368 MISSING 0xfc
0x369 PUSH27 0x30a217a16f56bf8fb61a420e5ec8165b400e60d691c5139f84c511
0x385 POP
0x386 STOP
0x387 MISSING 0x29
---
0x35c: STOP 
0x35d: LOG S0 S1 S2
0x35e: V248 = 0x627a7a723058
0x365: V249 = SHA3 0x627a7a723058 S3
0x366: V250 = CALLDATASIZE
0x367: V251 = CODESIZE
0x368: MISSING 0xfc
0x369: V252 = 0x30a217a16f56bf8fb61a420e5ec8165b400e60d691c5139f84c511
0x386: STOP 
0x387: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V251, V250, V249]
Exit stack: []

================================

Function 0:
Public function signature: 0x65372147
Entry block: 0x64
Exit block: 0x79
Body: 0x64, 0x6c, 0x70, 0x79, 0xfe

Function 1:
Public function signature: 0xab5783c4
Entry block: 0x95
Exit block: 0xd9
Body: 0x95, 0xb6, 0xd9, 0x110, 0x168, 0x16c, 0x174, 0x19e, 0x1d8

Function 2:
Public function signature: 0xb2c3609b
Entry block: 0xb8
Exit block: 0xd9
Body: 0xb6, 0xb8, 0xd9, 0x1db, 0x211, 0x215, 0x233, 0x23e, 0x245, 0x257, 0x25d, 0x2b0, 0x2b9, 0x2c2, 0x2c3

Function 3:
Public function signature: 0xf1b6315e
Entry block: 0xdb
Exit block: 0xfc
Body: 0xdb, 0xfc, 0x2c6, 0x2e1, 0x33c

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

