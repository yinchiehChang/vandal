Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xd9]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xd9
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xd9
0xa: JUMPI 0xd9 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x262]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x6fdde03
0x3a EQ
0x3b PUSH2 0x262
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x6fdde03
0x3a: V12 = EQ 0x6fdde03 V10
0x3b: V13 = 0x262
0x3e: JUMPI 0x262 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x2fb]
---
0x3f DUP1
0x40 PUSH4 0x95ea7b3
0x45 EQ
0x46 PUSH2 0x2fb
0x49 JUMPI
---
0x40: V14 = 0x95ea7b3
0x45: V15 = EQ 0x95ea7b3 V10
0x46: V16 = 0x2fb
0x49: JUMPI 0x2fb V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0x352]
---
0x4a DUP1
0x4b PUSH4 0xdcf4b8f
0x50 EQ
0x51 PUSH2 0x352
0x54 JUMPI
---
0x4b: V17 = 0xdcf4b8f
0x50: V18 = EQ 0xdcf4b8f V10
0x51: V19 = 0x352
0x54: JUMPI 0x352 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0x378]
---
0x55 DUP1
0x56 PUSH4 0x18160ddd
0x5b EQ
0x5c PUSH2 0x378
0x5f JUMPI
---
0x56: V20 = 0x18160ddd
0x5b: V21 = EQ 0x18160ddd V10
0x5c: V22 = 0x378
0x5f: JUMPI 0x378 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x39e]
---
0x60 DUP1
0x61 PUSH4 0x23b872dd
0x66 EQ
0x67 PUSH2 0x39e
0x6a JUMPI
---
0x61: V23 = 0x23b872dd
0x66: V24 = EQ 0x23b872dd V10
0x67: V25 = 0x39e
0x6a: JUMPI 0x39e V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x414]
---
0x6b DUP1
0x6c PUSH4 0x313ce567
0x71 EQ
0x72 PUSH2 0x414
0x75 JUMPI
---
0x6c: V26 = 0x313ce567
0x71: V27 = EQ 0x313ce567 V10
0x72: V28 = 0x414
0x75: JUMPI 0x414 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x80]
---
Predecessors: [0x6b]
Successors: [0x81, 0x440]
---
0x76 DUP1
0x77 PUSH4 0x64acdb77
0x7c EQ
0x7d PUSH2 0x440
0x80 JUMPI
---
0x77: V29 = 0x64acdb77
0x7c: V30 = EQ 0x64acdb77 V10
0x7d: V31 = 0x440
0x80: JUMPI 0x440 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x81
[0x81:0x8b]
---
Predecessors: [0x76]
Successors: [0x8c, 0x452]
---
0x81 DUP1
0x82 PUSH4 0x70a08231
0x87 EQ
0x88 PUSH2 0x452
0x8b JUMPI
---
0x82: V32 = 0x70a08231
0x87: V33 = EQ 0x70a08231 V10
0x88: V34 = 0x452
0x8b: JUMPI 0x452 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8c
[0x8c:0x96]
---
Predecessors: [0x81]
Successors: [0x97, 0x49c]
---
0x8c DUP1
0x8d PUSH4 0x8f580996
0x92 EQ
0x93 PUSH2 0x49c
0x96 JUMPI
---
0x8d: V35 = 0x8f580996
0x92: V36 = EQ 0x8f580996 V10
0x93: V37 = 0x49c
0x96: JUMPI 0x49c V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x8c]
Successors: [0xa2, 0x4ae]
---
0x97 DUP1
0x98 PUSH4 0x95d89b41
0x9d EQ
0x9e PUSH2 0x4ae
0xa1 JUMPI
---
0x98: V38 = 0x95d89b41
0x9d: V39 = EQ 0x95d89b41 V10
0x9e: V40 = 0x4ae
0xa1: JUMPI 0x4ae V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xac]
---
Predecessors: [0x97]
Successors: [0xad, 0x547]
---
0xa2 DUP1
0xa3 PUSH4 0xa9059cbb
0xa8 EQ
0xa9 PUSH2 0x547
0xac JUMPI
---
0xa3: V41 = 0xa9059cbb
0xa8: V42 = EQ 0xa9059cbb V10
0xa9: V43 = 0x547
0xac: JUMPI 0x547 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0xa2]
Successors: [0xb8, 0x59e]
---
0xad DUP1
0xae PUSH4 0xc59d4847
0xb3 EQ
0xb4 PUSH2 0x59e
0xb7 JUMPI
---
0xae: V44 = 0xc59d4847
0xb3: V45 = EQ 0xc59d4847 V10
0xb4: V46 = 0x59e
0xb7: JUMPI 0x59e V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb8
[0xb8:0xc2]
---
Predecessors: [0xad]
Successors: [0xc3, 0x5d6]
---
0xb8 DUP1
0xb9 PUSH4 0xda040c0f
0xbe EQ
0xbf PUSH2 0x5d6
0xc2 JUMPI
---
0xb9: V47 = 0xda040c0f
0xbe: V48 = EQ 0xda040c0f V10
0xbf: V49 = 0x5d6
0xc2: JUMPI 0x5d6 V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc3
[0xc3:0xcd]
---
Predecessors: [0xb8]
Successors: [0xce, 0x600]
---
0xc3 DUP1
0xc4 PUSH4 0xdd62ed3e
0xc9 EQ
0xca PUSH2 0x600
0xcd JUMPI
---
0xc4: V50 = 0xdd62ed3e
0xc9: V51 = EQ 0xdd62ed3e V10
0xca: V52 = 0x600
0xcd: JUMPI 0x600 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xce
[0xce:0xd8]
---
Predecessors: [0xc3]
Successors: [0xd9, 0x669]
---
0xce DUP1
0xcf PUSH4 0xe58fc54c
0xd4 EQ
0xd5 PUSH2 0x669
0xd8 JUMPI
---
0xcf: V53 = 0xe58fc54c
0xd4: V54 = EQ 0xe58fc54c V10
0xd5: V55 = 0x669
0xd8: JUMPI 0x669 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0x0, 0xce]
Successors: [0xdd]
---
0xd9 JUMPDEST
0xda PUSH2 0x260
---
0xd9: JUMPDEST 
0xda: V56 = 0x260
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x260]
Exit stack: [V10, 0x260]

================================

Block 0xdd
[0xdd:0xf5]
---
Predecessors: [0xd9]
Successors: [0xf6, 0xfb]
---
0xdd JUMPDEST
0xde PUSH1 0x0
0xe0 PUSH1 0x0
0xe2 PUSH1 0x14
0xe4 SWAP1
0xe5 SLOAD
0xe6 SWAP1
0xe7 PUSH2 0x100
0xea EXP
0xeb SWAP1
0xec DIV
0xed PUSH1 0xff
0xef AND
0xf0 ISZERO
0xf1 ISZERO
0xf2 PUSH2 0xfb
0xf5 JUMPI
---
0xdd: JUMPDEST 
0xde: V57 = 0x0
0xe0: V58 = 0x0
0xe2: V59 = 0x14
0xe5: V60 = S[0x0]
0xe7: V61 = 0x100
0xea: V62 = EXP 0x100 0x14
0xec: V63 = DIV V60 0x10000000000000000000000000000000000000000
0xed: V64 = 0xff
0xef: V65 = AND 0xff V63
0xf0: V66 = ISZERO V65
0xf1: V67 = ISZERO V66
0xf2: V68 = 0xfb
0xf5: JUMPI 0xfb V67
---
Entry stack: [V10, 0x260]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x260, 0x0]

================================

Block 0xf6
[0xf6:0xfa]
---
Predecessors: [0xdd]
Successors: []
---
0xf6 PUSH1 0x0
0xf8 PUSH1 0x0
0xfa REVERT
---
0xf6: V69 = 0x0
0xf8: V70 = 0x0
0xfa: REVERT 0x0 0x0
---
Entry stack: [V10, 0x260, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x260, 0x0]

================================

Block 0xfb
[0xfb:0x104]
---
Predecessors: [0xdd]
Successors: [0x105, 0x109]
---
0xfb JUMPDEST
0xfc PUSH1 0x0
0xfe CALLVALUE
0xff EQ
0x100 ISZERO
0x101 PUSH2 0x109
0x104 JUMPI
---
0xfb: JUMPDEST 
0xfc: V71 = 0x0
0xfe: V72 = CALLVALUE
0xff: V73 = EQ V72 0x0
0x100: V74 = ISZERO V73
0x101: V75 = 0x109
0x104: JUMPI 0x109 V74
---
Entry stack: [V10, 0x260, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x260, 0x0]

================================

Block 0x105
[0x105:0x108]
---
Predecessors: [0xfb]
Successors: [0x25d]
---
0x105 PUSH2 0x25d
0x108 JUMP
---
0x105: V76 = 0x25d
0x108: JUMP 0x25d
---
Entry stack: [V10, 0x260, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x260, 0x0]

================================

Block 0x109
[0x109:0x169]
---
Predecessors: [0xfb]
Successors: [0x16a, 0x16b]
---
0x109 JUMPDEST
0x10a PUSH1 0x0
0x10c PUSH1 0x0
0x10e SWAP1
0x10f SLOAD
0x110 SWAP1
0x111 PUSH2 0x100
0x114 EXP
0x115 SWAP1
0x116 DIV
0x117 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x12c AND
0x12d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x142 AND
0x143 PUSH2 0x8fc
0x146 CALLVALUE
0x147 SWAP1
0x148 DUP2
0x149 ISZERO
0x14a MUL
0x14b SWAP1
0x14c PUSH1 0x40
0x14e MLOAD
0x14f DUP1
0x150 SWAP1
0x151 POP
0x152 PUSH1 0x0
0x154 PUSH1 0x40
0x156 MLOAD
0x157 DUP1
0x158 DUP4
0x159 SUB
0x15a DUP2
0x15b DUP6
0x15c DUP9
0x15d DUP9
0x15e CALL
0x15f SWAP4
0x160 POP
0x161 POP
0x162 POP
0x163 POP
0x164 ISZERO
0x165 ISZERO
0x166 PUSH2 0x16b
0x169 JUMPI
---
0x109: JUMPDEST 
0x10a: V77 = 0x0
0x10c: V78 = 0x0
0x10f: V79 = S[0x0]
0x111: V80 = 0x100
0x114: V81 = EXP 0x100 0x0
0x116: V82 = DIV V79 0x1
0x117: V83 = 0xffffffffffffffffffffffffffffffffffffffff
0x12c: V84 = AND 0xffffffffffffffffffffffffffffffffffffffff V82
0x12d: V85 = 0xffffffffffffffffffffffffffffffffffffffff
0x142: V86 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x143: V87 = 0x8fc
0x146: V88 = CALLVALUE
0x149: V89 = ISZERO V88
0x14a: V90 = MUL V89 0x8fc
0x14c: V91 = 0x40
0x14e: V92 = M[0x40]
0x152: V93 = 0x0
0x154: V94 = 0x40
0x156: V95 = M[0x40]
0x159: V96 = SUB V92 V95
0x15e: V97 = CALL V90 V86 V88 V95 V96 V95 0x0
0x164: V98 = ISZERO V97
0x165: V99 = ISZERO V98
0x166: V100 = 0x16b
0x169: JUMPI 0x16b V99
---
Entry stack: [V10, 0x260, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x260, 0x0]

================================

Block 0x16a
[0x16a:0x16a]
---
Predecessors: [0x109]
Successors: []
---
0x16a INVALID
---
0x16a: INVALID 
---
Entry stack: [V10, 0x260, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x260, 0x0]

================================

Block 0x16b
[0x16b:0x192]
---
Predecessors: [0x109]
Successors: [0x193, 0x19a]
---
0x16b JUMPDEST
0x16c CALLVALUE
0x16d PUSH1 0x3
0x16f PUSH1 0x0
0x171 DUP3
0x172 DUP3
0x173 SLOAD
0x174 ADD
0x175 SWAP3
0x176 POP
0x177 POP
0x178 DUP2
0x179 SWAP1
0x17a SSTORE
0x17b POP
0x17c PUSH2 0x3e8
0x17f CALLVALUE
0x180 MUL
0x181 SWAP1
0x182 POP
0x183 PUSH7 0x2386f26fc10000
0x18b CALLVALUE
0x18c LT
0x18d ISZERO
0x18e ISZERO
0x18f PUSH2 0x19a
0x192 JUMPI
---
0x16b: JUMPDEST 
0x16c: V101 = CALLVALUE
0x16d: V102 = 0x3
0x16f: V103 = 0x0
0x173: V104 = S[0x3]
0x174: V105 = ADD V104 V101
0x17a: S[0x3] = V105
0x17c: V106 = 0x3e8
0x17f: V107 = CALLVALUE
0x180: V108 = MUL V107 0x3e8
0x183: V109 = 0x2386f26fc10000
0x18b: V110 = CALLVALUE
0x18c: V111 = LT V110 0x2386f26fc10000
0x18d: V112 = ISZERO V111
0x18e: V113 = ISZERO V112
0x18f: V114 = 0x19a
0x192: JUMPI 0x19a V113
---
Entry stack: [V10, 0x260, 0x0]
Stack pops: 1
Stack additions: [V108]
Exit stack: [V10, 0x260, V108]

================================

Block 0x193
[0x193:0x199]
---
Predecessors: [0x16b]
Successors: [0x19a]
---
0x193 PUSH1 0x3
0x195 SLOAD
0x196 DUP2
0x197 ADD
0x198 SWAP1
0x199 POP
---
0x193: V115 = 0x3
0x195: V116 = S[0x3]
0x197: V117 = ADD V108 V116
---
Entry stack: [V10, 0x260, V108]
Stack pops: 1
Stack additions: [V117]
Exit stack: [V10, 0x260, V117]

================================

Block 0x19a
[0x19a:0x25c]
---
Predecessors: [0x16b, 0x193]
Successors: [0x25d]
---
0x19a JUMPDEST
0x19b DUP1
0x19c PUSH1 0x4
0x19e PUSH1 0x0
0x1a0 DUP3
0x1a1 DUP3
0x1a2 SLOAD
0x1a3 ADD
0x1a4 SWAP3
0x1a5 POP
0x1a6 POP
0x1a7 DUP2
0x1a8 SWAP1
0x1a9 SSTORE
0x1aa POP
0x1ab DUP1
0x1ac PUSH1 0x1
0x1ae PUSH1 0x0
0x1b0 CALLER
0x1b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c6 AND
0x1c7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1dc AND
0x1dd DUP2
0x1de MSTORE
0x1df PUSH1 0x20
0x1e1 ADD
0x1e2 SWAP1
0x1e3 DUP2
0x1e4 MSTORE
0x1e5 PUSH1 0x20
0x1e7 ADD
0x1e8 PUSH1 0x0
0x1ea SHA3
0x1eb PUSH1 0x0
0x1ed DUP3
0x1ee DUP3
0x1ef SLOAD
0x1f0 ADD
0x1f1 SWAP3
0x1f2 POP
0x1f3 POP
0x1f4 DUP2
0x1f5 SWAP1
0x1f6 SSTORE
0x1f7 POP
0x1f8 CALLER
0x1f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x20e AND
0x20f ADDRESS
0x210 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x225 AND
0x226 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x247 DUP4
0x248 PUSH1 0x40
0x24a MLOAD
0x24b DUP1
0x24c DUP3
0x24d DUP2
0x24e MSTORE
0x24f PUSH1 0x20
0x251 ADD
0x252 SWAP2
0x253 POP
0x254 POP
0x255 PUSH1 0x40
0x257 MLOAD
0x258 DUP1
0x259 SWAP2
0x25a SUB
0x25b SWAP1
0x25c LOG3
---
0x19a: JUMPDEST 
0x19c: V118 = 0x4
0x19e: V119 = 0x0
0x1a2: V120 = S[0x4]
0x1a3: V121 = ADD V120 S0
0x1a9: S[0x4] = V121
0x1ac: V122 = 0x1
0x1ae: V123 = 0x0
0x1b0: V124 = CALLER
0x1b1: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c6: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x1c7: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x1dc: V128 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x1de: M[0x0] = V128
0x1df: V129 = 0x20
0x1e1: V130 = ADD 0x20 0x0
0x1e4: M[0x20] = 0x1
0x1e5: V131 = 0x20
0x1e7: V132 = ADD 0x20 0x20
0x1e8: V133 = 0x0
0x1ea: V134 = SHA3 0x0 0x40
0x1eb: V135 = 0x0
0x1ef: V136 = S[V134]
0x1f0: V137 = ADD V136 S0
0x1f6: S[V134] = V137
0x1f8: V138 = CALLER
0x1f9: V139 = 0xffffffffffffffffffffffffffffffffffffffff
0x20e: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V138
0x20f: V141 = ADDRESS
0x210: V142 = 0xffffffffffffffffffffffffffffffffffffffff
0x225: V143 = AND 0xffffffffffffffffffffffffffffffffffffffff V141
0x226: V144 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x248: V145 = 0x40
0x24a: V146 = M[0x40]
0x24e: M[V146] = S0
0x24f: V147 = 0x20
0x251: V148 = ADD 0x20 V146
0x255: V149 = 0x40
0x257: V150 = M[0x40]
0x25a: V151 = SUB V148 V150
0x25c: LOG V150 V151 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V143 V140
---
Entry stack: [V10, 0x260, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x260, S0]

================================

Block 0x25d
[0x25d:0x25f]
---
Predecessors: [0x105, 0x19a]
Successors: [0x260]
---
0x25d JUMPDEST
0x25e POP
0x25f JUMP
---
0x25d: JUMPDEST 
0x25f: JUMP 0x260
---
Entry stack: [V10, 0x260, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x260
[0x260:0x261]
---
Predecessors: [0x25d]
Successors: []
---
0x260 JUMPDEST
0x261 STOP
---
0x260: JUMPDEST 
0x261: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x262
[0x262:0x268]
---
Predecessors: [0xb]
Successors: [0x269, 0x26a]
---
0x262 JUMPDEST
0x263 CALLVALUE
0x264 ISZERO
0x265 PUSH2 0x26a
0x268 JUMPI
---
0x262: JUMPDEST 
0x263: V152 = CALLVALUE
0x264: V153 = ISZERO V152
0x265: V154 = 0x26a
0x268: JUMPI 0x26a V153
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x269
[0x269:0x269]
---
Predecessors: [0x262]
Successors: []
---
0x269 INVALID
---
0x269: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x26a
[0x26a:0x271]
---
Predecessors: [0x262]
Successors: [0x6b7]
---
0x26a JUMPDEST
0x26b PUSH2 0x272
0x26e PUSH2 0x6b7
0x271 JUMP
---
0x26a: JUMPDEST 
0x26b: V155 = 0x272
0x26e: V156 = 0x6b7
0x271: JUMP 0x6b7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x272]
Exit stack: [V10, 0x272]

================================

Block 0x272
[0x272:0x29c]
---
Predecessors: [0x6f9, 0xd67]
Successors: [0x29d, 0x2c1]
---
0x272 JUMPDEST
0x273 PUSH1 0x40
0x275 MLOAD
0x276 DUP1
0x277 DUP1
0x278 PUSH1 0x20
0x27a ADD
0x27b DUP3
0x27c DUP2
0x27d SUB
0x27e DUP3
0x27f MSTORE
0x280 DUP4
0x281 DUP2
0x282 DUP2
0x283 MLOAD
0x284 DUP2
0x285 MSTORE
0x286 PUSH1 0x20
0x288 ADD
0x289 SWAP2
0x28a POP
0x28b DUP1
0x28c MLOAD
0x28d SWAP1
0x28e PUSH1 0x20
0x290 ADD
0x291 SWAP1
0x292 DUP1
0x293 DUP4
0x294 DUP4
0x295 PUSH1 0x0
0x297 DUP4
0x298 EQ
0x299 PUSH2 0x2c1
0x29c JUMPI
---
0x272: JUMPDEST 
0x273: V157 = 0x40
0x275: V158 = M[0x40]
0x278: V159 = 0x20
0x27a: V160 = ADD 0x20 V158
0x27d: V161 = SUB V160 V158
0x27f: M[V158] = V161
0x283: V162 = M[S0]
0x285: M[V160] = V162
0x286: V163 = 0x20
0x288: V164 = ADD 0x20 V160
0x28c: V165 = M[S0]
0x28e: V166 = 0x20
0x290: V167 = ADD 0x20 S0
0x295: V168 = 0x0
0x298: V169 = EQ V165 0x0
0x299: V170 = 0x2c1
0x29c: JUMPI 0x2c1 V169
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [S0, V158, V158, V164, V167, V165, V165, V164, V167]
Exit stack: [V10, S0, V158, V158, V164, V167, V165, V165, V164, V167]

================================

Block 0x29d
[0x29d:0x2aa]
---
Predecessors: [0x272, 0x2ab]
Successors: [0x2ab, 0x2c1]
---
0x29d JUMPDEST
0x29e DUP1
0x29f MLOAD
0x2a0 DUP3
0x2a1 MSTORE
0x2a2 PUSH1 0x20
0x2a4 DUP4
0x2a5 GT
0x2a6 ISZERO
0x2a7 PUSH2 0x2c1
0x2aa JUMPI
---
0x29d: JUMPDEST 
0x29f: V171 = M[S0]
0x2a1: M[S1] = V171
0x2a2: V172 = 0x20
0x2a5: V173 = GT S2 0x20
0x2a6: V174 = ISZERO V173
0x2a7: V175 = 0x2c1
0x2aa: JUMPI 0x2c1 V174
---
Entry stack: [V10, S8, V158, V158, V164, V167, V165, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S8, V158, V158, V164, V167, V165, S2, S1, S0]

================================

Block 0x2ab
[0x2ab:0x2c0]
---
Predecessors: [0x29d]
Successors: [0x29d]
---
0x2ab PUSH1 0x20
0x2ad DUP3
0x2ae ADD
0x2af SWAP2
0x2b0 POP
0x2b1 PUSH1 0x20
0x2b3 DUP2
0x2b4 ADD
0x2b5 SWAP1
0x2b6 POP
0x2b7 PUSH1 0x20
0x2b9 DUP4
0x2ba SUB
0x2bb SWAP3
0x2bc POP
0x2bd PUSH2 0x29d
0x2c0 JUMP
---
0x2ab: V176 = 0x20
0x2ae: V177 = ADD S1 0x20
0x2b1: V178 = 0x20
0x2b4: V179 = ADD S0 0x20
0x2b7: V180 = 0x20
0x2ba: V181 = SUB S2 0x20
0x2bd: V182 = 0x29d
0x2c0: JUMP 0x29d
---
Entry stack: [V10, S8, V158, V158, V164, V167, V165, S2, S1, S0]
Stack pops: 3
Stack additions: [V181, V177, V179]
Exit stack: [V10, S8, V158, V158, V164, V167, V165, V181, V177, V179]

================================

Block 0x2c1
[0x2c1:0x2d3]
---
Predecessors: [0x272, 0x29d]
Successors: [0x2d4, 0x2ed]
---
0x2c1 JUMPDEST
0x2c2 POP
0x2c3 POP
0x2c4 POP
0x2c5 SWAP1
0x2c6 POP
0x2c7 SWAP1
0x2c8 DUP2
0x2c9 ADD
0x2ca SWAP1
0x2cb PUSH1 0x1f
0x2cd AND
0x2ce DUP1
0x2cf ISZERO
0x2d0 PUSH2 0x2ed
0x2d3 JUMPI
---
0x2c1: JUMPDEST 
0x2c9: V183 = ADD V165 V164
0x2cb: V184 = 0x1f
0x2cd: V185 = AND 0x1f V165
0x2cf: V186 = ISZERO V185
0x2d0: V187 = 0x2ed
0x2d3: JUMPI 0x2ed V186
---
Entry stack: [V10, S8, V158, V158, V164, V167, V165, S2, S1, S0]
Stack pops: 6
Stack additions: [V183, V185]
Exit stack: [V10, S8, V158, V158, V183, V185]

================================

Block 0x2d4
[0x2d4:0x2ec]
---
Predecessors: [0x2c1]
Successors: [0x2ed]
---
0x2d4 DUP1
0x2d5 DUP3
0x2d6 SUB
0x2d7 DUP1
0x2d8 MLOAD
0x2d9 PUSH1 0x1
0x2db DUP4
0x2dc PUSH1 0x20
0x2de SUB
0x2df PUSH2 0x100
0x2e2 EXP
0x2e3 SUB
0x2e4 NOT
0x2e5 AND
0x2e6 DUP2
0x2e7 MSTORE
0x2e8 PUSH1 0x20
0x2ea ADD
0x2eb SWAP2
0x2ec POP
---
0x2d6: V188 = SUB V183 V185
0x2d8: V189 = M[V188]
0x2d9: V190 = 0x1
0x2dc: V191 = 0x20
0x2de: V192 = SUB 0x20 V185
0x2df: V193 = 0x100
0x2e2: V194 = EXP 0x100 V192
0x2e3: V195 = SUB V194 0x1
0x2e4: V196 = NOT V195
0x2e5: V197 = AND V196 V189
0x2e7: M[V188] = V197
0x2e8: V198 = 0x20
0x2ea: V199 = ADD 0x20 V188
---
Entry stack: [V10, S4, V158, V158, V183, V185]
Stack pops: 2
Stack additions: [V199, S0]
Exit stack: [V10, S4, V158, V158, V199, V185]

================================

Block 0x2ed
[0x2ed:0x2fa]
---
Predecessors: [0x2c1, 0x2d4]
Successors: []
---
0x2ed JUMPDEST
0x2ee POP
0x2ef SWAP3
0x2f0 POP
0x2f1 POP
0x2f2 POP
0x2f3 PUSH1 0x40
0x2f5 MLOAD
0x2f6 DUP1
0x2f7 SWAP2
0x2f8 SUB
0x2f9 SWAP1
0x2fa RETURN
---
0x2ed: JUMPDEST 
0x2f3: V200 = 0x40
0x2f5: V201 = M[0x40]
0x2f8: V202 = SUB S1 V201
0x2fa: RETURN V201 V202
---
Entry stack: [V10, S4, V158, V158, S1, V185]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x2fb
[0x2fb:0x301]
---
Predecessors: [0x3f]
Successors: [0x302, 0x303]
---
0x2fb JUMPDEST
0x2fc CALLVALUE
0x2fd ISZERO
0x2fe PUSH2 0x303
0x301 JUMPI
---
0x2fb: JUMPDEST 
0x2fc: V203 = CALLVALUE
0x2fd: V204 = ISZERO V203
0x2fe: V205 = 0x303
0x301: JUMPI 0x303 V204
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x302
[0x302:0x302]
---
Predecessors: [0x2fb]
Successors: []
---
0x302 INVALID
---
0x302: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x303
[0x303:0x337]
---
Predecessors: [0x2fb]
Successors: [0x6fc]
---
0x303 JUMPDEST
0x304 PUSH2 0x338
0x307 PUSH1 0x4
0x309 DUP1
0x30a DUP1
0x30b CALLDATALOAD
0x30c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x321 AND
0x322 SWAP1
0x323 PUSH1 0x20
0x325 ADD
0x326 SWAP1
0x327 SWAP2
0x328 SWAP1
0x329 DUP1
0x32a CALLDATALOAD
0x32b SWAP1
0x32c PUSH1 0x20
0x32e ADD
0x32f SWAP1
0x330 SWAP2
0x331 SWAP1
0x332 POP
0x333 POP
0x334 PUSH2 0x6fc
0x337 JUMP
---
0x303: JUMPDEST 
0x304: V206 = 0x338
0x307: V207 = 0x4
0x30b: V208 = CALLDATALOAD 0x4
0x30c: V209 = 0xffffffffffffffffffffffffffffffffffffffff
0x321: V210 = AND 0xffffffffffffffffffffffffffffffffffffffff V208
0x323: V211 = 0x20
0x325: V212 = ADD 0x20 0x4
0x32a: V213 = CALLDATALOAD 0x24
0x32c: V214 = 0x20
0x32e: V215 = ADD 0x20 0x24
0x334: V216 = 0x6fc
0x337: JUMP 0x6fc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x338, V210, V213]
Exit stack: [V10, 0x338, V210, V213]

================================

Block 0x338
[0x338:0x351]
---
Predecessors: [0x885]
Successors: []
---
0x338 JUMPDEST
0x339 PUSH1 0x40
0x33b MLOAD
0x33c DUP1
0x33d DUP3
0x33e ISZERO
0x33f ISZERO
0x340 ISZERO
0x341 ISZERO
0x342 DUP2
0x343 MSTORE
0x344 PUSH1 0x20
0x346 ADD
0x347 SWAP2
0x348 POP
0x349 POP
0x34a PUSH1 0x40
0x34c MLOAD
0x34d DUP1
0x34e SWAP2
0x34f SUB
0x350 SWAP1
0x351 RETURN
---
0x338: JUMPDEST 
0x339: V217 = 0x40
0x33b: V218 = M[0x40]
0x33e: V219 = ISZERO {0x0, 0x1}
0x33f: V220 = ISZERO V219
0x340: V221 = ISZERO V220
0x341: V222 = ISZERO V221
0x343: M[V218] = V222
0x344: V223 = 0x20
0x346: V224 = ADD 0x20 V218
0x34a: V225 = 0x40
0x34c: V226 = M[0x40]
0x34f: V227 = SUB V224 V226
0x351: RETURN V226 V227
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x352
[0x352:0x358]
---
Predecessors: [0x4a]
Successors: [0x359, 0x35a]
---
0x352 JUMPDEST
0x353 CALLVALUE
0x354 ISZERO
0x355 PUSH2 0x35a
0x358 JUMPI
---
0x352: JUMPDEST 
0x353: V228 = CALLVALUE
0x354: V229 = ISZERO V228
0x355: V230 = 0x35a
0x358: JUMPI 0x35a V229
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x359
[0x359:0x359]
---
Predecessors: [0x352]
Successors: []
---
0x359 INVALID
---
0x359: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x35a
[0x35a:0x361]
---
Predecessors: [0x352]
Successors: [0x88b]
---
0x35a JUMPDEST
0x35b PUSH2 0x362
0x35e PUSH2 0x88b
0x361 JUMP
---
0x35a: JUMPDEST 
0x35b: V231 = 0x362
0x35e: V232 = 0x88b
0x361: JUMP 0x88b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x362]
Exit stack: [V10, 0x362]

================================

Block 0x362
[0x362:0x377]
---
Predecessors: [0x88b]
Successors: []
---
0x362 JUMPDEST
0x363 PUSH1 0x40
0x365 MLOAD
0x366 DUP1
0x367 DUP3
0x368 DUP2
0x369 MSTORE
0x36a PUSH1 0x20
0x36c ADD
0x36d SWAP2
0x36e POP
0x36f POP
0x370 PUSH1 0x40
0x372 MLOAD
0x373 DUP1
0x374 SWAP2
0x375 SUB
0x376 SWAP1
0x377 RETURN
---
0x362: JUMPDEST 
0x363: V233 = 0x40
0x365: V234 = M[0x40]
0x369: M[V234] = V571
0x36a: V235 = 0x20
0x36c: V236 = ADD 0x20 V234
0x370: V237 = 0x40
0x372: V238 = M[0x40]
0x375: V239 = SUB V236 V238
0x377: RETURN V238 V239
---
Entry stack: [V10, 0x362, V571]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x362]

================================

Block 0x378
[0x378:0x37e]
---
Predecessors: [0x55]
Successors: [0x37f, 0x380]
---
0x378 JUMPDEST
0x379 CALLVALUE
0x37a ISZERO
0x37b PUSH2 0x380
0x37e JUMPI
---
0x378: JUMPDEST 
0x379: V240 = CALLVALUE
0x37a: V241 = ISZERO V240
0x37b: V242 = 0x380
0x37e: JUMPI 0x380 V241
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x37f
[0x37f:0x37f]
---
Predecessors: [0x378]
Successors: []
---
0x37f INVALID
---
0x37f: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x380
[0x380:0x387]
---
Predecessors: [0x378]
Successors: [0x891]
---
0x380 JUMPDEST
0x381 PUSH2 0x388
0x384 PUSH2 0x891
0x387 JUMP
---
0x380: JUMPDEST 
0x381: V243 = 0x388
0x384: V244 = 0x891
0x387: JUMP 0x891
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x388]
Exit stack: [V10, 0x388]

================================

Block 0x388
[0x388:0x39d]
---
Predecessors: [0x891]
Successors: []
---
0x388 JUMPDEST
0x389 PUSH1 0x40
0x38b MLOAD
0x38c DUP1
0x38d DUP3
0x38e DUP2
0x38f MSTORE
0x390 PUSH1 0x20
0x392 ADD
0x393 SWAP2
0x394 POP
0x395 POP
0x396 PUSH1 0x40
0x398 MLOAD
0x399 DUP1
0x39a SWAP2
0x39b SUB
0x39c SWAP1
0x39d RETURN
---
0x388: JUMPDEST 
0x389: V245 = 0x40
0x38b: V246 = M[0x40]
0x38f: M[V246] = V573
0x390: V247 = 0x20
0x392: V248 = ADD 0x20 V246
0x396: V249 = 0x40
0x398: V250 = M[0x40]
0x39b: V251 = SUB V248 V250
0x39d: RETURN V250 V251
---
Entry stack: [V10, 0x388, V573]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x388]

================================

Block 0x39e
[0x39e:0x3a4]
---
Predecessors: [0x60]
Successors: [0x3a5, 0x3a6]
---
0x39e JUMPDEST
0x39f CALLVALUE
0x3a0 ISZERO
0x3a1 PUSH2 0x3a6
0x3a4 JUMPI
---
0x39e: JUMPDEST 
0x39f: V252 = CALLVALUE
0x3a0: V253 = ISZERO V252
0x3a1: V254 = 0x3a6
0x3a4: JUMPI 0x3a6 V253
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a5
[0x3a5:0x3a5]
---
Predecessors: [0x39e]
Successors: []
---
0x3a5 INVALID
---
0x3a5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3a6
[0x3a6:0x3f9]
---
Predecessors: [0x39e]
Successors: [0x897]
---
0x3a6 JUMPDEST
0x3a7 PUSH2 0x3fa
0x3aa PUSH1 0x4
0x3ac DUP1
0x3ad DUP1
0x3ae CALLDATALOAD
0x3af PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3c4 AND
0x3c5 SWAP1
0x3c6 PUSH1 0x20
0x3c8 ADD
0x3c9 SWAP1
0x3ca SWAP2
0x3cb SWAP1
0x3cc DUP1
0x3cd CALLDATALOAD
0x3ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3e3 AND
0x3e4 SWAP1
0x3e5 PUSH1 0x20
0x3e7 ADD
0x3e8 SWAP1
0x3e9 SWAP2
0x3ea SWAP1
0x3eb DUP1
0x3ec CALLDATALOAD
0x3ed SWAP1
0x3ee PUSH1 0x20
0x3f0 ADD
0x3f1 SWAP1
0x3f2 SWAP2
0x3f3 SWAP1
0x3f4 POP
0x3f5 POP
0x3f6 PUSH2 0x897
0x3f9 JUMP
---
0x3a6: JUMPDEST 
0x3a7: V255 = 0x3fa
0x3aa: V256 = 0x4
0x3ae: V257 = CALLDATALOAD 0x4
0x3af: V258 = 0xffffffffffffffffffffffffffffffffffffffff
0x3c4: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x3c6: V260 = 0x20
0x3c8: V261 = ADD 0x20 0x4
0x3cd: V262 = CALLDATALOAD 0x24
0x3ce: V263 = 0xffffffffffffffffffffffffffffffffffffffff
0x3e3: V264 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x3e5: V265 = 0x20
0x3e7: V266 = ADD 0x20 0x24
0x3ec: V267 = CALLDATALOAD 0x44
0x3ee: V268 = 0x20
0x3f0: V269 = ADD 0x20 0x44
0x3f6: V270 = 0x897
0x3f9: JUMP 0x897
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x3fa, V259, V264, V267]
Exit stack: [V10, 0x3fa, V259, V264, V267]

================================

Block 0x3fa
[0x3fa:0x413]
---
Predecessors: [0xbcf]
Successors: []
---
0x3fa JUMPDEST
0x3fb PUSH1 0x40
0x3fd MLOAD
0x3fe DUP1
0x3ff DUP3
0x400 ISZERO
0x401 ISZERO
0x402 ISZERO
0x403 ISZERO
0x404 DUP2
0x405 MSTORE
0x406 PUSH1 0x20
0x408 ADD
0x409 SWAP2
0x40a POP
0x40b POP
0x40c PUSH1 0x40
0x40e MLOAD
0x40f DUP1
0x410 SWAP2
0x411 SUB
0x412 SWAP1
0x413 RETURN
---
0x3fa: JUMPDEST 
0x3fb: V271 = 0x40
0x3fd: V272 = M[0x40]
0x400: V273 = ISZERO {0x0, 0x1}
0x401: V274 = ISZERO V273
0x402: V275 = ISZERO V274
0x403: V276 = ISZERO V275
0x405: M[V272] = V276
0x406: V277 = 0x20
0x408: V278 = ADD 0x20 V272
0x40c: V279 = 0x40
0x40e: V280 = M[0x40]
0x411: V281 = SUB V278 V280
0x413: RETURN V280 V281
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x414
[0x414:0x41a]
---
Predecessors: [0x6b]
Successors: [0x41b, 0x41c]
---
0x414 JUMPDEST
0x415 CALLVALUE
0x416 ISZERO
0x417 PUSH2 0x41c
0x41a JUMPI
---
0x414: JUMPDEST 
0x415: V282 = CALLVALUE
0x416: V283 = ISZERO V282
0x417: V284 = 0x41c
0x41a: JUMPI 0x41c V283
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41b
[0x41b:0x41b]
---
Predecessors: [0x414]
Successors: []
---
0x41b INVALID
---
0x41b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x41c
[0x41c:0x423]
---
Predecessors: [0x414]
Successors: [0xbdb]
---
0x41c JUMPDEST
0x41d PUSH2 0x424
0x420 PUSH2 0xbdb
0x423 JUMP
---
0x41c: JUMPDEST 
0x41d: V285 = 0x424
0x420: V286 = 0xbdb
0x423: JUMP 0xbdb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x424]
Exit stack: [V10, 0x424]

================================

Block 0x424
[0x424:0x43f]
---
Predecessors: [0xbe2]
Successors: []
---
0x424 JUMPDEST
0x425 PUSH1 0x40
0x427 MLOAD
0x428 DUP1
0x429 DUP3
0x42a PUSH1 0xff
0x42c AND
0x42d PUSH1 0xff
0x42f AND
0x430 DUP2
0x431 MSTORE
0x432 PUSH1 0x20
0x434 ADD
0x435 SWAP2
0x436 POP
0x437 POP
0x438 PUSH1 0x40
0x43a MLOAD
0x43b DUP1
0x43c SWAP2
0x43d SUB
0x43e SWAP1
0x43f RETURN
---
0x424: JUMPDEST 
0x425: V287 = 0x40
0x427: V288 = M[0x40]
0x42a: V289 = 0xff
0x42c: V290 = AND 0xff 0x12
0x42d: V291 = 0xff
0x42f: V292 = AND 0xff 0x12
0x431: M[V288] = 0x12
0x432: V293 = 0x20
0x434: V294 = ADD 0x20 V288
0x438: V295 = 0x40
0x43a: V296 = M[0x40]
0x43d: V297 = SUB V294 V296
0x43f: RETURN V296 V297
---
Entry stack: [V10, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x440
[0x440:0x446]
---
Predecessors: [0x76]
Successors: [0x447, 0x448]
---
0x440 JUMPDEST
0x441 CALLVALUE
0x442 ISZERO
0x443 PUSH2 0x448
0x446 JUMPI
---
0x440: JUMPDEST 
0x441: V298 = CALLVALUE
0x442: V299 = ISZERO V298
0x443: V300 = 0x448
0x446: JUMPI 0x448 V299
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x447
[0x447:0x447]
---
Predecessors: [0x440]
Successors: []
---
0x447 INVALID
---
0x447: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x448
[0x448:0x44f]
---
Predecessors: [0x440]
Successors: [0xbe5]
---
0x448 JUMPDEST
0x449 PUSH2 0x450
0x44c PUSH2 0xbe5
0x44f JUMP
---
0x448: JUMPDEST 
0x449: V301 = 0x450
0x44c: V302 = 0xbe5
0x44f: JUMP 0xbe5
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x450]
Exit stack: [V10, 0x450]

================================

Block 0x450
[0x450:0x451]
---
Predecessors: [0xc5e]
Successors: []
---
0x450 JUMPDEST
0x451 STOP
---
0x450: JUMPDEST 
0x451: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x452
[0x452:0x458]
---
Predecessors: [0x81]
Successors: [0x459, 0x45a]
---
0x452 JUMPDEST
0x453 CALLVALUE
0x454 ISZERO
0x455 PUSH2 0x45a
0x458 JUMPI
---
0x452: JUMPDEST 
0x453: V303 = CALLVALUE
0x454: V304 = ISZERO V303
0x455: V305 = 0x45a
0x458: JUMPI 0x45a V304
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x459
[0x459:0x459]
---
Predecessors: [0x452]
Successors: []
---
0x459 INVALID
---
0x459: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x45a
[0x45a:0x485]
---
Predecessors: [0x452]
Successors: [0xc60]
---
0x45a JUMPDEST
0x45b PUSH2 0x486
0x45e PUSH1 0x4
0x460 DUP1
0x461 DUP1
0x462 CALLDATALOAD
0x463 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x478 AND
0x479 SWAP1
0x47a PUSH1 0x20
0x47c ADD
0x47d SWAP1
0x47e SWAP2
0x47f SWAP1
0x480 POP
0x481 POP
0x482 PUSH2 0xc60
0x485 JUMP
---
0x45a: JUMPDEST 
0x45b: V306 = 0x486
0x45e: V307 = 0x4
0x462: V308 = CALLDATALOAD 0x4
0x463: V309 = 0xffffffffffffffffffffffffffffffffffffffff
0x478: V310 = AND 0xffffffffffffffffffffffffffffffffffffffff V308
0x47a: V311 = 0x20
0x47c: V312 = ADD 0x20 0x4
0x482: V313 = 0xc60
0x485: JUMP 0xc60
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x486, V310]
Exit stack: [V10, 0x486, V310]

================================

Block 0x486
[0x486:0x49b]
---
Predecessors: [0xca5]
Successors: []
---
0x486 JUMPDEST
0x487 PUSH1 0x40
0x489 MLOAD
0x48a DUP1
0x48b DUP3
0x48c DUP2
0x48d MSTORE
0x48e PUSH1 0x20
0x490 ADD
0x491 SWAP2
0x492 POP
0x493 POP
0x494 PUSH1 0x40
0x496 MLOAD
0x497 DUP1
0x498 SWAP2
0x499 SUB
0x49a SWAP1
0x49b RETURN
---
0x486: JUMPDEST 
0x487: V314 = 0x40
0x489: V315 = M[0x40]
0x48d: M[V315] = V792
0x48e: V316 = 0x20
0x490: V317 = ADD 0x20 V315
0x494: V318 = 0x40
0x496: V319 = M[0x40]
0x499: V320 = SUB V317 V319
0x49b: RETURN V319 V320
---
Entry stack: [V10, V792]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x49c
[0x49c:0x4a2]
---
Predecessors: [0x8c]
Successors: [0x4a3, 0x4a4]
---
0x49c JUMPDEST
0x49d CALLVALUE
0x49e ISZERO
0x49f PUSH2 0x4a4
0x4a2 JUMPI
---
0x49c: JUMPDEST 
0x49d: V321 = CALLVALUE
0x49e: V322 = ISZERO V321
0x49f: V323 = 0x4a4
0x4a2: JUMPI 0x4a4 V322
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4a3
[0x4a3:0x4a3]
---
Predecessors: [0x49c]
Successors: []
---
0x4a3 INVALID
---
0x4a3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4a4
[0x4a4:0x4ab]
---
Predecessors: [0x49c]
Successors: [0xcaa]
---
0x4a4 JUMPDEST
0x4a5 PUSH2 0x4ac
0x4a8 PUSH2 0xcaa
0x4ab JUMP
---
0x4a4: JUMPDEST 
0x4a5: V324 = 0x4ac
0x4a8: V325 = 0xcaa
0x4ab: JUMP 0xcaa
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4ac]
Exit stack: [V10, 0x4ac]

================================

Block 0x4ac
[0x4ac:0x4ad]
---
Predecessors: [0xd23]
Successors: []
---
0x4ac JUMPDEST
0x4ad STOP
---
0x4ac: JUMPDEST 
0x4ad: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4ae
[0x4ae:0x4b4]
---
Predecessors: [0x97]
Successors: [0x4b5, 0x4b6]
---
0x4ae JUMPDEST
0x4af CALLVALUE
0x4b0 ISZERO
0x4b1 PUSH2 0x4b6
0x4b4 JUMPI
---
0x4ae: JUMPDEST 
0x4af: V326 = CALLVALUE
0x4b0: V327 = ISZERO V326
0x4b1: V328 = 0x4b6
0x4b4: JUMPI 0x4b6 V327
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b5
[0x4b5:0x4b5]
---
Predecessors: [0x4ae]
Successors: []
---
0x4b5 INVALID
---
0x4b5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4b6
[0x4b6:0x4bd]
---
Predecessors: [0x4ae]
Successors: [0xd25]
---
0x4b6 JUMPDEST
0x4b7 PUSH2 0x4be
0x4ba PUSH2 0xd25
0x4bd JUMP
---
0x4b6: JUMPDEST 
0x4b7: V329 = 0x4be
0x4ba: V330 = 0xd25
0x4bd: JUMP 0xd25
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x4be]
Exit stack: [V10, 0x4be]

================================

Block 0x4be
[0x4be:0x4e8]
---
Predecessors: [0x6f9, 0xd67]
Successors: [0x4e9, 0x50d]
---
0x4be JUMPDEST
0x4bf PUSH1 0x40
0x4c1 MLOAD
0x4c2 DUP1
0x4c3 DUP1
0x4c4 PUSH1 0x20
0x4c6 ADD
0x4c7 DUP3
0x4c8 DUP2
0x4c9 SUB
0x4ca DUP3
0x4cb MSTORE
0x4cc DUP4
0x4cd DUP2
0x4ce DUP2
0x4cf MLOAD
0x4d0 DUP2
0x4d1 MSTORE
0x4d2 PUSH1 0x20
0x4d4 ADD
0x4d5 SWAP2
0x4d6 POP
0x4d7 DUP1
0x4d8 MLOAD
0x4d9 SWAP1
0x4da PUSH1 0x20
0x4dc ADD
0x4dd SWAP1
0x4de DUP1
0x4df DUP4
0x4e0 DUP4
0x4e1 PUSH1 0x0
0x4e3 DUP4
0x4e4 EQ
0x4e5 PUSH2 0x50d
0x4e8 JUMPI
---
0x4be: JUMPDEST 
0x4bf: V331 = 0x40
0x4c1: V332 = M[0x40]
0x4c4: V333 = 0x20
0x4c6: V334 = ADD 0x20 V332
0x4c9: V335 = SUB V334 V332
0x4cb: M[V332] = V335
0x4cf: V336 = M[S0]
0x4d1: M[V334] = V336
0x4d2: V337 = 0x20
0x4d4: V338 = ADD 0x20 V334
0x4d8: V339 = M[S0]
0x4da: V340 = 0x20
0x4dc: V341 = ADD 0x20 S0
0x4e1: V342 = 0x0
0x4e4: V343 = EQ V339 0x0
0x4e5: V344 = 0x50d
0x4e8: JUMPI 0x50d V343
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [S0, V332, V332, V338, V341, V339, V339, V338, V341]
Exit stack: [V10, S0, V332, V332, V338, V341, V339, V339, V338, V341]

================================

Block 0x4e9
[0x4e9:0x4f6]
---
Predecessors: [0x4be, 0x4f7]
Successors: [0x4f7, 0x50d]
---
0x4e9 JUMPDEST
0x4ea DUP1
0x4eb MLOAD
0x4ec DUP3
0x4ed MSTORE
0x4ee PUSH1 0x20
0x4f0 DUP4
0x4f1 GT
0x4f2 ISZERO
0x4f3 PUSH2 0x50d
0x4f6 JUMPI
---
0x4e9: JUMPDEST 
0x4eb: V345 = M[S0]
0x4ed: M[S1] = V345
0x4ee: V346 = 0x20
0x4f1: V347 = GT S2 0x20
0x4f2: V348 = ISZERO V347
0x4f3: V349 = 0x50d
0x4f6: JUMPI 0x50d V348
---
Entry stack: [V10, S8, V332, V332, V338, V341, V339, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S8, V332, V332, V338, V341, V339, S2, S1, S0]

================================

Block 0x4f7
[0x4f7:0x50c]
---
Predecessors: [0x4e9]
Successors: [0x4e9]
---
0x4f7 PUSH1 0x20
0x4f9 DUP3
0x4fa ADD
0x4fb SWAP2
0x4fc POP
0x4fd PUSH1 0x20
0x4ff DUP2
0x500 ADD
0x501 SWAP1
0x502 POP
0x503 PUSH1 0x20
0x505 DUP4
0x506 SUB
0x507 SWAP3
0x508 POP
0x509 PUSH2 0x4e9
0x50c JUMP
---
0x4f7: V350 = 0x20
0x4fa: V351 = ADD S1 0x20
0x4fd: V352 = 0x20
0x500: V353 = ADD S0 0x20
0x503: V354 = 0x20
0x506: V355 = SUB S2 0x20
0x509: V356 = 0x4e9
0x50c: JUMP 0x4e9
---
Entry stack: [V10, S8, V332, V332, V338, V341, V339, S2, S1, S0]
Stack pops: 3
Stack additions: [V355, V351, V353]
Exit stack: [V10, S8, V332, V332, V338, V341, V339, V355, V351, V353]

================================

Block 0x50d
[0x50d:0x51f]
---
Predecessors: [0x4be, 0x4e9]
Successors: [0x520, 0x539]
---
0x50d JUMPDEST
0x50e POP
0x50f POP
0x510 POP
0x511 SWAP1
0x512 POP
0x513 SWAP1
0x514 DUP2
0x515 ADD
0x516 SWAP1
0x517 PUSH1 0x1f
0x519 AND
0x51a DUP1
0x51b ISZERO
0x51c PUSH2 0x539
0x51f JUMPI
---
0x50d: JUMPDEST 
0x515: V357 = ADD V339 V338
0x517: V358 = 0x1f
0x519: V359 = AND 0x1f V339
0x51b: V360 = ISZERO V359
0x51c: V361 = 0x539
0x51f: JUMPI 0x539 V360
---
Entry stack: [V10, S8, V332, V332, V338, V341, V339, S2, S1, S0]
Stack pops: 6
Stack additions: [V357, V359]
Exit stack: [V10, S8, V332, V332, V357, V359]

================================

Block 0x520
[0x520:0x538]
---
Predecessors: [0x50d]
Successors: [0x539]
---
0x520 DUP1
0x521 DUP3
0x522 SUB
0x523 DUP1
0x524 MLOAD
0x525 PUSH1 0x1
0x527 DUP4
0x528 PUSH1 0x20
0x52a SUB
0x52b PUSH2 0x100
0x52e EXP
0x52f SUB
0x530 NOT
0x531 AND
0x532 DUP2
0x533 MSTORE
0x534 PUSH1 0x20
0x536 ADD
0x537 SWAP2
0x538 POP
---
0x522: V362 = SUB V357 V359
0x524: V363 = M[V362]
0x525: V364 = 0x1
0x528: V365 = 0x20
0x52a: V366 = SUB 0x20 V359
0x52b: V367 = 0x100
0x52e: V368 = EXP 0x100 V366
0x52f: V369 = SUB V368 0x1
0x530: V370 = NOT V369
0x531: V371 = AND V370 V363
0x533: M[V362] = V371
0x534: V372 = 0x20
0x536: V373 = ADD 0x20 V362
---
Entry stack: [V10, S4, V332, V332, V357, V359]
Stack pops: 2
Stack additions: [V373, S0]
Exit stack: [V10, S4, V332, V332, V373, V359]

================================

Block 0x539
[0x539:0x546]
---
Predecessors: [0x50d, 0x520]
Successors: []
---
0x539 JUMPDEST
0x53a POP
0x53b SWAP3
0x53c POP
0x53d POP
0x53e POP
0x53f PUSH1 0x40
0x541 MLOAD
0x542 DUP1
0x543 SWAP2
0x544 SUB
0x545 SWAP1
0x546 RETURN
---
0x539: JUMPDEST 
0x53f: V374 = 0x40
0x541: V375 = M[0x40]
0x544: V376 = SUB S1 V375
0x546: RETURN V375 V376
---
Entry stack: [V10, S4, V332, V332, S1, V359]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x547
[0x547:0x54d]
---
Predecessors: [0xa2]
Successors: [0x54e, 0x54f]
---
0x547 JUMPDEST
0x548 CALLVALUE
0x549 ISZERO
0x54a PUSH2 0x54f
0x54d JUMPI
---
0x547: JUMPDEST 
0x548: V377 = CALLVALUE
0x549: V378 = ISZERO V377
0x54a: V379 = 0x54f
0x54d: JUMPI 0x54f V378
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x54e
[0x54e:0x54e]
---
Predecessors: [0x547]
Successors: []
---
0x54e INVALID
---
0x54e: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x54f
[0x54f:0x583]
---
Predecessors: [0x547]
Successors: [0xd6a]
---
0x54f JUMPDEST
0x550 PUSH2 0x584
0x553 PUSH1 0x4
0x555 DUP1
0x556 DUP1
0x557 CALLDATALOAD
0x558 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x56d AND
0x56e SWAP1
0x56f PUSH1 0x20
0x571 ADD
0x572 SWAP1
0x573 SWAP2
0x574 SWAP1
0x575 DUP1
0x576 CALLDATALOAD
0x577 SWAP1
0x578 PUSH1 0x20
0x57a ADD
0x57b SWAP1
0x57c SWAP2
0x57d SWAP1
0x57e POP
0x57f POP
0x580 PUSH2 0xd6a
0x583 JUMP
---
0x54f: JUMPDEST 
0x550: V380 = 0x584
0x553: V381 = 0x4
0x557: V382 = CALLDATALOAD 0x4
0x558: V383 = 0xffffffffffffffffffffffffffffffffffffffff
0x56d: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0x56f: V385 = 0x20
0x571: V386 = ADD 0x20 0x4
0x576: V387 = CALLDATALOAD 0x24
0x578: V388 = 0x20
0x57a: V389 = ADD 0x20 0x24
0x580: V390 = 0xd6a
0x583: JUMP 0xd6a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x584, V384, V387]
Exit stack: [V10, 0x584, V384, V387]

================================

Block 0x584
[0x584:0x59d]
---
Predecessors: [0xf86]
Successors: []
---
0x584 JUMPDEST
0x585 PUSH1 0x40
0x587 MLOAD
0x588 DUP1
0x589 DUP3
0x58a ISZERO
0x58b ISZERO
0x58c ISZERO
0x58d ISZERO
0x58e DUP2
0x58f MSTORE
0x590 PUSH1 0x20
0x592 ADD
0x593 SWAP2
0x594 POP
0x595 POP
0x596 PUSH1 0x40
0x598 MLOAD
0x599 DUP1
0x59a SWAP2
0x59b SUB
0x59c SWAP1
0x59d RETURN
---
0x584: JUMPDEST 
0x585: V391 = 0x40
0x587: V392 = M[0x40]
0x58a: V393 = ISZERO {0x0, 0x1}
0x58b: V394 = ISZERO V393
0x58c: V395 = ISZERO V394
0x58d: V396 = ISZERO V395
0x58f: M[V392] = V396
0x590: V397 = 0x20
0x592: V398 = ADD 0x20 V392
0x596: V399 = 0x40
0x598: V400 = M[0x40]
0x59b: V401 = SUB V398 V400
0x59d: RETURN V400 V401
---
Entry stack: [V10, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x59e
[0x59e:0x5a4]
---
Predecessors: [0xad]
Successors: [0x5a5, 0x5a6]
---
0x59e JUMPDEST
0x59f CALLVALUE
0x5a0 ISZERO
0x5a1 PUSH2 0x5a6
0x5a4 JUMPI
---
0x59e: JUMPDEST 
0x59f: V402 = CALLVALUE
0x5a0: V403 = ISZERO V402
0x5a1: V404 = 0x5a6
0x5a4: JUMPI 0x5a6 V403
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5a5
[0x5a5:0x5a5]
---
Predecessors: [0x59e]
Successors: []
---
0x5a5 INVALID
---
0x5a5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5a6
[0x5a6:0x5ad]
---
Predecessors: [0x59e]
Successors: [0xf8f]
---
0x5a6 JUMPDEST
0x5a7 PUSH2 0x5ae
0x5aa PUSH2 0xf8f
0x5ad JUMP
---
0x5a6: JUMPDEST 
0x5a7: V405 = 0x5ae
0x5aa: V406 = 0xf8f
0x5ad: JUMP 0xf8f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5ae]
Exit stack: [V10, 0x5ae]

================================

Block 0x5ae
[0x5ae:0x5d5]
---
Predecessors: [0xfb2]
Successors: []
---
0x5ae JUMPDEST
0x5af PUSH1 0x40
0x5b1 MLOAD
0x5b2 DUP1
0x5b3 DUP5
0x5b4 DUP2
0x5b5 MSTORE
0x5b6 PUSH1 0x20
0x5b8 ADD
0x5b9 DUP4
0x5ba DUP2
0x5bb MSTORE
0x5bc PUSH1 0x20
0x5be ADD
0x5bf DUP3
0x5c0 ISZERO
0x5c1 ISZERO
0x5c2 ISZERO
0x5c3 ISZERO
0x5c4 DUP2
0x5c5 MSTORE
0x5c6 PUSH1 0x20
0x5c8 ADD
0x5c9 SWAP4
0x5ca POP
0x5cb POP
0x5cc POP
0x5cd POP
0x5ce PUSH1 0x40
0x5d0 MLOAD
0x5d1 DUP1
0x5d2 SWAP2
0x5d3 SUB
0x5d4 SWAP1
0x5d5 RETURN
---
0x5ae: JUMPDEST 
0x5af: V407 = 0x40
0x5b1: V408 = M[0x40]
0x5b5: M[V408] = V956
0x5b6: V409 = 0x20
0x5b8: V410 = ADD 0x20 V408
0x5bb: M[V410] = V958
0x5bc: V411 = 0x20
0x5be: V412 = ADD 0x20 V410
0x5c0: V413 = ISZERO V966
0x5c1: V414 = ISZERO V413
0x5c2: V415 = ISZERO V414
0x5c3: V416 = ISZERO V415
0x5c5: M[V412] = V416
0x5c6: V417 = 0x20
0x5c8: V418 = ADD 0x20 V412
0x5ce: V419 = 0x40
0x5d0: V420 = M[0x40]
0x5d3: V421 = SUB V418 V420
0x5d5: RETURN V420 V421
---
Entry stack: [V10, V956, V958, V966]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x5d6
[0x5d6:0x5dc]
---
Predecessors: [0xb8]
Successors: [0x5dd, 0x5de]
---
0x5d6 JUMPDEST
0x5d7 CALLVALUE
0x5d8 ISZERO
0x5d9 PUSH2 0x5de
0x5dc JUMPI
---
0x5d6: JUMPDEST 
0x5d7: V422 = CALLVALUE
0x5d8: V423 = ISZERO V422
0x5d9: V424 = 0x5de
0x5dc: JUMPI 0x5de V423
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5dd
[0x5dd:0x5dd]
---
Predecessors: [0x5d6]
Successors: []
---
0x5dd INVALID
---
0x5dd: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x5de
[0x5de:0x5e5]
---
Predecessors: [0x5d6]
Successors: [0xfb7]
---
0x5de JUMPDEST
0x5df PUSH2 0x5e6
0x5e2 PUSH2 0xfb7
0x5e5 JUMP
---
0x5de: JUMPDEST 
0x5df: V425 = 0x5e6
0x5e2: V426 = 0xfb7
0x5e5: JUMP 0xfb7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x5e6]
Exit stack: [V10, 0x5e6]

================================

Block 0x5e6
[0x5e6:0x5ff]
---
Predecessors: [0xfb7]
Successors: []
---
0x5e6 JUMPDEST
0x5e7 PUSH1 0x40
0x5e9 MLOAD
0x5ea DUP1
0x5eb DUP3
0x5ec ISZERO
0x5ed ISZERO
0x5ee ISZERO
0x5ef ISZERO
0x5f0 DUP2
0x5f1 MSTORE
0x5f2 PUSH1 0x20
0x5f4 ADD
0x5f5 SWAP2
0x5f6 POP
0x5f7 POP
0x5f8 PUSH1 0x40
0x5fa MLOAD
0x5fb DUP1
0x5fc SWAP2
0x5fd SUB
0x5fe SWAP1
0x5ff RETURN
---
0x5e6: JUMPDEST 
0x5e7: V427 = 0x40
0x5e9: V428 = M[0x40]
0x5ec: V429 = ISZERO V974
0x5ed: V430 = ISZERO V429
0x5ee: V431 = ISZERO V430
0x5ef: V432 = ISZERO V431
0x5f1: M[V428] = V432
0x5f2: V433 = 0x20
0x5f4: V434 = ADD 0x20 V428
0x5f8: V435 = 0x40
0x5fa: V436 = M[0x40]
0x5fd: V437 = SUB V434 V436
0x5ff: RETURN V436 V437
---
Entry stack: [V10, 0x5e6, V974]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x5e6]

================================

Block 0x600
[0x600:0x606]
---
Predecessors: [0xc3]
Successors: [0x607, 0x608]
---
0x600 JUMPDEST
0x601 CALLVALUE
0x602 ISZERO
0x603 PUSH2 0x608
0x606 JUMPI
---
0x600: JUMPDEST 
0x601: V438 = CALLVALUE
0x602: V439 = ISZERO V438
0x603: V440 = 0x608
0x606: JUMPI 0x608 V439
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x607
[0x607:0x607]
---
Predecessors: [0x600]
Successors: []
---
0x607 INVALID
---
0x607: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x608
[0x608:0x652]
---
Predecessors: [0x600]
Successors: [0xfca]
---
0x608 JUMPDEST
0x609 PUSH2 0x653
0x60c PUSH1 0x4
0x60e DUP1
0x60f DUP1
0x610 CALLDATALOAD
0x611 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x626 AND
0x627 SWAP1
0x628 PUSH1 0x20
0x62a ADD
0x62b SWAP1
0x62c SWAP2
0x62d SWAP1
0x62e DUP1
0x62f CALLDATALOAD
0x630 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x645 AND
0x646 SWAP1
0x647 PUSH1 0x20
0x649 ADD
0x64a SWAP1
0x64b SWAP2
0x64c SWAP1
0x64d POP
0x64e POP
0x64f PUSH2 0xfca
0x652 JUMP
---
0x608: JUMPDEST 
0x609: V441 = 0x653
0x60c: V442 = 0x4
0x610: V443 = CALLDATALOAD 0x4
0x611: V444 = 0xffffffffffffffffffffffffffffffffffffffff
0x626: V445 = AND 0xffffffffffffffffffffffffffffffffffffffff V443
0x628: V446 = 0x20
0x62a: V447 = ADD 0x20 0x4
0x62f: V448 = CALLDATALOAD 0x24
0x630: V449 = 0xffffffffffffffffffffffffffffffffffffffff
0x645: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V448
0x647: V451 = 0x20
0x649: V452 = ADD 0x20 0x24
0x64f: V453 = 0xfca
0x652: JUMP 0xfca
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x653, V445, V450]
Exit stack: [V10, 0x653, V445, V450]

================================

Block 0x653
[0x653:0x668]
---
Predecessors: [0x104c]
Successors: []
---
0x653 JUMPDEST
0x654 PUSH1 0x40
0x656 MLOAD
0x657 DUP1
0x658 DUP3
0x659 DUP2
0x65a MSTORE
0x65b PUSH1 0x20
0x65d ADD
0x65e SWAP2
0x65f POP
0x660 POP
0x661 PUSH1 0x40
0x663 MLOAD
0x664 DUP1
0x665 SWAP2
0x666 SUB
0x667 SWAP1
0x668 RETURN
---
0x653: JUMPDEST 
0x654: V454 = 0x40
0x656: V455 = M[0x40]
0x65a: M[V455] = V999
0x65b: V456 = 0x20
0x65d: V457 = ADD 0x20 V455
0x661: V458 = 0x40
0x663: V459 = M[0x40]
0x666: V460 = SUB V457 V459
0x668: RETURN V459 V460
---
Entry stack: [V10, V999]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x669
[0x669:0x66f]
---
Predecessors: [0xce]
Successors: [0x670, 0x671]
---
0x669 JUMPDEST
0x66a CALLVALUE
0x66b ISZERO
0x66c PUSH2 0x671
0x66f JUMPI
---
0x669: JUMPDEST 
0x66a: V461 = CALLVALUE
0x66b: V462 = ISZERO V461
0x66c: V463 = 0x671
0x66f: JUMPI 0x671 V462
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x670
[0x670:0x670]
---
Predecessors: [0x669]
Successors: []
---
0x670 INVALID
---
0x670: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x671
[0x671:0x69c]
---
Predecessors: [0x669]
Successors: [0x1052]
---
0x671 JUMPDEST
0x672 PUSH2 0x69d
0x675 PUSH1 0x4
0x677 DUP1
0x678 DUP1
0x679 CALLDATALOAD
0x67a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68f AND
0x690 SWAP1
0x691 PUSH1 0x20
0x693 ADD
0x694 SWAP1
0x695 SWAP2
0x696 SWAP1
0x697 POP
0x698 POP
0x699 PUSH2 0x1052
0x69c JUMP
---
0x671: JUMPDEST 
0x672: V464 = 0x69d
0x675: V465 = 0x4
0x679: V466 = CALLDATALOAD 0x4
0x67a: V467 = 0xffffffffffffffffffffffffffffffffffffffff
0x68f: V468 = AND 0xffffffffffffffffffffffffffffffffffffffff V466
0x691: V469 = 0x20
0x693: V470 = ADD 0x20 0x4
0x699: V471 = 0x1052
0x69c: JUMP 0x1052
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x69d, V468]
Exit stack: [V10, 0x69d, V468]

================================

Block 0x69d
[0x69d:0x6b6]
---
Predecessors: [0x1257]
Successors: []
---
0x69d JUMPDEST
0x69e PUSH1 0x40
0x6a0 MLOAD
0x6a1 DUP1
0x6a2 DUP3
0x6a3 ISZERO
0x6a4 ISZERO
0x6a5 ISZERO
0x6a6 ISZERO
0x6a7 DUP2
0x6a8 MSTORE
0x6a9 PUSH1 0x20
0x6ab ADD
0x6ac SWAP2
0x6ad POP
0x6ae POP
0x6af PUSH1 0x40
0x6b1 MLOAD
0x6b2 DUP1
0x6b3 SWAP2
0x6b4 SUB
0x6b5 SWAP1
0x6b6 RETURN
---
0x69d: JUMPDEST 
0x69e: V472 = 0x40
0x6a0: V473 = M[0x40]
0x6a3: V474 = ISZERO V1114
0x6a4: V475 = ISZERO V474
0x6a5: V476 = ISZERO V475
0x6a6: V477 = ISZERO V476
0x6a8: M[V473] = V477
0x6a9: V478 = 0x20
0x6ab: V479 = ADD 0x20 V473
0x6af: V480 = 0x40
0x6b1: V481 = M[0x40]
0x6b4: V482 = SUB V479 V481
0x6b6: RETURN V481 V482
---
Entry stack: [V10, V1114]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x6b7
[0x6b7:0x6be]
---
Predecessors: [0x26a]
Successors: [0x125e]
---
0x6b7 JUMPDEST
0x6b8 PUSH2 0x6bf
0x6bb PUSH2 0x125e
0x6be JUMP
---
0x6b7: JUMPDEST 
0x6b8: V483 = 0x6bf
0x6bb: V484 = 0x125e
0x6be: JUMP 0x125e
---
Entry stack: [V10, 0x272]
Stack pops: 0
Stack additions: [0x6bf]
Exit stack: [V10, 0x272, 0x6bf]

================================

Block 0x6bf
[0x6bf:0x6f8]
---
Predecessors: [0x125e]
Successors: [0x6f9]
---
0x6bf JUMPDEST
0x6c0 PUSH1 0x40
0x6c2 PUSH1 0x40
0x6c4 MLOAD
0x6c5 SWAP1
0x6c6 DUP2
0x6c7 ADD
0x6c8 PUSH1 0x40
0x6ca MSTORE
0x6cb DUP1
0x6cc PUSH1 0xb
0x6ce DUP2
0x6cf MSTORE
0x6d0 PUSH1 0x20
0x6d2 ADD
0x6d3 PUSH32 0x436f736d6f73546f6b656e000000000000000000000000000000000000000000
0x6f4 DUP2
0x6f5 MSTORE
0x6f6 POP
0x6f7 SWAP1
0x6f8 POP
---
0x6bf: JUMPDEST 
0x6c0: V485 = 0x40
0x6c2: V486 = 0x40
0x6c4: V487 = M[0x40]
0x6c7: V488 = ADD V487 0x40
0x6c8: V489 = 0x40
0x6ca: M[0x40] = V488
0x6cc: V490 = 0xb
0x6cf: M[V487] = 0xb
0x6d0: V491 = 0x20
0x6d2: V492 = ADD 0x20 V487
0x6d3: V493 = 0x436f736d6f73546f6b656e000000000000000000000000000000000000000000
0x6f5: M[V492] = 0x436f736d6f73546f6b656e000000000000000000000000000000000000000000
---
Entry stack: [V10, {0x272, 0x4be}, V1117]
Stack pops: 1
Stack additions: [V487]
Exit stack: [V10, {0x272, 0x4be}, V487]

================================

Block 0x6f9
[0x6f9:0x6fb]
---
Predecessors: [0x6bf]
Successors: [0x272, 0x4be]
---
0x6f9 JUMPDEST
0x6fa SWAP1
0x6fb JUMP
---
0x6f9: JUMPDEST 
0x6fb: JUMP {0x272, 0x4be}
---
Entry stack: [V10, {0x272, 0x4be}, V487]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V487]

================================

Block 0x6fc
[0x6fc:0x709]
---
Predecessors: [0x303]
Successors: [0x70a, 0x78c]
---
0x6fc JUMPDEST
0x6fd PUSH1 0x0
0x6ff PUSH1 0x0
0x701 DUP3
0x702 EQ
0x703 ISZERO
0x704 DUP1
0x705 ISZERO
0x706 PUSH2 0x78c
0x709 JUMPI
---
0x6fc: JUMPDEST 
0x6fd: V494 = 0x0
0x6ff: V495 = 0x0
0x702: V496 = EQ V213 0x0
0x703: V497 = ISZERO V496
0x705: V498 = ISZERO V497
0x706: V499 = 0x78c
0x709: JUMPI 0x78c V498
---
Entry stack: [V10, 0x338, V210, V213]
Stack pops: 1
Stack additions: [S0, 0x0, V497]
Exit stack: [V10, 0x338, V210, V213, 0x0, V497]

================================

Block 0x70a
[0x70a:0x78b]
---
Predecessors: [0x6fc]
Successors: [0x78c]
---
0x70a POP
0x70b PUSH1 0x0
0x70d PUSH1 0x2
0x70f PUSH1 0x0
0x711 CALLER
0x712 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x727 AND
0x728 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x73d AND
0x73e DUP2
0x73f MSTORE
0x740 PUSH1 0x20
0x742 ADD
0x743 SWAP1
0x744 DUP2
0x745 MSTORE
0x746 PUSH1 0x20
0x748 ADD
0x749 PUSH1 0x0
0x74b SHA3
0x74c PUSH1 0x0
0x74e DUP6
0x74f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x764 AND
0x765 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x77a AND
0x77b DUP2
0x77c MSTORE
0x77d PUSH1 0x20
0x77f ADD
0x780 SWAP1
0x781 DUP2
0x782 MSTORE
0x783 PUSH1 0x20
0x785 ADD
0x786 PUSH1 0x0
0x788 SHA3
0x789 SLOAD
0x78a EQ
0x78b ISZERO
---
0x70b: V500 = 0x0
0x70d: V501 = 0x2
0x70f: V502 = 0x0
0x711: V503 = CALLER
0x712: V504 = 0xffffffffffffffffffffffffffffffffffffffff
0x727: V505 = AND 0xffffffffffffffffffffffffffffffffffffffff V503
0x728: V506 = 0xffffffffffffffffffffffffffffffffffffffff
0x73d: V507 = AND 0xffffffffffffffffffffffffffffffffffffffff V505
0x73f: M[0x0] = V507
0x740: V508 = 0x20
0x742: V509 = ADD 0x20 0x0
0x745: M[0x20] = 0x2
0x746: V510 = 0x20
0x748: V511 = ADD 0x20 0x20
0x749: V512 = 0x0
0x74b: V513 = SHA3 0x0 0x40
0x74c: V514 = 0x0
0x74f: V515 = 0xffffffffffffffffffffffffffffffffffffffff
0x764: V516 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x765: V517 = 0xffffffffffffffffffffffffffffffffffffffff
0x77a: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff V516
0x77c: M[0x0] = V518
0x77d: V519 = 0x20
0x77f: V520 = ADD 0x20 0x0
0x782: M[0x20] = V513
0x783: V521 = 0x20
0x785: V522 = ADD 0x20 0x20
0x786: V523 = 0x0
0x788: V524 = SHA3 0x0 0x40
0x789: V525 = S[V524]
0x78a: V526 = EQ V525 0x0
0x78b: V527 = ISZERO V526
---
Entry stack: [V10, 0x338, V210, V213, 0x0, V497]
Stack pops: 4
Stack additions: [S3, S2, S1, V527]
Exit stack: [V10, 0x338, V210, V213, 0x0, V527]

================================

Block 0x78c
[0x78c:0x791]
---
Predecessors: [0x6fc, 0x70a]
Successors: [0x792, 0x79a]
---
0x78c JUMPDEST
0x78d ISZERO
0x78e PUSH2 0x79a
0x791 JUMPI
---
0x78c: JUMPDEST 
0x78d: V528 = ISZERO S0
0x78e: V529 = 0x79a
0x791: JUMPI 0x79a V528
---
Entry stack: [V10, 0x338, V210, V213, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x338, V210, V213, 0x0]

================================

Block 0x792
[0x792:0x799]
---
Predecessors: [0x78c]
Successors: [0x885]
---
0x792 PUSH1 0x0
0x794 SWAP1
0x795 POP
0x796 PUSH2 0x885
0x799 JUMP
---
0x792: V530 = 0x0
0x796: V531 = 0x885
0x799: JUMP 0x885
---
Entry stack: [V10, 0x338, V210, V213, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x338, V210, V213, 0x0]

================================

Block 0x79a
[0x79a:0x884]
---
Predecessors: [0x78c]
Successors: [0x885]
---
0x79a JUMPDEST
0x79b DUP2
0x79c PUSH1 0x2
0x79e PUSH1 0x0
0x7a0 CALLER
0x7a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7b6 AND
0x7b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7cc AND
0x7cd DUP2
0x7ce MSTORE
0x7cf PUSH1 0x20
0x7d1 ADD
0x7d2 SWAP1
0x7d3 DUP2
0x7d4 MSTORE
0x7d5 PUSH1 0x20
0x7d7 ADD
0x7d8 PUSH1 0x0
0x7da SHA3
0x7db PUSH1 0x0
0x7dd DUP6
0x7de PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x7f3 AND
0x7f4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x809 AND
0x80a DUP2
0x80b MSTORE
0x80c PUSH1 0x20
0x80e ADD
0x80f SWAP1
0x810 DUP2
0x811 MSTORE
0x812 PUSH1 0x20
0x814 ADD
0x815 PUSH1 0x0
0x817 SHA3
0x818 DUP2
0x819 SWAP1
0x81a SSTORE
0x81b POP
0x81c DUP3
0x81d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x832 AND
0x833 CALLER
0x834 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x849 AND
0x84a PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x86b DUP5
0x86c PUSH1 0x40
0x86e MLOAD
0x86f DUP1
0x870 DUP3
0x871 DUP2
0x872 MSTORE
0x873 PUSH1 0x20
0x875 ADD
0x876 SWAP2
0x877 POP
0x878 POP
0x879 PUSH1 0x40
0x87b MLOAD
0x87c DUP1
0x87d SWAP2
0x87e SUB
0x87f SWAP1
0x880 LOG3
0x881 PUSH1 0x1
0x883 SWAP1
0x884 POP
---
0x79a: JUMPDEST 
0x79c: V532 = 0x2
0x79e: V533 = 0x0
0x7a0: V534 = CALLER
0x7a1: V535 = 0xffffffffffffffffffffffffffffffffffffffff
0x7b6: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V534
0x7b7: V537 = 0xffffffffffffffffffffffffffffffffffffffff
0x7cc: V538 = AND 0xffffffffffffffffffffffffffffffffffffffff V536
0x7ce: M[0x0] = V538
0x7cf: V539 = 0x20
0x7d1: V540 = ADD 0x20 0x0
0x7d4: M[0x20] = 0x2
0x7d5: V541 = 0x20
0x7d7: V542 = ADD 0x20 0x20
0x7d8: V543 = 0x0
0x7da: V544 = SHA3 0x0 0x40
0x7db: V545 = 0x0
0x7de: V546 = 0xffffffffffffffffffffffffffffffffffffffff
0x7f3: V547 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x7f4: V548 = 0xffffffffffffffffffffffffffffffffffffffff
0x809: V549 = AND 0xffffffffffffffffffffffffffffffffffffffff V547
0x80b: M[0x0] = V549
0x80c: V550 = 0x20
0x80e: V551 = ADD 0x20 0x0
0x811: M[0x20] = V544
0x812: V552 = 0x20
0x814: V553 = ADD 0x20 0x20
0x815: V554 = 0x0
0x817: V555 = SHA3 0x0 0x40
0x81a: S[V555] = V213
0x81d: V556 = 0xffffffffffffffffffffffffffffffffffffffff
0x832: V557 = AND 0xffffffffffffffffffffffffffffffffffffffff V210
0x833: V558 = CALLER
0x834: V559 = 0xffffffffffffffffffffffffffffffffffffffff
0x849: V560 = AND 0xffffffffffffffffffffffffffffffffffffffff V558
0x84a: V561 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x86c: V562 = 0x40
0x86e: V563 = M[0x40]
0x872: M[V563] = V213
0x873: V564 = 0x20
0x875: V565 = ADD 0x20 V563
0x879: V566 = 0x40
0x87b: V567 = M[0x40]
0x87e: V568 = SUB V565 V567
0x880: LOG V567 V568 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V560 V557
0x881: V569 = 0x1
---
Entry stack: [V10, 0x338, V210, V213, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x338, V210, V213, 0x1]

================================

Block 0x885
[0x885:0x88a]
---
Predecessors: [0x792, 0x79a]
Successors: [0x338]
---
0x885 JUMPDEST
0x886 SWAP3
0x887 SWAP2
0x888 POP
0x889 POP
0x88a JUMP
---
0x885: JUMPDEST 
0x88a: JUMP 0x338
---
Entry stack: [V10, 0x338, V210, V213, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x88b
[0x88b:0x890]
---
Predecessors: [0x35a]
Successors: [0x362]
---
0x88b JUMPDEST
0x88c PUSH1 0x3
0x88e SLOAD
0x88f DUP2
0x890 JUMP
---
0x88b: JUMPDEST 
0x88c: V570 = 0x3
0x88e: V571 = S[0x3]
0x890: JUMP 0x362
---
Entry stack: [V10, 0x362]
Stack pops: 1
Stack additions: [S0, V571]
Exit stack: [V10, 0x362, V571]

================================

Block 0x891
[0x891:0x896]
---
Predecessors: [0x380]
Successors: [0x388]
---
0x891 JUMPDEST
0x892 PUSH1 0x4
0x894 SLOAD
0x895 DUP2
0x896 JUMP
---
0x891: JUMPDEST 
0x892: V572 = 0x4
0x894: V573 = S[0x4]
0x896: JUMP 0x388
---
Entry stack: [V10, 0x388]
Stack pops: 1
Stack additions: [S0, V573]
Exit stack: [V10, 0x388, V573]

================================

Block 0x897
[0x897:0x8b0]
---
Predecessors: [0x3a6]
Successors: [0x8b1, 0x8b6]
---
0x897 JUMPDEST
0x898 PUSH1 0x0
0x89a PUSH1 0x0
0x89c PUSH1 0x0
0x89e PUSH1 0x0
0x8a0 PUSH1 0x0
0x8a2 PUSH1 0x0
0x8a4 PUSH1 0x64
0x8a6 PUSH1 0x0
0x8a8 CALLDATASIZE
0x8a9 SWAP1
0x8aa POP
0x8ab LT
0x8ac ISZERO
0x8ad PUSH2 0x8b6
0x8b0 JUMPI
---
0x897: JUMPDEST 
0x898: V574 = 0x0
0x89a: V575 = 0x0
0x89c: V576 = 0x0
0x89e: V577 = 0x0
0x8a0: V578 = 0x0
0x8a2: V579 = 0x0
0x8a4: V580 = 0x64
0x8a6: V581 = 0x0
0x8a8: V582 = CALLDATASIZE
0x8ab: V583 = LT V582 0x64
0x8ac: V584 = ISZERO V583
0x8ad: V585 = 0x8b6
0x8b0: JUMPI 0x8b6 V584
---
Entry stack: [V10, 0x3fa, V259, V264, V267]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x3fa, V259, V264, V267, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8b1
[0x8b1:0x8b5]
---
Predecessors: [0x897]
Successors: []
---
0x8b1 PUSH1 0x0
0x8b3 PUSH1 0x0
0x8b5 REVERT
---
0x8b1: V586 = 0x0
0x8b3: V587 = 0x0
0x8b5: REVERT 0x0 0x0
---
Entry stack: [V10, 0x3fa, V259, V264, V267, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x3fa, V259, V264, V267, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8b6
[0x8b6:0x8bf]
---
Predecessors: [0x897]
Successors: [0x8c0, 0x8c8]
---
0x8b6 JUMPDEST
0x8b7 PUSH1 0x0
0x8b9 DUP8
0x8ba EQ
0x8bb ISZERO
0x8bc PUSH2 0x8c8
0x8bf JUMPI
---
0x8b6: JUMPDEST 
0x8b7: V588 = 0x0
0x8ba: V589 = EQ V267 0x0
0x8bb: V590 = ISZERO V589
0x8bc: V591 = 0x8c8
0x8bf: JUMPI 0x8c8 V590
---
Entry stack: [V10, 0x3fa, V259, V264, V267, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x3fa, V259, V264, V267, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8c0
[0x8c0:0x8c7]
---
Predecessors: [0x8b6]
Successors: [0xbcf]
---
0x8c0 PUSH1 0x0
0x8c2 SWAP6
0x8c3 POP
0x8c4 PUSH2 0xbcf
0x8c7 JUMP
---
0x8c0: V592 = 0x0
0x8c4: V593 = 0xbcf
0x8c7: JUMP 0xbcf
---
Entry stack: [V10, 0x3fa, V259, V264, V267, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x3fa, V259, V264, V267, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8c8
[0x8c8:0xa21]
---
Predecessors: [0x8b6]
Successors: [0xa22, 0xa24]
---
0x8c8 JUMPDEST
0x8c9 PUSH1 0x1
0x8cb PUSH1 0x0
0x8cd DUP11
0x8ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8e3 AND
0x8e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8f9 AND
0x8fa DUP2
0x8fb MSTORE
0x8fc PUSH1 0x20
0x8fe ADD
0x8ff SWAP1
0x900 DUP2
0x901 MSTORE
0x902 PUSH1 0x20
0x904 ADD
0x905 PUSH1 0x0
0x907 SHA3
0x908 SLOAD
0x909 SWAP5
0x90a POP
0x90b PUSH1 0x2
0x90d PUSH1 0x0
0x90f DUP11
0x910 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x925 AND
0x926 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x93b AND
0x93c DUP2
0x93d MSTORE
0x93e PUSH1 0x20
0x940 ADD
0x941 SWAP1
0x942 DUP2
0x943 MSTORE
0x944 PUSH1 0x20
0x946 ADD
0x947 PUSH1 0x0
0x949 SHA3
0x94a PUSH1 0x0
0x94c CALLER
0x94d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x962 AND
0x963 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x978 AND
0x979 DUP2
0x97a MSTORE
0x97b PUSH1 0x20
0x97d ADD
0x97e SWAP1
0x97f DUP2
0x980 MSTORE
0x981 PUSH1 0x20
0x983 ADD
0x984 PUSH1 0x0
0x986 SHA3
0x987 SLOAD
0x988 SWAP4
0x989 POP
0x98a DUP7
0x98b DUP6
0x98c GT
0x98d ISZERO
0x98e SWAP3
0x98f POP
0x990 DUP7
0x991 DUP5
0x992 GT
0x993 ISZERO
0x994 SWAP2
0x995 POP
0x996 PUSH1 0x1
0x998 PUSH1 0x0
0x99a DUP10
0x99b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b0 AND
0x9b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9c6 AND
0x9c7 DUP2
0x9c8 MSTORE
0x9c9 PUSH1 0x20
0x9cb ADD
0x9cc SWAP1
0x9cd DUP2
0x9ce MSTORE
0x9cf PUSH1 0x20
0x9d1 ADD
0x9d2 PUSH1 0x0
0x9d4 SHA3
0x9d5 SLOAD
0x9d6 DUP8
0x9d7 PUSH1 0x1
0x9d9 PUSH1 0x0
0x9db DUP12
0x9dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9f1 AND
0x9f2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa07 AND
0xa08 DUP2
0xa09 MSTORE
0xa0a PUSH1 0x20
0xa0c ADD
0xa0d SWAP1
0xa0e DUP2
0xa0f MSTORE
0xa10 PUSH1 0x20
0xa12 ADD
0xa13 PUSH1 0x0
0xa15 SHA3
0xa16 SLOAD
0xa17 ADD
0xa18 GT
0xa19 SWAP1
0xa1a POP
0xa1b DUP3
0xa1c DUP1
0xa1d ISZERO
0xa1e PUSH2 0xa24
0xa21 JUMPI
---
0x8c8: JUMPDEST 
0x8c9: V594 = 0x1
0x8cb: V595 = 0x0
0x8ce: V596 = 0xffffffffffffffffffffffffffffffffffffffff
0x8e3: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x8e4: V598 = 0xffffffffffffffffffffffffffffffffffffffff
0x8f9: V599 = AND 0xffffffffffffffffffffffffffffffffffffffff V597
0x8fb: M[0x0] = V599
0x8fc: V600 = 0x20
0x8fe: V601 = ADD 0x20 0x0
0x901: M[0x20] = 0x1
0x902: V602 = 0x20
0x904: V603 = ADD 0x20 0x20
0x905: V604 = 0x0
0x907: V605 = SHA3 0x0 0x40
0x908: V606 = S[V605]
0x90b: V607 = 0x2
0x90d: V608 = 0x0
0x910: V609 = 0xffffffffffffffffffffffffffffffffffffffff
0x925: V610 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x926: V611 = 0xffffffffffffffffffffffffffffffffffffffff
0x93b: V612 = AND 0xffffffffffffffffffffffffffffffffffffffff V610
0x93d: M[0x0] = V612
0x93e: V613 = 0x20
0x940: V614 = ADD 0x20 0x0
0x943: M[0x20] = 0x2
0x944: V615 = 0x20
0x946: V616 = ADD 0x20 0x20
0x947: V617 = 0x0
0x949: V618 = SHA3 0x0 0x40
0x94a: V619 = 0x0
0x94c: V620 = CALLER
0x94d: V621 = 0xffffffffffffffffffffffffffffffffffffffff
0x962: V622 = AND 0xffffffffffffffffffffffffffffffffffffffff V620
0x963: V623 = 0xffffffffffffffffffffffffffffffffffffffff
0x978: V624 = AND 0xffffffffffffffffffffffffffffffffffffffff V622
0x97a: M[0x0] = V624
0x97b: V625 = 0x20
0x97d: V626 = ADD 0x20 0x0
0x980: M[0x20] = V618
0x981: V627 = 0x20
0x983: V628 = ADD 0x20 0x20
0x984: V629 = 0x0
0x986: V630 = SHA3 0x0 0x40
0x987: V631 = S[V630]
0x98c: V632 = GT V606 V267
0x98d: V633 = ISZERO V632
0x992: V634 = GT V631 V267
0x993: V635 = ISZERO V634
0x996: V636 = 0x1
0x998: V637 = 0x0
0x99b: V638 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b0: V639 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x9b1: V640 = 0xffffffffffffffffffffffffffffffffffffffff
0x9c6: V641 = AND 0xffffffffffffffffffffffffffffffffffffffff V639
0x9c8: M[0x0] = V641
0x9c9: V642 = 0x20
0x9cb: V643 = ADD 0x20 0x0
0x9ce: M[0x20] = 0x1
0x9cf: V644 = 0x20
0x9d1: V645 = ADD 0x20 0x20
0x9d2: V646 = 0x0
0x9d4: V647 = SHA3 0x0 0x40
0x9d5: V648 = S[V647]
0x9d7: V649 = 0x1
0x9d9: V650 = 0x0
0x9dc: V651 = 0xffffffffffffffffffffffffffffffffffffffff
0x9f1: V652 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0x9f2: V653 = 0xffffffffffffffffffffffffffffffffffffffff
0xa07: V654 = AND 0xffffffffffffffffffffffffffffffffffffffff V652
0xa09: M[0x0] = V654
0xa0a: V655 = 0x20
0xa0c: V656 = ADD 0x20 0x0
0xa0f: M[0x20] = 0x1
0xa10: V657 = 0x20
0xa12: V658 = ADD 0x20 0x20
0xa13: V659 = 0x0
0xa15: V660 = SHA3 0x0 0x40
0xa16: V661 = S[V660]
0xa17: V662 = ADD V661 V267
0xa18: V663 = GT V662 V648
0xa1d: V664 = ISZERO V633
0xa1e: V665 = 0xa24
0xa21: JUMPI 0xa24 V664
---
Entry stack: [V10, 0x3fa, V259, V264, V267, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V606, V631, V633, V635, V663, V633]
Exit stack: [V10, 0x3fa, V259, V264, V267, 0x0, V606, V631, V633, V635, V663, V633]

================================

Block 0xa22
[0xa22:0xa23]
---
Predecessors: [0x8c8]
Successors: [0xa24]
---
0xa22 POP
0xa23 DUP2
---
0xa22: NOP 
---
Entry stack: [V10, 0x3fa, V259, V264, V267, 0x0, V606, V631, V633, V635, V663, V633]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V10, 0x3fa, V259, V264, V267, 0x0, V606, V631, V633, V635, V663, V635]

================================

Block 0xa24
[0xa24:0xa2a]
---
Predecessors: [0x8c8, 0xa22]
Successors: [0xa2b, 0xa2e]
---
0xa24 JUMPDEST
0xa25 DUP1
0xa26 ISZERO
0xa27 PUSH2 0xa2e
0xa2a JUMPI
---
0xa24: JUMPDEST 
0xa26: V666 = ISZERO S0
0xa27: V667 = 0xa2e
0xa2a: JUMPI 0xa2e V666
---
Entry stack: [V10, 0x3fa, V259, V264, V267, 0x0, V606, V631, V633, V635, V663, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x3fa, V259, V264, V267, 0x0, V606, V631, V633, V635, V663, S0]

================================

Block 0xa2b
[0xa2b:0xa2d]
---
Predecessors: [0xa24]
Successors: [0xa2e]
---
0xa2b POP
0xa2c DUP1
0xa2d ISZERO
---
0xa2d: V668 = ISZERO V663
---
Entry stack: [V10, 0x3fa, V259, V264, V267, 0x0, V606, V631, V633, V635, V663, S0]
Stack pops: 2
Stack additions: [S1, V668]
Exit stack: [V10, 0x3fa, V259, V264, V267, 0x0, V606, V631, V633, V635, V663, V668]

================================

Block 0xa2e
[0xa2e:0xa33]
---
Predecessors: [0xa24, 0xa2b]
Successors: [0xa34, 0xbc5]
---
0xa2e JUMPDEST
0xa2f ISZERO
0xa30 PUSH2 0xbc5
0xa33 JUMPI
---
0xa2e: JUMPDEST 
0xa2f: V669 = ISZERO S0
0xa30: V670 = 0xbc5
0xa33: JUMPI 0xbc5 V669
---
Entry stack: [V10, 0x3fa, V259, V264, V267, 0x0, V606, V631, V633, V635, V663, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x3fa, V259, V264, V267, 0x0, V606, V631, V633, V635, V663]

================================

Block 0xa34
[0xa34:0xbc4]
---
Predecessors: [0xa2e]
Successors: [0xbcf]
---
0xa34 DUP7
0xa35 PUSH1 0x1
0xa37 PUSH1 0x0
0xa39 DUP11
0xa3a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4f AND
0xa50 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa65 AND
0xa66 DUP2
0xa67 MSTORE
0xa68 PUSH1 0x20
0xa6a ADD
0xa6b SWAP1
0xa6c DUP2
0xa6d MSTORE
0xa6e PUSH1 0x20
0xa70 ADD
0xa71 PUSH1 0x0
0xa73 SHA3
0xa74 PUSH1 0x0
0xa76 DUP3
0xa77 DUP3
0xa78 SLOAD
0xa79 ADD
0xa7a SWAP3
0xa7b POP
0xa7c POP
0xa7d DUP2
0xa7e SWAP1
0xa7f SSTORE
0xa80 POP
0xa81 DUP7
0xa82 PUSH1 0x1
0xa84 PUSH1 0x0
0xa86 DUP12
0xa87 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa9c AND
0xa9d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xab2 AND
0xab3 DUP2
0xab4 MSTORE
0xab5 PUSH1 0x20
0xab7 ADD
0xab8 SWAP1
0xab9 DUP2
0xaba MSTORE
0xabb PUSH1 0x20
0xabd ADD
0xabe PUSH1 0x0
0xac0 SHA3
0xac1 PUSH1 0x0
0xac3 DUP3
0xac4 DUP3
0xac5 SLOAD
0xac6 SUB
0xac7 SWAP3
0xac8 POP
0xac9 POP
0xaca DUP2
0xacb SWAP1
0xacc SSTORE
0xacd POP
0xace DUP7
0xacf PUSH1 0x2
0xad1 PUSH1 0x0
0xad3 DUP12
0xad4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xae9 AND
0xaea PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaff AND
0xb00 DUP2
0xb01 MSTORE
0xb02 PUSH1 0x20
0xb04 ADD
0xb05 SWAP1
0xb06 DUP2
0xb07 MSTORE
0xb08 PUSH1 0x20
0xb0a ADD
0xb0b PUSH1 0x0
0xb0d SHA3
0xb0e PUSH1 0x0
0xb10 CALLER
0xb11 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb26 AND
0xb27 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb3c AND
0xb3d DUP2
0xb3e MSTORE
0xb3f PUSH1 0x20
0xb41 ADD
0xb42 SWAP1
0xb43 DUP2
0xb44 MSTORE
0xb45 PUSH1 0x20
0xb47 ADD
0xb48 PUSH1 0x0
0xb4a SHA3
0xb4b PUSH1 0x0
0xb4d DUP3
0xb4e DUP3
0xb4f SLOAD
0xb50 SUB
0xb51 SWAP3
0xb52 POP
0xb53 POP
0xb54 DUP2
0xb55 SWAP1
0xb56 SSTORE
0xb57 POP
0xb58 DUP8
0xb59 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb6e AND
0xb6f DUP10
0xb70 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb85 AND
0xb86 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xba7 DUP10
0xba8 PUSH1 0x40
0xbaa MLOAD
0xbab DUP1
0xbac DUP3
0xbad DUP2
0xbae MSTORE
0xbaf PUSH1 0x20
0xbb1 ADD
0xbb2 SWAP2
0xbb3 POP
0xbb4 POP
0xbb5 PUSH1 0x40
0xbb7 MLOAD
0xbb8 DUP1
0xbb9 SWAP2
0xbba SUB
0xbbb SWAP1
0xbbc LOG3
0xbbd PUSH1 0x1
0xbbf SWAP6
0xbc0 POP
0xbc1 PUSH2 0xbcf
0xbc4 JUMP
---
0xa35: V671 = 0x1
0xa37: V672 = 0x0
0xa3a: V673 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4f: V674 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0xa50: V675 = 0xffffffffffffffffffffffffffffffffffffffff
0xa65: V676 = AND 0xffffffffffffffffffffffffffffffffffffffff V674
0xa67: M[0x0] = V676
0xa68: V677 = 0x20
0xa6a: V678 = ADD 0x20 0x0
0xa6d: M[0x20] = 0x1
0xa6e: V679 = 0x20
0xa70: V680 = ADD 0x20 0x20
0xa71: V681 = 0x0
0xa73: V682 = SHA3 0x0 0x40
0xa74: V683 = 0x0
0xa78: V684 = S[V682]
0xa79: V685 = ADD V684 V267
0xa7f: S[V682] = V685
0xa82: V686 = 0x1
0xa84: V687 = 0x0
0xa87: V688 = 0xffffffffffffffffffffffffffffffffffffffff
0xa9c: V689 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0xa9d: V690 = 0xffffffffffffffffffffffffffffffffffffffff
0xab2: V691 = AND 0xffffffffffffffffffffffffffffffffffffffff V689
0xab4: M[0x0] = V691
0xab5: V692 = 0x20
0xab7: V693 = ADD 0x20 0x0
0xaba: M[0x20] = 0x1
0xabb: V694 = 0x20
0xabd: V695 = ADD 0x20 0x20
0xabe: V696 = 0x0
0xac0: V697 = SHA3 0x0 0x40
0xac1: V698 = 0x0
0xac5: V699 = S[V697]
0xac6: V700 = SUB V699 V267
0xacc: S[V697] = V700
0xacf: V701 = 0x2
0xad1: V702 = 0x0
0xad4: V703 = 0xffffffffffffffffffffffffffffffffffffffff
0xae9: V704 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0xaea: V705 = 0xffffffffffffffffffffffffffffffffffffffff
0xaff: V706 = AND 0xffffffffffffffffffffffffffffffffffffffff V704
0xb01: M[0x0] = V706
0xb02: V707 = 0x20
0xb04: V708 = ADD 0x20 0x0
0xb07: M[0x20] = 0x2
0xb08: V709 = 0x20
0xb0a: V710 = ADD 0x20 0x20
0xb0b: V711 = 0x0
0xb0d: V712 = SHA3 0x0 0x40
0xb0e: V713 = 0x0
0xb10: V714 = CALLER
0xb11: V715 = 0xffffffffffffffffffffffffffffffffffffffff
0xb26: V716 = AND 0xffffffffffffffffffffffffffffffffffffffff V714
0xb27: V717 = 0xffffffffffffffffffffffffffffffffffffffff
0xb3c: V718 = AND 0xffffffffffffffffffffffffffffffffffffffff V716
0xb3e: M[0x0] = V718
0xb3f: V719 = 0x20
0xb41: V720 = ADD 0x20 0x0
0xb44: M[0x20] = V712
0xb45: V721 = 0x20
0xb47: V722 = ADD 0x20 0x20
0xb48: V723 = 0x0
0xb4a: V724 = SHA3 0x0 0x40
0xb4b: V725 = 0x0
0xb4f: V726 = S[V724]
0xb50: V727 = SUB V726 V267
0xb56: S[V724] = V727
0xb59: V728 = 0xffffffffffffffffffffffffffffffffffffffff
0xb6e: V729 = AND 0xffffffffffffffffffffffffffffffffffffffff V264
0xb70: V730 = 0xffffffffffffffffffffffffffffffffffffffff
0xb85: V731 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0xb86: V732 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xba8: V733 = 0x40
0xbaa: V734 = M[0x40]
0xbae: M[V734] = V267
0xbaf: V735 = 0x20
0xbb1: V736 = ADD 0x20 V734
0xbb5: V737 = 0x40
0xbb7: V738 = M[0x40]
0xbba: V739 = SUB V736 V738
0xbbc: LOG V738 V739 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V731 V729
0xbbd: V740 = 0x1
0xbc1: V741 = 0xbcf
0xbc4: JUMP 0xbcf
---
Entry stack: [V10, 0x3fa, V259, V264, V267, 0x0, V606, V631, V633, V635, V663]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x3fa, V259, V264, V267, 0x1, V606, V631, V633, V635, V663]

================================

Block 0xbc5
[0xbc5:0xbcd]
---
Predecessors: [0xa2e]
Successors: [0xbcf]
---
0xbc5 JUMPDEST
0xbc6 PUSH1 0x0
0xbc8 SWAP6
0xbc9 POP
0xbca PUSH2 0xbcf
0xbcd JUMP
---
0xbc5: JUMPDEST 
0xbc6: V742 = 0x0
0xbca: V743 = 0xbcf
0xbcd: JUMP 0xbcf
---
Entry stack: [V10, 0x3fa, V259, V264, V267, 0x0, V606, V631, V633, V635, V663]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x3fa, V259, V264, V267, 0x0, V606, V631, V633, V635, V663]

================================

Block 0xbce
[0xbce:0xbce]
---
Predecessors: []
Successors: [0xbcf]
---
0xbce JUMPDEST
---
0xbce: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xbcf
[0xbcf:0xbda]
---
Predecessors: [0x8c0, 0xa34, 0xbc5, 0xbce]
Successors: [0x3fa]
---
0xbcf JUMPDEST
0xbd0 POP
0xbd1 POP
0xbd2 POP
0xbd3 POP
0xbd4 POP
0xbd5 SWAP4
0xbd6 SWAP3
0xbd7 POP
0xbd8 POP
0xbd9 POP
0xbda JUMP
---
0xbcf: JUMPDEST 
0xbda: JUMP 0x3fa
---
Entry stack: [V10, 0x3fa, V259, V264, V267, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S5]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0xbdb
[0xbdb:0xbe1]
---
Predecessors: [0x41c]
Successors: [0xbe2]
---
0xbdb JUMPDEST
0xbdc PUSH1 0x0
0xbde PUSH1 0x12
0xbe0 SWAP1
0xbe1 POP
---
0xbdb: JUMPDEST 
0xbdc: V744 = 0x0
0xbde: V745 = 0x12
---
Entry stack: [V10, 0x424]
Stack pops: 0
Stack additions: [0x12]
Exit stack: [V10, 0x424, 0x12]

================================

Block 0xbe2
[0xbe2:0xbe4]
---
Predecessors: [0xbdb]
Successors: [0x424]
---
0xbe2 JUMPDEST
0xbe3 SWAP1
0xbe4 JUMP
---
0xbe2: JUMPDEST 
0xbe4: JUMP 0x424
---
Entry stack: [V10, 0x424, 0x12]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x12]

================================

Block 0xbe5
[0xbe5:0xc3c]
---
Predecessors: [0x448]
Successors: [0xc3d, 0xc42]
---
0xbe5 JUMPDEST
0xbe6 PUSH1 0x0
0xbe8 PUSH1 0x0
0xbea SWAP1
0xbeb SLOAD
0xbec SWAP1
0xbed PUSH2 0x100
0xbf0 EXP
0xbf1 SWAP1
0xbf2 DIV
0xbf3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc08 AND
0xc09 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc1e AND
0xc1f CALLER
0xc20 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc35 AND
0xc36 EQ
0xc37 ISZERO
0xc38 ISZERO
0xc39 PUSH2 0xc42
0xc3c JUMPI
---
0xbe5: JUMPDEST 
0xbe6: V746 = 0x0
0xbe8: V747 = 0x0
0xbeb: V748 = S[0x0]
0xbed: V749 = 0x100
0xbf0: V750 = EXP 0x100 0x0
0xbf2: V751 = DIV V748 0x1
0xbf3: V752 = 0xffffffffffffffffffffffffffffffffffffffff
0xc08: V753 = AND 0xffffffffffffffffffffffffffffffffffffffff V751
0xc09: V754 = 0xffffffffffffffffffffffffffffffffffffffff
0xc1e: V755 = AND 0xffffffffffffffffffffffffffffffffffffffff V753
0xc1f: V756 = CALLER
0xc20: V757 = 0xffffffffffffffffffffffffffffffffffffffff
0xc35: V758 = AND 0xffffffffffffffffffffffffffffffffffffffff V756
0xc36: V759 = EQ V758 V755
0xc37: V760 = ISZERO V759
0xc38: V761 = ISZERO V760
0xc39: V762 = 0xc42
0xc3c: JUMPI 0xc42 V761
---
Entry stack: [V10, 0x450]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x450]

================================

Block 0xc3d
[0xc3d:0xc41]
---
Predecessors: [0xbe5]
Successors: []
---
0xc3d PUSH1 0x0
0xc3f PUSH1 0x0
0xc41 REVERT
---
0xc3d: V763 = 0x0
0xc3f: V764 = 0x0
0xc41: REVERT 0x0 0x0
---
Entry stack: [V10, 0x450]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x450]

================================

Block 0xc42
[0xc42:0xc5d]
---
Predecessors: [0xbe5]
Successors: [0xc5e]
---
0xc42 JUMPDEST
0xc43 PUSH1 0x0
0xc45 PUSH1 0x0
0xc47 PUSH1 0x14
0xc49 PUSH2 0x100
0xc4c EXP
0xc4d DUP2
0xc4e SLOAD
0xc4f DUP2
0xc50 PUSH1 0xff
0xc52 MUL
0xc53 NOT
0xc54 AND
0xc55 SWAP1
0xc56 DUP4
0xc57 ISZERO
0xc58 ISZERO
0xc59 MUL
0xc5a OR
0xc5b SWAP1
0xc5c SSTORE
0xc5d POP
---
0xc42: JUMPDEST 
0xc43: V765 = 0x0
0xc45: V766 = 0x0
0xc47: V767 = 0x14
0xc49: V768 = 0x100
0xc4c: V769 = EXP 0x100 0x14
0xc4e: V770 = S[0x0]
0xc50: V771 = 0xff
0xc52: V772 = MUL 0xff 0x10000000000000000000000000000000000000000
0xc53: V773 = NOT 0xff0000000000000000000000000000000000000000
0xc54: V774 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V770
0xc57: V775 = ISZERO 0x0
0xc58: V776 = ISZERO 0x1
0xc59: V777 = MUL 0x0 0x10000000000000000000000000000000000000000
0xc5a: V778 = OR 0x0 V774
0xc5c: S[0x0] = V778
---
Entry stack: [V10, 0x450]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x450]

================================

Block 0xc5e
[0xc5e:0xc5f]
---
Predecessors: [0xc42]
Successors: [0x450]
---
0xc5e JUMPDEST
0xc5f JUMP
---
0xc5e: JUMPDEST 
0xc5f: JUMP 0x450
---
Entry stack: [V10, 0x450]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xc60
[0xc60:0xca4]
---
Predecessors: [0x45a]
Successors: [0xca5]
---
0xc60 JUMPDEST
0xc61 PUSH1 0x0
0xc63 PUSH1 0x1
0xc65 PUSH1 0x0
0xc67 DUP4
0xc68 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc7d AND
0xc7e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc93 AND
0xc94 DUP2
0xc95 MSTORE
0xc96 PUSH1 0x20
0xc98 ADD
0xc99 SWAP1
0xc9a DUP2
0xc9b MSTORE
0xc9c PUSH1 0x20
0xc9e ADD
0xc9f PUSH1 0x0
0xca1 SHA3
0xca2 SLOAD
0xca3 SWAP1
0xca4 POP
---
0xc60: JUMPDEST 
0xc61: V779 = 0x0
0xc63: V780 = 0x1
0xc65: V781 = 0x0
0xc68: V782 = 0xffffffffffffffffffffffffffffffffffffffff
0xc7d: V783 = AND 0xffffffffffffffffffffffffffffffffffffffff V310
0xc7e: V784 = 0xffffffffffffffffffffffffffffffffffffffff
0xc93: V785 = AND 0xffffffffffffffffffffffffffffffffffffffff V783
0xc95: M[0x0] = V785
0xc96: V786 = 0x20
0xc98: V787 = ADD 0x20 0x0
0xc9b: M[0x20] = 0x1
0xc9c: V788 = 0x20
0xc9e: V789 = ADD 0x20 0x20
0xc9f: V790 = 0x0
0xca1: V791 = SHA3 0x0 0x40
0xca2: V792 = S[V791]
---
Entry stack: [V10, 0x486, V310]
Stack pops: 1
Stack additions: [S0, V792]
Exit stack: [V10, 0x486, V310, V792]

================================

Block 0xca5
[0xca5:0xca9]
---
Predecessors: [0xc60]
Successors: [0x486]
---
0xca5 JUMPDEST
0xca6 SWAP2
0xca7 SWAP1
0xca8 POP
0xca9 JUMP
---
0xca5: JUMPDEST 
0xca9: JUMP 0x486
---
Entry stack: [V10, 0x486, V310, V792]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V792]

================================

Block 0xcaa
[0xcaa:0xd01]
---
Predecessors: [0x4a4]
Successors: [0xd02, 0xd07]
---
0xcaa JUMPDEST
0xcab PUSH1 0x0
0xcad PUSH1 0x0
0xcaf SWAP1
0xcb0 SLOAD
0xcb1 SWAP1
0xcb2 PUSH2 0x100
0xcb5 EXP
0xcb6 SWAP1
0xcb7 DIV
0xcb8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xccd AND
0xcce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xce3 AND
0xce4 CALLER
0xce5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcfa AND
0xcfb EQ
0xcfc ISZERO
0xcfd ISZERO
0xcfe PUSH2 0xd07
0xd01 JUMPI
---
0xcaa: JUMPDEST 
0xcab: V793 = 0x0
0xcad: V794 = 0x0
0xcb0: V795 = S[0x0]
0xcb2: V796 = 0x100
0xcb5: V797 = EXP 0x100 0x0
0xcb7: V798 = DIV V795 0x1
0xcb8: V799 = 0xffffffffffffffffffffffffffffffffffffffff
0xccd: V800 = AND 0xffffffffffffffffffffffffffffffffffffffff V798
0xcce: V801 = 0xffffffffffffffffffffffffffffffffffffffff
0xce3: V802 = AND 0xffffffffffffffffffffffffffffffffffffffff V800
0xce4: V803 = CALLER
0xce5: V804 = 0xffffffffffffffffffffffffffffffffffffffff
0xcfa: V805 = AND 0xffffffffffffffffffffffffffffffffffffffff V803
0xcfb: V806 = EQ V805 V802
0xcfc: V807 = ISZERO V806
0xcfd: V808 = ISZERO V807
0xcfe: V809 = 0xd07
0xd01: JUMPI 0xd07 V808
---
Entry stack: [V10, 0x4ac]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4ac]

================================

Block 0xd02
[0xd02:0xd06]
---
Predecessors: [0xcaa]
Successors: []
---
0xd02 PUSH1 0x0
0xd04 PUSH1 0x0
0xd06 REVERT
---
0xd02: V810 = 0x0
0xd04: V811 = 0x0
0xd06: REVERT 0x0 0x0
---
Entry stack: [V10, 0x4ac]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4ac]

================================

Block 0xd07
[0xd07:0xd22]
---
Predecessors: [0xcaa]
Successors: [0xd23]
---
0xd07 JUMPDEST
0xd08 PUSH1 0x1
0xd0a PUSH1 0x0
0xd0c PUSH1 0x14
0xd0e PUSH2 0x100
0xd11 EXP
0xd12 DUP2
0xd13 SLOAD
0xd14 DUP2
0xd15 PUSH1 0xff
0xd17 MUL
0xd18 NOT
0xd19 AND
0xd1a SWAP1
0xd1b DUP4
0xd1c ISZERO
0xd1d ISZERO
0xd1e MUL
0xd1f OR
0xd20 SWAP1
0xd21 SSTORE
0xd22 POP
---
0xd07: JUMPDEST 
0xd08: V812 = 0x1
0xd0a: V813 = 0x0
0xd0c: V814 = 0x14
0xd0e: V815 = 0x100
0xd11: V816 = EXP 0x100 0x14
0xd13: V817 = S[0x0]
0xd15: V818 = 0xff
0xd17: V819 = MUL 0xff 0x10000000000000000000000000000000000000000
0xd18: V820 = NOT 0xff0000000000000000000000000000000000000000
0xd19: V821 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V817
0xd1c: V822 = ISZERO 0x1
0xd1d: V823 = ISZERO 0x0
0xd1e: V824 = MUL 0x1 0x10000000000000000000000000000000000000000
0xd1f: V825 = OR 0x10000000000000000000000000000000000000000 V821
0xd21: S[0x0] = V825
---
Entry stack: [V10, 0x4ac]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x4ac]

================================

Block 0xd23
[0xd23:0xd24]
---
Predecessors: [0xd07]
Successors: [0x4ac]
---
0xd23 JUMPDEST
0xd24 JUMP
---
0xd23: JUMPDEST 
0xd24: JUMP 0x4ac
---
Entry stack: [V10, 0x4ac]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0xd25
[0xd25:0xd2c]
---
Predecessors: [0x4b6]
Successors: [0x125e]
---
0xd25 JUMPDEST
0xd26 PUSH2 0xd2d
0xd29 PUSH2 0x125e
0xd2c JUMP
---
0xd25: JUMPDEST 
0xd26: V826 = 0xd2d
0xd29: V827 = 0x125e
0xd2c: JUMP 0x125e
---
Entry stack: [V10, 0x4be]
Stack pops: 0
Stack additions: [0xd2d]
Exit stack: [V10, 0x4be, 0xd2d]

================================

Block 0xd2d
[0xd2d:0xd66]
---
Predecessors: [0x125e]
Successors: [0xd67]
---
0xd2d JUMPDEST
0xd2e PUSH1 0x40
0xd30 PUSH1 0x40
0xd32 MLOAD
0xd33 SWAP1
0xd34 DUP2
0xd35 ADD
0xd36 PUSH1 0x40
0xd38 MSTORE
0xd39 DUP1
0xd3a PUSH1 0x3
0xd3c DUP2
0xd3d MSTORE
0xd3e PUSH1 0x20
0xd40 ADD
0xd41 PUSH32 0x4353540000000000000000000000000000000000000000000000000000000000
0xd62 DUP2
0xd63 MSTORE
0xd64 POP
0xd65 SWAP1
0xd66 POP
---
0xd2d: JUMPDEST 
0xd2e: V828 = 0x40
0xd30: V829 = 0x40
0xd32: V830 = M[0x40]
0xd35: V831 = ADD V830 0x40
0xd36: V832 = 0x40
0xd38: M[0x40] = V831
0xd3a: V833 = 0x3
0xd3d: M[V830] = 0x3
0xd3e: V834 = 0x20
0xd40: V835 = ADD 0x20 V830
0xd41: V836 = 0x4353540000000000000000000000000000000000000000000000000000000000
0xd63: M[V835] = 0x4353540000000000000000000000000000000000000000000000000000000000
---
Entry stack: [V10, {0x272, 0x4be}, V1117]
Stack pops: 1
Stack additions: [V830]
Exit stack: [V10, {0x272, 0x4be}, V830]

================================

Block 0xd67
[0xd67:0xd69]
---
Predecessors: [0xd2d]
Successors: [0x272, 0x4be]
---
0xd67 JUMPDEST
0xd68 SWAP1
0xd69 JUMP
---
0xd67: JUMPDEST 
0xd69: JUMP {0x272, 0x4be}
---
Entry stack: [V10, {0x272, 0x4be}, V830]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V830]

================================

Block 0xd6a
[0xd6a:0xd7f]
---
Predecessors: [0x54f]
Successors: [0xd80, 0xd85]
---
0xd6a JUMPDEST
0xd6b PUSH1 0x0
0xd6d PUSH1 0x0
0xd6f PUSH1 0x0
0xd71 PUSH1 0x0
0xd73 PUSH1 0x44
0xd75 PUSH1 0x0
0xd77 CALLDATASIZE
0xd78 SWAP1
0xd79 POP
0xd7a LT
0xd7b ISZERO
0xd7c PUSH2 0xd85
0xd7f JUMPI
---
0xd6a: JUMPDEST 
0xd6b: V837 = 0x0
0xd6d: V838 = 0x0
0xd6f: V839 = 0x0
0xd71: V840 = 0x0
0xd73: V841 = 0x44
0xd75: V842 = 0x0
0xd77: V843 = CALLDATASIZE
0xd7a: V844 = LT V843 0x44
0xd7b: V845 = ISZERO V844
0xd7c: V846 = 0xd85
0xd7f: JUMPI 0xd85 V845
---
Entry stack: [V10, 0x584, V384, V387]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x584, V384, V387, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xd80
[0xd80:0xd84]
---
Predecessors: [0xd6a]
Successors: []
---
0xd80 PUSH1 0x0
0xd82 PUSH1 0x0
0xd84 REVERT
---
0xd80: V847 = 0x0
0xd82: V848 = 0x0
0xd84: REVERT 0x0 0x0
---
Entry stack: [V10, 0x584, V384, V387, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x584, V384, V387, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xd85
[0xd85:0xd8e]
---
Predecessors: [0xd6a]
Successors: [0xd8f, 0xd97]
---
0xd85 JUMPDEST
0xd86 PUSH1 0x0
0xd88 DUP6
0xd89 EQ
0xd8a ISZERO
0xd8b PUSH2 0xd97
0xd8e JUMPI
---
0xd85: JUMPDEST 
0xd86: V849 = 0x0
0xd89: V850 = EQ V387 0x0
0xd8a: V851 = ISZERO V850
0xd8b: V852 = 0xd97
0xd8e: JUMPI 0xd97 V851
---
Entry stack: [V10, 0x584, V384, V387, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x584, V384, V387, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xd8f
[0xd8f:0xd96]
---
Predecessors: [0xd85]
Successors: [0xf86]
---
0xd8f PUSH1 0x0
0xd91 SWAP4
0xd92 POP
0xd93 PUSH2 0xf86
0xd96 JUMP
---
0xd8f: V853 = 0x0
0xd93: V854 = 0xf86
0xd96: JUMP 0xf86
---
Entry stack: [V10, 0x584, V384, V387, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V10, 0x584, V384, V387, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xd97
[0xd97:0xe6b]
---
Predecessors: [0xd85]
Successors: [0xe6c, 0xe6f]
---
0xd97 JUMPDEST
0xd98 PUSH1 0x1
0xd9a PUSH1 0x0
0xd9c CALLER
0xd9d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdb2 AND
0xdb3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdc8 AND
0xdc9 DUP2
0xdca MSTORE
0xdcb PUSH1 0x20
0xdcd ADD
0xdce SWAP1
0xdcf DUP2
0xdd0 MSTORE
0xdd1 PUSH1 0x20
0xdd3 ADD
0xdd4 PUSH1 0x0
0xdd6 SHA3
0xdd7 SLOAD
0xdd8 SWAP3
0xdd9 POP
0xdda DUP5
0xddb DUP4
0xddc LT
0xddd ISZERO
0xdde SWAP2
0xddf POP
0xde0 PUSH1 0x1
0xde2 PUSH1 0x0
0xde4 DUP8
0xde5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xdfa AND
0xdfb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe10 AND
0xe11 DUP2
0xe12 MSTORE
0xe13 PUSH1 0x20
0xe15 ADD
0xe16 SWAP1
0xe17 DUP2
0xe18 MSTORE
0xe19 PUSH1 0x20
0xe1b ADD
0xe1c PUSH1 0x0
0xe1e SHA3
0xe1f SLOAD
0xe20 DUP6
0xe21 PUSH1 0x1
0xe23 PUSH1 0x0
0xe25 DUP10
0xe26 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe3b AND
0xe3c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe51 AND
0xe52 DUP2
0xe53 MSTORE
0xe54 PUSH1 0x20
0xe56 ADD
0xe57 SWAP1
0xe58 DUP2
0xe59 MSTORE
0xe5a PUSH1 0x20
0xe5c ADD
0xe5d PUSH1 0x0
0xe5f SHA3
0xe60 SLOAD
0xe61 ADD
0xe62 LT
0xe63 SWAP1
0xe64 POP
0xe65 DUP2
0xe66 DUP1
0xe67 ISZERO
0xe68 PUSH2 0xe6f
0xe6b JUMPI
---
0xd97: JUMPDEST 
0xd98: V855 = 0x1
0xd9a: V856 = 0x0
0xd9c: V857 = CALLER
0xd9d: V858 = 0xffffffffffffffffffffffffffffffffffffffff
0xdb2: V859 = AND 0xffffffffffffffffffffffffffffffffffffffff V857
0xdb3: V860 = 0xffffffffffffffffffffffffffffffffffffffff
0xdc8: V861 = AND 0xffffffffffffffffffffffffffffffffffffffff V859
0xdca: M[0x0] = V861
0xdcb: V862 = 0x20
0xdcd: V863 = ADD 0x20 0x0
0xdd0: M[0x20] = 0x1
0xdd1: V864 = 0x20
0xdd3: V865 = ADD 0x20 0x20
0xdd4: V866 = 0x0
0xdd6: V867 = SHA3 0x0 0x40
0xdd7: V868 = S[V867]
0xddc: V869 = LT V868 V387
0xddd: V870 = ISZERO V869
0xde0: V871 = 0x1
0xde2: V872 = 0x0
0xde5: V873 = 0xffffffffffffffffffffffffffffffffffffffff
0xdfa: V874 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0xdfb: V875 = 0xffffffffffffffffffffffffffffffffffffffff
0xe10: V876 = AND 0xffffffffffffffffffffffffffffffffffffffff V874
0xe12: M[0x0] = V876
0xe13: V877 = 0x20
0xe15: V878 = ADD 0x20 0x0
0xe18: M[0x20] = 0x1
0xe19: V879 = 0x20
0xe1b: V880 = ADD 0x20 0x20
0xe1c: V881 = 0x0
0xe1e: V882 = SHA3 0x0 0x40
0xe1f: V883 = S[V882]
0xe21: V884 = 0x1
0xe23: V885 = 0x0
0xe26: V886 = 0xffffffffffffffffffffffffffffffffffffffff
0xe3b: V887 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0xe3c: V888 = 0xffffffffffffffffffffffffffffffffffffffff
0xe51: V889 = AND 0xffffffffffffffffffffffffffffffffffffffff V887
0xe53: M[0x0] = V889
0xe54: V890 = 0x20
0xe56: V891 = ADD 0x20 0x0
0xe59: M[0x20] = 0x1
0xe5a: V892 = 0x20
0xe5c: V893 = ADD 0x20 0x20
0xe5d: V894 = 0x0
0xe5f: V895 = SHA3 0x0 0x40
0xe60: V896 = S[V895]
0xe61: V897 = ADD V896 V387
0xe62: V898 = LT V897 V883
0xe67: V899 = ISZERO V870
0xe68: V900 = 0xe6f
0xe6b: JUMPI 0xe6f V899
---
Entry stack: [V10, 0x584, V384, V387, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V868, V870, V898, V870]
Exit stack: [V10, 0x584, V384, V387, 0x0, V868, V870, V898, V870]

================================

Block 0xe6c
[0xe6c:0xe6e]
---
Predecessors: [0xd97]
Successors: [0xe6f]
---
0xe6c POP
0xe6d DUP1
0xe6e ISZERO
---
0xe6e: V901 = ISZERO V898
---
Entry stack: [V10, 0x584, V384, V387, 0x0, V868, V870, V898, V870]
Stack pops: 2
Stack additions: [S1, V901]
Exit stack: [V10, 0x584, V384, V387, 0x0, V868, V870, V898, V901]

================================

Block 0xe6f
[0xe6f:0xe74]
---
Predecessors: [0xd97, 0xe6c]
Successors: [0xe75, 0xf7c]
---
0xe6f JUMPDEST
0xe70 ISZERO
0xe71 PUSH2 0xf7c
0xe74 JUMPI
---
0xe6f: JUMPDEST 
0xe70: V902 = ISZERO S0
0xe71: V903 = 0xf7c
0xe74: JUMPI 0xf7c V902
---
Entry stack: [V10, 0x584, V384, V387, 0x0, V868, V870, V898, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x584, V384, V387, 0x0, V868, V870, V898]

================================

Block 0xe75
[0xe75:0xf7b]
---
Predecessors: [0xe6f]
Successors: [0xf86]
---
0xe75 DUP5
0xe76 PUSH1 0x1
0xe78 PUSH1 0x0
0xe7a CALLER
0xe7b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe90 AND
0xe91 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xea6 AND
0xea7 DUP2
0xea8 MSTORE
0xea9 PUSH1 0x20
0xeab ADD
0xeac SWAP1
0xead DUP2
0xeae MSTORE
0xeaf PUSH1 0x20
0xeb1 ADD
0xeb2 PUSH1 0x0
0xeb4 SHA3
0xeb5 PUSH1 0x0
0xeb7 DUP3
0xeb8 DUP3
0xeb9 SLOAD
0xeba SUB
0xebb SWAP3
0xebc POP
0xebd POP
0xebe DUP2
0xebf SWAP1
0xec0 SSTORE
0xec1 POP
0xec2 DUP5
0xec3 PUSH1 0x1
0xec5 PUSH1 0x0
0xec7 DUP9
0xec8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xedd AND
0xede PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xef3 AND
0xef4 DUP2
0xef5 MSTORE
0xef6 PUSH1 0x20
0xef8 ADD
0xef9 SWAP1
0xefa DUP2
0xefb MSTORE
0xefc PUSH1 0x20
0xefe ADD
0xeff PUSH1 0x0
0xf01 SHA3
0xf02 PUSH1 0x0
0xf04 DUP3
0xf05 DUP3
0xf06 SLOAD
0xf07 ADD
0xf08 SWAP3
0xf09 POP
0xf0a POP
0xf0b DUP2
0xf0c SWAP1
0xf0d SSTORE
0xf0e POP
0xf0f DUP6
0xf10 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf25 AND
0xf26 CALLER
0xf27 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf3c AND
0xf3d PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xf5e DUP8
0xf5f PUSH1 0x40
0xf61 MLOAD
0xf62 DUP1
0xf63 DUP3
0xf64 DUP2
0xf65 MSTORE
0xf66 PUSH1 0x20
0xf68 ADD
0xf69 SWAP2
0xf6a POP
0xf6b POP
0xf6c PUSH1 0x40
0xf6e MLOAD
0xf6f DUP1
0xf70 SWAP2
0xf71 SUB
0xf72 SWAP1
0xf73 LOG3
0xf74 PUSH1 0x1
0xf76 SWAP4
0xf77 POP
0xf78 PUSH2 0xf86
0xf7b JUMP
---
0xe76: V904 = 0x1
0xe78: V905 = 0x0
0xe7a: V906 = CALLER
0xe7b: V907 = 0xffffffffffffffffffffffffffffffffffffffff
0xe90: V908 = AND 0xffffffffffffffffffffffffffffffffffffffff V906
0xe91: V909 = 0xffffffffffffffffffffffffffffffffffffffff
0xea6: V910 = AND 0xffffffffffffffffffffffffffffffffffffffff V908
0xea8: M[0x0] = V910
0xea9: V911 = 0x20
0xeab: V912 = ADD 0x20 0x0
0xeae: M[0x20] = 0x1
0xeaf: V913 = 0x20
0xeb1: V914 = ADD 0x20 0x20
0xeb2: V915 = 0x0
0xeb4: V916 = SHA3 0x0 0x40
0xeb5: V917 = 0x0
0xeb9: V918 = S[V916]
0xeba: V919 = SUB V918 V387
0xec0: S[V916] = V919
0xec3: V920 = 0x1
0xec5: V921 = 0x0
0xec8: V922 = 0xffffffffffffffffffffffffffffffffffffffff
0xedd: V923 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0xede: V924 = 0xffffffffffffffffffffffffffffffffffffffff
0xef3: V925 = AND 0xffffffffffffffffffffffffffffffffffffffff V923
0xef5: M[0x0] = V925
0xef6: V926 = 0x20
0xef8: V927 = ADD 0x20 0x0
0xefb: M[0x20] = 0x1
0xefc: V928 = 0x20
0xefe: V929 = ADD 0x20 0x20
0xeff: V930 = 0x0
0xf01: V931 = SHA3 0x0 0x40
0xf02: V932 = 0x0
0xf06: V933 = S[V931]
0xf07: V934 = ADD V933 V387
0xf0d: S[V931] = V934
0xf10: V935 = 0xffffffffffffffffffffffffffffffffffffffff
0xf25: V936 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0xf26: V937 = CALLER
0xf27: V938 = 0xffffffffffffffffffffffffffffffffffffffff
0xf3c: V939 = AND 0xffffffffffffffffffffffffffffffffffffffff V937
0xf3d: V940 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xf5f: V941 = 0x40
0xf61: V942 = M[0x40]
0xf65: M[V942] = V387
0xf66: V943 = 0x20
0xf68: V944 = ADD 0x20 V942
0xf6c: V945 = 0x40
0xf6e: V946 = M[0x40]
0xf71: V947 = SUB V944 V946
0xf73: LOG V946 V947 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V939 V936
0xf74: V948 = 0x1
0xf78: V949 = 0xf86
0xf7b: JUMP 0xf86
---
Entry stack: [V10, 0x584, V384, V387, 0x0, V868, V870, V898]
Stack pops: 6
Stack additions: [S5, S4, 0x1, S2, S1, S0]
Exit stack: [V10, 0x584, V384, V387, 0x1, V868, V870, V898]

================================

Block 0xf7c
[0xf7c:0xf84]
---
Predecessors: [0xe6f]
Successors: [0xf86]
---
0xf7c JUMPDEST
0xf7d PUSH1 0x0
0xf7f SWAP4
0xf80 POP
0xf81 PUSH2 0xf86
0xf84 JUMP
---
0xf7c: JUMPDEST 
0xf7d: V950 = 0x0
0xf81: V951 = 0xf86
0xf84: JUMP 0xf86
---
Entry stack: [V10, 0x584, V384, V387, 0x0, V868, V870, V898]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V10, 0x584, V384, V387, 0x0, V868, V870, V898]

================================

Block 0xf85
[0xf85:0xf85]
---
Predecessors: []
Successors: [0xf86]
---
0xf85 JUMPDEST
---
0xf85: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xf86
[0xf86:0xf8e]
---
Predecessors: [0xd8f, 0xe75, 0xf7c, 0xf85]
Successors: [0x584]
---
0xf86 JUMPDEST
0xf87 POP
0xf88 POP
0xf89 POP
0xf8a SWAP3
0xf8b SWAP2
0xf8c POP
0xf8d POP
0xf8e JUMP
---
0xf86: JUMPDEST 
0xf8e: JUMP 0x584
---
Entry stack: [V10, 0x584, V384, V387, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0xf8f
[0xf8f:0xfb1]
---
Predecessors: [0x5a6]
Successors: [0xfb2]
---
0xf8f JUMPDEST
0xf90 PUSH1 0x0
0xf92 PUSH1 0x0
0xf94 PUSH1 0x0
0xf96 PUSH1 0x3
0xf98 SLOAD
0xf99 PUSH1 0x4
0xf9b SLOAD
0xf9c PUSH1 0x0
0xf9e PUSH1 0x14
0xfa0 SWAP1
0xfa1 SLOAD
0xfa2 SWAP1
0xfa3 PUSH2 0x100
0xfa6 EXP
0xfa7 SWAP1
0xfa8 DIV
0xfa9 PUSH1 0xff
0xfab AND
0xfac SWAP3
0xfad POP
0xfae SWAP3
0xfaf POP
0xfb0 SWAP3
0xfb1 POP
---
0xf8f: JUMPDEST 
0xf90: V952 = 0x0
0xf92: V953 = 0x0
0xf94: V954 = 0x0
0xf96: V955 = 0x3
0xf98: V956 = S[0x3]
0xf99: V957 = 0x4
0xf9b: V958 = S[0x4]
0xf9c: V959 = 0x0
0xf9e: V960 = 0x14
0xfa1: V961 = S[0x0]
0xfa3: V962 = 0x100
0xfa6: V963 = EXP 0x100 0x14
0xfa8: V964 = DIV V961 0x10000000000000000000000000000000000000000
0xfa9: V965 = 0xff
0xfab: V966 = AND 0xff V964
---
Entry stack: [V10, 0x5ae]
Stack pops: 0
Stack additions: [V956, V958, V966]
Exit stack: [V10, 0x5ae, V956, V958, V966]

================================

Block 0xfb2
[0xfb2:0xfb6]
---
Predecessors: [0xf8f]
Successors: [0x5ae]
---
0xfb2 JUMPDEST
0xfb3 SWAP1
0xfb4 SWAP2
0xfb5 SWAP3
0xfb6 JUMP
---
0xfb2: JUMPDEST 
0xfb6: JUMP 0x5ae
---
Entry stack: [V10, 0x5ae, V956, V958, V966]
Stack pops: 4
Stack additions: [S2, S1, S0]
Exit stack: [V10, V956, V958, V966]

================================

Block 0xfb7
[0xfb7:0xfc9]
---
Predecessors: [0x5de]
Successors: [0x5e6]
---
0xfb7 JUMPDEST
0xfb8 PUSH1 0x0
0xfba PUSH1 0x14
0xfbc SWAP1
0xfbd SLOAD
0xfbe SWAP1
0xfbf PUSH2 0x100
0xfc2 EXP
0xfc3 SWAP1
0xfc4 DIV
0xfc5 PUSH1 0xff
0xfc7 AND
0xfc8 DUP2
0xfc9 JUMP
---
0xfb7: JUMPDEST 
0xfb8: V967 = 0x0
0xfba: V968 = 0x14
0xfbd: V969 = S[0x0]
0xfbf: V970 = 0x100
0xfc2: V971 = EXP 0x100 0x14
0xfc4: V972 = DIV V969 0x10000000000000000000000000000000000000000
0xfc5: V973 = 0xff
0xfc7: V974 = AND 0xff V972
0xfc9: JUMP 0x5e6
---
Entry stack: [V10, 0x5e6]
Stack pops: 1
Stack additions: [S0, V974]
Exit stack: [V10, 0x5e6, V974]

================================

Block 0xfca
[0xfca:0x104b]
---
Predecessors: [0x608]
Successors: [0x104c]
---
0xfca JUMPDEST
0xfcb PUSH1 0x0
0xfcd PUSH1 0x2
0xfcf PUSH1 0x0
0xfd1 DUP5
0xfd2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfe7 AND
0xfe8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xffd AND
0xffe DUP2
0xfff MSTORE
0x1000 PUSH1 0x20
0x1002 ADD
0x1003 SWAP1
0x1004 DUP2
0x1005 MSTORE
0x1006 PUSH1 0x20
0x1008 ADD
0x1009 PUSH1 0x0
0x100b SHA3
0x100c PUSH1 0x0
0x100e DUP4
0x100f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1024 AND
0x1025 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x103a AND
0x103b DUP2
0x103c MSTORE
0x103d PUSH1 0x20
0x103f ADD
0x1040 SWAP1
0x1041 DUP2
0x1042 MSTORE
0x1043 PUSH1 0x20
0x1045 ADD
0x1046 PUSH1 0x0
0x1048 SHA3
0x1049 SLOAD
0x104a SWAP1
0x104b POP
---
0xfca: JUMPDEST 
0xfcb: V975 = 0x0
0xfcd: V976 = 0x2
0xfcf: V977 = 0x0
0xfd2: V978 = 0xffffffffffffffffffffffffffffffffffffffff
0xfe7: V979 = AND 0xffffffffffffffffffffffffffffffffffffffff V445
0xfe8: V980 = 0xffffffffffffffffffffffffffffffffffffffff
0xffd: V981 = AND 0xffffffffffffffffffffffffffffffffffffffff V979
0xfff: M[0x0] = V981
0x1000: V982 = 0x20
0x1002: V983 = ADD 0x20 0x0
0x1005: M[0x20] = 0x2
0x1006: V984 = 0x20
0x1008: V985 = ADD 0x20 0x20
0x1009: V986 = 0x0
0x100b: V987 = SHA3 0x0 0x40
0x100c: V988 = 0x0
0x100f: V989 = 0xffffffffffffffffffffffffffffffffffffffff
0x1024: V990 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x1025: V991 = 0xffffffffffffffffffffffffffffffffffffffff
0x103a: V992 = AND 0xffffffffffffffffffffffffffffffffffffffff V990
0x103c: M[0x0] = V992
0x103d: V993 = 0x20
0x103f: V994 = ADD 0x20 0x0
0x1042: M[0x20] = V987
0x1043: V995 = 0x20
0x1045: V996 = ADD 0x20 0x20
0x1046: V997 = 0x0
0x1048: V998 = SHA3 0x0 0x40
0x1049: V999 = S[V998]
---
Entry stack: [V10, 0x653, V445, V450]
Stack pops: 2
Stack additions: [S1, S0, V999]
Exit stack: [V10, 0x653, V445, V450, V999]

================================

Block 0x104c
[0x104c:0x1051]
---
Predecessors: [0xfca]
Successors: [0x653]
---
0x104c JUMPDEST
0x104d SWAP3
0x104e SWAP2
0x104f POP
0x1050 POP
0x1051 JUMP
---
0x104c: JUMPDEST 
0x1051: JUMP 0x653
---
Entry stack: [V10, 0x653, V445, V450, V999]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V999]

================================

Block 0x1052
[0x1052:0x10af]
---
Predecessors: [0x671]
Successors: [0x10b0, 0x10b5]
---
0x1052 JUMPDEST
0x1053 PUSH1 0x0
0x1055 PUSH1 0x0
0x1057 PUSH1 0x0
0x1059 PUSH1 0x0
0x105b PUSH1 0x0
0x105d SWAP1
0x105e SLOAD
0x105f SWAP1
0x1060 PUSH2 0x100
0x1063 EXP
0x1064 SWAP1
0x1065 DIV
0x1066 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x107b AND
0x107c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1091 AND
0x1092 CALLER
0x1093 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10a8 AND
0x10a9 EQ
0x10aa ISZERO
0x10ab ISZERO
0x10ac PUSH2 0x10b5
0x10af JUMPI
---
0x1052: JUMPDEST 
0x1053: V1000 = 0x0
0x1055: V1001 = 0x0
0x1057: V1002 = 0x0
0x1059: V1003 = 0x0
0x105b: V1004 = 0x0
0x105e: V1005 = S[0x0]
0x1060: V1006 = 0x100
0x1063: V1007 = EXP 0x100 0x0
0x1065: V1008 = DIV V1005 0x1
0x1066: V1009 = 0xffffffffffffffffffffffffffffffffffffffff
0x107b: V1010 = AND 0xffffffffffffffffffffffffffffffffffffffff V1008
0x107c: V1011 = 0xffffffffffffffffffffffffffffffffffffffff
0x1091: V1012 = AND 0xffffffffffffffffffffffffffffffffffffffff V1010
0x1092: V1013 = CALLER
0x1093: V1014 = 0xffffffffffffffffffffffffffffffffffffffff
0x10a8: V1015 = AND 0xffffffffffffffffffffffffffffffffffffffff V1013
0x10a9: V1016 = EQ V1015 V1012
0x10aa: V1017 = ISZERO V1016
0x10ab: V1018 = ISZERO V1017
0x10ac: V1019 = 0x10b5
0x10af: JUMPI 0x10b5 V1018
---
Entry stack: [V10, 0x69d, V468]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, 0x69d, V468, 0x0, 0x0, 0x0]

================================

Block 0x10b0
[0x10b0:0x10b4]
---
Predecessors: [0x1052]
Successors: []
---
0x10b0 PUSH1 0x0
0x10b2 PUSH1 0x0
0x10b4 REVERT
---
0x10b0: V1020 = 0x0
0x10b2: V1021 = 0x0
0x10b4: REVERT 0x0 0x0
---
Entry stack: [V10, 0x69d, V468, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x69d, V468, 0x0, 0x0, 0x0]

================================

Block 0x10b5
[0x10b5:0x1156]
---
Predecessors: [0x1052]
Successors: [0x1157, 0x1158]
---
0x10b5 JUMPDEST
0x10b6 DUP4
0x10b7 SWAP2
0x10b8 POP
0x10b9 DUP2
0x10ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x10cf AND
0x10d0 PUSH4 0x70a08231
0x10d5 ADDRESS
0x10d6 PUSH1 0x0
0x10d8 PUSH1 0x40
0x10da MLOAD
0x10db PUSH1 0x20
0x10dd ADD
0x10de MSTORE
0x10df PUSH1 0x40
0x10e1 MLOAD
0x10e2 DUP3
0x10e3 PUSH4 0xffffffff
0x10e8 AND
0x10e9 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1107 MUL
0x1108 DUP2
0x1109 MSTORE
0x110a PUSH1 0x4
0x110c ADD
0x110d DUP1
0x110e DUP3
0x110f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1124 AND
0x1125 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x113a AND
0x113b DUP2
0x113c MSTORE
0x113d PUSH1 0x20
0x113f ADD
0x1140 SWAP2
0x1141 POP
0x1142 POP
0x1143 PUSH1 0x20
0x1145 PUSH1 0x40
0x1147 MLOAD
0x1148 DUP1
0x1149 DUP4
0x114a SUB
0x114b DUP2
0x114c PUSH1 0x0
0x114e DUP8
0x114f DUP1
0x1150 EXTCODESIZE
0x1151 ISZERO
0x1152 ISZERO
0x1153 PUSH2 0x1158
0x1156 JUMPI
---
0x10b5: JUMPDEST 
0x10ba: V1022 = 0xffffffffffffffffffffffffffffffffffffffff
0x10cf: V1023 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x10d0: V1024 = 0x70a08231
0x10d5: V1025 = ADDRESS
0x10d6: V1026 = 0x0
0x10d8: V1027 = 0x40
0x10da: V1028 = M[0x40]
0x10db: V1029 = 0x20
0x10dd: V1030 = ADD 0x20 V1028
0x10de: M[V1030] = 0x0
0x10df: V1031 = 0x40
0x10e1: V1032 = M[0x40]
0x10e3: V1033 = 0xffffffff
0x10e8: V1034 = AND 0xffffffff 0x70a08231
0x10e9: V1035 = 0x100000000000000000000000000000000000000000000000000000000
0x1107: V1036 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x1109: M[V1032] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x110a: V1037 = 0x4
0x110c: V1038 = ADD 0x4 V1032
0x110f: V1039 = 0xffffffffffffffffffffffffffffffffffffffff
0x1124: V1040 = AND 0xffffffffffffffffffffffffffffffffffffffff V1025
0x1125: V1041 = 0xffffffffffffffffffffffffffffffffffffffff
0x113a: V1042 = AND 0xffffffffffffffffffffffffffffffffffffffff V1040
0x113c: M[V1038] = V1042
0x113d: V1043 = 0x20
0x113f: V1044 = ADD 0x20 V1038
0x1143: V1045 = 0x20
0x1145: V1046 = 0x40
0x1147: V1047 = M[0x40]
0x114a: V1048 = SUB V1044 V1047
0x114c: V1049 = 0x0
0x1150: V1050 = EXTCODESIZE V1023
0x1151: V1051 = ISZERO V1050
0x1152: V1052 = ISZERO V1051
0x1153: V1053 = 0x1158
0x1156: JUMPI 0x1158 V1052
---
Entry stack: [V10, 0x69d, V468, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V1023, 0x70a08231, V1044, 0x20, V1047, V1048, V1047, 0x0, V1023]
Exit stack: [V10, 0x69d, V468, 0x0, V468, 0x0, V1023, 0x70a08231, V1044, 0x20, V1047, V1048, V1047, 0x0, V1023]

================================

Block 0x1157
[0x1157:0x1157]
---
Predecessors: [0x10b5]
Successors: []
---
0x1157 INVALID
---
0x1157: INVALID 
---
Entry stack: [V10, 0x69d, V468, 0x0, V468, 0x0, V1023, 0x70a08231, V1044, 0x20, V1047, V1048, V1047, 0x0, V1023]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x69d, V468, 0x0, V468, 0x0, V1023, 0x70a08231, V1044, 0x20, V1047, V1048, V1047, 0x0, V1023]

================================

Block 0x1158
[0x1158:0x1164]
---
Predecessors: [0x10b5]
Successors: [0x1165, 0x1166]
---
0x1158 JUMPDEST
0x1159 PUSH2 0x2c6
0x115c GAS
0x115d SUB
0x115e CALL
0x115f ISZERO
0x1160 ISZERO
0x1161 PUSH2 0x1166
0x1164 JUMPI
---
0x1158: JUMPDEST 
0x1159: V1054 = 0x2c6
0x115c: V1055 = GAS
0x115d: V1056 = SUB V1055 0x2c6
0x115e: V1057 = CALL V1056 V1023 0x0 V1047 V1048 V1047 0x20
0x115f: V1058 = ISZERO V1057
0x1160: V1059 = ISZERO V1058
0x1161: V1060 = 0x1166
0x1164: JUMPI 0x1166 V1059
---
Entry stack: [V10, 0x69d, V468, 0x0, V468, 0x0, V1023, 0x70a08231, V1044, 0x20, V1047, V1048, V1047, 0x0, V1023]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x69d, V468, 0x0, V468, 0x0, V1023, 0x70a08231, V1044]

================================

Block 0x1165
[0x1165:0x1165]
---
Predecessors: [0x1158]
Successors: []
---
0x1165 INVALID
---
0x1165: INVALID 
---
Entry stack: [V10, 0x69d, V468, 0x0, V468, 0x0, V1023, 0x70a08231, V1044]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x69d, V468, 0x0, V468, 0x0, V1023, 0x70a08231, V1044]

================================

Block 0x1166
[0x1166:0x123a]
---
Predecessors: [0x1158]
Successors: [0x123b, 0x123c]
---
0x1166 JUMPDEST
0x1167 POP
0x1168 POP
0x1169 POP
0x116a PUSH1 0x40
0x116c MLOAD
0x116d DUP1
0x116e MLOAD
0x116f SWAP1
0x1170 POP
0x1171 SWAP1
0x1172 POP
0x1173 DUP2
0x1174 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1189 AND
0x118a PUSH4 0xa9059cbb
0x118f PUSH1 0x0
0x1191 PUSH1 0x0
0x1193 SWAP1
0x1194 SLOAD
0x1195 SWAP1
0x1196 PUSH2 0x100
0x1199 EXP
0x119a SWAP1
0x119b DIV
0x119c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x11b1 AND
0x11b2 DUP4
0x11b3 PUSH1 0x0
0x11b5 PUSH1 0x40
0x11b7 MLOAD
0x11b8 PUSH1 0x20
0x11ba ADD
0x11bb MSTORE
0x11bc PUSH1 0x40
0x11be MLOAD
0x11bf DUP4
0x11c0 PUSH4 0xffffffff
0x11c5 AND
0x11c6 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x11e4 MUL
0x11e5 DUP2
0x11e6 MSTORE
0x11e7 PUSH1 0x4
0x11e9 ADD
0x11ea DUP1
0x11eb DUP4
0x11ec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1201 AND
0x1202 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1217 AND
0x1218 DUP2
0x1219 MSTORE
0x121a PUSH1 0x20
0x121c ADD
0x121d DUP3
0x121e DUP2
0x121f MSTORE
0x1220 PUSH1 0x20
0x1222 ADD
0x1223 SWAP3
0x1224 POP
0x1225 POP
0x1226 POP
0x1227 PUSH1 0x20
0x1229 PUSH1 0x40
0x122b MLOAD
0x122c DUP1
0x122d DUP4
0x122e SUB
0x122f DUP2
0x1230 PUSH1 0x0
0x1232 DUP8
0x1233 DUP1
0x1234 EXTCODESIZE
0x1235 ISZERO
0x1236 ISZERO
0x1237 PUSH2 0x123c
0x123a JUMPI
---
0x1166: JUMPDEST 
0x116a: V1061 = 0x40
0x116c: V1062 = M[0x40]
0x116e: V1063 = M[V1062]
0x1174: V1064 = 0xffffffffffffffffffffffffffffffffffffffff
0x1189: V1065 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x118a: V1066 = 0xa9059cbb
0x118f: V1067 = 0x0
0x1191: V1068 = 0x0
0x1194: V1069 = S[0x0]
0x1196: V1070 = 0x100
0x1199: V1071 = EXP 0x100 0x0
0x119b: V1072 = DIV V1069 0x1
0x119c: V1073 = 0xffffffffffffffffffffffffffffffffffffffff
0x11b1: V1074 = AND 0xffffffffffffffffffffffffffffffffffffffff V1072
0x11b3: V1075 = 0x0
0x11b5: V1076 = 0x40
0x11b7: V1077 = M[0x40]
0x11b8: V1078 = 0x20
0x11ba: V1079 = ADD 0x20 V1077
0x11bb: M[V1079] = 0x0
0x11bc: V1080 = 0x40
0x11be: V1081 = M[0x40]
0x11c0: V1082 = 0xffffffff
0x11c5: V1083 = AND 0xffffffff 0xa9059cbb
0x11c6: V1084 = 0x100000000000000000000000000000000000000000000000000000000
0x11e4: V1085 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x11e6: M[V1081] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x11e7: V1086 = 0x4
0x11e9: V1087 = ADD 0x4 V1081
0x11ec: V1088 = 0xffffffffffffffffffffffffffffffffffffffff
0x1201: V1089 = AND 0xffffffffffffffffffffffffffffffffffffffff V1074
0x1202: V1090 = 0xffffffffffffffffffffffffffffffffffffffff
0x1217: V1091 = AND 0xffffffffffffffffffffffffffffffffffffffff V1089
0x1219: M[V1087] = V1091
0x121a: V1092 = 0x20
0x121c: V1093 = ADD 0x20 V1087
0x121f: M[V1093] = V1063
0x1220: V1094 = 0x20
0x1222: V1095 = ADD 0x20 V1093
0x1227: V1096 = 0x20
0x1229: V1097 = 0x40
0x122b: V1098 = M[0x40]
0x122e: V1099 = SUB V1095 V1098
0x1230: V1100 = 0x0
0x1234: V1101 = EXTCODESIZE V1065
0x1235: V1102 = ISZERO V1101
0x1236: V1103 = ISZERO V1102
0x1237: V1104 = 0x123c
0x123a: JUMPI 0x123c V1103
---
Entry stack: [V10, 0x69d, V468, 0x0, V468, 0x0, V1023, 0x70a08231, V1044]
Stack pops: 5
Stack additions: [S4, V1063, V1065, 0xa9059cbb, V1095, 0x20, V1098, V1099, V1098, 0x0, V1065]
Exit stack: [V10, 0x69d, V468, 0x0, V468, V1063, V1065, 0xa9059cbb, V1095, 0x20, V1098, V1099, V1098, 0x0, V1065]

================================

Block 0x123b
[0x123b:0x123b]
---
Predecessors: [0x1166]
Successors: []
---
0x123b INVALID
---
0x123b: INVALID 
---
Entry stack: [V10, 0x69d, V468, 0x0, V468, V1063, V1065, 0xa9059cbb, V1095, 0x20, V1098, V1099, V1098, 0x0, V1065]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x69d, V468, 0x0, V468, V1063, V1065, 0xa9059cbb, V1095, 0x20, V1098, V1099, V1098, 0x0, V1065]

================================

Block 0x123c
[0x123c:0x1248]
---
Predecessors: [0x1166]
Successors: [0x1249, 0x124a]
---
0x123c JUMPDEST
0x123d PUSH2 0x2c6
0x1240 GAS
0x1241 SUB
0x1242 CALL
0x1243 ISZERO
0x1244 ISZERO
0x1245 PUSH2 0x124a
0x1248 JUMPI
---
0x123c: JUMPDEST 
0x123d: V1105 = 0x2c6
0x1240: V1106 = GAS
0x1241: V1107 = SUB V1106 0x2c6
0x1242: V1108 = CALL V1107 V1065 0x0 V1098 V1099 V1098 0x20
0x1243: V1109 = ISZERO V1108
0x1244: V1110 = ISZERO V1109
0x1245: V1111 = 0x124a
0x1248: JUMPI 0x124a V1110
---
Entry stack: [V10, 0x69d, V468, 0x0, V468, V1063, V1065, 0xa9059cbb, V1095, 0x20, V1098, V1099, V1098, 0x0, V1065]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x69d, V468, 0x0, V468, V1063, V1065, 0xa9059cbb, V1095]

================================

Block 0x1249
[0x1249:0x1249]
---
Predecessors: [0x123c]
Successors: []
---
0x1249 INVALID
---
0x1249: INVALID 
---
Entry stack: [V10, 0x69d, V468, 0x0, V468, V1063, V1065, 0xa9059cbb, V1095]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x69d, V468, 0x0, V468, V1063, V1065, 0xa9059cbb, V1095]

================================

Block 0x124a
[0x124a:0x1256]
---
Predecessors: [0x123c]
Successors: [0x1257]
---
0x124a JUMPDEST
0x124b POP
0x124c POP
0x124d POP
0x124e PUSH1 0x40
0x1250 MLOAD
0x1251 DUP1
0x1252 MLOAD
0x1253 SWAP1
0x1254 POP
0x1255 SWAP3
0x1256 POP
---
0x124a: JUMPDEST 
0x124e: V1112 = 0x40
0x1250: V1113 = M[0x40]
0x1252: V1114 = M[V1113]
---
Entry stack: [V10, 0x69d, V468, 0x0, V468, V1063, V1065, 0xa9059cbb, V1095]
Stack pops: 6
Stack additions: [V1114, S4, S3]
Exit stack: [V10, 0x69d, V468, V1114, V468, V1063]

================================

Block 0x1257
[0x1257:0x125d]
---
Predecessors: [0x124a]
Successors: [0x69d]
---
0x1257 JUMPDEST
0x1258 POP
0x1259 POP
0x125a SWAP2
0x125b SWAP1
0x125c POP
0x125d JUMP
---
0x1257: JUMPDEST 
0x125d: JUMP 0x69d
---
Entry stack: [V10, 0x69d, V468, V1114, V468, V1063]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V10, V1114]

================================

Block 0x125e
[0x125e:0x1271]
---
Predecessors: [0x6b7, 0xd25]
Successors: [0x6bf, 0xd2d]
---
0x125e JUMPDEST
0x125f PUSH1 0x20
0x1261 PUSH1 0x40
0x1263 MLOAD
0x1264 SWAP1
0x1265 DUP2
0x1266 ADD
0x1267 PUSH1 0x40
0x1269 MSTORE
0x126a DUP1
0x126b PUSH1 0x0
0x126d DUP2
0x126e MSTORE
0x126f POP
0x1270 SWAP1
0x1271 JUMP
---
0x125e: JUMPDEST 
0x125f: V1115 = 0x20
0x1261: V1116 = 0x40
0x1263: V1117 = M[0x40]
0x1266: V1118 = ADD V1117 0x20
0x1267: V1119 = 0x40
0x1269: M[0x40] = V1118
0x126b: V1120 = 0x0
0x126e: M[V1117] = 0x0
0x1271: JUMP {0x6bf, 0xd2d}
---
Entry stack: [V10, {0x272, 0x4be}, {0x6bf, 0xd2d}]
Stack pops: 1
Stack additions: [V1117]
Exit stack: [V10, {0x272, 0x4be}, V1117]

================================

Block 0x1272
[0x1272:0x129d]
---
Predecessors: []
Successors: []
---
0x1272 STOP
0x1273 LOG1
0x1274 PUSH6 0x627a7a723058
0x127b SHA3
0x127c MISSING 0xbb
0x127d MISSING 0xe
0x127e SDIV
0x127f MISSING 0x5c
0x1280 SWAP10
0x1281 SWAP10
0x1282 NOT
0x1283 MISSING 0xe9
0x1284 MISSING 0xec
0x1285 DUP11
0x1286 PUSH12 0x724ea1c823281476e2b26075
0x1293 NUMBER
0x1294 PUSH2 0x51c9
0x1297 SWAP14
0x1298 PUSH2 0x5d6
0x129b MISSING 0xd
0x129c STOP
0x129d MISSING 0x29
---
0x1272: STOP 
0x1273: LOG S0 S1 S2
0x1274: V1121 = 0x627a7a723058
0x127b: V1122 = SHA3 0x627a7a723058 S3
0x127c: MISSING 0xbb
0x127d: MISSING 0xe
0x127e: V1123 = SDIV S0 S1
0x127f: MISSING 0x5c
0x1282: V1124 = NOT S0
0x1283: MISSING 0xe9
0x1284: MISSING 0xec
0x1286: V1125 = 0x724ea1c823281476e2b26075
0x1293: V1126 = NUMBER
0x1294: V1127 = 0x51c9
0x1298: V1128 = 0x5d6
0x129b: MISSING 0xd
0x129c: STOP 
0x129d: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1122, V1123, V1124, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, 0x5d6, S10, V1126, 0x724ea1c823281476e2b26075, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, 0x51c9]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x262
Exit block: 0x539
Body: 0x262, 0x269, 0x26a, 0x272, 0x29d, 0x2ab, 0x2c1, 0x2d4, 0x2ed, 0x4be, 0x4e9, 0x4f7, 0x50d, 0x520, 0x539, 0x6b7, 0x6bf, 0x6f9

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x2fb
Exit block: 0x338
Body: 0x2fb, 0x302, 0x303, 0x338, 0x6fc, 0x70a, 0x78c, 0x792, 0x79a, 0x885

Function 2:
Public function signature: 0xdcf4b8f
Entry block: 0x352
Exit block: 0x362
Body: 0x352, 0x359, 0x35a, 0x362, 0x88b

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x378
Exit block: 0x388
Body: 0x378, 0x37f, 0x380, 0x388, 0x891

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x39e
Exit block: 0x3fa
Body: 0x39e, 0x3a5, 0x3a6, 0x3fa, 0x897, 0x8b1, 0x8b6, 0x8c0, 0x8c8, 0xa22, 0xa24, 0xa2b, 0xa2e, 0xa34, 0xbc5, 0xbcf

Function 5:
Public function signature: 0x313ce567
Entry block: 0x414
Exit block: 0x424
Body: 0x414, 0x41b, 0x41c, 0x424, 0xbdb, 0xbe2

Function 6:
Public function signature: 0x64acdb77
Entry block: 0x440
Exit block: 0x450
Body: 0x440, 0x447, 0x448, 0x450, 0xbe5, 0xc3d, 0xc42, 0xc5e

Function 7:
Public function signature: 0x70a08231
Entry block: 0x452
Exit block: 0x486
Body: 0x452, 0x459, 0x45a, 0x486, 0xc60, 0xca5

Function 8:
Public function signature: 0x8f580996
Entry block: 0x49c
Exit block: 0x4ac
Body: 0x49c, 0x4a3, 0x4a4, 0x4ac, 0xcaa, 0xd02, 0xd07, 0xd23

Function 9:
Public function signature: 0x95d89b41
Entry block: 0x4ae
Exit block: 0x2ed
Body: 0x272, 0x29d, 0x2ab, 0x2c1, 0x2d4, 0x2ed, 0x4ae, 0x4b5, 0x4b6, 0x4be, 0x4e9, 0x4f7, 0x50d, 0x520, 0x539, 0xd25, 0xd2d, 0xd67

Function 10:
Public function signature: 0xa9059cbb
Entry block: 0x547
Exit block: 0x584
Body: 0x547, 0x54e, 0x54f, 0x584, 0xd6a, 0xd80, 0xd85, 0xd8f, 0xd97, 0xe6c, 0xe6f, 0xe75, 0xf7c, 0xf86

Function 11:
Public function signature: 0xc59d4847
Entry block: 0x59e
Exit block: 0x5ae
Body: 0x59e, 0x5a5, 0x5a6, 0x5ae, 0xf8f, 0xfb2

Function 12:
Public function signature: 0xda040c0f
Entry block: 0x5d6
Exit block: 0x5e6
Body: 0x5d6, 0x5dd, 0x5de, 0x5e6, 0xfb7

Function 13:
Public function signature: 0xdd62ed3e
Entry block: 0x600
Exit block: 0x653
Body: 0x600, 0x607, 0x608, 0x653, 0xfca, 0x104c

Function 14:
Public function signature: 0xe58fc54c
Entry block: 0x669
Exit block: 0x69d
Body: 0x669, 0x670, 0x671, 0x69d, 0x1052, 0x10b0, 0x10b5, 0x1157, 0x1158, 0x1165, 0x1166, 0x123b, 0x123c, 0x1249, 0x124a, 0x1257

Function 15:
Public fallback function
Entry block: 0xd9
Exit block: 0x260
Body: 0xd9, 0xdd, 0xf6, 0xfb, 0x105, 0x109, 0x16a, 0x16b, 0x193, 0x19a, 0x25d, 0x260

