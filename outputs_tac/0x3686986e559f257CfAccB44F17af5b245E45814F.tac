Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xca]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xca
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xca
0xa: JUMPI 0xca V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x1f1]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x6fdde03
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x1f1
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x6fdde03
0x20: V14 = EQ V12 0x6fdde03
0x21: V15 = 0x1f1
0x24: JUMPI 0x1f1 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x27c]
---
0x25 DUP1
0x26 PUSH4 0x95ea7b3
0x2b EQ
0x2c PUSH2 0x27c
0x2f JUMPI
---
0x26: V16 = 0x95ea7b3
0x2b: V17 = EQ 0x95ea7b3 V12
0x2c: V18 = 0x27c
0x2f: JUMPI 0x27c V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x2b2]
---
0x30 DUP1
0x31 PUSH4 0xdcf4b8f
0x36 EQ
0x37 PUSH2 0x2b2
0x3a JUMPI
---
0x31: V19 = 0xdcf4b8f
0x36: V20 = EQ 0xdcf4b8f V12
0x37: V21 = 0x2b2
0x3a: JUMPI 0x2b2 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x2d7]
---
0x3b DUP1
0x3c PUSH4 0x18160ddd
0x41 EQ
0x42 PUSH2 0x2d7
0x45 JUMPI
---
0x3c: V22 = 0x18160ddd
0x41: V23 = EQ 0x18160ddd V12
0x42: V24 = 0x2d7
0x45: JUMPI 0x2d7 V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x2fc]
---
0x46 DUP1
0x47 PUSH4 0x23b872dd
0x4c EQ
0x4d PUSH2 0x2fc
0x50 JUMPI
---
0x47: V25 = 0x23b872dd
0x4c: V26 = EQ 0x23b872dd V12
0x4d: V27 = 0x2fc
0x50: JUMPI 0x2fc V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x338]
---
0x51 DUP1
0x52 PUSH4 0x313ce567
0x57 EQ
0x58 PUSH2 0x338
0x5b JUMPI
---
0x52: V28 = 0x313ce567
0x57: V29 = EQ 0x313ce567 V12
0x58: V30 = 0x338
0x5b: JUMPI 0x338 V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x361]
---
0x5c DUP1
0x5d PUSH4 0x41c0e1b5
0x62 EQ
0x63 PUSH2 0x361
0x66 JUMPI
---
0x5d: V31 = 0x41c0e1b5
0x62: V32 = EQ 0x41c0e1b5 V12
0x63: V33 = 0x361
0x66: JUMPI 0x361 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x376]
---
0x67 DUP1
0x68 PUSH4 0x64acdb77
0x6d EQ
0x6e PUSH2 0x376
0x71 JUMPI
---
0x68: V34 = 0x64acdb77
0x6d: V35 = EQ 0x64acdb77 V12
0x6e: V36 = 0x376
0x71: JUMPI 0x376 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x38b]
---
0x72 DUP1
0x73 PUSH4 0x70a08231
0x78 EQ
0x79 PUSH2 0x38b
0x7c JUMPI
---
0x73: V37 = 0x70a08231
0x78: V38 = EQ 0x70a08231 V12
0x79: V39 = 0x38b
0x7c: JUMPI 0x38b V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x3bc]
---
0x7d DUP1
0x7e PUSH4 0x8f580996
0x83 EQ
0x84 PUSH2 0x3bc
0x87 JUMPI
---
0x7e: V40 = 0x8f580996
0x83: V41 = EQ 0x8f580996 V12
0x84: V42 = 0x3bc
0x87: JUMPI 0x3bc V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x3d1]
---
0x88 DUP1
0x89 PUSH4 0x95d89b41
0x8e EQ
0x8f PUSH2 0x3d1
0x92 JUMPI
---
0x89: V43 = 0x95d89b41
0x8e: V44 = EQ 0x95d89b41 V12
0x8f: V45 = 0x3d1
0x92: JUMPI 0x3d1 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x45c]
---
0x93 DUP1
0x94 PUSH4 0xa9059cbb
0x99 EQ
0x9a PUSH2 0x45c
0x9d JUMPI
---
0x94: V46 = 0xa9059cbb
0x99: V47 = EQ 0xa9059cbb V12
0x9a: V48 = 0x45c
0x9d: JUMPI 0x45c V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x492]
---
0x9e DUP1
0x9f PUSH4 0xc59d4847
0xa4 EQ
0xa5 PUSH2 0x492
0xa8 JUMPI
---
0x9f: V49 = 0xc59d4847
0xa4: V50 = EQ 0xc59d4847 V12
0xa5: V51 = 0x492
0xa8: JUMPI 0x492 V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x4cb]
---
0xa9 DUP1
0xaa PUSH4 0xda040c0f
0xaf EQ
0xb0 PUSH2 0x4cb
0xb3 JUMPI
---
0xaa: V52 = 0xda040c0f
0xaf: V53 = EQ 0xda040c0f V12
0xb0: V54 = 0x4cb
0xb3: JUMPI 0x4cb V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x4f2]
---
0xb4 DUP1
0xb5 PUSH4 0xdd62ed3e
0xba EQ
0xbb PUSH2 0x4f2
0xbe JUMPI
---
0xb5: V55 = 0xdd62ed3e
0xba: V56 = EQ 0xdd62ed3e V12
0xbb: V57 = 0x4f2
0xbe: JUMPI 0x4f2 V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc9]
---
Predecessors: [0xb4]
Successors: [0xca, 0x529]
---
0xbf DUP1
0xc0 PUSH4 0xe58fc54c
0xc5 EQ
0xc6 PUSH2 0x529
0xc9 JUMPI
---
0xc0: V58 = 0xe58fc54c
0xc5: V59 = EQ 0xe58fc54c V12
0xc6: V60 = 0x529
0xc9: JUMPI 0x529 V59
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xca
[0xca:0xcd]
---
Predecessors: [0x0, 0xbf]
Successors: [0xce]
---
0xca JUMPDEST
0xcb PUSH2 0x1ef
---
0xca: JUMPDEST 
0xcb: V61 = 0x1ef
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ef]
Exit stack: [V12, 0x1ef]

================================

Block 0xce
[0xce:0xe2]
---
Predecessors: [0xca]
Successors: [0xe3, 0x125]
---
0xce JUMPDEST
0xcf PUSH1 0x0
0xd1 DUP1
0xd2 SLOAD
0xd3 PUSH1 0xa0
0xd5 PUSH1 0x2
0xd7 EXP
0xd8 SWAP1
0xd9 DIV
0xda PUSH1 0xff
0xdc AND
0xdd ISZERO
0xde ISZERO
0xdf PUSH2 0x125
0xe2 JUMPI
---
0xce: JUMPDEST 
0xcf: V62 = 0x0
0xd2: V63 = S[0x0]
0xd3: V64 = 0xa0
0xd5: V65 = 0x2
0xd7: V66 = EXP 0x2 0xa0
0xd9: V67 = DIV V63 0x10000000000000000000000000000000000000000
0xda: V68 = 0xff
0xdc: V69 = AND 0xff V67
0xdd: V70 = ISZERO V69
0xde: V71 = ISZERO V70
0xdf: V72 = 0x125
0xe2: JUMPI 0x125 V71
---
Entry stack: [V12, 0x1ef]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x1ef, 0x0]

================================

Block 0xe3
[0xe3:0xeb]
---
Predecessors: [0xce]
Successors: [0xec, 0x11f]
---
0xe3 PUSH1 0x0
0xe5 CALLVALUE
0xe6 GT
0xe7 ISZERO
0xe8 PUSH2 0x11f
0xeb JUMPI
---
0xe3: V73 = 0x0
0xe5: V74 = CALLVALUE
0xe6: V75 = GT V74 0x0
0xe7: V76 = ISZERO V75
0xe8: V77 = 0x11f
0xeb: JUMPI 0x11f V76
---
Entry stack: [V12, 0x1ef, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef, 0x0]

================================

Block 0xec
[0xec:0x11a]
---
Predecessors: [0xe3]
Successors: [0x11b, 0x11f]
---
0xec PUSH1 0x0
0xee SLOAD
0xef PUSH1 0x1
0xf1 PUSH1 0xa0
0xf3 PUSH1 0x2
0xf5 EXP
0xf6 SUB
0xf7 AND
0xf8 CALLVALUE
0xf9 DUP1
0xfa ISZERO
0xfb PUSH2 0x8fc
0xfe MUL
0xff SWAP1
0x100 PUSH1 0x40
0x102 MLOAD
0x103 PUSH1 0x0
0x105 PUSH1 0x40
0x107 MLOAD
0x108 DUP1
0x109 DUP4
0x10a SUB
0x10b DUP2
0x10c DUP6
0x10d DUP9
0x10e DUP9
0x10f CALL
0x110 SWAP4
0x111 POP
0x112 POP
0x113 POP
0x114 POP
0x115 ISZERO
0x116 ISZERO
0x117 PUSH2 0x11f
0x11a JUMPI
---
0xec: V78 = 0x0
0xee: V79 = S[0x0]
0xef: V80 = 0x1
0xf1: V81 = 0xa0
0xf3: V82 = 0x2
0xf5: V83 = EXP 0x2 0xa0
0xf6: V84 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf7: V85 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0xf8: V86 = CALLVALUE
0xfa: V87 = ISZERO V86
0xfb: V88 = 0x8fc
0xfe: V89 = MUL 0x8fc V87
0x100: V90 = 0x40
0x102: V91 = M[0x40]
0x103: V92 = 0x0
0x105: V93 = 0x40
0x107: V94 = M[0x40]
0x10a: V95 = SUB V91 V94
0x10f: V96 = CALL V89 V85 V86 V94 V95 V94 0x0
0x115: V97 = ISZERO V96
0x116: V98 = ISZERO V97
0x117: V99 = 0x11f
0x11a: JUMPI 0x11f V98
---
Entry stack: [V12, 0x1ef, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef, 0x0]

================================

Block 0x11b
[0x11b:0x11e]
---
Predecessors: [0xec]
Successors: []
---
0x11b PUSH1 0x0
0x11d DUP1
0x11e REVERT
---
0x11b: V100 = 0x0
0x11e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ef, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef, 0x0]

================================

Block 0x11f
[0x11f:0x11f]
---
Predecessors: [0xe3, 0xec]
Successors: [0x120]
---
0x11f JUMPDEST
---
0x11f: JUMPDEST 
---
Entry stack: [V12, 0x1ef, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef, 0x0]

================================

Block 0x120
[0x120:0x124]
---
Predecessors: [0x11f]
Successors: [0x1ec]
---
0x120 JUMPDEST
0x121 PUSH2 0x1ec
0x124 JUMP
---
0x120: JUMPDEST 
0x121: V101 = 0x1ec
0x124: JUMP 0x1ec
---
Entry stack: [V12, 0x1ef, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef, 0x0]

================================

Block 0x125
[0x125:0x12c]
---
Predecessors: [0xce]
Successors: [0x12d, 0x131]
---
0x125 JUMPDEST
0x126 CALLVALUE
0x127 ISZERO
0x128 ISZERO
0x129 PUSH2 0x131
0x12c JUMPI
---
0x125: JUMPDEST 
0x126: V102 = CALLVALUE
0x127: V103 = ISZERO V102
0x128: V104 = ISZERO V103
0x129: V105 = 0x131
0x12c: JUMPI 0x131 V104
---
Entry stack: [V12, 0x1ef, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef, 0x0]

================================

Block 0x12d
[0x12d:0x130]
---
Predecessors: [0x125]
Successors: [0x1ec]
---
0x12d PUSH2 0x1ec
0x130 JUMP
---
0x12d: V106 = 0x1ec
0x130: JUMP 0x1ec
---
Entry stack: [V12, 0x1ef, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef, 0x0]

================================

Block 0x131
[0x131:0x160]
---
Predecessors: [0x125]
Successors: [0x161, 0x165]
---
0x131 JUMPDEST
0x132 PUSH1 0x0
0x134 SLOAD
0x135 PUSH1 0x1
0x137 PUSH1 0xa0
0x139 PUSH1 0x2
0x13b EXP
0x13c SUB
0x13d AND
0x13e CALLVALUE
0x13f DUP1
0x140 ISZERO
0x141 PUSH2 0x8fc
0x144 MUL
0x145 SWAP1
0x146 PUSH1 0x40
0x148 MLOAD
0x149 PUSH1 0x0
0x14b PUSH1 0x40
0x14d MLOAD
0x14e DUP1
0x14f DUP4
0x150 SUB
0x151 DUP2
0x152 DUP6
0x153 DUP9
0x154 DUP9
0x155 CALL
0x156 SWAP4
0x157 POP
0x158 POP
0x159 POP
0x15a POP
0x15b ISZERO
0x15c ISZERO
0x15d PUSH2 0x165
0x160 JUMPI
---
0x131: JUMPDEST 
0x132: V107 = 0x0
0x134: V108 = S[0x0]
0x135: V109 = 0x1
0x137: V110 = 0xa0
0x139: V111 = 0x2
0x13b: V112 = EXP 0x2 0xa0
0x13c: V113 = SUB 0x10000000000000000000000000000000000000000 0x1
0x13d: V114 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x13e: V115 = CALLVALUE
0x140: V116 = ISZERO V115
0x141: V117 = 0x8fc
0x144: V118 = MUL 0x8fc V116
0x146: V119 = 0x40
0x148: V120 = M[0x40]
0x149: V121 = 0x0
0x14b: V122 = 0x40
0x14d: V123 = M[0x40]
0x150: V124 = SUB V120 V123
0x155: V125 = CALL V118 V114 V115 V123 V124 V123 0x0
0x15b: V126 = ISZERO V125
0x15c: V127 = ISZERO V126
0x15d: V128 = 0x165
0x160: JUMPI 0x165 V127
---
Entry stack: [V12, 0x1ef, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef, 0x0]

================================

Block 0x161
[0x161:0x164]
---
Predecessors: [0x131]
Successors: []
---
0x161 PUSH1 0x0
0x163 DUP1
0x164 REVERT
---
0x161: V129 = 0x0
0x164: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1ef, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef, 0x0]

================================

Block 0x165
[0x165:0x185]
---
Predecessors: [0x131]
Successors: [0x186, 0x18a]
---
0x165 JUMPDEST
0x166 POP
0x167 PUSH1 0x3
0x169 DUP1
0x16a SLOAD
0x16b CALLVALUE
0x16c SWAP1
0x16d DUP2
0x16e ADD
0x16f SWAP1
0x170 SWAP2
0x171 SSTORE
0x172 PUSH2 0x2710
0x175 DUP2
0x176 MUL
0x177 SWAP1
0x178 PUSH7 0x2386f26fc10000
0x180 SWAP1
0x181 LT
0x182 PUSH2 0x18a
0x185 JUMPI
---
0x165: JUMPDEST 
0x167: V130 = 0x3
0x16a: V131 = S[0x3]
0x16b: V132 = CALLVALUE
0x16e: V133 = ADD V132 V131
0x171: S[0x3] = V133
0x172: V134 = 0x2710
0x176: V135 = MUL V132 0x2710
0x178: V136 = 0x2386f26fc10000
0x181: V137 = LT V132 0x2386f26fc10000
0x182: V138 = 0x18a
0x185: JUMPI 0x18a V137
---
Entry stack: [V12, 0x1ef, 0x0]
Stack pops: 1
Stack additions: [V135]
Exit stack: [V12, 0x1ef, V135]

================================

Block 0x186
[0x186:0x189]
---
Predecessors: [0x165]
Successors: [0x18a]
---
0x186 PUSH1 0x3
0x188 SLOAD
0x189 ADD
---
0x186: V139 = 0x3
0x188: V140 = S[0x3]
0x189: V141 = ADD V140 V135
---
Entry stack: [V12, 0x1ef, V135]
Stack pops: 1
Stack additions: [V141]
Exit stack: [V12, 0x1ef, V141]

================================

Block 0x18a
[0x18a:0x1eb]
---
Predecessors: [0x165, 0x186]
Successors: [0x1ec]
---
0x18a JUMPDEST
0x18b PUSH1 0x4
0x18d DUP1
0x18e SLOAD
0x18f DUP3
0x190 ADD
0x191 SWAP1
0x192 SSTORE
0x193 PUSH1 0x1
0x195 PUSH1 0xa0
0x197 PUSH1 0x2
0x199 EXP
0x19a SUB
0x19b CALLER
0x19c DUP2
0x19d AND
0x19e PUSH1 0x0
0x1a0 DUP2
0x1a1 DUP2
0x1a2 MSTORE
0x1a3 PUSH1 0x1
0x1a5 PUSH1 0x20
0x1a7 MSTORE
0x1a8 PUSH1 0x40
0x1aa SWAP1
0x1ab DUP2
0x1ac SWAP1
0x1ad SHA3
0x1ae DUP1
0x1af SLOAD
0x1b0 DUP6
0x1b1 ADD
0x1b2 SWAP1
0x1b3 SSTORE
0x1b4 SWAP1
0x1b5 SWAP2
0x1b6 ADDRESS
0x1b7 AND
0x1b8 SWAP1
0x1b9 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1da SWAP1
0x1db DUP5
0x1dc SWAP1
0x1dd MLOAD
0x1de SWAP1
0x1df DUP2
0x1e0 MSTORE
0x1e1 PUSH1 0x20
0x1e3 ADD
0x1e4 PUSH1 0x40
0x1e6 MLOAD
0x1e7 DUP1
0x1e8 SWAP2
0x1e9 SUB
0x1ea SWAP1
0x1eb LOG3
---
0x18a: JUMPDEST 
0x18b: V142 = 0x4
0x18e: V143 = S[0x4]
0x190: V144 = ADD S0 V143
0x192: S[0x4] = V144
0x193: V145 = 0x1
0x195: V146 = 0xa0
0x197: V147 = 0x2
0x199: V148 = EXP 0x2 0xa0
0x19a: V149 = SUB 0x10000000000000000000000000000000000000000 0x1
0x19b: V150 = CALLER
0x19d: V151 = AND 0xffffffffffffffffffffffffffffffffffffffff V150
0x19e: V152 = 0x0
0x1a2: M[0x0] = V151
0x1a3: V153 = 0x1
0x1a5: V154 = 0x20
0x1a7: M[0x20] = 0x1
0x1a8: V155 = 0x40
0x1ad: V156 = SHA3 0x0 0x40
0x1af: V157 = S[V156]
0x1b1: V158 = ADD S0 V157
0x1b3: S[V156] = V158
0x1b6: V159 = ADDRESS
0x1b7: V160 = AND V159 0xffffffffffffffffffffffffffffffffffffffff
0x1b9: V161 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1dd: V162 = M[0x40]
0x1e0: M[V162] = S0
0x1e1: V163 = 0x20
0x1e3: V164 = ADD 0x20 V162
0x1e4: V165 = 0x40
0x1e6: V166 = M[0x40]
0x1e9: V167 = SUB V164 V166
0x1eb: LOG V166 V167 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V160 V151
---
Entry stack: [V12, 0x1ef, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1ef, S0]

================================

Block 0x1ec
[0x1ec:0x1ee]
---
Predecessors: [0x120, 0x12d, 0x18a]
Successors: [0x1ef]
---
0x1ec JUMPDEST
0x1ed POP
0x1ee JUMP
---
0x1ec: JUMPDEST 
0x1ee: JUMP 0x1ef
---
Entry stack: [V12, 0x1ef, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ef
[0x1ef:0x1f0]
---
Predecessors: [0x1ec, 0x7b4, 0x7f0, 0x851]
Successors: []
---
0x1ef JUMPDEST
0x1f0 STOP
---
0x1ef: JUMPDEST 
0x1f0: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f1
[0x1f1:0x1f7]
---
Predecessors: [0xb]
Successors: [0x1f8, 0x1fc]
---
0x1f1 JUMPDEST
0x1f2 CALLVALUE
0x1f3 ISZERO
0x1f4 PUSH2 0x1fc
0x1f7 JUMPI
---
0x1f1: JUMPDEST 
0x1f2: V168 = CALLVALUE
0x1f3: V169 = ISZERO V168
0x1f4: V170 = 0x1fc
0x1f7: JUMPI 0x1fc V169
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f8
[0x1f8:0x1fb]
---
Predecessors: [0x1f1]
Successors: []
---
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb REVERT
---
0x1f8: V171 = 0x0
0x1fb: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1fc
[0x1fc:0x203]
---
Predecessors: [0x1f1]
Successors: [0x55c]
---
0x1fc JUMPDEST
0x1fd PUSH2 0x204
0x200 PUSH2 0x55c
0x203 JUMP
---
0x1fc: JUMPDEST 
0x1fd: V172 = 0x204
0x200: V173 = 0x55c
0x203: JUMP 0x55c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x204]
Exit stack: [V12, 0x204]

================================

Block 0x204
[0x204:0x227]
---
Predecessors: [0x59b, 0x892]
Successors: [0x228]
---
0x204 JUMPDEST
0x205 PUSH1 0x40
0x207 MLOAD
0x208 PUSH1 0x20
0x20a DUP1
0x20b DUP3
0x20c MSTORE
0x20d DUP2
0x20e SWAP1
0x20f DUP2
0x210 ADD
0x211 DUP4
0x212 DUP2
0x213 DUP2
0x214 MLOAD
0x215 DUP2
0x216 MSTORE
0x217 PUSH1 0x20
0x219 ADD
0x21a SWAP2
0x21b POP
0x21c DUP1
0x21d MLOAD
0x21e SWAP1
0x21f PUSH1 0x20
0x221 ADD
0x222 SWAP1
0x223 DUP1
0x224 DUP4
0x225 DUP4
0x226 PUSH1 0x0
---
0x204: JUMPDEST 
0x205: V174 = 0x40
0x207: V175 = M[0x40]
0x208: V176 = 0x20
0x20c: M[V175] = 0x20
0x210: V177 = ADD V175 0x20
0x214: V178 = M[S0]
0x216: M[V177] = V178
0x217: V179 = 0x20
0x219: V180 = ADD 0x20 V177
0x21d: V181 = M[S0]
0x21f: V182 = 0x20
0x221: V183 = ADD 0x20 S0
0x226: V184 = 0x0
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: [S0, V175, V175, V180, V183, V181, V181, V180, V183, 0x0]
Exit stack: [V12, S0, V175, V175, V180, V183, V181, V181, V180, V183, 0x0]

================================

Block 0x228
[0x228:0x230]
---
Predecessors: [0x204, 0x239, 0x419]
Successors: [0x231, 0x241]
---
0x228 JUMPDEST
0x229 DUP4
0x22a DUP2
0x22b LT
0x22c ISZERO
0x22d PUSH2 0x241
0x230 JUMPI
---
0x228: JUMPDEST 
0x22b: V185 = LT S0 S3
0x22c: V186 = ISZERO V185
0x22d: V187 = 0x241
0x230: JUMPI 0x241 V186
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x231
[0x231:0x238]
---
Predecessors: [0x228]
Successors: [0x239]
---
0x231 DUP1
0x232 DUP3
0x233 ADD
0x234 MLOAD
0x235 DUP2
0x236 DUP5
0x237 ADD
0x238 MSTORE
---
0x233: V188 = ADD S1 S0
0x234: V189 = M[V188]
0x237: V190 = ADD S2 S0
0x238: M[V190] = V189
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x239
[0x239:0x240]
---
Predecessors: [0x231]
Successors: [0x228]
---
0x239 JUMPDEST
0x23a PUSH1 0x20
0x23c ADD
0x23d PUSH2 0x228
0x240 JUMP
---
0x239: JUMPDEST 
0x23a: V191 = 0x20
0x23c: V192 = ADD 0x20 S0
0x23d: V193 = 0x228
0x240: JUMP 0x228
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V192]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, V192]

================================

Block 0x241
[0x241:0x254]
---
Predecessors: [0x228, 0x408]
Successors: [0x255, 0x26e]
---
0x241 JUMPDEST
0x242 POP
0x243 POP
0x244 POP
0x245 POP
0x246 SWAP1
0x247 POP
0x248 SWAP1
0x249 DUP2
0x24a ADD
0x24b SWAP1
0x24c PUSH1 0x1f
0x24e AND
0x24f DUP1
0x250 ISZERO
0x251 PUSH2 0x26e
0x254 JUMPI
---
0x241: JUMPDEST 
0x24a: V194 = ADD S4 S6
0x24c: V195 = 0x1f
0x24e: V196 = AND 0x1f S4
0x250: V197 = ISZERO V196
0x251: V198 = 0x26e
0x254: JUMPI 0x26e V197
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V194, V196]
Exit stack: [V12, S9, S8, S7, V194, V196]

================================

Block 0x255
[0x255:0x26d]
---
Predecessors: [0x241]
Successors: [0x26e]
---
0x255 DUP1
0x256 DUP3
0x257 SUB
0x258 DUP1
0x259 MLOAD
0x25a PUSH1 0x1
0x25c DUP4
0x25d PUSH1 0x20
0x25f SUB
0x260 PUSH2 0x100
0x263 EXP
0x264 SUB
0x265 NOT
0x266 AND
0x267 DUP2
0x268 MSTORE
0x269 PUSH1 0x20
0x26b ADD
0x26c SWAP2
0x26d POP
---
0x257: V199 = SUB V194 V196
0x259: V200 = M[V199]
0x25a: V201 = 0x1
0x25d: V202 = 0x20
0x25f: V203 = SUB 0x20 V196
0x260: V204 = 0x100
0x263: V205 = EXP 0x100 V203
0x264: V206 = SUB V205 0x1
0x265: V207 = NOT V206
0x266: V208 = AND V207 V200
0x268: M[V199] = V208
0x269: V209 = 0x20
0x26b: V210 = ADD 0x20 V199
---
Entry stack: [V12, S4, S3, S2, V194, V196]
Stack pops: 2
Stack additions: [V210, S0]
Exit stack: [V12, S4, S3, S2, V210, V196]

================================

Block 0x26e
[0x26e:0x27b]
---
Predecessors: [0x241, 0x255, 0x421]
Successors: []
---
0x26e JUMPDEST
0x26f POP
0x270 SWAP3
0x271 POP
0x272 POP
0x273 POP
0x274 PUSH1 0x40
0x276 MLOAD
0x277 DUP1
0x278 SWAP2
0x279 SUB
0x27a SWAP1
0x27b RETURN
---
0x26e: JUMPDEST 
0x274: V211 = 0x40
0x276: V212 = M[0x40]
0x279: V213 = SUB S1 V212
0x27b: RETURN V212 V213
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x27c
[0x27c:0x282]
---
Predecessors: [0x25]
Successors: [0x283, 0x287]
---
0x27c JUMPDEST
0x27d CALLVALUE
0x27e ISZERO
0x27f PUSH2 0x287
0x282 JUMPI
---
0x27c: JUMPDEST 
0x27d: V214 = CALLVALUE
0x27e: V215 = ISZERO V214
0x27f: V216 = 0x287
0x282: JUMPI 0x287 V215
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x283
[0x283:0x286]
---
Predecessors: [0x27c]
Successors: []
---
0x283 PUSH1 0x0
0x285 DUP1
0x286 REVERT
---
0x283: V217 = 0x0
0x286: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x287
[0x287:0x29d]
---
Predecessors: [0x27c]
Successors: [0x59e]
---
0x287 JUMPDEST
0x288 PUSH2 0x29e
0x28b PUSH1 0x1
0x28d PUSH1 0xa0
0x28f PUSH1 0x2
0x291 EXP
0x292 SUB
0x293 PUSH1 0x4
0x295 CALLDATALOAD
0x296 AND
0x297 PUSH1 0x24
0x299 CALLDATALOAD
0x29a PUSH2 0x59e
0x29d JUMP
---
0x287: JUMPDEST 
0x288: V218 = 0x29e
0x28b: V219 = 0x1
0x28d: V220 = 0xa0
0x28f: V221 = 0x2
0x291: V222 = EXP 0x2 0xa0
0x292: V223 = SUB 0x10000000000000000000000000000000000000000 0x1
0x293: V224 = 0x4
0x295: V225 = CALLDATALOAD 0x4
0x296: V226 = AND V225 0xffffffffffffffffffffffffffffffffffffffff
0x297: V227 = 0x24
0x299: V228 = CALLDATALOAD 0x24
0x29a: V229 = 0x59e
0x29d: JUMP 0x59e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29e, V226, V228]
Exit stack: [V12, 0x29e, V226, V228]

================================

Block 0x29e
[0x29e:0x2b1]
---
Predecessors: [0x644, 0x77c, 0x96c, 0x98e, 0xae3]
Successors: []
---
0x29e JUMPDEST
0x29f PUSH1 0x40
0x2a1 MLOAD
0x2a2 SWAP1
0x2a3 ISZERO
0x2a4 ISZERO
0x2a5 DUP2
0x2a6 MSTORE
0x2a7 PUSH1 0x20
0x2a9 ADD
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad DUP1
0x2ae SWAP2
0x2af SUB
0x2b0 SWAP1
0x2b1 RETURN
---
0x29e: JUMPDEST 
0x29f: V230 = 0x40
0x2a1: V231 = M[0x40]
0x2a3: V232 = ISZERO S0
0x2a4: V233 = ISZERO V232
0x2a6: M[V231] = V233
0x2a7: V234 = 0x20
0x2a9: V235 = ADD 0x20 V231
0x2aa: V236 = 0x40
0x2ac: V237 = M[0x40]
0x2af: V238 = SUB V235 V237
0x2b1: RETURN V237 V238
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x2b2
[0x2b2:0x2b8]
---
Predecessors: [0x30]
Successors: [0x2b9, 0x2bd]
---
0x2b2 JUMPDEST
0x2b3 CALLVALUE
0x2b4 ISZERO
0x2b5 PUSH2 0x2bd
0x2b8 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V239 = CALLVALUE
0x2b4: V240 = ISZERO V239
0x2b5: V241 = 0x2bd
0x2b8: JUMPI 0x2bd V240
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b9
[0x2b9:0x2bc]
---
Predecessors: [0x2b2]
Successors: []
---
0x2b9 PUSH1 0x0
0x2bb DUP1
0x2bc REVERT
---
0x2b9: V242 = 0x0
0x2bc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bd
[0x2bd:0x2c4]
---
Predecessors: [0x2b2]
Successors: [0x64a]
---
0x2bd JUMPDEST
0x2be PUSH2 0x2c5
0x2c1 PUSH2 0x64a
0x2c4 JUMP
---
0x2bd: JUMPDEST 
0x2be: V243 = 0x2c5
0x2c1: V244 = 0x64a
0x2c4: JUMP 0x64a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2c5]
Exit stack: [V12, 0x2c5]

================================

Block 0x2c5
[0x2c5:0x2d6]
---
Predecessors: [0x64a, 0x650, 0x80c, 0x9c5]
Successors: []
---
0x2c5 JUMPDEST
0x2c6 PUSH1 0x40
0x2c8 MLOAD
0x2c9 SWAP1
0x2ca DUP2
0x2cb MSTORE
0x2cc PUSH1 0x20
0x2ce ADD
0x2cf PUSH1 0x40
0x2d1 MLOAD
0x2d2 DUP1
0x2d3 SWAP2
0x2d4 SUB
0x2d5 SWAP1
0x2d6 RETURN
---
0x2c5: JUMPDEST 
0x2c6: V245 = 0x40
0x2c8: V246 = M[0x40]
0x2cb: M[V246] = S0
0x2cc: V247 = 0x20
0x2ce: V248 = ADD 0x20 V246
0x2cf: V249 = 0x40
0x2d1: V250 = M[0x40]
0x2d4: V251 = SUB V248 V250
0x2d6: RETURN V250 V251
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x2d7
[0x2d7:0x2dd]
---
Predecessors: [0x3b]
Successors: [0x2de, 0x2e2]
---
0x2d7 JUMPDEST
0x2d8 CALLVALUE
0x2d9 ISZERO
0x2da PUSH2 0x2e2
0x2dd JUMPI
---
0x2d7: JUMPDEST 
0x2d8: V252 = CALLVALUE
0x2d9: V253 = ISZERO V252
0x2da: V254 = 0x2e2
0x2dd: JUMPI 0x2e2 V253
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2de
[0x2de:0x2e1]
---
Predecessors: [0x2d7]
Successors: []
---
0x2de PUSH1 0x0
0x2e0 DUP1
0x2e1 REVERT
---
0x2de: V255 = 0x0
0x2e1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2e2
[0x2e2:0x2e9]
---
Predecessors: [0x2d7]
Successors: [0x650]
---
0x2e2 JUMPDEST
0x2e3 PUSH2 0x2c5
0x2e6 PUSH2 0x650
0x2e9 JUMP
---
0x2e2: JUMPDEST 
0x2e3: V256 = 0x2c5
0x2e6: V257 = 0x650
0x2e9: JUMP 0x650
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2c5]
Exit stack: [V12, 0x2c5]

================================

Block 0x2ea
[0x2ea:0x2fb]
---
Predecessors: []
Successors: []
---
0x2ea JUMPDEST
0x2eb PUSH1 0x40
0x2ed MLOAD
0x2ee SWAP1
0x2ef DUP2
0x2f0 MSTORE
0x2f1 PUSH1 0x20
0x2f3 ADD
0x2f4 PUSH1 0x40
0x2f6 MLOAD
0x2f7 DUP1
0x2f8 SWAP2
0x2f9 SUB
0x2fa SWAP1
0x2fb RETURN
---
0x2ea: JUMPDEST 
0x2eb: V258 = 0x40
0x2ed: V259 = M[0x40]
0x2f0: M[V259] = S0
0x2f1: V260 = 0x20
0x2f3: V261 = ADD 0x20 V259
0x2f4: V262 = 0x40
0x2f6: V263 = M[0x40]
0x2f9: V264 = SUB V261 V263
0x2fb: RETURN V263 V264
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2fc
[0x2fc:0x302]
---
Predecessors: [0x46]
Successors: [0x303, 0x307]
---
0x2fc JUMPDEST
0x2fd CALLVALUE
0x2fe ISZERO
0x2ff PUSH2 0x307
0x302 JUMPI
---
0x2fc: JUMPDEST 
0x2fd: V265 = CALLVALUE
0x2fe: V266 = ISZERO V265
0x2ff: V267 = 0x307
0x302: JUMPI 0x307 V266
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x303
[0x303:0x306]
---
Predecessors: [0x2fc]
Successors: []
---
0x303 PUSH1 0x0
0x305 DUP1
0x306 REVERT
---
0x303: V268 = 0x0
0x306: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x307
[0x307:0x323]
---
Predecessors: [0x2fc]
Successors: [0x656]
---
0x307 JUMPDEST
0x308 PUSH2 0x29e
0x30b PUSH1 0x1
0x30d PUSH1 0xa0
0x30f PUSH1 0x2
0x311 EXP
0x312 SUB
0x313 PUSH1 0x4
0x315 CALLDATALOAD
0x316 DUP2
0x317 AND
0x318 SWAP1
0x319 PUSH1 0x24
0x31b CALLDATALOAD
0x31c AND
0x31d PUSH1 0x44
0x31f CALLDATALOAD
0x320 PUSH2 0x656
0x323 JUMP
---
0x307: JUMPDEST 
0x308: V269 = 0x29e
0x30b: V270 = 0x1
0x30d: V271 = 0xa0
0x30f: V272 = 0x2
0x311: V273 = EXP 0x2 0xa0
0x312: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x313: V275 = 0x4
0x315: V276 = CALLDATALOAD 0x4
0x317: V277 = AND 0xffffffffffffffffffffffffffffffffffffffff V276
0x319: V278 = 0x24
0x31b: V279 = CALLDATALOAD 0x24
0x31c: V280 = AND V279 0xffffffffffffffffffffffffffffffffffffffff
0x31d: V281 = 0x44
0x31f: V282 = CALLDATALOAD 0x44
0x320: V283 = 0x656
0x323: JUMP 0x656
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29e, V277, V280, V282]
Exit stack: [V12, 0x29e, V277, V280, V282]

================================

Block 0x324
[0x324:0x337]
---
Predecessors: []
Successors: []
---
0x324 JUMPDEST
0x325 PUSH1 0x40
0x327 MLOAD
0x328 SWAP1
0x329 ISZERO
0x32a ISZERO
0x32b DUP2
0x32c MSTORE
0x32d PUSH1 0x20
0x32f ADD
0x330 PUSH1 0x40
0x332 MLOAD
0x333 DUP1
0x334 SWAP2
0x335 SUB
0x336 SWAP1
0x337 RETURN
---
0x324: JUMPDEST 
0x325: V284 = 0x40
0x327: V285 = M[0x40]
0x329: V286 = ISZERO S0
0x32a: V287 = ISZERO V286
0x32c: M[V285] = V287
0x32d: V288 = 0x20
0x32f: V289 = ADD 0x20 V285
0x330: V290 = 0x40
0x332: V291 = M[0x40]
0x335: V292 = SUB V289 V291
0x337: RETURN V291 V292
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x338
[0x338:0x33e]
---
Predecessors: [0x51]
Successors: [0x33f, 0x343]
---
0x338 JUMPDEST
0x339 CALLVALUE
0x33a ISZERO
0x33b PUSH2 0x343
0x33e JUMPI
---
0x338: JUMPDEST 
0x339: V293 = CALLVALUE
0x33a: V294 = ISZERO V293
0x33b: V295 = 0x343
0x33e: JUMPI 0x343 V294
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x33f
[0x33f:0x342]
---
Predecessors: [0x338]
Successors: []
---
0x33f PUSH1 0x0
0x341 DUP1
0x342 REVERT
---
0x33f: V296 = 0x0
0x342: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x343
[0x343:0x34a]
---
Predecessors: [0x338]
Successors: [0x788]
---
0x343 JUMPDEST
0x344 PUSH2 0x34b
0x347 PUSH2 0x788
0x34a JUMP
---
0x343: JUMPDEST 
0x344: V297 = 0x34b
0x347: V298 = 0x788
0x34a: JUMP 0x788
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x34b]
Exit stack: [V12, 0x34b]

================================

Block 0x34b
[0x34b:0x360]
---
Predecessors: [0x78b]
Successors: []
---
0x34b JUMPDEST
0x34c PUSH1 0x40
0x34e MLOAD
0x34f PUSH1 0xff
0x351 SWAP1
0x352 SWAP2
0x353 AND
0x354 DUP2
0x355 MSTORE
0x356 PUSH1 0x20
0x358 ADD
0x359 PUSH1 0x40
0x35b MLOAD
0x35c DUP1
0x35d SWAP2
0x35e SUB
0x35f SWAP1
0x360 RETURN
---
0x34b: JUMPDEST 
0x34c: V299 = 0x40
0x34e: V300 = M[0x40]
0x34f: V301 = 0xff
0x353: V302 = AND 0x12 0xff
0x355: M[V300] = 0x12
0x356: V303 = 0x20
0x358: V304 = ADD 0x20 V300
0x359: V305 = 0x40
0x35b: V306 = M[0x40]
0x35e: V307 = SUB V304 V306
0x360: RETURN V306 V307
---
Entry stack: [V12, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x361
[0x361:0x367]
---
Predecessors: [0x5c]
Successors: [0x368, 0x36c]
---
0x361 JUMPDEST
0x362 CALLVALUE
0x363 ISZERO
0x364 PUSH2 0x36c
0x367 JUMPI
---
0x361: JUMPDEST 
0x362: V308 = CALLVALUE
0x363: V309 = ISZERO V308
0x364: V310 = 0x36c
0x367: JUMPI 0x36c V309
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x368
[0x368:0x36b]
---
Predecessors: [0x361]
Successors: []
---
0x368 PUSH1 0x0
0x36a DUP1
0x36b REVERT
---
0x368: V311 = 0x0
0x36b: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x36c
[0x36c:0x373]
---
Predecessors: [0x361]
Successors: [0x78e]
---
0x36c JUMPDEST
0x36d PUSH2 0x1ef
0x370 PUSH2 0x78e
0x373 JUMP
---
0x36c: JUMPDEST 
0x36d: V312 = 0x1ef
0x370: V313 = 0x78e
0x373: JUMP 0x78e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ef]
Exit stack: [V12, 0x1ef]

================================

Block 0x374
[0x374:0x375]
---
Predecessors: []
Successors: []
---
0x374 JUMPDEST
0x375 STOP
---
0x374: JUMPDEST 
0x375: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x376
[0x376:0x37c]
---
Predecessors: [0x67]
Successors: [0x37d, 0x381]
---
0x376 JUMPDEST
0x377 CALLVALUE
0x378 ISZERO
0x379 PUSH2 0x381
0x37c JUMPI
---
0x376: JUMPDEST 
0x377: V314 = CALLVALUE
0x378: V315 = ISZERO V314
0x379: V316 = 0x381
0x37c: JUMPI 0x381 V315
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37d
[0x37d:0x380]
---
Predecessors: [0x376]
Successors: []
---
0x37d PUSH1 0x0
0x37f DUP1
0x380 REVERT
---
0x37d: V317 = 0x0
0x380: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x381
[0x381:0x388]
---
Predecessors: [0x376]
Successors: [0x7b6]
---
0x381 JUMPDEST
0x382 PUSH2 0x1ef
0x385 PUSH2 0x7b6
0x388 JUMP
---
0x381: JUMPDEST 
0x382: V318 = 0x1ef
0x385: V319 = 0x7b6
0x388: JUMP 0x7b6
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ef]
Exit stack: [V12, 0x1ef]

================================

Block 0x389
[0x389:0x38a]
---
Predecessors: []
Successors: []
---
0x389 JUMPDEST
0x38a STOP
---
0x389: JUMPDEST 
0x38a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x38b
[0x38b:0x391]
---
Predecessors: [0x72]
Successors: [0x392, 0x396]
---
0x38b JUMPDEST
0x38c CALLVALUE
0x38d ISZERO
0x38e PUSH2 0x396
0x391 JUMPI
---
0x38b: JUMPDEST 
0x38c: V320 = CALLVALUE
0x38d: V321 = ISZERO V320
0x38e: V322 = 0x396
0x391: JUMPI 0x396 V321
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x392
[0x392:0x395]
---
Predecessors: [0x38b]
Successors: []
---
0x392 PUSH1 0x0
0x394 DUP1
0x395 REVERT
---
0x392: V323 = 0x0
0x395: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x396
[0x396:0x3a9]
---
Predecessors: [0x38b]
Successors: [0x7f2]
---
0x396 JUMPDEST
0x397 PUSH2 0x2c5
0x39a PUSH1 0x1
0x39c PUSH1 0xa0
0x39e PUSH1 0x2
0x3a0 EXP
0x3a1 SUB
0x3a2 PUSH1 0x4
0x3a4 CALLDATALOAD
0x3a5 AND
0x3a6 PUSH2 0x7f2
0x3a9 JUMP
---
0x396: JUMPDEST 
0x397: V324 = 0x2c5
0x39a: V325 = 0x1
0x39c: V326 = 0xa0
0x39e: V327 = 0x2
0x3a0: V328 = EXP 0x2 0xa0
0x3a1: V329 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3a2: V330 = 0x4
0x3a4: V331 = CALLDATALOAD 0x4
0x3a5: V332 = AND V331 0xffffffffffffffffffffffffffffffffffffffff
0x3a6: V333 = 0x7f2
0x3a9: JUMP 0x7f2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2c5, V332]
Exit stack: [V12, 0x2c5, V332]

================================

Block 0x3aa
[0x3aa:0x3bb]
---
Predecessors: []
Successors: []
---
0x3aa JUMPDEST
0x3ab PUSH1 0x40
0x3ad MLOAD
0x3ae SWAP1
0x3af DUP2
0x3b0 MSTORE
0x3b1 PUSH1 0x20
0x3b3 ADD
0x3b4 PUSH1 0x40
0x3b6 MLOAD
0x3b7 DUP1
0x3b8 SWAP2
0x3b9 SUB
0x3ba SWAP1
0x3bb RETURN
---
0x3aa: JUMPDEST 
0x3ab: V334 = 0x40
0x3ad: V335 = M[0x40]
0x3b0: M[V335] = S0
0x3b1: V336 = 0x20
0x3b3: V337 = ADD 0x20 V335
0x3b4: V338 = 0x40
0x3b6: V339 = M[0x40]
0x3b9: V340 = SUB V337 V339
0x3bb: RETURN V339 V340
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3bc
[0x3bc:0x3c2]
---
Predecessors: [0x7d]
Successors: [0x3c3, 0x3c7]
---
0x3bc JUMPDEST
0x3bd CALLVALUE
0x3be ISZERO
0x3bf PUSH2 0x3c7
0x3c2 JUMPI
---
0x3bc: JUMPDEST 
0x3bd: V341 = CALLVALUE
0x3be: V342 = ISZERO V341
0x3bf: V343 = 0x3c7
0x3c2: JUMPI 0x3c7 V342
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c3
[0x3c3:0x3c6]
---
Predecessors: [0x3bc]
Successors: []
---
0x3c3 PUSH1 0x0
0x3c5 DUP1
0x3c6 REVERT
---
0x3c3: V344 = 0x0
0x3c6: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3c7
[0x3c7:0x3ce]
---
Predecessors: [0x3bc]
Successors: [0x811]
---
0x3c7 JUMPDEST
0x3c8 PUSH2 0x1ef
0x3cb PUSH2 0x811
0x3ce JUMP
---
0x3c7: JUMPDEST 
0x3c8: V345 = 0x1ef
0x3cb: V346 = 0x811
0x3ce: JUMP 0x811
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ef]
Exit stack: [V12, 0x1ef]

================================

Block 0x3cf
[0x3cf:0x3d0]
---
Predecessors: []
Successors: []
---
0x3cf JUMPDEST
0x3d0 STOP
---
0x3cf: JUMPDEST 
0x3d0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3d1
[0x3d1:0x3d7]
---
Predecessors: [0x88]
Successors: [0x3d8, 0x3dc]
---
0x3d1 JUMPDEST
0x3d2 CALLVALUE
0x3d3 ISZERO
0x3d4 PUSH2 0x3dc
0x3d7 JUMPI
---
0x3d1: JUMPDEST 
0x3d2: V347 = CALLVALUE
0x3d3: V348 = ISZERO V347
0x3d4: V349 = 0x3dc
0x3d7: JUMPI 0x3dc V348
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3d8
[0x3d8:0x3db]
---
Predecessors: [0x3d1]
Successors: []
---
0x3d8 PUSH1 0x0
0x3da DUP1
0x3db REVERT
---
0x3d8: V350 = 0x0
0x3db: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x3dc
[0x3dc:0x3e3]
---
Predecessors: [0x3d1]
Successors: [0x853]
---
0x3dc JUMPDEST
0x3dd PUSH2 0x204
0x3e0 PUSH2 0x853
0x3e3 JUMP
---
0x3dc: JUMPDEST 
0x3dd: V351 = 0x204
0x3e0: V352 = 0x853
0x3e3: JUMP 0x853
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x204]
Exit stack: [V12, 0x204]

================================

Block 0x3e4
[0x3e4:0x407]
---
Predecessors: []
Successors: [0x408]
---
0x3e4 JUMPDEST
0x3e5 PUSH1 0x40
0x3e7 MLOAD
0x3e8 PUSH1 0x20
0x3ea DUP1
0x3eb DUP3
0x3ec MSTORE
0x3ed DUP2
0x3ee SWAP1
0x3ef DUP2
0x3f0 ADD
0x3f1 DUP4
0x3f2 DUP2
0x3f3 DUP2
0x3f4 MLOAD
0x3f5 DUP2
0x3f6 MSTORE
0x3f7 PUSH1 0x20
0x3f9 ADD
0x3fa SWAP2
0x3fb POP
0x3fc DUP1
0x3fd MLOAD
0x3fe SWAP1
0x3ff PUSH1 0x20
0x401 ADD
0x402 SWAP1
0x403 DUP1
0x404 DUP4
0x405 DUP4
0x406 PUSH1 0x0
---
0x3e4: JUMPDEST 
0x3e5: V353 = 0x40
0x3e7: V354 = M[0x40]
0x3e8: V355 = 0x20
0x3ec: M[V354] = 0x20
0x3f0: V356 = ADD V354 0x20
0x3f4: V357 = M[S0]
0x3f6: M[V356] = V357
0x3f7: V358 = 0x20
0x3f9: V359 = ADD 0x20 V356
0x3fd: V360 = M[S0]
0x3ff: V361 = 0x20
0x401: V362 = ADD 0x20 S0
0x406: V363 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V354, V354, V359, V362, V360, V360, V359, V362, 0x0]
Exit stack: [S0, V354, V354, V359, V362, V360, V360, V359, V362, 0x0]

================================

Block 0x408
[0x408:0x410]
---
Predecessors: [0x3e4]
Successors: [0x241, 0x411]
---
0x408 JUMPDEST
0x409 DUP4
0x40a DUP2
0x40b LT
0x40c ISZERO
0x40d PUSH2 0x241
0x410 JUMPI
---
0x408: JUMPDEST 
0x40b: V364 = LT 0x0 V360
0x40c: V365 = ISZERO V364
0x40d: V366 = 0x241
0x410: JUMPI 0x241 V365
---
Entry stack: [S9, V354, V354, V359, V362, V360, V360, V359, V362, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V354, V354, V359, V362, V360, V360, V359, V362, 0x0]

================================

Block 0x411
[0x411:0x418]
---
Predecessors: [0x408]
Successors: [0x419]
---
0x411 DUP1
0x412 DUP3
0x413 ADD
0x414 MLOAD
0x415 DUP2
0x416 DUP5
0x417 ADD
0x418 MSTORE
---
0x413: V367 = ADD V362 0x0
0x414: V368 = M[V367]
0x417: V369 = ADD V359 0x0
0x418: M[V369] = V368
---
Entry stack: [S9, V354, V354, V359, V362, V360, V360, V359, V362, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V354, V354, V359, V362, V360, V360, V359, V362, 0x0]

================================

Block 0x419
[0x419:0x420]
---
Predecessors: [0x411]
Successors: [0x228]
---
0x419 JUMPDEST
0x41a PUSH1 0x20
0x41c ADD
0x41d PUSH2 0x228
0x420 JUMP
---
0x419: JUMPDEST 
0x41a: V370 = 0x20
0x41c: V371 = ADD 0x20 0x0
0x41d: V372 = 0x228
0x420: JUMP 0x228
---
Entry stack: [S9, V354, V354, V359, V362, V360, V360, V359, V362, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V354, V354, V359, V362, V360, V360, V359, V362, 0x20]

================================

Block 0x421
[0x421:0x434]
---
Predecessors: []
Successors: [0x26e, 0x435]
---
0x421 JUMPDEST
0x422 POP
0x423 POP
0x424 POP
0x425 POP
0x426 SWAP1
0x427 POP
0x428 SWAP1
0x429 DUP2
0x42a ADD
0x42b SWAP1
0x42c PUSH1 0x1f
0x42e AND
0x42f DUP1
0x430 ISZERO
0x431 PUSH2 0x26e
0x434 JUMPI
---
0x421: JUMPDEST 
0x42a: V373 = ADD S4 S6
0x42c: V374 = 0x1f
0x42e: V375 = AND 0x1f S4
0x430: V376 = ISZERO V375
0x431: V377 = 0x26e
0x434: JUMPI 0x26e V376
---
Entry stack: []
Stack pops: 7
Stack additions: [V373, V375]
Exit stack: [V373, V375]

================================

Block 0x435
[0x435:0x44d]
---
Predecessors: [0x421]
Successors: [0x44e]
---
0x435 DUP1
0x436 DUP3
0x437 SUB
0x438 DUP1
0x439 MLOAD
0x43a PUSH1 0x1
0x43c DUP4
0x43d PUSH1 0x20
0x43f SUB
0x440 PUSH2 0x100
0x443 EXP
0x444 SUB
0x445 NOT
0x446 AND
0x447 DUP2
0x448 MSTORE
0x449 PUSH1 0x20
0x44b ADD
0x44c SWAP2
0x44d POP
---
0x437: V378 = SUB V373 V375
0x439: V379 = M[V378]
0x43a: V380 = 0x1
0x43d: V381 = 0x20
0x43f: V382 = SUB 0x20 V375
0x440: V383 = 0x100
0x443: V384 = EXP 0x100 V382
0x444: V385 = SUB V384 0x1
0x445: V386 = NOT V385
0x446: V387 = AND V386 V379
0x448: M[V378] = V387
0x449: V388 = 0x20
0x44b: V389 = ADD 0x20 V378
---
Entry stack: [V373, V375]
Stack pops: 2
Stack additions: [V389, S0]
Exit stack: [V389, V375]

================================

Block 0x44e
[0x44e:0x45b]
---
Predecessors: [0x435]
Successors: []
---
0x44e JUMPDEST
0x44f POP
0x450 SWAP3
0x451 POP
0x452 POP
0x453 POP
0x454 PUSH1 0x40
0x456 MLOAD
0x457 DUP1
0x458 SWAP2
0x459 SUB
0x45a SWAP1
0x45b RETURN
---
0x44e: JUMPDEST 
0x454: V390 = 0x40
0x456: V391 = M[0x40]
0x459: V392 = SUB V389 V391
0x45b: RETURN V391 V392
---
Entry stack: [V389, V375]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x45c
[0x45c:0x462]
---
Predecessors: [0x93]
Successors: [0x463, 0x467]
---
0x45c JUMPDEST
0x45d CALLVALUE
0x45e ISZERO
0x45f PUSH2 0x467
0x462 JUMPI
---
0x45c: JUMPDEST 
0x45d: V393 = CALLVALUE
0x45e: V394 = ISZERO V393
0x45f: V395 = 0x467
0x462: JUMPI 0x467 V394
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x463
[0x463:0x466]
---
Predecessors: [0x45c]
Successors: []
---
0x463 PUSH1 0x0
0x465 DUP1
0x466 REVERT
---
0x463: V396 = 0x0
0x466: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x467
[0x467:0x47d]
---
Predecessors: [0x45c]
Successors: [0x895]
---
0x467 JUMPDEST
0x468 PUSH2 0x29e
0x46b PUSH1 0x1
0x46d PUSH1 0xa0
0x46f PUSH1 0x2
0x471 EXP
0x472 SUB
0x473 PUSH1 0x4
0x475 CALLDATALOAD
0x476 AND
0x477 PUSH1 0x24
0x479 CALLDATALOAD
0x47a PUSH2 0x895
0x47d JUMP
---
0x467: JUMPDEST 
0x468: V397 = 0x29e
0x46b: V398 = 0x1
0x46d: V399 = 0xa0
0x46f: V400 = 0x2
0x471: V401 = EXP 0x2 0xa0
0x472: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x473: V403 = 0x4
0x475: V404 = CALLDATALOAD 0x4
0x476: V405 = AND V404 0xffffffffffffffffffffffffffffffffffffffff
0x477: V406 = 0x24
0x479: V407 = CALLDATALOAD 0x24
0x47a: V408 = 0x895
0x47d: JUMP 0x895
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29e, V405, V407]
Exit stack: [V12, 0x29e, V405, V407]

================================

Block 0x47e
[0x47e:0x491]
---
Predecessors: []
Successors: []
---
0x47e JUMPDEST
0x47f PUSH1 0x40
0x481 MLOAD
0x482 SWAP1
0x483 ISZERO
0x484 ISZERO
0x485 DUP2
0x486 MSTORE
0x487 PUSH1 0x20
0x489 ADD
0x48a PUSH1 0x40
0x48c MLOAD
0x48d DUP1
0x48e SWAP2
0x48f SUB
0x490 SWAP1
0x491 RETURN
---
0x47e: JUMPDEST 
0x47f: V409 = 0x40
0x481: V410 = M[0x40]
0x483: V411 = ISZERO S0
0x484: V412 = ISZERO V411
0x486: M[V410] = V412
0x487: V413 = 0x20
0x489: V414 = ADD 0x20 V410
0x48a: V415 = 0x40
0x48c: V416 = M[0x40]
0x48f: V417 = SUB V414 V416
0x491: RETURN V416 V417
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x492
[0x492:0x498]
---
Predecessors: [0x9e]
Successors: [0x499, 0x49d]
---
0x492 JUMPDEST
0x493 CALLVALUE
0x494 ISZERO
0x495 PUSH2 0x49d
0x498 JUMPI
---
0x492: JUMPDEST 
0x493: V418 = CALLVALUE
0x494: V419 = ISZERO V418
0x495: V420 = 0x49d
0x498: JUMPI 0x49d V419
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x499
[0x499:0x49c]
---
Predecessors: [0x492]
Successors: []
---
0x499 PUSH1 0x0
0x49b DUP1
0x49c REVERT
---
0x499: V421 = 0x0
0x49c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x49d
[0x49d:0x4a4]
---
Predecessors: [0x492]
Successors: [0x975]
---
0x49d JUMPDEST
0x49e PUSH2 0x4a5
0x4a1 PUSH2 0x975
0x4a4 JUMP
---
0x49d: JUMPDEST 
0x49e: V422 = 0x4a5
0x4a1: V423 = 0x975
0x4a4: JUMP 0x975
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x4a5]
Exit stack: [V12, 0x4a5]

================================

Block 0x4a5
[0x4a5:0x4ca]
---
Predecessors: [0x989]
Successors: []
---
0x4a5 JUMPDEST
0x4a6 PUSH1 0x40
0x4a8 MLOAD
0x4a9 SWAP3
0x4aa DUP4
0x4ab MSTORE
0x4ac PUSH1 0x20
0x4ae DUP4
0x4af ADD
0x4b0 SWAP2
0x4b1 SWAP1
0x4b2 SWAP2
0x4b3 MSTORE
0x4b4 ISZERO
0x4b5 ISZERO
0x4b6 PUSH1 0x40
0x4b8 DUP1
0x4b9 DUP4
0x4ba ADD
0x4bb SWAP2
0x4bc SWAP1
0x4bd SWAP2
0x4be MSTORE
0x4bf PUSH1 0x60
0x4c1 SWAP1
0x4c2 SWAP2
0x4c3 ADD
0x4c4 SWAP1
0x4c5 MLOAD
0x4c6 DUP1
0x4c7 SWAP2
0x4c8 SUB
0x4c9 SWAP1
0x4ca RETURN
---
0x4a5: JUMPDEST 
0x4a6: V424 = 0x40
0x4a8: V425 = M[0x40]
0x4ab: M[V425] = V787
0x4ac: V426 = 0x20
0x4af: V427 = ADD V425 0x20
0x4b3: M[V427] = V789
0x4b4: V428 = ISZERO V797
0x4b5: V429 = ISZERO V428
0x4b6: V430 = 0x40
0x4ba: V431 = ADD V425 0x40
0x4be: M[V431] = V429
0x4bf: V432 = 0x60
0x4c3: V433 = ADD V425 0x60
0x4c5: V434 = M[0x40]
0x4c8: V435 = SUB V433 V434
0x4ca: RETURN V434 V435
---
Entry stack: [V12, V787, V789, V797]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x4cb
[0x4cb:0x4d1]
---
Predecessors: [0xa9]
Successors: [0x4d2, 0x4d6]
---
0x4cb JUMPDEST
0x4cc CALLVALUE
0x4cd ISZERO
0x4ce PUSH2 0x4d6
0x4d1 JUMPI
---
0x4cb: JUMPDEST 
0x4cc: V436 = CALLVALUE
0x4cd: V437 = ISZERO V436
0x4ce: V438 = 0x4d6
0x4d1: JUMPI 0x4d6 V437
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d2
[0x4d2:0x4d5]
---
Predecessors: [0x4cb]
Successors: []
---
0x4d2 PUSH1 0x0
0x4d4 DUP1
0x4d5 REVERT
---
0x4d2: V439 = 0x0
0x4d5: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d6
[0x4d6:0x4dd]
---
Predecessors: [0x4cb]
Successors: [0x98e]
---
0x4d6 JUMPDEST
0x4d7 PUSH2 0x29e
0x4da PUSH2 0x98e
0x4dd JUMP
---
0x4d6: JUMPDEST 
0x4d7: V440 = 0x29e
0x4da: V441 = 0x98e
0x4dd: JUMP 0x98e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29e]
Exit stack: [V12, 0x29e]

================================

Block 0x4de
[0x4de:0x4f1]
---
Predecessors: []
Successors: []
---
0x4de JUMPDEST
0x4df PUSH1 0x40
0x4e1 MLOAD
0x4e2 SWAP1
0x4e3 ISZERO
0x4e4 ISZERO
0x4e5 DUP2
0x4e6 MSTORE
0x4e7 PUSH1 0x20
0x4e9 ADD
0x4ea PUSH1 0x40
0x4ec MLOAD
0x4ed DUP1
0x4ee SWAP2
0x4ef SUB
0x4f0 SWAP1
0x4f1 RETURN
---
0x4de: JUMPDEST 
0x4df: V442 = 0x40
0x4e1: V443 = M[0x40]
0x4e3: V444 = ISZERO S0
0x4e4: V445 = ISZERO V444
0x4e6: M[V443] = V445
0x4e7: V446 = 0x20
0x4e9: V447 = ADD 0x20 V443
0x4ea: V448 = 0x40
0x4ec: V449 = M[0x40]
0x4ef: V450 = SUB V447 V449
0x4f1: RETURN V449 V450
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4f2
[0x4f2:0x4f8]
---
Predecessors: [0xb4]
Successors: [0x4f9, 0x4fd]
---
0x4f2 JUMPDEST
0x4f3 CALLVALUE
0x4f4 ISZERO
0x4f5 PUSH2 0x4fd
0x4f8 JUMPI
---
0x4f2: JUMPDEST 
0x4f3: V451 = CALLVALUE
0x4f4: V452 = ISZERO V451
0x4f5: V453 = 0x4fd
0x4f8: JUMPI 0x4fd V452
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4f9
[0x4f9:0x4fc]
---
Predecessors: [0x4f2]
Successors: []
---
0x4f9 PUSH1 0x0
0x4fb DUP1
0x4fc REVERT
---
0x4f9: V454 = 0x0
0x4fc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4fd
[0x4fd:0x516]
---
Predecessors: [0x4f2]
Successors: [0x99e]
---
0x4fd JUMPDEST
0x4fe PUSH2 0x2c5
0x501 PUSH1 0x1
0x503 PUSH1 0xa0
0x505 PUSH1 0x2
0x507 EXP
0x508 SUB
0x509 PUSH1 0x4
0x50b CALLDATALOAD
0x50c DUP2
0x50d AND
0x50e SWAP1
0x50f PUSH1 0x24
0x511 CALLDATALOAD
0x512 AND
0x513 PUSH2 0x99e
0x516 JUMP
---
0x4fd: JUMPDEST 
0x4fe: V455 = 0x2c5
0x501: V456 = 0x1
0x503: V457 = 0xa0
0x505: V458 = 0x2
0x507: V459 = EXP 0x2 0xa0
0x508: V460 = SUB 0x10000000000000000000000000000000000000000 0x1
0x509: V461 = 0x4
0x50b: V462 = CALLDATALOAD 0x4
0x50d: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V462
0x50f: V464 = 0x24
0x511: V465 = CALLDATALOAD 0x24
0x512: V466 = AND V465 0xffffffffffffffffffffffffffffffffffffffff
0x513: V467 = 0x99e
0x516: JUMP 0x99e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x2c5, V463, V466]
Exit stack: [V12, 0x2c5, V463, V466]

================================

Block 0x517
[0x517:0x528]
---
Predecessors: []
Successors: []
---
0x517 JUMPDEST
0x518 PUSH1 0x40
0x51a MLOAD
0x51b SWAP1
0x51c DUP2
0x51d MSTORE
0x51e PUSH1 0x20
0x520 ADD
0x521 PUSH1 0x40
0x523 MLOAD
0x524 DUP1
0x525 SWAP2
0x526 SUB
0x527 SWAP1
0x528 RETURN
---
0x517: JUMPDEST 
0x518: V468 = 0x40
0x51a: V469 = M[0x40]
0x51d: M[V469] = S0
0x51e: V470 = 0x20
0x520: V471 = ADD 0x20 V469
0x521: V472 = 0x40
0x523: V473 = M[0x40]
0x526: V474 = SUB V471 V473
0x528: RETURN V473 V474
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x529
[0x529:0x52f]
---
Predecessors: [0xbf]
Successors: [0x530, 0x534]
---
0x529 JUMPDEST
0x52a CALLVALUE
0x52b ISZERO
0x52c PUSH2 0x534
0x52f JUMPI
---
0x529: JUMPDEST 
0x52a: V475 = CALLVALUE
0x52b: V476 = ISZERO V475
0x52c: V477 = 0x534
0x52f: JUMPI 0x534 V476
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x530
[0x530:0x533]
---
Predecessors: [0x529]
Successors: []
---
0x530 PUSH1 0x0
0x532 DUP1
0x533 REVERT
---
0x530: V478 = 0x0
0x533: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x534
[0x534:0x547]
---
Predecessors: [0x529]
Successors: [0x9cb]
---
0x534 JUMPDEST
0x535 PUSH2 0x29e
0x538 PUSH1 0x1
0x53a PUSH1 0xa0
0x53c PUSH1 0x2
0x53e EXP
0x53f SUB
0x540 PUSH1 0x4
0x542 CALLDATALOAD
0x543 AND
0x544 PUSH2 0x9cb
0x547 JUMP
---
0x534: JUMPDEST 
0x535: V479 = 0x29e
0x538: V480 = 0x1
0x53a: V481 = 0xa0
0x53c: V482 = 0x2
0x53e: V483 = EXP 0x2 0xa0
0x53f: V484 = SUB 0x10000000000000000000000000000000000000000 0x1
0x540: V485 = 0x4
0x542: V486 = CALLDATALOAD 0x4
0x543: V487 = AND V486 0xffffffffffffffffffffffffffffffffffffffff
0x544: V488 = 0x9cb
0x547: JUMP 0x9cb
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x29e, V487]
Exit stack: [V12, 0x29e, V487]

================================

Block 0x548
[0x548:0x55b]
---
Predecessors: []
Successors: []
---
0x548 JUMPDEST
0x549 PUSH1 0x40
0x54b MLOAD
0x54c SWAP1
0x54d ISZERO
0x54e ISZERO
0x54f DUP2
0x550 MSTORE
0x551 PUSH1 0x20
0x553 ADD
0x554 PUSH1 0x40
0x556 MLOAD
0x557 DUP1
0x558 SWAP2
0x559 SUB
0x55a SWAP1
0x55b RETURN
---
0x548: JUMPDEST 
0x549: V489 = 0x40
0x54b: V490 = M[0x40]
0x54d: V491 = ISZERO S0
0x54e: V492 = ISZERO V491
0x550: M[V490] = V492
0x551: V493 = 0x20
0x553: V494 = ADD 0x20 V490
0x554: V495 = 0x40
0x556: V496 = M[0x40]
0x559: V497 = SUB V494 V496
0x55b: RETURN V496 V497
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x55c
[0x55c:0x563]
---
Predecessors: [0x1fc]
Successors: [0xaea]
---
0x55c JUMPDEST
0x55d PUSH2 0x564
0x560 PUSH2 0xaea
0x563 JUMP
---
0x55c: JUMPDEST 
0x55d: V498 = 0x564
0x560: V499 = 0xaea
0x563: JUMP 0xaea
---
Entry stack: [V12, 0x204]
Stack pops: 0
Stack additions: [0x564]
Exit stack: [V12, 0x204, 0x564]

================================

Block 0x564
[0x564:0x59a]
---
Predecessors: [0xaea]
Successors: [0x59b]
---
0x564 JUMPDEST
0x565 PUSH1 0x40
0x567 DUP1
0x568 MLOAD
0x569 SWAP1
0x56a DUP2
0x56b ADD
0x56c PUSH1 0x40
0x56e MSTORE
0x56f PUSH1 0xa
0x571 DUP2
0x572 MSTORE
0x573 PUSH32 0x5a45524f20746f6b656e00000000000000000000000000000000000000000000
0x594 PUSH1 0x20
0x596 DUP3
0x597 ADD
0x598 MSTORE
0x599 SWAP1
0x59a POP
---
0x564: JUMPDEST 
0x565: V500 = 0x40
0x568: V501 = M[0x40]
0x56b: V502 = ADD V501 0x40
0x56c: V503 = 0x40
0x56e: M[0x40] = V502
0x56f: V504 = 0xa
0x572: M[V501] = 0xa
0x573: V505 = 0x5a45524f20746f6b656e00000000000000000000000000000000000000000000
0x594: V506 = 0x20
0x597: V507 = ADD V501 0x20
0x598: M[V507] = 0x5a45524f20746f6b656e00000000000000000000000000000000000000000000
---
Entry stack: [V12, 0x204, V942]
Stack pops: 1
Stack additions: [V501]
Exit stack: [V12, 0x204, V501]

================================

Block 0x59b
[0x59b:0x59d]
---
Predecessors: [0x564]
Successors: [0x204]
---
0x59b JUMPDEST
0x59c SWAP1
0x59d JUMP
---
0x59b: JUMPDEST 
0x59d: JUMP 0x204
---
Entry stack: [V12, 0x204, V501]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V501]

================================

Block 0x59e
[0x59e:0x5a9]
---
Predecessors: [0x287]
Successors: [0x5aa, 0x5d3]
---
0x59e JUMPDEST
0x59f PUSH1 0x0
0x5a1 DUP2
0x5a2 ISZERO
0x5a3 DUP1
0x5a4 ISZERO
0x5a5 SWAP1
0x5a6 PUSH2 0x5d3
0x5a9 JUMPI
---
0x59e: JUMPDEST 
0x59f: V508 = 0x0
0x5a2: V509 = ISZERO V228
0x5a4: V510 = ISZERO V509
0x5a6: V511 = 0x5d3
0x5a9: JUMPI 0x5d3 V509
---
Entry stack: [V12, 0x29e, V226, V228]
Stack pops: 1
Stack additions: [S0, 0x0, V510]
Exit stack: [V12, 0x29e, V226, V228, 0x0, V510]

================================

Block 0x5aa
[0x5aa:0x5d2]
---
Predecessors: [0x59e]
Successors: [0x5d3]
---
0x5aa POP
0x5ab PUSH1 0x1
0x5ad PUSH1 0xa0
0x5af PUSH1 0x2
0x5b1 EXP
0x5b2 SUB
0x5b3 CALLER
0x5b4 DUP2
0x5b5 AND
0x5b6 PUSH1 0x0
0x5b8 SWAP1
0x5b9 DUP2
0x5ba MSTORE
0x5bb PUSH1 0x2
0x5bd PUSH1 0x20
0x5bf SWAP1
0x5c0 DUP2
0x5c1 MSTORE
0x5c2 PUSH1 0x40
0x5c4 DUP1
0x5c5 DUP4
0x5c6 SHA3
0x5c7 SWAP4
0x5c8 DUP8
0x5c9 AND
0x5ca DUP4
0x5cb MSTORE
0x5cc SWAP3
0x5cd SWAP1
0x5ce MSTORE
0x5cf SHA3
0x5d0 SLOAD
0x5d1 ISZERO
0x5d2 ISZERO
---
0x5ab: V512 = 0x1
0x5ad: V513 = 0xa0
0x5af: V514 = 0x2
0x5b1: V515 = EXP 0x2 0xa0
0x5b2: V516 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5b3: V517 = CALLER
0x5b5: V518 = AND 0xffffffffffffffffffffffffffffffffffffffff V517
0x5b6: V519 = 0x0
0x5ba: M[0x0] = V518
0x5bb: V520 = 0x2
0x5bd: V521 = 0x20
0x5c1: M[0x20] = 0x2
0x5c2: V522 = 0x40
0x5c6: V523 = SHA3 0x0 0x40
0x5c9: V524 = AND V226 0xffffffffffffffffffffffffffffffffffffffff
0x5cb: M[0x0] = V524
0x5ce: M[0x20] = V523
0x5cf: V525 = SHA3 0x0 0x40
0x5d0: V526 = S[V525]
0x5d1: V527 = ISZERO V526
0x5d2: V528 = ISZERO V527
---
Entry stack: [V12, 0x29e, V226, V228, 0x0, V510]
Stack pops: 4
Stack additions: [S3, S2, S1, V528]
Exit stack: [V12, 0x29e, V226, V228, 0x0, V528]

================================

Block 0x5d3
[0x5d3:0x5d8]
---
Predecessors: [0x59e, 0x5aa]
Successors: [0x5d9, 0x5e0]
---
0x5d3 JUMPDEST
0x5d4 ISZERO
0x5d5 PUSH2 0x5e0
0x5d8 JUMPI
---
0x5d3: JUMPDEST 
0x5d4: V529 = ISZERO S0
0x5d5: V530 = 0x5e0
0x5d8: JUMPI 0x5e0 V529
---
Entry stack: [V12, 0x29e, V226, V228, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x29e, V226, V228, 0x0]

================================

Block 0x5d9
[0x5d9:0x5df]
---
Predecessors: [0x5d3]
Successors: [0x644]
---
0x5d9 POP
0x5da PUSH1 0x0
0x5dc PUSH2 0x644
0x5df JUMP
---
0x5da: V531 = 0x0
0x5dc: V532 = 0x644
0x5df: JUMP 0x644
---
Entry stack: [V12, 0x29e, V226, V228, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x29e, V226, V228, 0x0]

================================

Block 0x5e0
[0x5e0:0x643]
---
Predecessors: [0x5d3]
Successors: [0x644]
---
0x5e0 JUMPDEST
0x5e1 PUSH1 0x1
0x5e3 PUSH1 0xa0
0x5e5 PUSH1 0x2
0x5e7 EXP
0x5e8 SUB
0x5e9 CALLER
0x5ea DUP2
0x5eb AND
0x5ec PUSH1 0x0
0x5ee DUP2
0x5ef DUP2
0x5f0 MSTORE
0x5f1 PUSH1 0x2
0x5f3 PUSH1 0x20
0x5f5 SWAP1
0x5f6 DUP2
0x5f7 MSTORE
0x5f8 PUSH1 0x40
0x5fa DUP1
0x5fb DUP4
0x5fc SHA3
0x5fd SWAP5
0x5fe DUP9
0x5ff AND
0x600 DUP1
0x601 DUP5
0x602 MSTORE
0x603 SWAP5
0x604 SWAP1
0x605 SWAP2
0x606 MSTORE
0x607 SWAP1
0x608 DUP2
0x609 SWAP1
0x60a SHA3
0x60b DUP6
0x60c SWAP1
0x60d SSTORE
0x60e PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x62f SWAP1
0x630 DUP6
0x631 SWAP1
0x632 MLOAD
0x633 SWAP1
0x634 DUP2
0x635 MSTORE
0x636 PUSH1 0x20
0x638 ADD
0x639 PUSH1 0x40
0x63b MLOAD
0x63c DUP1
0x63d SWAP2
0x63e SUB
0x63f SWAP1
0x640 LOG3
0x641 POP
0x642 PUSH1 0x1
---
0x5e0: JUMPDEST 
0x5e1: V533 = 0x1
0x5e3: V534 = 0xa0
0x5e5: V535 = 0x2
0x5e7: V536 = EXP 0x2 0xa0
0x5e8: V537 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5e9: V538 = CALLER
0x5eb: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0x5ec: V540 = 0x0
0x5f0: M[0x0] = V539
0x5f1: V541 = 0x2
0x5f3: V542 = 0x20
0x5f7: M[0x20] = 0x2
0x5f8: V543 = 0x40
0x5fc: V544 = SHA3 0x0 0x40
0x5ff: V545 = AND V226 0xffffffffffffffffffffffffffffffffffffffff
0x602: M[0x0] = V545
0x606: M[0x20] = V544
0x60a: V546 = SHA3 0x0 0x40
0x60d: S[V546] = V228
0x60e: V547 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x632: V548 = M[0x40]
0x635: M[V548] = V228
0x636: V549 = 0x20
0x638: V550 = ADD 0x20 V548
0x639: V551 = 0x40
0x63b: V552 = M[0x40]
0x63e: V553 = SUB V550 V552
0x640: LOG V552 V553 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V539 V545
0x642: V554 = 0x1
---
Entry stack: [V12, 0x29e, V226, V228, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V12, 0x29e, V226, V228, 0x1]

================================

Block 0x644
[0x644:0x649]
---
Predecessors: [0x5d9, 0x5e0]
Successors: [0x29e]
---
0x644 JUMPDEST
0x645 SWAP3
0x646 SWAP2
0x647 POP
0x648 POP
0x649 JUMP
---
0x644: JUMPDEST 
0x649: JUMP 0x29e
---
Entry stack: [V12, 0x29e, V226, V228, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x64a
[0x64a:0x64f]
---
Predecessors: [0x2bd]
Successors: [0x2c5]
---
0x64a JUMPDEST
0x64b PUSH1 0x3
0x64d SLOAD
0x64e DUP2
0x64f JUMP
---
0x64a: JUMPDEST 
0x64b: V555 = 0x3
0x64d: V556 = S[0x3]
0x64f: JUMP 0x2c5
---
Entry stack: [V12, 0x2c5]
Stack pops: 1
Stack additions: [S0, V556]
Exit stack: [V12, 0x2c5, V556]

================================

Block 0x650
[0x650:0x655]
---
Predecessors: [0x2e2]
Successors: [0x2c5]
---
0x650 JUMPDEST
0x651 PUSH1 0x4
0x653 SLOAD
0x654 DUP2
0x655 JUMP
---
0x650: JUMPDEST 
0x651: V557 = 0x4
0x653: V558 = S[0x4]
0x655: JUMP 0x2c5
---
Entry stack: [V12, 0x2c5]
Stack pops: 1
Stack additions: [S0, V558]
Exit stack: [V12, 0x2c5, V558]

================================

Block 0x656
[0x656:0x666]
---
Predecessors: [0x307]
Successors: [0x667, 0x66b]
---
0x656 JUMPDEST
0x657 PUSH1 0x0
0x659 DUP1
0x65a DUP1
0x65b DUP1
0x65c DUP1
0x65d DUP1
0x65e PUSH1 0x64
0x660 CALLDATASIZE
0x661 LT
0x662 ISZERO
0x663 PUSH2 0x66b
0x666 JUMPI
---
0x656: JUMPDEST 
0x657: V559 = 0x0
0x65e: V560 = 0x64
0x660: V561 = CALLDATASIZE
0x661: V562 = LT V561 0x64
0x662: V563 = ISZERO V562
0x663: V564 = 0x66b
0x666: JUMPI 0x66b V563
---
Entry stack: [V12, 0x29e, V277, V280, V282]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x29e, V277, V280, V282, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x667
[0x667:0x66a]
---
Predecessors: [0x656]
Successors: [0x77b]
---
0x667 PUSH2 0x77b
0x66a JUMP
---
0x667: V565 = 0x77b
0x66a: JUMP 0x77b
---
Entry stack: [V12, 0x29e, V277, V280, V282, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x29e, V277, V280, V282, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x66b
[0x66b:0x672]
---
Predecessors: [0x656]
Successors: [0x673, 0x67b]
---
0x66b JUMPDEST
0x66c DUP7
0x66d ISZERO
0x66e ISZERO
0x66f PUSH2 0x67b
0x672 JUMPI
---
0x66b: JUMPDEST 
0x66d: V566 = ISZERO V282
0x66e: V567 = ISZERO V566
0x66f: V568 = 0x67b
0x672: JUMPI 0x67b V567
---
Entry stack: [V12, 0x29e, V277, V280, V282, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x29e, V277, V280, V282, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x673
[0x673:0x67a]
---
Predecessors: [0x66b]
Successors: [0x77b]
---
0x673 PUSH1 0x0
0x675 SWAP6
0x676 POP
0x677 PUSH2 0x77b
0x67a JUMP
---
0x673: V569 = 0x0
0x677: V570 = 0x77b
0x67a: JUMP 0x77b
---
Entry stack: [V12, 0x29e, V277, V280, V282, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x29e, V277, V280, V282, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x67b
[0x67b:0x6d7]
---
Predecessors: [0x66b]
Successors: [0x6d8, 0x6da]
---
0x67b JUMPDEST
0x67c POP
0x67d POP
0x67e POP
0x67f POP
0x680 PUSH1 0x1
0x682 PUSH1 0xa0
0x684 PUSH1 0x2
0x686 EXP
0x687 SUB
0x688 DUP6
0x689 DUP2
0x68a AND
0x68b PUSH1 0x0
0x68d SWAP1
0x68e DUP2
0x68f MSTORE
0x690 PUSH1 0x1
0x692 PUSH1 0x20
0x694 DUP2
0x695 DUP2
0x696 MSTORE
0x697 PUSH1 0x40
0x699 DUP1
0x69a DUP5
0x69b SHA3
0x69c SLOAD
0x69d PUSH1 0x2
0x69f DUP4
0x6a0 MSTORE
0x6a1 DUP2
0x6a2 DUP6
0x6a3 SHA3
0x6a4 CALLER
0x6a5 DUP8
0x6a6 AND
0x6a7 DUP7
0x6a8 MSTORE
0x6a9 DUP4
0x6aa MSTORE
0x6ab DUP2
0x6ac DUP6
0x6ad SHA3
0x6ae SLOAD
0x6af SWAP6
0x6b0 DUP11
0x6b1 AND
0x6b2 DUP6
0x6b3 MSTORE
0x6b4 SWAP3
0x6b5 SWAP1
0x6b6 SWAP2
0x6b7 MSTORE
0x6b8 SWAP1
0x6b9 SWAP2
0x6ba SHA3
0x6bb SLOAD
0x6bc SWAP1
0x6bd SWAP3
0x6be POP
0x6bf DUP5
0x6c0 DUP4
0x6c1 GT
0x6c2 DUP1
0x6c3 ISZERO
0x6c4 SWAP2
0x6c5 DUP7
0x6c6 DUP5
0x6c7 GT
0x6c8 ISZERO
0x6c9 SWAP2
0x6ca DUP8
0x6cb DUP3
0x6cc ADD
0x6cd SWAP2
0x6ce SWAP1
0x6cf SWAP2
0x6d0 GT
0x6d1 SWAP1
0x6d2 DUP4
0x6d3 SWAP1
0x6d4 PUSH2 0x6da
0x6d7 JUMPI
---
0x67b: JUMPDEST 
0x680: V571 = 0x1
0x682: V572 = 0xa0
0x684: V573 = 0x2
0x686: V574 = EXP 0x2 0xa0
0x687: V575 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68a: V576 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x68b: V577 = 0x0
0x68f: M[0x0] = V576
0x690: V578 = 0x1
0x692: V579 = 0x20
0x696: M[0x20] = 0x1
0x697: V580 = 0x40
0x69b: V581 = SHA3 0x0 0x40
0x69c: V582 = S[V581]
0x69d: V583 = 0x2
0x6a0: M[0x20] = 0x2
0x6a3: V584 = SHA3 0x0 0x40
0x6a4: V585 = CALLER
0x6a6: V586 = AND 0xffffffffffffffffffffffffffffffffffffffff V585
0x6a8: M[0x0] = V586
0x6aa: M[0x20] = V584
0x6ad: V587 = SHA3 0x0 0x40
0x6ae: V588 = S[V587]
0x6b1: V589 = AND V280 0xffffffffffffffffffffffffffffffffffffffff
0x6b3: M[0x0] = V589
0x6b7: M[0x20] = 0x1
0x6ba: V590 = SHA3 0x0 0x40
0x6bb: V591 = S[V590]
0x6c1: V592 = GT V582 V282
0x6c3: V593 = ISZERO V592
0x6c7: V594 = GT V588 V282
0x6c8: V595 = ISZERO V594
0x6cc: V596 = ADD V591 V282
0x6d0: V597 = GT V596 V591
0x6d4: V598 = 0x6da
0x6d7: JUMPI 0x6da V592
---
Entry stack: [V12, 0x29e, V277, V280, V282, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V582, V588, V593, V595, V597, V593]
Exit stack: [V12, 0x29e, V277, V280, V282, 0x0, V582, V588, V593, V595, V597, V593]

================================

Block 0x6d8
[0x6d8:0x6d9]
---
Predecessors: [0x67b]
Successors: [0x6da]
---
0x6d8 POP
0x6d9 DUP2
---
0x6d8: NOP 
---
Entry stack: [V12, 0x29e, V277, V280, V282, 0x0, V582, V588, V593, V595, V597, V593]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V12, 0x29e, V277, V280, V282, 0x0, V582, V588, V593, V595, V597, V595]

================================

Block 0x6da
[0x6da:0x6e0]
---
Predecessors: [0x67b, 0x6d8]
Successors: [0x6e1, 0x6e4]
---
0x6da JUMPDEST
0x6db DUP1
0x6dc ISZERO
0x6dd PUSH2 0x6e4
0x6e0 JUMPI
---
0x6da: JUMPDEST 
0x6dc: V599 = ISZERO S0
0x6dd: V600 = 0x6e4
0x6e0: JUMPI 0x6e4 V599
---
Entry stack: [V12, 0x29e, V277, V280, V282, 0x0, V582, V588, V593, V595, V597, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x29e, V277, V280, V282, 0x0, V582, V588, V593, V595, V597, S0]

================================

Block 0x6e1
[0x6e1:0x6e3]
---
Predecessors: [0x6da]
Successors: [0x6e4]
---
0x6e1 POP
0x6e2 DUP1
0x6e3 ISZERO
---
0x6e3: V601 = ISZERO V597
---
Entry stack: [V12, 0x29e, V277, V280, V282, 0x0, V582, V588, V593, V595, V597, S0]
Stack pops: 2
Stack additions: [S1, V601]
Exit stack: [V12, 0x29e, V277, V280, V282, 0x0, V582, V588, V593, V595, V597, V601]

================================

Block 0x6e4
[0x6e4:0x6e9]
---
Predecessors: [0x6da, 0x6e1]
Successors: [0x6ea, 0x776]
---
0x6e4 JUMPDEST
0x6e5 ISZERO
0x6e6 PUSH2 0x776
0x6e9 JUMPI
---
0x6e4: JUMPDEST 
0x6e5: V602 = ISZERO S0
0x6e6: V603 = 0x776
0x6e9: JUMPI 0x776 V602
---
Entry stack: [V12, 0x29e, V277, V280, V282, 0x0, V582, V588, V593, V595, V597, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x29e, V277, V280, V282, 0x0, V582, V588, V593, V595, V597]

================================

Block 0x6ea
[0x6ea:0x775]
---
Predecessors: [0x6e4]
Successors: [0x77b]
---
0x6ea PUSH1 0x1
0x6ec PUSH1 0xa0
0x6ee PUSH1 0x2
0x6f0 EXP
0x6f1 SUB
0x6f2 DUP1
0x6f3 DUP10
0x6f4 AND
0x6f5 PUSH1 0x0
0x6f7 DUP2
0x6f8 DUP2
0x6f9 MSTORE
0x6fa PUSH1 0x1
0x6fc PUSH1 0x20
0x6fe SWAP1
0x6ff DUP2
0x700 MSTORE
0x701 PUSH1 0x40
0x703 DUP1
0x704 DUP4
0x705 SHA3
0x706 DUP1
0x707 SLOAD
0x708 DUP14
0x709 ADD
0x70a SWAP1
0x70b SSTORE
0x70c DUP14
0x70d DUP6
0x70e AND
0x70f DUP1
0x710 DUP5
0x711 MSTORE
0x712 DUP2
0x713 DUP5
0x714 SHA3
0x715 DUP1
0x716 SLOAD
0x717 DUP15
0x718 SWAP1
0x719 SUB
0x71a SWAP1
0x71b SSTORE
0x71c PUSH1 0x2
0x71e DUP4
0x71f MSTORE
0x720 DUP2
0x721 DUP5
0x722 SHA3
0x723 CALLER
0x724 SWAP1
0x725 SWAP7
0x726 AND
0x727 DUP5
0x728 MSTORE
0x729 SWAP5
0x72a SWAP1
0x72b SWAP2
0x72c MSTORE
0x72d SWAP1
0x72e DUP2
0x72f SWAP1
0x730 SHA3
0x731 DUP1
0x732 SLOAD
0x733 DUP12
0x734 SWAP1
0x735 SUB
0x736 SWAP1
0x737 SSTORE
0x738 SWAP1
0x739 SWAP2
0x73a SWAP1
0x73b PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x75c SWAP1
0x75d DUP11
0x75e SWAP1
0x75f MLOAD
0x760 SWAP1
0x761 DUP2
0x762 MSTORE
0x763 PUSH1 0x20
0x765 ADD
0x766 PUSH1 0x40
0x768 MLOAD
0x769 DUP1
0x76a SWAP2
0x76b SUB
0x76c SWAP1
0x76d LOG3
0x76e PUSH1 0x1
0x770 SWAP6
0x771 POP
0x772 PUSH2 0x77b
0x775 JUMP
---
0x6ea: V604 = 0x1
0x6ec: V605 = 0xa0
0x6ee: V606 = 0x2
0x6f0: V607 = EXP 0x2 0xa0
0x6f1: V608 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6f4: V609 = AND V280 0xffffffffffffffffffffffffffffffffffffffff
0x6f5: V610 = 0x0
0x6f9: M[0x0] = V609
0x6fa: V611 = 0x1
0x6fc: V612 = 0x20
0x700: M[0x20] = 0x1
0x701: V613 = 0x40
0x705: V614 = SHA3 0x0 0x40
0x707: V615 = S[V614]
0x709: V616 = ADD V282 V615
0x70b: S[V614] = V616
0x70e: V617 = AND 0xffffffffffffffffffffffffffffffffffffffff V277
0x711: M[0x0] = V617
0x714: V618 = SHA3 0x0 0x40
0x716: V619 = S[V618]
0x719: V620 = SUB V619 V282
0x71b: S[V618] = V620
0x71c: V621 = 0x2
0x71f: M[0x20] = 0x2
0x722: V622 = SHA3 0x0 0x40
0x723: V623 = CALLER
0x726: V624 = AND 0xffffffffffffffffffffffffffffffffffffffff V623
0x728: M[0x0] = V624
0x72c: M[0x20] = V622
0x730: V625 = SHA3 0x0 0x40
0x732: V626 = S[V625]
0x735: V627 = SUB V626 V282
0x737: S[V625] = V627
0x73b: V628 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x75f: V629 = M[0x40]
0x762: M[V629] = V282
0x763: V630 = 0x20
0x765: V631 = ADD 0x20 V629
0x766: V632 = 0x40
0x768: V633 = M[0x40]
0x76b: V634 = SUB V631 V633
0x76d: LOG V633 V634 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V617 V609
0x76e: V635 = 0x1
0x772: V636 = 0x77b
0x775: JUMP 0x77b
---
Entry stack: [V12, 0x29e, V277, V280, V282, 0x0, V582, V588, V593, V595, V597]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x29e, V277, V280, V282, 0x1, V582, V588, V593, V595, V597]

================================

Block 0x776
[0x776:0x77a]
---
Predecessors: [0x6e4]
Successors: [0x77b]
---
0x776 JUMPDEST
0x777 PUSH1 0x0
0x779 SWAP6
0x77a POP
---
0x776: JUMPDEST 
0x777: V637 = 0x0
---
Entry stack: [V12, 0x29e, V277, V280, V282, 0x0, V582, V588, V593, V595, V597]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x29e, V277, V280, V282, 0x0, V582, V588, V593, V595, V597]

================================

Block 0x77b
[0x77b:0x77b]
---
Predecessors: [0x667, 0x673, 0x6ea, 0x776]
Successors: [0x77c]
---
0x77b JUMPDEST
---
0x77b: JUMPDEST 
---
Entry stack: [V12, 0x29e, V277, V280, V282, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x29e, V277, V280, V282, {0x0, 0x1}, S4, S3, S2, S1, S0]

================================

Block 0x77c
[0x77c:0x787]
---
Predecessors: [0x77b]
Successors: [0x29e]
---
0x77c JUMPDEST
0x77d POP
0x77e POP
0x77f POP
0x780 POP
0x781 POP
0x782 SWAP4
0x783 SWAP3
0x784 POP
0x785 POP
0x786 POP
0x787 JUMP
---
0x77c: JUMPDEST 
0x787: JUMP 0x29e
---
Entry stack: [V12, 0x29e, V277, V280, V282, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S5]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x788
[0x788:0x78a]
---
Predecessors: [0x343]
Successors: [0x78b]
---
0x788 JUMPDEST
0x789 PUSH1 0x12
---
0x788: JUMPDEST 
0x789: V638 = 0x12
---
Entry stack: [V12, 0x34b]
Stack pops: 0
Stack additions: [0x12]
Exit stack: [V12, 0x34b, 0x12]

================================

Block 0x78b
[0x78b:0x78d]
---
Predecessors: [0x788]
Successors: [0x34b]
---
0x78b JUMPDEST
0x78c SWAP1
0x78d JUMP
---
0x78b: JUMPDEST 
0x78d: JUMP 0x34b
---
Entry stack: [V12, 0x34b, 0x12]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x12]

================================

Block 0x78e
[0x78e:0x7a5]
---
Predecessors: [0x36c]
Successors: [0x7a6, 0x7b3]
---
0x78e JUMPDEST
0x78f PUSH1 0x0
0x791 SLOAD
0x792 CALLER
0x793 PUSH1 0x1
0x795 PUSH1 0xa0
0x797 PUSH1 0x2
0x799 EXP
0x79a SUB
0x79b SWAP1
0x79c DUP2
0x79d AND
0x79e SWAP2
0x79f AND
0x7a0 EQ
0x7a1 ISZERO
0x7a2 PUSH2 0x7b3
0x7a5 JUMPI
---
0x78e: JUMPDEST 
0x78f: V639 = 0x0
0x791: V640 = S[0x0]
0x792: V641 = CALLER
0x793: V642 = 0x1
0x795: V643 = 0xa0
0x797: V644 = 0x2
0x799: V645 = EXP 0x2 0xa0
0x79a: V646 = SUB 0x10000000000000000000000000000000000000000 0x1
0x79d: V647 = AND 0xffffffffffffffffffffffffffffffffffffffff V641
0x79f: V648 = AND V640 0xffffffffffffffffffffffffffffffffffffffff
0x7a0: V649 = EQ V648 V647
0x7a1: V650 = ISZERO V649
0x7a2: V651 = 0x7b3
0x7a5: JUMPI 0x7b3 V650
---
Entry stack: [V12, 0x1ef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef]

================================

Block 0x7a6
[0x7a6:0x7b2]
---
Predecessors: [0x78e]
Successors: []
---
0x7a6 PUSH1 0x0
0x7a8 SLOAD
0x7a9 PUSH1 0x1
0x7ab PUSH1 0xa0
0x7ad PUSH1 0x2
0x7af EXP
0x7b0 SUB
0x7b1 AND
0x7b2 SELFDESTRUCT
---
0x7a6: V652 = 0x0
0x7a8: V653 = S[0x0]
0x7a9: V654 = 0x1
0x7ab: V655 = 0xa0
0x7ad: V656 = 0x2
0x7af: V657 = EXP 0x2 0xa0
0x7b0: V658 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b1: V659 = AND 0xffffffffffffffffffffffffffffffffffffffff V653
0x7b2: SELFDESTRUCT V659
---
Entry stack: [V12, 0x1ef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef]

================================

Block 0x7b3
[0x7b3:0x7b3]
---
Predecessors: [0x78e, 0x7cd, 0x828]
Successors: [0x7b4]
---
0x7b3 JUMPDEST
---
0x7b3: JUMPDEST 
---
Entry stack: [V12, 0x1ef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef]

================================

Block 0x7b4
[0x7b4:0x7b5]
---
Predecessors: [0x7b3]
Successors: [0x1ef]
---
0x7b4 JUMPDEST
0x7b5 JUMP
---
0x7b4: JUMPDEST 
0x7b5: JUMP 0x1ef
---
Entry stack: [V12, 0x1ef]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x7b6
[0x7b6:0x7cc]
---
Predecessors: [0x381]
Successors: [0x7cd, 0x7d1]
---
0x7b6 JUMPDEST
0x7b7 PUSH1 0x0
0x7b9 SLOAD
0x7ba CALLER
0x7bb PUSH1 0x1
0x7bd PUSH1 0xa0
0x7bf PUSH1 0x2
0x7c1 EXP
0x7c2 SUB
0x7c3 SWAP1
0x7c4 DUP2
0x7c5 AND
0x7c6 SWAP2
0x7c7 AND
0x7c8 EQ
0x7c9 PUSH2 0x7d1
0x7cc JUMPI
---
0x7b6: JUMPDEST 
0x7b7: V660 = 0x0
0x7b9: V661 = S[0x0]
0x7ba: V662 = CALLER
0x7bb: V663 = 0x1
0x7bd: V664 = 0xa0
0x7bf: V665 = 0x2
0x7c1: V666 = EXP 0x2 0xa0
0x7c2: V667 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c5: V668 = AND 0xffffffffffffffffffffffffffffffffffffffff V662
0x7c7: V669 = AND V661 0xffffffffffffffffffffffffffffffffffffffff
0x7c8: V670 = EQ V669 V668
0x7c9: V671 = 0x7d1
0x7cc: JUMPI 0x7d1 V670
---
Entry stack: [V12, 0x1ef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef]

================================

Block 0x7cd
[0x7cd:0x7d0]
---
Predecessors: [0x7b6]
Successors: [0x7b3]
---
0x7cd PUSH2 0x7b3
0x7d0 JUMP
---
0x7cd: V672 = 0x7b3
0x7d0: JUMP 0x7b3
---
Entry stack: [V12, 0x1ef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef]

================================

Block 0x7d1
[0x7d1:0x7ef]
---
Predecessors: [0x7b6]
Successors: [0x7f0]
---
0x7d1 JUMPDEST
0x7d2 PUSH1 0x0
0x7d4 DUP1
0x7d5 SLOAD
0x7d6 PUSH21 0xff0000000000000000000000000000000000000000
0x7ec NOT
0x7ed AND
0x7ee SWAP1
0x7ef SSTORE
---
0x7d1: JUMPDEST 
0x7d2: V673 = 0x0
0x7d5: V674 = S[0x0]
0x7d6: V675 = 0xff0000000000000000000000000000000000000000
0x7ec: V676 = NOT 0xff0000000000000000000000000000000000000000
0x7ed: V677 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V674
0x7ef: S[0x0] = V677
---
Entry stack: [V12, 0x1ef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef]

================================

Block 0x7f0
[0x7f0:0x7f1]
---
Predecessors: [0x7d1]
Successors: [0x1ef]
---
0x7f0 JUMPDEST
0x7f1 JUMP
---
0x7f0: JUMPDEST 
0x7f1: JUMP 0x1ef
---
Entry stack: [V12, 0x1ef]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x7f2
[0x7f2:0x80b]
---
Predecessors: [0x396]
Successors: [0x80c]
---
0x7f2 JUMPDEST
0x7f3 PUSH1 0x1
0x7f5 PUSH1 0xa0
0x7f7 PUSH1 0x2
0x7f9 EXP
0x7fa SUB
0x7fb DUP2
0x7fc AND
0x7fd PUSH1 0x0
0x7ff SWAP1
0x800 DUP2
0x801 MSTORE
0x802 PUSH1 0x1
0x804 PUSH1 0x20
0x806 MSTORE
0x807 PUSH1 0x40
0x809 SWAP1
0x80a SHA3
0x80b SLOAD
---
0x7f2: JUMPDEST 
0x7f3: V678 = 0x1
0x7f5: V679 = 0xa0
0x7f7: V680 = 0x2
0x7f9: V681 = EXP 0x2 0xa0
0x7fa: V682 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7fc: V683 = AND V332 0xffffffffffffffffffffffffffffffffffffffff
0x7fd: V684 = 0x0
0x801: M[0x0] = V683
0x802: V685 = 0x1
0x804: V686 = 0x20
0x806: M[0x20] = 0x1
0x807: V687 = 0x40
0x80a: V688 = SHA3 0x0 0x40
0x80b: V689 = S[V688]
---
Entry stack: [V12, 0x2c5, V332]
Stack pops: 1
Stack additions: [S0, V689]
Exit stack: [V12, 0x2c5, V332, V689]

================================

Block 0x80c
[0x80c:0x810]
---
Predecessors: [0x7f2]
Successors: [0x2c5]
---
0x80c JUMPDEST
0x80d SWAP2
0x80e SWAP1
0x80f POP
0x810 JUMP
---
0x80c: JUMPDEST 
0x810: JUMP 0x2c5
---
Entry stack: [V12, 0x2c5, V332, V689]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V689]

================================

Block 0x811
[0x811:0x827]
---
Predecessors: [0x3c7]
Successors: [0x828, 0x82c]
---
0x811 JUMPDEST
0x812 PUSH1 0x0
0x814 SLOAD
0x815 CALLER
0x816 PUSH1 0x1
0x818 PUSH1 0xa0
0x81a PUSH1 0x2
0x81c EXP
0x81d SUB
0x81e SWAP1
0x81f DUP2
0x820 AND
0x821 SWAP2
0x822 AND
0x823 EQ
0x824 PUSH2 0x82c
0x827 JUMPI
---
0x811: JUMPDEST 
0x812: V690 = 0x0
0x814: V691 = S[0x0]
0x815: V692 = CALLER
0x816: V693 = 0x1
0x818: V694 = 0xa0
0x81a: V695 = 0x2
0x81c: V696 = EXP 0x2 0xa0
0x81d: V697 = SUB 0x10000000000000000000000000000000000000000 0x1
0x820: V698 = AND 0xffffffffffffffffffffffffffffffffffffffff V692
0x822: V699 = AND V691 0xffffffffffffffffffffffffffffffffffffffff
0x823: V700 = EQ V699 V698
0x824: V701 = 0x82c
0x827: JUMPI 0x82c V700
---
Entry stack: [V12, 0x1ef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef]

================================

Block 0x828
[0x828:0x82b]
---
Predecessors: [0x811]
Successors: [0x7b3]
---
0x828 PUSH2 0x7b3
0x82b JUMP
---
0x828: V702 = 0x7b3
0x82b: JUMP 0x7b3
---
Entry stack: [V12, 0x1ef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef]

================================

Block 0x82c
[0x82c:0x850]
---
Predecessors: [0x811]
Successors: [0x851]
---
0x82c JUMPDEST
0x82d PUSH1 0x0
0x82f DUP1
0x830 SLOAD
0x831 PUSH21 0xff0000000000000000000000000000000000000000
0x847 NOT
0x848 AND
0x849 PUSH1 0xa0
0x84b PUSH1 0x2
0x84d EXP
0x84e OR
0x84f SWAP1
0x850 SSTORE
---
0x82c: JUMPDEST 
0x82d: V703 = 0x0
0x830: V704 = S[0x0]
0x831: V705 = 0xff0000000000000000000000000000000000000000
0x847: V706 = NOT 0xff0000000000000000000000000000000000000000
0x848: V707 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V704
0x849: V708 = 0xa0
0x84b: V709 = 0x2
0x84d: V710 = EXP 0x2 0xa0
0x84e: V711 = OR 0x10000000000000000000000000000000000000000 V707
0x850: S[0x0] = V711
---
Entry stack: [V12, 0x1ef]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1ef]

================================

Block 0x851
[0x851:0x852]
---
Predecessors: [0x82c]
Successors: [0x1ef]
---
0x851 JUMPDEST
0x852 JUMP
---
0x851: JUMPDEST 
0x852: JUMP 0x1ef
---
Entry stack: [V12, 0x1ef]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x853
[0x853:0x85a]
---
Predecessors: [0x3dc]
Successors: [0xaea]
---
0x853 JUMPDEST
0x854 PUSH2 0x85b
0x857 PUSH2 0xaea
0x85a JUMP
---
0x853: JUMPDEST 
0x854: V712 = 0x85b
0x857: V713 = 0xaea
0x85a: JUMP 0xaea
---
Entry stack: [V12, 0x204]
Stack pops: 0
Stack additions: [0x85b]
Exit stack: [V12, 0x204, 0x85b]

================================

Block 0x85b
[0x85b:0x891]
---
Predecessors: [0xaea]
Successors: [0x892]
---
0x85b JUMPDEST
0x85c PUSH1 0x40
0x85e DUP1
0x85f MLOAD
0x860 SWAP1
0x861 DUP2
0x862 ADD
0x863 PUSH1 0x40
0x865 MSTORE
0x866 PUSH1 0x4
0x868 DUP2
0x869 MSTORE
0x86a PUSH32 0x5a45524f00000000000000000000000000000000000000000000000000000000
0x88b PUSH1 0x20
0x88d DUP3
0x88e ADD
0x88f MSTORE
0x890 SWAP1
0x891 POP
---
0x85b: JUMPDEST 
0x85c: V714 = 0x40
0x85f: V715 = M[0x40]
0x862: V716 = ADD V715 0x40
0x863: V717 = 0x40
0x865: M[0x40] = V716
0x866: V718 = 0x4
0x869: M[V715] = 0x4
0x86a: V719 = 0x5a45524f00000000000000000000000000000000000000000000000000000000
0x88b: V720 = 0x20
0x88e: V721 = ADD V715 0x20
0x88f: M[V721] = 0x5a45524f00000000000000000000000000000000000000000000000000000000
---
Entry stack: [V12, 0x204, V942]
Stack pops: 1
Stack additions: [V715]
Exit stack: [V12, 0x204, V715]

================================

Block 0x892
[0x892:0x894]
---
Predecessors: [0x85b]
Successors: [0x204]
---
0x892 JUMPDEST
0x893 SWAP1
0x894 JUMP
---
0x892: JUMPDEST 
0x894: JUMP 0x204
---
Entry stack: [V12, 0x204, V715]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V715]

================================

Block 0x895
[0x895:0x8a3]
---
Predecessors: [0x467]
Successors: [0x8a4, 0x8a8]
---
0x895 JUMPDEST
0x896 PUSH1 0x0
0x898 DUP1
0x899 DUP1
0x89a DUP1
0x89b PUSH1 0x44
0x89d CALLDATASIZE
0x89e LT
0x89f ISZERO
0x8a0 PUSH2 0x8a8
0x8a3 JUMPI
---
0x895: JUMPDEST 
0x896: V722 = 0x0
0x89b: V723 = 0x44
0x89d: V724 = CALLDATASIZE
0x89e: V725 = LT V724 0x44
0x89f: V726 = ISZERO V725
0x8a0: V727 = 0x8a8
0x8a3: JUMPI 0x8a8 V726
---
Entry stack: [V12, 0x29e, V405, V407]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x29e, V405, V407, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8a4
[0x8a4:0x8a7]
---
Predecessors: [0x895]
Successors: [0x96b]
---
0x8a4 PUSH2 0x96b
0x8a7 JUMP
---
0x8a4: V728 = 0x96b
0x8a7: JUMP 0x96b
---
Entry stack: [V12, 0x29e, V405, V407, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x29e, V405, V407, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8a8
[0x8a8:0x8af]
---
Predecessors: [0x895]
Successors: [0x8b0, 0x8b8]
---
0x8a8 JUMPDEST
0x8a9 DUP5
0x8aa ISZERO
0x8ab ISZERO
0x8ac PUSH2 0x8b8
0x8af JUMPI
---
0x8a8: JUMPDEST 
0x8aa: V729 = ISZERO V407
0x8ab: V730 = ISZERO V729
0x8ac: V731 = 0x8b8
0x8af: JUMPI 0x8b8 V730
---
Entry stack: [V12, 0x29e, V405, V407, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x29e, V405, V407, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8b0
[0x8b0:0x8b7]
---
Predecessors: [0x8a8]
Successors: [0x96b]
---
0x8b0 PUSH1 0x0
0x8b2 SWAP4
0x8b3 POP
0x8b4 PUSH2 0x96b
0x8b7 JUMP
---
0x8b0: V732 = 0x0
0x8b4: V733 = 0x96b
0x8b7: JUMP 0x96b
---
Entry stack: [V12, 0x29e, V405, V407, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x29e, V405, V407, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x8b8
[0x8b8:0x8ef]
---
Predecessors: [0x8a8]
Successors: [0x8f0, 0x8f3]
---
0x8b8 JUMPDEST
0x8b9 POP
0x8ba POP
0x8bb POP
0x8bc PUSH1 0x1
0x8be PUSH1 0xa0
0x8c0 PUSH1 0x2
0x8c2 EXP
0x8c3 SUB
0x8c4 CALLER
0x8c5 DUP2
0x8c6 AND
0x8c7 PUSH1 0x0
0x8c9 SWAP1
0x8ca DUP2
0x8cb MSTORE
0x8cc PUSH1 0x1
0x8ce PUSH1 0x20
0x8d0 MSTORE
0x8d1 PUSH1 0x40
0x8d3 DUP1
0x8d4 DUP3
0x8d5 SHA3
0x8d6 SLOAD
0x8d7 SWAP3
0x8d8 DUP7
0x8d9 AND
0x8da DUP3
0x8db MSTORE
0x8dc SWAP1
0x8dd SHA3
0x8de SLOAD
0x8df DUP4
0x8e0 DUP3
0x8e1 LT
0x8e2 DUP1
0x8e3 ISZERO
0x8e4 SWAP2
0x8e5 DUP1
0x8e6 DUP7
0x8e7 ADD
0x8e8 LT
0x8e9 SWAP1
0x8ea DUP3
0x8eb SWAP1
0x8ec PUSH2 0x8f3
0x8ef JUMPI
---
0x8b8: JUMPDEST 
0x8bc: V734 = 0x1
0x8be: V735 = 0xa0
0x8c0: V736 = 0x2
0x8c2: V737 = EXP 0x2 0xa0
0x8c3: V738 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c4: V739 = CALLER
0x8c6: V740 = AND 0xffffffffffffffffffffffffffffffffffffffff V739
0x8c7: V741 = 0x0
0x8cb: M[0x0] = V740
0x8cc: V742 = 0x1
0x8ce: V743 = 0x20
0x8d0: M[0x20] = 0x1
0x8d1: V744 = 0x40
0x8d5: V745 = SHA3 0x0 0x40
0x8d6: V746 = S[V745]
0x8d9: V747 = AND V405 0xffffffffffffffffffffffffffffffffffffffff
0x8db: M[0x0] = V747
0x8dd: V748 = SHA3 0x0 0x40
0x8de: V749 = S[V748]
0x8e1: V750 = LT V746 V407
0x8e3: V751 = ISZERO V750
0x8e7: V752 = ADD V407 V749
0x8e8: V753 = LT V752 V749
0x8ec: V754 = 0x8f3
0x8ef: JUMPI 0x8f3 V750
---
Entry stack: [V12, 0x29e, V405, V407, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V746, V751, V753, V751]
Exit stack: [V12, 0x29e, V405, V407, 0x0, V746, V751, V753, V751]

================================

Block 0x8f0
[0x8f0:0x8f2]
---
Predecessors: [0x8b8]
Successors: [0x8f3]
---
0x8f0 POP
0x8f1 DUP1
0x8f2 ISZERO
---
0x8f2: V755 = ISZERO V753
---
Entry stack: [V12, 0x29e, V405, V407, 0x0, V746, V751, V753, V751]
Stack pops: 2
Stack additions: [S1, V755]
Exit stack: [V12, 0x29e, V405, V407, 0x0, V746, V751, V753, V755]

================================

Block 0x8f3
[0x8f3:0x8f8]
---
Predecessors: [0x8b8, 0x8f0]
Successors: [0x8f9, 0x966]
---
0x8f3 JUMPDEST
0x8f4 ISZERO
0x8f5 PUSH2 0x966
0x8f8 JUMPI
---
0x8f3: JUMPDEST 
0x8f4: V756 = ISZERO S0
0x8f5: V757 = 0x966
0x8f8: JUMPI 0x966 V756
---
Entry stack: [V12, 0x29e, V405, V407, 0x0, V746, V751, V753, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x29e, V405, V407, 0x0, V746, V751, V753]

================================

Block 0x8f9
[0x8f9:0x965]
---
Predecessors: [0x8f3]
Successors: [0x96b]
---
0x8f9 PUSH1 0x1
0x8fb PUSH1 0xa0
0x8fd PUSH1 0x2
0x8ff EXP
0x900 SUB
0x901 CALLER
0x902 DUP2
0x903 AND
0x904 PUSH1 0x0
0x906 DUP2
0x907 DUP2
0x908 MSTORE
0x909 PUSH1 0x1
0x90b PUSH1 0x20
0x90d MSTORE
0x90e PUSH1 0x40
0x910 DUP1
0x911 DUP3
0x912 SHA3
0x913 DUP1
0x914 SLOAD
0x915 DUP11
0x916 SWAP1
0x917 SUB
0x918 SWAP1
0x919 SSTORE
0x91a SWAP3
0x91b DUP10
0x91c AND
0x91d DUP1
0x91e DUP3
0x91f MSTORE
0x920 SWAP1
0x921 DUP4
0x922 SWAP1
0x923 SHA3
0x924 DUP1
0x925 SLOAD
0x926 DUP10
0x927 ADD
0x928 SWAP1
0x929 SSTORE
0x92a SWAP2
0x92b PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x94c SWAP1
0x94d DUP9
0x94e SWAP1
0x94f MLOAD
0x950 SWAP1
0x951 DUP2
0x952 MSTORE
0x953 PUSH1 0x20
0x955 ADD
0x956 PUSH1 0x40
0x958 MLOAD
0x959 DUP1
0x95a SWAP2
0x95b SUB
0x95c SWAP1
0x95d LOG3
0x95e PUSH1 0x1
0x960 SWAP4
0x961 POP
0x962 PUSH2 0x96b
0x965 JUMP
---
0x8f9: V758 = 0x1
0x8fb: V759 = 0xa0
0x8fd: V760 = 0x2
0x8ff: V761 = EXP 0x2 0xa0
0x900: V762 = SUB 0x10000000000000000000000000000000000000000 0x1
0x901: V763 = CALLER
0x903: V764 = AND 0xffffffffffffffffffffffffffffffffffffffff V763
0x904: V765 = 0x0
0x908: M[0x0] = V764
0x909: V766 = 0x1
0x90b: V767 = 0x20
0x90d: M[0x20] = 0x1
0x90e: V768 = 0x40
0x912: V769 = SHA3 0x0 0x40
0x914: V770 = S[V769]
0x917: V771 = SUB V770 V407
0x919: S[V769] = V771
0x91c: V772 = AND V405 0xffffffffffffffffffffffffffffffffffffffff
0x91f: M[0x0] = V772
0x923: V773 = SHA3 0x0 0x40
0x925: V774 = S[V773]
0x927: V775 = ADD V407 V774
0x929: S[V773] = V775
0x92b: V776 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x94f: V777 = M[0x40]
0x952: M[V777] = V407
0x953: V778 = 0x20
0x955: V779 = ADD 0x20 V777
0x956: V780 = 0x40
0x958: V781 = M[0x40]
0x95b: V782 = SUB V779 V781
0x95d: LOG V781 V782 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V764 V772
0x95e: V783 = 0x1
0x962: V784 = 0x96b
0x965: JUMP 0x96b
---
Entry stack: [V12, 0x29e, V405, V407, 0x0, V746, V751, V753]
Stack pops: 6
Stack additions: [S5, S4, 0x1, S2, S1, S0]
Exit stack: [V12, 0x29e, V405, V407, 0x1, V746, V751, V753]

================================

Block 0x966
[0x966:0x96a]
---
Predecessors: [0x8f3]
Successors: [0x96b]
---
0x966 JUMPDEST
0x967 PUSH1 0x0
0x969 SWAP4
0x96a POP
---
0x966: JUMPDEST 
0x967: V785 = 0x0
---
Entry stack: [V12, 0x29e, V405, V407, 0x0, V746, V751, V753]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x29e, V405, V407, 0x0, V746, V751, V753]

================================

Block 0x96b
[0x96b:0x96b]
---
Predecessors: [0x8a4, 0x8b0, 0x8f9, 0x966]
Successors: [0x96c]
---
0x96b JUMPDEST
---
0x96b: JUMPDEST 
---
Entry stack: [V12, 0x29e, V405, V407, {0x0, 0x1}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x29e, V405, V407, {0x0, 0x1}, S2, S1, S0]

================================

Block 0x96c
[0x96c:0x974]
---
Predecessors: [0x96b]
Successors: [0x29e]
---
0x96c JUMPDEST
0x96d POP
0x96e POP
0x96f POP
0x970 SWAP3
0x971 SWAP2
0x972 POP
0x973 POP
0x974 JUMP
---
0x96c: JUMPDEST 
0x974: JUMP 0x29e
---
Entry stack: [V12, 0x29e, V405, V407, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x975
[0x975:0x988]
---
Predecessors: [0x49d]
Successors: [0x989]
---
0x975 JUMPDEST
0x976 PUSH1 0x3
0x978 SLOAD
0x979 PUSH1 0x4
0x97b SLOAD
0x97c PUSH1 0x0
0x97e SLOAD
0x97f PUSH1 0xa0
0x981 PUSH1 0x2
0x983 EXP
0x984 SWAP1
0x985 DIV
0x986 PUSH1 0xff
0x988 AND
---
0x975: JUMPDEST 
0x976: V786 = 0x3
0x978: V787 = S[0x3]
0x979: V788 = 0x4
0x97b: V789 = S[0x4]
0x97c: V790 = 0x0
0x97e: V791 = S[0x0]
0x97f: V792 = 0xa0
0x981: V793 = 0x2
0x983: V794 = EXP 0x2 0xa0
0x985: V795 = DIV V791 0x10000000000000000000000000000000000000000
0x986: V796 = 0xff
0x988: V797 = AND 0xff V795
---
Entry stack: [V12, 0x4a5]
Stack pops: 0
Stack additions: [V787, V789, V797]
Exit stack: [V12, 0x4a5, V787, V789, V797]

================================

Block 0x989
[0x989:0x98d]
---
Predecessors: [0x975]
Successors: [0x4a5]
---
0x989 JUMPDEST
0x98a SWAP1
0x98b SWAP2
0x98c SWAP3
0x98d JUMP
---
0x989: JUMPDEST 
0x98d: JUMP 0x4a5
---
Entry stack: [V12, 0x4a5, V787, V789, V797]
Stack pops: 4
Stack additions: [S2, S1, S0]
Exit stack: [V12, V787, V789, V797]

================================

Block 0x98e
[0x98e:0x99d]
---
Predecessors: [0x4d6]
Successors: [0x29e]
---
0x98e JUMPDEST
0x98f PUSH1 0x0
0x991 SLOAD
0x992 PUSH1 0xa0
0x994 PUSH1 0x2
0x996 EXP
0x997 SWAP1
0x998 DIV
0x999 PUSH1 0xff
0x99b AND
0x99c DUP2
0x99d JUMP
---
0x98e: JUMPDEST 
0x98f: V798 = 0x0
0x991: V799 = S[0x0]
0x992: V800 = 0xa0
0x994: V801 = 0x2
0x996: V802 = EXP 0x2 0xa0
0x998: V803 = DIV V799 0x10000000000000000000000000000000000000000
0x999: V804 = 0xff
0x99b: V805 = AND 0xff V803
0x99d: JUMP 0x29e
---
Entry stack: [V12, 0x29e]
Stack pops: 1
Stack additions: [S0, V805]
Exit stack: [V12, 0x29e, V805]

================================

Block 0x99e
[0x99e:0x9c4]
---
Predecessors: [0x4fd]
Successors: [0x9c5]
---
0x99e JUMPDEST
0x99f PUSH1 0x1
0x9a1 PUSH1 0xa0
0x9a3 PUSH1 0x2
0x9a5 EXP
0x9a6 SUB
0x9a7 DUP1
0x9a8 DUP4
0x9a9 AND
0x9aa PUSH1 0x0
0x9ac SWAP1
0x9ad DUP2
0x9ae MSTORE
0x9af PUSH1 0x2
0x9b1 PUSH1 0x20
0x9b3 SWAP1
0x9b4 DUP2
0x9b5 MSTORE
0x9b6 PUSH1 0x40
0x9b8 DUP1
0x9b9 DUP4
0x9ba SHA3
0x9bb SWAP4
0x9bc DUP6
0x9bd AND
0x9be DUP4
0x9bf MSTORE
0x9c0 SWAP3
0x9c1 SWAP1
0x9c2 MSTORE
0x9c3 SHA3
0x9c4 SLOAD
---
0x99e: JUMPDEST 
0x99f: V806 = 0x1
0x9a1: V807 = 0xa0
0x9a3: V808 = 0x2
0x9a5: V809 = EXP 0x2 0xa0
0x9a6: V810 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a9: V811 = AND V463 0xffffffffffffffffffffffffffffffffffffffff
0x9aa: V812 = 0x0
0x9ae: M[0x0] = V811
0x9af: V813 = 0x2
0x9b1: V814 = 0x20
0x9b5: M[0x20] = 0x2
0x9b6: V815 = 0x40
0x9ba: V816 = SHA3 0x0 0x40
0x9bd: V817 = AND V466 0xffffffffffffffffffffffffffffffffffffffff
0x9bf: M[0x0] = V817
0x9c2: M[0x20] = V816
0x9c3: V818 = SHA3 0x0 0x40
0x9c4: V819 = S[V818]
---
Entry stack: [V12, 0x2c5, V463, V466]
Stack pops: 2
Stack additions: [S1, S0, V819]
Exit stack: [V12, 0x2c5, V463, V466, V819]

================================

Block 0x9c5
[0x9c5:0x9ca]
---
Predecessors: [0x99e]
Successors: [0x2c5]
---
0x9c5 JUMPDEST
0x9c6 SWAP3
0x9c7 SWAP2
0x9c8 POP
0x9c9 POP
0x9ca JUMP
---
0x9c5: JUMPDEST 
0x9ca: JUMP 0x2c5
---
Entry stack: [V12, 0x2c5, V463, V466, V819]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, V819]

================================

Block 0x9cb
[0x9cb:0x9e6]
---
Predecessors: [0x534]
Successors: [0x9e7, 0x9eb]
---
0x9cb JUMPDEST
0x9cc PUSH1 0x0
0x9ce DUP1
0x9cf SLOAD
0x9d0 DUP2
0x9d1 SWAP1
0x9d2 DUP2
0x9d3 SWAP1
0x9d4 CALLER
0x9d5 PUSH1 0x1
0x9d7 PUSH1 0xa0
0x9d9 PUSH1 0x2
0x9db EXP
0x9dc SUB
0x9dd SWAP1
0x9de DUP2
0x9df AND
0x9e0 SWAP2
0x9e1 AND
0x9e2 EQ
0x9e3 PUSH2 0x9eb
0x9e6 JUMPI
---
0x9cb: JUMPDEST 
0x9cc: V820 = 0x0
0x9cf: V821 = S[0x0]
0x9d4: V822 = CALLER
0x9d5: V823 = 0x1
0x9d7: V824 = 0xa0
0x9d9: V825 = 0x2
0x9db: V826 = EXP 0x2 0xa0
0x9dc: V827 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9df: V828 = AND 0xffffffffffffffffffffffffffffffffffffffff V822
0x9e1: V829 = AND V821 0xffffffffffffffffffffffffffffffffffffffff
0x9e2: V830 = EQ V829 V828
0x9e3: V831 = 0x9eb
0x9e6: JUMPI 0x9eb V830
---
Entry stack: [V12, 0x29e, V487]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x29e, V487, 0x0, 0x0, 0x0]

================================

Block 0x9e7
[0x9e7:0x9ea]
---
Predecessors: [0x9cb]
Successors: [0xae3]
---
0x9e7 PUSH2 0xae3
0x9ea JUMP
---
0x9e7: V832 = 0xae3
0x9ea: JUMP 0xae3
---
Entry stack: [V12, 0x29e, V487, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x29e, V487, 0x0, 0x0, 0x0]

================================

Block 0x9eb
[0x9eb:0xa40]
---
Predecessors: [0x9cb]
Successors: [0xa41, 0xa45]
---
0x9eb JUMPDEST
0x9ec DUP4
0x9ed SWAP2
0x9ee POP
0x9ef DUP2
0x9f0 PUSH1 0x1
0x9f2 PUSH1 0xa0
0x9f4 PUSH1 0x2
0x9f6 EXP
0x9f7 SUB
0x9f8 AND
0x9f9 PUSH4 0x70a08231
0x9fe ADDRESS
0x9ff PUSH1 0x0
0xa01 PUSH1 0x40
0xa03 MLOAD
0xa04 PUSH1 0x20
0xa06 ADD
0xa07 MSTORE
0xa08 PUSH1 0x40
0xa0a MLOAD
0xa0b PUSH1 0xe0
0xa0d PUSH1 0x2
0xa0f EXP
0xa10 PUSH4 0xffffffff
0xa15 DUP5
0xa16 AND
0xa17 MUL
0xa18 DUP2
0xa19 MSTORE
0xa1a PUSH1 0x1
0xa1c PUSH1 0xa0
0xa1e PUSH1 0x2
0xa20 EXP
0xa21 SUB
0xa22 SWAP1
0xa23 SWAP2
0xa24 AND
0xa25 PUSH1 0x4
0xa27 DUP3
0xa28 ADD
0xa29 MSTORE
0xa2a PUSH1 0x24
0xa2c ADD
0xa2d PUSH1 0x20
0xa2f PUSH1 0x40
0xa31 MLOAD
0xa32 DUP1
0xa33 DUP4
0xa34 SUB
0xa35 DUP2
0xa36 PUSH1 0x0
0xa38 DUP8
0xa39 DUP1
0xa3a EXTCODESIZE
0xa3b ISZERO
0xa3c ISZERO
0xa3d PUSH2 0xa45
0xa40 JUMPI
---
0x9eb: JUMPDEST 
0x9f0: V833 = 0x1
0x9f2: V834 = 0xa0
0x9f4: V835 = 0x2
0x9f6: V836 = EXP 0x2 0xa0
0x9f7: V837 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f8: V838 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x9f9: V839 = 0x70a08231
0x9fe: V840 = ADDRESS
0x9ff: V841 = 0x0
0xa01: V842 = 0x40
0xa03: V843 = M[0x40]
0xa04: V844 = 0x20
0xa06: V845 = ADD 0x20 V843
0xa07: M[V845] = 0x0
0xa08: V846 = 0x40
0xa0a: V847 = M[0x40]
0xa0b: V848 = 0xe0
0xa0d: V849 = 0x2
0xa0f: V850 = EXP 0x2 0xe0
0xa10: V851 = 0xffffffff
0xa16: V852 = AND 0x70a08231 0xffffffff
0xa17: V853 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0xa19: M[V847] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xa1a: V854 = 0x1
0xa1c: V855 = 0xa0
0xa1e: V856 = 0x2
0xa20: V857 = EXP 0x2 0xa0
0xa21: V858 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa24: V859 = AND V840 0xffffffffffffffffffffffffffffffffffffffff
0xa25: V860 = 0x4
0xa28: V861 = ADD V847 0x4
0xa29: M[V861] = V859
0xa2a: V862 = 0x24
0xa2c: V863 = ADD 0x24 V847
0xa2d: V864 = 0x20
0xa2f: V865 = 0x40
0xa31: V866 = M[0x40]
0xa34: V867 = SUB V863 V866
0xa36: V868 = 0x0
0xa3a: V869 = EXTCODESIZE V838
0xa3b: V870 = ISZERO V869
0xa3c: V871 = ISZERO V870
0xa3d: V872 = 0xa45
0xa40: JUMPI 0xa45 V871
---
Entry stack: [V12, 0x29e, V487, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V838, 0x70a08231, V863, 0x20, V866, V867, V866, 0x0, V838]
Exit stack: [V12, 0x29e, V487, 0x0, V487, 0x0, V838, 0x70a08231, V863, 0x20, V866, V867, V866, 0x0, V838]

================================

Block 0xa41
[0xa41:0xa44]
---
Predecessors: [0x9eb]
Successors: []
---
0xa41 PUSH1 0x0
0xa43 DUP1
0xa44 REVERT
---
0xa41: V873 = 0x0
0xa44: REVERT 0x0 0x0
---
Entry stack: [V12, 0x29e, V487, 0x0, V487, 0x0, V838, 0x70a08231, V863, 0x20, V866, V867, V866, 0x0, V838]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x29e, V487, 0x0, V487, 0x0, V838, 0x70a08231, V863, 0x20, V866, V867, V866, 0x0, V838]

================================

Block 0xa45
[0xa45:0xa51]
---
Predecessors: [0x9eb]
Successors: [0xa52, 0xa56]
---
0xa45 JUMPDEST
0xa46 PUSH2 0x2c6
0xa49 GAS
0xa4a SUB
0xa4b CALL
0xa4c ISZERO
0xa4d ISZERO
0xa4e PUSH2 0xa56
0xa51 JUMPI
---
0xa45: JUMPDEST 
0xa46: V874 = 0x2c6
0xa49: V875 = GAS
0xa4a: V876 = SUB V875 0x2c6
0xa4b: V877 = CALL V876 V838 0x0 V866 V867 V866 0x20
0xa4c: V878 = ISZERO V877
0xa4d: V879 = ISZERO V878
0xa4e: V880 = 0xa56
0xa51: JUMPI 0xa56 V879
---
Entry stack: [V12, 0x29e, V487, 0x0, V487, 0x0, V838, 0x70a08231, V863, 0x20, V866, V867, V866, 0x0, V838]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x29e, V487, 0x0, V487, 0x0, V838, 0x70a08231, V863]

================================

Block 0xa52
[0xa52:0xa55]
---
Predecessors: [0xa45]
Successors: []
---
0xa52 PUSH1 0x0
0xa54 DUP1
0xa55 REVERT
---
0xa52: V881 = 0x0
0xa55: REVERT 0x0 0x0
---
Entry stack: [V12, 0x29e, V487, 0x0, V487, 0x0, V838, 0x70a08231, V863]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x29e, V487, 0x0, V487, 0x0, V838, 0x70a08231, V863]

================================

Block 0xa56
[0xa56:0xac1]
---
Predecessors: [0xa45]
Successors: [0xac2, 0xac6]
---
0xa56 JUMPDEST
0xa57 POP
0xa58 POP
0xa59 POP
0xa5a PUSH1 0x40
0xa5c MLOAD
0xa5d DUP1
0xa5e MLOAD
0xa5f PUSH1 0x0
0xa61 DUP1
0xa62 SLOAD
0xa63 SWAP2
0xa64 SWAP4
0xa65 POP
0xa66 PUSH1 0x1
0xa68 PUSH1 0xa0
0xa6a PUSH1 0x2
0xa6c EXP
0xa6d SUB
0xa6e DUP1
0xa6f DUP7
0xa70 AND
0xa71 SWAP4
0xa72 POP
0xa73 PUSH4 0xa9059cbb
0xa78 SWAP3
0xa79 AND
0xa7a SWAP1
0xa7b DUP5
0xa7c SWAP1
0xa7d PUSH1 0x40
0xa7f MLOAD
0xa80 PUSH1 0x20
0xa82 ADD
0xa83 MSTORE
0xa84 PUSH1 0x40
0xa86 MLOAD
0xa87 PUSH1 0xe0
0xa89 PUSH1 0x2
0xa8b EXP
0xa8c PUSH4 0xffffffff
0xa91 DUP6
0xa92 AND
0xa93 MUL
0xa94 DUP2
0xa95 MSTORE
0xa96 PUSH1 0x1
0xa98 PUSH1 0xa0
0xa9a PUSH1 0x2
0xa9c EXP
0xa9d SUB
0xa9e SWAP1
0xa9f SWAP3
0xaa0 AND
0xaa1 PUSH1 0x4
0xaa3 DUP4
0xaa4 ADD
0xaa5 MSTORE
0xaa6 PUSH1 0x24
0xaa8 DUP3
0xaa9 ADD
0xaaa MSTORE
0xaab PUSH1 0x44
0xaad ADD
0xaae PUSH1 0x20
0xab0 PUSH1 0x40
0xab2 MLOAD
0xab3 DUP1
0xab4 DUP4
0xab5 SUB
0xab6 DUP2
0xab7 PUSH1 0x0
0xab9 DUP8
0xaba DUP1
0xabb EXTCODESIZE
0xabc ISZERO
0xabd ISZERO
0xabe PUSH2 0xac6
0xac1 JUMPI
---
0xa56: JUMPDEST 
0xa5a: V882 = 0x40
0xa5c: V883 = M[0x40]
0xa5e: V884 = M[V883]
0xa5f: V885 = 0x0
0xa62: V886 = S[0x0]
0xa66: V887 = 0x1
0xa68: V888 = 0xa0
0xa6a: V889 = 0x2
0xa6c: V890 = EXP 0x2 0xa0
0xa6d: V891 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa70: V892 = AND V487 0xffffffffffffffffffffffffffffffffffffffff
0xa73: V893 = 0xa9059cbb
0xa79: V894 = AND V886 0xffffffffffffffffffffffffffffffffffffffff
0xa7d: V895 = 0x40
0xa7f: V896 = M[0x40]
0xa80: V897 = 0x20
0xa82: V898 = ADD 0x20 V896
0xa83: M[V898] = 0x0
0xa84: V899 = 0x40
0xa86: V900 = M[0x40]
0xa87: V901 = 0xe0
0xa89: V902 = 0x2
0xa8b: V903 = EXP 0x2 0xe0
0xa8c: V904 = 0xffffffff
0xa92: V905 = AND 0xa9059cbb 0xffffffff
0xa93: V906 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xa95: M[V900] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa96: V907 = 0x1
0xa98: V908 = 0xa0
0xa9a: V909 = 0x2
0xa9c: V910 = EXP 0x2 0xa0
0xa9d: V911 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa0: V912 = AND V894 0xffffffffffffffffffffffffffffffffffffffff
0xaa1: V913 = 0x4
0xaa4: V914 = ADD V900 0x4
0xaa5: M[V914] = V912
0xaa6: V915 = 0x24
0xaa9: V916 = ADD V900 0x24
0xaaa: M[V916] = V884
0xaab: V917 = 0x44
0xaad: V918 = ADD 0x44 V900
0xaae: V919 = 0x20
0xab0: V920 = 0x40
0xab2: V921 = M[0x40]
0xab5: V922 = SUB V918 V921
0xab7: V923 = 0x0
0xabb: V924 = EXTCODESIZE V892
0xabc: V925 = ISZERO V924
0xabd: V926 = ISZERO V925
0xabe: V927 = 0xac6
0xac1: JUMPI 0xac6 V926
---
Entry stack: [V12, 0x29e, V487, 0x0, V487, 0x0, V838, 0x70a08231, V863]
Stack pops: 5
Stack additions: [S4, V884, V892, 0xa9059cbb, V918, 0x20, V921, V922, V921, 0x0, V892]
Exit stack: [V12, 0x29e, V487, 0x0, V487, V884, V892, 0xa9059cbb, V918, 0x20, V921, V922, V921, 0x0, V892]

================================

Block 0xac2
[0xac2:0xac5]
---
Predecessors: [0xa56]
Successors: []
---
0xac2 PUSH1 0x0
0xac4 DUP1
0xac5 REVERT
---
0xac2: V928 = 0x0
0xac5: REVERT 0x0 0x0
---
Entry stack: [V12, 0x29e, V487, 0x0, V487, V884, V892, 0xa9059cbb, V918, 0x20, V921, V922, V921, 0x0, V892]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x29e, V487, 0x0, V487, V884, V892, 0xa9059cbb, V918, 0x20, V921, V922, V921, 0x0, V892]

================================

Block 0xac6
[0xac6:0xad2]
---
Predecessors: [0xa56]
Successors: [0xad3, 0xad7]
---
0xac6 JUMPDEST
0xac7 PUSH2 0x2c6
0xaca GAS
0xacb SUB
0xacc CALL
0xacd ISZERO
0xace ISZERO
0xacf PUSH2 0xad7
0xad2 JUMPI
---
0xac6: JUMPDEST 
0xac7: V929 = 0x2c6
0xaca: V930 = GAS
0xacb: V931 = SUB V930 0x2c6
0xacc: V932 = CALL V931 V892 0x0 V921 V922 V921 0x20
0xacd: V933 = ISZERO V932
0xace: V934 = ISZERO V933
0xacf: V935 = 0xad7
0xad2: JUMPI 0xad7 V934
---
Entry stack: [V12, 0x29e, V487, 0x0, V487, V884, V892, 0xa9059cbb, V918, 0x20, V921, V922, V921, 0x0, V892]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x29e, V487, 0x0, V487, V884, V892, 0xa9059cbb, V918]

================================

Block 0xad3
[0xad3:0xad6]
---
Predecessors: [0xac6]
Successors: []
---
0xad3 PUSH1 0x0
0xad5 DUP1
0xad6 REVERT
---
0xad3: V936 = 0x0
0xad6: REVERT 0x0 0x0
---
Entry stack: [V12, 0x29e, V487, 0x0, V487, V884, V892, 0xa9059cbb, V918]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x29e, V487, 0x0, V487, V884, V892, 0xa9059cbb, V918]

================================

Block 0xad7
[0xad7:0xae2]
---
Predecessors: [0xac6]
Successors: [0xae3]
---
0xad7 JUMPDEST
0xad8 POP
0xad9 POP
0xada POP
0xadb PUSH1 0x40
0xadd MLOAD
0xade DUP1
0xadf MLOAD
0xae0 SWAP4
0xae1 POP
0xae2 POP
---
0xad7: JUMPDEST 
0xadb: V937 = 0x40
0xadd: V938 = M[0x40]
0xadf: V939 = M[V938]
---
Entry stack: [V12, 0x29e, V487, 0x0, V487, V884, V892, 0xa9059cbb, V918]
Stack pops: 6
Stack additions: [V939, S4, S3]
Exit stack: [V12, 0x29e, V487, V939, V487, V884]

================================

Block 0xae3
[0xae3:0xae9]
---
Predecessors: [0x9e7, 0xad7]
Successors: [0x29e]
---
0xae3 JUMPDEST
0xae4 POP
0xae5 POP
0xae6 SWAP2
0xae7 SWAP1
0xae8 POP
0xae9 JUMP
---
0xae3: JUMPDEST 
0xae9: JUMP 0x29e
---
Entry stack: [V12, 0x29e, V487, S2, S1, S0]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V12, S2]

================================

Block 0xaea
[0xaea:0xafb]
---
Predecessors: [0x55c, 0x853]
Successors: [0x564, 0x85b]
---
0xaea JUMPDEST
0xaeb PUSH1 0x20
0xaed PUSH1 0x40
0xaef MLOAD
0xaf0 SWAP1
0xaf1 DUP2
0xaf2 ADD
0xaf3 PUSH1 0x40
0xaf5 MSTORE
0xaf6 PUSH1 0x0
0xaf8 DUP2
0xaf9 MSTORE
0xafa SWAP1
0xafb JUMP
---
0xaea: JUMPDEST 
0xaeb: V940 = 0x20
0xaed: V941 = 0x40
0xaef: V942 = M[0x40]
0xaf2: V943 = ADD V942 0x20
0xaf3: V944 = 0x40
0xaf5: M[0x40] = V943
0xaf6: V945 = 0x0
0xaf9: M[V942] = 0x0
0xafb: JUMP {0x564, 0x85b}
---
Entry stack: [V12, 0x204, {0x564, 0x85b}]
Stack pops: 1
Stack additions: [V942]
Exit stack: [V12, 0x204, V942]

================================

Block 0xafc
[0xafc:0xb27]
---
Predecessors: []
Successors: []
---
0xafc STOP
0xafd LOG1
0xafe PUSH6 0x627a7a723058
0xb05 SHA3
0xb06 CALLDATALOAD
0xb07 RETURNDATACOPY
0xb08 SHR
0xb09 POP
0xb0a MISSING 0x21
0xb0b MISSING 0xd4
0xb0c MISSING 0xa5
0xb0d MISSING 0xb1
0xb0e MISSING 0xa9
0xb0f PUSH22 0x5ad378d4860b1c3a7600fdfd30b2401375375f4d1016
0xb26 STOP
0xb27 MISSING 0x29
---
0xafc: STOP 
0xafd: LOG S0 S1 S2
0xafe: V946 = 0x627a7a723058
0xb05: V947 = SHA3 0x627a7a723058 S3
0xb06: V948 = CALLDATALOAD V947
0xb07: RETURNDATACOPY V948 S4 S5
0xb08: V949 = SHR S6 S7
0xb0a: MISSING 0x21
0xb0b: MISSING 0xd4
0xb0c: MISSING 0xa5
0xb0d: MISSING 0xb1
0xb0e: MISSING 0xa9
0xb0f: V950 = 0x5ad378d4860b1c3a7600fdfd30b2401375375f4d1016
0xb26: STOP 
0xb27: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x5ad378d4860b1c3a7600fdfd30b2401375375f4d1016]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x1f1
Exit block: 0x26e
Body: 0x1f1, 0x1f8, 0x1fc, 0x204, 0x228, 0x231, 0x239, 0x241, 0x255, 0x26e, 0x55c, 0x564, 0x59b

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x27c
Exit block: 0x29e
Body: 0x27c, 0x283, 0x287, 0x29e, 0x59e, 0x5aa, 0x5d3, 0x5d9, 0x5e0, 0x644

Function 2:
Public function signature: 0xdcf4b8f
Entry block: 0x2b2
Exit block: 0x2c5
Body: 0x2b2, 0x2b9, 0x2bd, 0x2c5, 0x64a

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x2d7
Exit block: 0x2c5
Body: 0x2c5, 0x2d7, 0x2de, 0x2e2, 0x650

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x2fc
Exit block: 0x29e
Body: 0x29e, 0x2fc, 0x303, 0x307, 0x656, 0x667, 0x66b, 0x673, 0x67b, 0x6d8, 0x6da, 0x6e1, 0x6e4, 0x6ea, 0x776, 0x77b, 0x77c

Function 5:
Public function signature: 0x313ce567
Entry block: 0x338
Exit block: 0x34b
Body: 0x338, 0x33f, 0x343, 0x34b, 0x788, 0x78b

Function 6:
Public function signature: 0x41c0e1b5
Entry block: 0x361
Exit block: 0x1ef
Body: 0x1ef, 0x361, 0x368, 0x36c, 0x78e, 0x7a6, 0x7b3, 0x7b4

Function 7:
Public function signature: 0x64acdb77
Entry block: 0x376
Exit block: 0x1ef
Body: 0x1ef, 0x376, 0x37d, 0x381, 0x7b3, 0x7b4, 0x7b6, 0x7cd, 0x7d1, 0x7f0

Function 8:
Public function signature: 0x70a08231
Entry block: 0x38b
Exit block: 0x2c5
Body: 0x2c5, 0x38b, 0x392, 0x396, 0x7f2, 0x80c

Function 9:
Public function signature: 0x8f580996
Entry block: 0x3bc
Exit block: 0x1ef
Body: 0x1ef, 0x3bc, 0x3c3, 0x3c7, 0x7b3, 0x7b4, 0x811, 0x828, 0x82c, 0x851

Function 10:
Public function signature: 0x95d89b41
Entry block: 0x3d1
Exit block: 0x26e
Body: 0x204, 0x228, 0x231, 0x239, 0x241, 0x255, 0x26e, 0x3d1, 0x3d8, 0x3dc, 0x853, 0x85b, 0x892

Function 11:
Public function signature: 0xa9059cbb
Entry block: 0x45c
Exit block: 0x29e
Body: 0x29e, 0x45c, 0x463, 0x467, 0x895, 0x8a4, 0x8a8, 0x8b0, 0x8b8, 0x8f0, 0x8f3, 0x8f9, 0x966, 0x96b, 0x96c

Function 12:
Public function signature: 0xc59d4847
Entry block: 0x492
Exit block: 0x4a5
Body: 0x492, 0x499, 0x49d, 0x4a5, 0x975, 0x989

Function 13:
Public function signature: 0xda040c0f
Entry block: 0x4cb
Exit block: 0x29e
Body: 0x29e, 0x4cb, 0x4d2, 0x4d6, 0x98e

Function 14:
Public function signature: 0xdd62ed3e
Entry block: 0x4f2
Exit block: 0x2c5
Body: 0x2c5, 0x4f2, 0x4f9, 0x4fd, 0x99e, 0x9c5

Function 15:
Public function signature: 0xe58fc54c
Entry block: 0x529
Exit block: 0xad3
Body: 0x29e, 0x529, 0x530, 0x534, 0x9cb, 0x9e7, 0x9eb, 0xa41, 0xa45, 0xa52, 0xa56, 0xac2, 0xac6, 0xad3, 0xad7, 0xae3

Function 16:
Public fallback function
Entry block: 0xca
Exit block: 0x1ef
Body: 0xca, 0xce, 0xe3, 0xec, 0x11b, 0x11f, 0x120, 0x125, 0x12d, 0x131, 0x161, 0x165, 0x186, 0x18a, 0x1ec, 0x1ef

