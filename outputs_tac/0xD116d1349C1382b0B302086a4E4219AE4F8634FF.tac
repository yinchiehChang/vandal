Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x11bcd830
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x11bcd830
0x3c: V13 = EQ 0x11bcd830 V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x8d]
---
0x41 DUP1
0x42 PUSH4 0x27e235e3
0x47 EQ
0x48 PUSH2 0x8d
0x4b JUMPI
---
0x42: V15 = 0x27e235e3
0x47: V16 = EQ 0x27e235e3 V11
0x48: V17 = 0x8d
0x4b: JUMPI 0x8d V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xda]
---
0x4c DUP1
0x4d PUSH4 0x9ffa0711
0x52 EQ
0x53 PUSH2 0xda
0x56 JUMPI
---
0x4d: V18 = 0x9ffa0711
0x52: V19 = EQ 0x9ffa0711 V11
0x53: V20 = 0xda
0x56: JUMPI 0xda V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xfd]
---
0x57 DUP1
0x58 PUSH4 0xed21248c
0x5d EQ
0x5e PUSH2 0xfd
0x61 JUMPI
---
0x58: V21 = 0xed21248c
0x5d: V22 = EQ 0xed21248c V11
0x5e: V23 = 0xfd
0x61: JUMPI 0xfd V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6a]
---
Predecessors: [0xd]
Successors: [0x6b, 0x6f]
---
0x64 JUMPDEST
0x65 CALLVALUE
0x66 ISZERO
0x67 PUSH2 0x6f
0x6a JUMPI
---
0x64: JUMPDEST 
0x65: V24 = CALLVALUE
0x66: V25 = ISZERO V24
0x67: V26 = 0x6f
0x6a: JUMPI 0x6f V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6b
[0x6b:0x6e]
---
Predecessors: [0x64]
Successors: []
---
0x6b PUSH1 0x0
0x6d DUP1
0x6e REVERT
---
0x6b: V27 = 0x0
0x6e: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x6f
[0x6f:0x76]
---
Predecessors: [0x64]
Successors: [0x107]
---
0x6f JUMPDEST
0x70 PUSH2 0x77
0x73 PUSH2 0x107
0x76 JUMP
---
0x6f: JUMPDEST 
0x70: V28 = 0x77
0x73: V29 = 0x107
0x76: JUMP 0x107
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x77]
Exit stack: [V11, 0x77]

================================

Block 0x77
[0x77:0x8c]
---
Predecessors: [0x107]
Successors: []
---
0x77 JUMPDEST
0x78 PUSH1 0x40
0x7a MLOAD
0x7b DUP1
0x7c DUP3
0x7d DUP2
0x7e MSTORE
0x7f PUSH1 0x20
0x81 ADD
0x82 SWAP2
0x83 POP
0x84 POP
0x85 PUSH1 0x40
0x87 MLOAD
0x88 DUP1
0x89 SWAP2
0x8a SUB
0x8b SWAP1
0x8c RETURN
---
0x77: JUMPDEST 
0x78: V30 = 0x40
0x7a: V31 = M[0x40]
0x7e: M[V31] = V69
0x7f: V32 = 0x20
0x81: V33 = ADD 0x20 V31
0x85: V34 = 0x40
0x87: V35 = M[0x40]
0x8a: V36 = SUB V33 V35
0x8c: RETURN V35 V36
---
Entry stack: [V11, 0x77, V69]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x77]

================================

Block 0x8d
[0x8d:0x93]
---
Predecessors: [0x41]
Successors: [0x94, 0x98]
---
0x8d JUMPDEST
0x8e CALLVALUE
0x8f ISZERO
0x90 PUSH2 0x98
0x93 JUMPI
---
0x8d: JUMPDEST 
0x8e: V37 = CALLVALUE
0x8f: V38 = ISZERO V37
0x90: V39 = 0x98
0x93: JUMPI 0x98 V38
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x94
[0x94:0x97]
---
Predecessors: [0x8d]
Successors: []
---
0x94 PUSH1 0x0
0x96 DUP1
0x97 REVERT
---
0x94: V40 = 0x0
0x97: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x98
[0x98:0xc3]
---
Predecessors: [0x8d]
Successors: [0x10d]
---
0x98 JUMPDEST
0x99 PUSH2 0xc4
0x9c PUSH1 0x4
0x9e DUP1
0x9f DUP1
0xa0 CALLDATALOAD
0xa1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb6 AND
0xb7 SWAP1
0xb8 PUSH1 0x20
0xba ADD
0xbb SWAP1
0xbc SWAP2
0xbd SWAP1
0xbe POP
0xbf POP
0xc0 PUSH2 0x10d
0xc3 JUMP
---
0x98: JUMPDEST 
0x99: V41 = 0xc4
0x9c: V42 = 0x4
0xa0: V43 = CALLDATALOAD 0x4
0xa1: V44 = 0xffffffffffffffffffffffffffffffffffffffff
0xb6: V45 = AND 0xffffffffffffffffffffffffffffffffffffffff V43
0xb8: V46 = 0x20
0xba: V47 = ADD 0x20 0x4
0xc0: V48 = 0x10d
0xc3: JUMP 0x10d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xc4, V45]
Exit stack: [V11, 0xc4, V45]

================================

Block 0xc4
[0xc4:0xd9]
---
Predecessors: [0x10d]
Successors: []
---
0xc4 JUMPDEST
0xc5 PUSH1 0x40
0xc7 MLOAD
0xc8 DUP1
0xc9 DUP3
0xca DUP2
0xcb MSTORE
0xcc PUSH1 0x20
0xce ADD
0xcf SWAP2
0xd0 POP
0xd1 POP
0xd2 PUSH1 0x40
0xd4 MLOAD
0xd5 DUP1
0xd6 SWAP2
0xd7 SUB
0xd8 SWAP1
0xd9 RETURN
---
0xc4: JUMPDEST 
0xc5: V49 = 0x40
0xc7: V50 = M[0x40]
0xcb: M[V50] = V77
0xcc: V51 = 0x20
0xce: V52 = ADD 0x20 V50
0xd2: V53 = 0x40
0xd4: V54 = M[0x40]
0xd7: V55 = SUB V52 V54
0xd9: RETURN V54 V55
---
Entry stack: [V11, 0xc4, V77]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc4]

================================

Block 0xda
[0xda:0xe0]
---
Predecessors: [0x4c]
Successors: [0xe1, 0xe5]
---
0xda JUMPDEST
0xdb CALLVALUE
0xdc ISZERO
0xdd PUSH2 0xe5
0xe0 JUMPI
---
0xda: JUMPDEST 
0xdb: V56 = CALLVALUE
0xdc: V57 = ISZERO V56
0xdd: V58 = 0xe5
0xe0: JUMPI 0xe5 V57
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe1
[0xe1:0xe4]
---
Predecessors: [0xda]
Successors: []
---
0xe1 PUSH1 0x0
0xe3 DUP1
0xe4 REVERT
---
0xe1: V59 = 0x0
0xe4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xfa]
---
Predecessors: [0xda]
Successors: [0x125]
---
0xe5 JUMPDEST
0xe6 PUSH2 0xfb
0xe9 PUSH1 0x4
0xeb DUP1
0xec DUP1
0xed CALLDATALOAD
0xee SWAP1
0xef PUSH1 0x20
0xf1 ADD
0xf2 SWAP1
0xf3 SWAP2
0xf4 SWAP1
0xf5 POP
0xf6 POP
0xf7 PUSH2 0x125
0xfa JUMP
---
0xe5: JUMPDEST 
0xe6: V60 = 0xfb
0xe9: V61 = 0x4
0xed: V62 = CALLDATALOAD 0x4
0xef: V63 = 0x20
0xf1: V64 = ADD 0x20 0x4
0xf7: V65 = 0x125
0xfa: JUMP 0x125
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xfb, V62]
Exit stack: [V11, 0xfb, V62]

================================

Block 0xfb
[0xfb:0xfc]
---
Predecessors: [0x300]
Successors: []
---
0xfb JUMPDEST
0xfc STOP
---
0xfb: JUMPDEST 
0xfc: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xfd
[0xfd:0x104]
---
Predecessors: [0x57]
Successors: [0x303]
---
0xfd JUMPDEST
0xfe PUSH2 0x105
0x101 PUSH2 0x303
0x104 JUMP
---
0xfd: JUMPDEST 
0xfe: V66 = 0x105
0x101: V67 = 0x303
0x104: JUMP 0x303
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x105]
Exit stack: [V11, 0x105]

================================

Block 0x105
[0x105:0x106]
---
Predecessors: [0x46b]
Successors: []
---
0x105 JUMPDEST
0x106 STOP
---
0x105: JUMPDEST 
0x106: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x107
[0x107:0x10c]
---
Predecessors: [0x6f]
Successors: [0x77]
---
0x107 JUMPDEST
0x108 PUSH1 0x1
0x10a SLOAD
0x10b DUP2
0x10c JUMP
---
0x107: JUMPDEST 
0x108: V68 = 0x1
0x10a: V69 = S[0x1]
0x10c: JUMP 0x77
---
Entry stack: [V11, 0x77]
Stack pops: 1
Stack additions: [S0, V69]
Exit stack: [V11, 0x77, V69]

================================

Block 0x10d
[0x10d:0x124]
---
Predecessors: [0x98]
Successors: [0xc4]
---
0x10d JUMPDEST
0x10e PUSH1 0x0
0x110 PUSH1 0x20
0x112 MSTORE
0x113 DUP1
0x114 PUSH1 0x0
0x116 MSTORE
0x117 PUSH1 0x40
0x119 PUSH1 0x0
0x11b SHA3
0x11c PUSH1 0x0
0x11e SWAP2
0x11f POP
0x120 SWAP1
0x121 POP
0x122 SLOAD
0x123 DUP2
0x124 JUMP
---
0x10d: JUMPDEST 
0x10e: V70 = 0x0
0x110: V71 = 0x20
0x112: M[0x20] = 0x0
0x114: V72 = 0x0
0x116: M[0x0] = V45
0x117: V73 = 0x40
0x119: V74 = 0x0
0x11b: V75 = SHA3 0x0 0x40
0x11c: V76 = 0x0
0x122: V77 = S[V75]
0x124: JUMP 0xc4
---
Entry stack: [V11, 0xc4, V45]
Stack pops: 2
Stack additions: [S1, V77]
Exit stack: [V11, 0xc4, V77]

================================

Block 0x125
[0x125:0x16c]
---
Predecessors: [0xe5]
Successors: [0x16d, 0x300]
---
0x125 JUMPDEST
0x126 PUSH1 0x0
0x128 DUP1
0x129 CALLER
0x12a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x13f AND
0x140 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x155 AND
0x156 DUP2
0x157 MSTORE
0x158 PUSH1 0x20
0x15a ADD
0x15b SWAP1
0x15c DUP2
0x15d MSTORE
0x15e PUSH1 0x20
0x160 ADD
0x161 PUSH1 0x0
0x163 SHA3
0x164 SLOAD
0x165 DUP2
0x166 GT
0x167 ISZERO
0x168 ISZERO
0x169 PUSH2 0x300
0x16c JUMPI
---
0x125: JUMPDEST 
0x126: V78 = 0x0
0x129: V79 = CALLER
0x12a: V80 = 0xffffffffffffffffffffffffffffffffffffffff
0x13f: V81 = AND 0xffffffffffffffffffffffffffffffffffffffff V79
0x140: V82 = 0xffffffffffffffffffffffffffffffffffffffff
0x155: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V81
0x157: M[0x0] = V83
0x158: V84 = 0x20
0x15a: V85 = ADD 0x20 0x0
0x15d: M[0x20] = 0x0
0x15e: V86 = 0x20
0x160: V87 = ADD 0x20 0x20
0x161: V88 = 0x0
0x163: V89 = SHA3 0x0 0x40
0x164: V90 = S[V89]
0x166: V91 = GT V62 V90
0x167: V92 = ISZERO V91
0x168: V93 = ISZERO V92
0x169: V94 = 0x300
0x16c: JUMPI 0x300 V93
---
Entry stack: [V11, 0xfb, V62]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xfb, V62]

================================

Block 0x16d
[0x16d:0x1a1]
---
Predecessors: [0x125]
Successors: [0x1a2, 0x2ff]
---
0x16d CALLER
0x16e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x183 AND
0x184 DUP2
0x185 PUSH1 0x40
0x187 MLOAD
0x188 PUSH1 0x0
0x18a PUSH1 0x40
0x18c MLOAD
0x18d DUP1
0x18e DUP4
0x18f SUB
0x190 DUP2
0x191 DUP6
0x192 DUP8
0x193 PUSH2 0x8796
0x196 GAS
0x197 SUB
0x198 CALL
0x199 SWAP3
0x19a POP
0x19b POP
0x19c POP
0x19d ISZERO
0x19e PUSH2 0x2ff
0x1a1 JUMPI
---
0x16d: V95 = CALLER
0x16e: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x183: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x185: V98 = 0x40
0x187: V99 = M[0x40]
0x188: V100 = 0x0
0x18a: V101 = 0x40
0x18c: V102 = M[0x40]
0x18f: V103 = SUB V99 V102
0x193: V104 = 0x8796
0x196: V105 = GAS
0x197: V106 = SUB V105 0x8796
0x198: V107 = CALL V106 V97 V62 V102 V103 V102 0x0
0x19d: V108 = ISZERO V107
0x19e: V109 = 0x2ff
0x1a1: JUMPI 0x2ff V108
---
Entry stack: [V11, 0xfb, V62]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xfb, V62]

================================

Block 0x1a2
[0x1a2:0x2e5]
---
Predecessors: [0x16d]
Successors: [0x2e6, 0x2ea]
---
0x1a2 DUP1
0x1a3 PUSH1 0x0
0x1a5 DUP1
0x1a6 CALLER
0x1a7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1bc AND
0x1bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d2 AND
0x1d3 DUP2
0x1d4 MSTORE
0x1d5 PUSH1 0x20
0x1d7 ADD
0x1d8 SWAP1
0x1d9 DUP2
0x1da MSTORE
0x1db PUSH1 0x20
0x1dd ADD
0x1de PUSH1 0x0
0x1e0 SHA3
0x1e1 PUSH1 0x0
0x1e3 DUP3
0x1e4 DUP3
0x1e5 SLOAD
0x1e6 SUB
0x1e7 SWAP3
0x1e8 POP
0x1e9 POP
0x1ea DUP2
0x1eb SWAP1
0x1ec SSTORE
0x1ed POP
0x1ee PUSH1 0x2
0x1f0 PUSH1 0x0
0x1f2 SWAP1
0x1f3 SLOAD
0x1f4 SWAP1
0x1f5 PUSH2 0x100
0x1f8 EXP
0x1f9 SWAP1
0x1fa DIV
0x1fb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x210 AND
0x211 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x226 AND
0x227 PUSH4 0x4c2f04a4
0x22c CALLER
0x22d DUP4
0x22e PUSH1 0x40
0x230 MLOAD
0x231 DUP4
0x232 PUSH4 0xffffffff
0x237 AND
0x238 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x256 MUL
0x257 DUP2
0x258 MSTORE
0x259 PUSH1 0x4
0x25b ADD
0x25c DUP1
0x25d DUP4
0x25e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x273 AND
0x274 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x289 AND
0x28a DUP2
0x28b MSTORE
0x28c PUSH1 0x20
0x28e ADD
0x28f DUP3
0x290 DUP2
0x291 MSTORE
0x292 PUSH1 0x20
0x294 ADD
0x295 DUP1
0x296 PUSH1 0x20
0x298 ADD
0x299 DUP3
0x29a DUP2
0x29b SUB
0x29c DUP3
0x29d MSTORE
0x29e PUSH1 0x7
0x2a0 DUP2
0x2a1 MSTORE
0x2a2 PUSH1 0x20
0x2a4 ADD
0x2a5 DUP1
0x2a6 PUSH32 0x436173684f757400000000000000000000000000000000000000000000000000
0x2c7 DUP2
0x2c8 MSTORE
0x2c9 POP
0x2ca PUSH1 0x20
0x2cc ADD
0x2cd SWAP4
0x2ce POP
0x2cf POP
0x2d0 POP
0x2d1 POP
0x2d2 PUSH1 0x0
0x2d4 PUSH1 0x40
0x2d6 MLOAD
0x2d7 DUP1
0x2d8 DUP4
0x2d9 SUB
0x2da DUP2
0x2db PUSH1 0x0
0x2dd DUP8
0x2de DUP1
0x2df EXTCODESIZE
0x2e0 ISZERO
0x2e1 ISZERO
0x2e2 PUSH2 0x2ea
0x2e5 JUMPI
---
0x1a3: V110 = 0x0
0x1a6: V111 = CALLER
0x1a7: V112 = 0xffffffffffffffffffffffffffffffffffffffff
0x1bc: V113 = AND 0xffffffffffffffffffffffffffffffffffffffff V111
0x1bd: V114 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d2: V115 = AND 0xffffffffffffffffffffffffffffffffffffffff V113
0x1d4: M[0x0] = V115
0x1d5: V116 = 0x20
0x1d7: V117 = ADD 0x20 0x0
0x1da: M[0x20] = 0x0
0x1db: V118 = 0x20
0x1dd: V119 = ADD 0x20 0x20
0x1de: V120 = 0x0
0x1e0: V121 = SHA3 0x0 0x40
0x1e1: V122 = 0x0
0x1e5: V123 = S[V121]
0x1e6: V124 = SUB V123 V62
0x1ec: S[V121] = V124
0x1ee: V125 = 0x2
0x1f0: V126 = 0x0
0x1f3: V127 = S[0x2]
0x1f5: V128 = 0x100
0x1f8: V129 = EXP 0x100 0x0
0x1fa: V130 = DIV V127 0x1
0x1fb: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x210: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V130
0x211: V133 = 0xffffffffffffffffffffffffffffffffffffffff
0x226: V134 = AND 0xffffffffffffffffffffffffffffffffffffffff V132
0x227: V135 = 0x4c2f04a4
0x22c: V136 = CALLER
0x22e: V137 = 0x40
0x230: V138 = M[0x40]
0x232: V139 = 0xffffffff
0x237: V140 = AND 0xffffffff 0x4c2f04a4
0x238: V141 = 0x100000000000000000000000000000000000000000000000000000000
0x256: V142 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4c2f04a4
0x258: M[V138] = 0x4c2f04a400000000000000000000000000000000000000000000000000000000
0x259: V143 = 0x4
0x25b: V144 = ADD 0x4 V138
0x25e: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x273: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V136
0x274: V147 = 0xffffffffffffffffffffffffffffffffffffffff
0x289: V148 = AND 0xffffffffffffffffffffffffffffffffffffffff V146
0x28b: M[V144] = V148
0x28c: V149 = 0x20
0x28e: V150 = ADD 0x20 V144
0x291: M[V150] = V62
0x292: V151 = 0x20
0x294: V152 = ADD 0x20 V150
0x296: V153 = 0x20
0x298: V154 = ADD 0x20 V152
0x29b: V155 = SUB V154 V144
0x29d: M[V152] = V155
0x29e: V156 = 0x7
0x2a1: M[V154] = 0x7
0x2a2: V157 = 0x20
0x2a4: V158 = ADD 0x20 V154
0x2a6: V159 = 0x436173684f757400000000000000000000000000000000000000000000000000
0x2c8: M[V158] = 0x436173684f757400000000000000000000000000000000000000000000000000
0x2ca: V160 = 0x20
0x2cc: V161 = ADD 0x20 V158
0x2d2: V162 = 0x0
0x2d4: V163 = 0x40
0x2d6: V164 = M[0x40]
0x2d9: V165 = SUB V161 V164
0x2db: V166 = 0x0
0x2df: V167 = EXTCODESIZE V134
0x2e0: V168 = ISZERO V167
0x2e1: V169 = ISZERO V168
0x2e2: V170 = 0x2ea
0x2e5: JUMPI 0x2ea V169
---
Entry stack: [V11, 0xfb, V62]
Stack pops: 1
Stack additions: [S0, V134, 0x4c2f04a4, V161, 0x0, V164, V165, V164, 0x0, V134]
Exit stack: [V11, 0xfb, V62, V134, 0x4c2f04a4, V161, 0x0, V164, V165, V164, 0x0, V134]

================================

Block 0x2e6
[0x2e6:0x2e9]
---
Predecessors: [0x1a2]
Successors: []
---
0x2e6 PUSH1 0x0
0x2e8 DUP1
0x2e9 REVERT
---
0x2e6: V171 = 0x0
0x2e9: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfb, V62, V134, 0x4c2f04a4, V161, 0x0, V164, V165, V164, 0x0, V134]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfb, V62, V134, 0x4c2f04a4, V161, 0x0, V164, V165, V164, 0x0, V134]

================================

Block 0x2ea
[0x2ea:0x2f6]
---
Predecessors: [0x1a2]
Successors: [0x2f7, 0x2fb]
---
0x2ea JUMPDEST
0x2eb PUSH2 0x2c6
0x2ee GAS
0x2ef SUB
0x2f0 CALL
0x2f1 ISZERO
0x2f2 ISZERO
0x2f3 PUSH2 0x2fb
0x2f6 JUMPI
---
0x2ea: JUMPDEST 
0x2eb: V172 = 0x2c6
0x2ee: V173 = GAS
0x2ef: V174 = SUB V173 0x2c6
0x2f0: V175 = CALL V174 V134 0x0 V164 V165 V164 0x0
0x2f1: V176 = ISZERO V175
0x2f2: V177 = ISZERO V176
0x2f3: V178 = 0x2fb
0x2f6: JUMPI 0x2fb V177
---
Entry stack: [V11, 0xfb, V62, V134, 0x4c2f04a4, V161, 0x0, V164, V165, V164, 0x0, V134]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0xfb, V62, V134, 0x4c2f04a4, V161]

================================

Block 0x2f7
[0x2f7:0x2fa]
---
Predecessors: [0x2ea]
Successors: []
---
0x2f7 PUSH1 0x0
0x2f9 DUP1
0x2fa REVERT
---
0x2f7: V179 = 0x0
0x2fa: REVERT 0x0 0x0
---
Entry stack: [V11, 0xfb, V62, V134, 0x4c2f04a4, V161]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfb, V62, V134, 0x4c2f04a4, V161]

================================

Block 0x2fb
[0x2fb:0x2fe]
---
Predecessors: [0x2ea]
Successors: [0x2ff]
---
0x2fb JUMPDEST
0x2fc POP
0x2fd POP
0x2fe POP
---
0x2fb: JUMPDEST 
---
Entry stack: [V11, 0xfb, V62, V134, 0x4c2f04a4, V161]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xfb, V62]

================================

Block 0x2ff
[0x2ff:0x2ff]
---
Predecessors: [0x16d, 0x2fb]
Successors: [0x300]
---
0x2ff JUMPDEST
---
0x2ff: JUMPDEST 
---
Entry stack: [V11, 0xfb, V62]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xfb, V62]

================================

Block 0x300
[0x300:0x302]
---
Predecessors: [0x125, 0x2ff]
Successors: [0xfb]
---
0x300 JUMPDEST
0x301 POP
0x302 JUMP
---
0x300: JUMPDEST 
0x302: JUMP 0xfb
---
Entry stack: [V11, 0xfb, V62]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x303
[0x303:0x30d]
---
Predecessors: [0xfd]
Successors: [0x30e, 0x46b]
---
0x303 JUMPDEST
0x304 PUSH1 0x1
0x306 SLOAD
0x307 CALLVALUE
0x308 GT
0x309 ISZERO
0x30a PUSH2 0x46b
0x30d JUMPI
---
0x303: JUMPDEST 
0x304: V180 = 0x1
0x306: V181 = S[0x1]
0x307: V182 = CALLVALUE
0x308: V183 = GT V182 V181
0x309: V184 = ISZERO V183
0x30a: V185 = 0x46b
0x30d: JUMPI 0x46b V184
---
Entry stack: [V11, 0x105]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x105]

================================

Block 0x30e
[0x30e:0x451]
---
Predecessors: [0x303]
Successors: [0x452, 0x456]
---
0x30e CALLVALUE
0x30f PUSH1 0x0
0x311 DUP1
0x312 CALLER
0x313 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x328 AND
0x329 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33e AND
0x33f DUP2
0x340 MSTORE
0x341 PUSH1 0x20
0x343 ADD
0x344 SWAP1
0x345 DUP2
0x346 MSTORE
0x347 PUSH1 0x20
0x349 ADD
0x34a PUSH1 0x0
0x34c SHA3
0x34d PUSH1 0x0
0x34f DUP3
0x350 DUP3
0x351 SLOAD
0x352 ADD
0x353 SWAP3
0x354 POP
0x355 POP
0x356 DUP2
0x357 SWAP1
0x358 SSTORE
0x359 POP
0x35a PUSH1 0x2
0x35c PUSH1 0x0
0x35e SWAP1
0x35f SLOAD
0x360 SWAP1
0x361 PUSH2 0x100
0x364 EXP
0x365 SWAP1
0x366 DIV
0x367 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37c AND
0x37d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x392 AND
0x393 PUSH4 0x4c2f04a4
0x398 CALLER
0x399 CALLVALUE
0x39a PUSH1 0x40
0x39c MLOAD
0x39d DUP4
0x39e PUSH4 0xffffffff
0x3a3 AND
0x3a4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x3c2 MUL
0x3c3 DUP2
0x3c4 MSTORE
0x3c5 PUSH1 0x4
0x3c7 ADD
0x3c8 DUP1
0x3c9 DUP4
0x3ca PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3df AND
0x3e0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f5 AND
0x3f6 DUP2
0x3f7 MSTORE
0x3f8 PUSH1 0x20
0x3fa ADD
0x3fb DUP3
0x3fc DUP2
0x3fd MSTORE
0x3fe PUSH1 0x20
0x400 ADD
0x401 DUP1
0x402 PUSH1 0x20
0x404 ADD
0x405 DUP3
0x406 DUP2
0x407 SUB
0x408 DUP3
0x409 MSTORE
0x40a PUSH1 0x7
0x40c DUP2
0x40d MSTORE
0x40e PUSH1 0x20
0x410 ADD
0x411 DUP1
0x412 PUSH32 0x4465706f73697400000000000000000000000000000000000000000000000000
0x433 DUP2
0x434 MSTORE
0x435 POP
0x436 PUSH1 0x20
0x438 ADD
0x439 SWAP4
0x43a POP
0x43b POP
0x43c POP
0x43d POP
0x43e PUSH1 0x0
0x440 PUSH1 0x40
0x442 MLOAD
0x443 DUP1
0x444 DUP4
0x445 SUB
0x446 DUP2
0x447 PUSH1 0x0
0x449 DUP8
0x44a DUP1
0x44b EXTCODESIZE
0x44c ISZERO
0x44d ISZERO
0x44e PUSH2 0x456
0x451 JUMPI
---
0x30e: V186 = CALLVALUE
0x30f: V187 = 0x0
0x312: V188 = CALLER
0x313: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x328: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x329: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x33e: V192 = AND 0xffffffffffffffffffffffffffffffffffffffff V190
0x340: M[0x0] = V192
0x341: V193 = 0x20
0x343: V194 = ADD 0x20 0x0
0x346: M[0x20] = 0x0
0x347: V195 = 0x20
0x349: V196 = ADD 0x20 0x20
0x34a: V197 = 0x0
0x34c: V198 = SHA3 0x0 0x40
0x34d: V199 = 0x0
0x351: V200 = S[V198]
0x352: V201 = ADD V200 V186
0x358: S[V198] = V201
0x35a: V202 = 0x2
0x35c: V203 = 0x0
0x35f: V204 = S[0x2]
0x361: V205 = 0x100
0x364: V206 = EXP 0x100 0x0
0x366: V207 = DIV V204 0x1
0x367: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x37c: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x37d: V210 = 0xffffffffffffffffffffffffffffffffffffffff
0x392: V211 = AND 0xffffffffffffffffffffffffffffffffffffffff V209
0x393: V212 = 0x4c2f04a4
0x398: V213 = CALLER
0x399: V214 = CALLVALUE
0x39a: V215 = 0x40
0x39c: V216 = M[0x40]
0x39e: V217 = 0xffffffff
0x3a3: V218 = AND 0xffffffff 0x4c2f04a4
0x3a4: V219 = 0x100000000000000000000000000000000000000000000000000000000
0x3c2: V220 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x4c2f04a4
0x3c4: M[V216] = 0x4c2f04a400000000000000000000000000000000000000000000000000000000
0x3c5: V221 = 0x4
0x3c7: V222 = ADD 0x4 V216
0x3ca: V223 = 0xffffffffffffffffffffffffffffffffffffffff
0x3df: V224 = AND 0xffffffffffffffffffffffffffffffffffffffff V213
0x3e0: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f5: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x3f7: M[V222] = V226
0x3f8: V227 = 0x20
0x3fa: V228 = ADD 0x20 V222
0x3fd: M[V228] = V214
0x3fe: V229 = 0x20
0x400: V230 = ADD 0x20 V228
0x402: V231 = 0x20
0x404: V232 = ADD 0x20 V230
0x407: V233 = SUB V232 V222
0x409: M[V230] = V233
0x40a: V234 = 0x7
0x40d: M[V232] = 0x7
0x40e: V235 = 0x20
0x410: V236 = ADD 0x20 V232
0x412: V237 = 0x4465706f73697400000000000000000000000000000000000000000000000000
0x434: M[V236] = 0x4465706f73697400000000000000000000000000000000000000000000000000
0x436: V238 = 0x20
0x438: V239 = ADD 0x20 V236
0x43e: V240 = 0x0
0x440: V241 = 0x40
0x442: V242 = M[0x40]
0x445: V243 = SUB V239 V242
0x447: V244 = 0x0
0x44b: V245 = EXTCODESIZE V211
0x44c: V246 = ISZERO V245
0x44d: V247 = ISZERO V246
0x44e: V248 = 0x456
0x451: JUMPI 0x456 V247
---
Entry stack: [V11, 0x105]
Stack pops: 0
Stack additions: [V211, 0x4c2f04a4, V239, 0x0, V242, V243, V242, 0x0, V211]
Exit stack: [V11, 0x105, V211, 0x4c2f04a4, V239, 0x0, V242, V243, V242, 0x0, V211]

================================

Block 0x452
[0x452:0x455]
---
Predecessors: [0x30e]
Successors: []
---
0x452 PUSH1 0x0
0x454 DUP1
0x455 REVERT
---
0x452: V249 = 0x0
0x455: REVERT 0x0 0x0
---
Entry stack: [V11, 0x105, V211, 0x4c2f04a4, V239, 0x0, V242, V243, V242, 0x0, V211]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x105, V211, 0x4c2f04a4, V239, 0x0, V242, V243, V242, 0x0, V211]

================================

Block 0x456
[0x456:0x462]
---
Predecessors: [0x30e]
Successors: [0x463, 0x467]
---
0x456 JUMPDEST
0x457 PUSH2 0x2c6
0x45a GAS
0x45b SUB
0x45c CALL
0x45d ISZERO
0x45e ISZERO
0x45f PUSH2 0x467
0x462 JUMPI
---
0x456: JUMPDEST 
0x457: V250 = 0x2c6
0x45a: V251 = GAS
0x45b: V252 = SUB V251 0x2c6
0x45c: V253 = CALL V252 V211 0x0 V242 V243 V242 0x0
0x45d: V254 = ISZERO V253
0x45e: V255 = ISZERO V254
0x45f: V256 = 0x467
0x462: JUMPI 0x467 V255
---
Entry stack: [V11, 0x105, V211, 0x4c2f04a4, V239, 0x0, V242, V243, V242, 0x0, V211]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x105, V211, 0x4c2f04a4, V239]

================================

Block 0x463
[0x463:0x466]
---
Predecessors: [0x456]
Successors: []
---
0x463 PUSH1 0x0
0x465 DUP1
0x466 REVERT
---
0x463: V257 = 0x0
0x466: REVERT 0x0 0x0
---
Entry stack: [V11, 0x105, V211, 0x4c2f04a4, V239]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x105, V211, 0x4c2f04a4, V239]

================================

Block 0x467
[0x467:0x46a]
---
Predecessors: [0x456]
Successors: [0x46b]
---
0x467 JUMPDEST
0x468 POP
0x469 POP
0x46a POP
---
0x467: JUMPDEST 
---
Entry stack: [V11, 0x105, V211, 0x4c2f04a4, V239]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x105]

================================

Block 0x46b
[0x46b:0x46c]
---
Predecessors: [0x303, 0x467]
Successors: [0x105]
---
0x46b JUMPDEST
0x46c JUMP
---
0x46b: JUMPDEST 
0x46c: JUMP 0x105
---
Entry stack: [V11, 0x105]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x46d
[0x46d:0x498]
---
Predecessors: []
Successors: []
---
0x46d STOP
0x46e LOG1
0x46f PUSH6 0x627a7a723058
0x476 SHA3
0x477 PUSH29 0x4069272441081bd2006a645242f8e03cc9228a7f3d2fd9e4d742939077
0x495 MOD
0x496 MISSING 0xd9
0x497 STOP
0x498 MISSING 0x29
---
0x46d: STOP 
0x46e: LOG S0 S1 S2
0x46f: V258 = 0x627a7a723058
0x476: V259 = SHA3 0x627a7a723058 S3
0x477: V260 = 0x4069272441081bd2006a645242f8e03cc9228a7f3d2fd9e4d742939077
0x495: V261 = MOD 0x4069272441081bd2006a645242f8e03cc9228a7f3d2fd9e4d742939077 V259
0x496: MISSING 0xd9
0x497: STOP 
0x498: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V261]
Exit stack: []

================================

Function 0:
Public function signature: 0x11bcd830
Entry block: 0x64
Exit block: 0x77
Body: 0x64, 0x6b, 0x6f, 0x77, 0x107

Function 1:
Public function signature: 0x27e235e3
Entry block: 0x8d
Exit block: 0xc4
Body: 0x8d, 0x94, 0x98, 0xc4, 0x10d

Function 2:
Public function signature: 0x9ffa0711
Entry block: 0xda
Exit block: 0x2f7
Body: 0xda, 0xe1, 0xe5, 0xfb, 0x125, 0x16d, 0x1a2, 0x2e6, 0x2ea, 0x2f7, 0x2fb, 0x2ff, 0x300

Function 3:
Public function signature: 0xed21248c
Entry block: 0xfd
Exit block: 0x463
Body: 0xfd, 0x105, 0x303, 0x30e, 0x452, 0x456, 0x463, 0x467, 0x46b

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

