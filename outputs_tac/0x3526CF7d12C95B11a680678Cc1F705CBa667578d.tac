Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x76]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x76
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x76
0xa: JUMPI 0x76 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3e]
---
Predecessors: [0x0]
Successors: [0x3f, 0x78]
---
0xb PUSH1 0x0
0xd CALLDATALOAD
0xe PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2c SWAP1
0x2d DIV
0x2e PUSH4 0xffffffff
0x33 AND
0x34 DUP1
0x35 PUSH4 0x2e1a7d4d
0x3a EQ
0x3b PUSH2 0x78
0x3e JUMPI
---
0xb: V5 = 0x0
0xd: V6 = CALLDATALOAD 0x0
0xe: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x2d: V8 = DIV V6 0x100000000000000000000000000000000000000000000000000000000
0x2e: V9 = 0xffffffff
0x33: V10 = AND 0xffffffff V8
0x35: V11 = 0x2e1a7d4d
0x3a: V12 = EQ 0x2e1a7d4d V10
0x3b: V13 = 0x78
0x3e: JUMPI 0x78 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3f
[0x3f:0x49]
---
Predecessors: [0xb]
Successors: [0x4a, 0x9b]
---
0x3f DUP1
0x40 PUSH4 0x41c0e1b5
0x45 EQ
0x46 PUSH2 0x9b
0x49 JUMPI
---
0x40: V14 = 0x41c0e1b5
0x45: V15 = EQ 0x41c0e1b5 V10
0x46: V16 = 0x9b
0x49: JUMPI 0x9b V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x4a
[0x4a:0x54]
---
Predecessors: [0x3f]
Successors: [0x55, 0xb0]
---
0x4a DUP1
0x4b PUSH4 0x6b5e3ca4
0x50 EQ
0x51 PUSH2 0xb0
0x54 JUMPI
---
0x4b: V17 = 0x6b5e3ca4
0x50: V18 = EQ 0x6b5e3ca4 V10
0x51: V19 = 0xb0
0x54: JUMPI 0xb0 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x55
[0x55:0x5f]
---
Predecessors: [0x4a]
Successors: [0x60, 0xc5]
---
0x55 DUP1
0x56 PUSH4 0xb4a99a4e
0x5b EQ
0x5c PUSH2 0xc5
0x5f JUMPI
---
0x56: V20 = 0xb4a99a4e
0x5b: V21 = EQ 0xb4a99a4e V10
0x5c: V22 = 0xc5
0x5f: JUMPI 0xc5 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x60
[0x60:0x6a]
---
Predecessors: [0x55]
Successors: [0x6b, 0x11a]
---
0x60 DUP1
0x61 PUSH4 0xd0e30db0
0x66 EQ
0x67 PUSH2 0x11a
0x6a JUMPI
---
0x61: V23 = 0xd0e30db0
0x66: V24 = EQ 0xd0e30db0 V10
0x67: V25 = 0x11a
0x6a: JUMPI 0x11a V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6b
[0x6b:0x75]
---
Predecessors: [0x60]
Successors: [0x76, 0x124]
---
0x6b DUP1
0x6c PUSH4 0xfc7e286d
0x71 EQ
0x72 PUSH2 0x124
0x75 JUMPI
---
0x6c: V26 = 0xfc7e286d
0x71: V27 = EQ 0xfc7e286d V10
0x72: V28 = 0x124
0x75: JUMPI 0x124 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x76
[0x76:0x77]
---
Predecessors: [0x0, 0x6b]
Successors: []
---
0x76 JUMPDEST
0x77 STOP
---
0x76: JUMPDEST 
0x77: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x78
[0x78:0x7e]
---
Predecessors: [0xb]
Successors: [0x7f, 0x83]
---
0x78 JUMPDEST
0x79 CALLVALUE
0x7a ISZERO
0x7b PUSH2 0x83
0x7e JUMPI
---
0x78: JUMPDEST 
0x79: V29 = CALLVALUE
0x7a: V30 = ISZERO V29
0x7b: V31 = 0x83
0x7e: JUMPI 0x83 V30
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x7f
[0x7f:0x82]
---
Predecessors: [0x78]
Successors: []
---
0x7f PUSH1 0x0
0x81 DUP1
0x82 REVERT
---
0x7f: V32 = 0x0
0x82: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x83
[0x83:0x98]
---
Predecessors: [0x78]
Successors: [0x171]
---
0x83 JUMPDEST
0x84 PUSH2 0x99
0x87 PUSH1 0x4
0x89 DUP1
0x8a DUP1
0x8b CALLDATALOAD
0x8c SWAP1
0x8d PUSH1 0x20
0x8f ADD
0x90 SWAP1
0x91 SWAP2
0x92 SWAP1
0x93 POP
0x94 POP
0x95 PUSH2 0x171
0x98 JUMP
---
0x83: JUMPDEST 
0x84: V33 = 0x99
0x87: V34 = 0x4
0x8b: V35 = CALLDATALOAD 0x4
0x8d: V36 = 0x20
0x8f: V37 = ADD 0x20 0x4
0x95: V38 = 0x171
0x98: JUMP 0x171
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x99, V35]
Exit stack: [V10, 0x99, V35]

================================

Block 0x99
[0x99:0x9a]
---
Predecessors: [0x2a4]
Successors: []
---
0x99 JUMPDEST
0x9a STOP
---
0x99: JUMPDEST 
0x9a: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x9b
[0x9b:0xa1]
---
Predecessors: [0x3f]
Successors: [0xa2, 0xa6]
---
0x9b JUMPDEST
0x9c CALLVALUE
0x9d ISZERO
0x9e PUSH2 0xa6
0xa1 JUMPI
---
0x9b: JUMPDEST 
0x9c: V39 = CALLVALUE
0x9d: V40 = ISZERO V39
0x9e: V41 = 0xa6
0xa1: JUMPI 0xa6 V40
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa2
[0xa2:0xa5]
---
Predecessors: [0x9b]
Successors: []
---
0xa2 PUSH1 0x0
0xa4 DUP1
0xa5 REVERT
---
0xa2: V42 = 0x0
0xa5: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xa6
[0xa6:0xad]
---
Predecessors: [0x9b]
Successors: [0x2a8]
---
0xa6 JUMPDEST
0xa7 PUSH2 0xae
0xaa PUSH2 0x2a8
0xad JUMP
---
0xa6: JUMPDEST 
0xa7: V43 = 0xae
0xaa: V44 = 0x2a8
0xad: JUMP 0x2a8
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xae]
Exit stack: [V10, 0xae]

================================

Block 0xae
[0xae:0xaf]
---
Predecessors: [0x33c]
Successors: []
---
0xae JUMPDEST
0xaf STOP
---
0xae: JUMPDEST 
0xaf: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb0
[0xb0:0xb6]
---
Predecessors: [0x4a]
Successors: [0xb7, 0xbb]
---
0xb0 JUMPDEST
0xb1 CALLVALUE
0xb2 ISZERO
0xb3 PUSH2 0xbb
0xb6 JUMPI
---
0xb0: JUMPDEST 
0xb1: V45 = CALLVALUE
0xb2: V46 = ISZERO V45
0xb3: V47 = 0xbb
0xb6: JUMPI 0xbb V46
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xba]
---
Predecessors: [0xb0]
Successors: []
---
0xb7 PUSH1 0x0
0xb9 DUP1
0xba REVERT
---
0xb7: V48 = 0x0
0xba: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xbb
[0xbb:0xc2]
---
Predecessors: [0xb0]
Successors: [0x33e]
---
0xbb JUMPDEST
0xbc PUSH2 0xc3
0xbf PUSH2 0x33e
0xc2 JUMP
---
0xbb: JUMPDEST 
0xbc: V49 = 0xc3
0xbf: V50 = 0x33e
0xc2: JUMP 0x33e
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xc3]
Exit stack: [V10, 0xc3]

================================

Block 0xc3
[0xc3:0xc4]
---
Predecessors: [0x33e]
Successors: []
---
0xc3 JUMPDEST
0xc4 STOP
---
0xc3: JUMPDEST 
0xc4: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xc5
[0xc5:0xcb]
---
Predecessors: [0x55]
Successors: [0xcc, 0xd0]
---
0xc5 JUMPDEST
0xc6 CALLVALUE
0xc7 ISZERO
0xc8 PUSH2 0xd0
0xcb JUMPI
---
0xc5: JUMPDEST 
0xc6: V51 = CALLVALUE
0xc7: V52 = ISZERO V51
0xc8: V53 = 0xd0
0xcb: JUMPI 0xd0 V52
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xcc
[0xcc:0xcf]
---
Predecessors: [0xc5]
Successors: []
---
0xcc PUSH1 0x0
0xce DUP1
0xcf REVERT
---
0xcc: V54 = 0x0
0xcf: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0xd0
[0xd0:0xd7]
---
Predecessors: [0xc5]
Successors: [0x381]
---
0xd0 JUMPDEST
0xd1 PUSH2 0xd8
0xd4 PUSH2 0x381
0xd7 JUMP
---
0xd0: JUMPDEST 
0xd1: V55 = 0xd8
0xd4: V56 = 0x381
0xd7: JUMP 0x381
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0xd8]
Exit stack: [V10, 0xd8]

================================

Block 0xd8
[0xd8:0x119]
---
Predecessors: [0x381]
Successors: []
---
0xd8 JUMPDEST
0xd9 PUSH1 0x40
0xdb MLOAD
0xdc DUP1
0xdd DUP3
0xde PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf3 AND
0xf4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x109 AND
0x10a DUP2
0x10b MSTORE
0x10c PUSH1 0x20
0x10e ADD
0x10f SWAP2
0x110 POP
0x111 POP
0x112 PUSH1 0x40
0x114 MLOAD
0x115 DUP1
0x116 SWAP2
0x117 SUB
0x118 SWAP1
0x119 RETURN
---
0xd8: JUMPDEST 
0xd9: V57 = 0x40
0xdb: V58 = M[0x40]
0xde: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0xf3: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V206
0xf4: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0x109: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x10b: M[V58] = V62
0x10c: V63 = 0x20
0x10e: V64 = ADD 0x20 V58
0x112: V65 = 0x40
0x114: V66 = M[0x40]
0x117: V67 = SUB V64 V66
0x119: RETURN V66 V67
---
Entry stack: [V10, 0xd8, V206]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0xd8]

================================

Block 0x11a
[0x11a:0x121]
---
Predecessors: [0x60]
Successors: [0x3a7]
---
0x11a JUMPDEST
0x11b PUSH2 0x122
0x11e PUSH2 0x3a7
0x121 JUMP
---
0x11a: JUMPDEST 
0x11b: V68 = 0x122
0x11e: V69 = 0x3a7
0x121: JUMP 0x3a7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x122]
Exit stack: [V10, 0x122]

================================

Block 0x122
[0x122:0x123]
---
Predecessors: [0x410]
Successors: []
---
0x122 JUMPDEST
0x123 STOP
---
0x122: JUMPDEST 
0x123: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x124
[0x124:0x12a]
---
Predecessors: [0x6b]
Successors: [0x12b, 0x12f]
---
0x124 JUMPDEST
0x125 CALLVALUE
0x126 ISZERO
0x127 PUSH2 0x12f
0x12a JUMPI
---
0x124: JUMPDEST 
0x125: V70 = CALLVALUE
0x126: V71 = ISZERO V70
0x127: V72 = 0x12f
0x12a: JUMPI 0x12f V71
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12b
[0x12b:0x12e]
---
Predecessors: [0x124]
Successors: []
---
0x12b PUSH1 0x0
0x12d DUP1
0x12e REVERT
---
0x12b: V73 = 0x0
0x12e: REVERT 0x0 0x0
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x12f
[0x12f:0x15a]
---
Predecessors: [0x124]
Successors: [0x412]
---
0x12f JUMPDEST
0x130 PUSH2 0x15b
0x133 PUSH1 0x4
0x135 DUP1
0x136 DUP1
0x137 CALLDATALOAD
0x138 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x14d AND
0x14e SWAP1
0x14f PUSH1 0x20
0x151 ADD
0x152 SWAP1
0x153 SWAP2
0x154 SWAP1
0x155 POP
0x156 POP
0x157 PUSH2 0x412
0x15a JUMP
---
0x12f: JUMPDEST 
0x130: V74 = 0x15b
0x133: V75 = 0x4
0x137: V76 = CALLDATALOAD 0x4
0x138: V77 = 0xffffffffffffffffffffffffffffffffffffffff
0x14d: V78 = AND 0xffffffffffffffffffffffffffffffffffffffff V76
0x14f: V79 = 0x20
0x151: V80 = ADD 0x20 0x4
0x157: V81 = 0x412
0x15a: JUMP 0x412
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x15b, V78]
Exit stack: [V10, 0x15b, V78]

================================

Block 0x15b
[0x15b:0x170]
---
Predecessors: [0x412]
Successors: []
---
0x15b JUMPDEST
0x15c PUSH1 0x40
0x15e MLOAD
0x15f DUP1
0x160 DUP3
0x161 DUP2
0x162 MSTORE
0x163 PUSH1 0x20
0x165 ADD
0x166 SWAP2
0x167 POP
0x168 POP
0x169 PUSH1 0x40
0x16b MLOAD
0x16c DUP1
0x16d SWAP2
0x16e SUB
0x16f SWAP1
0x170 RETURN
---
0x15b: JUMPDEST 
0x15c: V82 = 0x40
0x15e: V83 = M[0x40]
0x162: M[V83] = V239
0x163: V84 = 0x20
0x165: V85 = ADD 0x20 V83
0x169: V86 = 0x40
0x16b: V87 = M[0x40]
0x16e: V88 = SUB V85 V87
0x170: RETURN V87 V88
---
Entry stack: [V10, 0x15b, V239]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x15b]

================================

Block 0x171
[0x171:0x1c8]
---
Predecessors: [0x83]
Successors: [0x1c9, 0x2a4]
---
0x171 JUMPDEST
0x172 PUSH1 0x0
0x174 DUP1
0x175 PUSH1 0x0
0x177 SWAP1
0x178 SLOAD
0x179 SWAP1
0x17a PUSH2 0x100
0x17d EXP
0x17e SWAP1
0x17f DIV
0x180 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x195 AND
0x196 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1ab AND
0x1ac CALLER
0x1ad PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1c2 AND
0x1c3 EQ
0x1c4 ISZERO
0x1c5 PUSH2 0x2a4
0x1c8 JUMPI
---
0x171: JUMPDEST 
0x172: V89 = 0x0
0x175: V90 = 0x0
0x178: V91 = S[0x0]
0x17a: V92 = 0x100
0x17d: V93 = EXP 0x100 0x0
0x17f: V94 = DIV V91 0x1
0x180: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x195: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x196: V97 = 0xffffffffffffffffffffffffffffffffffffffff
0x1ab: V98 = AND 0xffffffffffffffffffffffffffffffffffffffff V96
0x1ac: V99 = CALLER
0x1ad: V100 = 0xffffffffffffffffffffffffffffffffffffffff
0x1c2: V101 = AND 0xffffffffffffffffffffffffffffffffffffffff V99
0x1c3: V102 = EQ V101 V98
0x1c4: V103 = ISZERO V102
0x1c5: V104 = 0x2a4
0x1c8: JUMPI 0x2a4 V103
---
Entry stack: [V10, 0x99, V35]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x99, V35, 0x0]

================================

Block 0x1c9
[0x1c9:0x261]
---
Predecessors: [0x171]
Successors: [0x262, 0x267]
---
0x1c9 PUSH1 0x2
0x1cb PUSH1 0x0
0x1cd CALLER
0x1ce PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e3 AND
0x1e4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f9 AND
0x1fa DUP2
0x1fb MSTORE
0x1fc PUSH1 0x20
0x1fe ADD
0x1ff SWAP1
0x200 DUP2
0x201 MSTORE
0x202 PUSH1 0x20
0x204 ADD
0x205 PUSH1 0x0
0x207 SHA3
0x208 SLOAD
0x209 SWAP1
0x20a POP
0x20b CALLVALUE
0x20c PUSH1 0x2
0x20e PUSH1 0x0
0x210 CALLER
0x211 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x226 AND
0x227 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x23c AND
0x23d DUP2
0x23e MSTORE
0x23f PUSH1 0x20
0x241 ADD
0x242 SWAP1
0x243 DUP2
0x244 MSTORE
0x245 PUSH1 0x20
0x247 ADD
0x248 PUSH1 0x0
0x24a SHA3
0x24b PUSH1 0x0
0x24d DUP3
0x24e DUP3
0x24f SLOAD
0x250 SUB
0x251 SWAP3
0x252 POP
0x253 POP
0x254 DUP2
0x255 SWAP1
0x256 SSTORE
0x257 POP
0x258 DUP1
0x259 DUP3
0x25a GT
0x25b ISZERO
0x25c DUP1
0x25d ISZERO
0x25e PUSH2 0x267
0x261 JUMPI
---
0x1c9: V105 = 0x2
0x1cb: V106 = 0x0
0x1cd: V107 = CALLER
0x1ce: V108 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e3: V109 = AND 0xffffffffffffffffffffffffffffffffffffffff V107
0x1e4: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f9: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1fb: M[0x0] = V111
0x1fc: V112 = 0x20
0x1fe: V113 = ADD 0x20 0x0
0x201: M[0x20] = 0x2
0x202: V114 = 0x20
0x204: V115 = ADD 0x20 0x20
0x205: V116 = 0x0
0x207: V117 = SHA3 0x0 0x40
0x208: V118 = S[V117]
0x20b: V119 = CALLVALUE
0x20c: V120 = 0x2
0x20e: V121 = 0x0
0x210: V122 = CALLER
0x211: V123 = 0xffffffffffffffffffffffffffffffffffffffff
0x226: V124 = AND 0xffffffffffffffffffffffffffffffffffffffff V122
0x227: V125 = 0xffffffffffffffffffffffffffffffffffffffff
0x23c: V126 = AND 0xffffffffffffffffffffffffffffffffffffffff V124
0x23e: M[0x0] = V126
0x23f: V127 = 0x20
0x241: V128 = ADD 0x20 0x0
0x244: M[0x20] = 0x2
0x245: V129 = 0x20
0x247: V130 = ADD 0x20 0x20
0x248: V131 = 0x0
0x24a: V132 = SHA3 0x0 0x40
0x24b: V133 = 0x0
0x24f: V134 = S[V132]
0x250: V135 = SUB V134 V119
0x256: S[V132] = V135
0x25a: V136 = GT V35 V118
0x25b: V137 = ISZERO V136
0x25d: V138 = ISZERO V137
0x25e: V139 = 0x267
0x261: JUMPI 0x267 V138
---
Entry stack: [V10, 0x99, V35, 0x0]
Stack pops: 2
Stack additions: [S1, V118, V137]
Exit stack: [V10, 0x99, V35, V118, V137]

================================

Block 0x262
[0x262:0x266]
---
Predecessors: [0x1c9]
Successors: [0x267]
---
0x262 POP
0x263 PUSH1 0x0
0x265 DUP2
0x266 GT
---
0x263: V140 = 0x0
0x266: V141 = GT V118 0x0
---
Entry stack: [V10, 0x99, V35, V118, V137]
Stack pops: 2
Stack additions: [S1, V141]
Exit stack: [V10, 0x99, V35, V118, V141]

================================

Block 0x267
[0x267:0x26c]
---
Predecessors: [0x1c9, 0x262]
Successors: [0x26d, 0x2a3]
---
0x267 JUMPDEST
0x268 ISZERO
0x269 PUSH2 0x2a3
0x26c JUMPI
---
0x267: JUMPDEST 
0x268: V142 = ISZERO S0
0x269: V143 = 0x2a3
0x26c: JUMPI 0x2a3 V142
---
Entry stack: [V10, 0x99, V35, V118, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x99, V35, V118]

================================

Block 0x26d
[0x26d:0x2a2]
---
Predecessors: [0x267]
Successors: [0x2a3]
---
0x26d CALLER
0x26e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x283 AND
0x284 PUSH2 0x8fc
0x287 DUP4
0x288 SWAP1
0x289 DUP2
0x28a ISZERO
0x28b MUL
0x28c SWAP1
0x28d PUSH1 0x40
0x28f MLOAD
0x290 PUSH1 0x0
0x292 PUSH1 0x40
0x294 MLOAD
0x295 DUP1
0x296 DUP4
0x297 SUB
0x298 DUP2
0x299 DUP6
0x29a DUP9
0x29b DUP9
0x29c CALL
0x29d SWAP4
0x29e POP
0x29f POP
0x2a0 POP
0x2a1 POP
0x2a2 POP
---
0x26d: V144 = CALLER
0x26e: V145 = 0xffffffffffffffffffffffffffffffffffffffff
0x283: V146 = AND 0xffffffffffffffffffffffffffffffffffffffff V144
0x284: V147 = 0x8fc
0x28a: V148 = ISZERO V35
0x28b: V149 = MUL V148 0x8fc
0x28d: V150 = 0x40
0x28f: V151 = M[0x40]
0x290: V152 = 0x0
0x292: V153 = 0x40
0x294: V154 = M[0x40]
0x297: V155 = SUB V151 V154
0x29c: V156 = CALL V149 V146 V35 V154 V155 V154 0x0
---
Entry stack: [V10, 0x99, V35, V118]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x99, V35, V118]

================================

Block 0x2a3
[0x2a3:0x2a3]
---
Predecessors: [0x267, 0x26d]
Successors: [0x2a4]
---
0x2a3 JUMPDEST
---
0x2a3: JUMPDEST 
---
Entry stack: [V10, 0x99, V35, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x99, V35, V118]

================================

Block 0x2a4
[0x2a4:0x2a7]
---
Predecessors: [0x171, 0x2a3]
Successors: [0x99]
---
0x2a4 JUMPDEST
0x2a5 POP
0x2a6 POP
0x2a7 JUMP
---
0x2a4: JUMPDEST 
0x2a7: JUMP 0x99
---
Entry stack: [V10, 0x99, V35, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a8
[0x2a8:0x2fd]
---
Predecessors: [0xa6]
Successors: [0x2fe, 0x33c]
---
0x2a8 JUMPDEST
0x2a9 PUSH1 0x0
0x2ab DUP1
0x2ac SWAP1
0x2ad SLOAD
0x2ae SWAP1
0x2af PUSH2 0x100
0x2b2 EXP
0x2b3 SWAP1
0x2b4 DIV
0x2b5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2ca AND
0x2cb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2e0 AND
0x2e1 CALLER
0x2e2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f7 AND
0x2f8 EQ
0x2f9 ISZERO
0x2fa PUSH2 0x33c
0x2fd JUMPI
---
0x2a8: JUMPDEST 
0x2a9: V157 = 0x0
0x2ad: V158 = S[0x0]
0x2af: V159 = 0x100
0x2b2: V160 = EXP 0x100 0x0
0x2b4: V161 = DIV V158 0x1
0x2b5: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x2ca: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x2cb: V164 = 0xffffffffffffffffffffffffffffffffffffffff
0x2e0: V165 = AND 0xffffffffffffffffffffffffffffffffffffffff V163
0x2e1: V166 = CALLER
0x2e2: V167 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f7: V168 = AND 0xffffffffffffffffffffffffffffffffffffffff V166
0x2f8: V169 = EQ V168 V165
0x2f9: V170 = ISZERO V169
0x2fa: V171 = 0x33c
0x2fd: JUMPI 0x33c V170
---
Entry stack: [V10, 0xae]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xae]

================================

Block 0x2fe
[0x2fe:0x31e]
---
Predecessors: [0x2a8]
Successors: [0x31f, 0x323]
---
0x2fe PUSH1 0x0
0x300 ADDRESS
0x301 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x316 AND
0x317 BALANCE
0x318 EQ
0x319 ISZERO
0x31a ISZERO
0x31b PUSH2 0x323
0x31e JUMPI
---
0x2fe: V172 = 0x0
0x300: V173 = ADDRESS
0x301: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x316: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x317: V176 = BALANCE V175
0x318: V177 = EQ V176 0x0
0x319: V178 = ISZERO V177
0x31a: V179 = ISZERO V178
0x31b: V180 = 0x323
0x31e: JUMPI 0x323 V179
---
Entry stack: [V10, 0xae]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xae]

================================

Block 0x31f
[0x31f:0x322]
---
Predecessors: [0x2fe]
Successors: []
---
0x31f PUSH1 0x0
0x321 DUP1
0x322 REVERT
---
0x31f: V181 = 0x0
0x322: REVERT 0x0 0x0
---
Entry stack: [V10, 0xae]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xae]

================================

Block 0x323
[0x323:0x33b]
---
Predecessors: [0x2fe]
Successors: []
---
0x323 JUMPDEST
0x324 CALLER
0x325 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x33a AND
0x33b SELFDESTRUCT
---
0x323: JUMPDEST 
0x324: V182 = CALLER
0x325: V183 = 0xffffffffffffffffffffffffffffffffffffffff
0x33a: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x33b: SELFDESTRUCT V184
---
Entry stack: [V10, 0xae]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0xae]

================================

Block 0x33c
[0x33c:0x33d]
---
Predecessors: [0x2a8]
Successors: [0xae]
---
0x33c JUMPDEST
0x33d JUMP
---
0x33c: JUMPDEST 
0x33d: JUMP 0xae
---
Entry stack: [V10, 0xae]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x33e
[0x33e:0x380]
---
Predecessors: [0xbb]
Successors: [0xc3]
---
0x33e JUMPDEST
0x33f CALLER
0x340 PUSH1 0x1
0x342 PUSH1 0x0
0x344 PUSH2 0x100
0x347 EXP
0x348 DUP2
0x349 SLOAD
0x34a DUP2
0x34b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x360 MUL
0x361 NOT
0x362 AND
0x363 SWAP1
0x364 DUP4
0x365 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37a AND
0x37b MUL
0x37c OR
0x37d SWAP1
0x37e SSTORE
0x37f POP
0x380 JUMP
---
0x33e: JUMPDEST 
0x33f: V185 = CALLER
0x340: V186 = 0x1
0x342: V187 = 0x0
0x344: V188 = 0x100
0x347: V189 = EXP 0x100 0x0
0x349: V190 = S[0x1]
0x34b: V191 = 0xffffffffffffffffffffffffffffffffffffffff
0x360: V192 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x361: V193 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x362: V194 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V190
0x365: V195 = 0xffffffffffffffffffffffffffffffffffffffff
0x37a: V196 = AND 0xffffffffffffffffffffffffffffffffffffffff V185
0x37b: V197 = MUL V196 0x1
0x37c: V198 = OR V197 V194
0x37e: S[0x1] = V198
0x380: JUMP 0xc3
---
Entry stack: [V10, 0xc3]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x381
[0x381:0x3a6]
---
Predecessors: [0xd0]
Successors: [0xd8]
---
0x381 JUMPDEST
0x382 PUSH1 0x1
0x384 PUSH1 0x0
0x386 SWAP1
0x387 SLOAD
0x388 SWAP1
0x389 PUSH2 0x100
0x38c EXP
0x38d SWAP1
0x38e DIV
0x38f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a4 AND
0x3a5 DUP2
0x3a6 JUMP
---
0x381: JUMPDEST 
0x382: V199 = 0x1
0x384: V200 = 0x0
0x387: V201 = S[0x1]
0x389: V202 = 0x100
0x38c: V203 = EXP 0x100 0x0
0x38e: V204 = DIV V201 0x1
0x38f: V205 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a4: V206 = AND 0xffffffffffffffffffffffffffffffffffffffff V204
0x3a6: JUMP 0xd8
---
Entry stack: [V10, 0xd8]
Stack pops: 1
Stack additions: [S0, V206]
Exit stack: [V10, 0xd8, V206]

================================

Block 0x3a7
[0x3a7:0x3b8]
---
Predecessors: [0x11a]
Successors: [0x3b9, 0x40a]
---
0x3a7 JUMPDEST
0x3a8 PUSH8 0xde0b6b3a7640000
0x3b1 CALLVALUE
0x3b2 LT
0x3b3 ISZERO
0x3b4 ISZERO
0x3b5 PUSH2 0x40a
0x3b8 JUMPI
---
0x3a7: JUMPDEST 
0x3a8: V207 = 0xde0b6b3a7640000
0x3b1: V208 = CALLVALUE
0x3b2: V209 = LT V208 0xde0b6b3a7640000
0x3b3: V210 = ISZERO V209
0x3b4: V211 = ISZERO V210
0x3b5: V212 = 0x40a
0x3b8: JUMPI 0x40a V211
---
Entry stack: [V10, 0x122]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x122]

================================

Block 0x3b9
[0x3b9:0x409]
---
Predecessors: [0x3a7]
Successors: [0x40f]
---
0x3b9 CALLVALUE
0x3ba PUSH1 0x2
0x3bc PUSH1 0x0
0x3be CALLER
0x3bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d4 AND
0x3d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ea AND
0x3eb DUP2
0x3ec MSTORE
0x3ed PUSH1 0x20
0x3ef ADD
0x3f0 SWAP1
0x3f1 DUP2
0x3f2 MSTORE
0x3f3 PUSH1 0x20
0x3f5 ADD
0x3f6 PUSH1 0x0
0x3f8 SHA3
0x3f9 PUSH1 0x0
0x3fb DUP3
0x3fc DUP3
0x3fd SLOAD
0x3fe ADD
0x3ff SWAP3
0x400 POP
0x401 POP
0x402 DUP2
0x403 SWAP1
0x404 SSTORE
0x405 POP
0x406 PUSH2 0x40f
0x409 JUMP
---
0x3b9: V213 = CALLVALUE
0x3ba: V214 = 0x2
0x3bc: V215 = 0x0
0x3be: V216 = CALLER
0x3bf: V217 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d4: V218 = AND 0xffffffffffffffffffffffffffffffffffffffff V216
0x3d5: V219 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ea: V220 = AND 0xffffffffffffffffffffffffffffffffffffffff V218
0x3ec: M[0x0] = V220
0x3ed: V221 = 0x20
0x3ef: V222 = ADD 0x20 0x0
0x3f2: M[0x20] = 0x2
0x3f3: V223 = 0x20
0x3f5: V224 = ADD 0x20 0x20
0x3f6: V225 = 0x0
0x3f8: V226 = SHA3 0x0 0x40
0x3f9: V227 = 0x0
0x3fd: V228 = S[V226]
0x3fe: V229 = ADD V228 V213
0x404: S[V226] = V229
0x406: V230 = 0x40f
0x409: JUMP 0x40f
---
Entry stack: [V10, 0x122]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x122]

================================

Block 0x40a
[0x40a:0x40e]
---
Predecessors: [0x3a7]
Successors: [0x410]
---
0x40a JUMPDEST
0x40b PUSH2 0x410
0x40e JUMP
---
0x40a: JUMPDEST 
0x40b: V231 = 0x410
0x40e: JUMP 0x410
---
Entry stack: [V10, 0x122]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x122]

================================

Block 0x40f
[0x40f:0x40f]
---
Predecessors: [0x3b9]
Successors: [0x410]
---
0x40f JUMPDEST
---
0x40f: JUMPDEST 
---
Entry stack: [V10, 0x122]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x122]

================================

Block 0x410
[0x410:0x411]
---
Predecessors: [0x40a, 0x40f]
Successors: [0x122]
---
0x410 JUMPDEST
0x411 JUMP
---
0x410: JUMPDEST 
0x411: JUMP 0x122
---
Entry stack: [V10, 0x122]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x412
[0x412:0x429]
---
Predecessors: [0x12f]
Successors: [0x15b]
---
0x412 JUMPDEST
0x413 PUSH1 0x2
0x415 PUSH1 0x20
0x417 MSTORE
0x418 DUP1
0x419 PUSH1 0x0
0x41b MSTORE
0x41c PUSH1 0x40
0x41e PUSH1 0x0
0x420 SHA3
0x421 PUSH1 0x0
0x423 SWAP2
0x424 POP
0x425 SWAP1
0x426 POP
0x427 SLOAD
0x428 DUP2
0x429 JUMP
---
0x412: JUMPDEST 
0x413: V232 = 0x2
0x415: V233 = 0x20
0x417: M[0x20] = 0x2
0x419: V234 = 0x0
0x41b: M[0x0] = V78
0x41c: V235 = 0x40
0x41e: V236 = 0x0
0x420: V237 = SHA3 0x0 0x40
0x421: V238 = 0x0
0x427: V239 = S[V237]
0x429: JUMP 0x15b
---
Entry stack: [V10, 0x15b, V78]
Stack pops: 2
Stack additions: [S1, V239]
Exit stack: [V10, 0x15b, V239]

================================

Block 0x42a
[0x42a:0x469]
---
Predecessors: []
Successors: []
---
0x42a STOP
0x42b LOG1
0x42c PUSH6 0x627a7a723058
0x433 SHA3
0x434 MISSING 0xd6
0x435 MISSING 0xc9
0x436 SWAP4
0x437 ISZERO
0x438 MISSING 0x4c
0x439 CALLER
0x43a MISSING 0xec
0x43b PUSH2 0xd0e9
0x43e MISSING 0x2c
0x43f PUSH9 0x13ebaffdfbae39d2e5
0x449 SWAP14
0x44a PUSH31 0xdca11079fd10cdb1410029
---
0x42a: STOP 
0x42b: LOG S0 S1 S2
0x42c: V240 = 0x627a7a723058
0x433: V241 = SHA3 0x627a7a723058 S3
0x434: MISSING 0xd6
0x435: MISSING 0xc9
0x437: V242 = ISZERO S4
0x438: MISSING 0x4c
0x439: V243 = CALLER
0x43a: MISSING 0xec
0x43b: V244 = 0xd0e9
0x43e: MISSING 0x2c
0x43f: V245 = 0x13ebaffdfbae39d2e5
0x44a: V246 = 0xdca11079fd10cdb1410029
---
Entry stack: []
Stack pops: 0
Stack additions: [V241, V242, S1, S2, S3, S0, V243, 0xd0e9, 0xdca11079fd10cdb1410029, S13, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, 0x13ebaffdfbae39d2e5]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x78
Exit block: 0x99
Body: 0x78, 0x7f, 0x83, 0x99, 0x171, 0x1c9, 0x262, 0x267, 0x26d, 0x2a3, 0x2a4

Function 1:
Public function signature: 0x41c0e1b5
Entry block: 0x9b
Exit block: 0xae
Body: 0x9b, 0xa2, 0xa6, 0xae, 0x2a8, 0x2fe, 0x31f, 0x323, 0x33c

Function 2:
Public function signature: 0x6b5e3ca4
Entry block: 0xb0
Exit block: 0xc3
Body: 0xb0, 0xb7, 0xbb, 0xc3, 0x33e

Function 3:
Public function signature: 0xb4a99a4e
Entry block: 0xc5
Exit block: 0xd8
Body: 0xc5, 0xcc, 0xd0, 0xd8, 0x381

Function 4:
Public function signature: 0xd0e30db0
Entry block: 0x11a
Exit block: 0x122
Body: 0x11a, 0x122, 0x3a7, 0x3b9, 0x40a, 0x40f, 0x410

Function 5:
Public function signature: 0xfc7e286d
Entry block: 0x124
Exit block: 0x15b
Body: 0x124, 0x12b, 0x12f, 0x15b, 0x412

Function 6:
Public fallback function
Entry block: 0x76
Exit block: 0x76
Body: 0x76

