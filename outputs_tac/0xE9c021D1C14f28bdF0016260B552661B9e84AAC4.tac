Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0xba]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0xba
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0xba
0xc: JUMPI 0xba V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x208]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x6fdde03
0x3c EQ
0x3d PUSH2 0x208
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x6fdde03
0x3c: V13 = EQ 0x6fdde03 V11
0x3d: V14 = 0x208
0x40: JUMPI 0x208 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x296]
---
0x41 DUP1
0x42 PUSH4 0x95ea7b3
0x47 EQ
0x48 PUSH2 0x296
0x4b JUMPI
---
0x42: V15 = 0x95ea7b3
0x47: V16 = EQ 0x95ea7b3 V11
0x48: V17 = 0x296
0x4b: JUMPI 0x296 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x2f0]
---
0x4c DUP1
0x4d PUSH4 0xdcf4b8f
0x52 EQ
0x53 PUSH2 0x2f0
0x56 JUMPI
---
0x4d: V18 = 0xdcf4b8f
0x52: V19 = EQ 0xdcf4b8f V11
0x53: V20 = 0x2f0
0x56: JUMPI 0x2f0 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x319]
---
0x57 DUP1
0x58 PUSH4 0x18160ddd
0x5d EQ
0x5e PUSH2 0x319
0x61 JUMPI
---
0x58: V21 = 0x18160ddd
0x5d: V22 = EQ 0x18160ddd V11
0x5e: V23 = 0x319
0x61: JUMPI 0x319 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x342]
---
0x62 DUP1
0x63 PUSH4 0x23b872dd
0x68 EQ
0x69 PUSH2 0x342
0x6c JUMPI
---
0x63: V24 = 0x23b872dd
0x68: V25 = EQ 0x23b872dd V11
0x69: V26 = 0x342
0x6c: JUMPI 0x342 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x3bb]
---
0x6d DUP1
0x6e PUSH4 0x313ce567
0x73 EQ
0x74 PUSH2 0x3bb
0x77 JUMPI
---
0x6e: V27 = 0x313ce567
0x73: V28 = EQ 0x313ce567 V11
0x74: V29 = 0x3bb
0x77: JUMPI 0x3bb V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x82]
---
Predecessors: [0x6d]
Successors: [0x83, 0x3ea]
---
0x78 DUP1
0x79 PUSH4 0x70a08231
0x7e EQ
0x7f PUSH2 0x3ea
0x82 JUMPI
---
0x79: V30 = 0x70a08231
0x7e: V31 = EQ 0x70a08231 V11
0x7f: V32 = 0x3ea
0x82: JUMPI 0x3ea V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x83
[0x83:0x8d]
---
Predecessors: [0x78]
Successors: [0x8e, 0x437]
---
0x83 DUP1
0x84 PUSH4 0x95d89b41
0x89 EQ
0x8a PUSH2 0x437
0x8d JUMPI
---
0x84: V33 = 0x95d89b41
0x89: V34 = EQ 0x95d89b41 V11
0x8a: V35 = 0x437
0x8d: JUMPI 0x437 V34
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x8e
[0x8e:0x98]
---
Predecessors: [0x83]
Successors: [0x99, 0x4c5]
---
0x8e DUP1
0x8f PUSH4 0xa9059cbb
0x94 EQ
0x95 PUSH2 0x4c5
0x98 JUMPI
---
0x8f: V36 = 0xa9059cbb
0x94: V37 = EQ 0xa9059cbb V11
0x95: V38 = 0x4c5
0x98: JUMPI 0x4c5 V37
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x99
[0x99:0xa3]
---
Predecessors: [0x8e]
Successors: [0xa4, 0x51f]
---
0x99 DUP1
0x9a PUSH4 0xc59d4847
0x9f EQ
0xa0 PUSH2 0x51f
0xa3 JUMPI
---
0x9a: V39 = 0xc59d4847
0x9f: V40 = EQ 0xc59d4847 V11
0xa0: V41 = 0x51f
0xa3: JUMPI 0x51f V40
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xa4
[0xa4:0xae]
---
Predecessors: [0x99]
Successors: [0xaf, 0x54f]
---
0xa4 DUP1
0xa5 PUSH4 0xdd62ed3e
0xaa EQ
0xab PUSH2 0x54f
0xae JUMPI
---
0xa5: V42 = 0xdd62ed3e
0xaa: V43 = EQ 0xdd62ed3e V11
0xab: V44 = 0x54f
0xae: JUMPI 0x54f V43
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xaf
[0xaf:0xb9]
---
Predecessors: [0xa4]
Successors: [0xba, 0x5bb]
---
0xaf DUP1
0xb0 PUSH4 0xe58fc54c
0xb5 EQ
0xb6 PUSH2 0x5bb
0xb9 JUMPI
---
0xb0: V45 = 0xe58fc54c
0xb5: V46 = EQ 0xe58fc54c V11
0xb6: V47 = 0x5bb
0xb9: JUMPI 0x5bb V46
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0xba
[0xba:0xc4]
---
Predecessors: [0x0, 0xaf]
Successors: [0xc5, 0xc9]
---
0xba JUMPDEST
0xbb PUSH1 0x0
0xbd DUP1
0xbe CALLVALUE
0xbf EQ
0xc0 ISZERO
0xc1 PUSH2 0xc9
0xc4 JUMPI
---
0xba: JUMPDEST 
0xbb: V48 = 0x0
0xbe: V49 = CALLVALUE
0xbf: V50 = EQ V49 0x0
0xc0: V51 = ISZERO V50
0xc1: V52 = 0xc9
0xc4: JUMPI 0xc9 V51
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V11, 0x0]

================================

Block 0xc5
[0xc5:0xc8]
---
Predecessors: [0xba]
Successors: [0x205]
---
0xc5 PUSH2 0x205
0xc8 JUMP
---
0xc5: V53 = 0x205
0xc8: JUMP 0x205
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0xc9
[0xc9:0x125]
---
Predecessors: [0xba]
Successors: [0x126, 0x12a]
---
0xc9 JUMPDEST
0xca PUSH1 0x0
0xcc DUP1
0xcd SWAP1
0xce SLOAD
0xcf SWAP1
0xd0 PUSH2 0x100
0xd3 EXP
0xd4 SWAP1
0xd5 DIV
0xd6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeb AND
0xec PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x101 AND
0x102 PUSH2 0x8fc
0x105 CALLVALUE
0x106 SWAP1
0x107 DUP2
0x108 ISZERO
0x109 MUL
0x10a SWAP1
0x10b PUSH1 0x40
0x10d MLOAD
0x10e PUSH1 0x0
0x110 PUSH1 0x40
0x112 MLOAD
0x113 DUP1
0x114 DUP4
0x115 SUB
0x116 DUP2
0x117 DUP6
0x118 DUP9
0x119 DUP9
0x11a CALL
0x11b SWAP4
0x11c POP
0x11d POP
0x11e POP
0x11f POP
0x120 ISZERO
0x121 ISZERO
0x122 PUSH2 0x12a
0x125 JUMPI
---
0xc9: JUMPDEST 
0xca: V54 = 0x0
0xce: V55 = S[0x0]
0xd0: V56 = 0x100
0xd3: V57 = EXP 0x100 0x0
0xd5: V58 = DIV V55 0x1
0xd6: V59 = 0xffffffffffffffffffffffffffffffffffffffff
0xeb: V60 = AND 0xffffffffffffffffffffffffffffffffffffffff V58
0xec: V61 = 0xffffffffffffffffffffffffffffffffffffffff
0x101: V62 = AND 0xffffffffffffffffffffffffffffffffffffffff V60
0x102: V63 = 0x8fc
0x105: V64 = CALLVALUE
0x108: V65 = ISZERO V64
0x109: V66 = MUL V65 0x8fc
0x10b: V67 = 0x40
0x10d: V68 = M[0x40]
0x10e: V69 = 0x0
0x110: V70 = 0x40
0x112: V71 = M[0x40]
0x115: V72 = SUB V68 V71
0x11a: V73 = CALL V66 V62 V64 V71 V72 V71 0x0
0x120: V74 = ISZERO V73
0x121: V75 = ISZERO V74
0x122: V76 = 0x12a
0x125: JUMPI 0x12a V75
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x126
[0x126:0x129]
---
Predecessors: [0xc9]
Successors: []
---
0x126 PUSH1 0x0
0x128 DUP1
0x129 REVERT
---
0x126: V77 = 0x0
0x129: REVERT 0x0 0x0
---
Entry stack: [V11, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x0]

================================

Block 0x12a
[0x12a:0x204]
---
Predecessors: [0xc9]
Successors: [0x205]
---
0x12a JUMPDEST
0x12b CALLVALUE
0x12c PUSH1 0x3
0x12e PUSH1 0x0
0x130 DUP3
0x131 DUP3
0x132 SLOAD
0x133 ADD
0x134 SWAP3
0x135 POP
0x136 POP
0x137 DUP2
0x138 SWAP1
0x139 SSTORE
0x13a POP
0x13b PUSH3 0x186a0
0x13f CALLVALUE
0x140 MUL
0x141 SWAP1
0x142 POP
0x143 DUP1
0x144 PUSH1 0x4
0x146 PUSH1 0x0
0x148 DUP3
0x149 DUP3
0x14a SLOAD
0x14b ADD
0x14c SWAP3
0x14d POP
0x14e POP
0x14f DUP2
0x150 SWAP1
0x151 SSTORE
0x152 POP
0x153 DUP1
0x154 PUSH1 0x1
0x156 PUSH1 0x0
0x158 CALLER
0x159 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x16e AND
0x16f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x184 AND
0x185 DUP2
0x186 MSTORE
0x187 PUSH1 0x20
0x189 ADD
0x18a SWAP1
0x18b DUP2
0x18c MSTORE
0x18d PUSH1 0x20
0x18f ADD
0x190 PUSH1 0x0
0x192 SHA3
0x193 PUSH1 0x0
0x195 DUP3
0x196 DUP3
0x197 SLOAD
0x198 ADD
0x199 SWAP3
0x19a POP
0x19b POP
0x19c DUP2
0x19d SWAP1
0x19e SSTORE
0x19f POP
0x1a0 CALLER
0x1a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1b6 AND
0x1b7 ADDRESS
0x1b8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cd AND
0x1ce PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1ef DUP4
0x1f0 PUSH1 0x40
0x1f2 MLOAD
0x1f3 DUP1
0x1f4 DUP3
0x1f5 DUP2
0x1f6 MSTORE
0x1f7 PUSH1 0x20
0x1f9 ADD
0x1fa SWAP2
0x1fb POP
0x1fc POP
0x1fd PUSH1 0x40
0x1ff MLOAD
0x200 DUP1
0x201 SWAP2
0x202 SUB
0x203 SWAP1
0x204 LOG3
---
0x12a: JUMPDEST 
0x12b: V78 = CALLVALUE
0x12c: V79 = 0x3
0x12e: V80 = 0x0
0x132: V81 = S[0x3]
0x133: V82 = ADD V81 V78
0x139: S[0x3] = V82
0x13b: V83 = 0x186a0
0x13f: V84 = CALLVALUE
0x140: V85 = MUL V84 0x186a0
0x144: V86 = 0x4
0x146: V87 = 0x0
0x14a: V88 = S[0x4]
0x14b: V89 = ADD V88 V85
0x151: S[0x4] = V89
0x154: V90 = 0x1
0x156: V91 = 0x0
0x158: V92 = CALLER
0x159: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x16e: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x16f: V95 = 0xffffffffffffffffffffffffffffffffffffffff
0x184: V96 = AND 0xffffffffffffffffffffffffffffffffffffffff V94
0x186: M[0x0] = V96
0x187: V97 = 0x20
0x189: V98 = ADD 0x20 0x0
0x18c: M[0x20] = 0x1
0x18d: V99 = 0x20
0x18f: V100 = ADD 0x20 0x20
0x190: V101 = 0x0
0x192: V102 = SHA3 0x0 0x40
0x193: V103 = 0x0
0x197: V104 = S[V102]
0x198: V105 = ADD V104 V85
0x19e: S[V102] = V105
0x1a0: V106 = CALLER
0x1a1: V107 = 0xffffffffffffffffffffffffffffffffffffffff
0x1b6: V108 = AND 0xffffffffffffffffffffffffffffffffffffffff V106
0x1b7: V109 = ADDRESS
0x1b8: V110 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cd: V111 = AND 0xffffffffffffffffffffffffffffffffffffffff V109
0x1ce: V112 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1f0: V113 = 0x40
0x1f2: V114 = M[0x40]
0x1f6: M[V114] = V85
0x1f7: V115 = 0x20
0x1f9: V116 = ADD 0x20 V114
0x1fd: V117 = 0x40
0x1ff: V118 = M[0x40]
0x202: V119 = SUB V116 V118
0x204: LOG V118 V119 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V111 V108
---
Entry stack: [V11, 0x0]
Stack pops: 1
Stack additions: [V85]
Exit stack: [V11, V85]

================================

Block 0x205
[0x205:0x207]
---
Predecessors: [0xc5, 0x12a]
Successors: []
---
0x205 JUMPDEST
0x206 POP
0x207 STOP
---
0x205: JUMPDEST 
0x207: STOP 
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x208
[0x208:0x20e]
---
Predecessors: [0xd]
Successors: [0x20f, 0x213]
---
0x208 JUMPDEST
0x209 CALLVALUE
0x20a ISZERO
0x20b PUSH2 0x213
0x20e JUMPI
---
0x208: JUMPDEST 
0x209: V120 = CALLVALUE
0x20a: V121 = ISZERO V120
0x20b: V122 = 0x213
0x20e: JUMPI 0x213 V121
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x20f
[0x20f:0x212]
---
Predecessors: [0x208]
Successors: []
---
0x20f PUSH1 0x0
0x211 DUP1
0x212 REVERT
---
0x20f: V123 = 0x0
0x212: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x213
[0x213:0x21a]
---
Predecessors: [0x208]
Successors: [0x60c]
---
0x213 JUMPDEST
0x214 PUSH2 0x21b
0x217 PUSH2 0x60c
0x21a JUMP
---
0x213: JUMPDEST 
0x214: V124 = 0x21b
0x217: V125 = 0x60c
0x21a: JUMP 0x60c
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x21b]
Exit stack: [V11, 0x21b]

================================

Block 0x21b
[0x21b:0x23f]
---
Predecessors: [0x614, 0xb7e]
Successors: [0x240]
---
0x21b JUMPDEST
0x21c PUSH1 0x40
0x21e MLOAD
0x21f DUP1
0x220 DUP1
0x221 PUSH1 0x20
0x223 ADD
0x224 DUP3
0x225 DUP2
0x226 SUB
0x227 DUP3
0x228 MSTORE
0x229 DUP4
0x22a DUP2
0x22b DUP2
0x22c MLOAD
0x22d DUP2
0x22e MSTORE
0x22f PUSH1 0x20
0x231 ADD
0x232 SWAP2
0x233 POP
0x234 DUP1
0x235 MLOAD
0x236 SWAP1
0x237 PUSH1 0x20
0x239 ADD
0x23a SWAP1
0x23b DUP1
0x23c DUP4
0x23d DUP4
0x23e PUSH1 0x0
---
0x21b: JUMPDEST 
0x21c: V126 = 0x40
0x21e: V127 = M[0x40]
0x221: V128 = 0x20
0x223: V129 = ADD 0x20 V127
0x226: V130 = SUB V129 V127
0x228: M[V127] = V130
0x22c: V131 = M[S0]
0x22e: M[V129] = V131
0x22f: V132 = 0x20
0x231: V133 = ADD 0x20 V129
0x235: V134 = M[S0]
0x237: V135 = 0x20
0x239: V136 = ADD 0x20 S0
0x23e: V137 = 0x0
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [S0, V127, V127, V133, V136, V134, V134, V133, V136, 0x0]
Exit stack: [V11, S0, V127, V127, V133, V136, V134, V134, V133, V136, 0x0]

================================

Block 0x240
[0x240:0x248]
---
Predecessors: [0x21b, 0x249]
Successors: [0x249, 0x25b]
---
0x240 JUMPDEST
0x241 DUP4
0x242 DUP2
0x243 LT
0x244 ISZERO
0x245 PUSH2 0x25b
0x248 JUMPI
---
0x240: JUMPDEST 
0x243: V138 = LT S0 V134
0x244: V139 = ISZERO V138
0x245: V140 = 0x25b
0x248: JUMPI 0x25b V139
---
Entry stack: [V11, S9, V127, V127, V133, V136, V134, V134, V133, V136, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, S9, V127, V127, V133, V136, V134, V134, V133, V136, S0]

================================

Block 0x249
[0x249:0x25a]
---
Predecessors: [0x240]
Successors: [0x240]
---
0x249 DUP1
0x24a DUP3
0x24b ADD
0x24c MLOAD
0x24d DUP2
0x24e DUP5
0x24f ADD
0x250 MSTORE
0x251 PUSH1 0x20
0x253 DUP2
0x254 ADD
0x255 SWAP1
0x256 POP
0x257 PUSH2 0x240
0x25a JUMP
---
0x24b: V141 = ADD V136 S0
0x24c: V142 = M[V141]
0x24f: V143 = ADD V133 S0
0x250: M[V143] = V142
0x251: V144 = 0x20
0x254: V145 = ADD S0 0x20
0x257: V146 = 0x240
0x25a: JUMP 0x240
---
Entry stack: [V11, S9, V127, V127, V133, V136, V134, V134, V133, V136, S0]
Stack pops: 3
Stack additions: [S2, S1, V145]
Exit stack: [V11, S9, V127, V127, V133, V136, V134, V134, V133, V136, V145]

================================

Block 0x25b
[0x25b:0x26e]
---
Predecessors: [0x240]
Successors: [0x26f, 0x288]
---
0x25b JUMPDEST
0x25c POP
0x25d POP
0x25e POP
0x25f POP
0x260 SWAP1
0x261 POP
0x262 SWAP1
0x263 DUP2
0x264 ADD
0x265 SWAP1
0x266 PUSH1 0x1f
0x268 AND
0x269 DUP1
0x26a ISZERO
0x26b PUSH2 0x288
0x26e JUMPI
---
0x25b: JUMPDEST 
0x264: V147 = ADD V134 V133
0x266: V148 = 0x1f
0x268: V149 = AND 0x1f V134
0x26a: V150 = ISZERO V149
0x26b: V151 = 0x288
0x26e: JUMPI 0x288 V150
---
Entry stack: [V11, S9, V127, V127, V133, V136, V134, V134, V133, V136, S0]
Stack pops: 7
Stack additions: [V147, V149]
Exit stack: [V11, S9, V127, V127, V147, V149]

================================

Block 0x26f
[0x26f:0x287]
---
Predecessors: [0x25b]
Successors: [0x288]
---
0x26f DUP1
0x270 DUP3
0x271 SUB
0x272 DUP1
0x273 MLOAD
0x274 PUSH1 0x1
0x276 DUP4
0x277 PUSH1 0x20
0x279 SUB
0x27a PUSH2 0x100
0x27d EXP
0x27e SUB
0x27f NOT
0x280 AND
0x281 DUP2
0x282 MSTORE
0x283 PUSH1 0x20
0x285 ADD
0x286 SWAP2
0x287 POP
---
0x271: V152 = SUB V147 V149
0x273: V153 = M[V152]
0x274: V154 = 0x1
0x277: V155 = 0x20
0x279: V156 = SUB 0x20 V149
0x27a: V157 = 0x100
0x27d: V158 = EXP 0x100 V156
0x27e: V159 = SUB V158 0x1
0x27f: V160 = NOT V159
0x280: V161 = AND V160 V153
0x282: M[V152] = V161
0x283: V162 = 0x20
0x285: V163 = ADD 0x20 V152
---
Entry stack: [V11, S4, V127, V127, V147, V149]
Stack pops: 2
Stack additions: [V163, S0]
Exit stack: [V11, S4, V127, V127, V163, V149]

================================

Block 0x288
[0x288:0x295]
---
Predecessors: [0x25b, 0x26f]
Successors: []
---
0x288 JUMPDEST
0x289 POP
0x28a SWAP3
0x28b POP
0x28c POP
0x28d POP
0x28e PUSH1 0x40
0x290 MLOAD
0x291 DUP1
0x292 SWAP2
0x293 SUB
0x294 SWAP1
0x295 RETURN
---
0x288: JUMPDEST 
0x28e: V164 = 0x40
0x290: V165 = M[0x40]
0x293: V166 = SUB S1 V165
0x295: RETURN V165 V166
---
Entry stack: [V11, S4, V127, V127, S1, V149]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x296
[0x296:0x29c]
---
Predecessors: [0x41]
Successors: [0x29d, 0x2a1]
---
0x296 JUMPDEST
0x297 CALLVALUE
0x298 ISZERO
0x299 PUSH2 0x2a1
0x29c JUMPI
---
0x296: JUMPDEST 
0x297: V167 = CALLVALUE
0x298: V168 = ISZERO V167
0x299: V169 = 0x2a1
0x29c: JUMPI 0x2a1 V168
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x29d
[0x29d:0x2a0]
---
Predecessors: [0x296]
Successors: []
---
0x29d PUSH1 0x0
0x29f DUP1
0x2a0 REVERT
---
0x29d: V170 = 0x0
0x2a0: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a1
[0x2a1:0x2d5]
---
Predecessors: [0x296]
Successors: [0x64f]
---
0x2a1 JUMPDEST
0x2a2 PUSH2 0x2d6
0x2a5 PUSH1 0x4
0x2a7 DUP1
0x2a8 DUP1
0x2a9 CALLDATALOAD
0x2aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bf AND
0x2c0 SWAP1
0x2c1 PUSH1 0x20
0x2c3 ADD
0x2c4 SWAP1
0x2c5 SWAP2
0x2c6 SWAP1
0x2c7 DUP1
0x2c8 CALLDATALOAD
0x2c9 SWAP1
0x2ca PUSH1 0x20
0x2cc ADD
0x2cd SWAP1
0x2ce SWAP2
0x2cf SWAP1
0x2d0 POP
0x2d1 POP
0x2d2 PUSH2 0x64f
0x2d5 JUMP
---
0x2a1: JUMPDEST 
0x2a2: V171 = 0x2d6
0x2a5: V172 = 0x4
0x2a9: V173 = CALLDATALOAD 0x4
0x2aa: V174 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: V175 = AND 0xffffffffffffffffffffffffffffffffffffffff V173
0x2c1: V176 = 0x20
0x2c3: V177 = ADD 0x20 0x4
0x2c8: V178 = CALLDATALOAD 0x24
0x2ca: V179 = 0x20
0x2cc: V180 = ADD 0x20 0x24
0x2d2: V181 = 0x64f
0x2d5: JUMP 0x64f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x2d6, V175, V178]
Exit stack: [V11, 0x2d6, V175, V178]

================================

Block 0x2d6
[0x2d6:0x2ef]
---
Predecessors: [0x7d7]
Successors: []
---
0x2d6 JUMPDEST
0x2d7 PUSH1 0x40
0x2d9 MLOAD
0x2da DUP1
0x2db DUP3
0x2dc ISZERO
0x2dd ISZERO
0x2de ISZERO
0x2df ISZERO
0x2e0 DUP2
0x2e1 MSTORE
0x2e2 PUSH1 0x20
0x2e4 ADD
0x2e5 SWAP2
0x2e6 POP
0x2e7 POP
0x2e8 PUSH1 0x40
0x2ea MLOAD
0x2eb DUP1
0x2ec SWAP2
0x2ed SUB
0x2ee SWAP1
0x2ef RETURN
---
0x2d6: JUMPDEST 
0x2d7: V182 = 0x40
0x2d9: V183 = M[0x40]
0x2dc: V184 = ISZERO {0x0, 0x1}
0x2dd: V185 = ISZERO V184
0x2de: V186 = ISZERO V185
0x2df: V187 = ISZERO V186
0x2e1: M[V183] = V187
0x2e2: V188 = 0x20
0x2e4: V189 = ADD 0x20 V183
0x2e8: V190 = 0x40
0x2ea: V191 = M[0x40]
0x2ed: V192 = SUB V189 V191
0x2ef: RETURN V191 V192
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f0
[0x2f0:0x2f6]
---
Predecessors: [0x4c]
Successors: [0x2f7, 0x2fb]
---
0x2f0 JUMPDEST
0x2f1 CALLVALUE
0x2f2 ISZERO
0x2f3 PUSH2 0x2fb
0x2f6 JUMPI
---
0x2f0: JUMPDEST 
0x2f1: V193 = CALLVALUE
0x2f2: V194 = ISZERO V193
0x2f3: V195 = 0x2fb
0x2f6: JUMPI 0x2fb V194
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2f7
[0x2f7:0x2fa]
---
Predecessors: [0x2f0]
Successors: []
---
0x2f7 PUSH1 0x0
0x2f9 DUP1
0x2fa REVERT
---
0x2f7: V196 = 0x0
0x2fa: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x2fb
[0x2fb:0x302]
---
Predecessors: [0x2f0]
Successors: [0x7dd]
---
0x2fb JUMPDEST
0x2fc PUSH2 0x303
0x2ff PUSH2 0x7dd
0x302 JUMP
---
0x2fb: JUMPDEST 
0x2fc: V197 = 0x303
0x2ff: V198 = 0x7dd
0x302: JUMP 0x7dd
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x303]
Exit stack: [V11, 0x303]

================================

Block 0x303
[0x303:0x318]
---
Predecessors: [0x7dd]
Successors: []
---
0x303 JUMPDEST
0x304 PUSH1 0x40
0x306 MLOAD
0x307 DUP1
0x308 DUP3
0x309 DUP2
0x30a MSTORE
0x30b PUSH1 0x20
0x30d ADD
0x30e SWAP2
0x30f POP
0x310 POP
0x311 PUSH1 0x40
0x313 MLOAD
0x314 DUP1
0x315 SWAP2
0x316 SUB
0x317 SWAP1
0x318 RETURN
---
0x303: JUMPDEST 
0x304: V199 = 0x40
0x306: V200 = M[0x40]
0x30a: M[V200] = V507
0x30b: V201 = 0x20
0x30d: V202 = ADD 0x20 V200
0x311: V203 = 0x40
0x313: V204 = M[0x40]
0x316: V205 = SUB V202 V204
0x318: RETURN V204 V205
---
Entry stack: [V11, 0x303, V507]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x303]

================================

Block 0x319
[0x319:0x31f]
---
Predecessors: [0x57]
Successors: [0x320, 0x324]
---
0x319 JUMPDEST
0x31a CALLVALUE
0x31b ISZERO
0x31c PUSH2 0x324
0x31f JUMPI
---
0x319: JUMPDEST 
0x31a: V206 = CALLVALUE
0x31b: V207 = ISZERO V206
0x31c: V208 = 0x324
0x31f: JUMPI 0x324 V207
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x320
[0x320:0x323]
---
Predecessors: [0x319]
Successors: []
---
0x320 PUSH1 0x0
0x322 DUP1
0x323 REVERT
---
0x320: V209 = 0x0
0x323: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x324
[0x324:0x32b]
---
Predecessors: [0x319]
Successors: [0x7e3]
---
0x324 JUMPDEST
0x325 PUSH2 0x32c
0x328 PUSH2 0x7e3
0x32b JUMP
---
0x324: JUMPDEST 
0x325: V210 = 0x32c
0x328: V211 = 0x7e3
0x32b: JUMP 0x7e3
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x32c]
Exit stack: [V11, 0x32c]

================================

Block 0x32c
[0x32c:0x341]
---
Predecessors: [0x7e3]
Successors: []
---
0x32c JUMPDEST
0x32d PUSH1 0x40
0x32f MLOAD
0x330 DUP1
0x331 DUP3
0x332 DUP2
0x333 MSTORE
0x334 PUSH1 0x20
0x336 ADD
0x337 SWAP2
0x338 POP
0x339 POP
0x33a PUSH1 0x40
0x33c MLOAD
0x33d DUP1
0x33e SWAP2
0x33f SUB
0x340 SWAP1
0x341 RETURN
---
0x32c: JUMPDEST 
0x32d: V212 = 0x40
0x32f: V213 = M[0x40]
0x333: M[V213] = V509
0x334: V214 = 0x20
0x336: V215 = ADD 0x20 V213
0x33a: V216 = 0x40
0x33c: V217 = M[0x40]
0x33f: V218 = SUB V215 V217
0x341: RETURN V217 V218
---
Entry stack: [V11, 0x32c, V509]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x32c]

================================

Block 0x342
[0x342:0x348]
---
Predecessors: [0x62]
Successors: [0x349, 0x34d]
---
0x342 JUMPDEST
0x343 CALLVALUE
0x344 ISZERO
0x345 PUSH2 0x34d
0x348 JUMPI
---
0x342: JUMPDEST 
0x343: V219 = CALLVALUE
0x344: V220 = ISZERO V219
0x345: V221 = 0x34d
0x348: JUMPI 0x34d V220
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x349
[0x349:0x34c]
---
Predecessors: [0x342]
Successors: []
---
0x349 PUSH1 0x0
0x34b DUP1
0x34c REVERT
---
0x349: V222 = 0x0
0x34c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x34d
[0x34d:0x3a0]
---
Predecessors: [0x342]
Successors: [0x7e9]
---
0x34d JUMPDEST
0x34e PUSH2 0x3a1
0x351 PUSH1 0x4
0x353 DUP1
0x354 DUP1
0x355 CALLDATALOAD
0x356 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x36b AND
0x36c SWAP1
0x36d PUSH1 0x20
0x36f ADD
0x370 SWAP1
0x371 SWAP2
0x372 SWAP1
0x373 DUP1
0x374 CALLDATALOAD
0x375 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38a AND
0x38b SWAP1
0x38c PUSH1 0x20
0x38e ADD
0x38f SWAP1
0x390 SWAP2
0x391 SWAP1
0x392 DUP1
0x393 CALLDATALOAD
0x394 SWAP1
0x395 PUSH1 0x20
0x397 ADD
0x398 SWAP1
0x399 SWAP2
0x39a SWAP1
0x39b POP
0x39c POP
0x39d PUSH2 0x7e9
0x3a0 JUMP
---
0x34d: JUMPDEST 
0x34e: V223 = 0x3a1
0x351: V224 = 0x4
0x355: V225 = CALLDATALOAD 0x4
0x356: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x36b: V227 = AND 0xffffffffffffffffffffffffffffffffffffffff V225
0x36d: V228 = 0x20
0x36f: V229 = ADD 0x20 0x4
0x374: V230 = CALLDATALOAD 0x24
0x375: V231 = 0xffffffffffffffffffffffffffffffffffffffff
0x38a: V232 = AND 0xffffffffffffffffffffffffffffffffffffffff V230
0x38c: V233 = 0x20
0x38e: V234 = ADD 0x20 0x24
0x393: V235 = CALLDATALOAD 0x44
0x395: V236 = 0x20
0x397: V237 = ADD 0x20 0x44
0x39d: V238 = 0x7e9
0x3a0: JUMP 0x7e9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3a1, V227, V232, V235]
Exit stack: [V11, 0x3a1, V227, V232, V235]

================================

Block 0x3a1
[0x3a1:0x3ba]
---
Predecessors: [0xb18]
Successors: []
---
0x3a1 JUMPDEST
0x3a2 PUSH1 0x40
0x3a4 MLOAD
0x3a5 DUP1
0x3a6 DUP3
0x3a7 ISZERO
0x3a8 ISZERO
0x3a9 ISZERO
0x3aa ISZERO
0x3ab DUP2
0x3ac MSTORE
0x3ad PUSH1 0x20
0x3af ADD
0x3b0 SWAP2
0x3b1 POP
0x3b2 POP
0x3b3 PUSH1 0x40
0x3b5 MLOAD
0x3b6 DUP1
0x3b7 SWAP2
0x3b8 SUB
0x3b9 SWAP1
0x3ba RETURN
---
0x3a1: JUMPDEST 
0x3a2: V239 = 0x40
0x3a4: V240 = M[0x40]
0x3a7: V241 = ISZERO {0x0, 0x1}
0x3a8: V242 = ISZERO V241
0x3a9: V243 = ISZERO V242
0x3aa: V244 = ISZERO V243
0x3ac: M[V240] = V244
0x3ad: V245 = 0x20
0x3af: V246 = ADD 0x20 V240
0x3b3: V247 = 0x40
0x3b5: V248 = M[0x40]
0x3b8: V249 = SUB V246 V248
0x3ba: RETURN V248 V249
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3bb
[0x3bb:0x3c1]
---
Predecessors: [0x6d]
Successors: [0x3c2, 0x3c6]
---
0x3bb JUMPDEST
0x3bc CALLVALUE
0x3bd ISZERO
0x3be PUSH2 0x3c6
0x3c1 JUMPI
---
0x3bb: JUMPDEST 
0x3bc: V250 = CALLVALUE
0x3bd: V251 = ISZERO V250
0x3be: V252 = 0x3c6
0x3c1: JUMPI 0x3c6 V251
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c2
[0x3c2:0x3c5]
---
Predecessors: [0x3bb]
Successors: []
---
0x3c2 PUSH1 0x0
0x3c4 DUP1
0x3c5 REVERT
---
0x3c2: V253 = 0x0
0x3c5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3c6
[0x3c6:0x3cd]
---
Predecessors: [0x3bb]
Successors: [0xb24]
---
0x3c6 JUMPDEST
0x3c7 PUSH2 0x3ce
0x3ca PUSH2 0xb24
0x3cd JUMP
---
0x3c6: JUMPDEST 
0x3c7: V254 = 0x3ce
0x3ca: V255 = 0xb24
0x3cd: JUMP 0xb24
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x3ce]
Exit stack: [V11, 0x3ce]

================================

Block 0x3ce
[0x3ce:0x3e9]
---
Predecessors: [0xb24]
Successors: []
---
0x3ce JUMPDEST
0x3cf PUSH1 0x40
0x3d1 MLOAD
0x3d2 DUP1
0x3d3 DUP3
0x3d4 PUSH1 0xff
0x3d6 AND
0x3d7 PUSH1 0xff
0x3d9 AND
0x3da DUP2
0x3db MSTORE
0x3dc PUSH1 0x20
0x3de ADD
0x3df SWAP2
0x3e0 POP
0x3e1 POP
0x3e2 PUSH1 0x40
0x3e4 MLOAD
0x3e5 DUP1
0x3e6 SWAP2
0x3e7 SUB
0x3e8 SWAP1
0x3e9 RETURN
---
0x3ce: JUMPDEST 
0x3cf: V256 = 0x40
0x3d1: V257 = M[0x40]
0x3d4: V258 = 0xff
0x3d6: V259 = AND 0xff 0x12
0x3d7: V260 = 0xff
0x3d9: V261 = AND 0xff 0x12
0x3db: M[V257] = 0x12
0x3dc: V262 = 0x20
0x3de: V263 = ADD 0x20 V257
0x3e2: V264 = 0x40
0x3e4: V265 = M[0x40]
0x3e7: V266 = SUB V263 V265
0x3e9: RETURN V265 V266
---
Entry stack: [V11, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3ea
[0x3ea:0x3f0]
---
Predecessors: [0x78]
Successors: [0x3f1, 0x3f5]
---
0x3ea JUMPDEST
0x3eb CALLVALUE
0x3ec ISZERO
0x3ed PUSH2 0x3f5
0x3f0 JUMPI
---
0x3ea: JUMPDEST 
0x3eb: V267 = CALLVALUE
0x3ec: V268 = ISZERO V267
0x3ed: V269 = 0x3f5
0x3f0: JUMPI 0x3f5 V268
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3f1
[0x3f1:0x3f4]
---
Predecessors: [0x3ea]
Successors: []
---
0x3f1 PUSH1 0x0
0x3f3 DUP1
0x3f4 REVERT
---
0x3f1: V270 = 0x0
0x3f4: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x3f5
[0x3f5:0x420]
---
Predecessors: [0x3ea]
Successors: [0xb2d]
---
0x3f5 JUMPDEST
0x3f6 PUSH2 0x421
0x3f9 PUSH1 0x4
0x3fb DUP1
0x3fc DUP1
0x3fd CALLDATALOAD
0x3fe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x413 AND
0x414 SWAP1
0x415 PUSH1 0x20
0x417 ADD
0x418 SWAP1
0x419 SWAP2
0x41a SWAP1
0x41b POP
0x41c POP
0x41d PUSH2 0xb2d
0x420 JUMP
---
0x3f5: JUMPDEST 
0x3f6: V271 = 0x421
0x3f9: V272 = 0x4
0x3fd: V273 = CALLDATALOAD 0x4
0x3fe: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x413: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x415: V276 = 0x20
0x417: V277 = ADD 0x20 0x4
0x41d: V278 = 0xb2d
0x420: JUMP 0xb2d
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x421, V275]
Exit stack: [V11, 0x421, V275]

================================

Block 0x421
[0x421:0x436]
---
Predecessors: [0xb2d]
Successors: []
---
0x421 JUMPDEST
0x422 PUSH1 0x40
0x424 MLOAD
0x425 DUP1
0x426 DUP3
0x427 DUP2
0x428 MSTORE
0x429 PUSH1 0x20
0x42b ADD
0x42c SWAP2
0x42d POP
0x42e POP
0x42f PUSH1 0x40
0x431 MLOAD
0x432 DUP1
0x433 SWAP2
0x434 SUB
0x435 SWAP1
0x436 RETURN
---
0x421: JUMPDEST 
0x422: V279 = 0x40
0x424: V280 = M[0x40]
0x428: M[V280] = V690
0x429: V281 = 0x20
0x42b: V282 = ADD 0x20 V280
0x42f: V283 = 0x40
0x431: V284 = M[0x40]
0x434: V285 = SUB V282 V284
0x436: RETURN V284 V285
---
Entry stack: [V11, V690]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x437
[0x437:0x43d]
---
Predecessors: [0x83]
Successors: [0x43e, 0x442]
---
0x437 JUMPDEST
0x438 CALLVALUE
0x439 ISZERO
0x43a PUSH2 0x442
0x43d JUMPI
---
0x437: JUMPDEST 
0x438: V286 = CALLVALUE
0x439: V287 = ISZERO V286
0x43a: V288 = 0x442
0x43d: JUMPI 0x442 V287
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x43e
[0x43e:0x441]
---
Predecessors: [0x437]
Successors: []
---
0x43e PUSH1 0x0
0x440 DUP1
0x441 REVERT
---
0x43e: V289 = 0x0
0x441: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x442
[0x442:0x449]
---
Predecessors: [0x437]
Successors: [0xb76]
---
0x442 JUMPDEST
0x443 PUSH2 0x44a
0x446 PUSH2 0xb76
0x449 JUMP
---
0x442: JUMPDEST 
0x443: V290 = 0x44a
0x446: V291 = 0xb76
0x449: JUMP 0xb76
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x44a]
Exit stack: [V11, 0x44a]

================================

Block 0x44a
[0x44a:0x46e]
---
Predecessors: [0x614, 0xb7e]
Successors: [0x46f]
---
0x44a JUMPDEST
0x44b PUSH1 0x40
0x44d MLOAD
0x44e DUP1
0x44f DUP1
0x450 PUSH1 0x20
0x452 ADD
0x453 DUP3
0x454 DUP2
0x455 SUB
0x456 DUP3
0x457 MSTORE
0x458 DUP4
0x459 DUP2
0x45a DUP2
0x45b MLOAD
0x45c DUP2
0x45d MSTORE
0x45e PUSH1 0x20
0x460 ADD
0x461 SWAP2
0x462 POP
0x463 DUP1
0x464 MLOAD
0x465 SWAP1
0x466 PUSH1 0x20
0x468 ADD
0x469 SWAP1
0x46a DUP1
0x46b DUP4
0x46c DUP4
0x46d PUSH1 0x0
---
0x44a: JUMPDEST 
0x44b: V292 = 0x40
0x44d: V293 = M[0x40]
0x450: V294 = 0x20
0x452: V295 = ADD 0x20 V293
0x455: V296 = SUB V295 V293
0x457: M[V293] = V296
0x45b: V297 = M[S0]
0x45d: M[V295] = V297
0x45e: V298 = 0x20
0x460: V299 = ADD 0x20 V295
0x464: V300 = M[S0]
0x466: V301 = 0x20
0x468: V302 = ADD 0x20 S0
0x46d: V303 = 0x0
---
Entry stack: [V11, S0]
Stack pops: 1
Stack additions: [S0, V293, V293, V299, V302, V300, V300, V299, V302, 0x0]
Exit stack: [V11, S0, V293, V293, V299, V302, V300, V300, V299, V302, 0x0]

================================

Block 0x46f
[0x46f:0x477]
---
Predecessors: [0x44a, 0x478]
Successors: [0x478, 0x48a]
---
0x46f JUMPDEST
0x470 DUP4
0x471 DUP2
0x472 LT
0x473 ISZERO
0x474 PUSH2 0x48a
0x477 JUMPI
---
0x46f: JUMPDEST 
0x472: V304 = LT S0 V300
0x473: V305 = ISZERO V304
0x474: V306 = 0x48a
0x477: JUMPI 0x48a V305
---
Entry stack: [V11, S9, V293, V293, V299, V302, V300, V300, V299, V302, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, S9, V293, V293, V299, V302, V300, V300, V299, V302, S0]

================================

Block 0x478
[0x478:0x489]
---
Predecessors: [0x46f]
Successors: [0x46f]
---
0x478 DUP1
0x479 DUP3
0x47a ADD
0x47b MLOAD
0x47c DUP2
0x47d DUP5
0x47e ADD
0x47f MSTORE
0x480 PUSH1 0x20
0x482 DUP2
0x483 ADD
0x484 SWAP1
0x485 POP
0x486 PUSH2 0x46f
0x489 JUMP
---
0x47a: V307 = ADD V302 S0
0x47b: V308 = M[V307]
0x47e: V309 = ADD V299 S0
0x47f: M[V309] = V308
0x480: V310 = 0x20
0x483: V311 = ADD S0 0x20
0x486: V312 = 0x46f
0x489: JUMP 0x46f
---
Entry stack: [V11, S9, V293, V293, V299, V302, V300, V300, V299, V302, S0]
Stack pops: 3
Stack additions: [S2, S1, V311]
Exit stack: [V11, S9, V293, V293, V299, V302, V300, V300, V299, V302, V311]

================================

Block 0x48a
[0x48a:0x49d]
---
Predecessors: [0x46f]
Successors: [0x49e, 0x4b7]
---
0x48a JUMPDEST
0x48b POP
0x48c POP
0x48d POP
0x48e POP
0x48f SWAP1
0x490 POP
0x491 SWAP1
0x492 DUP2
0x493 ADD
0x494 SWAP1
0x495 PUSH1 0x1f
0x497 AND
0x498 DUP1
0x499 ISZERO
0x49a PUSH2 0x4b7
0x49d JUMPI
---
0x48a: JUMPDEST 
0x493: V313 = ADD V300 V299
0x495: V314 = 0x1f
0x497: V315 = AND 0x1f V300
0x499: V316 = ISZERO V315
0x49a: V317 = 0x4b7
0x49d: JUMPI 0x4b7 V316
---
Entry stack: [V11, S9, V293, V293, V299, V302, V300, V300, V299, V302, S0]
Stack pops: 7
Stack additions: [V313, V315]
Exit stack: [V11, S9, V293, V293, V313, V315]

================================

Block 0x49e
[0x49e:0x4b6]
---
Predecessors: [0x48a]
Successors: [0x4b7]
---
0x49e DUP1
0x49f DUP3
0x4a0 SUB
0x4a1 DUP1
0x4a2 MLOAD
0x4a3 PUSH1 0x1
0x4a5 DUP4
0x4a6 PUSH1 0x20
0x4a8 SUB
0x4a9 PUSH2 0x100
0x4ac EXP
0x4ad SUB
0x4ae NOT
0x4af AND
0x4b0 DUP2
0x4b1 MSTORE
0x4b2 PUSH1 0x20
0x4b4 ADD
0x4b5 SWAP2
0x4b6 POP
---
0x4a0: V318 = SUB V313 V315
0x4a2: V319 = M[V318]
0x4a3: V320 = 0x1
0x4a6: V321 = 0x20
0x4a8: V322 = SUB 0x20 V315
0x4a9: V323 = 0x100
0x4ac: V324 = EXP 0x100 V322
0x4ad: V325 = SUB V324 0x1
0x4ae: V326 = NOT V325
0x4af: V327 = AND V326 V319
0x4b1: M[V318] = V327
0x4b2: V328 = 0x20
0x4b4: V329 = ADD 0x20 V318
---
Entry stack: [V11, S4, V293, V293, V313, V315]
Stack pops: 2
Stack additions: [V329, S0]
Exit stack: [V11, S4, V293, V293, V329, V315]

================================

Block 0x4b7
[0x4b7:0x4c4]
---
Predecessors: [0x48a, 0x49e]
Successors: []
---
0x4b7 JUMPDEST
0x4b8 POP
0x4b9 SWAP3
0x4ba POP
0x4bb POP
0x4bc POP
0x4bd PUSH1 0x40
0x4bf MLOAD
0x4c0 DUP1
0x4c1 SWAP2
0x4c2 SUB
0x4c3 SWAP1
0x4c4 RETURN
---
0x4b7: JUMPDEST 
0x4bd: V330 = 0x40
0x4bf: V331 = M[0x40]
0x4c2: V332 = SUB S1 V331
0x4c4: RETURN V331 V332
---
Entry stack: [V11, S4, V293, V293, S1, V315]
Stack pops: 5
Stack additions: []
Exit stack: [V11]

================================

Block 0x4c5
[0x4c5:0x4cb]
---
Predecessors: [0x8e]
Successors: [0x4cc, 0x4d0]
---
0x4c5 JUMPDEST
0x4c6 CALLVALUE
0x4c7 ISZERO
0x4c8 PUSH2 0x4d0
0x4cb JUMPI
---
0x4c5: JUMPDEST 
0x4c6: V333 = CALLVALUE
0x4c7: V334 = ISZERO V333
0x4c8: V335 = 0x4d0
0x4cb: JUMPI 0x4d0 V334
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4cc
[0x4cc:0x4cf]
---
Predecessors: [0x4c5]
Successors: []
---
0x4cc PUSH1 0x0
0x4ce DUP1
0x4cf REVERT
---
0x4cc: V336 = 0x0
0x4cf: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x4d0
[0x4d0:0x504]
---
Predecessors: [0x4c5]
Successors: [0xbb9]
---
0x4d0 JUMPDEST
0x4d1 PUSH2 0x505
0x4d4 PUSH1 0x4
0x4d6 DUP1
0x4d7 DUP1
0x4d8 CALLDATALOAD
0x4d9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4ee AND
0x4ef SWAP1
0x4f0 PUSH1 0x20
0x4f2 ADD
0x4f3 SWAP1
0x4f4 SWAP2
0x4f5 SWAP1
0x4f6 DUP1
0x4f7 CALLDATALOAD
0x4f8 SWAP1
0x4f9 PUSH1 0x20
0x4fb ADD
0x4fc SWAP1
0x4fd SWAP2
0x4fe SWAP1
0x4ff POP
0x500 POP
0x501 PUSH2 0xbb9
0x504 JUMP
---
0x4d0: JUMPDEST 
0x4d1: V337 = 0x505
0x4d4: V338 = 0x4
0x4d8: V339 = CALLDATALOAD 0x4
0x4d9: V340 = 0xffffffffffffffffffffffffffffffffffffffff
0x4ee: V341 = AND 0xffffffffffffffffffffffffffffffffffffffff V339
0x4f0: V342 = 0x20
0x4f2: V343 = ADD 0x20 0x4
0x4f7: V344 = CALLDATALOAD 0x24
0x4f9: V345 = 0x20
0x4fb: V346 = ADD 0x20 0x24
0x501: V347 = 0xbb9
0x504: JUMP 0xbb9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x505, V341, V344]
Exit stack: [V11, 0x505, V341, V344]

================================

Block 0x505
[0x505:0x51e]
---
Predecessors: [0xdcd]
Successors: []
---
0x505 JUMPDEST
0x506 PUSH1 0x40
0x508 MLOAD
0x509 DUP1
0x50a DUP3
0x50b ISZERO
0x50c ISZERO
0x50d ISZERO
0x50e ISZERO
0x50f DUP2
0x510 MSTORE
0x511 PUSH1 0x20
0x513 ADD
0x514 SWAP2
0x515 POP
0x516 POP
0x517 PUSH1 0x40
0x519 MLOAD
0x51a DUP1
0x51b SWAP2
0x51c SUB
0x51d SWAP1
0x51e RETURN
---
0x505: JUMPDEST 
0x506: V348 = 0x40
0x508: V349 = M[0x40]
0x50b: V350 = ISZERO {0x0, 0x1}
0x50c: V351 = ISZERO V350
0x50d: V352 = ISZERO V351
0x50e: V353 = ISZERO V352
0x510: M[V349] = V353
0x511: V354 = 0x20
0x513: V355 = ADD 0x20 V349
0x517: V356 = 0x40
0x519: V357 = M[0x40]
0x51c: V358 = SUB V355 V357
0x51e: RETURN V357 V358
---
Entry stack: [V11, {0x0, 0x1}]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x51f
[0x51f:0x525]
---
Predecessors: [0x99]
Successors: [0x526, 0x52a]
---
0x51f JUMPDEST
0x520 CALLVALUE
0x521 ISZERO
0x522 PUSH2 0x52a
0x525 JUMPI
---
0x51f: JUMPDEST 
0x520: V359 = CALLVALUE
0x521: V360 = ISZERO V359
0x522: V361 = 0x52a
0x525: JUMPI 0x52a V360
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x526
[0x526:0x529]
---
Predecessors: [0x51f]
Successors: []
---
0x526 PUSH1 0x0
0x528 DUP1
0x529 REVERT
---
0x526: V362 = 0x0
0x529: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x52a
[0x52a:0x531]
---
Predecessors: [0x51f]
Successors: [0xdd6]
---
0x52a JUMPDEST
0x52b PUSH2 0x532
0x52e PUSH2 0xdd6
0x531 JUMP
---
0x52a: JUMPDEST 
0x52b: V363 = 0x532
0x52e: V364 = 0xdd6
0x531: JUMP 0xdd6
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x532]
Exit stack: [V11, 0x532]

================================

Block 0x532
[0x532:0x54e]
---
Predecessors: [0xdd6]
Successors: []
---
0x532 JUMPDEST
0x533 PUSH1 0x40
0x535 MLOAD
0x536 DUP1
0x537 DUP4
0x538 DUP2
0x539 MSTORE
0x53a PUSH1 0x20
0x53c ADD
0x53d DUP3
0x53e DUP2
0x53f MSTORE
0x540 PUSH1 0x20
0x542 ADD
0x543 SWAP3
0x544 POP
0x545 POP
0x546 POP
0x547 PUSH1 0x40
0x549 MLOAD
0x54a DUP1
0x54b SWAP2
0x54c SUB
0x54d SWAP1
0x54e RETURN
---
0x532: JUMPDEST 
0x533: V365 = 0x40
0x535: V366 = M[0x40]
0x539: M[V366] = V814
0x53a: V367 = 0x20
0x53c: V368 = ADD 0x20 V366
0x53f: M[V368] = V816
0x540: V369 = 0x20
0x542: V370 = ADD 0x20 V368
0x547: V371 = 0x40
0x549: V372 = M[0x40]
0x54c: V373 = SUB V370 V372
0x54e: RETURN V372 V373
---
Entry stack: [V11, V814, V816]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x54f
[0x54f:0x555]
---
Predecessors: [0xa4]
Successors: [0x556, 0x55a]
---
0x54f JUMPDEST
0x550 CALLVALUE
0x551 ISZERO
0x552 PUSH2 0x55a
0x555 JUMPI
---
0x54f: JUMPDEST 
0x550: V374 = CALLVALUE
0x551: V375 = ISZERO V374
0x552: V376 = 0x55a
0x555: JUMPI 0x55a V375
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x556
[0x556:0x559]
---
Predecessors: [0x54f]
Successors: []
---
0x556 PUSH1 0x0
0x558 DUP1
0x559 REVERT
---
0x556: V377 = 0x0
0x559: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x55a
[0x55a:0x5a4]
---
Predecessors: [0x54f]
Successors: [0xde7]
---
0x55a JUMPDEST
0x55b PUSH2 0x5a5
0x55e PUSH1 0x4
0x560 DUP1
0x561 DUP1
0x562 CALLDATALOAD
0x563 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x578 AND
0x579 SWAP1
0x57a PUSH1 0x20
0x57c ADD
0x57d SWAP1
0x57e SWAP2
0x57f SWAP1
0x580 DUP1
0x581 CALLDATALOAD
0x582 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x597 AND
0x598 SWAP1
0x599 PUSH1 0x20
0x59b ADD
0x59c SWAP1
0x59d SWAP2
0x59e SWAP1
0x59f POP
0x5a0 POP
0x5a1 PUSH2 0xde7
0x5a4 JUMP
---
0x55a: JUMPDEST 
0x55b: V378 = 0x5a5
0x55e: V379 = 0x4
0x562: V380 = CALLDATALOAD 0x4
0x563: V381 = 0xffffffffffffffffffffffffffffffffffffffff
0x578: V382 = AND 0xffffffffffffffffffffffffffffffffffffffff V380
0x57a: V383 = 0x20
0x57c: V384 = ADD 0x20 0x4
0x581: V385 = CALLDATALOAD 0x24
0x582: V386 = 0xffffffffffffffffffffffffffffffffffffffff
0x597: V387 = AND 0xffffffffffffffffffffffffffffffffffffffff V385
0x599: V388 = 0x20
0x59b: V389 = ADD 0x20 0x24
0x5a1: V390 = 0xde7
0x5a4: JUMP 0xde7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x5a5, V382, V387]
Exit stack: [V11, 0x5a5, V382, V387]

================================

Block 0x5a5
[0x5a5:0x5ba]
---
Predecessors: [0xde7]
Successors: []
---
0x5a5 JUMPDEST
0x5a6 PUSH1 0x40
0x5a8 MLOAD
0x5a9 DUP1
0x5aa DUP3
0x5ab DUP2
0x5ac MSTORE
0x5ad PUSH1 0x20
0x5af ADD
0x5b0 SWAP2
0x5b1 POP
0x5b2 POP
0x5b3 PUSH1 0x40
0x5b5 MLOAD
0x5b6 DUP1
0x5b7 SWAP2
0x5b8 SUB
0x5b9 SWAP1
0x5ba RETURN
---
0x5a5: JUMPDEST 
0x5a6: V391 = 0x40
0x5a8: V392 = M[0x40]
0x5ac: M[V392] = V841
0x5ad: V393 = 0x20
0x5af: V394 = ADD 0x20 V392
0x5b3: V395 = 0x40
0x5b5: V396 = M[0x40]
0x5b8: V397 = SUB V394 V396
0x5ba: RETURN V396 V397
---
Entry stack: [V11, V841]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x5bb
[0x5bb:0x5c1]
---
Predecessors: [0xaf]
Successors: [0x5c2, 0x5c6]
---
0x5bb JUMPDEST
0x5bc CALLVALUE
0x5bd ISZERO
0x5be PUSH2 0x5c6
0x5c1 JUMPI
---
0x5bb: JUMPDEST 
0x5bc: V398 = CALLVALUE
0x5bd: V399 = ISZERO V398
0x5be: V400 = 0x5c6
0x5c1: JUMPI 0x5c6 V399
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c2
[0x5c2:0x5c5]
---
Predecessors: [0x5bb]
Successors: []
---
0x5c2 PUSH1 0x0
0x5c4 DUP1
0x5c5 REVERT
---
0x5c2: V401 = 0x0
0x5c5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x5c6
[0x5c6:0x5f1]
---
Predecessors: [0x5bb]
Successors: [0xe6e]
---
0x5c6 JUMPDEST
0x5c7 PUSH2 0x5f2
0x5ca PUSH1 0x4
0x5cc DUP1
0x5cd DUP1
0x5ce CALLDATALOAD
0x5cf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x5e4 AND
0x5e5 SWAP1
0x5e6 PUSH1 0x20
0x5e8 ADD
0x5e9 SWAP1
0x5ea SWAP2
0x5eb SWAP1
0x5ec POP
0x5ed POP
0x5ee PUSH2 0xe6e
0x5f1 JUMP
---
0x5c6: JUMPDEST 
0x5c7: V402 = 0x5f2
0x5ca: V403 = 0x4
0x5ce: V404 = CALLDATALOAD 0x4
0x5cf: V405 = 0xffffffffffffffffffffffffffffffffffffffff
0x5e4: V406 = AND 0xffffffffffffffffffffffffffffffffffffffff V404
0x5e6: V407 = 0x20
0x5e8: V408 = ADD 0x20 0x4
0x5ee: V409 = 0xe6e
0x5f1: JUMP 0xe6e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x5f2, V406]
Exit stack: [V11, 0x5f2, V406]

================================

Block 0x5f2
[0x5f2:0x60b]
---
Predecessors: [0x106e]
Successors: []
---
0x5f2 JUMPDEST
0x5f3 PUSH1 0x40
0x5f5 MLOAD
0x5f6 DUP1
0x5f7 DUP3
0x5f8 ISZERO
0x5f9 ISZERO
0x5fa ISZERO
0x5fb ISZERO
0x5fc DUP2
0x5fd MSTORE
0x5fe PUSH1 0x20
0x600 ADD
0x601 SWAP2
0x602 POP
0x603 POP
0x604 PUSH1 0x40
0x606 MLOAD
0x607 DUP1
0x608 SWAP2
0x609 SUB
0x60a SWAP1
0x60b RETURN
---
0x5f2: JUMPDEST 
0x5f3: V410 = 0x40
0x5f5: V411 = M[0x40]
0x5f8: V412 = ISZERO V956
0x5f9: V413 = ISZERO V412
0x5fa: V414 = ISZERO V413
0x5fb: V415 = ISZERO V414
0x5fd: M[V411] = V415
0x5fe: V416 = 0x20
0x600: V417 = ADD 0x20 V411
0x604: V418 = 0x40
0x606: V419 = M[0x40]
0x609: V420 = SUB V417 V419
0x60b: RETURN V419 V420
---
Entry stack: [V11, V956]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x60c
[0x60c:0x613]
---
Predecessors: [0x213]
Successors: [0x1081]
---
0x60c JUMPDEST
0x60d PUSH2 0x614
0x610 PUSH2 0x1081
0x613 JUMP
---
0x60c: JUMPDEST 
0x60d: V421 = 0x614
0x610: V422 = 0x1081
0x613: JUMP 0x1081
---
Entry stack: [V11, 0x21b]
Stack pops: 0
Stack additions: [0x614]
Exit stack: [V11, 0x21b, 0x614]

================================

Block 0x614
[0x614:0x64e]
---
Predecessors: [0x1081]
Successors: [0x21b, 0x44a]
---
0x614 JUMPDEST
0x615 PUSH1 0x40
0x617 DUP1
0x618 MLOAD
0x619 SWAP1
0x61a DUP2
0x61b ADD
0x61c PUSH1 0x40
0x61e MSTORE
0x61f DUP1
0x620 PUSH1 0x9
0x622 DUP2
0x623 MSTORE
0x624 PUSH1 0x20
0x626 ADD
0x627 PUSH32 0x586d616e546f6b656e0000000000000000000000000000000000000000000000
0x648 DUP2
0x649 MSTORE
0x64a POP
0x64b SWAP1
0x64c POP
0x64d SWAP1
0x64e JUMP
---
0x614: JUMPDEST 
0x615: V423 = 0x40
0x618: V424 = M[0x40]
0x61b: V425 = ADD V424 0x40
0x61c: V426 = 0x40
0x61e: M[0x40] = V425
0x620: V427 = 0x9
0x623: M[V424] = 0x9
0x624: V428 = 0x20
0x626: V429 = ADD 0x20 V424
0x627: V430 = 0x586d616e546f6b656e0000000000000000000000000000000000000000000000
0x649: M[V429] = 0x586d616e546f6b656e0000000000000000000000000000000000000000000000
0x64e: JUMP {0x21b, 0x44a}
---
Entry stack: [V11, {0x21b, 0x44a}, V959]
Stack pops: 2
Stack additions: [V424]
Exit stack: [V11, V424]

================================

Block 0x64f
[0x64f:0x65b]
---
Predecessors: [0x2a1]
Successors: [0x65c, 0x6de]
---
0x64f JUMPDEST
0x650 PUSH1 0x0
0x652 DUP1
0x653 DUP3
0x654 EQ
0x655 ISZERO
0x656 DUP1
0x657 ISZERO
0x658 PUSH2 0x6de
0x65b JUMPI
---
0x64f: JUMPDEST 
0x650: V431 = 0x0
0x654: V432 = EQ V178 0x0
0x655: V433 = ISZERO V432
0x657: V434 = ISZERO V433
0x658: V435 = 0x6de
0x65b: JUMPI 0x6de V434
---
Entry stack: [V11, 0x2d6, V175, V178]
Stack pops: 1
Stack additions: [S0, 0x0, V433]
Exit stack: [V11, 0x2d6, V175, V178, 0x0, V433]

================================

Block 0x65c
[0x65c:0x6dd]
---
Predecessors: [0x64f]
Successors: [0x6de]
---
0x65c POP
0x65d PUSH1 0x0
0x65f PUSH1 0x2
0x661 PUSH1 0x0
0x663 CALLER
0x664 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x679 AND
0x67a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x68f AND
0x690 DUP2
0x691 MSTORE
0x692 PUSH1 0x20
0x694 ADD
0x695 SWAP1
0x696 DUP2
0x697 MSTORE
0x698 PUSH1 0x20
0x69a ADD
0x69b PUSH1 0x0
0x69d SHA3
0x69e PUSH1 0x0
0x6a0 DUP6
0x6a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6b6 AND
0x6b7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x6cc AND
0x6cd DUP2
0x6ce MSTORE
0x6cf PUSH1 0x20
0x6d1 ADD
0x6d2 SWAP1
0x6d3 DUP2
0x6d4 MSTORE
0x6d5 PUSH1 0x20
0x6d7 ADD
0x6d8 PUSH1 0x0
0x6da SHA3
0x6db SLOAD
0x6dc EQ
0x6dd ISZERO
---
0x65d: V436 = 0x0
0x65f: V437 = 0x2
0x661: V438 = 0x0
0x663: V439 = CALLER
0x664: V440 = 0xffffffffffffffffffffffffffffffffffffffff
0x679: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V439
0x67a: V442 = 0xffffffffffffffffffffffffffffffffffffffff
0x68f: V443 = AND 0xffffffffffffffffffffffffffffffffffffffff V441
0x691: M[0x0] = V443
0x692: V444 = 0x20
0x694: V445 = ADD 0x20 0x0
0x697: M[0x20] = 0x2
0x698: V446 = 0x20
0x69a: V447 = ADD 0x20 0x20
0x69b: V448 = 0x0
0x69d: V449 = SHA3 0x0 0x40
0x69e: V450 = 0x0
0x6a1: V451 = 0xffffffffffffffffffffffffffffffffffffffff
0x6b6: V452 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x6b7: V453 = 0xffffffffffffffffffffffffffffffffffffffff
0x6cc: V454 = AND 0xffffffffffffffffffffffffffffffffffffffff V452
0x6ce: M[0x0] = V454
0x6cf: V455 = 0x20
0x6d1: V456 = ADD 0x20 0x0
0x6d4: M[0x20] = V449
0x6d5: V457 = 0x20
0x6d7: V458 = ADD 0x20 0x20
0x6d8: V459 = 0x0
0x6da: V460 = SHA3 0x0 0x40
0x6db: V461 = S[V460]
0x6dc: V462 = EQ V461 0x0
0x6dd: V463 = ISZERO V462
---
Entry stack: [V11, 0x2d6, V175, V178, 0x0, V433]
Stack pops: 4
Stack additions: [S3, S2, S1, V463]
Exit stack: [V11, 0x2d6, V175, V178, 0x0, V463]

================================

Block 0x6de
[0x6de:0x6e3]
---
Predecessors: [0x64f, 0x65c]
Successors: [0x6e4, 0x6ec]
---
0x6de JUMPDEST
0x6df ISZERO
0x6e0 PUSH2 0x6ec
0x6e3 JUMPI
---
0x6de: JUMPDEST 
0x6df: V464 = ISZERO S0
0x6e0: V465 = 0x6ec
0x6e3: JUMPI 0x6ec V464
---
Entry stack: [V11, 0x2d6, V175, V178, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x2d6, V175, V178, 0x0]

================================

Block 0x6e4
[0x6e4:0x6eb]
---
Predecessors: [0x6de]
Successors: [0x7d7]
---
0x6e4 PUSH1 0x0
0x6e6 SWAP1
0x6e7 POP
0x6e8 PUSH2 0x7d7
0x6eb JUMP
---
0x6e4: V466 = 0x0
0x6e8: V467 = 0x7d7
0x6eb: JUMP 0x7d7
---
Entry stack: [V11, 0x2d6, V175, V178, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V11, 0x2d6, V175, V178, 0x0]

================================

Block 0x6ec
[0x6ec:0x7d6]
---
Predecessors: [0x6de]
Successors: [0x7d7]
---
0x6ec JUMPDEST
0x6ed DUP2
0x6ee PUSH1 0x2
0x6f0 PUSH1 0x0
0x6f2 CALLER
0x6f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x708 AND
0x709 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x71e AND
0x71f DUP2
0x720 MSTORE
0x721 PUSH1 0x20
0x723 ADD
0x724 SWAP1
0x725 DUP2
0x726 MSTORE
0x727 PUSH1 0x20
0x729 ADD
0x72a PUSH1 0x0
0x72c SHA3
0x72d PUSH1 0x0
0x72f DUP6
0x730 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x745 AND
0x746 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x75b AND
0x75c DUP2
0x75d MSTORE
0x75e PUSH1 0x20
0x760 ADD
0x761 SWAP1
0x762 DUP2
0x763 MSTORE
0x764 PUSH1 0x20
0x766 ADD
0x767 PUSH1 0x0
0x769 SHA3
0x76a DUP2
0x76b SWAP1
0x76c SSTORE
0x76d POP
0x76e DUP3
0x76f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x784 AND
0x785 CALLER
0x786 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x79b AND
0x79c PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x7bd DUP5
0x7be PUSH1 0x40
0x7c0 MLOAD
0x7c1 DUP1
0x7c2 DUP3
0x7c3 DUP2
0x7c4 MSTORE
0x7c5 PUSH1 0x20
0x7c7 ADD
0x7c8 SWAP2
0x7c9 POP
0x7ca POP
0x7cb PUSH1 0x40
0x7cd MLOAD
0x7ce DUP1
0x7cf SWAP2
0x7d0 SUB
0x7d1 SWAP1
0x7d2 LOG3
0x7d3 PUSH1 0x1
0x7d5 SWAP1
0x7d6 POP
---
0x6ec: JUMPDEST 
0x6ee: V468 = 0x2
0x6f0: V469 = 0x0
0x6f2: V470 = CALLER
0x6f3: V471 = 0xffffffffffffffffffffffffffffffffffffffff
0x708: V472 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x709: V473 = 0xffffffffffffffffffffffffffffffffffffffff
0x71e: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V472
0x720: M[0x0] = V474
0x721: V475 = 0x20
0x723: V476 = ADD 0x20 0x0
0x726: M[0x20] = 0x2
0x727: V477 = 0x20
0x729: V478 = ADD 0x20 0x20
0x72a: V479 = 0x0
0x72c: V480 = SHA3 0x0 0x40
0x72d: V481 = 0x0
0x730: V482 = 0xffffffffffffffffffffffffffffffffffffffff
0x745: V483 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x746: V484 = 0xffffffffffffffffffffffffffffffffffffffff
0x75b: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V483
0x75d: M[0x0] = V485
0x75e: V486 = 0x20
0x760: V487 = ADD 0x20 0x0
0x763: M[0x20] = V480
0x764: V488 = 0x20
0x766: V489 = ADD 0x20 0x20
0x767: V490 = 0x0
0x769: V491 = SHA3 0x0 0x40
0x76c: S[V491] = V178
0x76f: V492 = 0xffffffffffffffffffffffffffffffffffffffff
0x784: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V175
0x785: V494 = CALLER
0x786: V495 = 0xffffffffffffffffffffffffffffffffffffffff
0x79b: V496 = AND 0xffffffffffffffffffffffffffffffffffffffff V494
0x79c: V497 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x7be: V498 = 0x40
0x7c0: V499 = M[0x40]
0x7c4: M[V499] = V178
0x7c5: V500 = 0x20
0x7c7: V501 = ADD 0x20 V499
0x7cb: V502 = 0x40
0x7cd: V503 = M[0x40]
0x7d0: V504 = SUB V501 V503
0x7d2: LOG V503 V504 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V496 V493
0x7d3: V505 = 0x1
---
Entry stack: [V11, 0x2d6, V175, V178, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V11, 0x2d6, V175, V178, 0x1]

================================

Block 0x7d7
[0x7d7:0x7dc]
---
Predecessors: [0x6e4, 0x6ec]
Successors: [0x2d6]
---
0x7d7 JUMPDEST
0x7d8 SWAP3
0x7d9 SWAP2
0x7da POP
0x7db POP
0x7dc JUMP
---
0x7d7: JUMPDEST 
0x7dc: JUMP 0x2d6
---
Entry stack: [V11, 0x2d6, V175, V178, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0x7dd
[0x7dd:0x7e2]
---
Predecessors: [0x2fb]
Successors: [0x303]
---
0x7dd JUMPDEST
0x7de PUSH1 0x3
0x7e0 SLOAD
0x7e1 DUP2
0x7e2 JUMP
---
0x7dd: JUMPDEST 
0x7de: V506 = 0x3
0x7e0: V507 = S[0x3]
0x7e2: JUMP 0x303
---
Entry stack: [V11, 0x303]
Stack pops: 1
Stack additions: [S0, V507]
Exit stack: [V11, 0x303, V507]

================================

Block 0x7e3
[0x7e3:0x7e8]
---
Predecessors: [0x324]
Successors: [0x32c]
---
0x7e3 JUMPDEST
0x7e4 PUSH1 0x4
0x7e6 SLOAD
0x7e7 DUP2
0x7e8 JUMP
---
0x7e3: JUMPDEST 
0x7e4: V508 = 0x4
0x7e6: V509 = S[0x4]
0x7e8: JUMP 0x32c
---
Entry stack: [V11, 0x32c]
Stack pops: 1
Stack additions: [S0, V509]
Exit stack: [V11, 0x32c, V509]

================================

Block 0x7e9
[0x7e9:0x7ff]
---
Predecessors: [0x34d]
Successors: [0x800, 0x804]
---
0x7e9 JUMPDEST
0x7ea PUSH1 0x0
0x7ec DUP1
0x7ed PUSH1 0x0
0x7ef DUP1
0x7f0 PUSH1 0x0
0x7f2 DUP1
0x7f3 PUSH1 0x64
0x7f5 PUSH1 0x0
0x7f7 CALLDATASIZE
0x7f8 SWAP1
0x7f9 POP
0x7fa LT
0x7fb ISZERO
0x7fc PUSH2 0x804
0x7ff JUMPI
---
0x7e9: JUMPDEST 
0x7ea: V510 = 0x0
0x7ed: V511 = 0x0
0x7f0: V512 = 0x0
0x7f3: V513 = 0x64
0x7f5: V514 = 0x0
0x7f7: V515 = CALLDATASIZE
0x7fa: V516 = LT V515 0x64
0x7fb: V517 = ISZERO V516
0x7fc: V518 = 0x804
0x7ff: JUMPI 0x804 V517
---
Entry stack: [V11, 0x3a1, V227, V232, V235]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x3a1, V227, V232, V235, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x800
[0x800:0x803]
---
Predecessors: [0x7e9]
Successors: []
---
0x800 PUSH1 0x0
0x802 DUP1
0x803 REVERT
---
0x800: V519 = 0x0
0x803: REVERT 0x0 0x0
---
Entry stack: [V11, 0x3a1, V227, V232, V235, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x3a1, V227, V232, V235, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x804
[0x804:0x80d]
---
Predecessors: [0x7e9]
Successors: [0x80e, 0x816]
---
0x804 JUMPDEST
0x805 PUSH1 0x0
0x807 DUP8
0x808 EQ
0x809 ISZERO
0x80a PUSH2 0x816
0x80d JUMPI
---
0x804: JUMPDEST 
0x805: V520 = 0x0
0x808: V521 = EQ V235 0x0
0x809: V522 = ISZERO V521
0x80a: V523 = 0x816
0x80d: JUMPI 0x816 V522
---
Entry stack: [V11, 0x3a1, V227, V232, V235, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x3a1, V227, V232, V235, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x80e
[0x80e:0x815]
---
Predecessors: [0x804]
Successors: [0xb18]
---
0x80e PUSH1 0x0
0x810 SWAP6
0x811 POP
0x812 PUSH2 0xb18
0x815 JUMP
---
0x80e: V524 = 0x0
0x812: V525 = 0xb18
0x815: JUMP 0xb18
---
Entry stack: [V11, 0x3a1, V227, V232, V235, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x3a1, V227, V232, V235, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x816
[0x816:0x96f]
---
Predecessors: [0x804]
Successors: [0x970, 0x972]
---
0x816 JUMPDEST
0x817 PUSH1 0x1
0x819 PUSH1 0x0
0x81b DUP11
0x81c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x831 AND
0x832 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x847 AND
0x848 DUP2
0x849 MSTORE
0x84a PUSH1 0x20
0x84c ADD
0x84d SWAP1
0x84e DUP2
0x84f MSTORE
0x850 PUSH1 0x20
0x852 ADD
0x853 PUSH1 0x0
0x855 SHA3
0x856 SLOAD
0x857 SWAP5
0x858 POP
0x859 PUSH1 0x2
0x85b PUSH1 0x0
0x85d DUP11
0x85e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x873 AND
0x874 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x889 AND
0x88a DUP2
0x88b MSTORE
0x88c PUSH1 0x20
0x88e ADD
0x88f SWAP1
0x890 DUP2
0x891 MSTORE
0x892 PUSH1 0x20
0x894 ADD
0x895 PUSH1 0x0
0x897 SHA3
0x898 PUSH1 0x0
0x89a CALLER
0x89b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8b0 AND
0x8b1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8c6 AND
0x8c7 DUP2
0x8c8 MSTORE
0x8c9 PUSH1 0x20
0x8cb ADD
0x8cc SWAP1
0x8cd DUP2
0x8ce MSTORE
0x8cf PUSH1 0x20
0x8d1 ADD
0x8d2 PUSH1 0x0
0x8d4 SHA3
0x8d5 SLOAD
0x8d6 SWAP4
0x8d7 POP
0x8d8 DUP7
0x8d9 DUP6
0x8da GT
0x8db ISZERO
0x8dc SWAP3
0x8dd POP
0x8de DUP7
0x8df DUP5
0x8e0 GT
0x8e1 ISZERO
0x8e2 SWAP2
0x8e3 POP
0x8e4 PUSH1 0x1
0x8e6 PUSH1 0x0
0x8e8 DUP10
0x8e9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x8fe AND
0x8ff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x914 AND
0x915 DUP2
0x916 MSTORE
0x917 PUSH1 0x20
0x919 ADD
0x91a SWAP1
0x91b DUP2
0x91c MSTORE
0x91d PUSH1 0x20
0x91f ADD
0x920 PUSH1 0x0
0x922 SHA3
0x923 SLOAD
0x924 DUP8
0x925 PUSH1 0x1
0x927 PUSH1 0x0
0x929 DUP12
0x92a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x93f AND
0x940 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x955 AND
0x956 DUP2
0x957 MSTORE
0x958 PUSH1 0x20
0x95a ADD
0x95b SWAP1
0x95c DUP2
0x95d MSTORE
0x95e PUSH1 0x20
0x960 ADD
0x961 PUSH1 0x0
0x963 SHA3
0x964 SLOAD
0x965 ADD
0x966 GT
0x967 SWAP1
0x968 POP
0x969 DUP3
0x96a DUP1
0x96b ISZERO
0x96c PUSH2 0x972
0x96f JUMPI
---
0x816: JUMPDEST 
0x817: V526 = 0x1
0x819: V527 = 0x0
0x81c: V528 = 0xffffffffffffffffffffffffffffffffffffffff
0x831: V529 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x832: V530 = 0xffffffffffffffffffffffffffffffffffffffff
0x847: V531 = AND 0xffffffffffffffffffffffffffffffffffffffff V529
0x849: M[0x0] = V531
0x84a: V532 = 0x20
0x84c: V533 = ADD 0x20 0x0
0x84f: M[0x20] = 0x1
0x850: V534 = 0x20
0x852: V535 = ADD 0x20 0x20
0x853: V536 = 0x0
0x855: V537 = SHA3 0x0 0x40
0x856: V538 = S[V537]
0x859: V539 = 0x2
0x85b: V540 = 0x0
0x85e: V541 = 0xffffffffffffffffffffffffffffffffffffffff
0x873: V542 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x874: V543 = 0xffffffffffffffffffffffffffffffffffffffff
0x889: V544 = AND 0xffffffffffffffffffffffffffffffffffffffff V542
0x88b: M[0x0] = V544
0x88c: V545 = 0x20
0x88e: V546 = ADD 0x20 0x0
0x891: M[0x20] = 0x2
0x892: V547 = 0x20
0x894: V548 = ADD 0x20 0x20
0x895: V549 = 0x0
0x897: V550 = SHA3 0x0 0x40
0x898: V551 = 0x0
0x89a: V552 = CALLER
0x89b: V553 = 0xffffffffffffffffffffffffffffffffffffffff
0x8b0: V554 = AND 0xffffffffffffffffffffffffffffffffffffffff V552
0x8b1: V555 = 0xffffffffffffffffffffffffffffffffffffffff
0x8c6: V556 = AND 0xffffffffffffffffffffffffffffffffffffffff V554
0x8c8: M[0x0] = V556
0x8c9: V557 = 0x20
0x8cb: V558 = ADD 0x20 0x0
0x8ce: M[0x20] = V550
0x8cf: V559 = 0x20
0x8d1: V560 = ADD 0x20 0x20
0x8d2: V561 = 0x0
0x8d4: V562 = SHA3 0x0 0x40
0x8d5: V563 = S[V562]
0x8da: V564 = GT V538 V235
0x8db: V565 = ISZERO V564
0x8e0: V566 = GT V563 V235
0x8e1: V567 = ISZERO V566
0x8e4: V568 = 0x1
0x8e6: V569 = 0x0
0x8e9: V570 = 0xffffffffffffffffffffffffffffffffffffffff
0x8fe: V571 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x8ff: V572 = 0xffffffffffffffffffffffffffffffffffffffff
0x914: V573 = AND 0xffffffffffffffffffffffffffffffffffffffff V571
0x916: M[0x0] = V573
0x917: V574 = 0x20
0x919: V575 = ADD 0x20 0x0
0x91c: M[0x20] = 0x1
0x91d: V576 = 0x20
0x91f: V577 = ADD 0x20 0x20
0x920: V578 = 0x0
0x922: V579 = SHA3 0x0 0x40
0x923: V580 = S[V579]
0x925: V581 = 0x1
0x927: V582 = 0x0
0x92a: V583 = 0xffffffffffffffffffffffffffffffffffffffff
0x93f: V584 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x940: V585 = 0xffffffffffffffffffffffffffffffffffffffff
0x955: V586 = AND 0xffffffffffffffffffffffffffffffffffffffff V584
0x957: M[0x0] = V586
0x958: V587 = 0x20
0x95a: V588 = ADD 0x20 0x0
0x95d: M[0x20] = 0x1
0x95e: V589 = 0x20
0x960: V590 = ADD 0x20 0x20
0x961: V591 = 0x0
0x963: V592 = SHA3 0x0 0x40
0x964: V593 = S[V592]
0x965: V594 = ADD V593 V235
0x966: V595 = GT V594 V580
0x96b: V596 = ISZERO V565
0x96c: V597 = 0x972
0x96f: JUMPI 0x972 V596
---
Entry stack: [V11, 0x3a1, V227, V232, V235, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V538, V563, V565, V567, V595, V565]
Exit stack: [V11, 0x3a1, V227, V232, V235, 0x0, V538, V563, V565, V567, V595, V565]

================================

Block 0x970
[0x970:0x971]
---
Predecessors: [0x816]
Successors: [0x972]
---
0x970 POP
0x971 DUP2
---
0x970: NOP 
---
Entry stack: [V11, 0x3a1, V227, V232, V235, 0x0, V538, V563, V565, V567, V595, V565]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V11, 0x3a1, V227, V232, V235, 0x0, V538, V563, V565, V567, V595, V567]

================================

Block 0x972
[0x972:0x978]
---
Predecessors: [0x816, 0x970]
Successors: [0x979, 0x97c]
---
0x972 JUMPDEST
0x973 DUP1
0x974 ISZERO
0x975 PUSH2 0x97c
0x978 JUMPI
---
0x972: JUMPDEST 
0x974: V598 = ISZERO S0
0x975: V599 = 0x97c
0x978: JUMPI 0x97c V598
---
Entry stack: [V11, 0x3a1, V227, V232, V235, 0x0, V538, V563, V565, V567, V595, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x3a1, V227, V232, V235, 0x0, V538, V563, V565, V567, V595, S0]

================================

Block 0x979
[0x979:0x97b]
---
Predecessors: [0x972]
Successors: [0x97c]
---
0x979 POP
0x97a DUP1
0x97b ISZERO
---
0x97b: V600 = ISZERO V595
---
Entry stack: [V11, 0x3a1, V227, V232, V235, 0x0, V538, V563, V565, V567, V595, S0]
Stack pops: 2
Stack additions: [S1, V600]
Exit stack: [V11, 0x3a1, V227, V232, V235, 0x0, V538, V563, V565, V567, V595, V600]

================================

Block 0x97c
[0x97c:0x981]
---
Predecessors: [0x972, 0x979]
Successors: [0x982, 0xb13]
---
0x97c JUMPDEST
0x97d ISZERO
0x97e PUSH2 0xb13
0x981 JUMPI
---
0x97c: JUMPDEST 
0x97d: V601 = ISZERO S0
0x97e: V602 = 0xb13
0x981: JUMPI 0xb13 V601
---
Entry stack: [V11, 0x3a1, V227, V232, V235, 0x0, V538, V563, V565, V567, V595, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x3a1, V227, V232, V235, 0x0, V538, V563, V565, V567, V595]

================================

Block 0x982
[0x982:0xb12]
---
Predecessors: [0x97c]
Successors: [0xb18]
---
0x982 DUP7
0x983 PUSH1 0x1
0x985 PUSH1 0x0
0x987 DUP11
0x988 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x99d AND
0x99e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9b3 AND
0x9b4 DUP2
0x9b5 MSTORE
0x9b6 PUSH1 0x20
0x9b8 ADD
0x9b9 SWAP1
0x9ba DUP2
0x9bb MSTORE
0x9bc PUSH1 0x20
0x9be ADD
0x9bf PUSH1 0x0
0x9c1 SHA3
0x9c2 PUSH1 0x0
0x9c4 DUP3
0x9c5 DUP3
0x9c6 SLOAD
0x9c7 ADD
0x9c8 SWAP3
0x9c9 POP
0x9ca POP
0x9cb DUP2
0x9cc SWAP1
0x9cd SSTORE
0x9ce POP
0x9cf DUP7
0x9d0 PUSH1 0x1
0x9d2 PUSH1 0x0
0x9d4 DUP12
0x9d5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x9ea AND
0x9eb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa00 AND
0xa01 DUP2
0xa02 MSTORE
0xa03 PUSH1 0x20
0xa05 ADD
0xa06 SWAP1
0xa07 DUP2
0xa08 MSTORE
0xa09 PUSH1 0x20
0xa0b ADD
0xa0c PUSH1 0x0
0xa0e SHA3
0xa0f PUSH1 0x0
0xa11 DUP3
0xa12 DUP3
0xa13 SLOAD
0xa14 SUB
0xa15 SWAP3
0xa16 POP
0xa17 POP
0xa18 DUP2
0xa19 SWAP1
0xa1a SSTORE
0xa1b POP
0xa1c DUP7
0xa1d PUSH1 0x2
0xa1f PUSH1 0x0
0xa21 DUP12
0xa22 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa37 AND
0xa38 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa4d AND
0xa4e DUP2
0xa4f MSTORE
0xa50 PUSH1 0x20
0xa52 ADD
0xa53 SWAP1
0xa54 DUP2
0xa55 MSTORE
0xa56 PUSH1 0x20
0xa58 ADD
0xa59 PUSH1 0x0
0xa5b SHA3
0xa5c PUSH1 0x0
0xa5e CALLER
0xa5f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa74 AND
0xa75 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xa8a AND
0xa8b DUP2
0xa8c MSTORE
0xa8d PUSH1 0x20
0xa8f ADD
0xa90 SWAP1
0xa91 DUP2
0xa92 MSTORE
0xa93 PUSH1 0x20
0xa95 ADD
0xa96 PUSH1 0x0
0xa98 SHA3
0xa99 PUSH1 0x0
0xa9b DUP3
0xa9c DUP3
0xa9d SLOAD
0xa9e SUB
0xa9f SWAP3
0xaa0 POP
0xaa1 POP
0xaa2 DUP2
0xaa3 SWAP1
0xaa4 SSTORE
0xaa5 POP
0xaa6 DUP8
0xaa7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xabc AND
0xabd DUP10
0xabe PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xad3 AND
0xad4 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xaf5 DUP10
0xaf6 PUSH1 0x40
0xaf8 MLOAD
0xaf9 DUP1
0xafa DUP3
0xafb DUP2
0xafc MSTORE
0xafd PUSH1 0x20
0xaff ADD
0xb00 SWAP2
0xb01 POP
0xb02 POP
0xb03 PUSH1 0x40
0xb05 MLOAD
0xb06 DUP1
0xb07 SWAP2
0xb08 SUB
0xb09 SWAP1
0xb0a LOG3
0xb0b PUSH1 0x1
0xb0d SWAP6
0xb0e POP
0xb0f PUSH2 0xb18
0xb12 JUMP
---
0x983: V603 = 0x1
0x985: V604 = 0x0
0x988: V605 = 0xffffffffffffffffffffffffffffffffffffffff
0x99d: V606 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0x99e: V607 = 0xffffffffffffffffffffffffffffffffffffffff
0x9b3: V608 = AND 0xffffffffffffffffffffffffffffffffffffffff V606
0x9b5: M[0x0] = V608
0x9b6: V609 = 0x20
0x9b8: V610 = ADD 0x20 0x0
0x9bb: M[0x20] = 0x1
0x9bc: V611 = 0x20
0x9be: V612 = ADD 0x20 0x20
0x9bf: V613 = 0x0
0x9c1: V614 = SHA3 0x0 0x40
0x9c2: V615 = 0x0
0x9c6: V616 = S[V614]
0x9c7: V617 = ADD V616 V235
0x9cd: S[V614] = V617
0x9d0: V618 = 0x1
0x9d2: V619 = 0x0
0x9d5: V620 = 0xffffffffffffffffffffffffffffffffffffffff
0x9ea: V621 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0x9eb: V622 = 0xffffffffffffffffffffffffffffffffffffffff
0xa00: V623 = AND 0xffffffffffffffffffffffffffffffffffffffff V621
0xa02: M[0x0] = V623
0xa03: V624 = 0x20
0xa05: V625 = ADD 0x20 0x0
0xa08: M[0x20] = 0x1
0xa09: V626 = 0x20
0xa0b: V627 = ADD 0x20 0x20
0xa0c: V628 = 0x0
0xa0e: V629 = SHA3 0x0 0x40
0xa0f: V630 = 0x0
0xa13: V631 = S[V629]
0xa14: V632 = SUB V631 V235
0xa1a: S[V629] = V632
0xa1d: V633 = 0x2
0xa1f: V634 = 0x0
0xa22: V635 = 0xffffffffffffffffffffffffffffffffffffffff
0xa37: V636 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0xa38: V637 = 0xffffffffffffffffffffffffffffffffffffffff
0xa4d: V638 = AND 0xffffffffffffffffffffffffffffffffffffffff V636
0xa4f: M[0x0] = V638
0xa50: V639 = 0x20
0xa52: V640 = ADD 0x20 0x0
0xa55: M[0x20] = 0x2
0xa56: V641 = 0x20
0xa58: V642 = ADD 0x20 0x20
0xa59: V643 = 0x0
0xa5b: V644 = SHA3 0x0 0x40
0xa5c: V645 = 0x0
0xa5e: V646 = CALLER
0xa5f: V647 = 0xffffffffffffffffffffffffffffffffffffffff
0xa74: V648 = AND 0xffffffffffffffffffffffffffffffffffffffff V646
0xa75: V649 = 0xffffffffffffffffffffffffffffffffffffffff
0xa8a: V650 = AND 0xffffffffffffffffffffffffffffffffffffffff V648
0xa8c: M[0x0] = V650
0xa8d: V651 = 0x20
0xa8f: V652 = ADD 0x20 0x0
0xa92: M[0x20] = V644
0xa93: V653 = 0x20
0xa95: V654 = ADD 0x20 0x20
0xa96: V655 = 0x0
0xa98: V656 = SHA3 0x0 0x40
0xa99: V657 = 0x0
0xa9d: V658 = S[V656]
0xa9e: V659 = SUB V658 V235
0xaa4: S[V656] = V659
0xaa7: V660 = 0xffffffffffffffffffffffffffffffffffffffff
0xabc: V661 = AND 0xffffffffffffffffffffffffffffffffffffffff V232
0xabe: V662 = 0xffffffffffffffffffffffffffffffffffffffff
0xad3: V663 = AND 0xffffffffffffffffffffffffffffffffffffffff V227
0xad4: V664 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xaf6: V665 = 0x40
0xaf8: V666 = M[0x40]
0xafc: M[V666] = V235
0xafd: V667 = 0x20
0xaff: V668 = ADD 0x20 V666
0xb03: V669 = 0x40
0xb05: V670 = M[0x40]
0xb08: V671 = SUB V668 V670
0xb0a: LOG V670 V671 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V663 V661
0xb0b: V672 = 0x1
0xb0f: V673 = 0xb18
0xb12: JUMP 0xb18
---
Entry stack: [V11, 0x3a1, V227, V232, V235, 0x0, V538, V563, V565, V567, V595]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x3a1, V227, V232, V235, 0x1, V538, V563, V565, V567, V595]

================================

Block 0xb13
[0xb13:0xb17]
---
Predecessors: [0x97c]
Successors: [0xb18]
---
0xb13 JUMPDEST
0xb14 PUSH1 0x0
0xb16 SWAP6
0xb17 POP
---
0xb13: JUMPDEST 
0xb14: V674 = 0x0
---
Entry stack: [V11, 0x3a1, V227, V232, V235, 0x0, V538, V563, V565, V567, V595]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V11, 0x3a1, V227, V232, V235, 0x0, V538, V563, V565, V567, V595]

================================

Block 0xb18
[0xb18:0xb23]
---
Predecessors: [0x80e, 0x982, 0xb13]
Successors: [0x3a1]
---
0xb18 JUMPDEST
0xb19 POP
0xb1a POP
0xb1b POP
0xb1c POP
0xb1d POP
0xb1e SWAP4
0xb1f SWAP3
0xb20 POP
0xb21 POP
0xb22 POP
0xb23 JUMP
---
0xb18: JUMPDEST 
0xb23: JUMP 0x3a1
---
Entry stack: [V11, 0x3a1, V227, V232, V235, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S5]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0xb24
[0xb24:0xb2c]
---
Predecessors: [0x3c6]
Successors: [0x3ce]
---
0xb24 JUMPDEST
0xb25 PUSH1 0x0
0xb27 PUSH1 0x12
0xb29 SWAP1
0xb2a POP
0xb2b SWAP1
0xb2c JUMP
---
0xb24: JUMPDEST 
0xb25: V675 = 0x0
0xb27: V676 = 0x12
0xb2c: JUMP 0x3ce
---
Entry stack: [V11, 0x3ce]
Stack pops: 1
Stack additions: [0x12]
Exit stack: [V11, 0x12]

================================

Block 0xb2d
[0xb2d:0xb75]
---
Predecessors: [0x3f5]
Successors: [0x421]
---
0xb2d JUMPDEST
0xb2e PUSH1 0x0
0xb30 PUSH1 0x1
0xb32 PUSH1 0x0
0xb34 DUP4
0xb35 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb4a AND
0xb4b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xb60 AND
0xb61 DUP2
0xb62 MSTORE
0xb63 PUSH1 0x20
0xb65 ADD
0xb66 SWAP1
0xb67 DUP2
0xb68 MSTORE
0xb69 PUSH1 0x20
0xb6b ADD
0xb6c PUSH1 0x0
0xb6e SHA3
0xb6f SLOAD
0xb70 SWAP1
0xb71 POP
0xb72 SWAP2
0xb73 SWAP1
0xb74 POP
0xb75 JUMP
---
0xb2d: JUMPDEST 
0xb2e: V677 = 0x0
0xb30: V678 = 0x1
0xb32: V679 = 0x0
0xb35: V680 = 0xffffffffffffffffffffffffffffffffffffffff
0xb4a: V681 = AND 0xffffffffffffffffffffffffffffffffffffffff V275
0xb4b: V682 = 0xffffffffffffffffffffffffffffffffffffffff
0xb60: V683 = AND 0xffffffffffffffffffffffffffffffffffffffff V681
0xb62: M[0x0] = V683
0xb63: V684 = 0x20
0xb65: V685 = ADD 0x20 0x0
0xb68: M[0x20] = 0x1
0xb69: V686 = 0x20
0xb6b: V687 = ADD 0x20 0x20
0xb6c: V688 = 0x0
0xb6e: V689 = SHA3 0x0 0x40
0xb6f: V690 = S[V689]
0xb75: JUMP 0x421
---
Entry stack: [V11, 0x421, V275]
Stack pops: 2
Stack additions: [V690]
Exit stack: [V11, V690]

================================

Block 0xb76
[0xb76:0xb7d]
---
Predecessors: [0x442]
Successors: [0x1081]
---
0xb76 JUMPDEST
0xb77 PUSH2 0xb7e
0xb7a PUSH2 0x1081
0xb7d JUMP
---
0xb76: JUMPDEST 
0xb77: V691 = 0xb7e
0xb7a: V692 = 0x1081
0xb7d: JUMP 0x1081
---
Entry stack: [V11, 0x44a]
Stack pops: 0
Stack additions: [0xb7e]
Exit stack: [V11, 0x44a, 0xb7e]

================================

Block 0xb7e
[0xb7e:0xbb8]
---
Predecessors: [0x1081]
Successors: [0x21b, 0x44a]
---
0xb7e JUMPDEST
0xb7f PUSH1 0x40
0xb81 DUP1
0xb82 MLOAD
0xb83 SWAP1
0xb84 DUP2
0xb85 ADD
0xb86 PUSH1 0x40
0xb88 MSTORE
0xb89 DUP1
0xb8a PUSH1 0x4
0xb8c DUP2
0xb8d MSTORE
0xb8e PUSH1 0x20
0xb90 ADD
0xb91 PUSH32 0x584d414e00000000000000000000000000000000000000000000000000000000
0xbb2 DUP2
0xbb3 MSTORE
0xbb4 POP
0xbb5 SWAP1
0xbb6 POP
0xbb7 SWAP1
0xbb8 JUMP
---
0xb7e: JUMPDEST 
0xb7f: V693 = 0x40
0xb82: V694 = M[0x40]
0xb85: V695 = ADD V694 0x40
0xb86: V696 = 0x40
0xb88: M[0x40] = V695
0xb8a: V697 = 0x4
0xb8d: M[V694] = 0x4
0xb8e: V698 = 0x20
0xb90: V699 = ADD 0x20 V694
0xb91: V700 = 0x584d414e00000000000000000000000000000000000000000000000000000000
0xbb3: M[V699] = 0x584d414e00000000000000000000000000000000000000000000000000000000
0xbb8: JUMP {0x21b, 0x44a}
---
Entry stack: [V11, {0x21b, 0x44a}, V959]
Stack pops: 2
Stack additions: [V694]
Exit stack: [V11, V694]

================================

Block 0xbb9
[0xbb9:0xbcc]
---
Predecessors: [0x4d0]
Successors: [0xbcd, 0xbd1]
---
0xbb9 JUMPDEST
0xbba PUSH1 0x0
0xbbc DUP1
0xbbd PUSH1 0x0
0xbbf DUP1
0xbc0 PUSH1 0x44
0xbc2 PUSH1 0x0
0xbc4 CALLDATASIZE
0xbc5 SWAP1
0xbc6 POP
0xbc7 LT
0xbc8 ISZERO
0xbc9 PUSH2 0xbd1
0xbcc JUMPI
---
0xbb9: JUMPDEST 
0xbba: V701 = 0x0
0xbbd: V702 = 0x0
0xbc0: V703 = 0x44
0xbc2: V704 = 0x0
0xbc4: V705 = CALLDATASIZE
0xbc7: V706 = LT V705 0x44
0xbc8: V707 = ISZERO V706
0xbc9: V708 = 0xbd1
0xbcc: JUMPI 0xbd1 V707
---
Entry stack: [V11, 0x505, V341, V344]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V11, 0x505, V341, V344, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xbcd
[0xbcd:0xbd0]
---
Predecessors: [0xbb9]
Successors: []
---
0xbcd PUSH1 0x0
0xbcf DUP1
0xbd0 REVERT
---
0xbcd: V709 = 0x0
0xbd0: REVERT 0x0 0x0
---
Entry stack: [V11, 0x505, V341, V344, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x505, V341, V344, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xbd1
[0xbd1:0xbda]
---
Predecessors: [0xbb9]
Successors: [0xbdb, 0xbe3]
---
0xbd1 JUMPDEST
0xbd2 PUSH1 0x0
0xbd4 DUP6
0xbd5 EQ
0xbd6 ISZERO
0xbd7 PUSH2 0xbe3
0xbda JUMPI
---
0xbd1: JUMPDEST 
0xbd2: V710 = 0x0
0xbd5: V711 = EQ V344 0x0
0xbd6: V712 = ISZERO V711
0xbd7: V713 = 0xbe3
0xbda: JUMPI 0xbe3 V712
---
Entry stack: [V11, 0x505, V341, V344, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x505, V341, V344, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xbdb
[0xbdb:0xbe2]
---
Predecessors: [0xbd1]
Successors: [0xdcd]
---
0xbdb PUSH1 0x0
0xbdd SWAP4
0xbde POP
0xbdf PUSH2 0xdcd
0xbe2 JUMP
---
0xbdb: V714 = 0x0
0xbdf: V715 = 0xdcd
0xbe2: JUMP 0xdcd
---
Entry stack: [V11, 0x505, V341, V344, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V11, 0x505, V341, V344, 0x0, 0x0, 0x0, 0x0]

================================

Block 0xbe3
[0xbe3:0xcb7]
---
Predecessors: [0xbd1]
Successors: [0xcb8, 0xcbb]
---
0xbe3 JUMPDEST
0xbe4 PUSH1 0x1
0xbe6 PUSH1 0x0
0xbe8 CALLER
0xbe9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xbfe AND
0xbff PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc14 AND
0xc15 DUP2
0xc16 MSTORE
0xc17 PUSH1 0x20
0xc19 ADD
0xc1a SWAP1
0xc1b DUP2
0xc1c MSTORE
0xc1d PUSH1 0x20
0xc1f ADD
0xc20 PUSH1 0x0
0xc22 SHA3
0xc23 SLOAD
0xc24 SWAP3
0xc25 POP
0xc26 DUP5
0xc27 DUP4
0xc28 LT
0xc29 ISZERO
0xc2a SWAP2
0xc2b POP
0xc2c PUSH1 0x1
0xc2e PUSH1 0x0
0xc30 DUP8
0xc31 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc46 AND
0xc47 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc5c AND
0xc5d DUP2
0xc5e MSTORE
0xc5f PUSH1 0x20
0xc61 ADD
0xc62 SWAP1
0xc63 DUP2
0xc64 MSTORE
0xc65 PUSH1 0x20
0xc67 ADD
0xc68 PUSH1 0x0
0xc6a SHA3
0xc6b SLOAD
0xc6c DUP6
0xc6d PUSH1 0x1
0xc6f PUSH1 0x0
0xc71 DUP10
0xc72 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc87 AND
0xc88 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc9d AND
0xc9e DUP2
0xc9f MSTORE
0xca0 PUSH1 0x20
0xca2 ADD
0xca3 SWAP1
0xca4 DUP2
0xca5 MSTORE
0xca6 PUSH1 0x20
0xca8 ADD
0xca9 PUSH1 0x0
0xcab SHA3
0xcac SLOAD
0xcad ADD
0xcae LT
0xcaf SWAP1
0xcb0 POP
0xcb1 DUP2
0xcb2 DUP1
0xcb3 ISZERO
0xcb4 PUSH2 0xcbb
0xcb7 JUMPI
---
0xbe3: JUMPDEST 
0xbe4: V716 = 0x1
0xbe6: V717 = 0x0
0xbe8: V718 = CALLER
0xbe9: V719 = 0xffffffffffffffffffffffffffffffffffffffff
0xbfe: V720 = AND 0xffffffffffffffffffffffffffffffffffffffff V718
0xbff: V721 = 0xffffffffffffffffffffffffffffffffffffffff
0xc14: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff V720
0xc16: M[0x0] = V722
0xc17: V723 = 0x20
0xc19: V724 = ADD 0x20 0x0
0xc1c: M[0x20] = 0x1
0xc1d: V725 = 0x20
0xc1f: V726 = ADD 0x20 0x20
0xc20: V727 = 0x0
0xc22: V728 = SHA3 0x0 0x40
0xc23: V729 = S[V728]
0xc28: V730 = LT V729 V344
0xc29: V731 = ISZERO V730
0xc2c: V732 = 0x1
0xc2e: V733 = 0x0
0xc31: V734 = 0xffffffffffffffffffffffffffffffffffffffff
0xc46: V735 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0xc47: V736 = 0xffffffffffffffffffffffffffffffffffffffff
0xc5c: V737 = AND 0xffffffffffffffffffffffffffffffffffffffff V735
0xc5e: M[0x0] = V737
0xc5f: V738 = 0x20
0xc61: V739 = ADD 0x20 0x0
0xc64: M[0x20] = 0x1
0xc65: V740 = 0x20
0xc67: V741 = ADD 0x20 0x20
0xc68: V742 = 0x0
0xc6a: V743 = SHA3 0x0 0x40
0xc6b: V744 = S[V743]
0xc6d: V745 = 0x1
0xc6f: V746 = 0x0
0xc72: V747 = 0xffffffffffffffffffffffffffffffffffffffff
0xc87: V748 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0xc88: V749 = 0xffffffffffffffffffffffffffffffffffffffff
0xc9d: V750 = AND 0xffffffffffffffffffffffffffffffffffffffff V748
0xc9f: M[0x0] = V750
0xca0: V751 = 0x20
0xca2: V752 = ADD 0x20 0x0
0xca5: M[0x20] = 0x1
0xca6: V753 = 0x20
0xca8: V754 = ADD 0x20 0x20
0xca9: V755 = 0x0
0xcab: V756 = SHA3 0x0 0x40
0xcac: V757 = S[V756]
0xcad: V758 = ADD V757 V344
0xcae: V759 = LT V758 V744
0xcb3: V760 = ISZERO V731
0xcb4: V761 = 0xcbb
0xcb7: JUMPI 0xcbb V760
---
Entry stack: [V11, 0x505, V341, V344, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V729, V731, V759, V731]
Exit stack: [V11, 0x505, V341, V344, 0x0, V729, V731, V759, V731]

================================

Block 0xcb8
[0xcb8:0xcba]
---
Predecessors: [0xbe3]
Successors: [0xcbb]
---
0xcb8 POP
0xcb9 DUP1
0xcba ISZERO
---
0xcba: V762 = ISZERO V759
---
Entry stack: [V11, 0x505, V341, V344, 0x0, V729, V731, V759, V731]
Stack pops: 2
Stack additions: [S1, V762]
Exit stack: [V11, 0x505, V341, V344, 0x0, V729, V731, V759, V762]

================================

Block 0xcbb
[0xcbb:0xcc0]
---
Predecessors: [0xbe3, 0xcb8]
Successors: [0xcc1, 0xdc8]
---
0xcbb JUMPDEST
0xcbc ISZERO
0xcbd PUSH2 0xdc8
0xcc0 JUMPI
---
0xcbb: JUMPDEST 
0xcbc: V763 = ISZERO S0
0xcbd: V764 = 0xdc8
0xcc0: JUMPI 0xdc8 V763
---
Entry stack: [V11, 0x505, V341, V344, 0x0, V729, V731, V759, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x505, V341, V344, 0x0, V729, V731, V759]

================================

Block 0xcc1
[0xcc1:0xdc7]
---
Predecessors: [0xcbb]
Successors: [0xdcd]
---
0xcc1 DUP5
0xcc2 PUSH1 0x1
0xcc4 PUSH1 0x0
0xcc6 CALLER
0xcc7 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcdc AND
0xcdd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xcf2 AND
0xcf3 DUP2
0xcf4 MSTORE
0xcf5 PUSH1 0x20
0xcf7 ADD
0xcf8 SWAP1
0xcf9 DUP2
0xcfa MSTORE
0xcfb PUSH1 0x20
0xcfd ADD
0xcfe PUSH1 0x0
0xd00 SHA3
0xd01 PUSH1 0x0
0xd03 DUP3
0xd04 DUP3
0xd05 SLOAD
0xd06 SUB
0xd07 SWAP3
0xd08 POP
0xd09 POP
0xd0a DUP2
0xd0b SWAP1
0xd0c SSTORE
0xd0d POP
0xd0e DUP5
0xd0f PUSH1 0x1
0xd11 PUSH1 0x0
0xd13 DUP9
0xd14 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd29 AND
0xd2a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd3f AND
0xd40 DUP2
0xd41 MSTORE
0xd42 PUSH1 0x20
0xd44 ADD
0xd45 SWAP1
0xd46 DUP2
0xd47 MSTORE
0xd48 PUSH1 0x20
0xd4a ADD
0xd4b PUSH1 0x0
0xd4d SHA3
0xd4e PUSH1 0x0
0xd50 DUP3
0xd51 DUP3
0xd52 SLOAD
0xd53 ADD
0xd54 SWAP3
0xd55 POP
0xd56 POP
0xd57 DUP2
0xd58 SWAP1
0xd59 SSTORE
0xd5a POP
0xd5b DUP6
0xd5c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd71 AND
0xd72 CALLER
0xd73 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xd88 AND
0xd89 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xdaa DUP8
0xdab PUSH1 0x40
0xdad MLOAD
0xdae DUP1
0xdaf DUP3
0xdb0 DUP2
0xdb1 MSTORE
0xdb2 PUSH1 0x20
0xdb4 ADD
0xdb5 SWAP2
0xdb6 POP
0xdb7 POP
0xdb8 PUSH1 0x40
0xdba MLOAD
0xdbb DUP1
0xdbc SWAP2
0xdbd SUB
0xdbe SWAP1
0xdbf LOG3
0xdc0 PUSH1 0x1
0xdc2 SWAP4
0xdc3 POP
0xdc4 PUSH2 0xdcd
0xdc7 JUMP
---
0xcc2: V765 = 0x1
0xcc4: V766 = 0x0
0xcc6: V767 = CALLER
0xcc7: V768 = 0xffffffffffffffffffffffffffffffffffffffff
0xcdc: V769 = AND 0xffffffffffffffffffffffffffffffffffffffff V767
0xcdd: V770 = 0xffffffffffffffffffffffffffffffffffffffff
0xcf2: V771 = AND 0xffffffffffffffffffffffffffffffffffffffff V769
0xcf4: M[0x0] = V771
0xcf5: V772 = 0x20
0xcf7: V773 = ADD 0x20 0x0
0xcfa: M[0x20] = 0x1
0xcfb: V774 = 0x20
0xcfd: V775 = ADD 0x20 0x20
0xcfe: V776 = 0x0
0xd00: V777 = SHA3 0x0 0x40
0xd01: V778 = 0x0
0xd05: V779 = S[V777]
0xd06: V780 = SUB V779 V344
0xd0c: S[V777] = V780
0xd0f: V781 = 0x1
0xd11: V782 = 0x0
0xd14: V783 = 0xffffffffffffffffffffffffffffffffffffffff
0xd29: V784 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0xd2a: V785 = 0xffffffffffffffffffffffffffffffffffffffff
0xd3f: V786 = AND 0xffffffffffffffffffffffffffffffffffffffff V784
0xd41: M[0x0] = V786
0xd42: V787 = 0x20
0xd44: V788 = ADD 0x20 0x0
0xd47: M[0x20] = 0x1
0xd48: V789 = 0x20
0xd4a: V790 = ADD 0x20 0x20
0xd4b: V791 = 0x0
0xd4d: V792 = SHA3 0x0 0x40
0xd4e: V793 = 0x0
0xd52: V794 = S[V792]
0xd53: V795 = ADD V794 V344
0xd59: S[V792] = V795
0xd5c: V796 = 0xffffffffffffffffffffffffffffffffffffffff
0xd71: V797 = AND 0xffffffffffffffffffffffffffffffffffffffff V341
0xd72: V798 = CALLER
0xd73: V799 = 0xffffffffffffffffffffffffffffffffffffffff
0xd88: V800 = AND 0xffffffffffffffffffffffffffffffffffffffff V798
0xd89: V801 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xdab: V802 = 0x40
0xdad: V803 = M[0x40]
0xdb1: M[V803] = V344
0xdb2: V804 = 0x20
0xdb4: V805 = ADD 0x20 V803
0xdb8: V806 = 0x40
0xdba: V807 = M[0x40]
0xdbd: V808 = SUB V805 V807
0xdbf: LOG V807 V808 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V800 V797
0xdc0: V809 = 0x1
0xdc4: V810 = 0xdcd
0xdc7: JUMP 0xdcd
---
Entry stack: [V11, 0x505, V341, V344, 0x0, V729, V731, V759]
Stack pops: 6
Stack additions: [S5, S4, 0x1, S2, S1, S0]
Exit stack: [V11, 0x505, V341, V344, 0x1, V729, V731, V759]

================================

Block 0xdc8
[0xdc8:0xdcc]
---
Predecessors: [0xcbb]
Successors: [0xdcd]
---
0xdc8 JUMPDEST
0xdc9 PUSH1 0x0
0xdcb SWAP4
0xdcc POP
---
0xdc8: JUMPDEST 
0xdc9: V811 = 0x0
---
Entry stack: [V11, 0x505, V341, V344, 0x0, V729, V731, V759]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V11, 0x505, V341, V344, 0x0, V729, V731, V759]

================================

Block 0xdcd
[0xdcd:0xdd5]
---
Predecessors: [0xbdb, 0xcc1, 0xdc8]
Successors: [0x505]
---
0xdcd JUMPDEST
0xdce POP
0xdcf POP
0xdd0 POP
0xdd1 SWAP3
0xdd2 SWAP2
0xdd3 POP
0xdd4 POP
0xdd5 JUMP
---
0xdcd: JUMPDEST 
0xdd5: JUMP 0x505
---
Entry stack: [V11, 0x505, V341, V344, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V11, {0x0, 0x1}]

================================

Block 0xdd6
[0xdd6:0xde6]
---
Predecessors: [0x52a]
Successors: [0x532]
---
0xdd6 JUMPDEST
0xdd7 PUSH1 0x0
0xdd9 DUP1
0xdda PUSH1 0x3
0xddc SLOAD
0xddd PUSH1 0x4
0xddf SLOAD
0xde0 SWAP2
0xde1 POP
0xde2 SWAP2
0xde3 POP
0xde4 SWAP1
0xde5 SWAP2
0xde6 JUMP
---
0xdd6: JUMPDEST 
0xdd7: V812 = 0x0
0xdda: V813 = 0x3
0xddc: V814 = S[0x3]
0xddd: V815 = 0x4
0xddf: V816 = S[0x4]
0xde6: JUMP 0x532
---
Entry stack: [V11, 0x532]
Stack pops: 1
Stack additions: [V814, V816]
Exit stack: [V11, V814, V816]

================================

Block 0xde7
[0xde7:0xe6d]
---
Predecessors: [0x55a]
Successors: [0x5a5]
---
0xde7 JUMPDEST
0xde8 PUSH1 0x0
0xdea PUSH1 0x2
0xdec PUSH1 0x0
0xdee DUP5
0xdef PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe04 AND
0xe05 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe1a AND
0xe1b DUP2
0xe1c MSTORE
0xe1d PUSH1 0x20
0xe1f ADD
0xe20 SWAP1
0xe21 DUP2
0xe22 MSTORE
0xe23 PUSH1 0x20
0xe25 ADD
0xe26 PUSH1 0x0
0xe28 SHA3
0xe29 PUSH1 0x0
0xe2b DUP4
0xe2c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe41 AND
0xe42 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe57 AND
0xe58 DUP2
0xe59 MSTORE
0xe5a PUSH1 0x20
0xe5c ADD
0xe5d SWAP1
0xe5e DUP2
0xe5f MSTORE
0xe60 PUSH1 0x20
0xe62 ADD
0xe63 PUSH1 0x0
0xe65 SHA3
0xe66 SLOAD
0xe67 SWAP1
0xe68 POP
0xe69 SWAP3
0xe6a SWAP2
0xe6b POP
0xe6c POP
0xe6d JUMP
---
0xde7: JUMPDEST 
0xde8: V817 = 0x0
0xdea: V818 = 0x2
0xdec: V819 = 0x0
0xdef: V820 = 0xffffffffffffffffffffffffffffffffffffffff
0xe04: V821 = AND 0xffffffffffffffffffffffffffffffffffffffff V382
0xe05: V822 = 0xffffffffffffffffffffffffffffffffffffffff
0xe1a: V823 = AND 0xffffffffffffffffffffffffffffffffffffffff V821
0xe1c: M[0x0] = V823
0xe1d: V824 = 0x20
0xe1f: V825 = ADD 0x20 0x0
0xe22: M[0x20] = 0x2
0xe23: V826 = 0x20
0xe25: V827 = ADD 0x20 0x20
0xe26: V828 = 0x0
0xe28: V829 = SHA3 0x0 0x40
0xe29: V830 = 0x0
0xe2c: V831 = 0xffffffffffffffffffffffffffffffffffffffff
0xe41: V832 = AND 0xffffffffffffffffffffffffffffffffffffffff V387
0xe42: V833 = 0xffffffffffffffffffffffffffffffffffffffff
0xe57: V834 = AND 0xffffffffffffffffffffffffffffffffffffffff V832
0xe59: M[0x0] = V834
0xe5a: V835 = 0x20
0xe5c: V836 = ADD 0x20 0x0
0xe5f: M[0x20] = V829
0xe60: V837 = 0x20
0xe62: V838 = ADD 0x20 0x20
0xe63: V839 = 0x0
0xe65: V840 = SHA3 0x0 0x40
0xe66: V841 = S[V840]
0xe6d: JUMP 0x5a5
---
Entry stack: [V11, 0x5a5, V382, V387]
Stack pops: 3
Stack additions: [V841]
Exit stack: [V11, V841]

================================

Block 0xe6e
[0xe6e:0xec9]
---
Predecessors: [0x5c6]
Successors: [0xeca, 0xece]
---
0xe6e JUMPDEST
0xe6f PUSH1 0x0
0xe71 DUP1
0xe72 PUSH1 0x0
0xe74 DUP1
0xe75 PUSH1 0x0
0xe77 SWAP1
0xe78 SLOAD
0xe79 SWAP1
0xe7a PUSH2 0x100
0xe7d EXP
0xe7e SWAP1
0xe7f DIV
0xe80 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xe95 AND
0xe96 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xeab AND
0xeac CALLER
0xead PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xec2 AND
0xec3 EQ
0xec4 ISZERO
0xec5 ISZERO
0xec6 PUSH2 0xece
0xec9 JUMPI
---
0xe6e: JUMPDEST 
0xe6f: V842 = 0x0
0xe72: V843 = 0x0
0xe75: V844 = 0x0
0xe78: V845 = S[0x0]
0xe7a: V846 = 0x100
0xe7d: V847 = EXP 0x100 0x0
0xe7f: V848 = DIV V845 0x1
0xe80: V849 = 0xffffffffffffffffffffffffffffffffffffffff
0xe95: V850 = AND 0xffffffffffffffffffffffffffffffffffffffff V848
0xe96: V851 = 0xffffffffffffffffffffffffffffffffffffffff
0xeab: V852 = AND 0xffffffffffffffffffffffffffffffffffffffff V850
0xeac: V853 = CALLER
0xead: V854 = 0xffffffffffffffffffffffffffffffffffffffff
0xec2: V855 = AND 0xffffffffffffffffffffffffffffffffffffffff V853
0xec3: V856 = EQ V855 V852
0xec4: V857 = ISZERO V856
0xec5: V858 = ISZERO V857
0xec6: V859 = 0xece
0xec9: JUMPI 0xece V858
---
Entry stack: [V11, 0x5f2, V406]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V11, 0x5f2, V406, 0x0, 0x0, 0x0]

================================

Block 0xeca
[0xeca:0xecd]
---
Predecessors: [0xe6e]
Successors: []
---
0xeca PUSH1 0x0
0xecc DUP1
0xecd REVERT
---
0xeca: V860 = 0x0
0xecd: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5f2, V406, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5f2, V406, 0x0, 0x0, 0x0]

================================

Block 0xece
[0xece:0xf6f]
---
Predecessors: [0xe6e]
Successors: [0xf70, 0xf74]
---
0xece JUMPDEST
0xecf DUP4
0xed0 SWAP2
0xed1 POP
0xed2 DUP2
0xed3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xee8 AND
0xee9 PUSH4 0x70a08231
0xeee ADDRESS
0xeef PUSH1 0x0
0xef1 PUSH1 0x40
0xef3 MLOAD
0xef4 PUSH1 0x20
0xef6 ADD
0xef7 MSTORE
0xef8 PUSH1 0x40
0xefa MLOAD
0xefb DUP3
0xefc PUSH4 0xffffffff
0xf01 AND
0xf02 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xf20 MUL
0xf21 DUP2
0xf22 MSTORE
0xf23 PUSH1 0x4
0xf25 ADD
0xf26 DUP1
0xf27 DUP3
0xf28 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf3d AND
0xf3e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xf53 AND
0xf54 DUP2
0xf55 MSTORE
0xf56 PUSH1 0x20
0xf58 ADD
0xf59 SWAP2
0xf5a POP
0xf5b POP
0xf5c PUSH1 0x20
0xf5e PUSH1 0x40
0xf60 MLOAD
0xf61 DUP1
0xf62 DUP4
0xf63 SUB
0xf64 DUP2
0xf65 PUSH1 0x0
0xf67 DUP8
0xf68 DUP1
0xf69 EXTCODESIZE
0xf6a ISZERO
0xf6b ISZERO
0xf6c PUSH2 0xf74
0xf6f JUMPI
---
0xece: JUMPDEST 
0xed3: V861 = 0xffffffffffffffffffffffffffffffffffffffff
0xee8: V862 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0xee9: V863 = 0x70a08231
0xeee: V864 = ADDRESS
0xeef: V865 = 0x0
0xef1: V866 = 0x40
0xef3: V867 = M[0x40]
0xef4: V868 = 0x20
0xef6: V869 = ADD 0x20 V867
0xef7: M[V869] = 0x0
0xef8: V870 = 0x40
0xefa: V871 = M[0x40]
0xefc: V872 = 0xffffffff
0xf01: V873 = AND 0xffffffff 0x70a08231
0xf02: V874 = 0x100000000000000000000000000000000000000000000000000000000
0xf20: V875 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0xf22: M[V871] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0xf23: V876 = 0x4
0xf25: V877 = ADD 0x4 V871
0xf28: V878 = 0xffffffffffffffffffffffffffffffffffffffff
0xf3d: V879 = AND 0xffffffffffffffffffffffffffffffffffffffff V864
0xf3e: V880 = 0xffffffffffffffffffffffffffffffffffffffff
0xf53: V881 = AND 0xffffffffffffffffffffffffffffffffffffffff V879
0xf55: M[V877] = V881
0xf56: V882 = 0x20
0xf58: V883 = ADD 0x20 V877
0xf5c: V884 = 0x20
0xf5e: V885 = 0x40
0xf60: V886 = M[0x40]
0xf63: V887 = SUB V883 V886
0xf65: V888 = 0x0
0xf69: V889 = EXTCODESIZE V862
0xf6a: V890 = ISZERO V889
0xf6b: V891 = ISZERO V890
0xf6c: V892 = 0xf74
0xf6f: JUMPI 0xf74 V891
---
Entry stack: [V11, 0x5f2, V406, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V862, 0x70a08231, V883, 0x20, V886, V887, V886, 0x0, V862]
Exit stack: [V11, 0x5f2, V406, 0x0, V406, 0x0, V862, 0x70a08231, V883, 0x20, V886, V887, V886, 0x0, V862]

================================

Block 0xf70
[0xf70:0xf73]
---
Predecessors: [0xece]
Successors: []
---
0xf70 PUSH1 0x0
0xf72 DUP1
0xf73 REVERT
---
0xf70: V893 = 0x0
0xf73: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5f2, V406, 0x0, V406, 0x0, V862, 0x70a08231, V883, 0x20, V886, V887, V886, 0x0, V862]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5f2, V406, 0x0, V406, 0x0, V862, 0x70a08231, V883, 0x20, V886, V887, V886, 0x0, V862]

================================

Block 0xf74
[0xf74:0xf80]
---
Predecessors: [0xece]
Successors: [0xf81, 0xf85]
---
0xf74 JUMPDEST
0xf75 PUSH2 0x2c6
0xf78 GAS
0xf79 SUB
0xf7a CALL
0xf7b ISZERO
0xf7c ISZERO
0xf7d PUSH2 0xf85
0xf80 JUMPI
---
0xf74: JUMPDEST 
0xf75: V894 = 0x2c6
0xf78: V895 = GAS
0xf79: V896 = SUB V895 0x2c6
0xf7a: V897 = CALL V896 V862 0x0 V886 V887 V886 0x20
0xf7b: V898 = ISZERO V897
0xf7c: V899 = ISZERO V898
0xf7d: V900 = 0xf85
0xf80: JUMPI 0xf85 V899
---
Entry stack: [V11, 0x5f2, V406, 0x0, V406, 0x0, V862, 0x70a08231, V883, 0x20, V886, V887, V886, 0x0, V862]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x5f2, V406, 0x0, V406, 0x0, V862, 0x70a08231, V883]

================================

Block 0xf81
[0xf81:0xf84]
---
Predecessors: [0xf74]
Successors: []
---
0xf81 PUSH1 0x0
0xf83 DUP1
0xf84 REVERT
---
0xf81: V901 = 0x0
0xf84: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5f2, V406, 0x0, V406, 0x0, V862, 0x70a08231, V883]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5f2, V406, 0x0, V406, 0x0, V862, 0x70a08231, V883]

================================

Block 0xf85
[0xf85:0x1058]
---
Predecessors: [0xf74]
Successors: [0x1059, 0x105d]
---
0xf85 JUMPDEST
0xf86 POP
0xf87 POP
0xf88 POP
0xf89 PUSH1 0x40
0xf8b MLOAD
0xf8c DUP1
0xf8d MLOAD
0xf8e SWAP1
0xf8f POP
0xf90 SWAP1
0xf91 POP
0xf92 DUP2
0xf93 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfa8 AND
0xfa9 PUSH4 0xa9059cbb
0xfae PUSH1 0x0
0xfb0 DUP1
0xfb1 SWAP1
0xfb2 SLOAD
0xfb3 SWAP1
0xfb4 PUSH2 0x100
0xfb7 EXP
0xfb8 SWAP1
0xfb9 DIV
0xfba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xfcf AND
0xfd0 DUP4
0xfd1 PUSH1 0x0
0xfd3 PUSH1 0x40
0xfd5 MLOAD
0xfd6 PUSH1 0x20
0xfd8 ADD
0xfd9 MSTORE
0xfda PUSH1 0x40
0xfdc MLOAD
0xfdd DUP4
0xfde PUSH4 0xffffffff
0xfe3 AND
0xfe4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x1002 MUL
0x1003 DUP2
0x1004 MSTORE
0x1005 PUSH1 0x4
0x1007 ADD
0x1008 DUP1
0x1009 DUP4
0x100a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x101f AND
0x1020 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1035 AND
0x1036 DUP2
0x1037 MSTORE
0x1038 PUSH1 0x20
0x103a ADD
0x103b DUP3
0x103c DUP2
0x103d MSTORE
0x103e PUSH1 0x20
0x1040 ADD
0x1041 SWAP3
0x1042 POP
0x1043 POP
0x1044 POP
0x1045 PUSH1 0x20
0x1047 PUSH1 0x40
0x1049 MLOAD
0x104a DUP1
0x104b DUP4
0x104c SUB
0x104d DUP2
0x104e PUSH1 0x0
0x1050 DUP8
0x1051 DUP1
0x1052 EXTCODESIZE
0x1053 ISZERO
0x1054 ISZERO
0x1055 PUSH2 0x105d
0x1058 JUMPI
---
0xf85: JUMPDEST 
0xf89: V902 = 0x40
0xf8b: V903 = M[0x40]
0xf8d: V904 = M[V903]
0xf93: V905 = 0xffffffffffffffffffffffffffffffffffffffff
0xfa8: V906 = AND 0xffffffffffffffffffffffffffffffffffffffff V406
0xfa9: V907 = 0xa9059cbb
0xfae: V908 = 0x0
0xfb2: V909 = S[0x0]
0xfb4: V910 = 0x100
0xfb7: V911 = EXP 0x100 0x0
0xfb9: V912 = DIV V909 0x1
0xfba: V913 = 0xffffffffffffffffffffffffffffffffffffffff
0xfcf: V914 = AND 0xffffffffffffffffffffffffffffffffffffffff V912
0xfd1: V915 = 0x0
0xfd3: V916 = 0x40
0xfd5: V917 = M[0x40]
0xfd6: V918 = 0x20
0xfd8: V919 = ADD 0x20 V917
0xfd9: M[V919] = 0x0
0xfda: V920 = 0x40
0xfdc: V921 = M[0x40]
0xfde: V922 = 0xffffffff
0xfe3: V923 = AND 0xffffffff 0xa9059cbb
0xfe4: V924 = 0x100000000000000000000000000000000000000000000000000000000
0x1002: V925 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xa9059cbb
0x1004: M[V921] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0x1005: V926 = 0x4
0x1007: V927 = ADD 0x4 V921
0x100a: V928 = 0xffffffffffffffffffffffffffffffffffffffff
0x101f: V929 = AND 0xffffffffffffffffffffffffffffffffffffffff V914
0x1020: V930 = 0xffffffffffffffffffffffffffffffffffffffff
0x1035: V931 = AND 0xffffffffffffffffffffffffffffffffffffffff V929
0x1037: M[V927] = V931
0x1038: V932 = 0x20
0x103a: V933 = ADD 0x20 V927
0x103d: M[V933] = V904
0x103e: V934 = 0x20
0x1040: V935 = ADD 0x20 V933
0x1045: V936 = 0x20
0x1047: V937 = 0x40
0x1049: V938 = M[0x40]
0x104c: V939 = SUB V935 V938
0x104e: V940 = 0x0
0x1052: V941 = EXTCODESIZE V906
0x1053: V942 = ISZERO V941
0x1054: V943 = ISZERO V942
0x1055: V944 = 0x105d
0x1058: JUMPI 0x105d V943
---
Entry stack: [V11, 0x5f2, V406, 0x0, V406, 0x0, V862, 0x70a08231, V883]
Stack pops: 5
Stack additions: [S4, V904, V906, 0xa9059cbb, V935, 0x20, V938, V939, V938, 0x0, V906]
Exit stack: [V11, 0x5f2, V406, 0x0, V406, V904, V906, 0xa9059cbb, V935, 0x20, V938, V939, V938, 0x0, V906]

================================

Block 0x1059
[0x1059:0x105c]
---
Predecessors: [0xf85]
Successors: []
---
0x1059 PUSH1 0x0
0x105b DUP1
0x105c REVERT
---
0x1059: V945 = 0x0
0x105c: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5f2, V406, 0x0, V406, V904, V906, 0xa9059cbb, V935, 0x20, V938, V939, V938, 0x0, V906]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5f2, V406, 0x0, V406, V904, V906, 0xa9059cbb, V935, 0x20, V938, V939, V938, 0x0, V906]

================================

Block 0x105d
[0x105d:0x1069]
---
Predecessors: [0xf85]
Successors: [0x106a, 0x106e]
---
0x105d JUMPDEST
0x105e PUSH2 0x2c6
0x1061 GAS
0x1062 SUB
0x1063 CALL
0x1064 ISZERO
0x1065 ISZERO
0x1066 PUSH2 0x106e
0x1069 JUMPI
---
0x105d: JUMPDEST 
0x105e: V946 = 0x2c6
0x1061: V947 = GAS
0x1062: V948 = SUB V947 0x2c6
0x1063: V949 = CALL V948 V906 0x0 V938 V939 V938 0x20
0x1064: V950 = ISZERO V949
0x1065: V951 = ISZERO V950
0x1066: V952 = 0x106e
0x1069: JUMPI 0x106e V951
---
Entry stack: [V11, 0x5f2, V406, 0x0, V406, V904, V906, 0xa9059cbb, V935, 0x20, V938, V939, V938, 0x0, V906]
Stack pops: 6
Stack additions: []
Exit stack: [V11, 0x5f2, V406, 0x0, V406, V904, V906, 0xa9059cbb, V935]

================================

Block 0x106a
[0x106a:0x106d]
---
Predecessors: [0x105d]
Successors: []
---
0x106a PUSH1 0x0
0x106c DUP1
0x106d REVERT
---
0x106a: V953 = 0x0
0x106d: REVERT 0x0 0x0
---
Entry stack: [V11, 0x5f2, V406, 0x0, V406, V904, V906, 0xa9059cbb, V935]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x5f2, V406, 0x0, V406, V904, V906, 0xa9059cbb, V935]

================================

Block 0x106e
[0x106e:0x1080]
---
Predecessors: [0x105d]
Successors: [0x5f2]
---
0x106e JUMPDEST
0x106f POP
0x1070 POP
0x1071 POP
0x1072 PUSH1 0x40
0x1074 MLOAD
0x1075 DUP1
0x1076 MLOAD
0x1077 SWAP1
0x1078 POP
0x1079 SWAP3
0x107a POP
0x107b POP
0x107c POP
0x107d SWAP2
0x107e SWAP1
0x107f POP
0x1080 JUMP
---
0x106e: JUMPDEST 
0x1072: V954 = 0x40
0x1074: V955 = M[0x40]
0x1076: V956 = M[V955]
0x1080: JUMP 0x5f2
---
Entry stack: [V11, 0x5f2, V406, 0x0, V406, V904, V906, 0xa9059cbb, V935]
Stack pops: 8
Stack additions: [V956]
Exit stack: [V11, V956]

================================

Block 0x1081
[0x1081:0x1094]
---
Predecessors: [0x60c, 0xb76]
Successors: [0x614, 0xb7e]
---
0x1081 JUMPDEST
0x1082 PUSH1 0x20
0x1084 PUSH1 0x40
0x1086 MLOAD
0x1087 SWAP1
0x1088 DUP2
0x1089 ADD
0x108a PUSH1 0x40
0x108c MSTORE
0x108d DUP1
0x108e PUSH1 0x0
0x1090 DUP2
0x1091 MSTORE
0x1092 POP
0x1093 SWAP1
0x1094 JUMP
---
0x1081: JUMPDEST 
0x1082: V957 = 0x20
0x1084: V958 = 0x40
0x1086: V959 = M[0x40]
0x1089: V960 = ADD V959 0x20
0x108a: V961 = 0x40
0x108c: M[0x40] = V960
0x108e: V962 = 0x0
0x1091: M[V959] = 0x0
0x1094: JUMP {0x614, 0xb7e}
---
Entry stack: [V11, {0x21b, 0x44a}, {0x614, 0xb7e}]
Stack pops: 1
Stack additions: [V959]
Exit stack: [V11, {0x21b, 0x44a}, V959]

================================

Block 0x1095
[0x1095:0x10c5]
---
Predecessors: []
Successors: []
---
0x1095 STOP
0x1096 LOG1
0x1097 PUSH6 0x627a7a723058
0x109e SHA3
0x109f GASLIMIT
0x10a0 MISSING 0xab
0x10a1 PUSH1 0xe4
0x10a3 MISSING 0xb3
0x10a4 PUSH11 0x916c936a1f377b6f769afa
0x10b0 SMOD
0x10b1 MISSING 0xe1
0x10b2 MSTORE
0x10b3 GASPRICE
0x10b4 PUSH17 0xcaf4af70c180520233e50029
---
0x1095: STOP 
0x1096: LOG S0 S1 S2
0x1097: V963 = 0x627a7a723058
0x109e: V964 = SHA3 0x627a7a723058 S3
0x109f: V965 = GASLIMIT
0x10a0: MISSING 0xab
0x10a1: V966 = 0xe4
0x10a3: MISSING 0xb3
0x10a4: V967 = 0x916c936a1f377b6f769afa
0x10b0: V968 = SMOD 0x916c936a1f377b6f769afa S0
0x10b1: MISSING 0xe1
0x10b2: M[S0] = S1
0x10b3: V969 = GASPRICE
0x10b4: V970 = 0xcaf4af70c180520233e50029
---
Entry stack: []
Stack pops: 0
Stack additions: [V965, V964, 0xe4, V968, 0xcaf4af70c180520233e50029, V969]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x208
Exit block: 0x4b7
Body: 0x208, 0x20f, 0x213, 0x21b, 0x240, 0x249, 0x25b, 0x26f, 0x288, 0x44a, 0x46f, 0x478, 0x48a, 0x49e, 0x4b7, 0x60c, 0x614

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x296
Exit block: 0x2d6
Body: 0x296, 0x29d, 0x2a1, 0x2d6, 0x64f, 0x65c, 0x6de, 0x6e4, 0x6ec, 0x7d7

Function 2:
Public function signature: 0xdcf4b8f
Entry block: 0x2f0
Exit block: 0x303
Body: 0x2f0, 0x2f7, 0x2fb, 0x303, 0x7dd

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x319
Exit block: 0x32c
Body: 0x319, 0x320, 0x324, 0x32c, 0x7e3

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x342
Exit block: 0x3a1
Body: 0x342, 0x349, 0x34d, 0x3a1, 0x7e9, 0x800, 0x804, 0x80e, 0x816, 0x970, 0x972, 0x979, 0x97c, 0x982, 0xb13, 0xb18

Function 5:
Public function signature: 0x313ce567
Entry block: 0x3bb
Exit block: 0x3ce
Body: 0x3bb, 0x3c2, 0x3c6, 0x3ce, 0xb24

Function 6:
Public function signature: 0x70a08231
Entry block: 0x3ea
Exit block: 0x421
Body: 0x3ea, 0x3f1, 0x3f5, 0x421, 0xb2d

Function 7:
Public function signature: 0x95d89b41
Entry block: 0x437
Exit block: 0x4b7
Body: 0x21b, 0x240, 0x249, 0x25b, 0x26f, 0x288, 0x437, 0x43e, 0x442, 0x44a, 0x46f, 0x478, 0x48a, 0x49e, 0x4b7, 0xb76, 0xb7e

Function 8:
Public function signature: 0xa9059cbb
Entry block: 0x4c5
Exit block: 0x505
Body: 0x4c5, 0x4cc, 0x4d0, 0x505, 0xbb9, 0xbcd, 0xbd1, 0xbdb, 0xbe3, 0xcb8, 0xcbb, 0xcc1, 0xdc8, 0xdcd

Function 9:
Public function signature: 0xc59d4847
Entry block: 0x51f
Exit block: 0x532
Body: 0x51f, 0x526, 0x52a, 0x532, 0xdd6

Function 10:
Public function signature: 0xdd62ed3e
Entry block: 0x54f
Exit block: 0x5a5
Body: 0x54f, 0x556, 0x55a, 0x5a5, 0xde7

Function 11:
Public function signature: 0xe58fc54c
Entry block: 0x5bb
Exit block: 0x5f2
Body: 0x5bb, 0x5c2, 0x5c6, 0x5f2, 0xe6e, 0xeca, 0xece, 0xf70, 0xf74, 0xf81, 0xf85, 0x1059, 0x105d, 0x106a, 0x106e

Function 12:
Public fallback function
Entry block: 0xba
Exit block: 0x205
Body: 0xba, 0xc5, 0xc9, 0x126, 0x12a, 0x205

