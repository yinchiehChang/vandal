Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x82]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x82
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x82
0xc: JUMPI 0x82 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x84]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x181ffc5f
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x84
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x181ffc5f
0x3b: V13 = EQ V11 0x181ffc5f
0x3c: V14 = 0x84
0x3f: JUMPI 0x84 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0x97]
---
0x40 DUP1
0x41 PUSH4 0x2923f101
0x46 EQ
0x47 PUSH2 0x97
0x4a JUMPI
---
0x41: V15 = 0x2923f101
0x46: V16 = EQ 0x2923f101 V11
0x47: V17 = 0x97
0x4a: JUMPI 0x97 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0xa2]
---
0x4b DUP1
0x4c PUSH4 0x31fd725a
0x51 EQ
0x52 PUSH2 0xa2
0x55 JUMPI
---
0x4c: V18 = 0x31fd725a
0x51: V19 = EQ 0x31fd725a V11
0x52: V20 = 0xa2
0x55: JUMPI 0xa2 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0xb8]
---
0x56 DUP1
0x57 PUSH4 0x410c8005
0x5c EQ
0x5d PUSH2 0xb8
0x60 JUMPI
---
0x57: V21 = 0x410c8005
0x5c: V22 = EQ 0x410c8005 V11
0x5d: V23 = 0xb8
0x60: JUMPI 0xb8 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0xd7]
---
0x61 DUP1
0x62 PUSH4 0xb456ecc5
0x67 EQ
0x68 PUSH2 0xd7
0x6b JUMPI
---
0x62: V24 = 0xb456ecc5
0x67: V25 = EQ 0xb456ecc5 V11
0x68: V26 = 0xd7
0x6b: JUMPI 0xd7 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x76]
---
Predecessors: [0x61]
Successors: [0x77, 0x13a]
---
0x6c DUP1
0x6d PUSH4 0xbea948c8
0x72 EQ
0x73 PUSH2 0x13a
0x76 JUMPI
---
0x6d: V27 = 0xbea948c8
0x72: V28 = EQ 0xbea948c8 V11
0x73: V29 = 0x13a
0x76: JUMPI 0x13a V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x77
[0x77:0x81]
---
Predecessors: [0x6c]
Successors: [0x82, 0x142]
---
0x77 DUP1
0x78 PUSH4 0xdac47a71
0x7d EQ
0x7e PUSH2 0x142
0x81 JUMPI
---
0x78: V30 = 0xdac47a71
0x7d: V31 = EQ 0xdac47a71 V11
0x7e: V32 = 0x142
0x81: JUMPI 0x142 V31
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x82
[0x82:0x83]
---
Predecessors: [0x0, 0x77, 0x1c6, 0x22b, 0x258, 0x283, 0x372]
Successors: []
---
0x82 JUMPDEST
0x83 STOP
---
0x82: JUMPDEST 
0x83: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x84
[0x84:0x96]
---
Predecessors: [0xd]
Successors: [0x158]
---
0x84 JUMPDEST
0x85 PUSH2 0x82
0x88 PUSH1 0x4
0x8a DUP1
0x8b CALLDATALOAD
0x8c PUSH1 0x24
0x8e DUP2
0x8f ADD
0x90 SWAP2
0x91 ADD
0x92 CALLDATALOAD
0x93 PUSH2 0x158
0x96 JUMP
---
0x84: JUMPDEST 
0x85: V33 = 0x82
0x88: V34 = 0x4
0x8b: V35 = CALLDATALOAD 0x4
0x8c: V36 = 0x24
0x8f: V37 = ADD V35 0x24
0x91: V38 = ADD 0x4 V35
0x92: V39 = CALLDATALOAD V38
0x93: V40 = 0x158
0x96: JUMP 0x158
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V37, V39]
Exit stack: [V11, 0x82, V37, V39]

================================

Block 0x97
[0x97:0xa1]
---
Predecessors: [0x40]
Successors: [0x1ca]
---
0x97 JUMPDEST
0x98 PUSH2 0x82
0x9b PUSH1 0x4
0x9d CALLDATALOAD
0x9e PUSH2 0x1ca
0xa1 JUMP
---
0x97: JUMPDEST 
0x98: V41 = 0x82
0x9b: V42 = 0x4
0x9d: V43 = CALLDATALOAD 0x4
0x9e: V44 = 0x1ca
0xa1: JUMP 0x1ca
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V43]
Exit stack: [V11, 0x82, V43]

================================

Block 0xa2
[0xa2:0xa8]
---
Predecessors: [0x4b]
Successors: [0xa9, 0xad]
---
0xa2 JUMPDEST
0xa3 CALLVALUE
0xa4 ISZERO
0xa5 PUSH2 0xad
0xa8 JUMPI
---
0xa2: JUMPDEST 
0xa3: V45 = CALLVALUE
0xa4: V46 = ISZERO V45
0xa5: V47 = 0xad
0xa8: JUMPI 0xad V46
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xa9
[0xa9:0xac]
---
Predecessors: [0xa2]
Successors: []
---
0xa9 PUSH1 0x0
0xab DUP1
0xac REVERT
---
0xa9: V48 = 0x0
0xac: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xad
[0xad:0xb7]
---
Predecessors: [0xa2]
Successors: [0x22e]
---
0xad JUMPDEST
0xae PUSH2 0x82
0xb1 PUSH1 0x4
0xb3 CALLDATALOAD
0xb4 PUSH2 0x22e
0xb7 JUMP
---
0xad: JUMPDEST 
0xae: V49 = 0x82
0xb1: V50 = 0x4
0xb3: V51 = CALLDATALOAD 0x4
0xb4: V52 = 0x22e
0xb7: JUMP 0x22e
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V51]
Exit stack: [V11, 0x82, V51]

================================

Block 0xb8
[0xb8:0xbe]
---
Predecessors: [0x56]
Successors: [0xbf, 0xc3]
---
0xb8 JUMPDEST
0xb9 CALLVALUE
0xba ISZERO
0xbb PUSH2 0xc3
0xbe JUMPI
---
0xb8: JUMPDEST 
0xb9: V53 = CALLVALUE
0xba: V54 = ISZERO V53
0xbb: V55 = 0xc3
0xbe: JUMPI 0xc3 V54
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0xb8]
Successors: []
---
0xbf PUSH1 0x0
0xc1 DUP1
0xc2 REVERT
---
0xbf: V56 = 0x0
0xc2: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc3
[0xc3:0xd6]
---
Predecessors: [0xb8]
Successors: [0x266]
---
0xc3 JUMPDEST
0xc4 PUSH2 0x82
0xc7 PUSH1 0x1
0xc9 PUSH1 0xa0
0xcb PUSH1 0x2
0xcd EXP
0xce SUB
0xcf PUSH1 0x4
0xd1 CALLDATALOAD
0xd2 AND
0xd3 PUSH2 0x266
0xd6 JUMP
---
0xc3: JUMPDEST 
0xc4: V57 = 0x82
0xc7: V58 = 0x1
0xc9: V59 = 0xa0
0xcb: V60 = 0x2
0xcd: V61 = EXP 0x2 0xa0
0xce: V62 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcf: V63 = 0x4
0xd1: V64 = CALLDATALOAD 0x4
0xd2: V65 = AND V64 0xffffffffffffffffffffffffffffffffffffffff
0xd3: V66 = 0x266
0xd6: JUMP 0x266
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V65]
Exit stack: [V11, 0x82, V65]

================================

Block 0xd7
[0xd7:0xdd]
---
Predecessors: [0x61]
Successors: [0xde, 0xe2]
---
0xd7 JUMPDEST
0xd8 CALLVALUE
0xd9 ISZERO
0xda PUSH2 0xe2
0xdd JUMPI
---
0xd7: JUMPDEST 
0xd8: V67 = CALLVALUE
0xd9: V68 = ISZERO V67
0xda: V69 = 0xe2
0xdd: JUMPI 0xe2 V68
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xe1]
---
Predecessors: [0xd7]
Successors: []
---
0xde PUSH1 0x0
0xe0 DUP1
0xe1 REVERT
---
0xde: V70 = 0x0
0xe1: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe2
[0xe2:0x127]
---
Predecessors: [0xd7]
Successors: [0x2af]
---
0xe2 JUMPDEST
0xe3 PUSH2 0x128
0xe6 PUSH1 0x4
0xe8 PUSH1 0x24
0xea DUP2
0xeb CALLDATALOAD
0xec DUP2
0xed DUP2
0xee ADD
0xef SWAP1
0xf0 DUP4
0xf1 ADD
0xf2 CALLDATALOAD
0xf3 DUP1
0xf4 PUSH1 0x20
0xf6 PUSH1 0x1f
0xf8 DUP3
0xf9 ADD
0xfa DUP2
0xfb SWAP1
0xfc DIV
0xfd DUP2
0xfe MUL
0xff ADD
0x100 PUSH1 0x40
0x102 MLOAD
0x103 SWAP1
0x104 DUP2
0x105 ADD
0x106 PUSH1 0x40
0x108 MSTORE
0x109 DUP2
0x10a DUP2
0x10b MSTORE
0x10c SWAP3
0x10d SWAP2
0x10e SWAP1
0x10f PUSH1 0x20
0x111 DUP5
0x112 ADD
0x113 DUP4
0x114 DUP4
0x115 DUP1
0x116 DUP3
0x117 DUP5
0x118 CALLDATACOPY
0x119 POP
0x11a SWAP5
0x11b SWAP7
0x11c POP
0x11d PUSH2 0x2af
0x120 SWAP6
0x121 POP
0x122 POP
0x123 POP
0x124 POP
0x125 POP
0x126 POP
0x127 JUMP
---
0xe2: JUMPDEST 
0xe3: V71 = 0x128
0xe6: V72 = 0x4
0xe8: V73 = 0x24
0xeb: V74 = CALLDATALOAD 0x4
0xee: V75 = ADD V74 0x24
0xf1: V76 = ADD 0x4 V74
0xf2: V77 = CALLDATALOAD V76
0xf4: V78 = 0x20
0xf6: V79 = 0x1f
0xf9: V80 = ADD V77 0x1f
0xfc: V81 = DIV V80 0x20
0xfe: V82 = MUL 0x20 V81
0xff: V83 = ADD V82 0x20
0x100: V84 = 0x40
0x102: V85 = M[0x40]
0x105: V86 = ADD V85 V83
0x106: V87 = 0x40
0x108: M[0x40] = V86
0x10b: M[V85] = V77
0x10f: V88 = 0x20
0x112: V89 = ADD V85 0x20
0x118: CALLDATACOPY V89 V75 V77
0x11d: V90 = 0x2af
0x127: JUMP 0x2af
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x128, V85]
Exit stack: [V11, 0x128, V85]

================================

Block 0x128
[0x128:0x139]
---
Predecessors: [0x2e1]
Successors: []
---
0x128 JUMPDEST
0x129 PUSH1 0x40
0x12b MLOAD
0x12c SWAP1
0x12d DUP2
0x12e MSTORE
0x12f PUSH1 0x20
0x131 ADD
0x132 PUSH1 0x40
0x134 MLOAD
0x135 DUP1
0x136 SWAP2
0x137 SUB
0x138 SWAP1
0x139 RETURN
---
0x128: JUMPDEST 
0x129: V91 = 0x40
0x12b: V92 = M[0x40]
0x12e: M[V92] = V275
0x12f: V93 = 0x20
0x131: V94 = ADD 0x20 V92
0x132: V95 = 0x40
0x134: V96 = M[0x40]
0x137: V97 = SUB V94 V96
0x139: RETURN V96 V97
---
Entry stack: [V11, V275]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x13a
[0x13a:0x141]
---
Predecessors: [0x6c]
Successors: [0x314]
---
0x13a JUMPDEST
0x13b PUSH2 0x82
0x13e PUSH2 0x314
0x141 JUMP
---
0x13a: JUMPDEST 
0x13b: V98 = 0x82
0x13e: V99 = 0x314
0x141: JUMP 0x314
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82]
Exit stack: [V11, 0x82]

================================

Block 0x142
[0x142:0x148]
---
Predecessors: [0x77]
Successors: [0x149, 0x14d]
---
0x142 JUMPDEST
0x143 CALLVALUE
0x144 ISZERO
0x145 PUSH2 0x14d
0x148 JUMPI
---
0x142: JUMPDEST 
0x143: V100 = CALLVALUE
0x144: V101 = ISZERO V100
0x145: V102 = 0x14d
0x148: JUMPI 0x14d V101
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x149
[0x149:0x14c]
---
Predecessors: [0x142]
Successors: []
---
0x149 PUSH1 0x0
0x14b DUP1
0x14c REVERT
---
0x149: V103 = 0x0
0x14c: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x14d
[0x14d:0x157]
---
Predecessors: [0x142]
Successors: [0x374]
---
0x14d JUMPDEST
0x14e PUSH2 0x82
0x151 PUSH1 0x4
0x153 CALLDATALOAD
0x154 PUSH2 0x374
0x157 JUMP
---
0x14d: JUMPDEST 
0x14e: V104 = 0x82
0x151: V105 = 0x4
0x153: V106 = CALLDATALOAD 0x4
0x154: V107 = 0x374
0x157: JUMP 0x374
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x82, V106]
Exit stack: [V11, 0x82, V106]

================================

Block 0x158
[0x158:0x162]
---
Predecessors: [0x84]
Successors: [0x163, 0x1c6]
---
0x158 JUMPDEST
0x159 PUSH1 0x3
0x15b SLOAD
0x15c TIMESTAMP
0x15d GT
0x15e ISZERO
0x15f PUSH2 0x1c6
0x162 JUMPI
---
0x158: JUMPDEST 
0x159: V108 = 0x3
0x15b: V109 = S[0x3]
0x15c: V110 = TIMESTAMP
0x15d: V111 = GT V110 V109
0x15e: V112 = ISZERO V111
0x15f: V113 = 0x1c6
0x162: JUMPI 0x1c6 V112
---
Entry stack: [V11, 0x82, V37, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V37, V39]

================================

Block 0x163
[0x163:0x189]
---
Predecessors: [0x158]
Successors: [0x18a, 0x1c6]
---
0x163 DUP2
0x164 DUP2
0x165 PUSH1 0x40
0x167 MLOAD
0x168 DUP1
0x169 DUP4
0x16a DUP4
0x16b DUP1
0x16c DUP3
0x16d DUP5
0x16e CALLDATACOPY
0x16f DUP3
0x170 ADD
0x171 SWAP2
0x172 POP
0x173 POP
0x174 SWAP3
0x175 POP
0x176 POP
0x177 POP
0x178 PUSH1 0x40
0x17a MLOAD
0x17b SWAP1
0x17c DUP2
0x17d SWAP1
0x17e SUB
0x17f SWAP1
0x180 SHA3
0x181 PUSH1 0x0
0x183 SLOAD
0x184 EQ
0x185 ISZERO
0x186 PUSH2 0x1c6
0x189 JUMPI
---
0x165: V114 = 0x40
0x167: V115 = M[0x40]
0x16e: CALLDATACOPY V115 V37 V39
0x170: V116 = ADD V115 V39
0x178: V117 = 0x40
0x17a: V118 = M[0x40]
0x17e: V119 = SUB V116 V118
0x180: V120 = SHA3 V118 V119
0x181: V121 = 0x0
0x183: V122 = S[0x0]
0x184: V123 = EQ V122 V120
0x185: V124 = ISZERO V123
0x186: V125 = 0x1c6
0x189: JUMPI 0x1c6 V124
---
Entry stack: [V11, 0x82, V37, V39]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x82, V37, V39]

================================

Block 0x18a
[0x18a:0x1c1]
---
Predecessors: [0x163]
Successors: [0x1c2, 0x1c6]
---
0x18a CALLER
0x18b PUSH1 0x1
0x18d PUSH1 0xa0
0x18f PUSH1 0x2
0x191 EXP
0x192 SUB
0x193 AND
0x194 PUSH2 0x8fc
0x197 ADDRESS
0x198 PUSH1 0x1
0x19a PUSH1 0xa0
0x19c PUSH1 0x2
0x19e EXP
0x19f SUB
0x1a0 AND
0x1a1 BALANCE
0x1a2 SWAP1
0x1a3 DUP2
0x1a4 ISZERO
0x1a5 MUL
0x1a6 SWAP1
0x1a7 PUSH1 0x40
0x1a9 MLOAD
0x1aa PUSH1 0x0
0x1ac PUSH1 0x40
0x1ae MLOAD
0x1af DUP1
0x1b0 DUP4
0x1b1 SUB
0x1b2 DUP2
0x1b3 DUP6
0x1b4 DUP9
0x1b5 DUP9
0x1b6 CALL
0x1b7 SWAP4
0x1b8 POP
0x1b9 POP
0x1ba POP
0x1bb POP
0x1bc ISZERO
0x1bd ISZERO
0x1be PUSH2 0x1c6
0x1c1 JUMPI
---
0x18a: V126 = CALLER
0x18b: V127 = 0x1
0x18d: V128 = 0xa0
0x18f: V129 = 0x2
0x191: V130 = EXP 0x2 0xa0
0x192: V131 = SUB 0x10000000000000000000000000000000000000000 0x1
0x193: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V126
0x194: V133 = 0x8fc
0x197: V134 = ADDRESS
0x198: V135 = 0x1
0x19a: V136 = 0xa0
0x19c: V137 = 0x2
0x19e: V138 = EXP 0x2 0xa0
0x19f: V139 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a0: V140 = AND 0xffffffffffffffffffffffffffffffffffffffff V134
0x1a1: V141 = BALANCE V140
0x1a4: V142 = ISZERO V141
0x1a5: V143 = MUL V142 0x8fc
0x1a7: V144 = 0x40
0x1a9: V145 = M[0x40]
0x1aa: V146 = 0x0
0x1ac: V147 = 0x40
0x1ae: V148 = M[0x40]
0x1b1: V149 = SUB V145 V148
0x1b6: V150 = CALL V143 V132 V141 V148 V149 V148 0x0
0x1bc: V151 = ISZERO V150
0x1bd: V152 = ISZERO V151
0x1be: V153 = 0x1c6
0x1c1: JUMPI 0x1c6 V152
---
Entry stack: [V11, 0x82, V37, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V37, V39]

================================

Block 0x1c2
[0x1c2:0x1c5]
---
Predecessors: [0x18a]
Successors: []
---
0x1c2 PUSH1 0x0
0x1c4 DUP1
0x1c5 REVERT
---
0x1c2: V154 = 0x0
0x1c5: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82, V37, V39]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V37, V39]

================================

Block 0x1c6
[0x1c6:0x1c9]
---
Predecessors: [0x158, 0x163, 0x18a]
Successors: [0x82]
---
0x1c6 JUMPDEST
0x1c7 POP
0x1c8 POP
0x1c9 JUMP
---
0x1c6: JUMPDEST 
0x1c9: JUMP 0x82
---
Entry stack: [V11, 0x82, V37, V39]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x1ca
[0x1ca:0x1d7]
---
Predecessors: [0x97]
Successors: [0x1d8, 0x1e4]
---
0x1ca JUMPDEST
0x1cb PUSH1 0x1
0x1cd SLOAD
0x1ce PUSH1 0xff
0x1d0 AND
0x1d1 ISZERO
0x1d2 DUP1
0x1d3 ISZERO
0x1d4 PUSH2 0x1e4
0x1d7 JUMPI
---
0x1ca: JUMPDEST 
0x1cb: V155 = 0x1
0x1cd: V156 = S[0x1]
0x1ce: V157 = 0xff
0x1d0: V158 = AND 0xff V156
0x1d1: V159 = ISZERO V158
0x1d3: V160 = ISZERO V159
0x1d4: V161 = 0x1e4
0x1d7: JUMPI 0x1e4 V160
---
Entry stack: [V11, 0x82, V43]
Stack pops: 0
Stack additions: [V159]
Exit stack: [V11, 0x82, V43, V159]

================================

Block 0x1d8
[0x1d8:0x1e3]
---
Predecessors: [0x1ca]
Successors: [0x1e4]
---
0x1d8 POP
0x1d9 PUSH8 0xde0b6b3a7640000
0x1e2 CALLVALUE
0x1e3 GT
---
0x1d9: V162 = 0xde0b6b3a7640000
0x1e2: V163 = CALLVALUE
0x1e3: V164 = GT V163 0xde0b6b3a7640000
---
Entry stack: [V11, 0x82, V43, V159]
Stack pops: 1
Stack additions: [V164]
Exit stack: [V11, 0x82, V43, V164]

================================

Block 0x1e4
[0x1e4:0x1e9]
---
Predecessors: [0x1ca, 0x1d8]
Successors: [0x1ea, 0x1ef]
---
0x1e4 JUMPDEST
0x1e5 DUP1
0x1e6 PUSH2 0x1ef
0x1e9 JUMPI
---
0x1e4: JUMPDEST 
0x1e6: V165 = 0x1ef
0x1e9: JUMPI 0x1ef S0
---
Entry stack: [V11, 0x82, V43, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x82, V43, S0]

================================

Block 0x1ea
[0x1ea:0x1ee]
---
Predecessors: [0x1e4]
Successors: [0x1ef]
---
0x1ea POP
0x1eb PUSH1 0x0
0x1ed SLOAD
0x1ee ISZERO
---
0x1eb: V166 = 0x0
0x1ed: V167 = S[0x0]
0x1ee: V168 = ISZERO V167
---
Entry stack: [V11, 0x82, V43, S0]
Stack pops: 1
Stack additions: [V168]
Exit stack: [V11, 0x82, V43, V168]

================================

Block 0x1ef
[0x1ef:0x1f4]
---
Predecessors: [0x1e4, 0x1ea]
Successors: [0x1f5, 0x22b]
---
0x1ef JUMPDEST
0x1f0 ISZERO
0x1f1 PUSH2 0x22b
0x1f4 JUMPI
---
0x1ef: JUMPDEST 
0x1f0: V169 = ISZERO S0
0x1f1: V170 = 0x22b
0x1f4: JUMPI 0x22b V169
---
Entry stack: [V11, 0x82, V43, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x82, V43]

================================

Block 0x1f5
[0x1f5:0x22a]
---
Predecessors: [0x1ef]
Successors: [0x22b]
---
0x1f5 PUSH1 0x0
0x1f7 DUP2
0x1f8 SWAP1
0x1f9 SSTORE
0x1fa PUSH1 0x1
0x1fc DUP1
0x1fd SLOAD
0x1fe PUSH21 0xffffffffffffffffffffffffffffffffffffffff00
0x214 NOT
0x215 AND
0x216 PUSH2 0x100
0x219 CALLER
0x21a PUSH1 0x1
0x21c PUSH1 0xa0
0x21e PUSH1 0x2
0x220 EXP
0x221 SUB
0x222 AND
0x223 MUL
0x224 OR
0x225 SWAP1
0x226 SSTORE
0x227 TIMESTAMP
0x228 PUSH1 0x3
0x22a SSTORE
---
0x1f5: V171 = 0x0
0x1f9: S[0x0] = V43
0x1fa: V172 = 0x1
0x1fd: V173 = S[0x1]
0x1fe: V174 = 0xffffffffffffffffffffffffffffffffffffffff00
0x214: V175 = NOT 0xffffffffffffffffffffffffffffffffffffffff00
0x215: V176 = AND 0xffffffffffffffffffffff0000000000000000000000000000000000000000ff V173
0x216: V177 = 0x100
0x219: V178 = CALLER
0x21a: V179 = 0x1
0x21c: V180 = 0xa0
0x21e: V181 = 0x2
0x220: V182 = EXP 0x2 0xa0
0x221: V183 = SUB 0x10000000000000000000000000000000000000000 0x1
0x222: V184 = AND 0xffffffffffffffffffffffffffffffffffffffff V178
0x223: V185 = MUL V184 0x100
0x224: V186 = OR V185 V176
0x226: S[0x1] = V186
0x227: V187 = TIMESTAMP
0x228: V188 = 0x3
0x22a: S[0x3] = V187
---
Entry stack: [V11, 0x82, V43]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x82, V43]

================================

Block 0x22b
[0x22b:0x22d]
---
Predecessors: [0x1ef, 0x1f5, 0x252, 0x266, 0x3a0]
Successors: [0x82]
---
0x22b JUMPDEST
0x22c POP
0x22d JUMP
---
0x22b: JUMPDEST 
0x22d: JUMP 0x82
---
Entry stack: [V11, 0x82, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x22e
[0x22e:0x239]
---
Predecessors: [0xad]
Successors: [0x23a, 0x252]
---
0x22e JUMPDEST
0x22f PUSH1 0x0
0x231 SLOAD
0x232 DUP2
0x233 EQ
0x234 DUP1
0x235 ISZERO
0x236 PUSH2 0x252
0x239 JUMPI
---
0x22e: JUMPDEST 
0x22f: V189 = 0x0
0x231: V190 = S[0x0]
0x233: V191 = EQ V51 V190
0x235: V192 = ISZERO V191
0x236: V193 = 0x252
0x239: JUMPI 0x252 V192
---
Entry stack: [V11, 0x82, V51]
Stack pops: 1
Stack additions: [S0, V191]
Exit stack: [V11, 0x82, V51, V191]

================================

Block 0x23a
[0x23a:0x251]
---
Predecessors: [0x22e]
Successors: [0x252]
---
0x23a POP
0x23b PUSH1 0x1
0x23d SLOAD
0x23e CALLER
0x23f PUSH1 0x1
0x241 PUSH1 0xa0
0x243 PUSH1 0x2
0x245 EXP
0x246 SUB
0x247 SWAP1
0x248 DUP2
0x249 AND
0x24a PUSH2 0x100
0x24d SWAP1
0x24e SWAP3
0x24f DIV
0x250 AND
0x251 EQ
---
0x23b: V194 = 0x1
0x23d: V195 = S[0x1]
0x23e: V196 = CALLER
0x23f: V197 = 0x1
0x241: V198 = 0xa0
0x243: V199 = 0x2
0x245: V200 = EXP 0x2 0xa0
0x246: V201 = SUB 0x10000000000000000000000000000000000000000 0x1
0x249: V202 = AND 0xffffffffffffffffffffffffffffffffffffffff V196
0x24a: V203 = 0x100
0x24f: V204 = DIV V195 0x100
0x250: V205 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x251: V206 = EQ V205 V202
---
Entry stack: [V11, 0x82, V51, V191]
Stack pops: 1
Stack additions: [V206]
Exit stack: [V11, 0x82, V51, V206]

================================

Block 0x252
[0x252:0x257]
---
Predecessors: [0x22e, 0x23a]
Successors: [0x22b, 0x258]
---
0x252 JUMPDEST
0x253 ISZERO
0x254 PUSH2 0x22b
0x257 JUMPI
---
0x252: JUMPDEST 
0x253: V207 = ISZERO S0
0x254: V208 = 0x22b
0x257: JUMPI 0x22b V207
---
Entry stack: [V11, 0x82, V51, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x82, V51]

================================

Block 0x258
[0x258:0x265]
---
Predecessors: [0x252]
Successors: [0x82]
---
0x258 PUSH1 0x1
0x25a DUP1
0x25b SLOAD
0x25c PUSH1 0xff
0x25e NOT
0x25f AND
0x260 DUP2
0x261 OR
0x262 SWAP1
0x263 SSTORE
0x264 POP
0x265 JUMP
---
0x258: V209 = 0x1
0x25b: V210 = S[0x1]
0x25c: V211 = 0xff
0x25e: V212 = NOT 0xff
0x25f: V213 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V210
0x261: V214 = OR 0x1 V213
0x263: S[0x1] = V214
0x265: JUMP 0x82
---
Entry stack: [V11, 0x82, V51]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x266
[0x266:0x282]
---
Predecessors: [0xc3]
Successors: [0x22b, 0x283]
---
0x266 JUMPDEST
0x267 PUSH1 0x1
0x269 SLOAD
0x26a CALLER
0x26b PUSH1 0x1
0x26d PUSH1 0xa0
0x26f PUSH1 0x2
0x271 EXP
0x272 SUB
0x273 SWAP1
0x274 DUP2
0x275 AND
0x276 PUSH2 0x100
0x279 SWAP1
0x27a SWAP3
0x27b DIV
0x27c AND
0x27d EQ
0x27e ISZERO
0x27f PUSH2 0x22b
0x282 JUMPI
---
0x266: JUMPDEST 
0x267: V215 = 0x1
0x269: V216 = S[0x1]
0x26a: V217 = CALLER
0x26b: V218 = 0x1
0x26d: V219 = 0xa0
0x26f: V220 = 0x2
0x271: V221 = EXP 0x2 0xa0
0x272: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x275: V223 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x276: V224 = 0x100
0x27b: V225 = DIV V216 0x100
0x27c: V226 = AND V225 0xffffffffffffffffffffffffffffffffffffffff
0x27d: V227 = EQ V226 V223
0x27e: V228 = ISZERO V227
0x27f: V229 = 0x22b
0x282: JUMPI 0x22b V228
---
Entry stack: [V11, 0x82, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V65]

================================

Block 0x283
[0x283:0x2ae]
---
Predecessors: [0x266]
Successors: [0x82]
---
0x283 PUSH1 0x2
0x285 DUP1
0x286 SLOAD
0x287 PUSH1 0x1
0x289 PUSH1 0xa0
0x28b PUSH1 0x2
0x28d EXP
0x28e SUB
0x28f DUP4
0x290 AND
0x291 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2a6 NOT
0x2a7 SWAP1
0x2a8 SWAP2
0x2a9 AND
0x2aa OR
0x2ab SWAP1
0x2ac SSTORE
0x2ad POP
0x2ae JUMP
---
0x283: V230 = 0x2
0x286: V231 = S[0x2]
0x287: V232 = 0x1
0x289: V233 = 0xa0
0x28b: V234 = 0x2
0x28d: V235 = EXP 0x2 0xa0
0x28e: V236 = SUB 0x10000000000000000000000000000000000000000 0x1
0x290: V237 = AND V65 0xffffffffffffffffffffffffffffffffffffffff
0x291: V238 = 0xffffffffffffffffffffffffffffffffffffffff
0x2a6: V239 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2a9: V240 = AND V231 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x2aa: V241 = OR V240 V237
0x2ac: S[0x2] = V241
0x2ae: JUMP 0x82
---
Entry stack: [V11, 0x82, V65]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2af
[0x2af:0x2c1]
---
Predecessors: [0xe2]
Successors: [0x2c2]
---
0x2af JUMPDEST
0x2b0 PUSH1 0x0
0x2b2 DUP2
0x2b3 PUSH1 0x40
0x2b5 MLOAD
0x2b6 DUP1
0x2b7 DUP3
0x2b8 DUP1
0x2b9 MLOAD
0x2ba SWAP1
0x2bb PUSH1 0x20
0x2bd ADD
0x2be SWAP1
0x2bf DUP1
0x2c0 DUP4
0x2c1 DUP4
---
0x2af: JUMPDEST 
0x2b0: V242 = 0x0
0x2b3: V243 = 0x40
0x2b5: V244 = M[0x40]
0x2b9: V245 = M[V85]
0x2bb: V246 = 0x20
0x2bd: V247 = ADD 0x20 V85
---
Entry stack: [V11, 0x128, V85]
Stack pops: 1
Stack additions: [S0, 0x0, S0, V244, V244, V247, V245, V245, V244, V247]
Exit stack: [V11, 0x128, V85, 0x0, V85, V244, V244, V247, V245, V245, V244, V247]

================================

Block 0x2c2
[0x2c2:0x2ca]
---
Predecessors: [0x2af, 0x2cb]
Successors: [0x2cb, 0x2e1]
---
0x2c2 JUMPDEST
0x2c3 PUSH1 0x20
0x2c5 DUP4
0x2c6 LT
0x2c7 PUSH2 0x2e1
0x2ca JUMPI
---
0x2c2: JUMPDEST 
0x2c3: V248 = 0x20
0x2c6: V249 = LT S2 0x20
0x2c7: V250 = 0x2e1
0x2ca: JUMPI 0x2e1 V249
---
Entry stack: [V11, 0x128, V85, 0x0, V85, V244, V244, V247, V245, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x128, V85, 0x0, V85, V244, V244, V247, V245, S2, S1, S0]

================================

Block 0x2cb
[0x2cb:0x2e0]
---
Predecessors: [0x2c2]
Successors: [0x2c2]
---
0x2cb DUP1
0x2cc MLOAD
0x2cd DUP3
0x2ce MSTORE
0x2cf PUSH1 0x1f
0x2d1 NOT
0x2d2 SWAP1
0x2d3 SWAP3
0x2d4 ADD
0x2d5 SWAP2
0x2d6 PUSH1 0x20
0x2d8 SWAP2
0x2d9 DUP3
0x2da ADD
0x2db SWAP2
0x2dc ADD
0x2dd PUSH2 0x2c2
0x2e0 JUMP
---
0x2cc: V251 = M[S0]
0x2ce: M[S1] = V251
0x2cf: V252 = 0x1f
0x2d1: V253 = NOT 0x1f
0x2d4: V254 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x2d6: V255 = 0x20
0x2da: V256 = ADD 0x20 S1
0x2dc: V257 = ADD 0x20 S0
0x2dd: V258 = 0x2c2
0x2e0: JUMP 0x2c2
---
Entry stack: [V11, 0x128, V85, 0x0, V85, V244, V244, V247, V245, S2, S1, S0]
Stack pops: 3
Stack additions: [V254, V256, V257]
Exit stack: [V11, 0x128, V85, 0x0, V85, V244, V244, V247, V245, V254, V256, V257]

================================

Block 0x2e1
[0x2e1:0x313]
---
Predecessors: [0x2c2]
Successors: [0x128]
---
0x2e1 JUMPDEST
0x2e2 PUSH1 0x1
0x2e4 DUP4
0x2e5 PUSH1 0x20
0x2e7 SUB
0x2e8 PUSH2 0x100
0x2eb EXP
0x2ec SUB
0x2ed DUP1
0x2ee NOT
0x2ef DUP3
0x2f0 MLOAD
0x2f1 AND
0x2f2 DUP2
0x2f3 DUP5
0x2f4 MLOAD
0x2f5 AND
0x2f6 OR
0x2f7 SWAP1
0x2f8 SWAP3
0x2f9 MSTORE
0x2fa POP
0x2fb POP
0x2fc POP
0x2fd SWAP2
0x2fe SWAP1
0x2ff SWAP2
0x300 ADD
0x301 SWAP3
0x302 POP
0x303 PUSH1 0x40
0x305 SWAP2
0x306 POP
0x307 POP
0x308 MLOAD
0x309 DUP1
0x30a SWAP2
0x30b SUB
0x30c SWAP1
0x30d SHA3
0x30e SWAP1
0x30f POP
0x310 SWAP2
0x311 SWAP1
0x312 POP
0x313 JUMP
---
0x2e1: JUMPDEST 
0x2e2: V259 = 0x1
0x2e5: V260 = 0x20
0x2e7: V261 = SUB 0x20 S2
0x2e8: V262 = 0x100
0x2eb: V263 = EXP 0x100 V261
0x2ec: V264 = SUB V263 0x1
0x2ee: V265 = NOT V264
0x2f0: V266 = M[S0]
0x2f1: V267 = AND V266 V265
0x2f4: V268 = M[S1]
0x2f5: V269 = AND V268 V264
0x2f6: V270 = OR V269 V267
0x2f9: M[S1] = V270
0x300: V271 = ADD V245 V244
0x303: V272 = 0x40
0x308: V273 = M[0x40]
0x30b: V274 = SUB V271 V273
0x30d: V275 = SHA3 V273 V274
0x313: JUMP 0x128
---
Entry stack: [V11, 0x128, V85, 0x0, V85, V244, V244, V247, V245, S2, S1, S0]
Stack pops: 11
Stack additions: [V275]
Exit stack: [V11, V275]

================================

Block 0x314
[0x314:0x31e]
---
Predecessors: [0x13a]
Successors: [0x31f, 0x372]
---
0x314 JUMPDEST
0x315 PUSH1 0x3
0x317 SLOAD
0x318 TIMESTAMP
0x319 GT
0x31a ISZERO
0x31b PUSH2 0x372
0x31e JUMPI
---
0x314: JUMPDEST 
0x315: V276 = 0x3
0x317: V277 = S[0x3]
0x318: V278 = TIMESTAMP
0x319: V279 = GT V278 V277
0x31a: V280 = ISZERO V279
0x31b: V281 = 0x372
0x31e: JUMPI 0x372 V280
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0x31f
[0x31f:0x335]
---
Predecessors: [0x314]
Successors: [0x336, 0x372]
---
0x31f PUSH1 0x2
0x321 SLOAD
0x322 CALLER
0x323 PUSH1 0x1
0x325 PUSH1 0xa0
0x327 PUSH1 0x2
0x329 EXP
0x32a SUB
0x32b SWAP1
0x32c DUP2
0x32d AND
0x32e SWAP2
0x32f AND
0x330 EQ
0x331 ISZERO
0x332 PUSH2 0x372
0x335 JUMPI
---
0x31f: V282 = 0x2
0x321: V283 = S[0x2]
0x322: V284 = CALLER
0x323: V285 = 0x1
0x325: V286 = 0xa0
0x327: V287 = 0x2
0x329: V288 = EXP 0x2 0xa0
0x32a: V289 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32d: V290 = AND 0xffffffffffffffffffffffffffffffffffffffff V284
0x32f: V291 = AND V283 0xffffffffffffffffffffffffffffffffffffffff
0x330: V292 = EQ V291 V290
0x331: V293 = ISZERO V292
0x332: V294 = 0x372
0x335: JUMPI 0x372 V293
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0x336
[0x336:0x36d]
---
Predecessors: [0x31f]
Successors: [0x36e, 0x372]
---
0x336 CALLER
0x337 PUSH1 0x1
0x339 PUSH1 0xa0
0x33b PUSH1 0x2
0x33d EXP
0x33e SUB
0x33f AND
0x340 PUSH2 0x8fc
0x343 ADDRESS
0x344 PUSH1 0x1
0x346 PUSH1 0xa0
0x348 PUSH1 0x2
0x34a EXP
0x34b SUB
0x34c AND
0x34d BALANCE
0x34e SWAP1
0x34f DUP2
0x350 ISZERO
0x351 MUL
0x352 SWAP1
0x353 PUSH1 0x40
0x355 MLOAD
0x356 PUSH1 0x0
0x358 PUSH1 0x40
0x35a MLOAD
0x35b DUP1
0x35c DUP4
0x35d SUB
0x35e DUP2
0x35f DUP6
0x360 DUP9
0x361 DUP9
0x362 CALL
0x363 SWAP4
0x364 POP
0x365 POP
0x366 POP
0x367 POP
0x368 ISZERO
0x369 ISZERO
0x36a PUSH2 0x372
0x36d JUMPI
---
0x336: V295 = CALLER
0x337: V296 = 0x1
0x339: V297 = 0xa0
0x33b: V298 = 0x2
0x33d: V299 = EXP 0x2 0xa0
0x33e: V300 = SUB 0x10000000000000000000000000000000000000000 0x1
0x33f: V301 = AND 0xffffffffffffffffffffffffffffffffffffffff V295
0x340: V302 = 0x8fc
0x343: V303 = ADDRESS
0x344: V304 = 0x1
0x346: V305 = 0xa0
0x348: V306 = 0x2
0x34a: V307 = EXP 0x2 0xa0
0x34b: V308 = SUB 0x10000000000000000000000000000000000000000 0x1
0x34c: V309 = AND 0xffffffffffffffffffffffffffffffffffffffff V303
0x34d: V310 = BALANCE V309
0x350: V311 = ISZERO V310
0x351: V312 = MUL V311 0x8fc
0x353: V313 = 0x40
0x355: V314 = M[0x40]
0x356: V315 = 0x0
0x358: V316 = 0x40
0x35a: V317 = M[0x40]
0x35d: V318 = SUB V314 V317
0x362: V319 = CALL V312 V301 V310 V317 V318 V317 0x0
0x368: V320 = ISZERO V319
0x369: V321 = ISZERO V320
0x36a: V322 = 0x372
0x36d: JUMPI 0x372 V321
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0x36e
[0x36e:0x371]
---
Predecessors: [0x336]
Successors: []
---
0x36e PUSH1 0x0
0x370 DUP1
0x371 REVERT
---
0x36e: V323 = 0x0
0x371: REVERT 0x0 0x0
---
Entry stack: [V11, 0x82]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82]

================================

Block 0x372
[0x372:0x373]
---
Predecessors: [0x314, 0x31f, 0x336]
Successors: [0x82]
---
0x372 JUMPDEST
0x373 JUMP
---
0x372: JUMPDEST 
0x373: JUMP 0x82
---
Entry stack: [V11, 0x82]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x374
[0x374:0x37e]
---
Predecessors: [0x14d]
Successors: [0x37f, 0x3a0]
---
0x374 JUMPDEST
0x375 PUSH1 0x3
0x377 SLOAD
0x378 TIMESTAMP
0x379 GT
0x37a ISZERO
0x37b PUSH2 0x3a0
0x37e JUMPI
---
0x374: JUMPDEST 
0x375: V324 = 0x3
0x377: V325 = S[0x3]
0x378: V326 = TIMESTAMP
0x379: V327 = GT V326 V325
0x37a: V328 = ISZERO V327
0x37b: V329 = 0x3a0
0x37e: JUMPI 0x3a0 V328
---
Entry stack: [V11, 0x82, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V106]

================================

Block 0x37f
[0x37f:0x39a]
---
Predecessors: [0x374]
Successors: [0x39b, 0x3a0]
---
0x37f PUSH1 0x1
0x381 SLOAD
0x382 CALLER
0x383 PUSH1 0x1
0x385 PUSH1 0xa0
0x387 PUSH1 0x2
0x389 EXP
0x38a SUB
0x38b SWAP1
0x38c DUP2
0x38d AND
0x38e PUSH2 0x100
0x391 SWAP1
0x392 SWAP3
0x393 DIV
0x394 AND
0x395 EQ
0x396 ISZERO
0x397 PUSH2 0x3a0
0x39a JUMPI
---
0x37f: V330 = 0x1
0x381: V331 = S[0x1]
0x382: V332 = CALLER
0x383: V333 = 0x1
0x385: V334 = 0xa0
0x387: V335 = 0x2
0x389: V336 = EXP 0x2 0xa0
0x38a: V337 = SUB 0x10000000000000000000000000000000000000000 0x1
0x38d: V338 = AND 0xffffffffffffffffffffffffffffffffffffffff V332
0x38e: V339 = 0x100
0x393: V340 = DIV V331 0x100
0x394: V341 = AND V340 0xffffffffffffffffffffffffffffffffffffffff
0x395: V342 = EQ V341 V338
0x396: V343 = ISZERO V342
0x397: V344 = 0x3a0
0x39a: JUMPI 0x3a0 V343
---
Entry stack: [V11, 0x82, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V106]

================================

Block 0x39b
[0x39b:0x39f]
---
Predecessors: [0x37f]
Successors: [0x3a0]
---
0x39b PUSH1 0x3
0x39d DUP2
0x39e SWAP1
0x39f SSTORE
---
0x39b: V345 = 0x3
0x39f: S[0x3] = V106
---
Entry stack: [V11, 0x82, V106]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x82, V106]

================================

Block 0x3a0
[0x3a0:0x3a4]
---
Predecessors: [0x374, 0x37f, 0x39b]
Successors: [0x22b]
---
0x3a0 JUMPDEST
0x3a1 PUSH2 0x22b
0x3a4 JUMP
---
0x3a0: JUMPDEST 
0x3a1: V346 = 0x22b
0x3a4: JUMP 0x22b
---
Entry stack: [V11, 0x82, V106]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x82, V106]

================================

Block 0x3a5
[0x3a5:0x3d0]
---
Predecessors: []
Successors: []
---
0x3a5 STOP
0x3a6 LOG1
0x3a7 PUSH6 0x627a7a723058
0x3ae SHA3
0x3af DUP4
0x3b0 LOG2
0x3b1 MISSING 0xc5
0x3b2 MISSING 0xca
0x3b3 MISSING 0xd5
0x3b4 MISSING 0xc1
0x3b5 MISSING 0x4f
0x3b6 MISSING 0x4f
0x3b7 MISSING 0xda
0x3b8 PUSH21 0x795c67a8b077ead25442aa99c75226afe3514cc113
0x3ce MISSING 0xc1
0x3cf STOP
0x3d0 MISSING 0x29
---
0x3a5: STOP 
0x3a6: LOG S0 S1 S2
0x3a7: V347 = 0x627a7a723058
0x3ae: V348 = SHA3 0x627a7a723058 S3
0x3b0: LOG S6 V348 S4 S5
0x3b1: MISSING 0xc5
0x3b2: MISSING 0xca
0x3b3: MISSING 0xd5
0x3b4: MISSING 0xc1
0x3b5: MISSING 0x4f
0x3b6: MISSING 0x4f
0x3b7: MISSING 0xda
0x3b8: V349 = 0x795c67a8b077ead25442aa99c75226afe3514cc113
0x3ce: MISSING 0xc1
0x3cf: STOP 
0x3d0: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S6, 0x795c67a8b077ead25442aa99c75226afe3514cc113]
Exit stack: []

================================

Function 0:
Public function signature: 0x181ffc5f
Entry block: 0x84
Exit block: 0x1c2
Body: 0x82, 0x84, 0x158, 0x163, 0x18a, 0x1c2, 0x1c6

Function 1:
Public function signature: 0x2923f101
Entry block: 0x97
Exit block: 0x82
Body: 0x82, 0x97, 0x1ca, 0x1d8, 0x1e4, 0x1ea, 0x1ef, 0x1f5, 0x22b

Function 2:
Public function signature: 0x31fd725a
Entry block: 0xa2
Exit block: 0x82
Body: 0x82, 0xa2, 0xa9, 0xad, 0x22b, 0x22e, 0x23a, 0x252, 0x258

Function 3:
Public function signature: 0x410c8005
Entry block: 0xb8
Exit block: 0x82
Body: 0x82, 0xb8, 0xbf, 0xc3, 0x22b, 0x266, 0x283

Function 4:
Public function signature: 0xb456ecc5
Entry block: 0xd7
Exit block: 0x128
Body: 0xd7, 0xde, 0xe2, 0x128, 0x2af, 0x2c2, 0x2cb, 0x2e1

Function 5:
Public function signature: 0xbea948c8
Entry block: 0x13a
Exit block: 0x36e
Body: 0x82, 0x13a, 0x314, 0x31f, 0x336, 0x36e, 0x372

Function 6:
Public function signature: 0xdac47a71
Entry block: 0x142
Exit block: 0x82
Body: 0x82, 0x142, 0x149, 0x14d, 0x22b, 0x374, 0x37f, 0x39b, 0x3a0

Function 7:
Public fallback function
Entry block: 0x82
Exit block: 0x82
Body: 0x82

