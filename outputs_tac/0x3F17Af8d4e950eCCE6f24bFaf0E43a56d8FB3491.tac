Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xbf]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xbf
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xbf
0xa: JUMPI 0xbf V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0x1a7]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x6fdde03
0x1f DUP2
0x20 EQ
0x21 PUSH2 0x1a7
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x6fdde03
0x20: V14 = EQ V12 0x6fdde03
0x21: V15 = 0x1a7
0x24: JUMPI 0x1a7 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x232]
---
0x25 DUP1
0x26 PUSH4 0x95ea7b3
0x2b EQ
0x2c PUSH2 0x232
0x2f JUMPI
---
0x26: V16 = 0x95ea7b3
0x2b: V17 = EQ 0x95ea7b3 V12
0x2c: V18 = 0x232
0x2f: JUMPI 0x232 V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x268]
---
0x30 DUP1
0x31 PUSH4 0xdcf4b8f
0x36 EQ
0x37 PUSH2 0x268
0x3a JUMPI
---
0x31: V19 = 0xdcf4b8f
0x36: V20 = EQ 0xdcf4b8f V12
0x37: V21 = 0x268
0x3a: JUMPI 0x268 V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x28d]
---
0x3b DUP1
0x3c PUSH4 0x18160ddd
0x41 EQ
0x42 PUSH2 0x28d
0x45 JUMPI
---
0x3c: V22 = 0x18160ddd
0x41: V23 = EQ 0x18160ddd V12
0x42: V24 = 0x28d
0x45: JUMPI 0x28d V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x2b2]
---
0x46 DUP1
0x47 PUSH4 0x23b872dd
0x4c EQ
0x4d PUSH2 0x2b2
0x50 JUMPI
---
0x47: V25 = 0x23b872dd
0x4c: V26 = EQ 0x23b872dd V12
0x4d: V27 = 0x2b2
0x50: JUMPI 0x2b2 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x2ee]
---
0x51 DUP1
0x52 PUSH4 0x313ce567
0x57 EQ
0x58 PUSH2 0x2ee
0x5b JUMPI
---
0x52: V28 = 0x313ce567
0x57: V29 = EQ 0x313ce567 V12
0x58: V30 = 0x2ee
0x5b: JUMPI 0x2ee V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x317]
---
0x5c DUP1
0x5d PUSH4 0x64acdb77
0x62 EQ
0x63 PUSH2 0x317
0x66 JUMPI
---
0x5d: V31 = 0x64acdb77
0x62: V32 = EQ 0x64acdb77 V12
0x63: V33 = 0x317
0x66: JUMPI 0x317 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x32c]
---
0x67 DUP1
0x68 PUSH4 0x70a08231
0x6d EQ
0x6e PUSH2 0x32c
0x71 JUMPI
---
0x68: V34 = 0x70a08231
0x6d: V35 = EQ 0x70a08231 V12
0x6e: V36 = 0x32c
0x71: JUMPI 0x32c V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x35d]
---
0x72 DUP1
0x73 PUSH4 0x8f580996
0x78 EQ
0x79 PUSH2 0x35d
0x7c JUMPI
---
0x73: V37 = 0x8f580996
0x78: V38 = EQ 0x8f580996 V12
0x79: V39 = 0x35d
0x7c: JUMPI 0x35d V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x372]
---
0x7d DUP1
0x7e PUSH4 0x95d89b41
0x83 EQ
0x84 PUSH2 0x372
0x87 JUMPI
---
0x7e: V40 = 0x95d89b41
0x83: V41 = EQ 0x95d89b41 V12
0x84: V42 = 0x372
0x87: JUMPI 0x372 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x3fd]
---
0x88 DUP1
0x89 PUSH4 0xa9059cbb
0x8e EQ
0x8f PUSH2 0x3fd
0x92 JUMPI
---
0x89: V43 = 0xa9059cbb
0x8e: V44 = EQ 0xa9059cbb V12
0x8f: V45 = 0x3fd
0x92: JUMPI 0x3fd V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x433]
---
0x93 DUP1
0x94 PUSH4 0xc59d4847
0x99 EQ
0x9a PUSH2 0x433
0x9d JUMPI
---
0x94: V46 = 0xc59d4847
0x99: V47 = EQ 0xc59d4847 V12
0x9a: V48 = 0x433
0x9d: JUMPI 0x433 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x46c]
---
0x9e DUP1
0x9f PUSH4 0xda040c0f
0xa4 EQ
0xa5 PUSH2 0x46c
0xa8 JUMPI
---
0x9f: V49 = 0xda040c0f
0xa4: V50 = EQ 0xda040c0f V12
0xa5: V51 = 0x46c
0xa8: JUMPI 0x46c V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x493]
---
0xa9 DUP1
0xaa PUSH4 0xdd62ed3e
0xaf EQ
0xb0 PUSH2 0x493
0xb3 JUMPI
---
0xaa: V52 = 0xdd62ed3e
0xaf: V53 = EQ 0xdd62ed3e V12
0xb0: V54 = 0x493
0xb3: JUMPI 0x493 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xbe]
---
Predecessors: [0xa9]
Successors: [0xbf, 0x4ca]
---
0xb4 DUP1
0xb5 PUSH4 0xe58fc54c
0xba EQ
0xbb PUSH2 0x4ca
0xbe JUMPI
---
0xb5: V55 = 0xe58fc54c
0xba: V56 = EQ 0xe58fc54c V12
0xbb: V57 = 0x4ca
0xbe: JUMPI 0x4ca V56
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xbf
[0xbf:0xc2]
---
Predecessors: [0x0, 0xb4]
Successors: [0xc3]
---
0xbf JUMPDEST
0xc0 PUSH2 0x1a5
---
0xbf: JUMPDEST 
0xc0: V58 = 0x1a5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a5]
Exit stack: [V12, 0x1a5]

================================

Block 0xc3
[0xc3:0xd7]
---
Predecessors: [0xbf]
Successors: [0xd8, 0xdc]
---
0xc3 JUMPDEST
0xc4 PUSH1 0x0
0xc6 DUP1
0xc7 SLOAD
0xc8 PUSH1 0xa0
0xca PUSH1 0x2
0xcc EXP
0xcd SWAP1
0xce DIV
0xcf PUSH1 0xff
0xd1 AND
0xd2 ISZERO
0xd3 ISZERO
0xd4 PUSH2 0xdc
0xd7 JUMPI
---
0xc3: JUMPDEST 
0xc4: V59 = 0x0
0xc7: V60 = S[0x0]
0xc8: V61 = 0xa0
0xca: V62 = 0x2
0xcc: V63 = EXP 0x2 0xa0
0xce: V64 = DIV V60 0x10000000000000000000000000000000000000000
0xcf: V65 = 0xff
0xd1: V66 = AND 0xff V64
0xd2: V67 = ISZERO V66
0xd3: V68 = ISZERO V67
0xd4: V69 = 0xdc
0xd7: JUMPI 0xdc V68
---
Entry stack: [V12, 0x1a5]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V12, 0x1a5, 0x0]

================================

Block 0xd8
[0xd8:0xdb]
---
Predecessors: [0xc3]
Successors: []
---
0xd8 PUSH1 0x0
0xda DUP1
0xdb REVERT
---
0xd8: V70 = 0x0
0xdb: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1a5, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5, 0x0]

================================

Block 0xdc
[0xdc:0xe3]
---
Predecessors: [0xc3]
Successors: [0xe4, 0xe8]
---
0xdc JUMPDEST
0xdd CALLVALUE
0xde ISZERO
0xdf ISZERO
0xe0 PUSH2 0xe8
0xe3 JUMPI
---
0xdc: JUMPDEST 
0xdd: V71 = CALLVALUE
0xde: V72 = ISZERO V71
0xdf: V73 = ISZERO V72
0xe0: V74 = 0xe8
0xe3: JUMPI 0xe8 V73
---
Entry stack: [V12, 0x1a5, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5, 0x0]

================================

Block 0xe4
[0xe4:0xe7]
---
Predecessors: [0xdc]
Successors: [0x1a2]
---
0xe4 PUSH2 0x1a2
0xe7 JUMP
---
0xe4: V75 = 0x1a2
0xe7: JUMP 0x1a2
---
Entry stack: [V12, 0x1a5, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5, 0x0]

================================

Block 0xe8
[0xe8:0x117]
---
Predecessors: [0xdc]
Successors: [0x118, 0x11c]
---
0xe8 JUMPDEST
0xe9 PUSH1 0x0
0xeb SLOAD
0xec PUSH1 0x1
0xee PUSH1 0xa0
0xf0 PUSH1 0x2
0xf2 EXP
0xf3 SUB
0xf4 AND
0xf5 CALLVALUE
0xf6 DUP1
0xf7 ISZERO
0xf8 PUSH2 0x8fc
0xfb MUL
0xfc SWAP1
0xfd PUSH1 0x40
0xff MLOAD
0x100 PUSH1 0x0
0x102 PUSH1 0x40
0x104 MLOAD
0x105 DUP1
0x106 DUP4
0x107 SUB
0x108 DUP2
0x109 DUP6
0x10a DUP9
0x10b DUP9
0x10c CALL
0x10d SWAP4
0x10e POP
0x10f POP
0x110 POP
0x111 POP
0x112 ISZERO
0x113 ISZERO
0x114 PUSH2 0x11c
0x117 JUMPI
---
0xe8: JUMPDEST 
0xe9: V76 = 0x0
0xeb: V77 = S[0x0]
0xec: V78 = 0x1
0xee: V79 = 0xa0
0xf0: V80 = 0x2
0xf2: V81 = EXP 0x2 0xa0
0xf3: V82 = SUB 0x10000000000000000000000000000000000000000 0x1
0xf4: V83 = AND 0xffffffffffffffffffffffffffffffffffffffff V77
0xf5: V84 = CALLVALUE
0xf7: V85 = ISZERO V84
0xf8: V86 = 0x8fc
0xfb: V87 = MUL 0x8fc V85
0xfd: V88 = 0x40
0xff: V89 = M[0x40]
0x100: V90 = 0x0
0x102: V91 = 0x40
0x104: V92 = M[0x40]
0x107: V93 = SUB V89 V92
0x10c: V94 = CALL V87 V83 V84 V92 V93 V92 0x0
0x112: V95 = ISZERO V94
0x113: V96 = ISZERO V95
0x114: V97 = 0x11c
0x117: JUMPI 0x11c V96
---
Entry stack: [V12, 0x1a5, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5, 0x0]

================================

Block 0x118
[0x118:0x11b]
---
Predecessors: [0xe8]
Successors: []
---
0x118 PUSH1 0x0
0x11a DUP1
0x11b REVERT
---
0x118: V98 = 0x0
0x11b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1a5, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5, 0x0]

================================

Block 0x11c
[0x11c:0x13b]
---
Predecessors: [0xe8]
Successors: [0x13c, 0x140]
---
0x11c JUMPDEST
0x11d POP
0x11e PUSH1 0x3
0x120 DUP1
0x121 SLOAD
0x122 CALLVALUE
0x123 SWAP1
0x124 DUP2
0x125 ADD
0x126 SWAP1
0x127 SWAP2
0x128 SSTORE
0x129 PUSH1 0x64
0x12b DUP2
0x12c MUL
0x12d SWAP1
0x12e PUSH7 0x2386f26fc10000
0x136 SWAP1
0x137 LT
0x138 PUSH2 0x140
0x13b JUMPI
---
0x11c: JUMPDEST 
0x11e: V99 = 0x3
0x121: V100 = S[0x3]
0x122: V101 = CALLVALUE
0x125: V102 = ADD V101 V100
0x128: S[0x3] = V102
0x129: V103 = 0x64
0x12c: V104 = MUL V101 0x64
0x12e: V105 = 0x2386f26fc10000
0x137: V106 = LT V101 0x2386f26fc10000
0x138: V107 = 0x140
0x13b: JUMPI 0x140 V106
---
Entry stack: [V12, 0x1a5, 0x0]
Stack pops: 1
Stack additions: [V104]
Exit stack: [V12, 0x1a5, V104]

================================

Block 0x13c
[0x13c:0x13f]
---
Predecessors: [0x11c]
Successors: [0x140]
---
0x13c PUSH1 0x3
0x13e SLOAD
0x13f ADD
---
0x13c: V108 = 0x3
0x13e: V109 = S[0x3]
0x13f: V110 = ADD V109 V104
---
Entry stack: [V12, 0x1a5, V104]
Stack pops: 1
Stack additions: [V110]
Exit stack: [V12, 0x1a5, V110]

================================

Block 0x140
[0x140:0x1a1]
---
Predecessors: [0x11c, 0x13c]
Successors: [0x1a2]
---
0x140 JUMPDEST
0x141 PUSH1 0x4
0x143 DUP1
0x144 SLOAD
0x145 DUP3
0x146 ADD
0x147 SWAP1
0x148 SSTORE
0x149 PUSH1 0x1
0x14b PUSH1 0xa0
0x14d PUSH1 0x2
0x14f EXP
0x150 SUB
0x151 CALLER
0x152 DUP2
0x153 AND
0x154 PUSH1 0x0
0x156 DUP2
0x157 DUP2
0x158 MSTORE
0x159 PUSH1 0x1
0x15b PUSH1 0x20
0x15d MSTORE
0x15e PUSH1 0x40
0x160 SWAP1
0x161 DUP2
0x162 SWAP1
0x163 SHA3
0x164 DUP1
0x165 SLOAD
0x166 DUP6
0x167 ADD
0x168 SWAP1
0x169 SSTORE
0x16a SWAP1
0x16b SWAP2
0x16c ADDRESS
0x16d AND
0x16e SWAP1
0x16f PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x190 SWAP1
0x191 DUP5
0x192 SWAP1
0x193 MLOAD
0x194 SWAP1
0x195 DUP2
0x196 MSTORE
0x197 PUSH1 0x20
0x199 ADD
0x19a PUSH1 0x40
0x19c MLOAD
0x19d DUP1
0x19e SWAP2
0x19f SUB
0x1a0 SWAP1
0x1a1 LOG3
---
0x140: JUMPDEST 
0x141: V111 = 0x4
0x144: V112 = S[0x4]
0x146: V113 = ADD S0 V112
0x148: S[0x4] = V113
0x149: V114 = 0x1
0x14b: V115 = 0xa0
0x14d: V116 = 0x2
0x14f: V117 = EXP 0x2 0xa0
0x150: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x151: V119 = CALLER
0x153: V120 = AND 0xffffffffffffffffffffffffffffffffffffffff V119
0x154: V121 = 0x0
0x158: M[0x0] = V120
0x159: V122 = 0x1
0x15b: V123 = 0x20
0x15d: M[0x20] = 0x1
0x15e: V124 = 0x40
0x163: V125 = SHA3 0x0 0x40
0x165: V126 = S[V125]
0x167: V127 = ADD S0 V126
0x169: S[V125] = V127
0x16c: V128 = ADDRESS
0x16d: V129 = AND V128 0xffffffffffffffffffffffffffffffffffffffff
0x16f: V130 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x193: V131 = M[0x40]
0x196: M[V131] = S0
0x197: V132 = 0x20
0x199: V133 = ADD 0x20 V131
0x19a: V134 = 0x40
0x19c: V135 = M[0x40]
0x19f: V136 = SUB V133 V135
0x1a1: LOG V135 V136 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V129 V120
---
Entry stack: [V12, 0x1a5, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x1a5, S0]

================================

Block 0x1a2
[0x1a2:0x1a4]
---
Predecessors: [0xe4, 0x140]
Successors: [0x1a5]
---
0x1a2 JUMPDEST
0x1a3 POP
0x1a4 JUMP
---
0x1a2: JUMPDEST 
0x1a4: JUMP 0x1a5
---
Entry stack: [V12, 0x1a5, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a5
[0x1a5:0x1a6]
---
Predecessors: [0x1a2, 0x79f, 0x800]
Successors: []
---
0x1a5 JUMPDEST
0x1a6 STOP
---
0x1a5: JUMPDEST 
0x1a6: STOP 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1a7
[0x1a7:0x1ad]
---
Predecessors: [0xb]
Successors: [0x1ae, 0x1b2]
---
0x1a7 JUMPDEST
0x1a8 CALLVALUE
0x1a9 ISZERO
0x1aa PUSH2 0x1b2
0x1ad JUMPI
---
0x1a7: JUMPDEST 
0x1a8: V137 = CALLVALUE
0x1a9: V138 = ISZERO V137
0x1aa: V139 = 0x1b2
0x1ad: JUMPI 0x1b2 V138
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1ae
[0x1ae:0x1b1]
---
Predecessors: [0x1a7]
Successors: []
---
0x1ae PUSH1 0x0
0x1b0 DUP1
0x1b1 REVERT
---
0x1ae: V140 = 0x0
0x1b1: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1b2
[0x1b2:0x1b9]
---
Predecessors: [0x1a7]
Successors: [0x4fd]
---
0x1b2 JUMPDEST
0x1b3 PUSH2 0x1ba
0x1b6 PUSH2 0x4fd
0x1b9 JUMP
---
0x1b2: JUMPDEST 
0x1b3: V141 = 0x1ba
0x1b6: V142 = 0x4fd
0x1b9: JUMP 0x4fd
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ba]
Exit stack: [V12, 0x1ba]

================================

Block 0x1ba
[0x1ba:0x1dd]
---
Predecessors: [0x53c, 0x841]
Successors: [0x1de]
---
0x1ba JUMPDEST
0x1bb PUSH1 0x40
0x1bd MLOAD
0x1be PUSH1 0x20
0x1c0 DUP1
0x1c1 DUP3
0x1c2 MSTORE
0x1c3 DUP2
0x1c4 SWAP1
0x1c5 DUP2
0x1c6 ADD
0x1c7 DUP4
0x1c8 DUP2
0x1c9 DUP2
0x1ca MLOAD
0x1cb DUP2
0x1cc MSTORE
0x1cd PUSH1 0x20
0x1cf ADD
0x1d0 SWAP2
0x1d1 POP
0x1d2 DUP1
0x1d3 MLOAD
0x1d4 SWAP1
0x1d5 PUSH1 0x20
0x1d7 ADD
0x1d8 SWAP1
0x1d9 DUP1
0x1da DUP4
0x1db DUP4
0x1dc PUSH1 0x0
---
0x1ba: JUMPDEST 
0x1bb: V143 = 0x40
0x1bd: V144 = M[0x40]
0x1be: V145 = 0x20
0x1c2: M[V144] = 0x20
0x1c6: V146 = ADD V144 0x20
0x1ca: V147 = M[S0]
0x1cc: M[V146] = V147
0x1cd: V148 = 0x20
0x1cf: V149 = ADD 0x20 V146
0x1d3: V150 = M[S0]
0x1d5: V151 = 0x20
0x1d7: V152 = ADD 0x20 S0
0x1dc: V153 = 0x0
---
Entry stack: [V12, S0]
Stack pops: 1
Stack additions: [S0, V144, V144, V149, V152, V150, V150, V149, V152, 0x0]
Exit stack: [V12, S0, V144, V144, V149, V152, V150, V150, V149, V152, 0x0]

================================

Block 0x1de
[0x1de:0x1e6]
---
Predecessors: [0x1ba, 0x1ef, 0x3ba]
Successors: [0x1e7, 0x1f7]
---
0x1de JUMPDEST
0x1df DUP4
0x1e0 DUP2
0x1e1 LT
0x1e2 ISZERO
0x1e3 PUSH2 0x1f7
0x1e6 JUMPI
---
0x1de: JUMPDEST 
0x1e1: V154 = LT S0 S3
0x1e2: V155 = ISZERO V154
0x1e3: V156 = 0x1f7
0x1e6: JUMPI 0x1f7 V155
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1e7
[0x1e7:0x1ee]
---
Predecessors: [0x1de]
Successors: [0x1ef]
---
0x1e7 DUP1
0x1e8 DUP3
0x1e9 ADD
0x1ea MLOAD
0x1eb DUP2
0x1ec DUP5
0x1ed ADD
0x1ee MSTORE
---
0x1e9: V157 = ADD S1 S0
0x1ea: V158 = M[V157]
0x1ed: V159 = ADD S2 S0
0x1ee: M[V159] = V158
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x1ef
[0x1ef:0x1f6]
---
Predecessors: [0x1e7]
Successors: [0x1de]
---
0x1ef JUMPDEST
0x1f0 PUSH1 0x20
0x1f2 ADD
0x1f3 PUSH2 0x1de
0x1f6 JUMP
---
0x1ef: JUMPDEST 
0x1f0: V160 = 0x20
0x1f2: V161 = ADD 0x20 S0
0x1f3: V162 = 0x1de
0x1f6: JUMP 0x1de
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: [V161]
Exit stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, V161]

================================

Block 0x1f7
[0x1f7:0x20a]
---
Predecessors: [0x1de, 0x3a9]
Successors: [0x20b, 0x224]
---
0x1f7 JUMPDEST
0x1f8 POP
0x1f9 POP
0x1fa POP
0x1fb POP
0x1fc SWAP1
0x1fd POP
0x1fe SWAP1
0x1ff DUP2
0x200 ADD
0x201 SWAP1
0x202 PUSH1 0x1f
0x204 AND
0x205 DUP1
0x206 ISZERO
0x207 PUSH2 0x224
0x20a JUMPI
---
0x1f7: JUMPDEST 
0x200: V163 = ADD S4 S6
0x202: V164 = 0x1f
0x204: V165 = AND 0x1f S4
0x206: V166 = ISZERO V165
0x207: V167 = 0x224
0x20a: JUMPI 0x224 V166
---
Entry stack: [V12, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [V163, V165]
Exit stack: [V12, S9, S8, S7, V163, V165]

================================

Block 0x20b
[0x20b:0x223]
---
Predecessors: [0x1f7]
Successors: [0x224]
---
0x20b DUP1
0x20c DUP3
0x20d SUB
0x20e DUP1
0x20f MLOAD
0x210 PUSH1 0x1
0x212 DUP4
0x213 PUSH1 0x20
0x215 SUB
0x216 PUSH2 0x100
0x219 EXP
0x21a SUB
0x21b NOT
0x21c AND
0x21d DUP2
0x21e MSTORE
0x21f PUSH1 0x20
0x221 ADD
0x222 SWAP2
0x223 POP
---
0x20d: V168 = SUB V163 V165
0x20f: V169 = M[V168]
0x210: V170 = 0x1
0x213: V171 = 0x20
0x215: V172 = SUB 0x20 V165
0x216: V173 = 0x100
0x219: V174 = EXP 0x100 V172
0x21a: V175 = SUB V174 0x1
0x21b: V176 = NOT V175
0x21c: V177 = AND V176 V169
0x21e: M[V168] = V177
0x21f: V178 = 0x20
0x221: V179 = ADD 0x20 V168
---
Entry stack: [V12, S4, S3, S2, V163, V165]
Stack pops: 2
Stack additions: [V179, S0]
Exit stack: [V12, S4, S3, S2, V179, V165]

================================

Block 0x224
[0x224:0x231]
---
Predecessors: [0x1f7, 0x20b, 0x3c2]
Successors: []
---
0x224 JUMPDEST
0x225 POP
0x226 SWAP3
0x227 POP
0x228 POP
0x229 POP
0x22a PUSH1 0x40
0x22c MLOAD
0x22d DUP1
0x22e SWAP2
0x22f SUB
0x230 SWAP1
0x231 RETURN
---
0x224: JUMPDEST 
0x22a: V180 = 0x40
0x22c: V181 = M[0x40]
0x22f: V182 = SUB S1 V181
0x231: RETURN V181 V182
---
Entry stack: [V12, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V12]

================================

Block 0x232
[0x232:0x238]
---
Predecessors: [0x25]
Successors: [0x239, 0x23d]
---
0x232 JUMPDEST
0x233 CALLVALUE
0x234 ISZERO
0x235 PUSH2 0x23d
0x238 JUMPI
---
0x232: JUMPDEST 
0x233: V183 = CALLVALUE
0x234: V184 = ISZERO V183
0x235: V185 = 0x23d
0x238: JUMPI 0x23d V184
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x239
[0x239:0x23c]
---
Predecessors: [0x232]
Successors: []
---
0x239 PUSH1 0x0
0x23b DUP1
0x23c REVERT
---
0x239: V186 = 0x0
0x23c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x23d
[0x23d:0x253]
---
Predecessors: [0x232]
Successors: [0x53f]
---
0x23d JUMPDEST
0x23e PUSH2 0x254
0x241 PUSH1 0x1
0x243 PUSH1 0xa0
0x245 PUSH1 0x2
0x247 EXP
0x248 SUB
0x249 PUSH1 0x4
0x24b CALLDATALOAD
0x24c AND
0x24d PUSH1 0x24
0x24f CALLDATALOAD
0x250 PUSH2 0x53f
0x253 JUMP
---
0x23d: JUMPDEST 
0x23e: V187 = 0x254
0x241: V188 = 0x1
0x243: V189 = 0xa0
0x245: V190 = 0x2
0x247: V191 = EXP 0x2 0xa0
0x248: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x249: V193 = 0x4
0x24b: V194 = CALLDATALOAD 0x4
0x24c: V195 = AND V194 0xffffffffffffffffffffffffffffffffffffffff
0x24d: V196 = 0x24
0x24f: V197 = CALLDATALOAD 0x24
0x250: V198 = 0x53f
0x253: JUMP 0x53f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x254, V195, V197]
Exit stack: [V12, 0x254, V195, V197]

================================

Block 0x254
[0x254:0x267]
---
Predecessors: [0x600, 0x753, 0x936, 0x958, 0xaad]
Successors: []
---
0x254 JUMPDEST
0x255 PUSH1 0x40
0x257 MLOAD
0x258 SWAP1
0x259 ISZERO
0x25a ISZERO
0x25b DUP2
0x25c MSTORE
0x25d PUSH1 0x20
0x25f ADD
0x260 PUSH1 0x40
0x262 MLOAD
0x263 DUP1
0x264 SWAP2
0x265 SUB
0x266 SWAP1
0x267 RETURN
---
0x254: JUMPDEST 
0x255: V199 = 0x40
0x257: V200 = M[0x40]
0x259: V201 = ISZERO S0
0x25a: V202 = ISZERO V201
0x25c: M[V200] = V202
0x25d: V203 = 0x20
0x25f: V204 = ADD 0x20 V200
0x260: V205 = 0x40
0x262: V206 = M[0x40]
0x265: V207 = SUB V204 V206
0x267: RETURN V206 V207
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x268
[0x268:0x26e]
---
Predecessors: [0x30]
Successors: [0x26f, 0x273]
---
0x268 JUMPDEST
0x269 CALLVALUE
0x26a ISZERO
0x26b PUSH2 0x273
0x26e JUMPI
---
0x268: JUMPDEST 
0x269: V208 = CALLVALUE
0x26a: V209 = ISZERO V208
0x26b: V210 = 0x273
0x26e: JUMPI 0x273 V209
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x26f
[0x26f:0x272]
---
Predecessors: [0x268]
Successors: []
---
0x26f PUSH1 0x0
0x271 DUP1
0x272 REVERT
---
0x26f: V211 = 0x0
0x272: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x273
[0x273:0x27a]
---
Predecessors: [0x268]
Successors: [0x606]
---
0x273 JUMPDEST
0x274 PUSH2 0x27b
0x277 PUSH2 0x606
0x27a JUMP
---
0x273: JUMPDEST 
0x274: V212 = 0x27b
0x277: V213 = 0x606
0x27a: JUMP 0x606
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27b]
Exit stack: [V12, 0x27b]

================================

Block 0x27b
[0x27b:0x28c]
---
Predecessors: [0x606, 0x60c, 0x7bb, 0x98f]
Successors: []
---
0x27b JUMPDEST
0x27c PUSH1 0x40
0x27e MLOAD
0x27f SWAP1
0x280 DUP2
0x281 MSTORE
0x282 PUSH1 0x20
0x284 ADD
0x285 PUSH1 0x40
0x287 MLOAD
0x288 DUP1
0x289 SWAP2
0x28a SUB
0x28b SWAP1
0x28c RETURN
---
0x27b: JUMPDEST 
0x27c: V214 = 0x40
0x27e: V215 = M[0x40]
0x281: M[V215] = S0
0x282: V216 = 0x20
0x284: V217 = ADD 0x20 V215
0x285: V218 = 0x40
0x287: V219 = M[0x40]
0x28a: V220 = SUB V217 V219
0x28c: RETURN V219 V220
---
Entry stack: [V12, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, S1]

================================

Block 0x28d
[0x28d:0x293]
---
Predecessors: [0x3b]
Successors: [0x294, 0x298]
---
0x28d JUMPDEST
0x28e CALLVALUE
0x28f ISZERO
0x290 PUSH2 0x298
0x293 JUMPI
---
0x28d: JUMPDEST 
0x28e: V221 = CALLVALUE
0x28f: V222 = ISZERO V221
0x290: V223 = 0x298
0x293: JUMPI 0x298 V222
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x294
[0x294:0x297]
---
Predecessors: [0x28d]
Successors: []
---
0x294 PUSH1 0x0
0x296 DUP1
0x297 REVERT
---
0x294: V224 = 0x0
0x297: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x298
[0x298:0x29f]
---
Predecessors: [0x28d]
Successors: [0x60c]
---
0x298 JUMPDEST
0x299 PUSH2 0x27b
0x29c PUSH2 0x60c
0x29f JUMP
---
0x298: JUMPDEST 
0x299: V225 = 0x27b
0x29c: V226 = 0x60c
0x29f: JUMP 0x60c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27b]
Exit stack: [V12, 0x27b]

================================

Block 0x2a0
[0x2a0:0x2b1]
---
Predecessors: []
Successors: []
---
0x2a0 JUMPDEST
0x2a1 PUSH1 0x40
0x2a3 MLOAD
0x2a4 SWAP1
0x2a5 DUP2
0x2a6 MSTORE
0x2a7 PUSH1 0x20
0x2a9 ADD
0x2aa PUSH1 0x40
0x2ac MLOAD
0x2ad DUP1
0x2ae SWAP2
0x2af SUB
0x2b0 SWAP1
0x2b1 RETURN
---
0x2a0: JUMPDEST 
0x2a1: V227 = 0x40
0x2a3: V228 = M[0x40]
0x2a6: M[V228] = S0
0x2a7: V229 = 0x20
0x2a9: V230 = ADD 0x20 V228
0x2aa: V231 = 0x40
0x2ac: V232 = M[0x40]
0x2af: V233 = SUB V230 V232
0x2b1: RETURN V232 V233
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2b2
[0x2b2:0x2b8]
---
Predecessors: [0x46]
Successors: [0x2b9, 0x2bd]
---
0x2b2 JUMPDEST
0x2b3 CALLVALUE
0x2b4 ISZERO
0x2b5 PUSH2 0x2bd
0x2b8 JUMPI
---
0x2b2: JUMPDEST 
0x2b3: V234 = CALLVALUE
0x2b4: V235 = ISZERO V234
0x2b5: V236 = 0x2bd
0x2b8: JUMPI 0x2bd V235
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2b9
[0x2b9:0x2bc]
---
Predecessors: [0x2b2]
Successors: []
---
0x2b9 PUSH1 0x0
0x2bb DUP1
0x2bc REVERT
---
0x2b9: V237 = 0x0
0x2bc: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2bd
[0x2bd:0x2d9]
---
Predecessors: [0x2b2]
Successors: [0x612]
---
0x2bd JUMPDEST
0x2be PUSH2 0x254
0x2c1 PUSH1 0x1
0x2c3 PUSH1 0xa0
0x2c5 PUSH1 0x2
0x2c7 EXP
0x2c8 SUB
0x2c9 PUSH1 0x4
0x2cb CALLDATALOAD
0x2cc DUP2
0x2cd AND
0x2ce SWAP1
0x2cf PUSH1 0x24
0x2d1 CALLDATALOAD
0x2d2 AND
0x2d3 PUSH1 0x44
0x2d5 CALLDATALOAD
0x2d6 PUSH2 0x612
0x2d9 JUMP
---
0x2bd: JUMPDEST 
0x2be: V238 = 0x254
0x2c1: V239 = 0x1
0x2c3: V240 = 0xa0
0x2c5: V241 = 0x2
0x2c7: V242 = EXP 0x2 0xa0
0x2c8: V243 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2c9: V244 = 0x4
0x2cb: V245 = CALLDATALOAD 0x4
0x2cd: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V245
0x2cf: V247 = 0x24
0x2d1: V248 = CALLDATALOAD 0x24
0x2d2: V249 = AND V248 0xffffffffffffffffffffffffffffffffffffffff
0x2d3: V250 = 0x44
0x2d5: V251 = CALLDATALOAD 0x44
0x2d6: V252 = 0x612
0x2d9: JUMP 0x612
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x254, V246, V249, V251]
Exit stack: [V12, 0x254, V246, V249, V251]

================================

Block 0x2da
[0x2da:0x2ed]
---
Predecessors: []
Successors: []
---
0x2da JUMPDEST
0x2db PUSH1 0x40
0x2dd MLOAD
0x2de SWAP1
0x2df ISZERO
0x2e0 ISZERO
0x2e1 DUP2
0x2e2 MSTORE
0x2e3 PUSH1 0x20
0x2e5 ADD
0x2e6 PUSH1 0x40
0x2e8 MLOAD
0x2e9 DUP1
0x2ea SWAP2
0x2eb SUB
0x2ec SWAP1
0x2ed RETURN
---
0x2da: JUMPDEST 
0x2db: V253 = 0x40
0x2dd: V254 = M[0x40]
0x2df: V255 = ISZERO S0
0x2e0: V256 = ISZERO V255
0x2e2: M[V254] = V256
0x2e3: V257 = 0x20
0x2e5: V258 = ADD 0x20 V254
0x2e6: V259 = 0x40
0x2e8: V260 = M[0x40]
0x2eb: V261 = SUB V258 V260
0x2ed: RETURN V260 V261
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ee
[0x2ee:0x2f4]
---
Predecessors: [0x51]
Successors: [0x2f5, 0x2f9]
---
0x2ee JUMPDEST
0x2ef CALLVALUE
0x2f0 ISZERO
0x2f1 PUSH2 0x2f9
0x2f4 JUMPI
---
0x2ee: JUMPDEST 
0x2ef: V262 = CALLVALUE
0x2f0: V263 = ISZERO V262
0x2f1: V264 = 0x2f9
0x2f4: JUMPI 0x2f9 V263
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f5
[0x2f5:0x2f8]
---
Predecessors: [0x2ee]
Successors: []
---
0x2f5 PUSH1 0x0
0x2f7 DUP1
0x2f8 REVERT
---
0x2f5: V265 = 0x0
0x2f8: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x2f9
[0x2f9:0x300]
---
Predecessors: [0x2ee]
Successors: [0x75f]
---
0x2f9 JUMPDEST
0x2fa PUSH2 0x301
0x2fd PUSH2 0x75f
0x300 JUMP
---
0x2f9: JUMPDEST 
0x2fa: V266 = 0x301
0x2fd: V267 = 0x75f
0x300: JUMP 0x75f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x301]
Exit stack: [V12, 0x301]

================================

Block 0x301
[0x301:0x316]
---
Predecessors: [0x762]
Successors: []
---
0x301 JUMPDEST
0x302 PUSH1 0x40
0x304 MLOAD
0x305 PUSH1 0xff
0x307 SWAP1
0x308 SWAP2
0x309 AND
0x30a DUP2
0x30b MSTORE
0x30c PUSH1 0x20
0x30e ADD
0x30f PUSH1 0x40
0x311 MLOAD
0x312 DUP1
0x313 SWAP2
0x314 SUB
0x315 SWAP1
0x316 RETURN
---
0x301: JUMPDEST 
0x302: V268 = 0x40
0x304: V269 = M[0x40]
0x305: V270 = 0xff
0x309: V271 = AND 0x12 0xff
0x30b: M[V269] = 0x12
0x30c: V272 = 0x20
0x30e: V273 = ADD 0x20 V269
0x30f: V274 = 0x40
0x311: V275 = M[0x40]
0x314: V276 = SUB V273 V275
0x316: RETURN V275 V276
---
Entry stack: [V12, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x317
[0x317:0x31d]
---
Predecessors: [0x5c]
Successors: [0x31e, 0x322]
---
0x317 JUMPDEST
0x318 CALLVALUE
0x319 ISZERO
0x31a PUSH2 0x322
0x31d JUMPI
---
0x317: JUMPDEST 
0x318: V277 = CALLVALUE
0x319: V278 = ISZERO V277
0x31a: V279 = 0x322
0x31d: JUMPI 0x322 V278
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x31e
[0x31e:0x321]
---
Predecessors: [0x317]
Successors: []
---
0x31e PUSH1 0x0
0x320 DUP1
0x321 REVERT
---
0x31e: V280 = 0x0
0x321: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x322
[0x322:0x329]
---
Predecessors: [0x317]
Successors: [0x765]
---
0x322 JUMPDEST
0x323 PUSH2 0x1a5
0x326 PUSH2 0x765
0x329 JUMP
---
0x322: JUMPDEST 
0x323: V281 = 0x1a5
0x326: V282 = 0x765
0x329: JUMP 0x765
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a5]
Exit stack: [V12, 0x1a5]

================================

Block 0x32a
[0x32a:0x32b]
---
Predecessors: []
Successors: []
---
0x32a JUMPDEST
0x32b STOP
---
0x32a: JUMPDEST 
0x32b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x32c
[0x32c:0x332]
---
Predecessors: [0x67]
Successors: [0x333, 0x337]
---
0x32c JUMPDEST
0x32d CALLVALUE
0x32e ISZERO
0x32f PUSH2 0x337
0x332 JUMPI
---
0x32c: JUMPDEST 
0x32d: V283 = CALLVALUE
0x32e: V284 = ISZERO V283
0x32f: V285 = 0x337
0x332: JUMPI 0x337 V284
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x333
[0x333:0x336]
---
Predecessors: [0x32c]
Successors: []
---
0x333 PUSH1 0x0
0x335 DUP1
0x336 REVERT
---
0x333: V286 = 0x0
0x336: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x337
[0x337:0x34a]
---
Predecessors: [0x32c]
Successors: [0x7a1]
---
0x337 JUMPDEST
0x338 PUSH2 0x27b
0x33b PUSH1 0x1
0x33d PUSH1 0xa0
0x33f PUSH1 0x2
0x341 EXP
0x342 SUB
0x343 PUSH1 0x4
0x345 CALLDATALOAD
0x346 AND
0x347 PUSH2 0x7a1
0x34a JUMP
---
0x337: JUMPDEST 
0x338: V287 = 0x27b
0x33b: V288 = 0x1
0x33d: V289 = 0xa0
0x33f: V290 = 0x2
0x341: V291 = EXP 0x2 0xa0
0x342: V292 = SUB 0x10000000000000000000000000000000000000000 0x1
0x343: V293 = 0x4
0x345: V294 = CALLDATALOAD 0x4
0x346: V295 = AND V294 0xffffffffffffffffffffffffffffffffffffffff
0x347: V296 = 0x7a1
0x34a: JUMP 0x7a1
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27b, V295]
Exit stack: [V12, 0x27b, V295]

================================

Block 0x34b
[0x34b:0x35c]
---
Predecessors: []
Successors: []
---
0x34b JUMPDEST
0x34c PUSH1 0x40
0x34e MLOAD
0x34f SWAP1
0x350 DUP2
0x351 MSTORE
0x352 PUSH1 0x20
0x354 ADD
0x355 PUSH1 0x40
0x357 MLOAD
0x358 DUP1
0x359 SWAP2
0x35a SUB
0x35b SWAP1
0x35c RETURN
---
0x34b: JUMPDEST 
0x34c: V297 = 0x40
0x34e: V298 = M[0x40]
0x351: M[V298] = S0
0x352: V299 = 0x20
0x354: V300 = ADD 0x20 V298
0x355: V301 = 0x40
0x357: V302 = M[0x40]
0x35a: V303 = SUB V300 V302
0x35c: RETURN V302 V303
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x35d
[0x35d:0x363]
---
Predecessors: [0x72]
Successors: [0x364, 0x368]
---
0x35d JUMPDEST
0x35e CALLVALUE
0x35f ISZERO
0x360 PUSH2 0x368
0x363 JUMPI
---
0x35d: JUMPDEST 
0x35e: V304 = CALLVALUE
0x35f: V305 = ISZERO V304
0x360: V306 = 0x368
0x363: JUMPI 0x368 V305
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x364
[0x364:0x367]
---
Predecessors: [0x35d]
Successors: []
---
0x364 PUSH1 0x0
0x366 DUP1
0x367 REVERT
---
0x364: V307 = 0x0
0x367: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x368
[0x368:0x36f]
---
Predecessors: [0x35d]
Successors: [0x7c0]
---
0x368 JUMPDEST
0x369 PUSH2 0x1a5
0x36c PUSH2 0x7c0
0x36f JUMP
---
0x368: JUMPDEST 
0x369: V308 = 0x1a5
0x36c: V309 = 0x7c0
0x36f: JUMP 0x7c0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1a5]
Exit stack: [V12, 0x1a5]

================================

Block 0x370
[0x370:0x371]
---
Predecessors: []
Successors: []
---
0x370 JUMPDEST
0x371 STOP
---
0x370: JUMPDEST 
0x371: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x372
[0x372:0x378]
---
Predecessors: [0x7d]
Successors: [0x379, 0x37d]
---
0x372 JUMPDEST
0x373 CALLVALUE
0x374 ISZERO
0x375 PUSH2 0x37d
0x378 JUMPI
---
0x372: JUMPDEST 
0x373: V310 = CALLVALUE
0x374: V311 = ISZERO V310
0x375: V312 = 0x37d
0x378: JUMPI 0x37d V311
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x379
[0x379:0x37c]
---
Predecessors: [0x372]
Successors: []
---
0x379 PUSH1 0x0
0x37b DUP1
0x37c REVERT
---
0x379: V313 = 0x0
0x37c: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x37d
[0x37d:0x384]
---
Predecessors: [0x372]
Successors: [0x802]
---
0x37d JUMPDEST
0x37e PUSH2 0x1ba
0x381 PUSH2 0x802
0x384 JUMP
---
0x37d: JUMPDEST 
0x37e: V314 = 0x1ba
0x381: V315 = 0x802
0x384: JUMP 0x802
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1ba]
Exit stack: [V12, 0x1ba]

================================

Block 0x385
[0x385:0x3a8]
---
Predecessors: []
Successors: [0x3a9]
---
0x385 JUMPDEST
0x386 PUSH1 0x40
0x388 MLOAD
0x389 PUSH1 0x20
0x38b DUP1
0x38c DUP3
0x38d MSTORE
0x38e DUP2
0x38f SWAP1
0x390 DUP2
0x391 ADD
0x392 DUP4
0x393 DUP2
0x394 DUP2
0x395 MLOAD
0x396 DUP2
0x397 MSTORE
0x398 PUSH1 0x20
0x39a ADD
0x39b SWAP2
0x39c POP
0x39d DUP1
0x39e MLOAD
0x39f SWAP1
0x3a0 PUSH1 0x20
0x3a2 ADD
0x3a3 SWAP1
0x3a4 DUP1
0x3a5 DUP4
0x3a6 DUP4
0x3a7 PUSH1 0x0
---
0x385: JUMPDEST 
0x386: V316 = 0x40
0x388: V317 = M[0x40]
0x389: V318 = 0x20
0x38d: M[V317] = 0x20
0x391: V319 = ADD V317 0x20
0x395: V320 = M[S0]
0x397: M[V319] = V320
0x398: V321 = 0x20
0x39a: V322 = ADD 0x20 V319
0x39e: V323 = M[S0]
0x3a0: V324 = 0x20
0x3a2: V325 = ADD 0x20 S0
0x3a7: V326 = 0x0
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V317, V317, V322, V325, V323, V323, V322, V325, 0x0]
Exit stack: [S0, V317, V317, V322, V325, V323, V323, V322, V325, 0x0]

================================

Block 0x3a9
[0x3a9:0x3b1]
---
Predecessors: [0x385]
Successors: [0x1f7, 0x3b2]
---
0x3a9 JUMPDEST
0x3aa DUP4
0x3ab DUP2
0x3ac LT
0x3ad ISZERO
0x3ae PUSH2 0x1f7
0x3b1 JUMPI
---
0x3a9: JUMPDEST 
0x3ac: V327 = LT 0x0 V323
0x3ad: V328 = ISZERO V327
0x3ae: V329 = 0x1f7
0x3b1: JUMPI 0x1f7 V328
---
Entry stack: [S9, V317, V317, V322, V325, V323, V323, V322, V325, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [S9, V317, V317, V322, V325, V323, V323, V322, V325, 0x0]

================================

Block 0x3b2
[0x3b2:0x3b9]
---
Predecessors: [0x3a9]
Successors: [0x3ba]
---
0x3b2 DUP1
0x3b3 DUP3
0x3b4 ADD
0x3b5 MLOAD
0x3b6 DUP2
0x3b7 DUP5
0x3b8 ADD
0x3b9 MSTORE
---
0x3b4: V330 = ADD V325 0x0
0x3b5: V331 = M[V330]
0x3b8: V332 = ADD V322 0x0
0x3b9: M[V332] = V331
---
Entry stack: [S9, V317, V317, V322, V325, V323, V323, V322, V325, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S9, V317, V317, V322, V325, V323, V323, V322, V325, 0x0]

================================

Block 0x3ba
[0x3ba:0x3c1]
---
Predecessors: [0x3b2]
Successors: [0x1de]
---
0x3ba JUMPDEST
0x3bb PUSH1 0x20
0x3bd ADD
0x3be PUSH2 0x1de
0x3c1 JUMP
---
0x3ba: JUMPDEST 
0x3bb: V333 = 0x20
0x3bd: V334 = ADD 0x20 0x0
0x3be: V335 = 0x1de
0x3c1: JUMP 0x1de
---
Entry stack: [S9, V317, V317, V322, V325, V323, V323, V322, V325, 0x0]
Stack pops: 1
Stack additions: [0x20]
Exit stack: [S9, V317, V317, V322, V325, V323, V323, V322, V325, 0x20]

================================

Block 0x3c2
[0x3c2:0x3d5]
---
Predecessors: []
Successors: [0x224, 0x3d6]
---
0x3c2 JUMPDEST
0x3c3 POP
0x3c4 POP
0x3c5 POP
0x3c6 POP
0x3c7 SWAP1
0x3c8 POP
0x3c9 SWAP1
0x3ca DUP2
0x3cb ADD
0x3cc SWAP1
0x3cd PUSH1 0x1f
0x3cf AND
0x3d0 DUP1
0x3d1 ISZERO
0x3d2 PUSH2 0x224
0x3d5 JUMPI
---
0x3c2: JUMPDEST 
0x3cb: V336 = ADD S4 S6
0x3cd: V337 = 0x1f
0x3cf: V338 = AND 0x1f S4
0x3d1: V339 = ISZERO V338
0x3d2: V340 = 0x224
0x3d5: JUMPI 0x224 V339
---
Entry stack: []
Stack pops: 7
Stack additions: [V336, V338]
Exit stack: [V336, V338]

================================

Block 0x3d6
[0x3d6:0x3ee]
---
Predecessors: [0x3c2]
Successors: [0x3ef]
---
0x3d6 DUP1
0x3d7 DUP3
0x3d8 SUB
0x3d9 DUP1
0x3da MLOAD
0x3db PUSH1 0x1
0x3dd DUP4
0x3de PUSH1 0x20
0x3e0 SUB
0x3e1 PUSH2 0x100
0x3e4 EXP
0x3e5 SUB
0x3e6 NOT
0x3e7 AND
0x3e8 DUP2
0x3e9 MSTORE
0x3ea PUSH1 0x20
0x3ec ADD
0x3ed SWAP2
0x3ee POP
---
0x3d8: V341 = SUB V336 V338
0x3da: V342 = M[V341]
0x3db: V343 = 0x1
0x3de: V344 = 0x20
0x3e0: V345 = SUB 0x20 V338
0x3e1: V346 = 0x100
0x3e4: V347 = EXP 0x100 V345
0x3e5: V348 = SUB V347 0x1
0x3e6: V349 = NOT V348
0x3e7: V350 = AND V349 V342
0x3e9: M[V341] = V350
0x3ea: V351 = 0x20
0x3ec: V352 = ADD 0x20 V341
---
Entry stack: [V336, V338]
Stack pops: 2
Stack additions: [V352, S0]
Exit stack: [V352, V338]

================================

Block 0x3ef
[0x3ef:0x3fc]
---
Predecessors: [0x3d6]
Successors: []
---
0x3ef JUMPDEST
0x3f0 POP
0x3f1 SWAP3
0x3f2 POP
0x3f3 POP
0x3f4 POP
0x3f5 PUSH1 0x40
0x3f7 MLOAD
0x3f8 DUP1
0x3f9 SWAP2
0x3fa SUB
0x3fb SWAP1
0x3fc RETURN
---
0x3ef: JUMPDEST 
0x3f5: V353 = 0x40
0x3f7: V354 = M[0x40]
0x3fa: V355 = SUB V352 V354
0x3fc: RETURN V354 V355
---
Entry stack: [V352, V338]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x3fd
[0x3fd:0x403]
---
Predecessors: [0x88]
Successors: [0x404, 0x408]
---
0x3fd JUMPDEST
0x3fe CALLVALUE
0x3ff ISZERO
0x400 PUSH2 0x408
0x403 JUMPI
---
0x3fd: JUMPDEST 
0x3fe: V356 = CALLVALUE
0x3ff: V357 = ISZERO V356
0x400: V358 = 0x408
0x403: JUMPI 0x408 V357
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x404
[0x404:0x407]
---
Predecessors: [0x3fd]
Successors: []
---
0x404 PUSH1 0x0
0x406 DUP1
0x407 REVERT
---
0x404: V359 = 0x0
0x407: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x408
[0x408:0x41e]
---
Predecessors: [0x3fd]
Successors: [0x844]
---
0x408 JUMPDEST
0x409 PUSH2 0x254
0x40c PUSH1 0x1
0x40e PUSH1 0xa0
0x410 PUSH1 0x2
0x412 EXP
0x413 SUB
0x414 PUSH1 0x4
0x416 CALLDATALOAD
0x417 AND
0x418 PUSH1 0x24
0x41a CALLDATALOAD
0x41b PUSH2 0x844
0x41e JUMP
---
0x408: JUMPDEST 
0x409: V360 = 0x254
0x40c: V361 = 0x1
0x40e: V362 = 0xa0
0x410: V363 = 0x2
0x412: V364 = EXP 0x2 0xa0
0x413: V365 = SUB 0x10000000000000000000000000000000000000000 0x1
0x414: V366 = 0x4
0x416: V367 = CALLDATALOAD 0x4
0x417: V368 = AND V367 0xffffffffffffffffffffffffffffffffffffffff
0x418: V369 = 0x24
0x41a: V370 = CALLDATALOAD 0x24
0x41b: V371 = 0x844
0x41e: JUMP 0x844
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x254, V368, V370]
Exit stack: [V12, 0x254, V368, V370]

================================

Block 0x41f
[0x41f:0x432]
---
Predecessors: []
Successors: []
---
0x41f JUMPDEST
0x420 PUSH1 0x40
0x422 MLOAD
0x423 SWAP1
0x424 ISZERO
0x425 ISZERO
0x426 DUP2
0x427 MSTORE
0x428 PUSH1 0x20
0x42a ADD
0x42b PUSH1 0x40
0x42d MLOAD
0x42e DUP1
0x42f SWAP2
0x430 SUB
0x431 SWAP1
0x432 RETURN
---
0x41f: JUMPDEST 
0x420: V372 = 0x40
0x422: V373 = M[0x40]
0x424: V374 = ISZERO S0
0x425: V375 = ISZERO V374
0x427: M[V373] = V375
0x428: V376 = 0x20
0x42a: V377 = ADD 0x20 V373
0x42b: V378 = 0x40
0x42d: V379 = M[0x40]
0x430: V380 = SUB V377 V379
0x432: RETURN V379 V380
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x433
[0x433:0x439]
---
Predecessors: [0x93]
Successors: [0x43a, 0x43e]
---
0x433 JUMPDEST
0x434 CALLVALUE
0x435 ISZERO
0x436 PUSH2 0x43e
0x439 JUMPI
---
0x433: JUMPDEST 
0x434: V381 = CALLVALUE
0x435: V382 = ISZERO V381
0x436: V383 = 0x43e
0x439: JUMPI 0x43e V382
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x43a
[0x43a:0x43d]
---
Predecessors: [0x433]
Successors: []
---
0x43a PUSH1 0x0
0x43c DUP1
0x43d REVERT
---
0x43a: V384 = 0x0
0x43d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x43e
[0x43e:0x445]
---
Predecessors: [0x433]
Successors: [0x93f]
---
0x43e JUMPDEST
0x43f PUSH2 0x446
0x442 PUSH2 0x93f
0x445 JUMP
---
0x43e: JUMPDEST 
0x43f: V385 = 0x446
0x442: V386 = 0x93f
0x445: JUMP 0x93f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x446]
Exit stack: [V12, 0x446]

================================

Block 0x446
[0x446:0x46b]
---
Predecessors: [0x953]
Successors: []
---
0x446 JUMPDEST
0x447 PUSH1 0x40
0x449 MLOAD
0x44a SWAP3
0x44b DUP4
0x44c MSTORE
0x44d PUSH1 0x20
0x44f DUP4
0x450 ADD
0x451 SWAP2
0x452 SWAP1
0x453 SWAP2
0x454 MSTORE
0x455 ISZERO
0x456 ISZERO
0x457 PUSH1 0x40
0x459 DUP1
0x45a DUP4
0x45b ADD
0x45c SWAP2
0x45d SWAP1
0x45e SWAP2
0x45f MSTORE
0x460 PUSH1 0x60
0x462 SWAP1
0x463 SWAP2
0x464 ADD
0x465 SWAP1
0x466 MLOAD
0x467 DUP1
0x468 SWAP2
0x469 SUB
0x46a SWAP1
0x46b RETURN
---
0x446: JUMPDEST 
0x447: V387 = 0x40
0x449: V388 = M[0x40]
0x44c: M[V388] = V768
0x44d: V389 = 0x20
0x450: V390 = ADD V388 0x20
0x454: M[V390] = V770
0x455: V391 = ISZERO V778
0x456: V392 = ISZERO V391
0x457: V393 = 0x40
0x45b: V394 = ADD V388 0x40
0x45f: M[V394] = V392
0x460: V395 = 0x60
0x464: V396 = ADD V388 0x60
0x466: V397 = M[0x40]
0x469: V398 = SUB V396 V397
0x46b: RETURN V397 V398
---
Entry stack: [V12, V768, V770, V778]
Stack pops: 3
Stack additions: []
Exit stack: [V12]

================================

Block 0x46c
[0x46c:0x472]
---
Predecessors: [0x9e]
Successors: [0x473, 0x477]
---
0x46c JUMPDEST
0x46d CALLVALUE
0x46e ISZERO
0x46f PUSH2 0x477
0x472 JUMPI
---
0x46c: JUMPDEST 
0x46d: V399 = CALLVALUE
0x46e: V400 = ISZERO V399
0x46f: V401 = 0x477
0x472: JUMPI 0x477 V400
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x473
[0x473:0x476]
---
Predecessors: [0x46c]
Successors: []
---
0x473 PUSH1 0x0
0x475 DUP1
0x476 REVERT
---
0x473: V402 = 0x0
0x476: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x477
[0x477:0x47e]
---
Predecessors: [0x46c]
Successors: [0x958]
---
0x477 JUMPDEST
0x478 PUSH2 0x254
0x47b PUSH2 0x958
0x47e JUMP
---
0x477: JUMPDEST 
0x478: V403 = 0x254
0x47b: V404 = 0x958
0x47e: JUMP 0x958
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x254]
Exit stack: [V12, 0x254]

================================

Block 0x47f
[0x47f:0x492]
---
Predecessors: []
Successors: []
---
0x47f JUMPDEST
0x480 PUSH1 0x40
0x482 MLOAD
0x483 SWAP1
0x484 ISZERO
0x485 ISZERO
0x486 DUP2
0x487 MSTORE
0x488 PUSH1 0x20
0x48a ADD
0x48b PUSH1 0x40
0x48d MLOAD
0x48e DUP1
0x48f SWAP2
0x490 SUB
0x491 SWAP1
0x492 RETURN
---
0x47f: JUMPDEST 
0x480: V405 = 0x40
0x482: V406 = M[0x40]
0x484: V407 = ISZERO S0
0x485: V408 = ISZERO V407
0x487: M[V406] = V408
0x488: V409 = 0x20
0x48a: V410 = ADD 0x20 V406
0x48b: V411 = 0x40
0x48d: V412 = M[0x40]
0x490: V413 = SUB V410 V412
0x492: RETURN V412 V413
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x493
[0x493:0x499]
---
Predecessors: [0xa9]
Successors: [0x49a, 0x49e]
---
0x493 JUMPDEST
0x494 CALLVALUE
0x495 ISZERO
0x496 PUSH2 0x49e
0x499 JUMPI
---
0x493: JUMPDEST 
0x494: V414 = CALLVALUE
0x495: V415 = ISZERO V414
0x496: V416 = 0x49e
0x499: JUMPI 0x49e V415
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x49a
[0x49a:0x49d]
---
Predecessors: [0x493]
Successors: []
---
0x49a PUSH1 0x0
0x49c DUP1
0x49d REVERT
---
0x49a: V417 = 0x0
0x49d: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x49e
[0x49e:0x4b7]
---
Predecessors: [0x493]
Successors: [0x968]
---
0x49e JUMPDEST
0x49f PUSH2 0x27b
0x4a2 PUSH1 0x1
0x4a4 PUSH1 0xa0
0x4a6 PUSH1 0x2
0x4a8 EXP
0x4a9 SUB
0x4aa PUSH1 0x4
0x4ac CALLDATALOAD
0x4ad DUP2
0x4ae AND
0x4af SWAP1
0x4b0 PUSH1 0x24
0x4b2 CALLDATALOAD
0x4b3 AND
0x4b4 PUSH2 0x968
0x4b7 JUMP
---
0x49e: JUMPDEST 
0x49f: V418 = 0x27b
0x4a2: V419 = 0x1
0x4a4: V420 = 0xa0
0x4a6: V421 = 0x2
0x4a8: V422 = EXP 0x2 0xa0
0x4a9: V423 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4aa: V424 = 0x4
0x4ac: V425 = CALLDATALOAD 0x4
0x4ae: V426 = AND 0xffffffffffffffffffffffffffffffffffffffff V425
0x4b0: V427 = 0x24
0x4b2: V428 = CALLDATALOAD 0x24
0x4b3: V429 = AND V428 0xffffffffffffffffffffffffffffffffffffffff
0x4b4: V430 = 0x968
0x4b7: JUMP 0x968
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x27b, V426, V429]
Exit stack: [V12, 0x27b, V426, V429]

================================

Block 0x4b8
[0x4b8:0x4c9]
---
Predecessors: []
Successors: []
---
0x4b8 JUMPDEST
0x4b9 PUSH1 0x40
0x4bb MLOAD
0x4bc SWAP1
0x4bd DUP2
0x4be MSTORE
0x4bf PUSH1 0x20
0x4c1 ADD
0x4c2 PUSH1 0x40
0x4c4 MLOAD
0x4c5 DUP1
0x4c6 SWAP2
0x4c7 SUB
0x4c8 SWAP1
0x4c9 RETURN
---
0x4b8: JUMPDEST 
0x4b9: V431 = 0x40
0x4bb: V432 = M[0x40]
0x4be: M[V432] = S0
0x4bf: V433 = 0x20
0x4c1: V434 = ADD 0x20 V432
0x4c2: V435 = 0x40
0x4c4: V436 = M[0x40]
0x4c7: V437 = SUB V434 V436
0x4c9: RETURN V436 V437
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4ca
[0x4ca:0x4d0]
---
Predecessors: [0xb4]
Successors: [0x4d1, 0x4d5]
---
0x4ca JUMPDEST
0x4cb CALLVALUE
0x4cc ISZERO
0x4cd PUSH2 0x4d5
0x4d0 JUMPI
---
0x4ca: JUMPDEST 
0x4cb: V438 = CALLVALUE
0x4cc: V439 = ISZERO V438
0x4cd: V440 = 0x4d5
0x4d0: JUMPI 0x4d5 V439
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d1
[0x4d1:0x4d4]
---
Predecessors: [0x4ca]
Successors: []
---
0x4d1 PUSH1 0x0
0x4d3 DUP1
0x4d4 REVERT
---
0x4d1: V441 = 0x0
0x4d4: REVERT 0x0 0x0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x4d5
[0x4d5:0x4e8]
---
Predecessors: [0x4ca]
Successors: [0x995]
---
0x4d5 JUMPDEST
0x4d6 PUSH2 0x254
0x4d9 PUSH1 0x1
0x4db PUSH1 0xa0
0x4dd PUSH1 0x2
0x4df EXP
0x4e0 SUB
0x4e1 PUSH1 0x4
0x4e3 CALLDATALOAD
0x4e4 AND
0x4e5 PUSH2 0x995
0x4e8 JUMP
---
0x4d5: JUMPDEST 
0x4d6: V442 = 0x254
0x4d9: V443 = 0x1
0x4db: V444 = 0xa0
0x4dd: V445 = 0x2
0x4df: V446 = EXP 0x2 0xa0
0x4e0: V447 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e1: V448 = 0x4
0x4e3: V449 = CALLDATALOAD 0x4
0x4e4: V450 = AND V449 0xffffffffffffffffffffffffffffffffffffffff
0x4e5: V451 = 0x995
0x4e8: JUMP 0x995
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x254, V450]
Exit stack: [V12, 0x254, V450]

================================

Block 0x4e9
[0x4e9:0x4fc]
---
Predecessors: []
Successors: []
---
0x4e9 JUMPDEST
0x4ea PUSH1 0x40
0x4ec MLOAD
0x4ed SWAP1
0x4ee ISZERO
0x4ef ISZERO
0x4f0 DUP2
0x4f1 MSTORE
0x4f2 PUSH1 0x20
0x4f4 ADD
0x4f5 PUSH1 0x40
0x4f7 MLOAD
0x4f8 DUP1
0x4f9 SWAP2
0x4fa SUB
0x4fb SWAP1
0x4fc RETURN
---
0x4e9: JUMPDEST 
0x4ea: V452 = 0x40
0x4ec: V453 = M[0x40]
0x4ee: V454 = ISZERO S0
0x4ef: V455 = ISZERO V454
0x4f1: M[V453] = V455
0x4f2: V456 = 0x20
0x4f4: V457 = ADD 0x20 V453
0x4f5: V458 = 0x40
0x4f7: V459 = M[0x40]
0x4fa: V460 = SUB V457 V459
0x4fc: RETURN V459 V460
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4fd
[0x4fd:0x504]
---
Predecessors: [0x1b2]
Successors: [0xab4]
---
0x4fd JUMPDEST
0x4fe PUSH2 0x505
0x501 PUSH2 0xab4
0x504 JUMP
---
0x4fd: JUMPDEST 
0x4fe: V461 = 0x505
0x501: V462 = 0xab4
0x504: JUMP 0xab4
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: [0x505]
Exit stack: [V12, 0x1ba, 0x505]

================================

Block 0x505
[0x505:0x53b]
---
Predecessors: [0xab4]
Successors: [0x53c]
---
0x505 JUMPDEST
0x506 PUSH1 0x40
0x508 DUP1
0x509 MLOAD
0x50a SWAP1
0x50b DUP2
0x50c ADD
0x50d PUSH1 0x40
0x50f MSTORE
0x510 PUSH1 0xd
0x512 DUP2
0x513 MSTORE
0x514 PUSH32 0x5072617965727320546f6b656e00000000000000000000000000000000000000
0x535 PUSH1 0x20
0x537 DUP3
0x538 ADD
0x539 MSTORE
0x53a SWAP1
0x53b POP
---
0x505: JUMPDEST 
0x506: V463 = 0x40
0x509: V464 = M[0x40]
0x50c: V465 = ADD V464 0x40
0x50d: V466 = 0x40
0x50f: M[0x40] = V465
0x510: V467 = 0xd
0x513: M[V464] = 0xd
0x514: V468 = 0x5072617965727320546f6b656e00000000000000000000000000000000000000
0x535: V469 = 0x20
0x538: V470 = ADD V464 0x20
0x539: M[V470] = 0x5072617965727320546f6b656e00000000000000000000000000000000000000
---
Entry stack: [V12, 0x1ba, V923]
Stack pops: 1
Stack additions: [V464]
Exit stack: [V12, 0x1ba, V464]

================================

Block 0x53c
[0x53c:0x53e]
---
Predecessors: [0x505]
Successors: [0x1ba]
---
0x53c JUMPDEST
0x53d SWAP1
0x53e JUMP
---
0x53c: JUMPDEST 
0x53e: JUMP 0x1ba
---
Entry stack: [V12, 0x1ba, V464]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V464]

================================

Block 0x53f
[0x53f:0x54a]
---
Predecessors: [0x23d]
Successors: [0x54b, 0x574]
---
0x53f JUMPDEST
0x540 PUSH1 0x0
0x542 DUP2
0x543 ISZERO
0x544 DUP1
0x545 ISZERO
0x546 SWAP1
0x547 PUSH2 0x574
0x54a JUMPI
---
0x53f: JUMPDEST 
0x540: V471 = 0x0
0x543: V472 = ISZERO V197
0x545: V473 = ISZERO V472
0x547: V474 = 0x574
0x54a: JUMPI 0x574 V472
---
Entry stack: [V12, 0x254, V195, V197]
Stack pops: 1
Stack additions: [S0, 0x0, V473]
Exit stack: [V12, 0x254, V195, V197, 0x0, V473]

================================

Block 0x54b
[0x54b:0x573]
---
Predecessors: [0x53f]
Successors: [0x574]
---
0x54b POP
0x54c PUSH1 0x1
0x54e PUSH1 0xa0
0x550 PUSH1 0x2
0x552 EXP
0x553 SUB
0x554 CALLER
0x555 DUP2
0x556 AND
0x557 PUSH1 0x0
0x559 SWAP1
0x55a DUP2
0x55b MSTORE
0x55c PUSH1 0x2
0x55e PUSH1 0x20
0x560 SWAP1
0x561 DUP2
0x562 MSTORE
0x563 PUSH1 0x40
0x565 DUP1
0x566 DUP4
0x567 SHA3
0x568 SWAP4
0x569 DUP8
0x56a AND
0x56b DUP4
0x56c MSTORE
0x56d SWAP3
0x56e SWAP1
0x56f MSTORE
0x570 SHA3
0x571 SLOAD
0x572 ISZERO
0x573 ISZERO
---
0x54c: V475 = 0x1
0x54e: V476 = 0xa0
0x550: V477 = 0x2
0x552: V478 = EXP 0x2 0xa0
0x553: V479 = SUB 0x10000000000000000000000000000000000000000 0x1
0x554: V480 = CALLER
0x556: V481 = AND 0xffffffffffffffffffffffffffffffffffffffff V480
0x557: V482 = 0x0
0x55b: M[0x0] = V481
0x55c: V483 = 0x2
0x55e: V484 = 0x20
0x562: M[0x20] = 0x2
0x563: V485 = 0x40
0x567: V486 = SHA3 0x0 0x40
0x56a: V487 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0x56c: M[0x0] = V487
0x56f: M[0x20] = V486
0x570: V488 = SHA3 0x0 0x40
0x571: V489 = S[V488]
0x572: V490 = ISZERO V489
0x573: V491 = ISZERO V490
---
Entry stack: [V12, 0x254, V195, V197, 0x0, V473]
Stack pops: 4
Stack additions: [S3, S2, S1, V491]
Exit stack: [V12, 0x254, V195, V197, 0x0, V491]

================================

Block 0x574
[0x574:0x579]
---
Predecessors: [0x53f, 0x54b]
Successors: [0x57a, 0x581]
---
0x574 JUMPDEST
0x575 ISZERO
0x576 PUSH2 0x581
0x579 JUMPI
---
0x574: JUMPDEST 
0x575: V492 = ISZERO S0
0x576: V493 = 0x581
0x579: JUMPI 0x581 V492
---
Entry stack: [V12, 0x254, V195, V197, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x254, V195, V197, 0x0]

================================

Block 0x57a
[0x57a:0x580]
---
Predecessors: [0x574]
Successors: [0x600]
---
0x57a POP
0x57b PUSH1 0x0
0x57d PUSH2 0x600
0x580 JUMP
---
0x57b: V494 = 0x0
0x57d: V495 = 0x600
0x580: JUMP 0x600
---
Entry stack: [V12, 0x254, V195, V197, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V12, 0x254, V195, V197, 0x0]

================================

Block 0x581
[0x581:0x597]
---
Predecessors: [0x574]
Successors: [0x598, 0x59c]
---
0x581 JUMPDEST
0x582 PUSH1 0x0
0x584 SLOAD
0x585 CALLER
0x586 PUSH1 0x1
0x588 PUSH1 0xa0
0x58a PUSH1 0x2
0x58c EXP
0x58d SUB
0x58e SWAP1
0x58f DUP2
0x590 AND
0x591 SWAP2
0x592 AND
0x593 EQ
0x594 PUSH2 0x59c
0x597 JUMPI
---
0x581: JUMPDEST 
0x582: V496 = 0x0
0x584: V497 = S[0x0]
0x585: V498 = CALLER
0x586: V499 = 0x1
0x588: V500 = 0xa0
0x58a: V501 = 0x2
0x58c: V502 = EXP 0x2 0xa0
0x58d: V503 = SUB 0x10000000000000000000000000000000000000000 0x1
0x590: V504 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x592: V505 = AND V497 0xffffffffffffffffffffffffffffffffffffffff
0x593: V506 = EQ V505 V504
0x594: V507 = 0x59c
0x597: JUMPI 0x59c V506
---
Entry stack: [V12, 0x254, V195, V197, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V195, V197, 0x0]

================================

Block 0x598
[0x598:0x59b]
---
Predecessors: [0x581]
Successors: []
---
0x598 PUSH1 0x0
0x59a DUP1
0x59b REVERT
---
0x598: V508 = 0x0
0x59b: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V195, V197, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V195, V197, 0x0]

================================

Block 0x59c
[0x59c:0x5ff]
---
Predecessors: [0x581]
Successors: [0x600]
---
0x59c JUMPDEST
0x59d PUSH1 0x1
0x59f PUSH1 0xa0
0x5a1 PUSH1 0x2
0x5a3 EXP
0x5a4 SUB
0x5a5 CALLER
0x5a6 DUP2
0x5a7 AND
0x5a8 PUSH1 0x0
0x5aa DUP2
0x5ab DUP2
0x5ac MSTORE
0x5ad PUSH1 0x2
0x5af PUSH1 0x20
0x5b1 SWAP1
0x5b2 DUP2
0x5b3 MSTORE
0x5b4 PUSH1 0x40
0x5b6 DUP1
0x5b7 DUP4
0x5b8 SHA3
0x5b9 SWAP5
0x5ba DUP9
0x5bb AND
0x5bc DUP1
0x5bd DUP5
0x5be MSTORE
0x5bf SWAP5
0x5c0 SWAP1
0x5c1 SWAP2
0x5c2 MSTORE
0x5c3 SWAP1
0x5c4 DUP2
0x5c5 SWAP1
0x5c6 SHA3
0x5c7 DUP6
0x5c8 SWAP1
0x5c9 SSTORE
0x5ca PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5eb SWAP1
0x5ec DUP6
0x5ed SWAP1
0x5ee MLOAD
0x5ef SWAP1
0x5f0 DUP2
0x5f1 MSTORE
0x5f2 PUSH1 0x20
0x5f4 ADD
0x5f5 PUSH1 0x40
0x5f7 MLOAD
0x5f8 DUP1
0x5f9 SWAP2
0x5fa SUB
0x5fb SWAP1
0x5fc LOG3
0x5fd POP
0x5fe PUSH1 0x1
---
0x59c: JUMPDEST 
0x59d: V509 = 0x1
0x59f: V510 = 0xa0
0x5a1: V511 = 0x2
0x5a3: V512 = EXP 0x2 0xa0
0x5a4: V513 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5a5: V514 = CALLER
0x5a7: V515 = AND 0xffffffffffffffffffffffffffffffffffffffff V514
0x5a8: V516 = 0x0
0x5ac: M[0x0] = V515
0x5ad: V517 = 0x2
0x5af: V518 = 0x20
0x5b3: M[0x20] = 0x2
0x5b4: V519 = 0x40
0x5b8: V520 = SHA3 0x0 0x40
0x5bb: V521 = AND V195 0xffffffffffffffffffffffffffffffffffffffff
0x5be: M[0x0] = V521
0x5c2: M[0x20] = V520
0x5c6: V522 = SHA3 0x0 0x40
0x5c9: S[V522] = V197
0x5ca: V523 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5ee: V524 = M[0x40]
0x5f1: M[V524] = V197
0x5f2: V525 = 0x20
0x5f4: V526 = ADD 0x20 V524
0x5f5: V527 = 0x40
0x5f7: V528 = M[0x40]
0x5fa: V529 = SUB V526 V528
0x5fc: LOG V528 V529 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V515 V521
0x5fe: V530 = 0x1
---
Entry stack: [V12, 0x254, V195, V197, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V12, 0x254, V195, V197, 0x1]

================================

Block 0x600
[0x600:0x605]
---
Predecessors: [0x57a, 0x59c]
Successors: [0x254]
---
0x600 JUMPDEST
0x601 SWAP3
0x602 SWAP2
0x603 POP
0x604 POP
0x605 JUMP
---
0x600: JUMPDEST 
0x605: JUMP 0x254
---
Entry stack: [V12, 0x254, V195, V197, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x606
[0x606:0x60b]
---
Predecessors: [0x273]
Successors: [0x27b]
---
0x606 JUMPDEST
0x607 PUSH1 0x3
0x609 SLOAD
0x60a DUP2
0x60b JUMP
---
0x606: JUMPDEST 
0x607: V531 = 0x3
0x609: V532 = S[0x3]
0x60b: JUMP 0x27b
---
Entry stack: [V12, 0x27b]
Stack pops: 1
Stack additions: [S0, V532]
Exit stack: [V12, 0x27b, V532]

================================

Block 0x60c
[0x60c:0x611]
---
Predecessors: [0x298]
Successors: [0x27b]
---
0x60c JUMPDEST
0x60d PUSH1 0x4
0x60f SLOAD
0x610 DUP2
0x611 JUMP
---
0x60c: JUMPDEST 
0x60d: V533 = 0x4
0x60f: V534 = S[0x4]
0x611: JUMP 0x27b
---
Entry stack: [V12, 0x27b]
Stack pops: 1
Stack additions: [S0, V534]
Exit stack: [V12, 0x27b, V534]

================================

Block 0x612
[0x612:0x622]
---
Predecessors: [0x2bd]
Successors: [0x623, 0x627]
---
0x612 JUMPDEST
0x613 PUSH1 0x0
0x615 DUP1
0x616 DUP1
0x617 DUP1
0x618 DUP1
0x619 DUP1
0x61a PUSH1 0x64
0x61c CALLDATASIZE
0x61d LT
0x61e ISZERO
0x61f PUSH2 0x627
0x622 JUMPI
---
0x612: JUMPDEST 
0x613: V535 = 0x0
0x61a: V536 = 0x64
0x61c: V537 = CALLDATASIZE
0x61d: V538 = LT V537 0x64
0x61e: V539 = ISZERO V538
0x61f: V540 = 0x627
0x622: JUMPI 0x627 V539
---
Entry stack: [V12, 0x254, V246, V249, V251]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x623
[0x623:0x626]
---
Predecessors: [0x612]
Successors: []
---
0x623 PUSH1 0x0
0x625 DUP1
0x626 REVERT
---
0x623: V541 = 0x0
0x626: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x627
[0x627:0x63d]
---
Predecessors: [0x612]
Successors: [0x63e, 0x642]
---
0x627 JUMPDEST
0x628 PUSH1 0x0
0x62a SLOAD
0x62b CALLER
0x62c PUSH1 0x1
0x62e PUSH1 0xa0
0x630 PUSH1 0x2
0x632 EXP
0x633 SUB
0x634 SWAP1
0x635 DUP2
0x636 AND
0x637 SWAP2
0x638 AND
0x639 EQ
0x63a PUSH2 0x642
0x63d JUMPI
---
0x627: JUMPDEST 
0x628: V542 = 0x0
0x62a: V543 = S[0x0]
0x62b: V544 = CALLER
0x62c: V545 = 0x1
0x62e: V546 = 0xa0
0x630: V547 = 0x2
0x632: V548 = EXP 0x2 0xa0
0x633: V549 = SUB 0x10000000000000000000000000000000000000000 0x1
0x636: V550 = AND 0xffffffffffffffffffffffffffffffffffffffff V544
0x638: V551 = AND V543 0xffffffffffffffffffffffffffffffffffffffff
0x639: V552 = EQ V551 V550
0x63a: V553 = 0x642
0x63d: JUMPI 0x642 V552
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x63e
[0x63e:0x641]
---
Predecessors: [0x627]
Successors: []
---
0x63e PUSH1 0x0
0x640 DUP1
0x641 REVERT
---
0x63e: V554 = 0x0
0x641: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x642
[0x642:0x649]
---
Predecessors: [0x627]
Successors: [0x64a, 0x652]
---
0x642 JUMPDEST
0x643 DUP7
0x644 ISZERO
0x645 ISZERO
0x646 PUSH2 0x652
0x649 JUMPI
---
0x642: JUMPDEST 
0x644: V555 = ISZERO V251
0x645: V556 = ISZERO V555
0x646: V557 = 0x652
0x649: JUMPI 0x652 V556
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x64a
[0x64a:0x651]
---
Predecessors: [0x642]
Successors: [0x752]
---
0x64a PUSH1 0x0
0x64c SWAP6
0x64d POP
0x64e PUSH2 0x752
0x651 JUMP
---
0x64a: V558 = 0x0
0x64e: V559 = 0x752
0x651: JUMP 0x752
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x652
[0x652:0x6ae]
---
Predecessors: [0x642]
Successors: [0x6af, 0x6b1]
---
0x652 JUMPDEST
0x653 POP
0x654 POP
0x655 POP
0x656 POP
0x657 PUSH1 0x1
0x659 PUSH1 0xa0
0x65b PUSH1 0x2
0x65d EXP
0x65e SUB
0x65f DUP6
0x660 DUP2
0x661 AND
0x662 PUSH1 0x0
0x664 SWAP1
0x665 DUP2
0x666 MSTORE
0x667 PUSH1 0x1
0x669 PUSH1 0x20
0x66b DUP2
0x66c DUP2
0x66d MSTORE
0x66e PUSH1 0x40
0x670 DUP1
0x671 DUP5
0x672 SHA3
0x673 SLOAD
0x674 PUSH1 0x2
0x676 DUP4
0x677 MSTORE
0x678 DUP2
0x679 DUP6
0x67a SHA3
0x67b CALLER
0x67c DUP8
0x67d AND
0x67e DUP7
0x67f MSTORE
0x680 DUP4
0x681 MSTORE
0x682 DUP2
0x683 DUP6
0x684 SHA3
0x685 SLOAD
0x686 SWAP6
0x687 DUP11
0x688 AND
0x689 DUP6
0x68a MSTORE
0x68b SWAP3
0x68c SWAP1
0x68d SWAP2
0x68e MSTORE
0x68f SWAP1
0x690 SWAP2
0x691 SHA3
0x692 SLOAD
0x693 SWAP1
0x694 SWAP3
0x695 POP
0x696 DUP5
0x697 DUP4
0x698 GT
0x699 DUP1
0x69a ISZERO
0x69b SWAP2
0x69c DUP7
0x69d DUP5
0x69e GT
0x69f ISZERO
0x6a0 SWAP2
0x6a1 DUP8
0x6a2 DUP3
0x6a3 ADD
0x6a4 SWAP2
0x6a5 SWAP1
0x6a6 SWAP2
0x6a7 GT
0x6a8 SWAP1
0x6a9 DUP4
0x6aa SWAP1
0x6ab PUSH2 0x6b1
0x6ae JUMPI
---
0x652: JUMPDEST 
0x657: V560 = 0x1
0x659: V561 = 0xa0
0x65b: V562 = 0x2
0x65d: V563 = EXP 0x2 0xa0
0x65e: V564 = SUB 0x10000000000000000000000000000000000000000 0x1
0x661: V565 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x662: V566 = 0x0
0x666: M[0x0] = V565
0x667: V567 = 0x1
0x669: V568 = 0x20
0x66d: M[0x20] = 0x1
0x66e: V569 = 0x40
0x672: V570 = SHA3 0x0 0x40
0x673: V571 = S[V570]
0x674: V572 = 0x2
0x677: M[0x20] = 0x2
0x67a: V573 = SHA3 0x0 0x40
0x67b: V574 = CALLER
0x67d: V575 = AND 0xffffffffffffffffffffffffffffffffffffffff V574
0x67f: M[0x0] = V575
0x681: M[0x20] = V573
0x684: V576 = SHA3 0x0 0x40
0x685: V577 = S[V576]
0x688: V578 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0x68a: M[0x0] = V578
0x68e: M[0x20] = 0x1
0x691: V579 = SHA3 0x0 0x40
0x692: V580 = S[V579]
0x698: V581 = GT V571 V251
0x69a: V582 = ISZERO V581
0x69e: V583 = GT V577 V251
0x69f: V584 = ISZERO V583
0x6a3: V585 = ADD V580 V251
0x6a7: V586 = GT V585 V580
0x6ab: V587 = 0x6b1
0x6ae: JUMPI 0x6b1 V581
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V571, V577, V582, V584, V586, V582]
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, V571, V577, V582, V584, V586, V582]

================================

Block 0x6af
[0x6af:0x6b0]
---
Predecessors: [0x652]
Successors: [0x6b1]
---
0x6af POP
0x6b0 DUP2
---
0x6af: NOP 
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, V571, V577, V582, V584, V586, V582]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, V571, V577, V582, V584, V586, V584]

================================

Block 0x6b1
[0x6b1:0x6b7]
---
Predecessors: [0x652, 0x6af]
Successors: [0x6b8, 0x6bb]
---
0x6b1 JUMPDEST
0x6b2 DUP1
0x6b3 ISZERO
0x6b4 PUSH2 0x6bb
0x6b7 JUMPI
---
0x6b1: JUMPDEST 
0x6b3: V588 = ISZERO S0
0x6b4: V589 = 0x6bb
0x6b7: JUMPI 0x6bb V588
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, V571, V577, V582, V584, V586, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, V571, V577, V582, V584, V586, S0]

================================

Block 0x6b8
[0x6b8:0x6ba]
---
Predecessors: [0x6b1]
Successors: [0x6bb]
---
0x6b8 POP
0x6b9 DUP1
0x6ba ISZERO
---
0x6ba: V590 = ISZERO V586
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, V571, V577, V582, V584, V586, S0]
Stack pops: 2
Stack additions: [S1, V590]
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, V571, V577, V582, V584, V586, V590]

================================

Block 0x6bb
[0x6bb:0x6c0]
---
Predecessors: [0x6b1, 0x6b8]
Successors: [0x6c1, 0x74d]
---
0x6bb JUMPDEST
0x6bc ISZERO
0x6bd PUSH2 0x74d
0x6c0 JUMPI
---
0x6bb: JUMPDEST 
0x6bc: V591 = ISZERO S0
0x6bd: V592 = 0x74d
0x6c0: JUMPI 0x74d V591
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, V571, V577, V582, V584, V586, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, V571, V577, V582, V584, V586]

================================

Block 0x6c1
[0x6c1:0x74c]
---
Predecessors: [0x6bb]
Successors: [0x752]
---
0x6c1 PUSH1 0x1
0x6c3 PUSH1 0xa0
0x6c5 PUSH1 0x2
0x6c7 EXP
0x6c8 SUB
0x6c9 DUP1
0x6ca DUP10
0x6cb AND
0x6cc PUSH1 0x0
0x6ce DUP2
0x6cf DUP2
0x6d0 MSTORE
0x6d1 PUSH1 0x1
0x6d3 PUSH1 0x20
0x6d5 SWAP1
0x6d6 DUP2
0x6d7 MSTORE
0x6d8 PUSH1 0x40
0x6da DUP1
0x6db DUP4
0x6dc SHA3
0x6dd DUP1
0x6de SLOAD
0x6df DUP14
0x6e0 ADD
0x6e1 SWAP1
0x6e2 SSTORE
0x6e3 DUP14
0x6e4 DUP6
0x6e5 AND
0x6e6 DUP1
0x6e7 DUP5
0x6e8 MSTORE
0x6e9 DUP2
0x6ea DUP5
0x6eb SHA3
0x6ec DUP1
0x6ed SLOAD
0x6ee DUP15
0x6ef SWAP1
0x6f0 SUB
0x6f1 SWAP1
0x6f2 SSTORE
0x6f3 PUSH1 0x2
0x6f5 DUP4
0x6f6 MSTORE
0x6f7 DUP2
0x6f8 DUP5
0x6f9 SHA3
0x6fa CALLER
0x6fb SWAP1
0x6fc SWAP7
0x6fd AND
0x6fe DUP5
0x6ff MSTORE
0x700 SWAP5
0x701 SWAP1
0x702 SWAP2
0x703 MSTORE
0x704 SWAP1
0x705 DUP2
0x706 SWAP1
0x707 SHA3
0x708 DUP1
0x709 SLOAD
0x70a DUP12
0x70b SWAP1
0x70c SUB
0x70d SWAP1
0x70e SSTORE
0x70f SWAP1
0x710 SWAP2
0x711 SWAP1
0x712 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x733 SWAP1
0x734 DUP11
0x735 SWAP1
0x736 MLOAD
0x737 SWAP1
0x738 DUP2
0x739 MSTORE
0x73a PUSH1 0x20
0x73c ADD
0x73d PUSH1 0x40
0x73f MLOAD
0x740 DUP1
0x741 SWAP2
0x742 SUB
0x743 SWAP1
0x744 LOG3
0x745 PUSH1 0x1
0x747 SWAP6
0x748 POP
0x749 PUSH2 0x752
0x74c JUMP
---
0x6c1: V593 = 0x1
0x6c3: V594 = 0xa0
0x6c5: V595 = 0x2
0x6c7: V596 = EXP 0x2 0xa0
0x6c8: V597 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cb: V598 = AND V249 0xffffffffffffffffffffffffffffffffffffffff
0x6cc: V599 = 0x0
0x6d0: M[0x0] = V598
0x6d1: V600 = 0x1
0x6d3: V601 = 0x20
0x6d7: M[0x20] = 0x1
0x6d8: V602 = 0x40
0x6dc: V603 = SHA3 0x0 0x40
0x6de: V604 = S[V603]
0x6e0: V605 = ADD V251 V604
0x6e2: S[V603] = V605
0x6e5: V606 = AND 0xffffffffffffffffffffffffffffffffffffffff V246
0x6e8: M[0x0] = V606
0x6eb: V607 = SHA3 0x0 0x40
0x6ed: V608 = S[V607]
0x6f0: V609 = SUB V608 V251
0x6f2: S[V607] = V609
0x6f3: V610 = 0x2
0x6f6: M[0x20] = 0x2
0x6f9: V611 = SHA3 0x0 0x40
0x6fa: V612 = CALLER
0x6fd: V613 = AND 0xffffffffffffffffffffffffffffffffffffffff V612
0x6ff: M[0x0] = V613
0x703: M[0x20] = V611
0x707: V614 = SHA3 0x0 0x40
0x709: V615 = S[V614]
0x70c: V616 = SUB V615 V251
0x70e: S[V614] = V616
0x712: V617 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x736: V618 = M[0x40]
0x739: M[V618] = V251
0x73a: V619 = 0x20
0x73c: V620 = ADD 0x20 V618
0x73d: V621 = 0x40
0x73f: V622 = M[0x40]
0x742: V623 = SUB V620 V622
0x744: LOG V622 V623 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V606 V598
0x745: V624 = 0x1
0x749: V625 = 0x752
0x74c: JUMP 0x752
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, V571, V577, V582, V584, V586]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x254, V246, V249, V251, 0x1, V571, V577, V582, V584, V586]

================================

Block 0x74d
[0x74d:0x751]
---
Predecessors: [0x6bb]
Successors: [0x752]
---
0x74d JUMPDEST
0x74e PUSH1 0x0
0x750 SWAP6
0x751 POP
---
0x74d: JUMPDEST 
0x74e: V626 = 0x0
---
Entry stack: [V12, 0x254, V246, V249, V251, 0x0, V571, V577, V582, V584, V586]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V12, 0x254, V246, V249, V251, 0x0, V571, V577, V582, V584, V586]

================================

Block 0x752
[0x752:0x752]
---
Predecessors: [0x64a, 0x6c1, 0x74d]
Successors: [0x753]
---
0x752 JUMPDEST
---
0x752: JUMPDEST 
---
Entry stack: [V12, 0x254, V246, V249, V251, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V246, V249, V251, {0x0, 0x1}, S4, S3, S2, S1, S0]

================================

Block 0x753
[0x753:0x75e]
---
Predecessors: [0x752]
Successors: [0x254]
---
0x753 JUMPDEST
0x754 POP
0x755 POP
0x756 POP
0x757 POP
0x758 POP
0x759 SWAP4
0x75a SWAP3
0x75b POP
0x75c POP
0x75d POP
0x75e JUMP
---
0x753: JUMPDEST 
0x75e: JUMP 0x254
---
Entry stack: [V12, 0x254, V246, V249, V251, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S5]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x75f
[0x75f:0x761]
---
Predecessors: [0x2f9]
Successors: [0x762]
---
0x75f JUMPDEST
0x760 PUSH1 0x12
---
0x75f: JUMPDEST 
0x760: V627 = 0x12
---
Entry stack: [V12, 0x301]
Stack pops: 0
Stack additions: [0x12]
Exit stack: [V12, 0x301, 0x12]

================================

Block 0x762
[0x762:0x764]
---
Predecessors: [0x75f]
Successors: [0x301]
---
0x762 JUMPDEST
0x763 SWAP1
0x764 JUMP
---
0x762: JUMPDEST 
0x764: JUMP 0x301
---
Entry stack: [V12, 0x301, 0x12]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x12]

================================

Block 0x765
[0x765:0x77b]
---
Predecessors: [0x322]
Successors: [0x77c, 0x780]
---
0x765 JUMPDEST
0x766 PUSH1 0x0
0x768 SLOAD
0x769 CALLER
0x76a PUSH1 0x1
0x76c PUSH1 0xa0
0x76e PUSH1 0x2
0x770 EXP
0x771 SUB
0x772 SWAP1
0x773 DUP2
0x774 AND
0x775 SWAP2
0x776 AND
0x777 EQ
0x778 PUSH2 0x780
0x77b JUMPI
---
0x765: JUMPDEST 
0x766: V628 = 0x0
0x768: V629 = S[0x0]
0x769: V630 = CALLER
0x76a: V631 = 0x1
0x76c: V632 = 0xa0
0x76e: V633 = 0x2
0x770: V634 = EXP 0x2 0xa0
0x771: V635 = SUB 0x10000000000000000000000000000000000000000 0x1
0x774: V636 = AND 0xffffffffffffffffffffffffffffffffffffffff V630
0x776: V637 = AND V629 0xffffffffffffffffffffffffffffffffffffffff
0x777: V638 = EQ V637 V636
0x778: V639 = 0x780
0x77b: JUMPI 0x780 V638
---
Entry stack: [V12, 0x1a5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5]

================================

Block 0x77c
[0x77c:0x77f]
---
Predecessors: [0x765]
Successors: []
---
0x77c PUSH1 0x0
0x77e DUP1
0x77f REVERT
---
0x77c: V640 = 0x0
0x77f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1a5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5]

================================

Block 0x780
[0x780:0x79e]
---
Predecessors: [0x765]
Successors: [0x79f]
---
0x780 JUMPDEST
0x781 PUSH1 0x0
0x783 DUP1
0x784 SLOAD
0x785 PUSH21 0xff0000000000000000000000000000000000000000
0x79b NOT
0x79c AND
0x79d SWAP1
0x79e SSTORE
---
0x780: JUMPDEST 
0x781: V641 = 0x0
0x784: V642 = S[0x0]
0x785: V643 = 0xff0000000000000000000000000000000000000000
0x79b: V644 = NOT 0xff0000000000000000000000000000000000000000
0x79c: V645 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V642
0x79e: S[0x0] = V645
---
Entry stack: [V12, 0x1a5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5]

================================

Block 0x79f
[0x79f:0x7a0]
---
Predecessors: [0x780]
Successors: [0x1a5]
---
0x79f JUMPDEST
0x7a0 JUMP
---
0x79f: JUMPDEST 
0x7a0: JUMP 0x1a5
---
Entry stack: [V12, 0x1a5]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x7a1
[0x7a1:0x7ba]
---
Predecessors: [0x337]
Successors: [0x7bb]
---
0x7a1 JUMPDEST
0x7a2 PUSH1 0x1
0x7a4 PUSH1 0xa0
0x7a6 PUSH1 0x2
0x7a8 EXP
0x7a9 SUB
0x7aa DUP2
0x7ab AND
0x7ac PUSH1 0x0
0x7ae SWAP1
0x7af DUP2
0x7b0 MSTORE
0x7b1 PUSH1 0x1
0x7b3 PUSH1 0x20
0x7b5 MSTORE
0x7b6 PUSH1 0x40
0x7b8 SWAP1
0x7b9 SHA3
0x7ba SLOAD
---
0x7a1: JUMPDEST 
0x7a2: V646 = 0x1
0x7a4: V647 = 0xa0
0x7a6: V648 = 0x2
0x7a8: V649 = EXP 0x2 0xa0
0x7a9: V650 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7ab: V651 = AND V295 0xffffffffffffffffffffffffffffffffffffffff
0x7ac: V652 = 0x0
0x7b0: M[0x0] = V651
0x7b1: V653 = 0x1
0x7b3: V654 = 0x20
0x7b5: M[0x20] = 0x1
0x7b6: V655 = 0x40
0x7b9: V656 = SHA3 0x0 0x40
0x7ba: V657 = S[V656]
---
Entry stack: [V12, 0x27b, V295]
Stack pops: 1
Stack additions: [S0, V657]
Exit stack: [V12, 0x27b, V295, V657]

================================

Block 0x7bb
[0x7bb:0x7bf]
---
Predecessors: [0x7a1]
Successors: [0x27b]
---
0x7bb JUMPDEST
0x7bc SWAP2
0x7bd SWAP1
0x7be POP
0x7bf JUMP
---
0x7bb: JUMPDEST 
0x7bf: JUMP 0x27b
---
Entry stack: [V12, 0x27b, V295, V657]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V12, V657]

================================

Block 0x7c0
[0x7c0:0x7d6]
---
Predecessors: [0x368]
Successors: [0x7d7, 0x7db]
---
0x7c0 JUMPDEST
0x7c1 PUSH1 0x0
0x7c3 SLOAD
0x7c4 CALLER
0x7c5 PUSH1 0x1
0x7c7 PUSH1 0xa0
0x7c9 PUSH1 0x2
0x7cb EXP
0x7cc SUB
0x7cd SWAP1
0x7ce DUP2
0x7cf AND
0x7d0 SWAP2
0x7d1 AND
0x7d2 EQ
0x7d3 PUSH2 0x7db
0x7d6 JUMPI
---
0x7c0: JUMPDEST 
0x7c1: V658 = 0x0
0x7c3: V659 = S[0x0]
0x7c4: V660 = CALLER
0x7c5: V661 = 0x1
0x7c7: V662 = 0xa0
0x7c9: V663 = 0x2
0x7cb: V664 = EXP 0x2 0xa0
0x7cc: V665 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7cf: V666 = AND 0xffffffffffffffffffffffffffffffffffffffff V660
0x7d1: V667 = AND V659 0xffffffffffffffffffffffffffffffffffffffff
0x7d2: V668 = EQ V667 V666
0x7d3: V669 = 0x7db
0x7d6: JUMPI 0x7db V668
---
Entry stack: [V12, 0x1a5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5]

================================

Block 0x7d7
[0x7d7:0x7da]
---
Predecessors: [0x7c0]
Successors: []
---
0x7d7 PUSH1 0x0
0x7d9 DUP1
0x7da REVERT
---
0x7d7: V670 = 0x0
0x7da: REVERT 0x0 0x0
---
Entry stack: [V12, 0x1a5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5]

================================

Block 0x7db
[0x7db:0x7ff]
---
Predecessors: [0x7c0]
Successors: [0x800]
---
0x7db JUMPDEST
0x7dc PUSH1 0x0
0x7de DUP1
0x7df SLOAD
0x7e0 PUSH21 0xff0000000000000000000000000000000000000000
0x7f6 NOT
0x7f7 AND
0x7f8 PUSH1 0xa0
0x7fa PUSH1 0x2
0x7fc EXP
0x7fd OR
0x7fe SWAP1
0x7ff SSTORE
---
0x7db: JUMPDEST 
0x7dc: V671 = 0x0
0x7df: V672 = S[0x0]
0x7e0: V673 = 0xff0000000000000000000000000000000000000000
0x7f6: V674 = NOT 0xff0000000000000000000000000000000000000000
0x7f7: V675 = AND 0xffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff V672
0x7f8: V676 = 0xa0
0x7fa: V677 = 0x2
0x7fc: V678 = EXP 0x2 0xa0
0x7fd: V679 = OR 0x10000000000000000000000000000000000000000 V675
0x7ff: S[0x0] = V679
---
Entry stack: [V12, 0x1a5]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x1a5]

================================

Block 0x800
[0x800:0x801]
---
Predecessors: [0x7db]
Successors: [0x1a5]
---
0x800 JUMPDEST
0x801 JUMP
---
0x800: JUMPDEST 
0x801: JUMP 0x1a5
---
Entry stack: [V12, 0x1a5]
Stack pops: 1
Stack additions: []
Exit stack: [V12]

================================

Block 0x802
[0x802:0x809]
---
Predecessors: [0x37d]
Successors: [0xab4]
---
0x802 JUMPDEST
0x803 PUSH2 0x80a
0x806 PUSH2 0xab4
0x809 JUMP
---
0x802: JUMPDEST 
0x803: V680 = 0x80a
0x806: V681 = 0xab4
0x809: JUMP 0xab4
---
Entry stack: [V12, 0x1ba]
Stack pops: 0
Stack additions: [0x80a]
Exit stack: [V12, 0x1ba, 0x80a]

================================

Block 0x80a
[0x80a:0x840]
---
Predecessors: [0xab4]
Successors: [0x841]
---
0x80a JUMPDEST
0x80b PUSH1 0x40
0x80d DUP1
0x80e MLOAD
0x80f SWAP1
0x810 DUP2
0x811 ADD
0x812 PUSH1 0x40
0x814 MSTORE
0x815 PUSH1 0x4
0x817 DUP2
0x818 MSTORE
0x819 PUSH32 0x5052535400000000000000000000000000000000000000000000000000000000
0x83a PUSH1 0x20
0x83c DUP3
0x83d ADD
0x83e MSTORE
0x83f SWAP1
0x840 POP
---
0x80a: JUMPDEST 
0x80b: V682 = 0x40
0x80e: V683 = M[0x40]
0x811: V684 = ADD V683 0x40
0x812: V685 = 0x40
0x814: M[0x40] = V684
0x815: V686 = 0x4
0x818: M[V683] = 0x4
0x819: V687 = 0x5052535400000000000000000000000000000000000000000000000000000000
0x83a: V688 = 0x20
0x83d: V689 = ADD V683 0x20
0x83e: M[V689] = 0x5052535400000000000000000000000000000000000000000000000000000000
---
Entry stack: [V12, 0x1ba, V923]
Stack pops: 1
Stack additions: [V683]
Exit stack: [V12, 0x1ba, V683]

================================

Block 0x841
[0x841:0x843]
---
Predecessors: [0x80a]
Successors: [0x1ba]
---
0x841 JUMPDEST
0x842 SWAP1
0x843 JUMP
---
0x841: JUMPDEST 
0x843: JUMP 0x1ba
---
Entry stack: [V12, 0x1ba, V683]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, V683]

================================

Block 0x844
[0x844:0x852]
---
Predecessors: [0x408]
Successors: [0x853, 0x857]
---
0x844 JUMPDEST
0x845 PUSH1 0x0
0x847 DUP1
0x848 DUP1
0x849 DUP1
0x84a PUSH1 0x44
0x84c CALLDATASIZE
0x84d LT
0x84e ISZERO
0x84f PUSH2 0x857
0x852 JUMPI
---
0x844: JUMPDEST 
0x845: V690 = 0x0
0x84a: V691 = 0x44
0x84c: V692 = CALLDATASIZE
0x84d: V693 = LT V692 0x44
0x84e: V694 = ISZERO V693
0x84f: V695 = 0x857
0x852: JUMPI 0x857 V694
---
Entry stack: [V12, 0x254, V368, V370]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x853
[0x853:0x856]
---
Predecessors: [0x844]
Successors: []
---
0x853 PUSH1 0x0
0x855 DUP1
0x856 REVERT
---
0x853: V696 = 0x0
0x856: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x857
[0x857:0x86d]
---
Predecessors: [0x844]
Successors: [0x86e, 0x872]
---
0x857 JUMPDEST
0x858 PUSH1 0x0
0x85a SLOAD
0x85b CALLER
0x85c PUSH1 0x1
0x85e PUSH1 0xa0
0x860 PUSH1 0x2
0x862 EXP
0x863 SUB
0x864 SWAP1
0x865 DUP2
0x866 AND
0x867 SWAP2
0x868 AND
0x869 EQ
0x86a PUSH2 0x872
0x86d JUMPI
---
0x857: JUMPDEST 
0x858: V697 = 0x0
0x85a: V698 = S[0x0]
0x85b: V699 = CALLER
0x85c: V700 = 0x1
0x85e: V701 = 0xa0
0x860: V702 = 0x2
0x862: V703 = EXP 0x2 0xa0
0x863: V704 = SUB 0x10000000000000000000000000000000000000000 0x1
0x866: V705 = AND 0xffffffffffffffffffffffffffffffffffffffff V699
0x868: V706 = AND V698 0xffffffffffffffffffffffffffffffffffffffff
0x869: V707 = EQ V706 V705
0x86a: V708 = 0x872
0x86d: JUMPI 0x872 V707
---
Entry stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x86e
[0x86e:0x871]
---
Predecessors: [0x857]
Successors: []
---
0x86e PUSH1 0x0
0x870 DUP1
0x871 REVERT
---
0x86e: V709 = 0x0
0x871: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x872
[0x872:0x879]
---
Predecessors: [0x857]
Successors: [0x87a, 0x882]
---
0x872 JUMPDEST
0x873 DUP5
0x874 ISZERO
0x875 ISZERO
0x876 PUSH2 0x882
0x879 JUMPI
---
0x872: JUMPDEST 
0x874: V710 = ISZERO V370
0x875: V711 = ISZERO V710
0x876: V712 = 0x882
0x879: JUMPI 0x882 V711
---
Entry stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x87a
[0x87a:0x881]
---
Predecessors: [0x872]
Successors: [0x935]
---
0x87a PUSH1 0x0
0x87c SWAP4
0x87d POP
0x87e PUSH2 0x935
0x881 JUMP
---
0x87a: V713 = 0x0
0x87e: V714 = 0x935
0x881: JUMP 0x935
---
Entry stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x882
[0x882:0x8b9]
---
Predecessors: [0x872]
Successors: [0x8ba, 0x8bd]
---
0x882 JUMPDEST
0x883 POP
0x884 POP
0x885 POP
0x886 PUSH1 0x1
0x888 PUSH1 0xa0
0x88a PUSH1 0x2
0x88c EXP
0x88d SUB
0x88e CALLER
0x88f DUP2
0x890 AND
0x891 PUSH1 0x0
0x893 SWAP1
0x894 DUP2
0x895 MSTORE
0x896 PUSH1 0x1
0x898 PUSH1 0x20
0x89a MSTORE
0x89b PUSH1 0x40
0x89d DUP1
0x89e DUP3
0x89f SHA3
0x8a0 SLOAD
0x8a1 SWAP3
0x8a2 DUP7
0x8a3 AND
0x8a4 DUP3
0x8a5 MSTORE
0x8a6 SWAP1
0x8a7 SHA3
0x8a8 SLOAD
0x8a9 DUP4
0x8aa DUP3
0x8ab LT
0x8ac DUP1
0x8ad ISZERO
0x8ae SWAP2
0x8af DUP1
0x8b0 DUP7
0x8b1 ADD
0x8b2 LT
0x8b3 SWAP1
0x8b4 DUP3
0x8b5 SWAP1
0x8b6 PUSH2 0x8bd
0x8b9 JUMPI
---
0x882: JUMPDEST 
0x886: V715 = 0x1
0x888: V716 = 0xa0
0x88a: V717 = 0x2
0x88c: V718 = EXP 0x2 0xa0
0x88d: V719 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88e: V720 = CALLER
0x890: V721 = AND 0xffffffffffffffffffffffffffffffffffffffff V720
0x891: V722 = 0x0
0x895: M[0x0] = V721
0x896: V723 = 0x1
0x898: V724 = 0x20
0x89a: M[0x20] = 0x1
0x89b: V725 = 0x40
0x89f: V726 = SHA3 0x0 0x40
0x8a0: V727 = S[V726]
0x8a3: V728 = AND V368 0xffffffffffffffffffffffffffffffffffffffff
0x8a5: M[0x0] = V728
0x8a7: V729 = SHA3 0x0 0x40
0x8a8: V730 = S[V729]
0x8ab: V731 = LT V727 V370
0x8ad: V732 = ISZERO V731
0x8b1: V733 = ADD V370 V730
0x8b2: V734 = LT V733 V730
0x8b6: V735 = 0x8bd
0x8b9: JUMPI 0x8bd V731
---
Entry stack: [V12, 0x254, V368, V370, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V727, V732, V734, V732]
Exit stack: [V12, 0x254, V368, V370, 0x0, V727, V732, V734, V732]

================================

Block 0x8ba
[0x8ba:0x8bc]
---
Predecessors: [0x882]
Successors: [0x8bd]
---
0x8ba POP
0x8bb DUP1
0x8bc ISZERO
---
0x8bc: V736 = ISZERO V734
---
Entry stack: [V12, 0x254, V368, V370, 0x0, V727, V732, V734, V732]
Stack pops: 2
Stack additions: [S1, V736]
Exit stack: [V12, 0x254, V368, V370, 0x0, V727, V732, V734, V736]

================================

Block 0x8bd
[0x8bd:0x8c2]
---
Predecessors: [0x882, 0x8ba]
Successors: [0x8c3, 0x930]
---
0x8bd JUMPDEST
0x8be ISZERO
0x8bf PUSH2 0x930
0x8c2 JUMPI
---
0x8bd: JUMPDEST 
0x8be: V737 = ISZERO S0
0x8bf: V738 = 0x930
0x8c2: JUMPI 0x930 V737
---
Entry stack: [V12, 0x254, V368, V370, 0x0, V727, V732, V734, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x254, V368, V370, 0x0, V727, V732, V734]

================================

Block 0x8c3
[0x8c3:0x92f]
---
Predecessors: [0x8bd]
Successors: [0x935]
---
0x8c3 PUSH1 0x1
0x8c5 PUSH1 0xa0
0x8c7 PUSH1 0x2
0x8c9 EXP
0x8ca SUB
0x8cb CALLER
0x8cc DUP2
0x8cd AND
0x8ce PUSH1 0x0
0x8d0 DUP2
0x8d1 DUP2
0x8d2 MSTORE
0x8d3 PUSH1 0x1
0x8d5 PUSH1 0x20
0x8d7 MSTORE
0x8d8 PUSH1 0x40
0x8da DUP1
0x8db DUP3
0x8dc SHA3
0x8dd DUP1
0x8de SLOAD
0x8df DUP11
0x8e0 SWAP1
0x8e1 SUB
0x8e2 SWAP1
0x8e3 SSTORE
0x8e4 SWAP3
0x8e5 DUP10
0x8e6 AND
0x8e7 DUP1
0x8e8 DUP3
0x8e9 MSTORE
0x8ea SWAP1
0x8eb DUP4
0x8ec SWAP1
0x8ed SHA3
0x8ee DUP1
0x8ef SLOAD
0x8f0 DUP10
0x8f1 ADD
0x8f2 SWAP1
0x8f3 SSTORE
0x8f4 SWAP2
0x8f5 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x916 SWAP1
0x917 DUP9
0x918 SWAP1
0x919 MLOAD
0x91a SWAP1
0x91b DUP2
0x91c MSTORE
0x91d PUSH1 0x20
0x91f ADD
0x920 PUSH1 0x40
0x922 MLOAD
0x923 DUP1
0x924 SWAP2
0x925 SUB
0x926 SWAP1
0x927 LOG3
0x928 PUSH1 0x1
0x92a SWAP4
0x92b POP
0x92c PUSH2 0x935
0x92f JUMP
---
0x8c3: V739 = 0x1
0x8c5: V740 = 0xa0
0x8c7: V741 = 0x2
0x8c9: V742 = EXP 0x2 0xa0
0x8ca: V743 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8cb: V744 = CALLER
0x8cd: V745 = AND 0xffffffffffffffffffffffffffffffffffffffff V744
0x8ce: V746 = 0x0
0x8d2: M[0x0] = V745
0x8d3: V747 = 0x1
0x8d5: V748 = 0x20
0x8d7: M[0x20] = 0x1
0x8d8: V749 = 0x40
0x8dc: V750 = SHA3 0x0 0x40
0x8de: V751 = S[V750]
0x8e1: V752 = SUB V751 V370
0x8e3: S[V750] = V752
0x8e6: V753 = AND V368 0xffffffffffffffffffffffffffffffffffffffff
0x8e9: M[0x0] = V753
0x8ed: V754 = SHA3 0x0 0x40
0x8ef: V755 = S[V754]
0x8f1: V756 = ADD V370 V755
0x8f3: S[V754] = V756
0x8f5: V757 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x919: V758 = M[0x40]
0x91c: M[V758] = V370
0x91d: V759 = 0x20
0x91f: V760 = ADD 0x20 V758
0x920: V761 = 0x40
0x922: V762 = M[0x40]
0x925: V763 = SUB V760 V762
0x927: LOG V762 V763 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V745 V753
0x928: V764 = 0x1
0x92c: V765 = 0x935
0x92f: JUMP 0x935
---
Entry stack: [V12, 0x254, V368, V370, 0x0, V727, V732, V734]
Stack pops: 6
Stack additions: [S5, S4, 0x1, S2, S1, S0]
Exit stack: [V12, 0x254, V368, V370, 0x1, V727, V732, V734]

================================

Block 0x930
[0x930:0x934]
---
Predecessors: [0x8bd]
Successors: [0x935]
---
0x930 JUMPDEST
0x931 PUSH1 0x0
0x933 SWAP4
0x934 POP
---
0x930: JUMPDEST 
0x931: V766 = 0x0
---
Entry stack: [V12, 0x254, V368, V370, 0x0, V727, V732, V734]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V12, 0x254, V368, V370, 0x0, V727, V732, V734]

================================

Block 0x935
[0x935:0x935]
---
Predecessors: [0x87a, 0x8c3, 0x930]
Successors: [0x936]
---
0x935 JUMPDEST
---
0x935: JUMPDEST 
---
Entry stack: [V12, 0x254, V368, V370, {0x0, 0x1}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V368, V370, {0x0, 0x1}, S2, S1, S0]

================================

Block 0x936
[0x936:0x93e]
---
Predecessors: [0x935]
Successors: [0x254]
---
0x936 JUMPDEST
0x937 POP
0x938 POP
0x939 POP
0x93a SWAP3
0x93b SWAP2
0x93c POP
0x93d POP
0x93e JUMP
---
0x936: JUMPDEST 
0x93e: JUMP 0x254
---
Entry stack: [V12, 0x254, V368, V370, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V12, {0x0, 0x1}]

================================

Block 0x93f
[0x93f:0x952]
---
Predecessors: [0x43e]
Successors: [0x953]
---
0x93f JUMPDEST
0x940 PUSH1 0x3
0x942 SLOAD
0x943 PUSH1 0x4
0x945 SLOAD
0x946 PUSH1 0x0
0x948 SLOAD
0x949 PUSH1 0xa0
0x94b PUSH1 0x2
0x94d EXP
0x94e SWAP1
0x94f DIV
0x950 PUSH1 0xff
0x952 AND
---
0x93f: JUMPDEST 
0x940: V767 = 0x3
0x942: V768 = S[0x3]
0x943: V769 = 0x4
0x945: V770 = S[0x4]
0x946: V771 = 0x0
0x948: V772 = S[0x0]
0x949: V773 = 0xa0
0x94b: V774 = 0x2
0x94d: V775 = EXP 0x2 0xa0
0x94f: V776 = DIV V772 0x10000000000000000000000000000000000000000
0x950: V777 = 0xff
0x952: V778 = AND 0xff V776
---
Entry stack: [V12, 0x446]
Stack pops: 0
Stack additions: [V768, V770, V778]
Exit stack: [V12, 0x446, V768, V770, V778]

================================

Block 0x953
[0x953:0x957]
---
Predecessors: [0x93f]
Successors: [0x446]
---
0x953 JUMPDEST
0x954 SWAP1
0x955 SWAP2
0x956 SWAP3
0x957 JUMP
---
0x953: JUMPDEST 
0x957: JUMP 0x446
---
Entry stack: [V12, 0x446, V768, V770, V778]
Stack pops: 4
Stack additions: [S2, S1, S0]
Exit stack: [V12, V768, V770, V778]

================================

Block 0x958
[0x958:0x967]
---
Predecessors: [0x477]
Successors: [0x254]
---
0x958 JUMPDEST
0x959 PUSH1 0x0
0x95b SLOAD
0x95c PUSH1 0xa0
0x95e PUSH1 0x2
0x960 EXP
0x961 SWAP1
0x962 DIV
0x963 PUSH1 0xff
0x965 AND
0x966 DUP2
0x967 JUMP
---
0x958: JUMPDEST 
0x959: V779 = 0x0
0x95b: V780 = S[0x0]
0x95c: V781 = 0xa0
0x95e: V782 = 0x2
0x960: V783 = EXP 0x2 0xa0
0x962: V784 = DIV V780 0x10000000000000000000000000000000000000000
0x963: V785 = 0xff
0x965: V786 = AND 0xff V784
0x967: JUMP 0x254
---
Entry stack: [V12, 0x254]
Stack pops: 1
Stack additions: [S0, V786]
Exit stack: [V12, 0x254, V786]

================================

Block 0x968
[0x968:0x98e]
---
Predecessors: [0x49e]
Successors: [0x98f]
---
0x968 JUMPDEST
0x969 PUSH1 0x1
0x96b PUSH1 0xa0
0x96d PUSH1 0x2
0x96f EXP
0x970 SUB
0x971 DUP1
0x972 DUP4
0x973 AND
0x974 PUSH1 0x0
0x976 SWAP1
0x977 DUP2
0x978 MSTORE
0x979 PUSH1 0x2
0x97b PUSH1 0x20
0x97d SWAP1
0x97e DUP2
0x97f MSTORE
0x980 PUSH1 0x40
0x982 DUP1
0x983 DUP4
0x984 SHA3
0x985 SWAP4
0x986 DUP6
0x987 AND
0x988 DUP4
0x989 MSTORE
0x98a SWAP3
0x98b SWAP1
0x98c MSTORE
0x98d SHA3
0x98e SLOAD
---
0x968: JUMPDEST 
0x969: V787 = 0x1
0x96b: V788 = 0xa0
0x96d: V789 = 0x2
0x96f: V790 = EXP 0x2 0xa0
0x970: V791 = SUB 0x10000000000000000000000000000000000000000 0x1
0x973: V792 = AND V426 0xffffffffffffffffffffffffffffffffffffffff
0x974: V793 = 0x0
0x978: M[0x0] = V792
0x979: V794 = 0x2
0x97b: V795 = 0x20
0x97f: M[0x20] = 0x2
0x980: V796 = 0x40
0x984: V797 = SHA3 0x0 0x40
0x987: V798 = AND V429 0xffffffffffffffffffffffffffffffffffffffff
0x989: M[0x0] = V798
0x98c: M[0x20] = V797
0x98d: V799 = SHA3 0x0 0x40
0x98e: V800 = S[V799]
---
Entry stack: [V12, 0x27b, V426, V429]
Stack pops: 2
Stack additions: [S1, S0, V800]
Exit stack: [V12, 0x27b, V426, V429, V800]

================================

Block 0x98f
[0x98f:0x994]
---
Predecessors: [0x968]
Successors: [0x27b]
---
0x98f JUMPDEST
0x990 SWAP3
0x991 SWAP2
0x992 POP
0x993 POP
0x994 JUMP
---
0x98f: JUMPDEST 
0x994: JUMP 0x27b
---
Entry stack: [V12, 0x27b, V426, V429, V800]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V12, V800]

================================

Block 0x995
[0x995:0x9b0]
---
Predecessors: [0x4d5]
Successors: [0x9b1, 0x9b5]
---
0x995 JUMPDEST
0x996 PUSH1 0x0
0x998 DUP1
0x999 SLOAD
0x99a DUP2
0x99b SWAP1
0x99c DUP2
0x99d SWAP1
0x99e CALLER
0x99f PUSH1 0x1
0x9a1 PUSH1 0xa0
0x9a3 PUSH1 0x2
0x9a5 EXP
0x9a6 SUB
0x9a7 SWAP1
0x9a8 DUP2
0x9a9 AND
0x9aa SWAP2
0x9ab AND
0x9ac EQ
0x9ad PUSH2 0x9b5
0x9b0 JUMPI
---
0x995: JUMPDEST 
0x996: V801 = 0x0
0x999: V802 = S[0x0]
0x99e: V803 = CALLER
0x99f: V804 = 0x1
0x9a1: V805 = 0xa0
0x9a3: V806 = 0x2
0x9a5: V807 = EXP 0x2 0xa0
0x9a6: V808 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9a9: V809 = AND 0xffffffffffffffffffffffffffffffffffffffff V803
0x9ab: V810 = AND V802 0xffffffffffffffffffffffffffffffffffffffff
0x9ac: V811 = EQ V810 V809
0x9ad: V812 = 0x9b5
0x9b0: JUMPI 0x9b5 V811
---
Entry stack: [V12, 0x254, V450]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V12, 0x254, V450, 0x0, 0x0, 0x0]

================================

Block 0x9b1
[0x9b1:0x9b4]
---
Predecessors: [0x995]
Successors: []
---
0x9b1 PUSH1 0x0
0x9b3 DUP1
0x9b4 REVERT
---
0x9b1: V813 = 0x0
0x9b4: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V450, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V450, 0x0, 0x0, 0x0]

================================

Block 0x9b5
[0x9b5:0xa0a]
---
Predecessors: [0x995]
Successors: [0xa0b, 0xa0f]
---
0x9b5 JUMPDEST
0x9b6 DUP4
0x9b7 SWAP2
0x9b8 POP
0x9b9 DUP2
0x9ba PUSH1 0x1
0x9bc PUSH1 0xa0
0x9be PUSH1 0x2
0x9c0 EXP
0x9c1 SUB
0x9c2 AND
0x9c3 PUSH4 0x70a08231
0x9c8 ADDRESS
0x9c9 PUSH1 0x0
0x9cb PUSH1 0x40
0x9cd MLOAD
0x9ce PUSH1 0x20
0x9d0 ADD
0x9d1 MSTORE
0x9d2 PUSH1 0x40
0x9d4 MLOAD
0x9d5 PUSH1 0xe0
0x9d7 PUSH1 0x2
0x9d9 EXP
0x9da PUSH4 0xffffffff
0x9df DUP5
0x9e0 AND
0x9e1 MUL
0x9e2 DUP2
0x9e3 MSTORE
0x9e4 PUSH1 0x1
0x9e6 PUSH1 0xa0
0x9e8 PUSH1 0x2
0x9ea EXP
0x9eb SUB
0x9ec SWAP1
0x9ed SWAP2
0x9ee AND
0x9ef PUSH1 0x4
0x9f1 DUP3
0x9f2 ADD
0x9f3 MSTORE
0x9f4 PUSH1 0x24
0x9f6 ADD
0x9f7 PUSH1 0x20
0x9f9 PUSH1 0x40
0x9fb MLOAD
0x9fc DUP1
0x9fd DUP4
0x9fe SUB
0x9ff DUP2
0xa00 PUSH1 0x0
0xa02 DUP8
0xa03 DUP1
0xa04 EXTCODESIZE
0xa05 ISZERO
0xa06 ISZERO
0xa07 PUSH2 0xa0f
0xa0a JUMPI
---
0x9b5: JUMPDEST 
0x9ba: V814 = 0x1
0x9bc: V815 = 0xa0
0x9be: V816 = 0x2
0x9c0: V817 = EXP 0x2 0xa0
0x9c1: V818 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9c2: V819 = AND 0xffffffffffffffffffffffffffffffffffffffff V450
0x9c3: V820 = 0x70a08231
0x9c8: V821 = ADDRESS
0x9c9: V822 = 0x0
0x9cb: V823 = 0x40
0x9cd: V824 = M[0x40]
0x9ce: V825 = 0x20
0x9d0: V826 = ADD 0x20 V824
0x9d1: M[V826] = 0x0
0x9d2: V827 = 0x40
0x9d4: V828 = M[0x40]
0x9d5: V829 = 0xe0
0x9d7: V830 = 0x2
0x9d9: V831 = EXP 0x2 0xe0
0x9da: V832 = 0xffffffff
0x9e0: V833 = AND 0x70a08231 0xffffffff
0x9e1: V834 = MUL 0x70a08231 0x100000000000000000000000000000000000000000000000000000000
0x9e3: M[V828] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x9e4: V835 = 0x1
0x9e6: V836 = 0xa0
0x9e8: V837 = 0x2
0x9ea: V838 = EXP 0x2 0xa0
0x9eb: V839 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9ee: V840 = AND V821 0xffffffffffffffffffffffffffffffffffffffff
0x9ef: V841 = 0x4
0x9f2: V842 = ADD V828 0x4
0x9f3: M[V842] = V840
0x9f4: V843 = 0x24
0x9f6: V844 = ADD 0x24 V828
0x9f7: V845 = 0x20
0x9f9: V846 = 0x40
0x9fb: V847 = M[0x40]
0x9fe: V848 = SUB V844 V847
0xa00: V849 = 0x0
0xa04: V850 = EXTCODESIZE V819
0xa05: V851 = ISZERO V850
0xa06: V852 = ISZERO V851
0xa07: V853 = 0xa0f
0xa0a: JUMPI 0xa0f V852
---
Entry stack: [V12, 0x254, V450, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V819, 0x70a08231, V844, 0x20, V847, V848, V847, 0x0, V819]
Exit stack: [V12, 0x254, V450, 0x0, V450, 0x0, V819, 0x70a08231, V844, 0x20, V847, V848, V847, 0x0, V819]

================================

Block 0xa0b
[0xa0b:0xa0e]
---
Predecessors: [0x9b5]
Successors: []
---
0xa0b PUSH1 0x0
0xa0d DUP1
0xa0e REVERT
---
0xa0b: V854 = 0x0
0xa0e: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V450, 0x0, V450, 0x0, V819, 0x70a08231, V844, 0x20, V847, V848, V847, 0x0, V819]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V450, 0x0, V450, 0x0, V819, 0x70a08231, V844, 0x20, V847, V848, V847, 0x0, V819]

================================

Block 0xa0f
[0xa0f:0xa1b]
---
Predecessors: [0x9b5]
Successors: [0xa1c, 0xa20]
---
0xa0f JUMPDEST
0xa10 PUSH2 0x2c6
0xa13 GAS
0xa14 SUB
0xa15 CALL
0xa16 ISZERO
0xa17 ISZERO
0xa18 PUSH2 0xa20
0xa1b JUMPI
---
0xa0f: JUMPDEST 
0xa10: V855 = 0x2c6
0xa13: V856 = GAS
0xa14: V857 = SUB V856 0x2c6
0xa15: V858 = CALL V857 V819 0x0 V847 V848 V847 0x20
0xa16: V859 = ISZERO V858
0xa17: V860 = ISZERO V859
0xa18: V861 = 0xa20
0xa1b: JUMPI 0xa20 V860
---
Entry stack: [V12, 0x254, V450, 0x0, V450, 0x0, V819, 0x70a08231, V844, 0x20, V847, V848, V847, 0x0, V819]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x254, V450, 0x0, V450, 0x0, V819, 0x70a08231, V844]

================================

Block 0xa1c
[0xa1c:0xa1f]
---
Predecessors: [0xa0f]
Successors: []
---
0xa1c PUSH1 0x0
0xa1e DUP1
0xa1f REVERT
---
0xa1c: V862 = 0x0
0xa1f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V450, 0x0, V450, 0x0, V819, 0x70a08231, V844]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V450, 0x0, V450, 0x0, V819, 0x70a08231, V844]

================================

Block 0xa20
[0xa20:0xa8b]
---
Predecessors: [0xa0f]
Successors: [0xa8c, 0xa90]
---
0xa20 JUMPDEST
0xa21 POP
0xa22 POP
0xa23 POP
0xa24 PUSH1 0x40
0xa26 MLOAD
0xa27 DUP1
0xa28 MLOAD
0xa29 PUSH1 0x0
0xa2b DUP1
0xa2c SLOAD
0xa2d SWAP2
0xa2e SWAP4
0xa2f POP
0xa30 PUSH1 0x1
0xa32 PUSH1 0xa0
0xa34 PUSH1 0x2
0xa36 EXP
0xa37 SUB
0xa38 DUP1
0xa39 DUP7
0xa3a AND
0xa3b SWAP4
0xa3c POP
0xa3d PUSH4 0xa9059cbb
0xa42 SWAP3
0xa43 AND
0xa44 SWAP1
0xa45 DUP5
0xa46 SWAP1
0xa47 PUSH1 0x40
0xa49 MLOAD
0xa4a PUSH1 0x20
0xa4c ADD
0xa4d MSTORE
0xa4e PUSH1 0x40
0xa50 MLOAD
0xa51 PUSH1 0xe0
0xa53 PUSH1 0x2
0xa55 EXP
0xa56 PUSH4 0xffffffff
0xa5b DUP6
0xa5c AND
0xa5d MUL
0xa5e DUP2
0xa5f MSTORE
0xa60 PUSH1 0x1
0xa62 PUSH1 0xa0
0xa64 PUSH1 0x2
0xa66 EXP
0xa67 SUB
0xa68 SWAP1
0xa69 SWAP3
0xa6a AND
0xa6b PUSH1 0x4
0xa6d DUP4
0xa6e ADD
0xa6f MSTORE
0xa70 PUSH1 0x24
0xa72 DUP3
0xa73 ADD
0xa74 MSTORE
0xa75 PUSH1 0x44
0xa77 ADD
0xa78 PUSH1 0x20
0xa7a PUSH1 0x40
0xa7c MLOAD
0xa7d DUP1
0xa7e DUP4
0xa7f SUB
0xa80 DUP2
0xa81 PUSH1 0x0
0xa83 DUP8
0xa84 DUP1
0xa85 EXTCODESIZE
0xa86 ISZERO
0xa87 ISZERO
0xa88 PUSH2 0xa90
0xa8b JUMPI
---
0xa20: JUMPDEST 
0xa24: V863 = 0x40
0xa26: V864 = M[0x40]
0xa28: V865 = M[V864]
0xa29: V866 = 0x0
0xa2c: V867 = S[0x0]
0xa30: V868 = 0x1
0xa32: V869 = 0xa0
0xa34: V870 = 0x2
0xa36: V871 = EXP 0x2 0xa0
0xa37: V872 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa3a: V873 = AND V450 0xffffffffffffffffffffffffffffffffffffffff
0xa3d: V874 = 0xa9059cbb
0xa43: V875 = AND V867 0xffffffffffffffffffffffffffffffffffffffff
0xa47: V876 = 0x40
0xa49: V877 = M[0x40]
0xa4a: V878 = 0x20
0xa4c: V879 = ADD 0x20 V877
0xa4d: M[V879] = 0x0
0xa4e: V880 = 0x40
0xa50: V881 = M[0x40]
0xa51: V882 = 0xe0
0xa53: V883 = 0x2
0xa55: V884 = EXP 0x2 0xe0
0xa56: V885 = 0xffffffff
0xa5c: V886 = AND 0xa9059cbb 0xffffffff
0xa5d: V887 = MUL 0xa9059cbb 0x100000000000000000000000000000000000000000000000000000000
0xa5f: M[V881] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa60: V888 = 0x1
0xa62: V889 = 0xa0
0xa64: V890 = 0x2
0xa66: V891 = EXP 0x2 0xa0
0xa67: V892 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa6a: V893 = AND V875 0xffffffffffffffffffffffffffffffffffffffff
0xa6b: V894 = 0x4
0xa6e: V895 = ADD V881 0x4
0xa6f: M[V895] = V893
0xa70: V896 = 0x24
0xa73: V897 = ADD V881 0x24
0xa74: M[V897] = V865
0xa75: V898 = 0x44
0xa77: V899 = ADD 0x44 V881
0xa78: V900 = 0x20
0xa7a: V901 = 0x40
0xa7c: V902 = M[0x40]
0xa7f: V903 = SUB V899 V902
0xa81: V904 = 0x0
0xa85: V905 = EXTCODESIZE V873
0xa86: V906 = ISZERO V905
0xa87: V907 = ISZERO V906
0xa88: V908 = 0xa90
0xa8b: JUMPI 0xa90 V907
---
Entry stack: [V12, 0x254, V450, 0x0, V450, 0x0, V819, 0x70a08231, V844]
Stack pops: 5
Stack additions: [S4, V865, V873, 0xa9059cbb, V899, 0x20, V902, V903, V902, 0x0, V873]
Exit stack: [V12, 0x254, V450, 0x0, V450, V865, V873, 0xa9059cbb, V899, 0x20, V902, V903, V902, 0x0, V873]

================================

Block 0xa8c
[0xa8c:0xa8f]
---
Predecessors: [0xa20]
Successors: []
---
0xa8c PUSH1 0x0
0xa8e DUP1
0xa8f REVERT
---
0xa8c: V909 = 0x0
0xa8f: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V450, 0x0, V450, V865, V873, 0xa9059cbb, V899, 0x20, V902, V903, V902, 0x0, V873]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V450, 0x0, V450, V865, V873, 0xa9059cbb, V899, 0x20, V902, V903, V902, 0x0, V873]

================================

Block 0xa90
[0xa90:0xa9c]
---
Predecessors: [0xa20]
Successors: [0xa9d, 0xaa1]
---
0xa90 JUMPDEST
0xa91 PUSH2 0x2c6
0xa94 GAS
0xa95 SUB
0xa96 CALL
0xa97 ISZERO
0xa98 ISZERO
0xa99 PUSH2 0xaa1
0xa9c JUMPI
---
0xa90: JUMPDEST 
0xa91: V910 = 0x2c6
0xa94: V911 = GAS
0xa95: V912 = SUB V911 0x2c6
0xa96: V913 = CALL V912 V873 0x0 V902 V903 V902 0x20
0xa97: V914 = ISZERO V913
0xa98: V915 = ISZERO V914
0xa99: V916 = 0xaa1
0xa9c: JUMPI 0xaa1 V915
---
Entry stack: [V12, 0x254, V450, 0x0, V450, V865, V873, 0xa9059cbb, V899, 0x20, V902, V903, V902, 0x0, V873]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x254, V450, 0x0, V450, V865, V873, 0xa9059cbb, V899]

================================

Block 0xa9d
[0xa9d:0xaa0]
---
Predecessors: [0xa90]
Successors: []
---
0xa9d PUSH1 0x0
0xa9f DUP1
0xaa0 REVERT
---
0xa9d: V917 = 0x0
0xaa0: REVERT 0x0 0x0
---
Entry stack: [V12, 0x254, V450, 0x0, V450, V865, V873, 0xa9059cbb, V899]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x254, V450, 0x0, V450, V865, V873, 0xa9059cbb, V899]

================================

Block 0xaa1
[0xaa1:0xaac]
---
Predecessors: [0xa90]
Successors: [0xaad]
---
0xaa1 JUMPDEST
0xaa2 POP
0xaa3 POP
0xaa4 POP
0xaa5 PUSH1 0x40
0xaa7 MLOAD
0xaa8 DUP1
0xaa9 MLOAD
0xaaa SWAP4
0xaab POP
0xaac POP
---
0xaa1: JUMPDEST 
0xaa5: V918 = 0x40
0xaa7: V919 = M[0x40]
0xaa9: V920 = M[V919]
---
Entry stack: [V12, 0x254, V450, 0x0, V450, V865, V873, 0xa9059cbb, V899]
Stack pops: 6
Stack additions: [V920, S4, S3]
Exit stack: [V12, 0x254, V450, V920, V450, V865]

================================

Block 0xaad
[0xaad:0xab3]
---
Predecessors: [0xaa1]
Successors: [0x254]
---
0xaad JUMPDEST
0xaae POP
0xaaf POP
0xab0 SWAP2
0xab1 SWAP1
0xab2 POP
0xab3 JUMP
---
0xaad: JUMPDEST 
0xab3: JUMP 0x254
---
Entry stack: [V12, 0x254, V450, V920, V450, V865]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V12, V920]

================================

Block 0xab4
[0xab4:0xac5]
---
Predecessors: [0x4fd, 0x802]
Successors: [0x505, 0x80a]
---
0xab4 JUMPDEST
0xab5 PUSH1 0x20
0xab7 PUSH1 0x40
0xab9 MLOAD
0xaba SWAP1
0xabb DUP2
0xabc ADD
0xabd PUSH1 0x40
0xabf MSTORE
0xac0 PUSH1 0x0
0xac2 DUP2
0xac3 MSTORE
0xac4 SWAP1
0xac5 JUMP
---
0xab4: JUMPDEST 
0xab5: V921 = 0x20
0xab7: V922 = 0x40
0xab9: V923 = M[0x40]
0xabc: V924 = ADD V923 0x20
0xabd: V925 = 0x40
0xabf: M[0x40] = V924
0xac0: V926 = 0x0
0xac3: M[V923] = 0x0
0xac5: JUMP {0x505, 0x80a}
---
Entry stack: [V12, 0x1ba, {0x505, 0x80a}]
Stack pops: 1
Stack additions: [V923]
Exit stack: [V12, 0x1ba, V923]

================================

Block 0xac6
[0xac6:0xaf5]
---
Predecessors: []
Successors: []
---
0xac6 STOP
0xac7 LOG1
0xac8 PUSH6 0x627a7a723058
0xacf SHA3
0xad0 MISSING 0xf7
0xad1 MISSING 0xaf
0xad2 MISSING 0xfb
0xad3 MISSING 0xc6
0xad4 CALLDATASIZE
0xad5 SLT
0xad6 EXTCODECOPY
0xad7 MISSING 0xe7
0xad8 DUP6
0xad9 SSTORE
0xada STOP
0xadb INVALID
0xadc LOG2
0xadd PUSH24 0x22605b6e85ec9cdb085900988589dbe73e8e0029
---
0xac6: STOP 
0xac7: LOG S0 S1 S2
0xac8: V927 = 0x627a7a723058
0xacf: V928 = SHA3 0x627a7a723058 S3
0xad0: MISSING 0xf7
0xad1: MISSING 0xaf
0xad2: MISSING 0xfb
0xad3: MISSING 0xc6
0xad4: V929 = CALLDATASIZE
0xad5: V930 = SLT V929 S0
0xad6: EXTCODECOPY V930 S1 S2 S3
0xad7: MISSING 0xe7
0xad9: S[S5] = S0
0xada: STOP 
0xadb: INVALID 
0xadc: LOG S0 S1 S2 S3
0xadd: V931 = 0x22605b6e85ec9cdb085900988589dbe73e8e0029
---
Entry stack: []
Stack pops: 0
Stack additions: [V928, S1, S2, S3, S4, S5, 0x22605b6e85ec9cdb085900988589dbe73e8e0029]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x1a7
Exit block: 0x224
Body: 0x1a7, 0x1ae, 0x1b2, 0x1ba, 0x1de, 0x1e7, 0x1ef, 0x1f7, 0x20b, 0x224, 0x4fd, 0x505, 0x53c

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x232
Exit block: 0x254
Body: 0x232, 0x239, 0x23d, 0x254, 0x53f, 0x54b, 0x574, 0x57a, 0x581, 0x598, 0x59c, 0x600

Function 2:
Public function signature: 0xdcf4b8f
Entry block: 0x268
Exit block: 0x27b
Body: 0x268, 0x26f, 0x273, 0x27b, 0x606

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x28d
Exit block: 0x27b
Body: 0x27b, 0x28d, 0x294, 0x298, 0x60c

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x2b2
Exit block: 0x254
Body: 0x254, 0x2b2, 0x2b9, 0x2bd, 0x612, 0x623, 0x627, 0x63e, 0x642, 0x64a, 0x652, 0x6af, 0x6b1, 0x6b8, 0x6bb, 0x6c1, 0x74d, 0x752, 0x753

Function 5:
Public function signature: 0x313ce567
Entry block: 0x2ee
Exit block: 0x301
Body: 0x2ee, 0x2f5, 0x2f9, 0x301, 0x75f, 0x762

Function 6:
Public function signature: 0x64acdb77
Entry block: 0x317
Exit block: 0x1a5
Body: 0x1a5, 0x317, 0x31e, 0x322, 0x765, 0x77c, 0x780, 0x79f

Function 7:
Public function signature: 0x70a08231
Entry block: 0x32c
Exit block: 0x27b
Body: 0x27b, 0x32c, 0x333, 0x337, 0x7a1, 0x7bb

Function 8:
Public function signature: 0x8f580996
Entry block: 0x35d
Exit block: 0x1a5
Body: 0x1a5, 0x35d, 0x364, 0x368, 0x7c0, 0x7d7, 0x7db, 0x800

Function 9:
Public function signature: 0x95d89b41
Entry block: 0x372
Exit block: 0x224
Body: 0x1ba, 0x1de, 0x1e7, 0x1ef, 0x1f7, 0x20b, 0x224, 0x372, 0x379, 0x37d, 0x802, 0x80a, 0x841

Function 10:
Public function signature: 0xa9059cbb
Entry block: 0x3fd
Exit block: 0x254
Body: 0x254, 0x3fd, 0x404, 0x408, 0x844, 0x853, 0x857, 0x86e, 0x872, 0x87a, 0x882, 0x8ba, 0x8bd, 0x8c3, 0x930, 0x935, 0x936

Function 11:
Public function signature: 0xc59d4847
Entry block: 0x433
Exit block: 0x446
Body: 0x433, 0x43a, 0x43e, 0x446, 0x93f, 0x953

Function 12:
Public function signature: 0xda040c0f
Entry block: 0x46c
Exit block: 0x254
Body: 0x254, 0x46c, 0x473, 0x477, 0x958

Function 13:
Public function signature: 0xdd62ed3e
Entry block: 0x493
Exit block: 0x27b
Body: 0x27b, 0x493, 0x49a, 0x49e, 0x968, 0x98f

Function 14:
Public function signature: 0xe58fc54c
Entry block: 0x4ca
Exit block: 0x254
Body: 0x254, 0x4ca, 0x4d1, 0x4d5, 0x995, 0x9b1, 0x9b5, 0xa0b, 0xa0f, 0xa1c, 0xa20, 0xa8c, 0xa90, 0xa9d, 0xaa1, 0xaad

Function 15:
Public fallback function
Entry block: 0xbf
Exit block: 0x1a5
Body: 0xbf, 0xc3, 0xd8, 0xdc, 0xe4, 0xe8, 0x118, 0x11c, 0x13c, 0x140, 0x1a2, 0x1a5

