Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x62]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x62
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x62
0xc: JUMPI 0x62 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x64]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x2e1a7d4d
0x3c EQ
0x3d PUSH2 0x64
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x2e1a7d4d
0x3c: V13 = EQ 0x2e1a7d4d V11
0x3d: V14 = 0x64
0x40: JUMPI 0x64 V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0x91]
---
0x41 DUP1
0x42 PUSH4 0x6898f82b
0x47 EQ
0x48 PUSH2 0x91
0x4b JUMPI
---
0x42: V15 = 0x6898f82b
0x47: V16 = EQ 0x6898f82b V11
0x48: V17 = 0x91
0x4b: JUMPI 0x91 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xb1]
---
0x4c DUP1
0x4d PUSH4 0x9619367d
0x52 EQ
0x53 PUSH2 0xb1
0x56 JUMPI
---
0x4d: V18 = 0x9619367d
0x52: V19 = EQ 0x9619367d V11
0x53: V20 = 0xb1
0x56: JUMPI 0xb1 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xdc]
---
0x57 DUP1
0x58 PUSH4 0xf82c50f1
0x5d EQ
0x5e PUSH2 0xdc
0x61 JUMPI
---
0x58: V21 = 0xf82c50f1
0x5d: V22 = EQ 0xf82c50f1 V11
0x5e: V23 = 0xdc
0x61: JUMPI 0xdc V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x63]
---
Predecessors: [0x0, 0x57]
Successors: []
---
0x62 JUMPDEST
0x63 STOP
---
0x62: JUMPDEST 
0x63: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x64
[0x64:0x6b]
---
Predecessors: [0xd]
Successors: [0x6c, 0x70]
---
0x64 JUMPDEST
0x65 CALLVALUE
0x66 DUP1
0x67 ISZERO
0x68 PUSH2 0x70
0x6b JUMPI
---
0x64: JUMPDEST 
0x65: V24 = CALLVALUE
0x67: V25 = ISZERO V24
0x68: V26 = 0x70
0x6b: JUMPI 0x70 V25
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V24]
Exit stack: [V11, V24]

================================

Block 0x6c
[0x6c:0x6f]
---
Predecessors: [0x64]
Successors: []
---
0x6c PUSH1 0x0
0x6e DUP1
0x6f REVERT
---
0x6c: V27 = 0x0
0x6f: REVERT 0x0 0x0
---
Entry stack: [V11, V24]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V24]

================================

Block 0x70
[0x70:0x8e]
---
Predecessors: [0x64]
Successors: [0x150]
---
0x70 JUMPDEST
0x71 POP
0x72 PUSH2 0x8f
0x75 PUSH1 0x4
0x77 DUP1
0x78 CALLDATASIZE
0x79 SUB
0x7a DUP2
0x7b ADD
0x7c SWAP1
0x7d DUP1
0x7e DUP1
0x7f CALLDATALOAD
0x80 SWAP1
0x81 PUSH1 0x20
0x83 ADD
0x84 SWAP1
0x85 SWAP3
0x86 SWAP2
0x87 SWAP1
0x88 POP
0x89 POP
0x8a POP
0x8b PUSH2 0x150
0x8e JUMP
---
0x70: JUMPDEST 
0x72: V28 = 0x8f
0x75: V29 = 0x4
0x78: V30 = CALLDATASIZE
0x79: V31 = SUB V30 0x4
0x7b: V32 = ADD 0x4 V31
0x7f: V33 = CALLDATALOAD 0x4
0x81: V34 = 0x20
0x83: V35 = ADD 0x20 0x4
0x8b: V36 = 0x150
0x8e: JUMP 0x150
---
Entry stack: [V11, V24]
Stack pops: 1
Stack additions: [0x8f, V33]
Exit stack: [V11, 0x8f, V33]

================================

Block 0x8f
[0x8f:0x90]
---
Predecessors: [0x214]
Successors: []
---
0x8f JUMPDEST
0x90 STOP
---
0x8f: JUMPDEST 
0x90: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x91
[0x91:0xae]
---
Predecessors: [0x41]
Successors: [0x218]
---
0x91 JUMPDEST
0x92 PUSH2 0xaf
0x95 PUSH1 0x4
0x97 DUP1
0x98 CALLDATASIZE
0x99 SUB
0x9a DUP2
0x9b ADD
0x9c SWAP1
0x9d DUP1
0x9e DUP1
0x9f CALLDATALOAD
0xa0 SWAP1
0xa1 PUSH1 0x20
0xa3 ADD
0xa4 SWAP1
0xa5 SWAP3
0xa6 SWAP2
0xa7 SWAP1
0xa8 POP
0xa9 POP
0xaa POP
0xab PUSH2 0x218
0xae JUMP
---
0x91: JUMPDEST 
0x92: V37 = 0xaf
0x95: V38 = 0x4
0x98: V39 = CALLDATASIZE
0x99: V40 = SUB V39 0x4
0x9b: V41 = ADD 0x4 V40
0x9f: V42 = CALLDATALOAD 0x4
0xa1: V43 = 0x20
0xa3: V44 = ADD 0x20 0x4
0xab: V45 = 0x218
0xae: JUMP 0x218
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xaf, V42]
Exit stack: [V11, 0xaf, V42]

================================

Block 0xaf
[0xaf:0xb0]
---
Predecessors: [0x37e]
Successors: []
---
0xaf JUMPDEST
0xb0 STOP
---
0xaf: JUMPDEST 
0xb0: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xb1
[0xb1:0xb8]
---
Predecessors: [0x4c]
Successors: [0xb9, 0xbd]
---
0xb1 JUMPDEST
0xb2 CALLVALUE
0xb3 DUP1
0xb4 ISZERO
0xb5 PUSH2 0xbd
0xb8 JUMPI
---
0xb1: JUMPDEST 
0xb2: V46 = CALLVALUE
0xb4: V47 = ISZERO V46
0xb5: V48 = 0xbd
0xb8: JUMPI 0xbd V47
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V46]
Exit stack: [V11, V46]

================================

Block 0xb9
[0xb9:0xbc]
---
Predecessors: [0xb1]
Successors: []
---
0xb9 PUSH1 0x0
0xbb DUP1
0xbc REVERT
---
0xb9: V49 = 0x0
0xbc: REVERT 0x0 0x0
---
Entry stack: [V11, V46]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V46]

================================

Block 0xbd
[0xbd:0xc5]
---
Predecessors: [0xb1]
Successors: [0x382]
---
0xbd JUMPDEST
0xbe POP
0xbf PUSH2 0xc6
0xc2 PUSH2 0x382
0xc5 JUMP
---
0xbd: JUMPDEST 
0xbf: V50 = 0xc6
0xc2: V51 = 0x382
0xc5: JUMP 0x382
---
Entry stack: [V11, V46]
Stack pops: 1
Stack additions: [0xc6]
Exit stack: [V11, 0xc6]

================================

Block 0xc6
[0xc6:0xdb]
---
Predecessors: [0x382]
Successors: []
---
0xc6 JUMPDEST
0xc7 PUSH1 0x40
0xc9 MLOAD
0xca DUP1
0xcb DUP3
0xcc DUP2
0xcd MSTORE
0xce PUSH1 0x20
0xd0 ADD
0xd1 SWAP2
0xd2 POP
0xd3 POP
0xd4 PUSH1 0x40
0xd6 MLOAD
0xd7 DUP1
0xd8 SWAP2
0xd9 SUB
0xda SWAP1
0xdb RETURN
---
0xc6: JUMPDEST 
0xc7: V52 = 0x40
0xc9: V53 = M[0x40]
0xcd: M[V53] = V221
0xce: V54 = 0x20
0xd0: V55 = ADD 0x20 V53
0xd4: V56 = 0x40
0xd6: V57 = M[0x40]
0xd9: V58 = SUB V55 V57
0xdb: RETURN V57 V58
---
Entry stack: [V11, 0xc6, V221]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xc6]

================================

Block 0xdc
[0xdc:0xe3]
---
Predecessors: [0x57]
Successors: [0xe4, 0xe8]
---
0xdc JUMPDEST
0xdd CALLVALUE
0xde DUP1
0xdf ISZERO
0xe0 PUSH2 0xe8
0xe3 JUMPI
---
0xdc: JUMPDEST 
0xdd: V59 = CALLVALUE
0xdf: V60 = ISZERO V59
0xe0: V61 = 0xe8
0xe3: JUMPI 0xe8 V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V59]
Exit stack: [V11, V59]

================================

Block 0xe4
[0xe4:0xe7]
---
Predecessors: [0xdc]
Successors: []
---
0xe4 PUSH1 0x0
0xe6 DUP1
0xe7 REVERT
---
0xe4: V62 = 0x0
0xe7: REVERT 0x0 0x0
---
Entry stack: [V11, V59]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V59]

================================

Block 0xe8
[0xe8:0x106]
---
Predecessors: [0xdc]
Successors: [0x388]
---
0xe8 JUMPDEST
0xe9 POP
0xea PUSH2 0x107
0xed PUSH1 0x4
0xef DUP1
0xf0 CALLDATASIZE
0xf1 SUB
0xf2 DUP2
0xf3 ADD
0xf4 SWAP1
0xf5 DUP1
0xf6 DUP1
0xf7 CALLDATALOAD
0xf8 SWAP1
0xf9 PUSH1 0x20
0xfb ADD
0xfc SWAP1
0xfd SWAP3
0xfe SWAP2
0xff SWAP1
0x100 POP
0x101 POP
0x102 POP
0x103 PUSH2 0x388
0x106 JUMP
---
0xe8: JUMPDEST 
0xea: V63 = 0x107
0xed: V64 = 0x4
0xf0: V65 = CALLDATASIZE
0xf1: V66 = SUB V65 0x4
0xf3: V67 = ADD 0x4 V66
0xf7: V68 = CALLDATALOAD 0x4
0xf9: V69 = 0x20
0xfb: V70 = ADD 0x20 0x4
0x103: V71 = 0x388
0x106: JUMP 0x388
---
Entry stack: [V11, V59]
Stack pops: 1
Stack additions: [0x107, V68]
Exit stack: [V11, 0x107, V68]

================================

Block 0x107
[0x107:0x14f]
---
Predecessors: [0x397]
Successors: []
---
0x107 JUMPDEST
0x108 PUSH1 0x40
0x10a MLOAD
0x10b DUP1
0x10c DUP4
0x10d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x122 AND
0x123 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x138 AND
0x139 DUP2
0x13a MSTORE
0x13b PUSH1 0x20
0x13d ADD
0x13e DUP3
0x13f DUP2
0x140 MSTORE
0x141 PUSH1 0x20
0x143 ADD
0x144 SWAP3
0x145 POP
0x146 POP
0x147 POP
0x148 PUSH1 0x40
0x14a MLOAD
0x14b DUP1
0x14c SWAP2
0x14d SUB
0x14e SWAP1
0x14f RETURN
---
0x107: JUMPDEST 
0x108: V72 = 0x40
0x10a: V73 = M[0x40]
0x10d: V74 = 0xffffffffffffffffffffffffffffffffffffffff
0x122: V75 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x123: V76 = 0xffffffffffffffffffffffffffffffffffffffff
0x138: V77 = AND 0xffffffffffffffffffffffffffffffffffffffff V75
0x13a: M[V73] = V77
0x13b: V78 = 0x20
0x13d: V79 = ADD 0x20 V73
0x140: M[V79] = V247
0x141: V80 = 0x20
0x143: V81 = ADD 0x20 V79
0x148: V82 = 0x40
0x14a: V83 = M[0x40]
0x14d: V84 = SUB V81 V83
0x14f: RETURN V83 V84
---
Entry stack: [V11, 0x107, V244, V247]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x107]

================================

Block 0x150
[0x150:0x1a7]
---
Predecessors: [0x70]
Successors: [0x1a8, 0x1ac]
---
0x150 JUMPDEST
0x151 PUSH1 0x2
0x153 PUSH1 0x0
0x155 SWAP1
0x156 SLOAD
0x157 SWAP1
0x158 PUSH2 0x100
0x15b EXP
0x15c SWAP1
0x15d DIV
0x15e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x173 AND
0x174 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x189 AND
0x18a CALLER
0x18b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a0 AND
0x1a1 EQ
0x1a2 ISZERO
0x1a3 ISZERO
0x1a4 PUSH2 0x1ac
0x1a7 JUMPI
---
0x150: JUMPDEST 
0x151: V85 = 0x2
0x153: V86 = 0x0
0x156: V87 = S[0x2]
0x158: V88 = 0x100
0x15b: V89 = EXP 0x100 0x0
0x15d: V90 = DIV V87 0x1
0x15e: V91 = 0xffffffffffffffffffffffffffffffffffffffff
0x173: V92 = AND 0xffffffffffffffffffffffffffffffffffffffff V90
0x174: V93 = 0xffffffffffffffffffffffffffffffffffffffff
0x189: V94 = AND 0xffffffffffffffffffffffffffffffffffffffff V92
0x18a: V95 = CALLER
0x18b: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a0: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x1a1: V98 = EQ V97 V94
0x1a2: V99 = ISZERO V98
0x1a3: V100 = ISZERO V99
0x1a4: V101 = 0x1ac
0x1a7: JUMPI 0x1ac V100
---
Entry stack: [V11, 0x8f, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f, V33]

================================

Block 0x1a8
[0x1a8:0x1ab]
---
Predecessors: [0x150]
Successors: []
---
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab REVERT
---
0x1a8: V102 = 0x0
0x1ab: REVERT 0x0 0x0
---
Entry stack: [V11, 0x8f, V33]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f, V33]

================================

Block 0x1ac
[0x1ac:0x20a]
---
Predecessors: [0x150]
Successors: [0x20b, 0x214]
---
0x1ac JUMPDEST
0x1ad PUSH1 0x2
0x1af PUSH1 0x0
0x1b1 SWAP1
0x1b2 SLOAD
0x1b3 SWAP1
0x1b4 PUSH2 0x100
0x1b7 EXP
0x1b8 SWAP1
0x1b9 DIV
0x1ba PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1cf AND
0x1d0 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e5 AND
0x1e6 PUSH2 0x8fc
0x1e9 DUP3
0x1ea SWAP1
0x1eb DUP2
0x1ec ISZERO
0x1ed MUL
0x1ee SWAP1
0x1ef PUSH1 0x40
0x1f1 MLOAD
0x1f2 PUSH1 0x0
0x1f4 PUSH1 0x40
0x1f6 MLOAD
0x1f7 DUP1
0x1f8 DUP4
0x1f9 SUB
0x1fa DUP2
0x1fb DUP6
0x1fc DUP9
0x1fd DUP9
0x1fe CALL
0x1ff SWAP4
0x200 POP
0x201 POP
0x202 POP
0x203 POP
0x204 ISZERO
0x205 DUP1
0x206 ISZERO
0x207 PUSH2 0x214
0x20a JUMPI
---
0x1ac: JUMPDEST 
0x1ad: V103 = 0x2
0x1af: V104 = 0x0
0x1b2: V105 = S[0x2]
0x1b4: V106 = 0x100
0x1b7: V107 = EXP 0x100 0x0
0x1b9: V108 = DIV V105 0x1
0x1ba: V109 = 0xffffffffffffffffffffffffffffffffffffffff
0x1cf: V110 = AND 0xffffffffffffffffffffffffffffffffffffffff V108
0x1d0: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e5: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1e6: V113 = 0x8fc
0x1ec: V114 = ISZERO V33
0x1ed: V115 = MUL V114 0x8fc
0x1ef: V116 = 0x40
0x1f1: V117 = M[0x40]
0x1f2: V118 = 0x0
0x1f4: V119 = 0x40
0x1f6: V120 = M[0x40]
0x1f9: V121 = SUB V117 V120
0x1fe: V122 = CALL V115 V112 V33 V120 V121 V120 0x0
0x204: V123 = ISZERO V122
0x206: V124 = ISZERO V123
0x207: V125 = 0x214
0x20a: JUMPI 0x214 V124
---
Entry stack: [V11, 0x8f, V33]
Stack pops: 1
Stack additions: [S0, V123]
Exit stack: [V11, 0x8f, V33, V123]

================================

Block 0x20b
[0x20b:0x213]
---
Predecessors: [0x1ac]
Successors: []
---
0x20b RETURNDATASIZE
0x20c PUSH1 0x0
0x20e DUP1
0x20f RETURNDATACOPY
0x210 RETURNDATASIZE
0x211 PUSH1 0x0
0x213 REVERT
---
0x20b: V126 = RETURNDATASIZE
0x20c: V127 = 0x0
0x20f: RETURNDATACOPY 0x0 0x0 V126
0x210: V128 = RETURNDATASIZE
0x211: V129 = 0x0
0x213: REVERT 0x0 V128
---
Entry stack: [V11, 0x8f, V33, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x8f, V33, V123]

================================

Block 0x214
[0x214:0x217]
---
Predecessors: [0x1ac]
Successors: [0x8f]
---
0x214 JUMPDEST
0x215 POP
0x216 POP
0x217 JUMP
---
0x214: JUMPDEST 
0x217: JUMP 0x8f
---
Entry stack: [V11, 0x8f, V33, V123]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x218
[0x218:0x226]
---
Predecessors: [0x91]
Successors: [0x227, 0x22d]
---
0x218 JUMPDEST
0x219 PUSH1 0x0
0x21b PUSH1 0x1
0x21d SLOAD
0x21e CALLVALUE
0x21f LT
0x220 ISZERO
0x221 DUP1
0x222 ISZERO
0x223 PUSH2 0x22d
0x226 JUMPI
---
0x218: JUMPDEST 
0x219: V130 = 0x0
0x21b: V131 = 0x1
0x21d: V132 = S[0x1]
0x21e: V133 = CALLVALUE
0x21f: V134 = LT V133 V132
0x220: V135 = ISZERO V134
0x222: V136 = ISZERO V135
0x223: V137 = 0x22d
0x226: JUMPI 0x22d V136
---
Entry stack: [V11, 0xaf, V42]
Stack pops: 0
Stack additions: [0x0, V135]
Exit stack: [V11, 0xaf, V42, 0x0, V135]

================================

Block 0x227
[0x227:0x22c]
---
Predecessors: [0x218]
Successors: [0x22d]
---
0x227 POP
0x228 PUSH1 0x1
0x22a DUP3
0x22b GT
0x22c ISZERO
---
0x228: V138 = 0x1
0x22b: V139 = GT V42 0x1
0x22c: V140 = ISZERO V139
---
Entry stack: [V11, 0xaf, V42, 0x0, V135]
Stack pops: 3
Stack additions: [S2, S1, V140]
Exit stack: [V11, 0xaf, V42, 0x0, V140]

================================

Block 0x22d
[0x22d:0x232]
---
Predecessors: [0x218, 0x227]
Successors: [0x233, 0x37e]
---
0x22d JUMPDEST
0x22e ISZERO
0x22f PUSH2 0x37e
0x232 JUMPI
---
0x22d: JUMPDEST 
0x22e: V141 = ISZERO S0
0x22f: V142 = 0x37e
0x232: JUMPI 0x37e V141
---
Entry stack: [V11, 0xaf, V42, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xaf, V42, 0x0]

================================

Block 0x233
[0x233:0x32a]
---
Predecessors: [0x22d]
Successors: [0x32b, 0x343]
---
0x233 CALLER
0x234 DUP2
0x235 PUSH1 0x0
0x237 ADD
0x238 PUSH1 0x0
0x23a PUSH2 0x100
0x23d EXP
0x23e DUP2
0x23f SLOAD
0x240 DUP2
0x241 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x256 MUL
0x257 NOT
0x258 AND
0x259 SWAP1
0x25a DUP4
0x25b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x270 AND
0x271 MUL
0x272 OR
0x273 SWAP1
0x274 SSTORE
0x275 POP
0x276 DUP2
0x277 DUP2
0x278 PUSH1 0x1
0x27a ADD
0x27b DUP2
0x27c SWAP1
0x27d SSTORE
0x27e POP
0x27f PUSH1 0x3
0x281 DUP2
0x282 SWAP1
0x283 DUP1
0x284 PUSH1 0x1
0x286 DUP2
0x287 SLOAD
0x288 ADD
0x289 DUP1
0x28a DUP3
0x28b SSTORE
0x28c DUP1
0x28d SWAP2
0x28e POP
0x28f POP
0x290 SWAP1
0x291 PUSH1 0x1
0x293 DUP3
0x294 SUB
0x295 SWAP1
0x296 PUSH1 0x0
0x298 MSTORE
0x299 PUSH1 0x20
0x29b PUSH1 0x0
0x29d SHA3
0x29e SWAP1
0x29f PUSH1 0x2
0x2a1 MUL
0x2a2 ADD
0x2a3 PUSH1 0x0
0x2a5 SWAP1
0x2a6 SWAP2
0x2a7 SWAP3
0x2a8 SWAP1
0x2a9 SWAP2
0x2aa SWAP1
0x2ab SWAP2
0x2ac POP
0x2ad PUSH1 0x0
0x2af DUP3
0x2b0 ADD
0x2b1 PUSH1 0x0
0x2b3 SWAP1
0x2b4 SLOAD
0x2b5 SWAP1
0x2b6 PUSH2 0x100
0x2b9 EXP
0x2ba SWAP1
0x2bb DIV
0x2bc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d1 AND
0x2d2 DUP2
0x2d3 PUSH1 0x0
0x2d5 ADD
0x2d6 PUSH1 0x0
0x2d8 PUSH2 0x100
0x2db EXP
0x2dc DUP2
0x2dd SLOAD
0x2de DUP2
0x2df PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2f4 MUL
0x2f5 NOT
0x2f6 AND
0x2f7 SWAP1
0x2f8 DUP4
0x2f9 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30e AND
0x30f MUL
0x310 OR
0x311 SWAP1
0x312 SSTORE
0x313 POP
0x314 PUSH1 0x1
0x316 DUP3
0x317 ADD
0x318 SLOAD
0x319 DUP2
0x31a PUSH1 0x1
0x31c ADD
0x31d SSTORE
0x31e POP
0x31f POP
0x320 POP
0x321 PUSH1 0x0
0x323 SLOAD
0x324 DUP3
0x325 EQ
0x326 ISZERO
0x327 PUSH2 0x343
0x32a JUMPI
---
0x233: V143 = CALLER
0x235: V144 = 0x0
0x237: V145 = ADD 0x0 0x0
0x238: V146 = 0x0
0x23a: V147 = 0x100
0x23d: V148 = EXP 0x100 0x0
0x23f: V149 = S[0x0]
0x241: V150 = 0xffffffffffffffffffffffffffffffffffffffff
0x256: V151 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x257: V152 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x258: V153 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V149
0x25b: V154 = 0xffffffffffffffffffffffffffffffffffffffff
0x270: V155 = AND 0xffffffffffffffffffffffffffffffffffffffff V143
0x271: V156 = MUL V155 0x1
0x272: V157 = OR V156 V153
0x274: S[0x0] = V157
0x278: V158 = 0x1
0x27a: V159 = ADD 0x1 0x0
0x27d: S[0x1] = V42
0x27f: V160 = 0x3
0x284: V161 = 0x1
0x287: V162 = S[0x3]
0x288: V163 = ADD V162 0x1
0x28b: S[0x3] = V163
0x291: V164 = 0x1
0x294: V165 = SUB V163 0x1
0x296: V166 = 0x0
0x298: M[0x0] = 0x3
0x299: V167 = 0x20
0x29b: V168 = 0x0
0x29d: V169 = SHA3 0x0 0x20
0x29f: V170 = 0x2
0x2a1: V171 = MUL 0x2 V165
0x2a2: V172 = ADD V171 V169
0x2a3: V173 = 0x0
0x2ad: V174 = 0x0
0x2b0: V175 = ADD 0x0 0x0
0x2b1: V176 = 0x0
0x2b4: V177 = S[0x0]
0x2b6: V178 = 0x100
0x2b9: V179 = EXP 0x100 0x0
0x2bb: V180 = DIV V177 0x1
0x2bc: V181 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d1: V182 = AND 0xffffffffffffffffffffffffffffffffffffffff V180
0x2d3: V183 = 0x0
0x2d5: V184 = ADD 0x0 V172
0x2d6: V185 = 0x0
0x2d8: V186 = 0x100
0x2db: V187 = EXP 0x100 0x0
0x2dd: V188 = S[V184]
0x2df: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x2f4: V190 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x2f5: V191 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2f6: V192 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V188
0x2f9: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x30e: V194 = AND 0xffffffffffffffffffffffffffffffffffffffff V182
0x30f: V195 = MUL V194 0x1
0x310: V196 = OR V195 V192
0x312: S[V184] = V196
0x314: V197 = 0x1
0x317: V198 = ADD 0x0 0x1
0x318: V199 = S[0x1]
0x31a: V200 = 0x1
0x31c: V201 = ADD 0x1 V172
0x31d: S[V201] = V199
0x321: V202 = 0x0
0x323: V203 = S[0x0]
0x325: V204 = EQ V42 V203
0x326: V205 = ISZERO V204
0x327: V206 = 0x343
0x32a: JUMPI 0x343 V205
---
Entry stack: [V11, 0xaf, V42, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xaf, V42, 0x0]

================================

Block 0x32b
[0x32b:0x342]
---
Predecessors: [0x233]
Successors: []
---
0x32b CALLER
0x32c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x341 AND
0x342 SELFDESTRUCT
---
0x32b: V207 = CALLER
0x32c: V208 = 0xffffffffffffffffffffffffffffffffffffffff
0x341: V209 = AND 0xffffffffffffffffffffffffffffffffffffffff V207
0x342: SELFDESTRUCT V209
---
Entry stack: [V11, 0xaf, V42, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xaf, V42, 0x0]

================================

Block 0x343
[0x343:0x37d]
---
Predecessors: [0x233]
Successors: []
---
0x343 JUMPDEST
0x344 PUSH1 0x2
0x346 PUSH1 0x0
0x348 SWAP1
0x349 SLOAD
0x34a SWAP1
0x34b PUSH2 0x100
0x34e EXP
0x34f SWAP1
0x350 DIV
0x351 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x366 AND
0x367 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x37c AND
0x37d SELFDESTRUCT
---
0x343: JUMPDEST 
0x344: V210 = 0x2
0x346: V211 = 0x0
0x349: V212 = S[0x2]
0x34b: V213 = 0x100
0x34e: V214 = EXP 0x100 0x0
0x350: V215 = DIV V212 0x1
0x351: V216 = 0xffffffffffffffffffffffffffffffffffffffff
0x366: V217 = AND 0xffffffffffffffffffffffffffffffffffffffff V215
0x367: V218 = 0xffffffffffffffffffffffffffffffffffffffff
0x37c: V219 = AND 0xffffffffffffffffffffffffffffffffffffffff V217
0x37d: SELFDESTRUCT V219
---
Entry stack: [V11, 0xaf, V42, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xaf, V42, 0x0]

================================

Block 0x37e
[0x37e:0x381]
---
Predecessors: [0x22d]
Successors: [0xaf]
---
0x37e JUMPDEST
0x37f POP
0x380 POP
0x381 JUMP
---
0x37e: JUMPDEST 
0x381: JUMP 0xaf
---
Entry stack: [V11, 0xaf, V42, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x382
[0x382:0x387]
---
Predecessors: [0xbd]
Successors: [0xc6]
---
0x382 JUMPDEST
0x383 PUSH1 0x1
0x385 SLOAD
0x386 DUP2
0x387 JUMP
---
0x382: JUMPDEST 
0x383: V220 = 0x1
0x385: V221 = S[0x1]
0x387: JUMP 0xc6
---
Entry stack: [V11, 0xc6]
Stack pops: 1
Stack additions: [S0, V221]
Exit stack: [V11, 0xc6, V221]

================================

Block 0x388
[0x388:0x395]
---
Predecessors: [0xe8]
Successors: [0x396, 0x397]
---
0x388 JUMPDEST
0x389 PUSH1 0x3
0x38b DUP2
0x38c DUP2
0x38d SLOAD
0x38e DUP2
0x38f LT
0x390 ISZERO
0x391 ISZERO
0x392 PUSH2 0x397
0x395 JUMPI
---
0x388: JUMPDEST 
0x389: V222 = 0x3
0x38d: V223 = S[0x3]
0x38f: V224 = LT V68 V223
0x390: V225 = ISZERO V224
0x391: V226 = ISZERO V225
0x392: V227 = 0x397
0x395: JUMPI 0x397 V226
---
Entry stack: [V11, 0x107, V68]
Stack pops: 1
Stack additions: [S0, 0x3, S0]
Exit stack: [V11, 0x107, V68, 0x3, V68]

================================

Block 0x396
[0x396:0x396]
---
Predecessors: [0x388]
Successors: []
---
0x396 INVALID
---
0x396: INVALID 
---
Entry stack: [V11, 0x107, V68, 0x3, V68]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x107, V68, 0x3, V68]

================================

Block 0x397
[0x397:0x3da]
---
Predecessors: [0x388]
Successors: [0x107]
---
0x397 JUMPDEST
0x398 SWAP1
0x399 PUSH1 0x0
0x39b MSTORE
0x39c PUSH1 0x20
0x39e PUSH1 0x0
0x3a0 SHA3
0x3a1 SWAP1
0x3a2 PUSH1 0x2
0x3a4 MUL
0x3a5 ADD
0x3a6 PUSH1 0x0
0x3a8 SWAP2
0x3a9 POP
0x3aa SWAP1
0x3ab POP
0x3ac DUP1
0x3ad PUSH1 0x0
0x3af ADD
0x3b0 PUSH1 0x0
0x3b2 SWAP1
0x3b3 SLOAD
0x3b4 SWAP1
0x3b5 PUSH2 0x100
0x3b8 EXP
0x3b9 SWAP1
0x3ba DIV
0x3bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d0 AND
0x3d1 SWAP1
0x3d2 DUP1
0x3d3 PUSH1 0x1
0x3d5 ADD
0x3d6 SLOAD
0x3d7 SWAP1
0x3d8 POP
0x3d9 DUP3
0x3da JUMP
---
0x397: JUMPDEST 
0x399: V228 = 0x0
0x39b: M[0x0] = 0x3
0x39c: V229 = 0x20
0x39e: V230 = 0x0
0x3a0: V231 = SHA3 0x0 0x20
0x3a2: V232 = 0x2
0x3a4: V233 = MUL 0x2 V68
0x3a5: V234 = ADD V233 V231
0x3a6: V235 = 0x0
0x3ad: V236 = 0x0
0x3af: V237 = ADD 0x0 V234
0x3b0: V238 = 0x0
0x3b3: V239 = S[V237]
0x3b5: V240 = 0x100
0x3b8: V241 = EXP 0x100 0x0
0x3ba: V242 = DIV V239 0x1
0x3bb: V243 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d0: V244 = AND 0xffffffffffffffffffffffffffffffffffffffff V242
0x3d3: V245 = 0x1
0x3d5: V246 = ADD 0x1 V234
0x3d6: V247 = S[V246]
0x3da: JUMP 0x107
---
Entry stack: [V11, 0x107, V68, 0x3, V68]
Stack pops: 4
Stack additions: [S3, V244, V247]
Exit stack: [V11, 0x107, V244, V247]

================================

Block 0x3db
[0x3db:0x406]
---
Predecessors: []
Successors: []
---
0x3db STOP
0x3dc LOG1
0x3dd PUSH6 0x627a7a723058
0x3e4 SHA3
0x3e5 MISSING 0x2f
0x3e6 MISSING 0xe6
0x3e7 PUSH15 0xbe7dea1bb057dc3476b13959359f32
0x3f7 DUP14
0x3f8 MISSING 0xdd
0x3f9 MISSING 0xe9
0x3fa DIFFICULTY
0x3fb CALLER
0x3fc MISSING 0xaf
0x3fd RETURNDATACOPY
0x3fe MISSING 0xf7
0x3ff BYTE
0x400 MISSING 0xe0
0x401 SWAP2
0x402 MISSING 0xe7
0x403 MISSING 0xe6
0x404 SLOAD
0x405 STOP
0x406 MISSING 0x29
---
0x3db: STOP 
0x3dc: LOG S0 S1 S2
0x3dd: V248 = 0x627a7a723058
0x3e4: V249 = SHA3 0x627a7a723058 S3
0x3e5: MISSING 0x2f
0x3e6: MISSING 0xe6
0x3e7: V250 = 0xbe7dea1bb057dc3476b13959359f32
0x3f8: MISSING 0xdd
0x3f9: MISSING 0xe9
0x3fa: V251 = DIFFICULTY
0x3fb: V252 = CALLER
0x3fc: MISSING 0xaf
0x3fd: RETURNDATACOPY S0 S1 S2
0x3fe: MISSING 0xf7
0x3ff: V253 = BYTE S0 S1
0x400: MISSING 0xe0
0x402: MISSING 0xe7
0x403: MISSING 0xe6
0x404: V254 = S[S0]
0x405: STOP 
0x406: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V249, S12, 0xbe7dea1bb057dc3476b13959359f32, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, V252, V251, V253, S2, S1, S0, V254]
Exit stack: []

================================

Function 0:
Public function signature: 0x2e1a7d4d
Entry block: 0x64
Exit block: 0x8f
Body: 0x64, 0x6c, 0x70, 0x8f, 0x150, 0x1a8, 0x1ac, 0x20b, 0x214

Function 1:
Public function signature: 0x6898f82b
Entry block: 0x91
Exit block: 0xaf
Body: 0x91, 0xaf, 0x218, 0x227, 0x22d, 0x233, 0x32b, 0x343, 0x37e

Function 2:
Public function signature: 0x9619367d
Entry block: 0xb1
Exit block: 0xc6
Body: 0xb1, 0xb9, 0xbd, 0xc6, 0x382

Function 3:
Public function signature: 0xf82c50f1
Entry block: 0xdc
Exit block: 0x107
Body: 0xdc, 0xe4, 0xe8, 0x107, 0x388, 0x396, 0x397

Function 4:
Public fallback function
Entry block: 0x62
Exit block: 0x62
Body: 0x62

