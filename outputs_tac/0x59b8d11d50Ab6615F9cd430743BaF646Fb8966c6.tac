Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xe3]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xe3
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xe3
0xa: JUMPI 0xe3 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x209]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x6fdde03
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x209
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x6fdde03
0x39: V12 = EQ V10 0x6fdde03
0x3a: V13 = 0x209
0x3d: JUMPI 0x209 V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x299]
---
0x3e DUP1
0x3f PUSH4 0x95ea7b3
0x44 EQ
0x45 PUSH2 0x299
0x48 JUMPI
---
0x3f: V14 = 0x95ea7b3
0x44: V15 = EQ 0x95ea7b3 V10
0x45: V16 = 0x299
0x48: JUMPI 0x299 V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x2cc]
---
0x49 DUP1
0x4a PUSH4 0xdcf4b8f
0x4f EQ
0x50 PUSH2 0x2cc
0x53 JUMPI
---
0x4a: V17 = 0xdcf4b8f
0x4f: V18 = EQ 0xdcf4b8f V10
0x50: V19 = 0x2cc
0x53: JUMPI 0x2cc V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x2ee]
---
0x54 DUP1
0x55 PUSH4 0x18160ddd
0x5a EQ
0x5b PUSH2 0x2ee
0x5e JUMPI
---
0x55: V20 = 0x18160ddd
0x5a: V21 = EQ 0x18160ddd V10
0x5b: V22 = 0x2ee
0x5e: JUMPI 0x2ee V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x310]
---
0x5f DUP1
0x60 PUSH4 0x23b872dd
0x65 EQ
0x66 PUSH2 0x310
0x69 JUMPI
---
0x60: V23 = 0x23b872dd
0x65: V24 = EQ 0x23b872dd V10
0x66: V25 = 0x310
0x69: JUMPI 0x310 V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x349]
---
0x6a DUP1
0x6b PUSH4 0x313ce567
0x70 EQ
0x71 PUSH2 0x349
0x74 JUMPI
---
0x6b: V26 = 0x313ce567
0x70: V27 = EQ 0x313ce567 V10
0x71: V28 = 0x349
0x74: JUMPI 0x349 V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x36f]
---
0x75 DUP1
0x76 PUSH4 0x64acdb77
0x7b EQ
0x7c PUSH2 0x36f
0x7f JUMPI
---
0x76: V29 = 0x64acdb77
0x7b: V30 = EQ 0x64acdb77 V10
0x7c: V31 = 0x36f
0x7f: JUMPI 0x36f V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x381]
---
0x80 DUP1
0x81 PUSH4 0x70a08231
0x86 EQ
0x87 PUSH2 0x381
0x8a JUMPI
---
0x81: V32 = 0x70a08231
0x86: V33 = EQ 0x70a08231 V10
0x87: V34 = 0x381
0x8a: JUMPI 0x381 V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x3af]
---
0x8b DUP1
0x8c PUSH4 0x8f580996
0x91 EQ
0x92 PUSH2 0x3af
0x95 JUMPI
---
0x8c: V35 = 0x8f580996
0x91: V36 = EQ 0x8f580996 V10
0x92: V37 = 0x3af
0x95: JUMPI 0x3af V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x3c1]
---
0x96 DUP1
0x97 PUSH4 0x95d89b41
0x9c EQ
0x9d PUSH2 0x3c1
0xa0 JUMPI
---
0x97: V38 = 0x95d89b41
0x9c: V39 = EQ 0x95d89b41 V10
0x9d: V40 = 0x3c1
0xa0: JUMPI 0x3c1 V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x451]
---
0xa1 DUP1
0xa2 PUSH4 0xa9059cbb
0xa7 EQ
0xa8 PUSH2 0x451
0xab JUMPI
---
0xa2: V41 = 0xa9059cbb
0xa7: V42 = EQ 0xa9059cbb V10
0xa8: V43 = 0x451
0xab: JUMPI 0x451 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x484]
---
0xac DUP1
0xad PUSH4 0xc59d4847
0xb2 EQ
0xb3 PUSH2 0x484
0xb6 JUMPI
---
0xad: V44 = 0xc59d4847
0xb2: V45 = EQ 0xc59d4847 V10
0xb3: V46 = 0x484
0xb6: JUMPI 0x484 V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x4bc]
---
0xb7 DUP1
0xb8 PUSH4 0xd5abeb01
0xbd EQ
0xbe PUSH2 0x4bc
0xc1 JUMPI
---
0xb8: V47 = 0xd5abeb01
0xbd: V48 = EQ 0xd5abeb01 V10
0xbe: V49 = 0x4bc
0xc1: JUMPI 0x4bc V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x4de]
---
0xc2 DUP1
0xc3 PUSH4 0xda040c0f
0xc8 EQ
0xc9 PUSH2 0x4de
0xcc JUMPI
---
0xc3: V50 = 0xda040c0f
0xc8: V51 = EQ 0xda040c0f V10
0xc9: V52 = 0x4de
0xcc: JUMPI 0x4de V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x502]
---
0xcd DUP1
0xce PUSH4 0xdd62ed3e
0xd3 EQ
0xd4 PUSH2 0x502
0xd7 JUMPI
---
0xce: V53 = 0xdd62ed3e
0xd3: V54 = EQ 0xdd62ed3e V10
0xd4: V55 = 0x502
0xd7: JUMPI 0x502 V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x536]
---
0xd8 DUP1
0xd9 PUSH4 0xe58fc54c
0xde EQ
0xdf PUSH2 0x536
0xe2 JUMPI
---
0xd9: V56 = 0xe58fc54c
0xde: V57 = EQ 0xe58fc54c V10
0xdf: V58 = 0x536
0xe2: JUMPI 0x536 V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xe6]
---
Predecessors: [0x0, 0xd8]
Successors: [0xe7]
---
0xe3 JUMPDEST
0xe4 PUSH2 0x207
---
0xe3: JUMPDEST 
0xe4: V59 = 0x207
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x207]
Exit stack: [V10, 0x207]

================================

Block 0xe7
[0xe7:0xf6]
---
Predecessors: [0xe3]
Successors: [0xf7, 0xfc]
---
0xe7 JUMPDEST
0xe8 PUSH1 0x3
0xea SLOAD
0xeb PUSH1 0x0
0xed SWAP1
0xee PUSH1 0xff
0xf0 AND
0xf1 ISZERO
0xf2 ISZERO
0xf3 PUSH2 0xfc
0xf6 JUMPI
---
0xe7: JUMPDEST 
0xe8: V60 = 0x3
0xea: V61 = S[0x3]
0xeb: V62 = 0x0
0xee: V63 = 0xff
0xf0: V64 = AND 0xff V61
0xf1: V65 = ISZERO V64
0xf2: V66 = ISZERO V65
0xf3: V67 = 0xfc
0xf6: JUMPI 0xfc V66
---
Entry stack: [V10, 0x207]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x207, 0x0]

================================

Block 0xf7
[0xf7:0xfb]
---
Predecessors: [0xe7]
Successors: []
---
0xf7 PUSH1 0x0
0xf9 PUSH1 0x0
0xfb REVERT
---
0xf7: V68 = 0x0
0xf9: V69 = 0x0
0xfb: REVERT 0x0 0x0
---
Entry stack: [V10, 0x207, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x207, 0x0]

================================

Block 0xfc
[0xfc:0x103]
---
Predecessors: [0xe7]
Successors: [0x104, 0x108]
---
0xfc JUMPDEST
0xfd CALLVALUE
0xfe ISZERO
0xff ISZERO
0x100 PUSH2 0x108
0x103 JUMPI
---
0xfc: JUMPDEST 
0xfd: V70 = CALLVALUE
0xfe: V71 = ISZERO V70
0xff: V72 = ISZERO V71
0x100: V73 = 0x108
0x103: JUMPI 0x108 V72
---
Entry stack: [V10, 0x207, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x207, 0x0]

================================

Block 0x104
[0x104:0x107]
---
Predecessors: [0xfc]
Successors: [0x204]
---
0x104 PUSH2 0x204
0x107 JUMP
---
0x104: V74 = 0x204
0x107: JUMP 0x204
---
Entry stack: [V10, 0x207, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x207, 0x0]

================================

Block 0x108
[0x108:0x115]
---
Predecessors: [0xfc]
Successors: [0x116, 0x12a]
---
0x108 JUMPDEST
0x109 PUSH1 0x6
0x10b SLOAD
0x10c PUSH1 0x5
0x10e SLOAD
0x10f GT
0x110 DUP1
0x111 ISZERO
0x112 PUSH2 0x12a
0x115 JUMPI
---
0x108: JUMPDEST 
0x109: V75 = 0x6
0x10b: V76 = S[0x6]
0x10c: V77 = 0x5
0x10e: V78 = S[0x5]
0x10f: V79 = GT V78 V76
0x111: V80 = ISZERO V79
0x112: V81 = 0x12a
0x115: JUMPI 0x12a V80
---
Entry stack: [V10, 0x207, 0x0]
Stack pops: 0
Stack additions: [V79]
Exit stack: [V10, 0x207, 0x0, V79]

================================

Block 0x116
[0x116:0x129]
---
Predecessors: [0x108]
Successors: [0x12a]
---
0x116 POP
0x117 PUSH1 0x0
0x119 SLOAD
0x11a CALLER
0x11b PUSH1 0x1
0x11d PUSH1 0xa0
0x11f PUSH1 0x2
0x121 EXP
0x122 SUB
0x123 SWAP1
0x124 DUP2
0x125 AND
0x126 SWAP2
0x127 AND
0x128 EQ
0x129 ISZERO
---
0x117: V82 = 0x0
0x119: V83 = S[0x0]
0x11a: V84 = CALLER
0x11b: V85 = 0x1
0x11d: V86 = 0xa0
0x11f: V87 = 0x2
0x121: V88 = EXP 0x2 0xa0
0x122: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0x125: V90 = AND 0xffffffffffffffffffffffffffffffffffffffff V84
0x127: V91 = AND V83 0xffffffffffffffffffffffffffffffffffffffff
0x128: V92 = EQ V91 V90
0x129: V93 = ISZERO V92
---
Entry stack: [V10, 0x207, 0x0, V79]
Stack pops: 1
Stack additions: [V93]
Exit stack: [V10, 0x207, 0x0, V93]

================================

Block 0x12a
[0x12a:0x12f]
---
Predecessors: [0x108, 0x116]
Successors: [0x130, 0x135]
---
0x12a JUMPDEST
0x12b ISZERO
0x12c PUSH2 0x135
0x12f JUMPI
---
0x12a: JUMPDEST 
0x12b: V94 = ISZERO S0
0x12c: V95 = 0x135
0x12f: JUMPI 0x135 V94
---
Entry stack: [V10, 0x207, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x207, 0x0]

================================

Block 0x130
[0x130:0x134]
---
Predecessors: [0x12a]
Successors: []
---
0x130 PUSH1 0x0
0x132 PUSH1 0x0
0x134 REVERT
---
0x130: V96 = 0x0
0x132: V97 = 0x0
0x134: REVERT 0x0 0x0
---
Entry stack: [V10, 0x207, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x207, 0x0]

================================

Block 0x135
[0x135:0x164]
---
Predecessors: [0x12a]
Successors: [0x165, 0x166]
---
0x135 JUMPDEST
0x136 PUSH1 0x0
0x138 DUP1
0x139 SLOAD
0x13a PUSH1 0x40
0x13c MLOAD
0x13d PUSH1 0x1
0x13f PUSH1 0xa0
0x141 PUSH1 0x2
0x143 EXP
0x144 SUB
0x145 SWAP1
0x146 SWAP2
0x147 AND
0x148 SWAP2
0x149 CALLVALUE
0x14a DUP1
0x14b ISZERO
0x14c PUSH2 0x8fc
0x14f MUL
0x150 SWAP3
0x151 SWAP1
0x152 SWAP2
0x153 DUP2
0x154 DUP2
0x155 DUP2
0x156 DUP6
0x157 DUP9
0x158 DUP9
0x159 CALL
0x15a SWAP4
0x15b POP
0x15c POP
0x15d POP
0x15e POP
0x15f ISZERO
0x160 ISZERO
0x161 PUSH2 0x166
0x164 JUMPI
---
0x135: JUMPDEST 
0x136: V98 = 0x0
0x139: V99 = S[0x0]
0x13a: V100 = 0x40
0x13c: V101 = M[0x40]
0x13d: V102 = 0x1
0x13f: V103 = 0xa0
0x141: V104 = 0x2
0x143: V105 = EXP 0x2 0xa0
0x144: V106 = SUB 0x10000000000000000000000000000000000000000 0x1
0x147: V107 = AND V99 0xffffffffffffffffffffffffffffffffffffffff
0x149: V108 = CALLVALUE
0x14b: V109 = ISZERO V108
0x14c: V110 = 0x8fc
0x14f: V111 = MUL 0x8fc V109
0x159: V112 = CALL V111 V107 V108 V101 0x0 V101 0x0
0x15f: V113 = ISZERO V112
0x160: V114 = ISZERO V113
0x161: V115 = 0x166
0x164: JUMPI 0x166 V114
---
Entry stack: [V10, 0x207, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x207, 0x0]

================================

Block 0x165
[0x165:0x165]
---
Predecessors: [0x135]
Successors: []
---
0x165 INVALID
---
0x165: INVALID 
---
Entry stack: [V10, 0x207, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x207, 0x0]

================================

Block 0x166
[0x166:0x197]
---
Predecessors: [0x135]
Successors: [0x198, 0x1aa]
---
0x166 JUMPDEST
0x167 POP
0x168 PUSH1 0x4
0x16a DUP1
0x16b SLOAD
0x16c CALLVALUE
0x16d SWAP1
0x16e DUP2
0x16f ADD
0x170 SWAP1
0x171 SWAP2
0x172 SSTORE
0x173 PUSH1 0x5
0x175 DUP1
0x176 SLOAD
0x177 PUSH1 0x64
0x179 SWAP1
0x17a SWAP3
0x17b MUL
0x17c SWAP2
0x17d DUP3
0x17e ADD
0x17f SWAP1
0x180 SSTORE
0x181 PUSH1 0x0
0x183 SLOAD
0x184 CALLER
0x185 PUSH1 0x1
0x187 PUSH1 0xa0
0x189 PUSH1 0x2
0x18b EXP
0x18c SUB
0x18d SWAP1
0x18e DUP2
0x18f AND
0x190 SWAP2
0x191 AND
0x192 EQ
0x193 ISZERO
0x194 PUSH2 0x1aa
0x197 JUMPI
---
0x166: JUMPDEST 
0x168: V116 = 0x4
0x16b: V117 = S[0x4]
0x16c: V118 = CALLVALUE
0x16f: V119 = ADD V118 V117
0x172: S[0x4] = V119
0x173: V120 = 0x5
0x176: V121 = S[0x5]
0x177: V122 = 0x64
0x17b: V123 = MUL V118 0x64
0x17e: V124 = ADD V123 V121
0x180: S[0x5] = V124
0x181: V125 = 0x0
0x183: V126 = S[0x0]
0x184: V127 = CALLER
0x185: V128 = 0x1
0x187: V129 = 0xa0
0x189: V130 = 0x2
0x18b: V131 = EXP 0x2 0xa0
0x18c: V132 = SUB 0x10000000000000000000000000000000000000000 0x1
0x18f: V133 = AND 0xffffffffffffffffffffffffffffffffffffffff V127
0x191: V134 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x192: V135 = EQ V134 V133
0x193: V136 = ISZERO V135
0x194: V137 = 0x1aa
0x197: JUMPI 0x1aa V136
---
Entry stack: [V10, 0x207, 0x0]
Stack pops: 1
Stack additions: [V123]
Exit stack: [V10, 0x207, V123]

================================

Block 0x198
[0x198:0x1a9]
---
Predecessors: [0x166]
Successors: [0x1aa]
---
0x198 PUSH1 0x6
0x19a DUP1
0x19b SLOAD
0x19c PUSH8 0xde0b6b3a7640000
0x1a5 CALLVALUE
0x1a6 MUL
0x1a7 ADD
0x1a8 SWAP1
0x1a9 SSTORE
---
0x198: V138 = 0x6
0x19b: V139 = S[0x6]
0x19c: V140 = 0xde0b6b3a7640000
0x1a5: V141 = CALLVALUE
0x1a6: V142 = MUL V141 0xde0b6b3a7640000
0x1a7: V143 = ADD V142 V139
0x1a9: S[0x6] = V143
---
Entry stack: [V10, 0x207, V123]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x207, V123]

================================

Block 0x1aa
[0x1aa:0x203]
---
Predecessors: [0x166, 0x198]
Successors: [0x204]
---
0x1aa JUMPDEST
0x1ab PUSH1 0x1
0x1ad PUSH1 0xa0
0x1af PUSH1 0x2
0x1b1 EXP
0x1b2 SUB
0x1b3 CALLER
0x1b4 DUP2
0x1b5 AND
0x1b6 PUSH1 0x0
0x1b8 DUP2
0x1b9 DUP2
0x1ba MSTORE
0x1bb PUSH1 0x1
0x1bd PUSH1 0x20
0x1bf SWAP1
0x1c0 DUP2
0x1c1 MSTORE
0x1c2 PUSH1 0x40
0x1c4 SWAP2
0x1c5 DUP3
0x1c6 SWAP1
0x1c7 SHA3
0x1c8 DUP1
0x1c9 SLOAD
0x1ca DUP7
0x1cb ADD
0x1cc SWAP1
0x1cd SSTORE
0x1ce DUP2
0x1cf MLOAD
0x1d0 DUP6
0x1d1 DUP2
0x1d2 MSTORE
0x1d3 SWAP2
0x1d4 MLOAD
0x1d5 SWAP3
0x1d6 SWAP4
0x1d7 ADDRESS
0x1d8 AND
0x1d9 SWAP3
0x1da PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1fb SWAP3
0x1fc DUP2
0x1fd SWAP1
0x1fe SUB
0x1ff SWAP1
0x200 SWAP2
0x201 ADD
0x202 SWAP1
0x203 LOG3
---
0x1aa: JUMPDEST 
0x1ab: V144 = 0x1
0x1ad: V145 = 0xa0
0x1af: V146 = 0x2
0x1b1: V147 = EXP 0x2 0xa0
0x1b2: V148 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b3: V149 = CALLER
0x1b5: V150 = AND 0xffffffffffffffffffffffffffffffffffffffff V149
0x1b6: V151 = 0x0
0x1ba: M[0x0] = V150
0x1bb: V152 = 0x1
0x1bd: V153 = 0x20
0x1c1: M[0x20] = 0x1
0x1c2: V154 = 0x40
0x1c7: V155 = SHA3 0x0 0x40
0x1c9: V156 = S[V155]
0x1cb: V157 = ADD V123 V156
0x1cd: S[V155] = V157
0x1cf: V158 = M[0x40]
0x1d2: M[V158] = V123
0x1d4: V159 = M[0x40]
0x1d7: V160 = ADDRESS
0x1d8: V161 = AND V160 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V162 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x1fe: V163 = SUB V158 V159
0x201: V164 = ADD 0x20 V163
0x203: LOG V159 V164 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V161 V150
---
Entry stack: [V10, 0x207, V123]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x207, V123]

================================

Block 0x204
[0x204:0x206]
---
Predecessors: [0x104, 0x1aa]
Successors: [0x207]
---
0x204 JUMPDEST
0x205 POP
0x206 JUMP
---
0x204: JUMPDEST 
0x206: JUMP 0x207
---
Entry stack: [V10, 0x207, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x207
[0x207:0x208]
---
Predecessors: [0x204, 0x7b9, 0x804]
Successors: []
---
0x207 JUMPDEST
0x208 STOP
---
0x207: JUMPDEST 
0x208: STOP 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x209
[0x209:0x20f]
---
Predecessors: [0xb]
Successors: [0x210, 0x211]
---
0x209 JUMPDEST
0x20a CALLVALUE
0x20b ISZERO
0x20c PUSH2 0x211
0x20f JUMPI
---
0x209: JUMPDEST 
0x20a: V165 = CALLVALUE
0x20b: V166 = ISZERO V165
0x20c: V167 = 0x211
0x20f: JUMPI 0x211 V166
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x210
[0x210:0x210]
---
Predecessors: [0x209]
Successors: []
---
0x210 INVALID
---
0x210: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x211
[0x211:0x218]
---
Predecessors: [0x209]
Successors: [0x566]
---
0x211 JUMPDEST
0x212 PUSH2 0x219
0x215 PUSH2 0x566
0x218 JUMP
---
0x211: JUMPDEST 
0x212: V168 = 0x219
0x215: V169 = 0x566
0x218: JUMP 0x566
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x219]
Exit stack: [V10, 0x219]

================================

Block 0x219
[0x219:0x23e]
---
Predecessors: [0x5a4, 0x844]
Successors: [0x23f, 0x25f]
---
0x219 JUMPDEST
0x21a PUSH1 0x40
0x21c DUP1
0x21d MLOAD
0x21e PUSH1 0x20
0x220 DUP1
0x221 DUP3
0x222 MSTORE
0x223 DUP4
0x224 MLOAD
0x225 DUP2
0x226 DUP4
0x227 ADD
0x228 MSTORE
0x229 DUP4
0x22a MLOAD
0x22b SWAP2
0x22c SWAP3
0x22d DUP4
0x22e SWAP3
0x22f SWAP1
0x230 DUP4
0x231 ADD
0x232 SWAP2
0x233 DUP6
0x234 ADD
0x235 SWAP1
0x236 DUP1
0x237 DUP4
0x238 DUP4
0x239 DUP3
0x23a ISZERO
0x23b PUSH2 0x25f
0x23e JUMPI
---
0x219: JUMPDEST 
0x21a: V170 = 0x40
0x21d: V171 = M[0x40]
0x21e: V172 = 0x20
0x222: M[V171] = 0x20
0x224: V173 = M[S0]
0x227: V174 = ADD V171 0x20
0x228: M[V174] = V173
0x22a: V175 = M[S0]
0x231: V176 = ADD V171 0x40
0x234: V177 = ADD S0 0x20
0x23a: V178 = ISZERO V175
0x23b: V179 = 0x25f
0x23e: JUMPI 0x25f V178
---
Entry stack: [V10, S0]
Stack pops: 1
Stack additions: [S0, V171, V171, V176, V177, V175, V175, V176, V177]
Exit stack: [V10, S0, V171, V171, V176, V177, V175, V175, V176, V177]

================================

Block 0x23f
[0x23f:0x24c]
---
Predecessors: [0x219, 0x24d, 0x405]
Successors: [0x24d, 0x25f]
---
0x23f JUMPDEST
0x240 DUP1
0x241 MLOAD
0x242 DUP3
0x243 MSTORE
0x244 PUSH1 0x20
0x246 DUP4
0x247 GT
0x248 ISZERO
0x249 PUSH2 0x25f
0x24c JUMPI
---
0x23f: JUMPDEST 
0x241: V180 = M[S0]
0x243: M[S1] = V180
0x244: V181 = 0x20
0x247: V182 = GT S2 0x20
0x248: V183 = ISZERO V182
0x249: V184 = 0x25f
0x24c: JUMPI 0x25f V183
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x24d
[0x24d:0x25e]
---
Predecessors: [0x23f]
Successors: [0x23f]
---
0x24d PUSH1 0x1f
0x24f NOT
0x250 SWAP1
0x251 SWAP3
0x252 ADD
0x253 SWAP2
0x254 PUSH1 0x20
0x256 SWAP2
0x257 DUP3
0x258 ADD
0x259 SWAP2
0x25a ADD
0x25b PUSH2 0x23f
0x25e JUMP
---
0x24d: V185 = 0x1f
0x24f: V186 = NOT 0x1f
0x252: V187 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x254: V188 = 0x20
0x258: V189 = ADD 0x20 S1
0x25a: V190 = ADD 0x20 S0
0x25b: V191 = 0x23f
0x25e: JUMP 0x23f
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V187, V189, V190]
Exit stack: [V10, S8, S7, S6, S5, S4, S3, V187, V189, V190]

================================

Block 0x25f
[0x25f:0x271]
---
Predecessors: [0x219, 0x23f, 0x3d1, 0x3f7]
Successors: [0x272, 0x28b]
---
0x25f JUMPDEST
0x260 POP
0x261 POP
0x262 POP
0x263 SWAP1
0x264 POP
0x265 SWAP1
0x266 DUP2
0x267 ADD
0x268 SWAP1
0x269 PUSH1 0x1f
0x26b AND
0x26c DUP1
0x26d ISZERO
0x26e PUSH2 0x28b
0x271 JUMPI
---
0x25f: JUMPDEST 
0x267: V192 = ADD S3 S5
0x269: V193 = 0x1f
0x26b: V194 = AND 0x1f S3
0x26d: V195 = ISZERO V194
0x26e: V196 = 0x28b
0x271: JUMPI 0x28b V195
---
Entry stack: [V10, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V192, V194]
Exit stack: [V10, S8, S7, S6, V192, V194]

================================

Block 0x272
[0x272:0x28a]
---
Predecessors: [0x25f]
Successors: [0x28b]
---
0x272 DUP1
0x273 DUP3
0x274 SUB
0x275 DUP1
0x276 MLOAD
0x277 PUSH1 0x1
0x279 DUP4
0x27a PUSH1 0x20
0x27c SUB
0x27d PUSH2 0x100
0x280 EXP
0x281 SUB
0x282 NOT
0x283 AND
0x284 DUP2
0x285 MSTORE
0x286 PUSH1 0x20
0x288 ADD
0x289 SWAP2
0x28a POP
---
0x274: V197 = SUB V192 V194
0x276: V198 = M[V197]
0x277: V199 = 0x1
0x27a: V200 = 0x20
0x27c: V201 = SUB 0x20 V194
0x27d: V202 = 0x100
0x280: V203 = EXP 0x100 V201
0x281: V204 = SUB V203 0x1
0x282: V205 = NOT V204
0x283: V206 = AND V205 V198
0x285: M[V197] = V206
0x286: V207 = 0x20
0x288: V208 = ADD 0x20 V197
---
Entry stack: [V10, S4, S3, S2, V192, V194]
Stack pops: 2
Stack additions: [V208, S0]
Exit stack: [V10, S4, S3, S2, V208, V194]

================================

Block 0x28b
[0x28b:0x298]
---
Predecessors: [0x25f, 0x272, 0x417]
Successors: []
---
0x28b JUMPDEST
0x28c POP
0x28d SWAP3
0x28e POP
0x28f POP
0x290 POP
0x291 PUSH1 0x40
0x293 MLOAD
0x294 DUP1
0x295 SWAP2
0x296 SUB
0x297 SWAP1
0x298 RETURN
---
0x28b: JUMPDEST 
0x291: V209 = 0x40
0x293: V210 = M[0x40]
0x296: V211 = SUB S1 V210
0x298: RETURN V210 V211
---
Entry stack: [V10, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10]

================================

Block 0x299
[0x299:0x29f]
---
Predecessors: [0x3e]
Successors: [0x2a0, 0x2a1]
---
0x299 JUMPDEST
0x29a CALLVALUE
0x29b ISZERO
0x29c PUSH2 0x2a1
0x29f JUMPI
---
0x299: JUMPDEST 
0x29a: V212 = CALLVALUE
0x29b: V213 = ISZERO V212
0x29c: V214 = 0x2a1
0x29f: JUMPI 0x2a1 V213
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a0
[0x2a0:0x2a0]
---
Predecessors: [0x299]
Successors: []
---
0x2a0 INVALID
---
0x2a0: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2a1
[0x2a1:0x2b7]
---
Predecessors: [0x299]
Successors: [0x5a7]
---
0x2a1 JUMPDEST
0x2a2 PUSH2 0x2b8
0x2a5 PUSH1 0x1
0x2a7 PUSH1 0xa0
0x2a9 PUSH1 0x2
0x2ab EXP
0x2ac SUB
0x2ad PUSH1 0x4
0x2af CALLDATALOAD
0x2b0 AND
0x2b1 PUSH1 0x24
0x2b3 CALLDATALOAD
0x2b4 PUSH2 0x5a7
0x2b7 JUMP
---
0x2a1: JUMPDEST 
0x2a2: V215 = 0x2b8
0x2a5: V216 = 0x1
0x2a7: V217 = 0xa0
0x2a9: V218 = 0x2
0x2ab: V219 = EXP 0x2 0xa0
0x2ac: V220 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ad: V221 = 0x4
0x2af: V222 = CALLDATALOAD 0x4
0x2b0: V223 = AND V222 0xffffffffffffffffffffffffffffffffffffffff
0x2b1: V224 = 0x24
0x2b3: V225 = CALLDATALOAD 0x24
0x2b4: V226 = 0x5a7
0x2b7: JUMP 0x5a7
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2b8, V223, V225]
Exit stack: [V10, 0x2b8, V223, V225]

================================

Block 0x2b8
[0x2b8:0x2cb]
---
Predecessors: [0x64a, 0x780, 0x921, 0x946, 0xab9]
Successors: []
---
0x2b8 JUMPDEST
0x2b9 PUSH1 0x40
0x2bb DUP1
0x2bc MLOAD
0x2bd SWAP2
0x2be ISZERO
0x2bf ISZERO
0x2c0 DUP3
0x2c1 MSTORE
0x2c2 MLOAD
0x2c3 SWAP1
0x2c4 DUP2
0x2c5 SWAP1
0x2c6 SUB
0x2c7 PUSH1 0x20
0x2c9 ADD
0x2ca SWAP1
0x2cb RETURN
---
0x2b8: JUMPDEST 
0x2b9: V227 = 0x40
0x2bc: V228 = M[0x40]
0x2be: V229 = ISZERO S0
0x2bf: V230 = ISZERO V229
0x2c1: M[V228] = V230
0x2c2: V231 = M[0x40]
0x2c6: V232 = SUB V228 V231
0x2c7: V233 = 0x20
0x2c9: V234 = ADD 0x20 V232
0x2cb: RETURN V231 V234
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x2cc
[0x2cc:0x2d2]
---
Predecessors: [0x49]
Successors: [0x2d3, 0x2d4]
---
0x2cc JUMPDEST
0x2cd CALLVALUE
0x2ce ISZERO
0x2cf PUSH2 0x2d4
0x2d2 JUMPI
---
0x2cc: JUMPDEST 
0x2cd: V235 = CALLVALUE
0x2ce: V236 = ISZERO V235
0x2cf: V237 = 0x2d4
0x2d2: JUMPI 0x2d4 V236
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d3
[0x2d3:0x2d3]
---
Predecessors: [0x2cc]
Successors: []
---
0x2d3 INVALID
---
0x2d3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2d4
[0x2d4:0x2db]
---
Predecessors: [0x2cc]
Successors: [0x650]
---
0x2d4 JUMPDEST
0x2d5 PUSH2 0x2dc
0x2d8 PUSH2 0x650
0x2db JUMP
---
0x2d4: JUMPDEST 
0x2d5: V238 = 0x2dc
0x2d8: V239 = 0x650
0x2db: JUMP 0x650
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2dc]
Exit stack: [V10, 0x2dc]

================================

Block 0x2dc
[0x2dc:0x2ed]
---
Predecessors: [0x650, 0x656, 0x7d5, 0x940, 0x976]
Successors: []
---
0x2dc JUMPDEST
0x2dd PUSH1 0x40
0x2df DUP1
0x2e0 MLOAD
0x2e1 SWAP2
0x2e2 DUP3
0x2e3 MSTORE
0x2e4 MLOAD
0x2e5 SWAP1
0x2e6 DUP2
0x2e7 SWAP1
0x2e8 SUB
0x2e9 PUSH1 0x20
0x2eb ADD
0x2ec SWAP1
0x2ed RETURN
---
0x2dc: JUMPDEST 
0x2dd: V240 = 0x40
0x2e0: V241 = M[0x40]
0x2e3: M[V241] = S0
0x2e4: V242 = M[0x40]
0x2e8: V243 = SUB V241 V242
0x2e9: V244 = 0x20
0x2eb: V245 = ADD 0x20 V243
0x2ed: RETURN V242 V245
---
Entry stack: [V10, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, S1]

================================

Block 0x2ee
[0x2ee:0x2f4]
---
Predecessors: [0x54]
Successors: [0x2f5, 0x2f6]
---
0x2ee JUMPDEST
0x2ef CALLVALUE
0x2f0 ISZERO
0x2f1 PUSH2 0x2f6
0x2f4 JUMPI
---
0x2ee: JUMPDEST 
0x2ef: V246 = CALLVALUE
0x2f0: V247 = ISZERO V246
0x2f1: V248 = 0x2f6
0x2f4: JUMPI 0x2f6 V247
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f5
[0x2f5:0x2f5]
---
Predecessors: [0x2ee]
Successors: []
---
0x2f5 INVALID
---
0x2f5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2f6
[0x2f6:0x2fd]
---
Predecessors: [0x2ee]
Successors: [0x656]
---
0x2f6 JUMPDEST
0x2f7 PUSH2 0x2dc
0x2fa PUSH2 0x656
0x2fd JUMP
---
0x2f6: JUMPDEST 
0x2f7: V249 = 0x2dc
0x2fa: V250 = 0x656
0x2fd: JUMP 0x656
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2dc]
Exit stack: [V10, 0x2dc]

================================

Block 0x2fe
[0x2fe:0x30f]
---
Predecessors: []
Successors: []
---
0x2fe JUMPDEST
0x2ff PUSH1 0x40
0x301 DUP1
0x302 MLOAD
0x303 SWAP2
0x304 DUP3
0x305 MSTORE
0x306 MLOAD
0x307 SWAP1
0x308 DUP2
0x309 SWAP1
0x30a SUB
0x30b PUSH1 0x20
0x30d ADD
0x30e SWAP1
0x30f RETURN
---
0x2fe: JUMPDEST 
0x2ff: V251 = 0x40
0x302: V252 = M[0x40]
0x305: M[V252] = S0
0x306: V253 = M[0x40]
0x30a: V254 = SUB V252 V253
0x30b: V255 = 0x20
0x30d: V256 = ADD 0x20 V254
0x30f: RETURN V253 V256
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x310
[0x310:0x316]
---
Predecessors: [0x5f]
Successors: [0x317, 0x318]
---
0x310 JUMPDEST
0x311 CALLVALUE
0x312 ISZERO
0x313 PUSH2 0x318
0x316 JUMPI
---
0x310: JUMPDEST 
0x311: V257 = CALLVALUE
0x312: V258 = ISZERO V257
0x313: V259 = 0x318
0x316: JUMPI 0x318 V258
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x317
[0x317:0x317]
---
Predecessors: [0x310]
Successors: []
---
0x317 INVALID
---
0x317: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x318
[0x318:0x334]
---
Predecessors: [0x310]
Successors: [0x65c]
---
0x318 JUMPDEST
0x319 PUSH2 0x2b8
0x31c PUSH1 0x1
0x31e PUSH1 0xa0
0x320 PUSH1 0x2
0x322 EXP
0x323 SUB
0x324 PUSH1 0x4
0x326 CALLDATALOAD
0x327 DUP2
0x328 AND
0x329 SWAP1
0x32a PUSH1 0x24
0x32c CALLDATALOAD
0x32d AND
0x32e PUSH1 0x44
0x330 CALLDATALOAD
0x331 PUSH2 0x65c
0x334 JUMP
---
0x318: JUMPDEST 
0x319: V260 = 0x2b8
0x31c: V261 = 0x1
0x31e: V262 = 0xa0
0x320: V263 = 0x2
0x322: V264 = EXP 0x2 0xa0
0x323: V265 = SUB 0x10000000000000000000000000000000000000000 0x1
0x324: V266 = 0x4
0x326: V267 = CALLDATALOAD 0x4
0x328: V268 = AND 0xffffffffffffffffffffffffffffffffffffffff V267
0x32a: V269 = 0x24
0x32c: V270 = CALLDATALOAD 0x24
0x32d: V271 = AND V270 0xffffffffffffffffffffffffffffffffffffffff
0x32e: V272 = 0x44
0x330: V273 = CALLDATALOAD 0x44
0x331: V274 = 0x65c
0x334: JUMP 0x65c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2b8, V268, V271, V273]
Exit stack: [V10, 0x2b8, V268, V271, V273]

================================

Block 0x335
[0x335:0x348]
---
Predecessors: []
Successors: []
---
0x335 JUMPDEST
0x336 PUSH1 0x40
0x338 DUP1
0x339 MLOAD
0x33a SWAP2
0x33b ISZERO
0x33c ISZERO
0x33d DUP3
0x33e MSTORE
0x33f MLOAD
0x340 SWAP1
0x341 DUP2
0x342 SWAP1
0x343 SUB
0x344 PUSH1 0x20
0x346 ADD
0x347 SWAP1
0x348 RETURN
---
0x335: JUMPDEST 
0x336: V275 = 0x40
0x339: V276 = M[0x40]
0x33b: V277 = ISZERO S0
0x33c: V278 = ISZERO V277
0x33e: M[V276] = V278
0x33f: V279 = M[0x40]
0x343: V280 = SUB V276 V279
0x344: V281 = 0x20
0x346: V282 = ADD 0x20 V280
0x348: RETURN V279 V282
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x349
[0x349:0x34f]
---
Predecessors: [0x6a]
Successors: [0x350, 0x351]
---
0x349 JUMPDEST
0x34a CALLVALUE
0x34b ISZERO
0x34c PUSH2 0x351
0x34f JUMPI
---
0x349: JUMPDEST 
0x34a: V283 = CALLVALUE
0x34b: V284 = ISZERO V283
0x34c: V285 = 0x351
0x34f: JUMPI 0x351 V284
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x350
[0x350:0x350]
---
Predecessors: [0x349]
Successors: []
---
0x350 INVALID
---
0x350: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x351
[0x351:0x358]
---
Predecessors: [0x349]
Successors: [0x78c]
---
0x351 JUMPDEST
0x352 PUSH2 0x359
0x355 PUSH2 0x78c
0x358 JUMP
---
0x351: JUMPDEST 
0x352: V286 = 0x359
0x355: V287 = 0x78c
0x358: JUMP 0x78c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x359]
Exit stack: [V10, 0x359]

================================

Block 0x359
[0x359:0x36e]
---
Predecessors: [0x78f]
Successors: []
---
0x359 JUMPDEST
0x35a PUSH1 0x40
0x35c DUP1
0x35d MLOAD
0x35e PUSH1 0xff
0x360 SWAP1
0x361 SWAP3
0x362 AND
0x363 DUP3
0x364 MSTORE
0x365 MLOAD
0x366 SWAP1
0x367 DUP2
0x368 SWAP1
0x369 SUB
0x36a PUSH1 0x20
0x36c ADD
0x36d SWAP1
0x36e RETURN
---
0x359: JUMPDEST 
0x35a: V288 = 0x40
0x35d: V289 = M[0x40]
0x35e: V290 = 0xff
0x362: V291 = AND 0x12 0xff
0x364: M[V289] = 0x12
0x365: V292 = M[0x40]
0x369: V293 = SUB V289 V292
0x36a: V294 = 0x20
0x36c: V295 = ADD 0x20 V293
0x36e: RETURN V292 V295
---
Entry stack: [V10, 0x12]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x36f
[0x36f:0x375]
---
Predecessors: [0x75]
Successors: [0x376, 0x377]
---
0x36f JUMPDEST
0x370 CALLVALUE
0x371 ISZERO
0x372 PUSH2 0x377
0x375 JUMPI
---
0x36f: JUMPDEST 
0x370: V296 = CALLVALUE
0x371: V297 = ISZERO V296
0x372: V298 = 0x377
0x375: JUMPI 0x377 V297
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x376
[0x376:0x376]
---
Predecessors: [0x36f]
Successors: []
---
0x376 INVALID
---
0x376: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x377
[0x377:0x37e]
---
Predecessors: [0x36f]
Successors: [0x792]
---
0x377 JUMPDEST
0x378 PUSH2 0x207
0x37b PUSH2 0x792
0x37e JUMP
---
0x377: JUMPDEST 
0x378: V299 = 0x207
0x37b: V300 = 0x792
0x37e: JUMP 0x792
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x207]
Exit stack: [V10, 0x207]

================================

Block 0x37f
[0x37f:0x380]
---
Predecessors: []
Successors: []
---
0x37f JUMPDEST
0x380 STOP
---
0x37f: JUMPDEST 
0x380: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x381
[0x381:0x387]
---
Predecessors: [0x80]
Successors: [0x388, 0x389]
---
0x381 JUMPDEST
0x382 CALLVALUE
0x383 ISZERO
0x384 PUSH2 0x389
0x387 JUMPI
---
0x381: JUMPDEST 
0x382: V301 = CALLVALUE
0x383: V302 = ISZERO V301
0x384: V303 = 0x389
0x387: JUMPI 0x389 V302
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x388
[0x388:0x388]
---
Predecessors: [0x381]
Successors: []
---
0x388 INVALID
---
0x388: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x389
[0x389:0x39c]
---
Predecessors: [0x381]
Successors: [0x7bb]
---
0x389 JUMPDEST
0x38a PUSH2 0x2dc
0x38d PUSH1 0x1
0x38f PUSH1 0xa0
0x391 PUSH1 0x2
0x393 EXP
0x394 SUB
0x395 PUSH1 0x4
0x397 CALLDATALOAD
0x398 AND
0x399 PUSH2 0x7bb
0x39c JUMP
---
0x389: JUMPDEST 
0x38a: V304 = 0x2dc
0x38d: V305 = 0x1
0x38f: V306 = 0xa0
0x391: V307 = 0x2
0x393: V308 = EXP 0x2 0xa0
0x394: V309 = SUB 0x10000000000000000000000000000000000000000 0x1
0x395: V310 = 0x4
0x397: V311 = CALLDATALOAD 0x4
0x398: V312 = AND V311 0xffffffffffffffffffffffffffffffffffffffff
0x399: V313 = 0x7bb
0x39c: JUMP 0x7bb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2dc, V312]
Exit stack: [V10, 0x2dc, V312]

================================

Block 0x39d
[0x39d:0x3ae]
---
Predecessors: []
Successors: []
---
0x39d JUMPDEST
0x39e PUSH1 0x40
0x3a0 DUP1
0x3a1 MLOAD
0x3a2 SWAP2
0x3a3 DUP3
0x3a4 MSTORE
0x3a5 MLOAD
0x3a6 SWAP1
0x3a7 DUP2
0x3a8 SWAP1
0x3a9 SUB
0x3aa PUSH1 0x20
0x3ac ADD
0x3ad SWAP1
0x3ae RETURN
---
0x39d: JUMPDEST 
0x39e: V314 = 0x40
0x3a1: V315 = M[0x40]
0x3a4: M[V315] = S0
0x3a5: V316 = M[0x40]
0x3a9: V317 = SUB V315 V316
0x3aa: V318 = 0x20
0x3ac: V319 = ADD 0x20 V317
0x3ae: RETURN V316 V319
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x3af
[0x3af:0x3b5]
---
Predecessors: [0x8b]
Successors: [0x3b6, 0x3b7]
---
0x3af JUMPDEST
0x3b0 CALLVALUE
0x3b1 ISZERO
0x3b2 PUSH2 0x3b7
0x3b5 JUMPI
---
0x3af: JUMPDEST 
0x3b0: V320 = CALLVALUE
0x3b1: V321 = ISZERO V320
0x3b2: V322 = 0x3b7
0x3b5: JUMPI 0x3b7 V321
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3b6
[0x3b6:0x3b6]
---
Predecessors: [0x3af]
Successors: []
---
0x3b6 INVALID
---
0x3b6: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3b7
[0x3b7:0x3be]
---
Predecessors: [0x3af]
Successors: [0x7da]
---
0x3b7 JUMPDEST
0x3b8 PUSH2 0x207
0x3bb PUSH2 0x7da
0x3be JUMP
---
0x3b7: JUMPDEST 
0x3b8: V323 = 0x207
0x3bb: V324 = 0x7da
0x3be: JUMP 0x7da
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x207]
Exit stack: [V10, 0x207]

================================

Block 0x3bf
[0x3bf:0x3c0]
---
Predecessors: []
Successors: []
---
0x3bf JUMPDEST
0x3c0 STOP
---
0x3bf: JUMPDEST 
0x3c0: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3c1
[0x3c1:0x3c7]
---
Predecessors: [0x96]
Successors: [0x3c8, 0x3c9]
---
0x3c1 JUMPDEST
0x3c2 CALLVALUE
0x3c3 ISZERO
0x3c4 PUSH2 0x3c9
0x3c7 JUMPI
---
0x3c1: JUMPDEST 
0x3c2: V325 = CALLVALUE
0x3c3: V326 = ISZERO V325
0x3c4: V327 = 0x3c9
0x3c7: JUMPI 0x3c9 V326
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c8
[0x3c8:0x3c8]
---
Predecessors: [0x3c1]
Successors: []
---
0x3c8 INVALID
---
0x3c8: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3c9
[0x3c9:0x3d0]
---
Predecessors: [0x3c1]
Successors: [0x806]
---
0x3c9 JUMPDEST
0x3ca PUSH2 0x219
0x3cd PUSH2 0x806
0x3d0 JUMP
---
0x3c9: JUMPDEST 
0x3ca: V328 = 0x219
0x3cd: V329 = 0x806
0x3d0: JUMP 0x806
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x219]
Exit stack: [V10, 0x219]

================================

Block 0x3d1
[0x3d1:0x3f6]
---
Predecessors: []
Successors: [0x25f, 0x3f7]
---
0x3d1 JUMPDEST
0x3d2 PUSH1 0x40
0x3d4 DUP1
0x3d5 MLOAD
0x3d6 PUSH1 0x20
0x3d8 DUP1
0x3d9 DUP3
0x3da MSTORE
0x3db DUP4
0x3dc MLOAD
0x3dd DUP2
0x3de DUP4
0x3df ADD
0x3e0 MSTORE
0x3e1 DUP4
0x3e2 MLOAD
0x3e3 SWAP2
0x3e4 SWAP3
0x3e5 DUP4
0x3e6 SWAP3
0x3e7 SWAP1
0x3e8 DUP4
0x3e9 ADD
0x3ea SWAP2
0x3eb DUP6
0x3ec ADD
0x3ed SWAP1
0x3ee DUP1
0x3ef DUP4
0x3f0 DUP4
0x3f1 DUP3
0x3f2 ISZERO
0x3f3 PUSH2 0x25f
0x3f6 JUMPI
---
0x3d1: JUMPDEST 
0x3d2: V330 = 0x40
0x3d5: V331 = M[0x40]
0x3d6: V332 = 0x20
0x3da: M[V331] = 0x20
0x3dc: V333 = M[S0]
0x3df: V334 = ADD V331 0x20
0x3e0: M[V334] = V333
0x3e2: V335 = M[S0]
0x3e9: V336 = ADD V331 0x40
0x3ec: V337 = ADD S0 0x20
0x3f2: V338 = ISZERO V335
0x3f3: V339 = 0x25f
0x3f6: JUMPI 0x25f V338
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V331, V331, V336, V337, V335, V335, V336, V337]
Exit stack: [S0, V331, V331, V336, V337, V335, V335, V336, V337]

================================

Block 0x3f7
[0x3f7:0x404]
---
Predecessors: [0x3d1]
Successors: [0x25f, 0x405]
---
0x3f7 JUMPDEST
0x3f8 DUP1
0x3f9 MLOAD
0x3fa DUP3
0x3fb MSTORE
0x3fc PUSH1 0x20
0x3fe DUP4
0x3ff GT
0x400 ISZERO
0x401 PUSH2 0x25f
0x404 JUMPI
---
0x3f7: JUMPDEST 
0x3f9: V340 = M[V337]
0x3fb: M[V336] = V340
0x3fc: V341 = 0x20
0x3ff: V342 = GT V335 0x20
0x400: V343 = ISZERO V342
0x401: V344 = 0x25f
0x404: JUMPI 0x25f V343
---
Entry stack: [S8, V331, V331, V336, V337, V335, V335, V336, V337]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V331, V331, V336, V337, V335, V335, V336, V337]

================================

Block 0x405
[0x405:0x416]
---
Predecessors: [0x3f7]
Successors: [0x23f]
---
0x405 PUSH1 0x1f
0x407 NOT
0x408 SWAP1
0x409 SWAP3
0x40a ADD
0x40b SWAP2
0x40c PUSH1 0x20
0x40e SWAP2
0x40f DUP3
0x410 ADD
0x411 SWAP2
0x412 ADD
0x413 PUSH2 0x23f
0x416 JUMP
---
0x405: V345 = 0x1f
0x407: V346 = NOT 0x1f
0x40a: V347 = ADD V335 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x40c: V348 = 0x20
0x410: V349 = ADD 0x20 V336
0x412: V350 = ADD 0x20 V337
0x413: V351 = 0x23f
0x416: JUMP 0x23f
---
Entry stack: [S8, V331, V331, V336, V337, V335, V335, V336, V337]
Stack pops: 3
Stack additions: [V347, V349, V350]
Exit stack: [S8, V331, V331, V336, V337, V335, V347, V349, V350]

================================

Block 0x417
[0x417:0x429]
---
Predecessors: []
Successors: [0x28b, 0x42a]
---
0x417 JUMPDEST
0x418 POP
0x419 POP
0x41a POP
0x41b SWAP1
0x41c POP
0x41d SWAP1
0x41e DUP2
0x41f ADD
0x420 SWAP1
0x421 PUSH1 0x1f
0x423 AND
0x424 DUP1
0x425 ISZERO
0x426 PUSH2 0x28b
0x429 JUMPI
---
0x417: JUMPDEST 
0x41f: V352 = ADD S3 S5
0x421: V353 = 0x1f
0x423: V354 = AND 0x1f S3
0x425: V355 = ISZERO V354
0x426: V356 = 0x28b
0x429: JUMPI 0x28b V355
---
Entry stack: []
Stack pops: 6
Stack additions: [V352, V354]
Exit stack: [V352, V354]

================================

Block 0x42a
[0x42a:0x442]
---
Predecessors: [0x417]
Successors: [0x443]
---
0x42a DUP1
0x42b DUP3
0x42c SUB
0x42d DUP1
0x42e MLOAD
0x42f PUSH1 0x1
0x431 DUP4
0x432 PUSH1 0x20
0x434 SUB
0x435 PUSH2 0x100
0x438 EXP
0x439 SUB
0x43a NOT
0x43b AND
0x43c DUP2
0x43d MSTORE
0x43e PUSH1 0x20
0x440 ADD
0x441 SWAP2
0x442 POP
---
0x42c: V357 = SUB V352 V354
0x42e: V358 = M[V357]
0x42f: V359 = 0x1
0x432: V360 = 0x20
0x434: V361 = SUB 0x20 V354
0x435: V362 = 0x100
0x438: V363 = EXP 0x100 V361
0x439: V364 = SUB V363 0x1
0x43a: V365 = NOT V364
0x43b: V366 = AND V365 V358
0x43d: M[V357] = V366
0x43e: V367 = 0x20
0x440: V368 = ADD 0x20 V357
---
Entry stack: [V352, V354]
Stack pops: 2
Stack additions: [V368, S0]
Exit stack: [V368, V354]

================================

Block 0x443
[0x443:0x450]
---
Predecessors: [0x42a]
Successors: []
---
0x443 JUMPDEST
0x444 POP
0x445 SWAP3
0x446 POP
0x447 POP
0x448 POP
0x449 PUSH1 0x40
0x44b MLOAD
0x44c DUP1
0x44d SWAP2
0x44e SUB
0x44f SWAP1
0x450 RETURN
---
0x443: JUMPDEST 
0x449: V369 = 0x40
0x44b: V370 = M[0x40]
0x44e: V371 = SUB V368 V370
0x450: RETURN V370 V371
---
Entry stack: [V368, V354]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x451
[0x451:0x457]
---
Predecessors: [0xa1]
Successors: [0x458, 0x459]
---
0x451 JUMPDEST
0x452 CALLVALUE
0x453 ISZERO
0x454 PUSH2 0x459
0x457 JUMPI
---
0x451: JUMPDEST 
0x452: V372 = CALLVALUE
0x453: V373 = ISZERO V372
0x454: V374 = 0x459
0x457: JUMPI 0x459 V373
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x458
[0x458:0x458]
---
Predecessors: [0x451]
Successors: []
---
0x458 INVALID
---
0x458: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x459
[0x459:0x46f]
---
Predecessors: [0x451]
Successors: [0x847]
---
0x459 JUMPDEST
0x45a PUSH2 0x2b8
0x45d PUSH1 0x1
0x45f PUSH1 0xa0
0x461 PUSH1 0x2
0x463 EXP
0x464 SUB
0x465 PUSH1 0x4
0x467 CALLDATALOAD
0x468 AND
0x469 PUSH1 0x24
0x46b CALLDATALOAD
0x46c PUSH2 0x847
0x46f JUMP
---
0x459: JUMPDEST 
0x45a: V375 = 0x2b8
0x45d: V376 = 0x1
0x45f: V377 = 0xa0
0x461: V378 = 0x2
0x463: V379 = EXP 0x2 0xa0
0x464: V380 = SUB 0x10000000000000000000000000000000000000000 0x1
0x465: V381 = 0x4
0x467: V382 = CALLDATALOAD 0x4
0x468: V383 = AND V382 0xffffffffffffffffffffffffffffffffffffffff
0x469: V384 = 0x24
0x46b: V385 = CALLDATALOAD 0x24
0x46c: V386 = 0x847
0x46f: JUMP 0x847
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2b8, V383, V385]
Exit stack: [V10, 0x2b8, V383, V385]

================================

Block 0x470
[0x470:0x483]
---
Predecessors: []
Successors: []
---
0x470 JUMPDEST
0x471 PUSH1 0x40
0x473 DUP1
0x474 MLOAD
0x475 SWAP2
0x476 ISZERO
0x477 ISZERO
0x478 DUP3
0x479 MSTORE
0x47a MLOAD
0x47b SWAP1
0x47c DUP2
0x47d SWAP1
0x47e SUB
0x47f PUSH1 0x20
0x481 ADD
0x482 SWAP1
0x483 RETURN
---
0x470: JUMPDEST 
0x471: V387 = 0x40
0x474: V388 = M[0x40]
0x476: V389 = ISZERO S0
0x477: V390 = ISZERO V389
0x479: M[V388] = V390
0x47a: V391 = M[0x40]
0x47e: V392 = SUB V388 V391
0x47f: V393 = 0x20
0x481: V394 = ADD 0x20 V392
0x483: RETURN V391 V394
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x484
[0x484:0x48a]
---
Predecessors: [0xac]
Successors: [0x48b, 0x48c]
---
0x484 JUMPDEST
0x485 CALLVALUE
0x486 ISZERO
0x487 PUSH2 0x48c
0x48a JUMPI
---
0x484: JUMPDEST 
0x485: V395 = CALLVALUE
0x486: V396 = ISZERO V395
0x487: V397 = 0x48c
0x48a: JUMPI 0x48c V396
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x48b
[0x48b:0x48b]
---
Predecessors: [0x484]
Successors: []
---
0x48b INVALID
---
0x48b: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x48c
[0x48c:0x493]
---
Predecessors: [0x484]
Successors: [0x92a]
---
0x48c JUMPDEST
0x48d PUSH2 0x494
0x490 PUSH2 0x92a
0x493 JUMP
---
0x48c: JUMPDEST 
0x48d: V398 = 0x494
0x490: V399 = 0x92a
0x493: JUMP 0x92a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x494]
Exit stack: [V10, 0x494]

================================

Block 0x494
[0x494:0x4bb]
---
Predecessors: [0x93a]
Successors: []
---
0x494 JUMPDEST
0x495 PUSH1 0x40
0x497 DUP1
0x498 MLOAD
0x499 SWAP5
0x49a DUP6
0x49b MSTORE
0x49c PUSH1 0x20
0x49e DUP6
0x49f ADD
0x4a0 SWAP4
0x4a1 SWAP1
0x4a2 SWAP4
0x4a3 MSTORE
0x4a4 DUP4
0x4a5 DUP4
0x4a6 ADD
0x4a7 SWAP2
0x4a8 SWAP1
0x4a9 SWAP2
0x4aa MSTORE
0x4ab ISZERO
0x4ac ISZERO
0x4ad PUSH1 0x60
0x4af DUP4
0x4b0 ADD
0x4b1 MSTORE
0x4b2 MLOAD
0x4b3 SWAP1
0x4b4 DUP2
0x4b5 SWAP1
0x4b6 SUB
0x4b7 PUSH1 0x80
0x4b9 ADD
0x4ba SWAP1
0x4bb RETURN
---
0x494: JUMPDEST 
0x495: V400 = 0x40
0x498: V401 = M[0x40]
0x49b: M[V401] = V742
0x49c: V402 = 0x20
0x49f: V403 = ADD V401 0x20
0x4a3: M[V403] = V744
0x4a6: V404 = ADD 0x40 V401
0x4aa: M[V404] = V746
0x4ab: V405 = ISZERO V750
0x4ac: V406 = ISZERO V405
0x4ad: V407 = 0x60
0x4b0: V408 = ADD V401 0x60
0x4b1: M[V408] = V406
0x4b2: V409 = M[0x40]
0x4b6: V410 = SUB V401 V409
0x4b7: V411 = 0x80
0x4b9: V412 = ADD 0x80 V410
0x4bb: RETURN V409 V412
---
Entry stack: [V10, V742, V744, V746, V750]
Stack pops: 4
Stack additions: []
Exit stack: [V10]

================================

Block 0x4bc
[0x4bc:0x4c2]
---
Predecessors: [0xb7]
Successors: [0x4c3, 0x4c4]
---
0x4bc JUMPDEST
0x4bd CALLVALUE
0x4be ISZERO
0x4bf PUSH2 0x4c4
0x4c2 JUMPI
---
0x4bc: JUMPDEST 
0x4bd: V413 = CALLVALUE
0x4be: V414 = ISZERO V413
0x4bf: V415 = 0x4c4
0x4c2: JUMPI 0x4c4 V414
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4c3
[0x4c3:0x4c3]
---
Predecessors: [0x4bc]
Successors: []
---
0x4c3 INVALID
---
0x4c3: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4c4
[0x4c4:0x4cb]
---
Predecessors: [0x4bc]
Successors: [0x940]
---
0x4c4 JUMPDEST
0x4c5 PUSH2 0x2dc
0x4c8 PUSH2 0x940
0x4cb JUMP
---
0x4c4: JUMPDEST 
0x4c5: V416 = 0x2dc
0x4c8: V417 = 0x940
0x4cb: JUMP 0x940
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2dc]
Exit stack: [V10, 0x2dc]

================================

Block 0x4cc
[0x4cc:0x4dd]
---
Predecessors: []
Successors: []
---
0x4cc JUMPDEST
0x4cd PUSH1 0x40
0x4cf DUP1
0x4d0 MLOAD
0x4d1 SWAP2
0x4d2 DUP3
0x4d3 MSTORE
0x4d4 MLOAD
0x4d5 SWAP1
0x4d6 DUP2
0x4d7 SWAP1
0x4d8 SUB
0x4d9 PUSH1 0x20
0x4db ADD
0x4dc SWAP1
0x4dd RETURN
---
0x4cc: JUMPDEST 
0x4cd: V418 = 0x40
0x4d0: V419 = M[0x40]
0x4d3: M[V419] = S0
0x4d4: V420 = M[0x40]
0x4d8: V421 = SUB V419 V420
0x4d9: V422 = 0x20
0x4db: V423 = ADD 0x20 V421
0x4dd: RETURN V420 V423
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4de
[0x4de:0x4e4]
---
Predecessors: [0xc2]
Successors: [0x4e5, 0x4e6]
---
0x4de JUMPDEST
0x4df CALLVALUE
0x4e0 ISZERO
0x4e1 PUSH2 0x4e6
0x4e4 JUMPI
---
0x4de: JUMPDEST 
0x4df: V424 = CALLVALUE
0x4e0: V425 = ISZERO V424
0x4e1: V426 = 0x4e6
0x4e4: JUMPI 0x4e6 V425
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4e5
[0x4e5:0x4e5]
---
Predecessors: [0x4de]
Successors: []
---
0x4e5 INVALID
---
0x4e5: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4e6
[0x4e6:0x4ed]
---
Predecessors: [0x4de]
Successors: [0x946]
---
0x4e6 JUMPDEST
0x4e7 PUSH2 0x2b8
0x4ea PUSH2 0x946
0x4ed JUMP
---
0x4e6: JUMPDEST 
0x4e7: V427 = 0x2b8
0x4ea: V428 = 0x946
0x4ed: JUMP 0x946
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2b8]
Exit stack: [V10, 0x2b8]

================================

Block 0x4ee
[0x4ee:0x501]
---
Predecessors: []
Successors: []
---
0x4ee JUMPDEST
0x4ef PUSH1 0x40
0x4f1 DUP1
0x4f2 MLOAD
0x4f3 SWAP2
0x4f4 ISZERO
0x4f5 ISZERO
0x4f6 DUP3
0x4f7 MSTORE
0x4f8 MLOAD
0x4f9 SWAP1
0x4fa DUP2
0x4fb SWAP1
0x4fc SUB
0x4fd PUSH1 0x20
0x4ff ADD
0x500 SWAP1
0x501 RETURN
---
0x4ee: JUMPDEST 
0x4ef: V429 = 0x40
0x4f2: V430 = M[0x40]
0x4f4: V431 = ISZERO S0
0x4f5: V432 = ISZERO V431
0x4f7: M[V430] = V432
0x4f8: V433 = M[0x40]
0x4fc: V434 = SUB V430 V433
0x4fd: V435 = 0x20
0x4ff: V436 = ADD 0x20 V434
0x501: RETURN V433 V436
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x502
[0x502:0x508]
---
Predecessors: [0xcd]
Successors: [0x509, 0x50a]
---
0x502 JUMPDEST
0x503 CALLVALUE
0x504 ISZERO
0x505 PUSH2 0x50a
0x508 JUMPI
---
0x502: JUMPDEST 
0x503: V437 = CALLVALUE
0x504: V438 = ISZERO V437
0x505: V439 = 0x50a
0x508: JUMPI 0x50a V438
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x509
[0x509:0x509]
---
Predecessors: [0x502]
Successors: []
---
0x509 INVALID
---
0x509: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x50a
[0x50a:0x523]
---
Predecessors: [0x502]
Successors: [0x94f]
---
0x50a JUMPDEST
0x50b PUSH2 0x2dc
0x50e PUSH1 0x1
0x510 PUSH1 0xa0
0x512 PUSH1 0x2
0x514 EXP
0x515 SUB
0x516 PUSH1 0x4
0x518 CALLDATALOAD
0x519 DUP2
0x51a AND
0x51b SWAP1
0x51c PUSH1 0x24
0x51e CALLDATALOAD
0x51f AND
0x520 PUSH2 0x94f
0x523 JUMP
---
0x50a: JUMPDEST 
0x50b: V440 = 0x2dc
0x50e: V441 = 0x1
0x510: V442 = 0xa0
0x512: V443 = 0x2
0x514: V444 = EXP 0x2 0xa0
0x515: V445 = SUB 0x10000000000000000000000000000000000000000 0x1
0x516: V446 = 0x4
0x518: V447 = CALLDATALOAD 0x4
0x51a: V448 = AND 0xffffffffffffffffffffffffffffffffffffffff V447
0x51c: V449 = 0x24
0x51e: V450 = CALLDATALOAD 0x24
0x51f: V451 = AND V450 0xffffffffffffffffffffffffffffffffffffffff
0x520: V452 = 0x94f
0x523: JUMP 0x94f
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2dc, V448, V451]
Exit stack: [V10, 0x2dc, V448, V451]

================================

Block 0x524
[0x524:0x535]
---
Predecessors: []
Successors: []
---
0x524 JUMPDEST
0x525 PUSH1 0x40
0x527 DUP1
0x528 MLOAD
0x529 SWAP2
0x52a DUP3
0x52b MSTORE
0x52c MLOAD
0x52d SWAP1
0x52e DUP2
0x52f SWAP1
0x530 SUB
0x531 PUSH1 0x20
0x533 ADD
0x534 SWAP1
0x535 RETURN
---
0x524: JUMPDEST 
0x525: V453 = 0x40
0x528: V454 = M[0x40]
0x52b: M[V454] = S0
0x52c: V455 = M[0x40]
0x530: V456 = SUB V454 V455
0x531: V457 = 0x20
0x533: V458 = ADD 0x20 V456
0x535: RETURN V455 V458
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x536
[0x536:0x53c]
---
Predecessors: [0xd8]
Successors: [0x53d, 0x53e]
---
0x536 JUMPDEST
0x537 CALLVALUE
0x538 ISZERO
0x539 PUSH2 0x53e
0x53c JUMPI
---
0x536: JUMPDEST 
0x537: V459 = CALLVALUE
0x538: V460 = ISZERO V459
0x539: V461 = 0x53e
0x53c: JUMPI 0x53e V460
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x53d
[0x53d:0x53d]
---
Predecessors: [0x536]
Successors: []
---
0x53d INVALID
---
0x53d: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x53e
[0x53e:0x551]
---
Predecessors: [0x536]
Successors: [0x97c]
---
0x53e JUMPDEST
0x53f PUSH2 0x2b8
0x542 PUSH1 0x1
0x544 PUSH1 0xa0
0x546 PUSH1 0x2
0x548 EXP
0x549 SUB
0x54a PUSH1 0x4
0x54c CALLDATALOAD
0x54d AND
0x54e PUSH2 0x97c
0x551 JUMP
---
0x53e: JUMPDEST 
0x53f: V462 = 0x2b8
0x542: V463 = 0x1
0x544: V464 = 0xa0
0x546: V465 = 0x2
0x548: V466 = EXP 0x2 0xa0
0x549: V467 = SUB 0x10000000000000000000000000000000000000000 0x1
0x54a: V468 = 0x4
0x54c: V469 = CALLDATALOAD 0x4
0x54d: V470 = AND V469 0xffffffffffffffffffffffffffffffffffffffff
0x54e: V471 = 0x97c
0x551: JUMP 0x97c
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x2b8, V470]
Exit stack: [V10, 0x2b8, V470]

================================

Block 0x552
[0x552:0x565]
---
Predecessors: []
Successors: []
---
0x552 JUMPDEST
0x553 PUSH1 0x40
0x555 DUP1
0x556 MLOAD
0x557 SWAP2
0x558 ISZERO
0x559 ISZERO
0x55a DUP3
0x55b MSTORE
0x55c MLOAD
0x55d SWAP1
0x55e DUP2
0x55f SWAP1
0x560 SUB
0x561 PUSH1 0x20
0x563 ADD
0x564 SWAP1
0x565 RETURN
---
0x552: JUMPDEST 
0x553: V472 = 0x40
0x556: V473 = M[0x40]
0x558: V474 = ISZERO S0
0x559: V475 = ISZERO V474
0x55b: M[V473] = V475
0x55c: V476 = M[0x40]
0x560: V477 = SUB V473 V476
0x561: V478 = 0x20
0x563: V479 = ADD 0x20 V477
0x565: RETURN V476 V479
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x566
[0x566:0x56d]
---
Predecessors: [0x211]
Successors: [0xac0]
---
0x566 JUMPDEST
0x567 PUSH2 0x56e
0x56a PUSH2 0xac0
0x56d JUMP
---
0x566: JUMPDEST 
0x567: V480 = 0x56e
0x56a: V481 = 0xac0
0x56d: JUMP 0xac0
---
Entry stack: [V10, 0x219]
Stack pops: 0
Stack additions: [0x56e]
Exit stack: [V10, 0x219, 0x56e]

================================

Block 0x56e
[0x56e:0x5a3]
---
Predecessors: [0xac0]
Successors: [0x5a4]
---
0x56e JUMPDEST
0x56f POP
0x570 PUSH1 0x40
0x572 DUP1
0x573 MLOAD
0x574 DUP1
0x575 DUP3
0x576 ADD
0x577 SWAP1
0x578 SWAP2
0x579 MSTORE
0x57a PUSH1 0x9
0x57c DUP2
0x57d MSTORE
0x57e PUSH32 0x4c616d626f436f696e0000000000000000000000000000000000000000000000
0x59f PUSH1 0x20
0x5a1 DUP3
0x5a2 ADD
0x5a3 MSTORE
---
0x56e: JUMPDEST 
0x570: V482 = 0x40
0x573: V483 = M[0x40]
0x576: V484 = ADD 0x40 V483
0x579: M[0x40] = V484
0x57a: V485 = 0x9
0x57d: M[V483] = 0x9
0x57e: V486 = 0x4c616d626f436f696e0000000000000000000000000000000000000000000000
0x59f: V487 = 0x20
0x5a2: V488 = ADD V483 0x20
0x5a3: M[V488] = 0x4c616d626f436f696e0000000000000000000000000000000000000000000000
---
Entry stack: [V10, 0x219, V877]
Stack pops: 1
Stack additions: [V483]
Exit stack: [V10, 0x219, V483]

================================

Block 0x5a4
[0x5a4:0x5a6]
---
Predecessors: [0x56e]
Successors: [0x219]
---
0x5a4 JUMPDEST
0x5a5 SWAP1
0x5a6 JUMP
---
0x5a4: JUMPDEST 
0x5a6: JUMP 0x219
---
Entry stack: [V10, 0x219, V483]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V483]

================================

Block 0x5a7
[0x5a7:0x5b2]
---
Predecessors: [0x2a1]
Successors: [0x5b3, 0x5dc]
---
0x5a7 JUMPDEST
0x5a8 PUSH1 0x0
0x5aa DUP2
0x5ab ISZERO
0x5ac DUP1
0x5ad ISZERO
0x5ae SWAP1
0x5af PUSH2 0x5dc
0x5b2 JUMPI
---
0x5a7: JUMPDEST 
0x5a8: V489 = 0x0
0x5ab: V490 = ISZERO V225
0x5ad: V491 = ISZERO V490
0x5af: V492 = 0x5dc
0x5b2: JUMPI 0x5dc V490
---
Entry stack: [V10, 0x2b8, V223, V225]
Stack pops: 1
Stack additions: [S0, 0x0, V491]
Exit stack: [V10, 0x2b8, V223, V225, 0x0, V491]

================================

Block 0x5b3
[0x5b3:0x5db]
---
Predecessors: [0x5a7]
Successors: [0x5dc]
---
0x5b3 POP
0x5b4 PUSH1 0x1
0x5b6 PUSH1 0xa0
0x5b8 PUSH1 0x2
0x5ba EXP
0x5bb SUB
0x5bc CALLER
0x5bd DUP2
0x5be AND
0x5bf PUSH1 0x0
0x5c1 SWAP1
0x5c2 DUP2
0x5c3 MSTORE
0x5c4 PUSH1 0x2
0x5c6 PUSH1 0x20
0x5c8 SWAP1
0x5c9 DUP2
0x5ca MSTORE
0x5cb PUSH1 0x40
0x5cd DUP1
0x5ce DUP4
0x5cf SHA3
0x5d0 SWAP4
0x5d1 DUP8
0x5d2 AND
0x5d3 DUP4
0x5d4 MSTORE
0x5d5 SWAP3
0x5d6 SWAP1
0x5d7 MSTORE
0x5d8 SHA3
0x5d9 SLOAD
0x5da ISZERO
0x5db ISZERO
---
0x5b4: V493 = 0x1
0x5b6: V494 = 0xa0
0x5b8: V495 = 0x2
0x5ba: V496 = EXP 0x2 0xa0
0x5bb: V497 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5bc: V498 = CALLER
0x5be: V499 = AND 0xffffffffffffffffffffffffffffffffffffffff V498
0x5bf: V500 = 0x0
0x5c3: M[0x0] = V499
0x5c4: V501 = 0x2
0x5c6: V502 = 0x20
0x5ca: M[0x20] = 0x2
0x5cb: V503 = 0x40
0x5cf: V504 = SHA3 0x0 0x40
0x5d2: V505 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x5d4: M[0x0] = V505
0x5d7: M[0x20] = V504
0x5d8: V506 = SHA3 0x0 0x40
0x5d9: V507 = S[V506]
0x5da: V508 = ISZERO V507
0x5db: V509 = ISZERO V508
---
Entry stack: [V10, 0x2b8, V223, V225, 0x0, V491]
Stack pops: 4
Stack additions: [S3, S2, S1, V509]
Exit stack: [V10, 0x2b8, V223, V225, 0x0, V509]

================================

Block 0x5dc
[0x5dc:0x5e1]
---
Predecessors: [0x5a7, 0x5b3]
Successors: [0x5e2, 0x5e9]
---
0x5dc JUMPDEST
0x5dd ISZERO
0x5de PUSH2 0x5e9
0x5e1 JUMPI
---
0x5dc: JUMPDEST 
0x5dd: V510 = ISZERO S0
0x5de: V511 = 0x5e9
0x5e1: JUMPI 0x5e9 V510
---
Entry stack: [V10, 0x2b8, V223, V225, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2b8, V223, V225, 0x0]

================================

Block 0x5e2
[0x5e2:0x5e8]
---
Predecessors: [0x5dc]
Successors: [0x64a]
---
0x5e2 POP
0x5e3 PUSH1 0x0
0x5e5 PUSH2 0x64a
0x5e8 JUMP
---
0x5e3: V512 = 0x0
0x5e5: V513 = 0x64a
0x5e8: JUMP 0x64a
---
Entry stack: [V10, 0x2b8, V223, V225, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x2b8, V223, V225, 0x0]

================================

Block 0x5e9
[0x5e9:0x649]
---
Predecessors: [0x5dc]
Successors: [0x64a]
---
0x5e9 JUMPDEST
0x5ea PUSH1 0x1
0x5ec PUSH1 0xa0
0x5ee PUSH1 0x2
0x5f0 EXP
0x5f1 SUB
0x5f2 CALLER
0x5f3 DUP2
0x5f4 AND
0x5f5 PUSH1 0x0
0x5f7 DUP2
0x5f8 DUP2
0x5f9 MSTORE
0x5fa PUSH1 0x2
0x5fc PUSH1 0x20
0x5fe SWAP1
0x5ff DUP2
0x600 MSTORE
0x601 PUSH1 0x40
0x603 DUP1
0x604 DUP4
0x605 SHA3
0x606 SWAP5
0x607 DUP9
0x608 AND
0x609 DUP1
0x60a DUP5
0x60b MSTORE
0x60c SWAP5
0x60d DUP3
0x60e MSTORE
0x60f SWAP2
0x610 DUP3
0x611 SWAP1
0x612 SHA3
0x613 DUP7
0x614 SWAP1
0x615 SSTORE
0x616 DUP2
0x617 MLOAD
0x618 DUP7
0x619 DUP2
0x61a MSTORE
0x61b SWAP2
0x61c MLOAD
0x61d PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x63e SWAP3
0x63f DUP2
0x640 SWAP1
0x641 SUB
0x642 SWAP1
0x643 SWAP2
0x644 ADD
0x645 SWAP1
0x646 LOG3
0x647 POP
0x648 PUSH1 0x1
---
0x5e9: JUMPDEST 
0x5ea: V514 = 0x1
0x5ec: V515 = 0xa0
0x5ee: V516 = 0x2
0x5f0: V517 = EXP 0x2 0xa0
0x5f1: V518 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f2: V519 = CALLER
0x5f4: V520 = AND 0xffffffffffffffffffffffffffffffffffffffff V519
0x5f5: V521 = 0x0
0x5f9: M[0x0] = V520
0x5fa: V522 = 0x2
0x5fc: V523 = 0x20
0x600: M[0x20] = 0x2
0x601: V524 = 0x40
0x605: V525 = SHA3 0x0 0x40
0x608: V526 = AND V223 0xffffffffffffffffffffffffffffffffffffffff
0x60b: M[0x0] = V526
0x60e: M[0x20] = V525
0x612: V527 = SHA3 0x0 0x40
0x615: S[V527] = V225
0x617: V528 = M[0x40]
0x61a: M[V528] = V225
0x61c: V529 = M[0x40]
0x61d: V530 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x641: V531 = SUB V528 V529
0x644: V532 = ADD 0x20 V531
0x646: LOG V529 V532 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V520 V526
0x648: V533 = 0x1
---
Entry stack: [V10, 0x2b8, V223, V225, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x2b8, V223, V225, 0x1]

================================

Block 0x64a
[0x64a:0x64f]
---
Predecessors: [0x5e2, 0x5e9]
Successors: [0x2b8]
---
0x64a JUMPDEST
0x64b SWAP3
0x64c SWAP2
0x64d POP
0x64e POP
0x64f JUMP
---
0x64a: JUMPDEST 
0x64f: JUMP 0x2b8
---
Entry stack: [V10, 0x2b8, V223, V225, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x650
[0x650:0x655]
---
Predecessors: [0x2d4]
Successors: [0x2dc]
---
0x650 JUMPDEST
0x651 PUSH1 0x4
0x653 SLOAD
0x654 DUP2
0x655 JUMP
---
0x650: JUMPDEST 
0x651: V534 = 0x4
0x653: V535 = S[0x4]
0x655: JUMP 0x2dc
---
Entry stack: [V10, 0x2dc]
Stack pops: 1
Stack additions: [S0, V535]
Exit stack: [V10, 0x2dc, V535]

================================

Block 0x656
[0x656:0x65b]
---
Predecessors: [0x2f6]
Successors: [0x2dc]
---
0x656 JUMPDEST
0x657 PUSH1 0x5
0x659 SLOAD
0x65a DUP2
0x65b JUMP
---
0x656: JUMPDEST 
0x657: V536 = 0x5
0x659: V537 = S[0x5]
0x65b: JUMP 0x2dc
---
Entry stack: [V10, 0x2dc]
Stack pops: 1
Stack additions: [S0, V537]
Exit stack: [V10, 0x2dc, V537]

================================

Block 0x65c
[0x65c:0x66c]
---
Predecessors: [0x318]
Successors: [0x66d, 0x672]
---
0x65c JUMPDEST
0x65d PUSH1 0x0
0x65f DUP1
0x660 DUP1
0x661 DUP1
0x662 DUP1
0x663 DUP1
0x664 PUSH1 0x64
0x666 CALLDATASIZE
0x667 LT
0x668 ISZERO
0x669 PUSH2 0x672
0x66c JUMPI
---
0x65c: JUMPDEST 
0x65d: V538 = 0x0
0x664: V539 = 0x64
0x666: V540 = CALLDATASIZE
0x667: V541 = LT V540 0x64
0x668: V542 = ISZERO V541
0x669: V543 = 0x672
0x66c: JUMPI 0x672 V542
---
Entry stack: [V10, 0x2b8, V268, V271, V273]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x2b8, V268, V271, V273, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x66d
[0x66d:0x671]
---
Predecessors: [0x65c]
Successors: []
---
0x66d PUSH1 0x0
0x66f PUSH1 0x0
0x671 REVERT
---
0x66d: V544 = 0x0
0x66f: V545 = 0x0
0x671: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2b8, V268, V271, V273, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2b8, V268, V271, V273, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x672
[0x672:0x679]
---
Predecessors: [0x65c]
Successors: [0x67a, 0x682]
---
0x672 JUMPDEST
0x673 DUP7
0x674 ISZERO
0x675 ISZERO
0x676 PUSH2 0x682
0x679 JUMPI
---
0x672: JUMPDEST 
0x674: V546 = ISZERO V273
0x675: V547 = ISZERO V546
0x676: V548 = 0x682
0x679: JUMPI 0x682 V547
---
Entry stack: [V10, 0x2b8, V268, V271, V273, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x2b8, V268, V271, V273, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x67a
[0x67a:0x681]
---
Predecessors: [0x672]
Successors: [0x77f]
---
0x67a PUSH1 0x0
0x67c SWAP6
0x67d POP
0x67e PUSH2 0x77f
0x681 JUMP
---
0x67a: V549 = 0x0
0x67e: V550 = 0x77f
0x681: JUMP 0x77f
---
Entry stack: [V10, 0x2b8, V268, V271, V273, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x2b8, V268, V271, V273, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x682
[0x682:0x6de]
---
Predecessors: [0x672]
Successors: [0x6df, 0x6e1]
---
0x682 JUMPDEST
0x683 POP
0x684 POP
0x685 POP
0x686 POP
0x687 PUSH1 0x1
0x689 PUSH1 0xa0
0x68b PUSH1 0x2
0x68d EXP
0x68e SUB
0x68f DUP6
0x690 DUP2
0x691 AND
0x692 PUSH1 0x0
0x694 SWAP1
0x695 DUP2
0x696 MSTORE
0x697 PUSH1 0x1
0x699 PUSH1 0x20
0x69b DUP2
0x69c DUP2
0x69d MSTORE
0x69e PUSH1 0x40
0x6a0 DUP1
0x6a1 DUP5
0x6a2 SHA3
0x6a3 SLOAD
0x6a4 PUSH1 0x2
0x6a6 DUP4
0x6a7 MSTORE
0x6a8 DUP2
0x6a9 DUP6
0x6aa SHA3
0x6ab CALLER
0x6ac DUP8
0x6ad AND
0x6ae DUP7
0x6af MSTORE
0x6b0 DUP4
0x6b1 MSTORE
0x6b2 DUP2
0x6b3 DUP6
0x6b4 SHA3
0x6b5 SLOAD
0x6b6 SWAP6
0x6b7 DUP11
0x6b8 AND
0x6b9 DUP6
0x6ba MSTORE
0x6bb SWAP3
0x6bc SWAP1
0x6bd SWAP2
0x6be MSTORE
0x6bf SWAP1
0x6c0 SWAP2
0x6c1 SHA3
0x6c2 SLOAD
0x6c3 SWAP1
0x6c4 SWAP3
0x6c5 POP
0x6c6 DUP5
0x6c7 DUP4
0x6c8 GT
0x6c9 DUP1
0x6ca ISZERO
0x6cb SWAP2
0x6cc DUP7
0x6cd DUP5
0x6ce GT
0x6cf ISZERO
0x6d0 SWAP2
0x6d1 DUP8
0x6d2 DUP3
0x6d3 ADD
0x6d4 SWAP2
0x6d5 SWAP1
0x6d6 SWAP2
0x6d7 GT
0x6d8 SWAP1
0x6d9 DUP4
0x6da SWAP1
0x6db PUSH2 0x6e1
0x6de JUMPI
---
0x682: JUMPDEST 
0x687: V551 = 0x1
0x689: V552 = 0xa0
0x68b: V553 = 0x2
0x68d: V554 = EXP 0x2 0xa0
0x68e: V555 = SUB 0x10000000000000000000000000000000000000000 0x1
0x691: V556 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x692: V557 = 0x0
0x696: M[0x0] = V556
0x697: V558 = 0x1
0x699: V559 = 0x20
0x69d: M[0x20] = 0x1
0x69e: V560 = 0x40
0x6a2: V561 = SHA3 0x0 0x40
0x6a3: V562 = S[V561]
0x6a4: V563 = 0x2
0x6a7: M[0x20] = 0x2
0x6aa: V564 = SHA3 0x0 0x40
0x6ab: V565 = CALLER
0x6ad: V566 = AND 0xffffffffffffffffffffffffffffffffffffffff V565
0x6af: M[0x0] = V566
0x6b1: M[0x20] = V564
0x6b4: V567 = SHA3 0x0 0x40
0x6b5: V568 = S[V567]
0x6b8: V569 = AND V271 0xffffffffffffffffffffffffffffffffffffffff
0x6ba: M[0x0] = V569
0x6be: M[0x20] = 0x1
0x6c1: V570 = SHA3 0x0 0x40
0x6c2: V571 = S[V570]
0x6c8: V572 = GT V562 V273
0x6ca: V573 = ISZERO V572
0x6ce: V574 = GT V568 V273
0x6cf: V575 = ISZERO V574
0x6d3: V576 = ADD V571 V273
0x6d7: V577 = GT V576 V571
0x6db: V578 = 0x6e1
0x6de: JUMPI 0x6e1 V572
---
Entry stack: [V10, 0x2b8, V268, V271, V273, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
Stack pops: 9
Stack additions: [S8, S7, S6, S5, V562, V568, V573, V575, V577, V573]
Exit stack: [V10, 0x2b8, V268, V271, V273, 0x0, V562, V568, V573, V575, V577, V573]

================================

Block 0x6df
[0x6df:0x6e0]
---
Predecessors: [0x682]
Successors: [0x6e1]
---
0x6df POP
0x6e0 DUP2
---
0x6df: NOP 
---
Entry stack: [V10, 0x2b8, V268, V271, V273, 0x0, V562, V568, V573, V575, V577, V573]
Stack pops: 3
Stack additions: [S2, S1, S2]
Exit stack: [V10, 0x2b8, V268, V271, V273, 0x0, V562, V568, V573, V575, V577, V575]

================================

Block 0x6e1
[0x6e1:0x6e7]
---
Predecessors: [0x682, 0x6df]
Successors: [0x6e8, 0x6eb]
---
0x6e1 JUMPDEST
0x6e2 DUP1
0x6e3 ISZERO
0x6e4 PUSH2 0x6eb
0x6e7 JUMPI
---
0x6e1: JUMPDEST 
0x6e3: V579 = ISZERO S0
0x6e4: V580 = 0x6eb
0x6e7: JUMPI 0x6eb V579
---
Entry stack: [V10, 0x2b8, V268, V271, V273, 0x0, V562, V568, V573, V575, V577, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x2b8, V268, V271, V273, 0x0, V562, V568, V573, V575, V577, S0]

================================

Block 0x6e8
[0x6e8:0x6ea]
---
Predecessors: [0x6e1]
Successors: [0x6eb]
---
0x6e8 POP
0x6e9 DUP1
0x6ea ISZERO
---
0x6ea: V581 = ISZERO V577
---
Entry stack: [V10, 0x2b8, V268, V271, V273, 0x0, V562, V568, V573, V575, V577, S0]
Stack pops: 2
Stack additions: [S1, V581]
Exit stack: [V10, 0x2b8, V268, V271, V273, 0x0, V562, V568, V573, V575, V577, V581]

================================

Block 0x6eb
[0x6eb:0x6f0]
---
Predecessors: [0x6e1, 0x6e8]
Successors: [0x6f1, 0x77a]
---
0x6eb JUMPDEST
0x6ec ISZERO
0x6ed PUSH2 0x77a
0x6f0 JUMPI
---
0x6eb: JUMPDEST 
0x6ec: V582 = ISZERO S0
0x6ed: V583 = 0x77a
0x6f0: JUMPI 0x77a V582
---
Entry stack: [V10, 0x2b8, V268, V271, V273, 0x0, V562, V568, V573, V575, V577, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2b8, V268, V271, V273, 0x0, V562, V568, V573, V575, V577]

================================

Block 0x6f1
[0x6f1:0x779]
---
Predecessors: [0x6eb]
Successors: [0x77f]
---
0x6f1 PUSH1 0x1
0x6f3 PUSH1 0xa0
0x6f5 PUSH1 0x2
0x6f7 EXP
0x6f8 SUB
0x6f9 DUP1
0x6fa DUP10
0x6fb AND
0x6fc PUSH1 0x0
0x6fe DUP2
0x6ff DUP2
0x700 MSTORE
0x701 PUSH1 0x1
0x703 PUSH1 0x20
0x705 SWAP1
0x706 DUP2
0x707 MSTORE
0x708 PUSH1 0x40
0x70a DUP1
0x70b DUP4
0x70c SHA3
0x70d DUP1
0x70e SLOAD
0x70f DUP14
0x710 ADD
0x711 SWAP1
0x712 SSTORE
0x713 DUP14
0x714 DUP6
0x715 AND
0x716 DUP1
0x717 DUP5
0x718 MSTORE
0x719 DUP2
0x71a DUP5
0x71b SHA3
0x71c DUP1
0x71d SLOAD
0x71e DUP15
0x71f SWAP1
0x720 SUB
0x721 SWAP1
0x722 SSTORE
0x723 PUSH1 0x2
0x725 DUP4
0x726 MSTORE
0x727 DUP2
0x728 DUP5
0x729 SHA3
0x72a CALLER
0x72b SWAP1
0x72c SWAP7
0x72d AND
0x72e DUP5
0x72f MSTORE
0x730 SWAP5
0x731 DUP3
0x732 MSTORE
0x733 SWAP2
0x734 DUP3
0x735 SWAP1
0x736 SHA3
0x737 DUP1
0x738 SLOAD
0x739 DUP13
0x73a SWAP1
0x73b SUB
0x73c SWAP1
0x73d SSTORE
0x73e DUP2
0x73f MLOAD
0x740 DUP12
0x741 DUP2
0x742 MSTORE
0x743 SWAP2
0x744 MLOAD
0x745 SWAP3
0x746 SWAP4
0x747 SWAP3
0x748 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x769 SWAP3
0x76a DUP2
0x76b SWAP1
0x76c SUB
0x76d SWAP1
0x76e SWAP2
0x76f ADD
0x770 SWAP1
0x771 LOG3
0x772 PUSH1 0x1
0x774 SWAP6
0x775 POP
0x776 PUSH2 0x77f
0x779 JUMP
---
0x6f1: V584 = 0x1
0x6f3: V585 = 0xa0
0x6f5: V586 = 0x2
0x6f7: V587 = EXP 0x2 0xa0
0x6f8: V588 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6fb: V589 = AND V271 0xffffffffffffffffffffffffffffffffffffffff
0x6fc: V590 = 0x0
0x700: M[0x0] = V589
0x701: V591 = 0x1
0x703: V592 = 0x20
0x707: M[0x20] = 0x1
0x708: V593 = 0x40
0x70c: V594 = SHA3 0x0 0x40
0x70e: V595 = S[V594]
0x710: V596 = ADD V273 V595
0x712: S[V594] = V596
0x715: V597 = AND 0xffffffffffffffffffffffffffffffffffffffff V268
0x718: M[0x0] = V597
0x71b: V598 = SHA3 0x0 0x40
0x71d: V599 = S[V598]
0x720: V600 = SUB V599 V273
0x722: S[V598] = V600
0x723: V601 = 0x2
0x726: M[0x20] = 0x2
0x729: V602 = SHA3 0x0 0x40
0x72a: V603 = CALLER
0x72d: V604 = AND 0xffffffffffffffffffffffffffffffffffffffff V603
0x72f: M[0x0] = V604
0x732: M[0x20] = V602
0x736: V605 = SHA3 0x0 0x40
0x738: V606 = S[V605]
0x73b: V607 = SUB V606 V273
0x73d: S[V605] = V607
0x73f: V608 = M[0x40]
0x742: M[V608] = V273
0x744: V609 = M[0x40]
0x748: V610 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x76c: V611 = SUB V608 V609
0x76f: V612 = ADD 0x20 V611
0x771: LOG V609 V612 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V597 V589
0x772: V613 = 0x1
0x776: V614 = 0x77f
0x779: JUMP 0x77f
---
Entry stack: [V10, 0x2b8, V268, V271, V273, 0x0, V562, V568, V573, V575, V577]
Stack pops: 9
Stack additions: [S8, S7, S6, 0x1, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x2b8, V268, V271, V273, 0x1, V562, V568, V573, V575, V577]

================================

Block 0x77a
[0x77a:0x77e]
---
Predecessors: [0x6eb]
Successors: [0x77f]
---
0x77a JUMPDEST
0x77b PUSH1 0x0
0x77d SWAP6
0x77e POP
---
0x77a: JUMPDEST 
0x77b: V615 = 0x0
---
Entry stack: [V10, 0x2b8, V268, V271, V273, 0x0, V562, V568, V573, V575, V577]
Stack pops: 6
Stack additions: [0x0, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x2b8, V268, V271, V273, 0x0, V562, V568, V573, V575, V577]

================================

Block 0x77f
[0x77f:0x77f]
---
Predecessors: [0x67a, 0x6f1, 0x77a]
Successors: [0x780]
---
0x77f JUMPDEST
---
0x77f: JUMPDEST 
---
Entry stack: [V10, 0x2b8, V268, V271, V273, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2b8, V268, V271, V273, {0x0, 0x1}, S4, S3, S2, S1, S0]

================================

Block 0x780
[0x780:0x78b]
---
Predecessors: [0x77f]
Successors: [0x2b8]
---
0x780 JUMPDEST
0x781 POP
0x782 POP
0x783 POP
0x784 POP
0x785 POP
0x786 SWAP4
0x787 SWAP3
0x788 POP
0x789 POP
0x78a POP
0x78b JUMP
---
0x780: JUMPDEST 
0x78b: JUMP 0x2b8
---
Entry stack: [V10, 0x2b8, V268, V271, V273, {0x0, 0x1}, S4, S3, S2, S1, S0]
Stack pops: 10
Stack additions: [S5]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x78c
[0x78c:0x78e]
---
Predecessors: [0x351]
Successors: [0x78f]
---
0x78c JUMPDEST
0x78d PUSH1 0x12
---
0x78c: JUMPDEST 
0x78d: V616 = 0x12
---
Entry stack: [V10, 0x359]
Stack pops: 0
Stack additions: [0x12]
Exit stack: [V10, 0x359, 0x12]

================================

Block 0x78f
[0x78f:0x791]
---
Predecessors: [0x78c]
Successors: [0x359]
---
0x78f JUMPDEST
0x790 SWAP1
0x791 JUMP
---
0x78f: JUMPDEST 
0x791: JUMP 0x359
---
Entry stack: [V10, 0x359, 0x12]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, 0x12]

================================

Block 0x792
[0x792:0x7a8]
---
Predecessors: [0x377]
Successors: [0x7a9, 0x7ae]
---
0x792 JUMPDEST
0x793 PUSH1 0x0
0x795 SLOAD
0x796 CALLER
0x797 PUSH1 0x1
0x799 PUSH1 0xa0
0x79b PUSH1 0x2
0x79d EXP
0x79e SUB
0x79f SWAP1
0x7a0 DUP2
0x7a1 AND
0x7a2 SWAP2
0x7a3 AND
0x7a4 EQ
0x7a5 PUSH2 0x7ae
0x7a8 JUMPI
---
0x792: JUMPDEST 
0x793: V617 = 0x0
0x795: V618 = S[0x0]
0x796: V619 = CALLER
0x797: V620 = 0x1
0x799: V621 = 0xa0
0x79b: V622 = 0x2
0x79d: V623 = EXP 0x2 0xa0
0x79e: V624 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7a1: V625 = AND 0xffffffffffffffffffffffffffffffffffffffff V619
0x7a3: V626 = AND V618 0xffffffffffffffffffffffffffffffffffffffff
0x7a4: V627 = EQ V626 V625
0x7a5: V628 = 0x7ae
0x7a8: JUMPI 0x7ae V627
---
Entry stack: [V10, 0x207]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x207]

================================

Block 0x7a9
[0x7a9:0x7ad]
---
Predecessors: [0x792]
Successors: []
---
0x7a9 PUSH1 0x0
0x7ab PUSH1 0x0
0x7ad REVERT
---
0x7a9: V629 = 0x0
0x7ab: V630 = 0x0
0x7ad: REVERT 0x0 0x0
---
Entry stack: [V10, 0x207]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x207]

================================

Block 0x7ae
[0x7ae:0x7b8]
---
Predecessors: [0x792]
Successors: [0x7b9]
---
0x7ae JUMPDEST
0x7af PUSH1 0x3
0x7b1 DUP1
0x7b2 SLOAD
0x7b3 PUSH1 0xff
0x7b5 NOT
0x7b6 AND
0x7b7 SWAP1
0x7b8 SSTORE
---
0x7ae: JUMPDEST 
0x7af: V631 = 0x3
0x7b2: V632 = S[0x3]
0x7b3: V633 = 0xff
0x7b5: V634 = NOT 0xff
0x7b6: V635 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V632
0x7b8: S[0x3] = V635
---
Entry stack: [V10, 0x207]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x207]

================================

Block 0x7b9
[0x7b9:0x7ba]
---
Predecessors: [0x7ae]
Successors: [0x207]
---
0x7b9 JUMPDEST
0x7ba JUMP
---
0x7b9: JUMPDEST 
0x7ba: JUMP 0x207
---
Entry stack: [V10, 0x207]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x7bb
[0x7bb:0x7d4]
---
Predecessors: [0x389]
Successors: [0x7d5]
---
0x7bb JUMPDEST
0x7bc PUSH1 0x1
0x7be PUSH1 0xa0
0x7c0 PUSH1 0x2
0x7c2 EXP
0x7c3 SUB
0x7c4 DUP2
0x7c5 AND
0x7c6 PUSH1 0x0
0x7c8 SWAP1
0x7c9 DUP2
0x7ca MSTORE
0x7cb PUSH1 0x1
0x7cd PUSH1 0x20
0x7cf MSTORE
0x7d0 PUSH1 0x40
0x7d2 SWAP1
0x7d3 SHA3
0x7d4 SLOAD
---
0x7bb: JUMPDEST 
0x7bc: V636 = 0x1
0x7be: V637 = 0xa0
0x7c0: V638 = 0x2
0x7c2: V639 = EXP 0x2 0xa0
0x7c3: V640 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7c5: V641 = AND V312 0xffffffffffffffffffffffffffffffffffffffff
0x7c6: V642 = 0x0
0x7ca: M[0x0] = V641
0x7cb: V643 = 0x1
0x7cd: V644 = 0x20
0x7cf: M[0x20] = 0x1
0x7d0: V645 = 0x40
0x7d3: V646 = SHA3 0x0 0x40
0x7d4: V647 = S[V646]
---
Entry stack: [V10, 0x2dc, V312]
Stack pops: 1
Stack additions: [S0, V647]
Exit stack: [V10, 0x2dc, V312, V647]

================================

Block 0x7d5
[0x7d5:0x7d9]
---
Predecessors: [0x7bb]
Successors: [0x2dc]
---
0x7d5 JUMPDEST
0x7d6 SWAP2
0x7d7 SWAP1
0x7d8 POP
0x7d9 JUMP
---
0x7d5: JUMPDEST 
0x7d9: JUMP 0x2dc
---
Entry stack: [V10, 0x2dc, V312, V647]
Stack pops: 3
Stack additions: [S0]
Exit stack: [V10, V647]

================================

Block 0x7da
[0x7da:0x7f0]
---
Predecessors: [0x3b7]
Successors: [0x7f1, 0x7f6]
---
0x7da JUMPDEST
0x7db PUSH1 0x0
0x7dd SLOAD
0x7de CALLER
0x7df PUSH1 0x1
0x7e1 PUSH1 0xa0
0x7e3 PUSH1 0x2
0x7e5 EXP
0x7e6 SUB
0x7e7 SWAP1
0x7e8 DUP2
0x7e9 AND
0x7ea SWAP2
0x7eb AND
0x7ec EQ
0x7ed PUSH2 0x7f6
0x7f0 JUMPI
---
0x7da: JUMPDEST 
0x7db: V648 = 0x0
0x7dd: V649 = S[0x0]
0x7de: V650 = CALLER
0x7df: V651 = 0x1
0x7e1: V652 = 0xa0
0x7e3: V653 = 0x2
0x7e5: V654 = EXP 0x2 0xa0
0x7e6: V655 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7e9: V656 = AND 0xffffffffffffffffffffffffffffffffffffffff V650
0x7eb: V657 = AND V649 0xffffffffffffffffffffffffffffffffffffffff
0x7ec: V658 = EQ V657 V656
0x7ed: V659 = 0x7f6
0x7f0: JUMPI 0x7f6 V658
---
Entry stack: [V10, 0x207]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x207]

================================

Block 0x7f1
[0x7f1:0x7f5]
---
Predecessors: [0x7da]
Successors: []
---
0x7f1 PUSH1 0x0
0x7f3 PUSH1 0x0
0x7f5 REVERT
---
0x7f1: V660 = 0x0
0x7f3: V661 = 0x0
0x7f5: REVERT 0x0 0x0
---
Entry stack: [V10, 0x207]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x207]

================================

Block 0x7f6
[0x7f6:0x803]
---
Predecessors: [0x7da]
Successors: [0x804]
---
0x7f6 JUMPDEST
0x7f7 PUSH1 0x3
0x7f9 DUP1
0x7fa SLOAD
0x7fb PUSH1 0xff
0x7fd NOT
0x7fe AND
0x7ff PUSH1 0x1
0x801 OR
0x802 SWAP1
0x803 SSTORE
---
0x7f6: JUMPDEST 
0x7f7: V662 = 0x3
0x7fa: V663 = S[0x3]
0x7fb: V664 = 0xff
0x7fd: V665 = NOT 0xff
0x7fe: V666 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V663
0x7ff: V667 = 0x1
0x801: V668 = OR 0x1 V666
0x803: S[0x3] = V668
---
Entry stack: [V10, 0x207]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x207]

================================

Block 0x804
[0x804:0x805]
---
Predecessors: [0x7f6]
Successors: [0x207]
---
0x804 JUMPDEST
0x805 JUMP
---
0x804: JUMPDEST 
0x805: JUMP 0x207
---
Entry stack: [V10, 0x207]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x806
[0x806:0x80d]
---
Predecessors: [0x3c9]
Successors: [0xac0]
---
0x806 JUMPDEST
0x807 PUSH2 0x80e
0x80a PUSH2 0xac0
0x80d JUMP
---
0x806: JUMPDEST 
0x807: V669 = 0x80e
0x80a: V670 = 0xac0
0x80d: JUMP 0xac0
---
Entry stack: [V10, 0x219]
Stack pops: 0
Stack additions: [0x80e]
Exit stack: [V10, 0x219, 0x80e]

================================

Block 0x80e
[0x80e:0x843]
---
Predecessors: [0xac0]
Successors: [0x844]
---
0x80e JUMPDEST
0x80f POP
0x810 PUSH1 0x40
0x812 DUP1
0x813 MLOAD
0x814 DUP1
0x815 DUP3
0x816 ADD
0x817 SWAP1
0x818 SWAP2
0x819 MSTORE
0x81a PUSH1 0x3
0x81c DUP2
0x81d MSTORE
0x81e PUSH32 0x4c42430000000000000000000000000000000000000000000000000000000000
0x83f PUSH1 0x20
0x841 DUP3
0x842 ADD
0x843 MSTORE
---
0x80e: JUMPDEST 
0x810: V671 = 0x40
0x813: V672 = M[0x40]
0x816: V673 = ADD 0x40 V672
0x819: M[0x40] = V673
0x81a: V674 = 0x3
0x81d: M[V672] = 0x3
0x81e: V675 = 0x4c42430000000000000000000000000000000000000000000000000000000000
0x83f: V676 = 0x20
0x842: V677 = ADD V672 0x20
0x843: M[V677] = 0x4c42430000000000000000000000000000000000000000000000000000000000
---
Entry stack: [V10, 0x219, V877]
Stack pops: 1
Stack additions: [V672]
Exit stack: [V10, 0x219, V672]

================================

Block 0x844
[0x844:0x846]
---
Predecessors: [0x80e]
Successors: [0x219]
---
0x844 JUMPDEST
0x845 SWAP1
0x846 JUMP
---
0x844: JUMPDEST 
0x846: JUMP 0x219
---
Entry stack: [V10, 0x219, V672]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V10, V672]

================================

Block 0x847
[0x847:0x855]
---
Predecessors: [0x459]
Successors: [0x856, 0x85b]
---
0x847 JUMPDEST
0x848 PUSH1 0x0
0x84a DUP1
0x84b DUP1
0x84c DUP1
0x84d PUSH1 0x44
0x84f CALLDATASIZE
0x850 LT
0x851 ISZERO
0x852 PUSH2 0x85b
0x855 JUMPI
---
0x847: JUMPDEST 
0x848: V678 = 0x0
0x84d: V679 = 0x44
0x84f: V680 = CALLDATASIZE
0x850: V681 = LT V680 0x44
0x851: V682 = ISZERO V681
0x852: V683 = 0x85b
0x855: JUMPI 0x85b V682
---
Entry stack: [V10, 0x2b8, V383, V385]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0, 0x0]
Exit stack: [V10, 0x2b8, V383, V385, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x856
[0x856:0x85a]
---
Predecessors: [0x847]
Successors: []
---
0x856 PUSH1 0x0
0x858 PUSH1 0x0
0x85a REVERT
---
0x856: V684 = 0x0
0x858: V685 = 0x0
0x85a: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2b8, V383, V385, 0x0, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2b8, V383, V385, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x85b
[0x85b:0x862]
---
Predecessors: [0x847]
Successors: [0x863, 0x86b]
---
0x85b JUMPDEST
0x85c DUP5
0x85d ISZERO
0x85e ISZERO
0x85f PUSH2 0x86b
0x862 JUMPI
---
0x85b: JUMPDEST 
0x85d: V686 = ISZERO V385
0x85e: V687 = ISZERO V686
0x85f: V688 = 0x86b
0x862: JUMPI 0x86b V687
---
Entry stack: [V10, 0x2b8, V383, V385, 0x0, 0x0, 0x0, 0x0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V10, 0x2b8, V383, V385, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x863
[0x863:0x86a]
---
Predecessors: [0x85b]
Successors: [0x920]
---
0x863 PUSH1 0x0
0x865 SWAP4
0x866 POP
0x867 PUSH2 0x920
0x86a JUMP
---
0x863: V689 = 0x0
0x867: V690 = 0x920
0x86a: JUMP 0x920
---
Entry stack: [V10, 0x2b8, V383, V385, 0x0, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V10, 0x2b8, V383, V385, 0x0, 0x0, 0x0, 0x0]

================================

Block 0x86b
[0x86b:0x8a2]
---
Predecessors: [0x85b]
Successors: [0x8a3, 0x8a6]
---
0x86b JUMPDEST
0x86c POP
0x86d POP
0x86e POP
0x86f PUSH1 0x1
0x871 PUSH1 0xa0
0x873 PUSH1 0x2
0x875 EXP
0x876 SUB
0x877 CALLER
0x878 DUP2
0x879 AND
0x87a PUSH1 0x0
0x87c SWAP1
0x87d DUP2
0x87e MSTORE
0x87f PUSH1 0x1
0x881 PUSH1 0x20
0x883 MSTORE
0x884 PUSH1 0x40
0x886 DUP1
0x887 DUP3
0x888 SHA3
0x889 SLOAD
0x88a SWAP3
0x88b DUP7
0x88c AND
0x88d DUP3
0x88e MSTORE
0x88f SWAP1
0x890 SHA3
0x891 SLOAD
0x892 DUP4
0x893 DUP3
0x894 LT
0x895 DUP1
0x896 ISZERO
0x897 SWAP2
0x898 DUP1
0x899 DUP7
0x89a ADD
0x89b LT
0x89c SWAP1
0x89d DUP3
0x89e SWAP1
0x89f PUSH2 0x8a6
0x8a2 JUMPI
---
0x86b: JUMPDEST 
0x86f: V691 = 0x1
0x871: V692 = 0xa0
0x873: V693 = 0x2
0x875: V694 = EXP 0x2 0xa0
0x876: V695 = SUB 0x10000000000000000000000000000000000000000 0x1
0x877: V696 = CALLER
0x879: V697 = AND 0xffffffffffffffffffffffffffffffffffffffff V696
0x87a: V698 = 0x0
0x87e: M[0x0] = V697
0x87f: V699 = 0x1
0x881: V700 = 0x20
0x883: M[0x20] = 0x1
0x884: V701 = 0x40
0x888: V702 = SHA3 0x0 0x40
0x889: V703 = S[V702]
0x88c: V704 = AND V383 0xffffffffffffffffffffffffffffffffffffffff
0x88e: M[0x0] = V704
0x890: V705 = SHA3 0x0 0x40
0x891: V706 = S[V705]
0x894: V707 = LT V703 V385
0x896: V708 = ISZERO V707
0x89a: V709 = ADD V385 V706
0x89b: V710 = LT V709 V706
0x89f: V711 = 0x8a6
0x8a2: JUMPI 0x8a6 V707
---
Entry stack: [V10, 0x2b8, V383, V385, 0x0, 0x0, 0x0, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, V703, V708, V710, V708]
Exit stack: [V10, 0x2b8, V383, V385, 0x0, V703, V708, V710, V708]

================================

Block 0x8a3
[0x8a3:0x8a5]
---
Predecessors: [0x86b]
Successors: [0x8a6]
---
0x8a3 POP
0x8a4 DUP1
0x8a5 ISZERO
---
0x8a5: V712 = ISZERO V710
---
Entry stack: [V10, 0x2b8, V383, V385, 0x0, V703, V708, V710, V708]
Stack pops: 2
Stack additions: [S1, V712]
Exit stack: [V10, 0x2b8, V383, V385, 0x0, V703, V708, V710, V712]

================================

Block 0x8a6
[0x8a6:0x8ab]
---
Predecessors: [0x86b, 0x8a3]
Successors: [0x8ac, 0x91b]
---
0x8a6 JUMPDEST
0x8a7 ISZERO
0x8a8 PUSH2 0x91b
0x8ab JUMPI
---
0x8a6: JUMPDEST 
0x8a7: V713 = ISZERO S0
0x8a8: V714 = 0x91b
0x8ab: JUMPI 0x91b V713
---
Entry stack: [V10, 0x2b8, V383, V385, 0x0, V703, V708, V710, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x2b8, V383, V385, 0x0, V703, V708, V710]

================================

Block 0x8ac
[0x8ac:0x91a]
---
Predecessors: [0x8a6]
Successors: [0x920]
---
0x8ac PUSH1 0x1
0x8ae PUSH1 0xa0
0x8b0 PUSH1 0x2
0x8b2 EXP
0x8b3 SUB
0x8b4 CALLER
0x8b5 DUP2
0x8b6 AND
0x8b7 PUSH1 0x0
0x8b9 DUP2
0x8ba DUP2
0x8bb MSTORE
0x8bc PUSH1 0x1
0x8be PUSH1 0x20
0x8c0 SWAP1
0x8c1 DUP2
0x8c2 MSTORE
0x8c3 PUSH1 0x40
0x8c5 DUP1
0x8c6 DUP4
0x8c7 SHA3
0x8c8 DUP1
0x8c9 SLOAD
0x8ca DUP12
0x8cb SWAP1
0x8cc SUB
0x8cd SWAP1
0x8ce SSTORE
0x8cf SWAP4
0x8d0 DUP11
0x8d1 AND
0x8d2 DUP1
0x8d3 DUP4
0x8d4 MSTORE
0x8d5 SWAP2
0x8d6 DUP5
0x8d7 SWAP1
0x8d8 SHA3
0x8d9 DUP1
0x8da SLOAD
0x8db DUP11
0x8dc ADD
0x8dd SWAP1
0x8de SSTORE
0x8df DUP4
0x8e0 MLOAD
0x8e1 DUP10
0x8e2 DUP2
0x8e3 MSTORE
0x8e4 SWAP4
0x8e5 MLOAD
0x8e6 SWAP2
0x8e7 SWAP4
0x8e8 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x909 SWAP3
0x90a SWAP1
0x90b DUP2
0x90c SWAP1
0x90d SUB
0x90e SWAP1
0x90f SWAP2
0x910 ADD
0x911 SWAP1
0x912 LOG3
0x913 PUSH1 0x1
0x915 SWAP4
0x916 POP
0x917 PUSH2 0x920
0x91a JUMP
---
0x8ac: V715 = 0x1
0x8ae: V716 = 0xa0
0x8b0: V717 = 0x2
0x8b2: V718 = EXP 0x2 0xa0
0x8b3: V719 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8b4: V720 = CALLER
0x8b6: V721 = AND 0xffffffffffffffffffffffffffffffffffffffff V720
0x8b7: V722 = 0x0
0x8bb: M[0x0] = V721
0x8bc: V723 = 0x1
0x8be: V724 = 0x20
0x8c2: M[0x20] = 0x1
0x8c3: V725 = 0x40
0x8c7: V726 = SHA3 0x0 0x40
0x8c9: V727 = S[V726]
0x8cc: V728 = SUB V727 V385
0x8ce: S[V726] = V728
0x8d1: V729 = AND V383 0xffffffffffffffffffffffffffffffffffffffff
0x8d4: M[0x0] = V729
0x8d8: V730 = SHA3 0x0 0x40
0x8da: V731 = S[V730]
0x8dc: V732 = ADD V385 V731
0x8de: S[V730] = V732
0x8e0: V733 = M[0x40]
0x8e3: M[V733] = V385
0x8e5: V734 = M[0x40]
0x8e8: V735 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0x90d: V736 = SUB V733 V734
0x910: V737 = ADD 0x20 V736
0x912: LOG V734 V737 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V721 V729
0x913: V738 = 0x1
0x917: V739 = 0x920
0x91a: JUMP 0x920
---
Entry stack: [V10, 0x2b8, V383, V385, 0x0, V703, V708, V710]
Stack pops: 6
Stack additions: [S5, S4, 0x1, S2, S1, S0]
Exit stack: [V10, 0x2b8, V383, V385, 0x1, V703, V708, V710]

================================

Block 0x91b
[0x91b:0x91f]
---
Predecessors: [0x8a6]
Successors: [0x920]
---
0x91b JUMPDEST
0x91c PUSH1 0x0
0x91e SWAP4
0x91f POP
---
0x91b: JUMPDEST 
0x91c: V740 = 0x0
---
Entry stack: [V10, 0x2b8, V383, V385, 0x0, V703, V708, V710]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V10, 0x2b8, V383, V385, 0x0, V703, V708, V710]

================================

Block 0x920
[0x920:0x920]
---
Predecessors: [0x863, 0x8ac, 0x91b]
Successors: [0x921]
---
0x920 JUMPDEST
---
0x920: JUMPDEST 
---
Entry stack: [V10, 0x2b8, V383, V385, {0x0, 0x1}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2b8, V383, V385, {0x0, 0x1}, S2, S1, S0]

================================

Block 0x921
[0x921:0x929]
---
Predecessors: [0x920]
Successors: [0x2b8]
---
0x921 JUMPDEST
0x922 POP
0x923 POP
0x924 POP
0x925 SWAP3
0x926 SWAP2
0x927 POP
0x928 POP
0x929 JUMP
---
0x921: JUMPDEST 
0x929: JUMP 0x2b8
---
Entry stack: [V10, 0x2b8, V383, V385, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x92a
[0x92a:0x939]
---
Predecessors: [0x48c]
Successors: [0x93a]
---
0x92a JUMPDEST
0x92b PUSH1 0x4
0x92d SLOAD
0x92e PUSH1 0x5
0x930 SLOAD
0x931 PUSH1 0x6
0x933 SLOAD
0x934 PUSH1 0x3
0x936 SLOAD
0x937 PUSH1 0xff
0x939 AND
---
0x92a: JUMPDEST 
0x92b: V741 = 0x4
0x92d: V742 = S[0x4]
0x92e: V743 = 0x5
0x930: V744 = S[0x5]
0x931: V745 = 0x6
0x933: V746 = S[0x6]
0x934: V747 = 0x3
0x936: V748 = S[0x3]
0x937: V749 = 0xff
0x939: V750 = AND 0xff V748
---
Entry stack: [V10, 0x494]
Stack pops: 0
Stack additions: [V742, V744, V746, V750]
Exit stack: [V10, 0x494, V742, V744, V746, V750]

================================

Block 0x93a
[0x93a:0x93f]
---
Predecessors: [0x92a]
Successors: [0x494]
---
0x93a JUMPDEST
0x93b SWAP1
0x93c SWAP2
0x93d SWAP3
0x93e SWAP4
0x93f JUMP
---
0x93a: JUMPDEST 
0x93f: JUMP 0x494
---
Entry stack: [V10, 0x494, V742, V744, V746, V750]
Stack pops: 5
Stack additions: [S3, S2, S1, S0]
Exit stack: [V10, V742, V744, V746, V750]

================================

Block 0x940
[0x940:0x945]
---
Predecessors: [0x4c4]
Successors: [0x2dc]
---
0x940 JUMPDEST
0x941 PUSH1 0x6
0x943 SLOAD
0x944 DUP2
0x945 JUMP
---
0x940: JUMPDEST 
0x941: V751 = 0x6
0x943: V752 = S[0x6]
0x945: JUMP 0x2dc
---
Entry stack: [V10, 0x2dc]
Stack pops: 1
Stack additions: [S0, V752]
Exit stack: [V10, 0x2dc, V752]

================================

Block 0x946
[0x946:0x94e]
---
Predecessors: [0x4e6]
Successors: [0x2b8]
---
0x946 JUMPDEST
0x947 PUSH1 0x3
0x949 SLOAD
0x94a PUSH1 0xff
0x94c AND
0x94d DUP2
0x94e JUMP
---
0x946: JUMPDEST 
0x947: V753 = 0x3
0x949: V754 = S[0x3]
0x94a: V755 = 0xff
0x94c: V756 = AND 0xff V754
0x94e: JUMP 0x2b8
---
Entry stack: [V10, 0x2b8]
Stack pops: 1
Stack additions: [S0, V756]
Exit stack: [V10, 0x2b8, V756]

================================

Block 0x94f
[0x94f:0x975]
---
Predecessors: [0x50a]
Successors: [0x976]
---
0x94f JUMPDEST
0x950 PUSH1 0x1
0x952 PUSH1 0xa0
0x954 PUSH1 0x2
0x956 EXP
0x957 SUB
0x958 DUP1
0x959 DUP4
0x95a AND
0x95b PUSH1 0x0
0x95d SWAP1
0x95e DUP2
0x95f MSTORE
0x960 PUSH1 0x2
0x962 PUSH1 0x20
0x964 SWAP1
0x965 DUP2
0x966 MSTORE
0x967 PUSH1 0x40
0x969 DUP1
0x96a DUP4
0x96b SHA3
0x96c SWAP4
0x96d DUP6
0x96e AND
0x96f DUP4
0x970 MSTORE
0x971 SWAP3
0x972 SWAP1
0x973 MSTORE
0x974 SHA3
0x975 SLOAD
---
0x94f: JUMPDEST 
0x950: V757 = 0x1
0x952: V758 = 0xa0
0x954: V759 = 0x2
0x956: V760 = EXP 0x2 0xa0
0x957: V761 = SUB 0x10000000000000000000000000000000000000000 0x1
0x95a: V762 = AND V448 0xffffffffffffffffffffffffffffffffffffffff
0x95b: V763 = 0x0
0x95f: M[0x0] = V762
0x960: V764 = 0x2
0x962: V765 = 0x20
0x966: M[0x20] = 0x2
0x967: V766 = 0x40
0x96b: V767 = SHA3 0x0 0x40
0x96e: V768 = AND V451 0xffffffffffffffffffffffffffffffffffffffff
0x970: M[0x0] = V768
0x973: M[0x20] = V767
0x974: V769 = SHA3 0x0 0x40
0x975: V770 = S[V769]
---
Entry stack: [V10, 0x2dc, V448, V451]
Stack pops: 2
Stack additions: [S1, S0, V770]
Exit stack: [V10, 0x2dc, V448, V451, V770]

================================

Block 0x976
[0x976:0x97b]
---
Predecessors: [0x94f]
Successors: [0x2dc]
---
0x976 JUMPDEST
0x977 SWAP3
0x978 SWAP2
0x979 POP
0x97a POP
0x97b JUMP
---
0x976: JUMPDEST 
0x97b: JUMP 0x2dc
---
Entry stack: [V10, 0x2dc, V448, V451, V770]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, V770]

================================

Block 0x97c
[0x97c:0x997]
---
Predecessors: [0x53e]
Successors: [0x998, 0x99d]
---
0x97c JUMPDEST
0x97d PUSH1 0x0
0x97f DUP1
0x980 SLOAD
0x981 DUP2
0x982 SWAP1
0x983 DUP2
0x984 SWAP1
0x985 CALLER
0x986 PUSH1 0x1
0x988 PUSH1 0xa0
0x98a PUSH1 0x2
0x98c EXP
0x98d SUB
0x98e SWAP1
0x98f DUP2
0x990 AND
0x991 SWAP2
0x992 AND
0x993 EQ
0x994 PUSH2 0x99d
0x997 JUMPI
---
0x97c: JUMPDEST 
0x97d: V771 = 0x0
0x980: V772 = S[0x0]
0x985: V773 = CALLER
0x986: V774 = 0x1
0x988: V775 = 0xa0
0x98a: V776 = 0x2
0x98c: V777 = EXP 0x2 0xa0
0x98d: V778 = SUB 0x10000000000000000000000000000000000000000 0x1
0x990: V779 = AND 0xffffffffffffffffffffffffffffffffffffffff V773
0x992: V780 = AND V772 0xffffffffffffffffffffffffffffffffffffffff
0x993: V781 = EQ V780 V779
0x994: V782 = 0x99d
0x997: JUMPI 0x99d V781
---
Entry stack: [V10, 0x2b8, V470]
Stack pops: 0
Stack additions: [0x0, 0x0, 0x0]
Exit stack: [V10, 0x2b8, V470, 0x0, 0x0, 0x0]

================================

Block 0x998
[0x998:0x99c]
---
Predecessors: [0x97c]
Successors: []
---
0x998 PUSH1 0x0
0x99a PUSH1 0x0
0x99c REVERT
---
0x998: V783 = 0x0
0x99a: V784 = 0x0
0x99c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x2b8, V470, 0x0, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2b8, V470, 0x0, 0x0, 0x0]

================================

Block 0x99d
[0x99d:0xa17]
---
Predecessors: [0x97c]
Successors: [0xa18, 0xa19]
---
0x99d JUMPDEST
0x99e DUP4
0x99f SWAP2
0x9a0 POP
0x9a1 DUP2
0x9a2 PUSH1 0x1
0x9a4 PUSH1 0xa0
0x9a6 PUSH1 0x2
0x9a8 EXP
0x9a9 SUB
0x9aa AND
0x9ab PUSH4 0x70a08231
0x9b0 ADDRESS
0x9b1 PUSH1 0x0
0x9b3 PUSH1 0x40
0x9b5 MLOAD
0x9b6 PUSH1 0x20
0x9b8 ADD
0x9b9 MSTORE
0x9ba PUSH1 0x40
0x9bc MLOAD
0x9bd DUP3
0x9be PUSH4 0xffffffff
0x9c3 AND
0x9c4 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x9e2 MUL
0x9e3 DUP2
0x9e4 MSTORE
0x9e5 PUSH1 0x4
0x9e7 ADD
0x9e8 DUP1
0x9e9 DUP3
0x9ea PUSH1 0x1
0x9ec PUSH1 0xa0
0x9ee PUSH1 0x2
0x9f0 EXP
0x9f1 SUB
0x9f2 AND
0x9f3 PUSH1 0x1
0x9f5 PUSH1 0xa0
0x9f7 PUSH1 0x2
0x9f9 EXP
0x9fa SUB
0x9fb AND
0x9fc DUP2
0x9fd MSTORE
0x9fe PUSH1 0x20
0xa00 ADD
0xa01 SWAP2
0xa02 POP
0xa03 POP
0xa04 PUSH1 0x20
0xa06 PUSH1 0x40
0xa08 MLOAD
0xa09 DUP1
0xa0a DUP4
0xa0b SUB
0xa0c DUP2
0xa0d PUSH1 0x0
0xa0f DUP8
0xa10 DUP1
0xa11 EXTCODESIZE
0xa12 ISZERO
0xa13 ISZERO
0xa14 PUSH2 0xa19
0xa17 JUMPI
---
0x99d: JUMPDEST 
0x9a2: V785 = 0x1
0x9a4: V786 = 0xa0
0x9a6: V787 = 0x2
0x9a8: V788 = EXP 0x2 0xa0
0x9a9: V789 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9aa: V790 = AND 0xffffffffffffffffffffffffffffffffffffffff V470
0x9ab: V791 = 0x70a08231
0x9b0: V792 = ADDRESS
0x9b1: V793 = 0x0
0x9b3: V794 = 0x40
0x9b5: V795 = M[0x40]
0x9b6: V796 = 0x20
0x9b8: V797 = ADD 0x20 V795
0x9b9: M[V797] = 0x0
0x9ba: V798 = 0x40
0x9bc: V799 = M[0x40]
0x9be: V800 = 0xffffffff
0x9c3: V801 = AND 0xffffffff 0x70a08231
0x9c4: V802 = 0x100000000000000000000000000000000000000000000000000000000
0x9e2: V803 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x70a08231
0x9e4: M[V799] = 0x70a0823100000000000000000000000000000000000000000000000000000000
0x9e5: V804 = 0x4
0x9e7: V805 = ADD 0x4 V799
0x9ea: V806 = 0x1
0x9ec: V807 = 0xa0
0x9ee: V808 = 0x2
0x9f0: V809 = EXP 0x2 0xa0
0x9f1: V810 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9f2: V811 = AND 0xffffffffffffffffffffffffffffffffffffffff V792
0x9f3: V812 = 0x1
0x9f5: V813 = 0xa0
0x9f7: V814 = 0x2
0x9f9: V815 = EXP 0x2 0xa0
0x9fa: V816 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9fb: V817 = AND 0xffffffffffffffffffffffffffffffffffffffff V811
0x9fd: M[V805] = V817
0x9fe: V818 = 0x20
0xa00: V819 = ADD 0x20 V805
0xa04: V820 = 0x20
0xa06: V821 = 0x40
0xa08: V822 = M[0x40]
0xa0b: V823 = SUB V819 V822
0xa0d: V824 = 0x0
0xa11: V825 = EXTCODESIZE V790
0xa12: V826 = ISZERO V825
0xa13: V827 = ISZERO V826
0xa14: V828 = 0xa19
0xa17: JUMPI 0xa19 V827
---
Entry stack: [V10, 0x2b8, V470, 0x0, 0x0, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S3, S0, V790, 0x70a08231, V819, 0x20, V822, V823, V822, 0x0, V790]
Exit stack: [V10, 0x2b8, V470, 0x0, V470, 0x0, V790, 0x70a08231, V819, 0x20, V822, V823, V822, 0x0, V790]

================================

Block 0xa18
[0xa18:0xa18]
---
Predecessors: [0x99d]
Successors: []
---
0xa18 INVALID
---
0xa18: INVALID 
---
Entry stack: [V10, 0x2b8, V470, 0x0, V470, 0x0, V790, 0x70a08231, V819, 0x20, V822, V823, V822, 0x0, V790]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2b8, V470, 0x0, V470, 0x0, V790, 0x70a08231, V819, 0x20, V822, V823, V822, 0x0, V790]

================================

Block 0xa19
[0xa19:0xa25]
---
Predecessors: [0x99d]
Successors: [0xa26, 0xa27]
---
0xa19 JUMPDEST
0xa1a PUSH2 0x2c6
0xa1d GAS
0xa1e SUB
0xa1f CALL
0xa20 ISZERO
0xa21 ISZERO
0xa22 PUSH2 0xa27
0xa25 JUMPI
---
0xa19: JUMPDEST 
0xa1a: V829 = 0x2c6
0xa1d: V830 = GAS
0xa1e: V831 = SUB V830 0x2c6
0xa1f: V832 = CALL V831 V790 0x0 V822 V823 V822 0x20
0xa20: V833 = ISZERO V832
0xa21: V834 = ISZERO V833
0xa22: V835 = 0xa27
0xa25: JUMPI 0xa27 V834
---
Entry stack: [V10, 0x2b8, V470, 0x0, V470, 0x0, V790, 0x70a08231, V819, 0x20, V822, V823, V822, 0x0, V790]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x2b8, V470, 0x0, V470, 0x0, V790, 0x70a08231, V819]

================================

Block 0xa26
[0xa26:0xa26]
---
Predecessors: [0xa19]
Successors: []
---
0xa26 INVALID
---
0xa26: INVALID 
---
Entry stack: [V10, 0x2b8, V470, 0x0, V470, 0x0, V790, 0x70a08231, V819]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2b8, V470, 0x0, V470, 0x0, V790, 0x70a08231, V819]

================================

Block 0xa27
[0xa27:0xa9f]
---
Predecessors: [0xa19]
Successors: [0xaa0, 0xaa1]
---
0xa27 JUMPDEST
0xa28 POP
0xa29 POP
0xa2a PUSH1 0x40
0xa2c DUP1
0xa2d MLOAD
0xa2e DUP1
0xa2f MLOAD
0xa30 PUSH1 0x0
0xa32 DUP1
0xa33 SLOAD
0xa34 PUSH1 0x20
0xa36 SWAP4
0xa37 DUP5
0xa38 ADD
0xa39 DUP3
0xa3a SWAP1
0xa3b MSTORE
0xa3c DUP5
0xa3d MLOAD
0xa3e PUSH32 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa5f DUP2
0xa60 MSTORE
0xa61 PUSH1 0x1
0xa63 PUSH1 0xa0
0xa65 PUSH1 0x2
0xa67 EXP
0xa68 SUB
0xa69 SWAP2
0xa6a DUP3
0xa6b AND
0xa6c PUSH1 0x4
0xa6e DUP3
0xa6f ADD
0xa70 MSTORE
0xa71 PUSH1 0x24
0xa73 DUP2
0xa74 ADD
0xa75 DUP5
0xa76 SWAP1
0xa77 MSTORE
0xa78 SWAP5
0xa79 MLOAD
0xa7a SWAP3
0xa7b SWAP7
0xa7c POP
0xa7d DUP8
0xa7e AND
0xa7f SWAP5
0xa80 POP
0xa81 PUSH4 0xa9059cbb
0xa86 SWAP4
0xa87 PUSH1 0x44
0xa89 DUP1
0xa8a DUP3
0xa8b ADD
0xa8c SWAP5
0xa8d SWAP4
0xa8e SWAP3
0xa8f SWAP2
0xa90 DUP4
0xa91 SWAP1
0xa92 SUB
0xa93 ADD
0xa94 SWAP1
0xa95 DUP3
0xa96 SWAP1
0xa97 DUP8
0xa98 DUP1
0xa99 EXTCODESIZE
0xa9a ISZERO
0xa9b ISZERO
0xa9c PUSH2 0xaa1
0xa9f JUMPI
---
0xa27: JUMPDEST 
0xa2a: V836 = 0x40
0xa2d: V837 = M[0x40]
0xa2f: V838 = M[V837]
0xa30: V839 = 0x0
0xa33: V840 = S[0x0]
0xa34: V841 = 0x20
0xa38: V842 = ADD 0x20 V837
0xa3b: M[V842] = 0x0
0xa3d: V843 = M[0x40]
0xa3e: V844 = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa60: M[V843] = 0xa9059cbb00000000000000000000000000000000000000000000000000000000
0xa61: V845 = 0x1
0xa63: V846 = 0xa0
0xa65: V847 = 0x2
0xa67: V848 = EXP 0x2 0xa0
0xa68: V849 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa6b: V850 = AND 0xffffffffffffffffffffffffffffffffffffffff V840
0xa6c: V851 = 0x4
0xa6f: V852 = ADD V843 0x4
0xa70: M[V852] = V850
0xa71: V853 = 0x24
0xa74: V854 = ADD V843 0x24
0xa77: M[V854] = V838
0xa79: V855 = M[0x40]
0xa7e: V856 = AND V470 0xffffffffffffffffffffffffffffffffffffffff
0xa81: V857 = 0xa9059cbb
0xa87: V858 = 0x44
0xa8b: V859 = ADD V843 0x44
0xa92: V860 = SUB V843 V855
0xa93: V861 = ADD V860 0x44
0xa99: V862 = EXTCODESIZE V856
0xa9a: V863 = ISZERO V862
0xa9b: V864 = ISZERO V863
0xa9c: V865 = 0xaa1
0xa9f: JUMPI 0xaa1 V864
---
Entry stack: [V10, 0x2b8, V470, 0x0, V470, 0x0, V790, 0x70a08231, V819]
Stack pops: 5
Stack additions: [S4, V838, V856, 0xa9059cbb, V859, 0x20, V855, V861, V855, 0x0, V856]
Exit stack: [V10, 0x2b8, V470, 0x0, V470, V838, V856, 0xa9059cbb, V859, 0x20, V855, V861, V855, 0x0, V856]

================================

Block 0xaa0
[0xaa0:0xaa0]
---
Predecessors: [0xa27]
Successors: []
---
0xaa0 INVALID
---
0xaa0: INVALID 
---
Entry stack: [V10, 0x2b8, V470, 0x0, V470, V838, V856, 0xa9059cbb, V859, 0x20, V855, V861, V855, 0x0, V856]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2b8, V470, 0x0, V470, V838, V856, 0xa9059cbb, V859, 0x20, V855, V861, V855, 0x0, V856]

================================

Block 0xaa1
[0xaa1:0xaad]
---
Predecessors: [0xa27]
Successors: [0xaae, 0xaaf]
---
0xaa1 JUMPDEST
0xaa2 PUSH2 0x2c6
0xaa5 GAS
0xaa6 SUB
0xaa7 CALL
0xaa8 ISZERO
0xaa9 ISZERO
0xaaa PUSH2 0xaaf
0xaad JUMPI
---
0xaa1: JUMPDEST 
0xaa2: V866 = 0x2c6
0xaa5: V867 = GAS
0xaa6: V868 = SUB V867 0x2c6
0xaa7: V869 = CALL V868 V856 0x0 V855 V861 V855 0x20
0xaa8: V870 = ISZERO V869
0xaa9: V871 = ISZERO V870
0xaaa: V872 = 0xaaf
0xaad: JUMPI 0xaaf V871
---
Entry stack: [V10, 0x2b8, V470, 0x0, V470, V838, V856, 0xa9059cbb, V859, 0x20, V855, V861, V855, 0x0, V856]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x2b8, V470, 0x0, V470, V838, V856, 0xa9059cbb, V859]

================================

Block 0xaae
[0xaae:0xaae]
---
Predecessors: [0xaa1]
Successors: []
---
0xaae INVALID
---
0xaae: INVALID 
---
Entry stack: [V10, 0x2b8, V470, 0x0, V470, V838, V856, 0xa9059cbb, V859]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x2b8, V470, 0x0, V470, V838, V856, 0xa9059cbb, V859]

================================

Block 0xaaf
[0xaaf:0xab8]
---
Predecessors: [0xaa1]
Successors: [0xab9]
---
0xaaf JUMPDEST
0xab0 POP
0xab1 POP
0xab2 PUSH1 0x40
0xab4 MLOAD
0xab5 MLOAD
0xab6 SWAP4
0xab7 POP
0xab8 POP
---
0xaaf: JUMPDEST 
0xab2: V873 = 0x40
0xab4: V874 = M[0x40]
0xab5: V875 = M[V874]
---
Entry stack: [V10, 0x2b8, V470, 0x0, V470, V838, V856, 0xa9059cbb, V859]
Stack pops: 6
Stack additions: [V875, S4, S3]
Exit stack: [V10, 0x2b8, V470, V875, V470, V838]

================================

Block 0xab9
[0xab9:0xabf]
---
Predecessors: [0xaaf]
Successors: [0x2b8]
---
0xab9 JUMPDEST
0xaba POP
0xabb POP
0xabc SWAP2
0xabd SWAP1
0xabe POP
0xabf JUMP
---
0xab9: JUMPDEST 
0xabf: JUMP 0x2b8
---
Entry stack: [V10, 0x2b8, V470, V875, V470, V838]
Stack pops: 5
Stack additions: [S2]
Exit stack: [V10, V875]

================================

Block 0xac0
[0xac0:0xad1]
---
Predecessors: [0x566, 0x806]
Successors: [0x56e, 0x80e]
---
0xac0 JUMPDEST
0xac1 PUSH1 0x40
0xac3 DUP1
0xac4 MLOAD
0xac5 PUSH1 0x20
0xac7 DUP2
0xac8 ADD
0xac9 SWAP1
0xaca SWAP2
0xacb MSTORE
0xacc PUSH1 0x0
0xace DUP2
0xacf MSTORE
0xad0 SWAP1
0xad1 JUMP
---
0xac0: JUMPDEST 
0xac1: V876 = 0x40
0xac4: V877 = M[0x40]
0xac5: V878 = 0x20
0xac8: V879 = ADD V877 0x20
0xacb: M[0x40] = V879
0xacc: V880 = 0x0
0xacf: M[V877] = 0x0
0xad1: JUMP {0x56e, 0x80e}
---
Entry stack: [V10, 0x219, {0x56e, 0x80e}]
Stack pops: 1
Stack additions: [V877]
Exit stack: [V10, 0x219, V877]

================================

Block 0xad2
[0xad2:0xb03]
---
Predecessors: []
Successors: []
---
0xad2 STOP
0xad3 LOG1
0xad4 PUSH6 0x627a7a723058
0xadb SHA3
0xadc MISSING 0xa6
0xadd PUSH7 0x36e9775c8d329b
0xae5 MISSING 0xec
0xae6 DELEGATECALL
0xae7 MISSING 0xc9
0xae8 MISSING 0x2d
0xae9 ADDMOD
0xaea CREATE2
0xaeb MISSING 0xdf
0xaec MISSING 0x47
0xaed MISSING 0xe3
0xaee ADDRESS
0xaef MISSING 0xd1
0xaf0 DUP11
0xaf1 MISSING 0xe6
0xaf2 COINBASE
0xaf3 PUSH16 0x7811f73811c561490029
---
0xad2: STOP 
0xad3: LOG S0 S1 S2
0xad4: V881 = 0x627a7a723058
0xadb: V882 = SHA3 0x627a7a723058 S3
0xadc: MISSING 0xa6
0xadd: V883 = 0x36e9775c8d329b
0xae5: MISSING 0xec
0xae6: V884 = DELEGATECALL S0 S1 S2 S3 S4 S5
0xae7: MISSING 0xc9
0xae8: MISSING 0x2d
0xae9: V885 = ADDMOD S0 S1 S2
0xaea: V886 = CREATE2 V885 S3 S4 S5
0xaeb: MISSING 0xdf
0xaec: MISSING 0x47
0xaed: MISSING 0xe3
0xaee: V887 = ADDRESS
0xaef: MISSING 0xd1
0xaf1: MISSING 0xe6
0xaf2: V888 = COINBASE
0xaf3: V889 = 0x7811f73811c561490029
---
Entry stack: []
Stack pops: 0
Stack additions: [V882, 0x36e9775c8d329b, V884, V886, V887, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, 0x7811f73811c561490029, V888]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x209
Exit block: 0x28b
Body: 0x209, 0x210, 0x211, 0x219, 0x23f, 0x24d, 0x25f, 0x272, 0x28b, 0x566, 0x56e, 0x5a4

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x299
Exit block: 0x2b8
Body: 0x299, 0x2a0, 0x2a1, 0x2b8, 0x5a7, 0x5b3, 0x5dc, 0x5e2, 0x5e9, 0x64a

Function 2:
Public function signature: 0xdcf4b8f
Entry block: 0x2cc
Exit block: 0x2dc
Body: 0x2cc, 0x2d3, 0x2d4, 0x2dc, 0x650

Function 3:
Public function signature: 0x18160ddd
Entry block: 0x2ee
Exit block: 0x2dc
Body: 0x2dc, 0x2ee, 0x2f5, 0x2f6, 0x656

Function 4:
Public function signature: 0x23b872dd
Entry block: 0x310
Exit block: 0x2b8
Body: 0x2b8, 0x310, 0x317, 0x318, 0x65c, 0x66d, 0x672, 0x67a, 0x682, 0x6df, 0x6e1, 0x6e8, 0x6eb, 0x6f1, 0x77a, 0x77f, 0x780

Function 5:
Public function signature: 0x313ce567
Entry block: 0x349
Exit block: 0x359
Body: 0x349, 0x350, 0x351, 0x359, 0x78c, 0x78f

Function 6:
Public function signature: 0x64acdb77
Entry block: 0x36f
Exit block: 0x207
Body: 0x207, 0x36f, 0x376, 0x377, 0x792, 0x7a9, 0x7ae, 0x7b9

Function 7:
Public function signature: 0x70a08231
Entry block: 0x381
Exit block: 0x2dc
Body: 0x2dc, 0x381, 0x388, 0x389, 0x7bb, 0x7d5

Function 8:
Public function signature: 0x8f580996
Entry block: 0x3af
Exit block: 0x207
Body: 0x207, 0x3af, 0x3b6, 0x3b7, 0x7da, 0x7f1, 0x7f6, 0x804

Function 9:
Public function signature: 0x95d89b41
Entry block: 0x3c1
Exit block: 0x28b
Body: 0x219, 0x23f, 0x24d, 0x25f, 0x272, 0x28b, 0x3c1, 0x3c8, 0x3c9, 0x806, 0x80e, 0x844

Function 10:
Public function signature: 0xa9059cbb
Entry block: 0x451
Exit block: 0x2b8
Body: 0x2b8, 0x451, 0x458, 0x459, 0x847, 0x856, 0x85b, 0x863, 0x86b, 0x8a3, 0x8a6, 0x8ac, 0x91b, 0x920, 0x921

Function 11:
Public function signature: 0xc59d4847
Entry block: 0x484
Exit block: 0x494
Body: 0x484, 0x48b, 0x48c, 0x494, 0x92a, 0x93a

Function 12:
Public function signature: 0xd5abeb01
Entry block: 0x4bc
Exit block: 0x2dc
Body: 0x2dc, 0x4bc, 0x4c3, 0x4c4, 0x940

Function 13:
Public function signature: 0xda040c0f
Entry block: 0x4de
Exit block: 0x2b8
Body: 0x2b8, 0x4de, 0x4e5, 0x4e6, 0x946

Function 14:
Public function signature: 0xdd62ed3e
Entry block: 0x502
Exit block: 0x2dc
Body: 0x2dc, 0x502, 0x509, 0x50a, 0x94f, 0x976

Function 15:
Public function signature: 0xe58fc54c
Entry block: 0x536
Exit block: 0x2b8
Body: 0x2b8, 0x536, 0x53d, 0x53e, 0x97c, 0x998, 0x99d, 0xa18, 0xa19, 0xa26, 0xa27, 0xaa0, 0xaa1, 0xaae, 0xaaf, 0xab9

Function 16:
Public fallback function
Entry block: 0xe3
Exit block: 0x165
Body: 0xe3, 0xe7, 0xf7, 0xfc, 0x104, 0x108, 0x116, 0x12a, 0x130, 0x135, 0x165, 0x166, 0x198, 0x1aa, 0x204, 0x207

