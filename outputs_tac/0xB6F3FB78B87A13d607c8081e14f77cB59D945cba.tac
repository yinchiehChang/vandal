Block 0x0
[0x0:0xb]
---
Predecessors: []
Successors: [0xc, 0x10]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLVALUE
0x6 DUP1
0x7 ISZERO
0x8 PUSH2 0x10
0xb JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = CALLVALUE
0x7: V3 = ISZERO V2
0x8: V4 = 0x10
0xb: JUMPI 0x10 V3
---
Entry stack: []
Stack pops: 0
Stack additions: [V2]
Exit stack: [V2]

================================

Block 0xc
[0xc:0xf]
---
Predecessors: [0x0]
Successors: []
---
0xc PUSH1 0x0
0xe DUP1
0xf REVERT
---
0xc: V5 = 0x0
0xf: REVERT 0x0 0x0
---
Entry stack: [V2]
Stack pops: 0
Stack additions: []
Exit stack: [V2]

================================

Block 0x10
[0x10:0x19]
---
Predecessors: [0x0]
Successors: [0x1a, 0x100]
---
0x10 JUMPDEST
0x11 POP
0x12 PUSH1 0x4
0x14 CALLDATASIZE
0x15 LT
0x16 PUSH2 0x100
0x19 JUMPI
---
0x10: JUMPDEST 
0x12: V6 = 0x4
0x14: V7 = CALLDATASIZE
0x15: V8 = LT V7 0x4
0x16: V9 = 0x100
0x19: JUMPI 0x100 V8
---
Entry stack: [V2]
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1a
[0x1a:0x2a]
---
Predecessors: [0x10]
Successors: [0x2b, 0x97]
---
0x1a PUSH1 0x0
0x1c CALLDATALOAD
0x1d PUSH1 0xe0
0x1f SHR
0x20 DUP1
0x21 PUSH4 0x70a08231
0x26 GT
0x27 PUSH2 0x97
0x2a JUMPI
---
0x1a: V10 = 0x0
0x1c: V11 = CALLDATALOAD 0x0
0x1d: V12 = 0xe0
0x1f: V13 = SHR 0xe0 V11
0x21: V14 = 0x70a08231
0x26: V15 = GT 0x70a08231 V13
0x27: V16 = 0x97
0x2a: JUMPI 0x97 V15
---
Entry stack: []
Stack pops: 0
Stack additions: [V13]
Exit stack: [V13]

================================

Block 0x2b
[0x2b:0x35]
---
Predecessors: [0x1a]
Successors: [0x36, 0x66]
---
0x2b DUP1
0x2c PUSH4 0xdd62ed3e
0x31 GT
0x32 PUSH2 0x66
0x35 JUMPI
---
0x2c: V17 = 0xdd62ed3e
0x31: V18 = GT 0xdd62ed3e V13
0x32: V19 = 0x66
0x35: JUMPI 0x66 V18
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x36
[0x36:0x40]
---
Predecessors: [0x2b]
Successors: [0x41, 0x336]
---
0x36 DUP1
0x37 PUSH4 0xdd62ed3e
0x3c EQ
0x3d PUSH2 0x336
0x40 JUMPI
---
0x37: V20 = 0xdd62ed3e
0x3c: V21 = EQ 0xdd62ed3e V13
0x3d: V22 = 0x336
0x40: JUMPI 0x336 V21
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0x36]
Successors: [0x4c, 0x364]
---
0x41 DUP1
0x42 PUSH4 0xf1bb3c54
0x47 EQ
0x48 PUSH2 0x364
0x4b JUMPI
---
0x42: V23 = 0xf1bb3c54
0x47: V24 = EQ 0xf1bb3c54 V13
0x48: V25 = 0x364
0x4b: JUMPI 0x364 V24
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x38a]
---
0x4c DUP1
0x4d PUSH4 0xf340fa01
0x52 EQ
0x53 PUSH2 0x38a
0x56 JUMPI
---
0x4d: V26 = 0xf340fa01
0x52: V27 = EQ 0xf340fa01 V13
0x53: V28 = 0x38a
0x56: JUMPI 0x38a V27
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x3b0]
---
0x57 DUP1
0x58 PUSH4 0xf3fef3a3
0x5d EQ
0x5e PUSH2 0x3b0
0x61 JUMPI
---
0x58: V29 = 0xf3fef3a3
0x5d: V30 = EQ 0xf3fef3a3 V13
0x5e: V31 = 0x3b0
0x61: JUMPI 0x3b0 V30
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x62
[0x62:0x65]
---
Predecessors: [0x57]
Successors: [0x100]
---
0x62 PUSH2 0x100
0x65 JUMP
---
0x62: V32 = 0x100
0x65: JUMP 0x100
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x66
[0x66:0x71]
---
Predecessors: [0x2b]
Successors: [0x72, 0x2b0]
---
0x66 JUMPDEST
0x67 DUP1
0x68 PUSH4 0x70a08231
0x6d EQ
0x6e PUSH2 0x2b0
0x71 JUMPI
---
0x66: JUMPDEST 
0x68: V33 = 0x70a08231
0x6d: V34 = EQ 0x70a08231 V13
0x6e: V35 = 0x2b0
0x71: JUMPI 0x2b0 V34
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x66]
Successors: [0x7d, 0x2d6]
---
0x72 DUP1
0x73 PUSH4 0x95d89b41
0x78 EQ
0x79 PUSH2 0x2d6
0x7c JUMPI
---
0x73: V36 = 0x95d89b41
0x78: V37 = EQ 0x95d89b41 V13
0x79: V38 = 0x2d6
0x7c: JUMPI 0x2d6 V37
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x2de]
---
0x7d DUP1
0x7e PUSH4 0xa457c2d7
0x83 EQ
0x84 PUSH2 0x2de
0x87 JUMPI
---
0x7e: V39 = 0xa457c2d7
0x83: V40 = EQ 0xa457c2d7 V13
0x84: V41 = 0x2de
0x87: JUMPI 0x2de V40
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x30a]
---
0x88 DUP1
0x89 PUSH4 0xa9059cbb
0x8e EQ
0x8f PUSH2 0x30a
0x92 JUMPI
---
0x89: V42 = 0xa9059cbb
0x8e: V43 = EQ 0xa9059cbb V13
0x8f: V44 = 0x30a
0x92: JUMPI 0x30a V43
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x93
[0x93:0x96]
---
Predecessors: [0x88]
Successors: [0x100]
---
0x93 PUSH2 0x100
0x96 JUMP
---
0x93: V45 = 0x100
0x96: JUMP 0x100
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x97
[0x97:0xa2]
---
Predecessors: [0x1a]
Successors: [0xa3, 0xd3]
---
0x97 JUMPDEST
0x98 DUP1
0x99 PUSH4 0x25b6488b
0x9e GT
0x9f PUSH2 0xd3
0xa2 JUMPI
---
0x97: JUMPDEST 
0x99: V46 = 0x25b6488b
0x9e: V47 = GT 0x25b6488b V13
0x9f: V48 = 0xd3
0xa2: JUMPI 0xd3 V47
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xa3
[0xa3:0xad]
---
Predecessors: [0x97]
Successors: [0xae, 0x212]
---
0xa3 DUP1
0xa4 PUSH4 0x25b6488b
0xa9 EQ
0xaa PUSH2 0x212
0xad JUMPI
---
0xa4: V49 = 0x25b6488b
0xa9: V50 = EQ 0x25b6488b V13
0xaa: V51 = 0x212
0xad: JUMPI 0x212 V50
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xae
[0xae:0xb8]
---
Predecessors: [0xa3]
Successors: [0xb9, 0x240]
---
0xae DUP1
0xaf PUSH4 0x313ce567
0xb4 EQ
0xb5 PUSH2 0x240
0xb8 JUMPI
---
0xaf: V52 = 0x313ce567
0xb4: V53 = EQ 0x313ce567 V13
0xb5: V54 = 0x240
0xb8: JUMPI 0x240 V53
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xb9
[0xb9:0xc3]
---
Predecessors: [0xae]
Successors: [0xc4, 0x25e]
---
0xb9 DUP1
0xba PUSH4 0x39509351
0xbf EQ
0xc0 PUSH2 0x25e
0xc3 JUMPI
---
0xba: V55 = 0x39509351
0xbf: V56 = EQ 0x39509351 V13
0xc0: V57 = 0x25e
0xc3: JUMPI 0x25e V56
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xc4
[0xc4:0xce]
---
Predecessors: [0xb9]
Successors: [0xcf, 0x28a]
---
0xc4 DUP1
0xc5 PUSH4 0x3fceb2fa
0xca EQ
0xcb PUSH2 0x28a
0xce JUMPI
---
0xc5: V58 = 0x3fceb2fa
0xca: V59 = EQ 0x3fceb2fa V13
0xcb: V60 = 0x28a
0xce: JUMPI 0x28a V59
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xcf
[0xcf:0xd2]
---
Predecessors: [0xc4]
Successors: [0x100]
---
0xcf PUSH2 0x100
0xd2 JUMP
---
0xcf: V61 = 0x100
0xd2: JUMP 0x100
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0xd3
[0xd3:0xde]
---
Predecessors: [0x97]
Successors: [0xdf, 0x105]
---
0xd3 JUMPDEST
0xd4 DUP1
0xd5 PUSH4 0x6fdde03
0xda EQ
0xdb PUSH2 0x105
0xde JUMPI
---
0xd3: JUMPDEST 
0xd5: V62 = 0x6fdde03
0xda: V63 = EQ 0x6fdde03 V13
0xdb: V64 = 0x105
0xde: JUMPI 0x105 V63
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xdf
[0xdf:0xe9]
---
Predecessors: [0xd3]
Successors: [0xea, 0x182]
---
0xdf DUP1
0xe0 PUSH4 0x95ea7b3
0xe5 EQ
0xe6 PUSH2 0x182
0xe9 JUMPI
---
0xe0: V65 = 0x95ea7b3
0xe5: V66 = EQ 0x95ea7b3 V13
0xe6: V67 = 0x182
0xe9: JUMPI 0x182 V66
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xea
[0xea:0xf4]
---
Predecessors: [0xdf]
Successors: [0xf5, 0x1c2]
---
0xea DUP1
0xeb PUSH4 0x18160ddd
0xf0 EQ
0xf1 PUSH2 0x1c2
0xf4 JUMPI
---
0xeb: V68 = 0x18160ddd
0xf0: V69 = EQ 0x18160ddd V13
0xf1: V70 = 0x1c2
0xf4: JUMPI 0x1c2 V69
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0xf5
[0xf5:0xff]
---
Predecessors: [0xea]
Successors: [0x100, 0x1dc]
---
0xf5 DUP1
0xf6 PUSH4 0x23b872dd
0xfb EQ
0xfc PUSH2 0x1dc
0xff JUMPI
---
0xf6: V71 = 0x23b872dd
0xfb: V72 = EQ 0x23b872dd V13
0xfc: V73 = 0x1dc
0xff: JUMPI 0x1dc V72
---
Entry stack: [V13]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13]

================================

Block 0x100
[0x100:0x104]
---
Predecessors: [0x10, 0x62, 0x93, 0xcf, 0xf5]
Successors: []
---
0x100 JUMPDEST
0x101 PUSH1 0x0
0x103 DUP1
0x104 REVERT
---
0x100: JUMPDEST 
0x101: V74 = 0x0
0x104: REVERT 0x0 0x0
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x105
[0x105:0x10c]
---
Predecessors: [0xd3]
Successors: [0x3dc]
---
0x105 JUMPDEST
0x106 PUSH2 0x10d
0x109 PUSH2 0x3dc
0x10c JUMP
---
0x105: JUMPDEST 
0x106: V75 = 0x10d
0x109: V76 = 0x3dc
0x10c: JUMP 0x3dc
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x10d]
Exit stack: [V13, 0x10d]

================================

Block 0x10d
[0x10d:0x12e]
---
Predecessors: [0x468]
Successors: [0x12f]
---
0x10d JUMPDEST
0x10e PUSH1 0x40
0x110 DUP1
0x111 MLOAD
0x112 PUSH1 0x20
0x114 DUP1
0x115 DUP3
0x116 MSTORE
0x117 DUP4
0x118 MLOAD
0x119 DUP2
0x11a DUP4
0x11b ADD
0x11c MSTORE
0x11d DUP4
0x11e MLOAD
0x11f SWAP2
0x120 SWAP3
0x121 DUP4
0x122 SWAP3
0x123 SWAP1
0x124 DUP4
0x125 ADD
0x126 SWAP2
0x127 DUP6
0x128 ADD
0x129 SWAP1
0x12a DUP1
0x12b DUP4
0x12c DUP4
0x12d PUSH1 0x0
---
0x10d: JUMPDEST 
0x10e: V77 = 0x40
0x111: V78 = M[0x40]
0x112: V79 = 0x20
0x116: M[V78] = 0x20
0x118: V80 = M[S0]
0x11b: V81 = ADD V78 0x20
0x11c: M[V81] = V80
0x11e: V82 = M[S0]
0x125: V83 = ADD V78 0x40
0x128: V84 = ADD S0 0x20
0x12d: V85 = 0x0
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: [S0, V78, V78, V83, V84, V82, V82, V83, V84, 0x0]
Exit stack: [V13, S0, V78, V78, V83, V84, V82, V82, V83, V84, 0x0]

================================

Block 0x12f
[0x12f:0x137]
---
Predecessors: [0x10d, 0x138]
Successors: [0x138, 0x147]
---
0x12f JUMPDEST
0x130 DUP4
0x131 DUP2
0x132 LT
0x133 ISZERO
0x134 PUSH2 0x147
0x137 JUMPI
---
0x12f: JUMPDEST 
0x132: V86 = LT S0 V82
0x133: V87 = ISZERO V86
0x134: V88 = 0x147
0x137: JUMPI 0x147 V87
---
Entry stack: [V13, S9, V78, V78, V83, V84, V82, V82, V83, V84, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S9, V78, V78, V83, V84, V82, V82, V83, V84, S0]

================================

Block 0x138
[0x138:0x146]
---
Predecessors: [0x12f]
Successors: [0x12f]
---
0x138 DUP2
0x139 DUP2
0x13a ADD
0x13b MLOAD
0x13c DUP4
0x13d DUP3
0x13e ADD
0x13f MSTORE
0x140 PUSH1 0x20
0x142 ADD
0x143 PUSH2 0x12f
0x146 JUMP
---
0x13a: V89 = ADD S0 V84
0x13b: V90 = M[V89]
0x13e: V91 = ADD S0 V83
0x13f: M[V91] = V90
0x140: V92 = 0x20
0x142: V93 = ADD 0x20 S0
0x143: V94 = 0x12f
0x146: JUMP 0x12f
---
Entry stack: [V13, S9, V78, V78, V83, V84, V82, V82, V83, V84, S0]
Stack pops: 3
Stack additions: [S2, S1, V93]
Exit stack: [V13, S9, V78, V78, V83, V84, V82, V82, V83, V84, V93]

================================

Block 0x147
[0x147:0x15a]
---
Predecessors: [0x12f]
Successors: [0x15b, 0x174]
---
0x147 JUMPDEST
0x148 POP
0x149 POP
0x14a POP
0x14b POP
0x14c SWAP1
0x14d POP
0x14e SWAP1
0x14f DUP2
0x150 ADD
0x151 SWAP1
0x152 PUSH1 0x1f
0x154 AND
0x155 DUP1
0x156 ISZERO
0x157 PUSH2 0x174
0x15a JUMPI
---
0x147: JUMPDEST 
0x150: V95 = ADD V82 V83
0x152: V96 = 0x1f
0x154: V97 = AND 0x1f V82
0x156: V98 = ISZERO V97
0x157: V99 = 0x174
0x15a: JUMPI 0x174 V98
---
Entry stack: [V13, S9, V78, V78, V83, V84, V82, V82, V83, V84, S0]
Stack pops: 7
Stack additions: [V95, V97]
Exit stack: [V13, S9, V78, V78, V95, V97]

================================

Block 0x15b
[0x15b:0x173]
---
Predecessors: [0x147]
Successors: [0x174]
---
0x15b DUP1
0x15c DUP3
0x15d SUB
0x15e DUP1
0x15f MLOAD
0x160 PUSH1 0x1
0x162 DUP4
0x163 PUSH1 0x20
0x165 SUB
0x166 PUSH2 0x100
0x169 EXP
0x16a SUB
0x16b NOT
0x16c AND
0x16d DUP2
0x16e MSTORE
0x16f PUSH1 0x20
0x171 ADD
0x172 SWAP2
0x173 POP
---
0x15d: V100 = SUB V95 V97
0x15f: V101 = M[V100]
0x160: V102 = 0x1
0x163: V103 = 0x20
0x165: V104 = SUB 0x20 V97
0x166: V105 = 0x100
0x169: V106 = EXP 0x100 V104
0x16a: V107 = SUB V106 0x1
0x16b: V108 = NOT V107
0x16c: V109 = AND V108 V101
0x16e: M[V100] = V109
0x16f: V110 = 0x20
0x171: V111 = ADD 0x20 V100
---
Entry stack: [V13, S4, V78, V78, V95, V97]
Stack pops: 2
Stack additions: [V111, S0]
Exit stack: [V13, S4, V78, V78, V111, V97]

================================

Block 0x174
[0x174:0x181]
---
Predecessors: [0x147, 0x15b]
Successors: []
---
0x174 JUMPDEST
0x175 POP
0x176 SWAP3
0x177 POP
0x178 POP
0x179 POP
0x17a PUSH1 0x40
0x17c MLOAD
0x17d DUP1
0x17e SWAP2
0x17f SUB
0x180 SWAP1
0x181 RETURN
---
0x174: JUMPDEST 
0x17a: V112 = 0x40
0x17c: V113 = M[0x40]
0x17f: V114 = SUB S1 V113
0x181: RETURN V113 V114
---
Entry stack: [V13, S4, V78, V78, S1, V97]
Stack pops: 5
Stack additions: []
Exit stack: [V13]

================================

Block 0x182
[0x182:0x193]
---
Predecessors: [0xdf]
Successors: [0x194, 0x198]
---
0x182 JUMPDEST
0x183 PUSH2 0x1ae
0x186 PUSH1 0x4
0x188 DUP1
0x189 CALLDATASIZE
0x18a SUB
0x18b PUSH1 0x40
0x18d DUP2
0x18e LT
0x18f ISZERO
0x190 PUSH2 0x198
0x193 JUMPI
---
0x182: JUMPDEST 
0x183: V115 = 0x1ae
0x186: V116 = 0x4
0x189: V117 = CALLDATASIZE
0x18a: V118 = SUB V117 0x4
0x18b: V119 = 0x40
0x18e: V120 = LT V118 0x40
0x18f: V121 = ISZERO V120
0x190: V122 = 0x198
0x193: JUMPI 0x198 V121
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1ae, 0x4, V118]
Exit stack: [V13, 0x1ae, 0x4, V118]

================================

Block 0x194
[0x194:0x197]
---
Predecessors: [0x182]
Successors: []
---
0x194 PUSH1 0x0
0x196 DUP1
0x197 REVERT
---
0x194: V123 = 0x0
0x197: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ae, 0x4, V118]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ae, 0x4, V118]

================================

Block 0x198
[0x198:0x1ad]
---
Predecessors: [0x182]
Successors: [0x472]
---
0x198 JUMPDEST
0x199 POP
0x19a PUSH1 0x1
0x19c PUSH1 0x1
0x19e PUSH1 0xa0
0x1a0 SHL
0x1a1 SUB
0x1a2 DUP2
0x1a3 CALLDATALOAD
0x1a4 AND
0x1a5 SWAP1
0x1a6 PUSH1 0x20
0x1a8 ADD
0x1a9 CALLDATALOAD
0x1aa PUSH2 0x472
0x1ad JUMP
---
0x198: JUMPDEST 
0x19a: V124 = 0x1
0x19c: V125 = 0x1
0x19e: V126 = 0xa0
0x1a0: V127 = SHL 0xa0 0x1
0x1a1: V128 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1a3: V129 = CALLDATALOAD 0x4
0x1a4: V130 = AND V129 0xffffffffffffffffffffffffffffffffffffffff
0x1a6: V131 = 0x20
0x1a8: V132 = ADD 0x20 0x4
0x1a9: V133 = CALLDATALOAD 0x24
0x1aa: V134 = 0x472
0x1ad: JUMP 0x472
---
Entry stack: [V13, 0x1ae, 0x4, V118]
Stack pops: 2
Stack additions: [V130, V133]
Exit stack: [V13, 0x1ae, V130, V133]

================================

Block 0x1ae
[0x1ae:0x1c1]
---
Predecessors: [0x486, 0x518, 0x779, 0xa21]
Successors: []
---
0x1ae JUMPDEST
0x1af PUSH1 0x40
0x1b1 DUP1
0x1b2 MLOAD
0x1b3 SWAP2
0x1b4 ISZERO
0x1b5 ISZERO
0x1b6 DUP3
0x1b7 MSTORE
0x1b8 MLOAD
0x1b9 SWAP1
0x1ba DUP2
0x1bb SWAP1
0x1bc SUB
0x1bd PUSH1 0x20
0x1bf ADD
0x1c0 SWAP1
0x1c1 RETURN
---
0x1ae: JUMPDEST 
0x1af: V135 = 0x40
0x1b2: V136 = M[0x40]
0x1b4: V137 = ISZERO S0
0x1b5: V138 = ISZERO V137
0x1b7: M[V136] = V138
0x1b8: V139 = M[0x40]
0x1bc: V140 = SUB V136 V139
0x1bd: V141 = 0x20
0x1bf: V142 = ADD 0x20 V140
0x1c1: RETURN V139 V142
---
Entry stack: [V13, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13, S1]

================================

Block 0x1c2
[0x1c2:0x1c9]
---
Predecessors: [0xea]
Successors: [0x48f]
---
0x1c2 JUMPDEST
0x1c3 PUSH2 0x1ca
0x1c6 PUSH2 0x48f
0x1c9 JUMP
---
0x1c2: JUMPDEST 
0x1c3: V143 = 0x1ca
0x1c6: V144 = 0x48f
0x1c9: JUMP 0x48f
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1ca]
Exit stack: [V13, 0x1ca]

================================

Block 0x1ca
[0x1ca:0x1db]
---
Predecessors: [0x48f, 0x650, 0x74e]
Successors: []
---
0x1ca JUMPDEST
0x1cb PUSH1 0x40
0x1cd DUP1
0x1ce MLOAD
0x1cf SWAP2
0x1d0 DUP3
0x1d1 MSTORE
0x1d2 MLOAD
0x1d3 SWAP1
0x1d4 DUP2
0x1d5 SWAP1
0x1d6 SUB
0x1d7 PUSH1 0x20
0x1d9 ADD
0x1da SWAP1
0x1db RETURN
---
0x1ca: JUMPDEST 
0x1cb: V145 = 0x40
0x1ce: V146 = M[0x40]
0x1d1: M[V146] = S0
0x1d2: V147 = M[0x40]
0x1d6: V148 = SUB V146 V147
0x1d7: V149 = 0x20
0x1d9: V150 = ADD 0x20 V148
0x1db: RETURN V147 V150
---
Entry stack: [V13, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x1dc
[0x1dc:0x1ed]
---
Predecessors: [0xf5]
Successors: [0x1ee, 0x1f2]
---
0x1dc JUMPDEST
0x1dd PUSH2 0x1ae
0x1e0 PUSH1 0x4
0x1e2 DUP1
0x1e3 CALLDATASIZE
0x1e4 SUB
0x1e5 PUSH1 0x60
0x1e7 DUP2
0x1e8 LT
0x1e9 ISZERO
0x1ea PUSH2 0x1f2
0x1ed JUMPI
---
0x1dc: JUMPDEST 
0x1dd: V151 = 0x1ae
0x1e0: V152 = 0x4
0x1e3: V153 = CALLDATASIZE
0x1e4: V154 = SUB V153 0x4
0x1e5: V155 = 0x60
0x1e8: V156 = LT V154 0x60
0x1e9: V157 = ISZERO V156
0x1ea: V158 = 0x1f2
0x1ed: JUMPI 0x1f2 V157
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1ae, 0x4, V154]
Exit stack: [V13, 0x1ae, 0x4, V154]

================================

Block 0x1ee
[0x1ee:0x1f1]
---
Predecessors: [0x1dc]
Successors: []
---
0x1ee PUSH1 0x0
0x1f0 DUP1
0x1f1 REVERT
---
0x1ee: V159 = 0x0
0x1f1: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ae, 0x4, V154]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ae, 0x4, V154]

================================

Block 0x1f2
[0x1f2:0x211]
---
Predecessors: [0x1dc]
Successors: [0x495]
---
0x1f2 JUMPDEST
0x1f3 POP
0x1f4 PUSH1 0x1
0x1f6 PUSH1 0x1
0x1f8 PUSH1 0xa0
0x1fa SHL
0x1fb SUB
0x1fc DUP2
0x1fd CALLDATALOAD
0x1fe DUP2
0x1ff AND
0x200 SWAP2
0x201 PUSH1 0x20
0x203 DUP2
0x204 ADD
0x205 CALLDATALOAD
0x206 SWAP1
0x207 SWAP2
0x208 AND
0x209 SWAP1
0x20a PUSH1 0x40
0x20c ADD
0x20d CALLDATALOAD
0x20e PUSH2 0x495
0x211 JUMP
---
0x1f2: JUMPDEST 
0x1f4: V160 = 0x1
0x1f6: V161 = 0x1
0x1f8: V162 = 0xa0
0x1fa: V163 = SHL 0xa0 0x1
0x1fb: V164 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1fd: V165 = CALLDATALOAD 0x4
0x1ff: V166 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x201: V167 = 0x20
0x204: V168 = ADD 0x4 0x20
0x205: V169 = CALLDATALOAD 0x24
0x208: V170 = AND 0xffffffffffffffffffffffffffffffffffffffff V169
0x20a: V171 = 0x40
0x20c: V172 = ADD 0x40 0x4
0x20d: V173 = CALLDATALOAD 0x44
0x20e: V174 = 0x495
0x211: JUMP 0x495
---
Entry stack: [V13, 0x1ae, 0x4, V154]
Stack pops: 2
Stack additions: [V166, V170, V173]
Exit stack: [V13, 0x1ae, V166, V170, V173]

================================

Block 0x212
[0x212:0x223]
---
Predecessors: [0xa3]
Successors: [0x224, 0x228]
---
0x212 JUMPDEST
0x213 PUSH2 0x23e
0x216 PUSH1 0x4
0x218 DUP1
0x219 CALLDATASIZE
0x21a SUB
0x21b PUSH1 0x40
0x21d DUP2
0x21e LT
0x21f ISZERO
0x220 PUSH2 0x228
0x223 JUMPI
---
0x212: JUMPDEST 
0x213: V175 = 0x23e
0x216: V176 = 0x4
0x219: V177 = CALLDATASIZE
0x21a: V178 = SUB V177 0x4
0x21b: V179 = 0x40
0x21e: V180 = LT V178 0x40
0x21f: V181 = ISZERO V180
0x220: V182 = 0x228
0x223: JUMPI 0x228 V181
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x23e, 0x4, V178]
Exit stack: [V13, 0x23e, 0x4, V178]

================================

Block 0x224
[0x224:0x227]
---
Predecessors: [0x212]
Successors: []
---
0x224 PUSH1 0x0
0x226 DUP1
0x227 REVERT
---
0x224: V183 = 0x0
0x227: REVERT 0x0 0x0
---
Entry stack: [V13, 0x23e, 0x4, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23e, 0x4, V178]

================================

Block 0x228
[0x228:0x23d]
---
Predecessors: [0x212]
Successors: [0x522]
---
0x228 JUMPDEST
0x229 POP
0x22a PUSH1 0x1
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 SHL
0x231 SUB
0x232 DUP2
0x233 CALLDATALOAD
0x234 AND
0x235 SWAP1
0x236 PUSH1 0x20
0x238 ADD
0x239 CALLDATALOAD
0x23a PUSH2 0x522
0x23d JUMP
---
0x228: JUMPDEST 
0x22a: V184 = 0x1
0x22c: V185 = 0x1
0x22e: V186 = 0xa0
0x230: V187 = SHL 0xa0 0x1
0x231: V188 = SUB 0x10000000000000000000000000000000000000000 0x1
0x233: V189 = CALLDATALOAD 0x4
0x234: V190 = AND V189 0xffffffffffffffffffffffffffffffffffffffff
0x236: V191 = 0x20
0x238: V192 = ADD 0x20 0x4
0x239: V193 = CALLDATALOAD 0x24
0x23a: V194 = 0x522
0x23d: JUMP 0x522
---
Entry stack: [V13, 0x23e, 0x4, V178]
Stack pops: 2
Stack additions: [V190, V193]
Exit stack: [V13, 0x23e, V190, V193]

================================

Block 0x23e
[0x23e:0x23f]
---
Predecessors: [0x578, 0x62c, 0x7e3]
Successors: []
---
0x23e JUMPDEST
0x23f STOP
---
0x23e: JUMPDEST 
0x23f: STOP 
---
Entry stack: [V13]
Stack pops: 0
Stack additions: []
Exit stack: [V13]

================================

Block 0x240
[0x240:0x247]
---
Predecessors: [0xae]
Successors: [0x57c]
---
0x240 JUMPDEST
0x241 PUSH2 0x248
0x244 PUSH2 0x57c
0x247 JUMP
---
0x240: JUMPDEST 
0x241: V195 = 0x248
0x244: V196 = 0x57c
0x247: JUMP 0x57c
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x248]
Exit stack: [V13, 0x248]

================================

Block 0x248
[0x248:0x25d]
---
Predecessors: [0x57c]
Successors: []
---
0x248 JUMPDEST
0x249 PUSH1 0x40
0x24b DUP1
0x24c MLOAD
0x24d PUSH1 0xff
0x24f SWAP1
0x250 SWAP3
0x251 AND
0x252 DUP3
0x253 MSTORE
0x254 MLOAD
0x255 SWAP1
0x256 DUP2
0x257 SWAP1
0x258 SUB
0x259 PUSH1 0x20
0x25b ADD
0x25c SWAP1
0x25d RETURN
---
0x248: JUMPDEST 
0x249: V197 = 0x40
0x24c: V198 = M[0x40]
0x24d: V199 = 0xff
0x251: V200 = AND V519 0xff
0x253: M[V198] = V200
0x254: V201 = M[0x40]
0x258: V202 = SUB V198 V201
0x259: V203 = 0x20
0x25b: V204 = ADD 0x20 V202
0x25d: RETURN V201 V204
---
Entry stack: [V13, V519]
Stack pops: 1
Stack additions: []
Exit stack: [V13]

================================

Block 0x25e
[0x25e:0x26f]
---
Predecessors: [0xb9]
Successors: [0x270, 0x274]
---
0x25e JUMPDEST
0x25f PUSH2 0x1ae
0x262 PUSH1 0x4
0x264 DUP1
0x265 CALLDATASIZE
0x266 SUB
0x267 PUSH1 0x40
0x269 DUP2
0x26a LT
0x26b ISZERO
0x26c PUSH2 0x274
0x26f JUMPI
---
0x25e: JUMPDEST 
0x25f: V205 = 0x1ae
0x262: V206 = 0x4
0x265: V207 = CALLDATASIZE
0x266: V208 = SUB V207 0x4
0x267: V209 = 0x40
0x26a: V210 = LT V208 0x40
0x26b: V211 = ISZERO V210
0x26c: V212 = 0x274
0x26f: JUMPI 0x274 V211
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1ae, 0x4, V208]
Exit stack: [V13, 0x1ae, 0x4, V208]

================================

Block 0x270
[0x270:0x273]
---
Predecessors: [0x25e]
Successors: []
---
0x270 PUSH1 0x0
0x272 DUP1
0x273 REVERT
---
0x270: V213 = 0x0
0x273: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ae, 0x4, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ae, 0x4, V208]

================================

Block 0x274
[0x274:0x289]
---
Predecessors: [0x25e]
Successors: [0x585]
---
0x274 JUMPDEST
0x275 POP
0x276 PUSH1 0x1
0x278 PUSH1 0x1
0x27a PUSH1 0xa0
0x27c SHL
0x27d SUB
0x27e DUP2
0x27f CALLDATALOAD
0x280 AND
0x281 SWAP1
0x282 PUSH1 0x20
0x284 ADD
0x285 CALLDATALOAD
0x286 PUSH2 0x585
0x289 JUMP
---
0x274: JUMPDEST 
0x276: V214 = 0x1
0x278: V215 = 0x1
0x27a: V216 = 0xa0
0x27c: V217 = SHL 0xa0 0x1
0x27d: V218 = SUB 0x10000000000000000000000000000000000000000 0x1
0x27f: V219 = CALLDATALOAD 0x4
0x280: V220 = AND V219 0xffffffffffffffffffffffffffffffffffffffff
0x282: V221 = 0x20
0x284: V222 = ADD 0x20 0x4
0x285: V223 = CALLDATALOAD 0x24
0x286: V224 = 0x585
0x289: JUMP 0x585
---
Entry stack: [V13, 0x1ae, 0x4, V208]
Stack pops: 2
Stack additions: [V220, V223]
Exit stack: [V13, 0x1ae, V220, V223]

================================

Block 0x28a
[0x28a:0x29b]
---
Predecessors: [0xc4]
Successors: [0x29c, 0x2a0]
---
0x28a JUMPDEST
0x28b PUSH2 0x23e
0x28e PUSH1 0x4
0x290 DUP1
0x291 CALLDATASIZE
0x292 SUB
0x293 PUSH1 0x20
0x295 DUP2
0x296 LT
0x297 ISZERO
0x298 PUSH2 0x2a0
0x29b JUMPI
---
0x28a: JUMPDEST 
0x28b: V225 = 0x23e
0x28e: V226 = 0x4
0x291: V227 = CALLDATASIZE
0x292: V228 = SUB V227 0x4
0x293: V229 = 0x20
0x296: V230 = LT V228 0x20
0x297: V231 = ISZERO V230
0x298: V232 = 0x2a0
0x29b: JUMPI 0x2a0 V231
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x23e, 0x4, V228]
Exit stack: [V13, 0x23e, 0x4, V228]

================================

Block 0x29c
[0x29c:0x29f]
---
Predecessors: [0x28a]
Successors: []
---
0x29c PUSH1 0x0
0x29e DUP1
0x29f REVERT
---
0x29c: V233 = 0x0
0x29f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x23e, 0x4, V228]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23e, 0x4, V228]

================================

Block 0x2a0
[0x2a0:0x2af]
---
Predecessors: [0x28a]
Successors: [0x5d9]
---
0x2a0 JUMPDEST
0x2a1 POP
0x2a2 CALLDATALOAD
0x2a3 PUSH1 0x1
0x2a5 PUSH1 0x1
0x2a7 PUSH1 0xa0
0x2a9 SHL
0x2aa SUB
0x2ab AND
0x2ac PUSH2 0x5d9
0x2af JUMP
---
0x2a0: JUMPDEST 
0x2a2: V234 = CALLDATALOAD 0x4
0x2a3: V235 = 0x1
0x2a5: V236 = 0x1
0x2a7: V237 = 0xa0
0x2a9: V238 = SHL 0xa0 0x1
0x2aa: V239 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ab: V240 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x2ac: V241 = 0x5d9
0x2af: JUMP 0x5d9
---
Entry stack: [V13, 0x23e, 0x4, V228]
Stack pops: 2
Stack additions: [V240]
Exit stack: [V13, 0x23e, V240]

================================

Block 0x2b0
[0x2b0:0x2c1]
---
Predecessors: [0x66]
Successors: [0x2c2, 0x2c6]
---
0x2b0 JUMPDEST
0x2b1 PUSH2 0x1ca
0x2b4 PUSH1 0x4
0x2b6 DUP1
0x2b7 CALLDATASIZE
0x2b8 SUB
0x2b9 PUSH1 0x20
0x2bb DUP2
0x2bc LT
0x2bd ISZERO
0x2be PUSH2 0x2c6
0x2c1 JUMPI
---
0x2b0: JUMPDEST 
0x2b1: V242 = 0x1ca
0x2b4: V243 = 0x4
0x2b7: V244 = CALLDATASIZE
0x2b8: V245 = SUB V244 0x4
0x2b9: V246 = 0x20
0x2bc: V247 = LT V245 0x20
0x2bd: V248 = ISZERO V247
0x2be: V249 = 0x2c6
0x2c1: JUMPI 0x2c6 V248
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1ca, 0x4, V245]
Exit stack: [V13, 0x1ca, 0x4, V245]

================================

Block 0x2c2
[0x2c2:0x2c5]
---
Predecessors: [0x2b0]
Successors: []
---
0x2c2 PUSH1 0x0
0x2c4 DUP1
0x2c5 REVERT
---
0x2c2: V250 = 0x0
0x2c5: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ca, 0x4, V245]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ca, 0x4, V245]

================================

Block 0x2c6
[0x2c6:0x2d5]
---
Predecessors: [0x2b0]
Successors: [0x650]
---
0x2c6 JUMPDEST
0x2c7 POP
0x2c8 CALLDATALOAD
0x2c9 PUSH1 0x1
0x2cb PUSH1 0x1
0x2cd PUSH1 0xa0
0x2cf SHL
0x2d0 SUB
0x2d1 AND
0x2d2 PUSH2 0x650
0x2d5 JUMP
---
0x2c6: JUMPDEST 
0x2c8: V251 = CALLDATALOAD 0x4
0x2c9: V252 = 0x1
0x2cb: V253 = 0x1
0x2cd: V254 = 0xa0
0x2cf: V255 = SHL 0xa0 0x1
0x2d0: V256 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2d1: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V251
0x2d2: V258 = 0x650
0x2d5: JUMP 0x650
---
Entry stack: [V13, 0x1ca, 0x4, V245]
Stack pops: 2
Stack additions: [V257]
Exit stack: [V13, 0x1ca, V257]

================================

Block 0x2d6
[0x2d6:0x2dd]
---
Predecessors: [0x72]
Successors: [0x66b]
---
0x2d6 JUMPDEST
0x2d7 PUSH2 0x10d
0x2da PUSH2 0x66b
0x2dd JUMP
---
0x2d6: JUMPDEST 
0x2d7: V259 = 0x10d
0x2da: V260 = 0x66b
0x2dd: JUMP 0x66b
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x10d]
Exit stack: [V13, 0x10d]

================================

Block 0x2de
[0x2de:0x2ef]
---
Predecessors: [0x7d]
Successors: [0x2f0, 0x2f4]
---
0x2de JUMPDEST
0x2df PUSH2 0x1ae
0x2e2 PUSH1 0x4
0x2e4 DUP1
0x2e5 CALLDATASIZE
0x2e6 SUB
0x2e7 PUSH1 0x40
0x2e9 DUP2
0x2ea LT
0x2eb ISZERO
0x2ec PUSH2 0x2f4
0x2ef JUMPI
---
0x2de: JUMPDEST 
0x2df: V261 = 0x1ae
0x2e2: V262 = 0x4
0x2e5: V263 = CALLDATASIZE
0x2e6: V264 = SUB V263 0x4
0x2e7: V265 = 0x40
0x2ea: V266 = LT V264 0x40
0x2eb: V267 = ISZERO V266
0x2ec: V268 = 0x2f4
0x2ef: JUMPI 0x2f4 V267
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1ae, 0x4, V264]
Exit stack: [V13, 0x1ae, 0x4, V264]

================================

Block 0x2f0
[0x2f0:0x2f3]
---
Predecessors: [0x2de]
Successors: []
---
0x2f0 PUSH1 0x0
0x2f2 DUP1
0x2f3 REVERT
---
0x2f0: V269 = 0x0
0x2f3: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ae, 0x4, V264]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ae, 0x4, V264]

================================

Block 0x2f4
[0x2f4:0x309]
---
Predecessors: [0x2de]
Successors: [0x6cc]
---
0x2f4 JUMPDEST
0x2f5 POP
0x2f6 PUSH1 0x1
0x2f8 PUSH1 0x1
0x2fa PUSH1 0xa0
0x2fc SHL
0x2fd SUB
0x2fe DUP2
0x2ff CALLDATALOAD
0x300 AND
0x301 SWAP1
0x302 PUSH1 0x20
0x304 ADD
0x305 CALLDATALOAD
0x306 PUSH2 0x6cc
0x309 JUMP
---
0x2f4: JUMPDEST 
0x2f6: V270 = 0x1
0x2f8: V271 = 0x1
0x2fa: V272 = 0xa0
0x2fc: V273 = SHL 0xa0 0x1
0x2fd: V274 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2ff: V275 = CALLDATALOAD 0x4
0x300: V276 = AND V275 0xffffffffffffffffffffffffffffffffffffffff
0x302: V277 = 0x20
0x304: V278 = ADD 0x20 0x4
0x305: V279 = CALLDATALOAD 0x24
0x306: V280 = 0x6cc
0x309: JUMP 0x6cc
---
Entry stack: [V13, 0x1ae, 0x4, V264]
Stack pops: 2
Stack additions: [V276, V279]
Exit stack: [V13, 0x1ae, V276, V279]

================================

Block 0x30a
[0x30a:0x31b]
---
Predecessors: [0x88]
Successors: [0x31c, 0x320]
---
0x30a JUMPDEST
0x30b PUSH2 0x1ae
0x30e PUSH1 0x4
0x310 DUP1
0x311 CALLDATASIZE
0x312 SUB
0x313 PUSH1 0x40
0x315 DUP2
0x316 LT
0x317 ISZERO
0x318 PUSH2 0x320
0x31b JUMPI
---
0x30a: JUMPDEST 
0x30b: V281 = 0x1ae
0x30e: V282 = 0x4
0x311: V283 = CALLDATASIZE
0x312: V284 = SUB V283 0x4
0x313: V285 = 0x40
0x316: V286 = LT V284 0x40
0x317: V287 = ISZERO V286
0x318: V288 = 0x320
0x31b: JUMPI 0x320 V287
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1ae, 0x4, V284]
Exit stack: [V13, 0x1ae, 0x4, V284]

================================

Block 0x31c
[0x31c:0x31f]
---
Predecessors: [0x30a]
Successors: []
---
0x31c PUSH1 0x0
0x31e DUP1
0x31f REVERT
---
0x31c: V289 = 0x0
0x31f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ae, 0x4, V284]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ae, 0x4, V284]

================================

Block 0x320
[0x320:0x335]
---
Predecessors: [0x30a]
Successors: [0x73a]
---
0x320 JUMPDEST
0x321 POP
0x322 PUSH1 0x1
0x324 PUSH1 0x1
0x326 PUSH1 0xa0
0x328 SHL
0x329 SUB
0x32a DUP2
0x32b CALLDATALOAD
0x32c AND
0x32d SWAP1
0x32e PUSH1 0x20
0x330 ADD
0x331 CALLDATALOAD
0x332 PUSH2 0x73a
0x335 JUMP
---
0x320: JUMPDEST 
0x322: V290 = 0x1
0x324: V291 = 0x1
0x326: V292 = 0xa0
0x328: V293 = SHL 0xa0 0x1
0x329: V294 = SUB 0x10000000000000000000000000000000000000000 0x1
0x32b: V295 = CALLDATALOAD 0x4
0x32c: V296 = AND V295 0xffffffffffffffffffffffffffffffffffffffff
0x32e: V297 = 0x20
0x330: V298 = ADD 0x20 0x4
0x331: V299 = CALLDATALOAD 0x24
0x332: V300 = 0x73a
0x335: JUMP 0x73a
---
Entry stack: [V13, 0x1ae, 0x4, V284]
Stack pops: 2
Stack additions: [V296, V299]
Exit stack: [V13, 0x1ae, V296, V299]

================================

Block 0x336
[0x336:0x347]
---
Predecessors: [0x36]
Successors: [0x348, 0x34c]
---
0x336 JUMPDEST
0x337 PUSH2 0x1ca
0x33a PUSH1 0x4
0x33c DUP1
0x33d CALLDATASIZE
0x33e SUB
0x33f PUSH1 0x40
0x341 DUP2
0x342 LT
0x343 ISZERO
0x344 PUSH2 0x34c
0x347 JUMPI
---
0x336: JUMPDEST 
0x337: V301 = 0x1ca
0x33a: V302 = 0x4
0x33d: V303 = CALLDATASIZE
0x33e: V304 = SUB V303 0x4
0x33f: V305 = 0x40
0x342: V306 = LT V304 0x40
0x343: V307 = ISZERO V306
0x344: V308 = 0x34c
0x347: JUMPI 0x34c V307
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1ca, 0x4, V304]
Exit stack: [V13, 0x1ca, 0x4, V304]

================================

Block 0x348
[0x348:0x34b]
---
Predecessors: [0x336]
Successors: []
---
0x348 PUSH1 0x0
0x34a DUP1
0x34b REVERT
---
0x348: V309 = 0x0
0x34b: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ca, 0x4, V304]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ca, 0x4, V304]

================================

Block 0x34c
[0x34c:0x363]
---
Predecessors: [0x336]
Successors: [0x74e]
---
0x34c JUMPDEST
0x34d POP
0x34e PUSH1 0x1
0x350 PUSH1 0x1
0x352 PUSH1 0xa0
0x354 SHL
0x355 SUB
0x356 DUP2
0x357 CALLDATALOAD
0x358 DUP2
0x359 AND
0x35a SWAP2
0x35b PUSH1 0x20
0x35d ADD
0x35e CALLDATALOAD
0x35f AND
0x360 PUSH2 0x74e
0x363 JUMP
---
0x34c: JUMPDEST 
0x34e: V310 = 0x1
0x350: V311 = 0x1
0x352: V312 = 0xa0
0x354: V313 = SHL 0xa0 0x1
0x355: V314 = SUB 0x10000000000000000000000000000000000000000 0x1
0x357: V315 = CALLDATALOAD 0x4
0x359: V316 = AND 0xffffffffffffffffffffffffffffffffffffffff V315
0x35b: V317 = 0x20
0x35d: V318 = ADD 0x20 0x4
0x35e: V319 = CALLDATALOAD 0x24
0x35f: V320 = AND V319 0xffffffffffffffffffffffffffffffffffffffff
0x360: V321 = 0x74e
0x363: JUMP 0x74e
---
Entry stack: [V13, 0x1ca, 0x4, V304]
Stack pops: 2
Stack additions: [V316, V320]
Exit stack: [V13, 0x1ca, V316, V320]

================================

Block 0x364
[0x364:0x375]
---
Predecessors: [0x41]
Successors: [0x376, 0x37a]
---
0x364 JUMPDEST
0x365 PUSH2 0x1ae
0x368 PUSH1 0x4
0x36a DUP1
0x36b CALLDATASIZE
0x36c SUB
0x36d PUSH1 0x20
0x36f DUP2
0x370 LT
0x371 ISZERO
0x372 PUSH2 0x37a
0x375 JUMPI
---
0x364: JUMPDEST 
0x365: V322 = 0x1ae
0x368: V323 = 0x4
0x36b: V324 = CALLDATASIZE
0x36c: V325 = SUB V324 0x4
0x36d: V326 = 0x20
0x370: V327 = LT V325 0x20
0x371: V328 = ISZERO V327
0x372: V329 = 0x37a
0x375: JUMPI 0x37a V328
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x1ae, 0x4, V325]
Exit stack: [V13, 0x1ae, 0x4, V325]

================================

Block 0x376
[0x376:0x379]
---
Predecessors: [0x364]
Successors: []
---
0x376 PUSH1 0x0
0x378 DUP1
0x379 REVERT
---
0x376: V330 = 0x0
0x379: REVERT 0x0 0x0
---
Entry stack: [V13, 0x1ae, 0x4, V325]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x1ae, 0x4, V325]

================================

Block 0x37a
[0x37a:0x389]
---
Predecessors: [0x364]
Successors: [0x779]
---
0x37a JUMPDEST
0x37b POP
0x37c CALLDATALOAD
0x37d PUSH1 0x1
0x37f PUSH1 0x1
0x381 PUSH1 0xa0
0x383 SHL
0x384 SUB
0x385 AND
0x386 PUSH2 0x779
0x389 JUMP
---
0x37a: JUMPDEST 
0x37c: V331 = CALLDATALOAD 0x4
0x37d: V332 = 0x1
0x37f: V333 = 0x1
0x381: V334 = 0xa0
0x383: V335 = SHL 0xa0 0x1
0x384: V336 = SUB 0x10000000000000000000000000000000000000000 0x1
0x385: V337 = AND 0xffffffffffffffffffffffffffffffffffffffff V331
0x386: V338 = 0x779
0x389: JUMP 0x779
---
Entry stack: [V13, 0x1ae, 0x4, V325]
Stack pops: 2
Stack additions: [V337]
Exit stack: [V13, 0x1ae, V337]

================================

Block 0x38a
[0x38a:0x39b]
---
Predecessors: [0x4c]
Successors: [0x39c, 0x3a0]
---
0x38a JUMPDEST
0x38b PUSH2 0x23e
0x38e PUSH1 0x4
0x390 DUP1
0x391 CALLDATASIZE
0x392 SUB
0x393 PUSH1 0x20
0x395 DUP2
0x396 LT
0x397 ISZERO
0x398 PUSH2 0x3a0
0x39b JUMPI
---
0x38a: JUMPDEST 
0x38b: V339 = 0x23e
0x38e: V340 = 0x4
0x391: V341 = CALLDATASIZE
0x392: V342 = SUB V341 0x4
0x393: V343 = 0x20
0x396: V344 = LT V342 0x20
0x397: V345 = ISZERO V344
0x398: V346 = 0x3a0
0x39b: JUMPI 0x3a0 V345
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x23e, 0x4, V342]
Exit stack: [V13, 0x23e, 0x4, V342]

================================

Block 0x39c
[0x39c:0x39f]
---
Predecessors: [0x38a]
Successors: []
---
0x39c PUSH1 0x0
0x39e DUP1
0x39f REVERT
---
0x39c: V347 = 0x0
0x39f: REVERT 0x0 0x0
---
Entry stack: [V13, 0x23e, 0x4, V342]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23e, 0x4, V342]

================================

Block 0x3a0
[0x3a0:0x3af]
---
Predecessors: [0x38a]
Successors: [0x78e]
---
0x3a0 JUMPDEST
0x3a1 POP
0x3a2 CALLDATALOAD
0x3a3 PUSH1 0x1
0x3a5 PUSH1 0x1
0x3a7 PUSH1 0xa0
0x3a9 SHL
0x3aa SUB
0x3ab AND
0x3ac PUSH2 0x78e
0x3af JUMP
---
0x3a0: JUMPDEST 
0x3a2: V348 = CALLDATALOAD 0x4
0x3a3: V349 = 0x1
0x3a5: V350 = 0x1
0x3a7: V351 = 0xa0
0x3a9: V352 = SHL 0xa0 0x1
0x3aa: V353 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3ab: V354 = AND 0xffffffffffffffffffffffffffffffffffffffff V348
0x3ac: V355 = 0x78e
0x3af: JUMP 0x78e
---
Entry stack: [V13, 0x23e, 0x4, V342]
Stack pops: 2
Stack additions: [V354]
Exit stack: [V13, 0x23e, V354]

================================

Block 0x3b0
[0x3b0:0x3c1]
---
Predecessors: [0x57]
Successors: [0x3c2, 0x3c6]
---
0x3b0 JUMPDEST
0x3b1 PUSH2 0x23e
0x3b4 PUSH1 0x4
0x3b6 DUP1
0x3b7 CALLDATASIZE
0x3b8 SUB
0x3b9 PUSH1 0x40
0x3bb DUP2
0x3bc LT
0x3bd ISZERO
0x3be PUSH2 0x3c6
0x3c1 JUMPI
---
0x3b0: JUMPDEST 
0x3b1: V356 = 0x23e
0x3b4: V357 = 0x4
0x3b7: V358 = CALLDATASIZE
0x3b8: V359 = SUB V358 0x4
0x3b9: V360 = 0x40
0x3bc: V361 = LT V359 0x40
0x3bd: V362 = ISZERO V361
0x3be: V363 = 0x3c6
0x3c1: JUMPI 0x3c6 V362
---
Entry stack: [V13]
Stack pops: 0
Stack additions: [0x23e, 0x4, V359]
Exit stack: [V13, 0x23e, 0x4, V359]

================================

Block 0x3c2
[0x3c2:0x3c5]
---
Predecessors: [0x3b0]
Successors: []
---
0x3c2 PUSH1 0x0
0x3c4 DUP1
0x3c5 REVERT
---
0x3c2: V364 = 0x0
0x3c5: REVERT 0x0 0x0
---
Entry stack: [V13, 0x23e, 0x4, V359]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23e, 0x4, V359]

================================

Block 0x3c6
[0x3c6:0x3db]
---
Predecessors: [0x3b0]
Successors: [0x7e6]
---
0x3c6 JUMPDEST
0x3c7 POP
0x3c8 PUSH1 0x1
0x3ca PUSH1 0x1
0x3cc PUSH1 0xa0
0x3ce SHL
0x3cf SUB
0x3d0 DUP2
0x3d1 CALLDATALOAD
0x3d2 AND
0x3d3 SWAP1
0x3d4 PUSH1 0x20
0x3d6 ADD
0x3d7 CALLDATALOAD
0x3d8 PUSH2 0x7e6
0x3db JUMP
---
0x3c6: JUMPDEST 
0x3c8: V365 = 0x1
0x3ca: V366 = 0x1
0x3cc: V367 = 0xa0
0x3ce: V368 = SHL 0xa0 0x1
0x3cf: V369 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3d1: V370 = CALLDATALOAD 0x4
0x3d2: V371 = AND V370 0xffffffffffffffffffffffffffffffffffffffff
0x3d4: V372 = 0x20
0x3d6: V373 = ADD 0x20 0x4
0x3d7: V374 = CALLDATALOAD 0x24
0x3d8: V375 = 0x7e6
0x3db: JUMP 0x7e6
---
Entry stack: [V13, 0x23e, 0x4, V359]
Stack pops: 2
Stack additions: [V371, V374]
Exit stack: [V13, 0x23e, V371, V374]

================================

Block 0x3dc
[0x3dc:0x421]
---
Predecessors: [0x105]
Successors: [0x422, 0x468]
---
0x3dc JUMPDEST
0x3dd PUSH1 0x3
0x3df DUP1
0x3e0 SLOAD
0x3e1 PUSH1 0x40
0x3e3 DUP1
0x3e4 MLOAD
0x3e5 PUSH1 0x20
0x3e7 PUSH1 0x1f
0x3e9 PUSH1 0x2
0x3eb PUSH1 0x0
0x3ed NOT
0x3ee PUSH2 0x100
0x3f1 PUSH1 0x1
0x3f3 DUP9
0x3f4 AND
0x3f5 ISZERO
0x3f6 MUL
0x3f7 ADD
0x3f8 SWAP1
0x3f9 SWAP6
0x3fa AND
0x3fb SWAP5
0x3fc SWAP1
0x3fd SWAP5
0x3fe DIV
0x3ff SWAP4
0x400 DUP5
0x401 ADD
0x402 DUP2
0x403 SWAP1
0x404 DIV
0x405 DUP2
0x406 MUL
0x407 DUP3
0x408 ADD
0x409 DUP2
0x40a ADD
0x40b SWAP1
0x40c SWAP3
0x40d MSTORE
0x40e DUP3
0x40f DUP2
0x410 MSTORE
0x411 PUSH1 0x60
0x413 SWAP4
0x414 SWAP1
0x415 SWAP3
0x416 SWAP1
0x417 SWAP2
0x418 DUP4
0x419 ADD
0x41a DUP3
0x41b DUP3
0x41c DUP1
0x41d ISZERO
0x41e PUSH2 0x468
0x421 JUMPI
---
0x3dc: JUMPDEST 
0x3dd: V376 = 0x3
0x3e0: V377 = S[0x3]
0x3e1: V378 = 0x40
0x3e4: V379 = M[0x40]
0x3e5: V380 = 0x20
0x3e7: V381 = 0x1f
0x3e9: V382 = 0x2
0x3eb: V383 = 0x0
0x3ed: V384 = NOT 0x0
0x3ee: V385 = 0x100
0x3f1: V386 = 0x1
0x3f4: V387 = AND V377 0x1
0x3f5: V388 = ISZERO V387
0x3f6: V389 = MUL V388 0x100
0x3f7: V390 = ADD V389 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x3fa: V391 = AND V377 V390
0x3fe: V392 = DIV V391 0x2
0x401: V393 = ADD V392 0x1f
0x404: V394 = DIV V393 0x20
0x406: V395 = MUL 0x20 V394
0x408: V396 = ADD V379 V395
0x40a: V397 = ADD 0x20 V396
0x40d: M[0x40] = V397
0x410: M[V379] = V392
0x411: V398 = 0x60
0x419: V399 = ADD V379 0x20
0x41d: V400 = ISZERO V392
0x41e: V401 = 0x468
0x421: JUMPI 0x468 V400
---
Entry stack: [V13, 0x10d]
Stack pops: 0
Stack additions: [0x60, V379, 0x3, V392, V399, 0x3, V392]
Exit stack: [V13, 0x10d, 0x60, V379, 0x3, V392, V399, 0x3, V392]

================================

Block 0x422
[0x422:0x429]
---
Predecessors: [0x3dc]
Successors: [0x42a, 0x43d]
---
0x422 DUP1
0x423 PUSH1 0x1f
0x425 LT
0x426 PUSH2 0x43d
0x429 JUMPI
---
0x423: V402 = 0x1f
0x425: V403 = LT 0x1f V392
0x426: V404 = 0x43d
0x429: JUMPI 0x43d V403
---
Entry stack: [V13, 0x10d, 0x60, V379, 0x3, V392, V399, 0x3, V392]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x10d, 0x60, V379, 0x3, V392, V399, 0x3, V392]

================================

Block 0x42a
[0x42a:0x43c]
---
Predecessors: [0x422]
Successors: [0x468]
---
0x42a PUSH2 0x100
0x42d DUP1
0x42e DUP4
0x42f SLOAD
0x430 DIV
0x431 MUL
0x432 DUP4
0x433 MSTORE
0x434 SWAP2
0x435 PUSH1 0x20
0x437 ADD
0x438 SWAP2
0x439 PUSH2 0x468
0x43c JUMP
---
0x42a: V405 = 0x100
0x42f: V406 = S[0x3]
0x430: V407 = DIV V406 0x100
0x431: V408 = MUL V407 0x100
0x433: M[V399] = V408
0x435: V409 = 0x20
0x437: V410 = ADD 0x20 V399
0x439: V411 = 0x468
0x43c: JUMP 0x468
---
Entry stack: [V13, 0x10d, 0x60, V379, 0x3, V392, V399, 0x3, V392]
Stack pops: 3
Stack additions: [V410, S1, S0]
Exit stack: [V13, 0x10d, 0x60, V379, 0x3, V392, V410, 0x3, V392]

================================

Block 0x43d
[0x43d:0x44a]
---
Predecessors: [0x422, 0x6b1]
Successors: [0x44b]
---
0x43d JUMPDEST
0x43e DUP3
0x43f ADD
0x440 SWAP2
0x441 SWAP1
0x442 PUSH1 0x0
0x444 MSTORE
0x445 PUSH1 0x20
0x447 PUSH1 0x0
0x449 SHA3
0x44a SWAP1
---
0x43d: JUMPDEST 
0x43f: V412 = ADD S2 S0
0x442: V413 = 0x0
0x444: M[0x0] = {0x3, 0x4}
0x445: V414 = 0x20
0x447: V415 = 0x0
0x449: V416 = SHA3 0x0 0x20
---
Entry stack: [V13, 0x10d, 0x60, S5, {0x3, 0x4}, S3, S2, {0x3, 0x4}, S0]
Stack pops: 3
Stack additions: [V412, V416, S2]
Exit stack: [V13, 0x10d, 0x60, S5, {0x3, 0x4}, S3, V412, V416, S2]

================================

Block 0x44b
[0x44b:0x45e]
---
Predecessors: [0x43d, 0x44b]
Successors: [0x44b, 0x45f]
---
0x44b JUMPDEST
0x44c DUP2
0x44d SLOAD
0x44e DUP2
0x44f MSTORE
0x450 SWAP1
0x451 PUSH1 0x1
0x453 ADD
0x454 SWAP1
0x455 PUSH1 0x20
0x457 ADD
0x458 DUP1
0x459 DUP4
0x45a GT
0x45b PUSH2 0x44b
0x45e JUMPI
---
0x44b: JUMPDEST 
0x44d: V417 = S[S1]
0x44f: M[S0] = V417
0x451: V418 = 0x1
0x453: V419 = ADD 0x1 S1
0x455: V420 = 0x20
0x457: V421 = ADD 0x20 S0
0x45a: V422 = GT V412 V421
0x45b: V423 = 0x44b
0x45e: JUMPI 0x44b V422
---
Entry stack: [V13, 0x10d, 0x60, S5, {0x3, 0x4}, S3, V412, S1, S0]
Stack pops: 3
Stack additions: [S2, V419, V421]
Exit stack: [V13, 0x10d, 0x60, S5, {0x3, 0x4}, S3, V412, V419, V421]

================================

Block 0x45f
[0x45f:0x467]
---
Predecessors: [0x44b]
Successors: [0x468]
---
0x45f DUP3
0x460 SWAP1
0x461 SUB
0x462 PUSH1 0x1f
0x464 AND
0x465 DUP3
0x466 ADD
0x467 SWAP2
---
0x461: V424 = SUB V421 V412
0x462: V425 = 0x1f
0x464: V426 = AND 0x1f V424
0x466: V427 = ADD V412 V426
---
Entry stack: [V13, 0x10d, 0x60, S5, {0x3, 0x4}, S3, V412, V419, V421]
Stack pops: 3
Stack additions: [V427, S1, S2]
Exit stack: [V13, 0x10d, 0x60, S5, {0x3, 0x4}, S3, V427, V419, V412]

================================

Block 0x468
[0x468:0x471]
---
Predecessors: [0x3dc, 0x42a, 0x45f, 0x66b, 0x6b9]
Successors: [0x10d]
---
0x468 JUMPDEST
0x469 POP
0x46a POP
0x46b POP
0x46c POP
0x46d POP
0x46e SWAP1
0x46f POP
0x470 SWAP1
0x471 JUMP
---
0x468: JUMPDEST 
0x471: JUMP 0x10d
---
Entry stack: [V13, 0x10d, 0x60, S5, {0x3, 0x4}, S3, S2, S1, S0]
Stack pops: 8
Stack additions: [S5]
Exit stack: [V13, S5]

================================

Block 0x472
[0x472:0x47e]
---
Predecessors: [0x198]
Successors: [0x83c]
---
0x472 JUMPDEST
0x473 PUSH1 0x0
0x475 PUSH2 0x486
0x478 PUSH2 0x47f
0x47b PUSH2 0x83c
0x47e JUMP
---
0x472: JUMPDEST 
0x473: V428 = 0x0
0x475: V429 = 0x486
0x478: V430 = 0x47f
0x47b: V431 = 0x83c
0x47e: JUMP 0x83c
---
Entry stack: [V13, 0x1ae, V130, V133]
Stack pops: 0
Stack additions: [0x0, 0x486, 0x47f]
Exit stack: [V13, 0x1ae, V130, V133, 0x0, 0x486, 0x47f]

================================

Block 0x47f
[0x47f:0x485]
---
Predecessors: [0x83c]
Successors: [0x840]
---
0x47f JUMPDEST
0x480 DUP5
0x481 DUP5
0x482 PUSH2 0x840
0x485 JUMP
---
0x47f: JUMPDEST 
0x482: V432 = 0x840
0x485: JUMP 0x840
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S3]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769, S4, S3]

================================

Block 0x486
[0x486:0x48e]
---
Predecessors: [0x8ca, 0x98d, 0xac3, 0xca5]
Successors: [0x1ae]
---
0x486 JUMPDEST
0x487 POP
0x488 PUSH1 0x1
0x48a SWAP3
0x48b SWAP2
0x48c POP
0x48d POP
0x48e JUMP
---
0x486: JUMPDEST 
0x488: V433 = 0x1
0x48e: JUMP S3
---
Entry stack: [V13, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [0x1]
Exit stack: [V13, S4, 0x1]

================================

Block 0x48f
[0x48f:0x494]
---
Predecessors: [0x1c2]
Successors: [0x1ca]
---
0x48f JUMPDEST
0x490 PUSH1 0x2
0x492 SLOAD
0x493 SWAP1
0x494 JUMP
---
0x48f: JUMPDEST 
0x490: V434 = 0x2
0x492: V435 = S[0x2]
0x494: JUMP 0x1ca
---
Entry stack: [V13, 0x1ca]
Stack pops: 1
Stack additions: [V435]
Exit stack: [V13, V435]

================================

Block 0x495
[0x495:0x4a1]
---
Predecessors: [0x1f2]
Successors: [0x92c]
---
0x495 JUMPDEST
0x496 PUSH1 0x0
0x498 PUSH2 0x4a2
0x49b DUP5
0x49c DUP5
0x49d DUP5
0x49e PUSH2 0x92c
0x4a1 JUMP
---
0x495: JUMPDEST 
0x496: V436 = 0x0
0x498: V437 = 0x4a2
0x49e: V438 = 0x92c
0x4a1: JUMP 0x92c
---
Entry stack: [V13, 0x1ae, V166, V170, V173]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, 0x4a2, S2, S1, S0]
Exit stack: [V13, 0x1ae, V166, V170, V173, 0x0, 0x4a2, V166, V170, V173]

================================

Block 0x4a2
[0x4a2:0x4ad]
---
Predecessors: [0x98d]
Successors: [0x83c]
---
0x4a2 JUMPDEST
0x4a3 PUSH2 0x518
0x4a6 DUP5
0x4a7 PUSH2 0x4ae
0x4aa PUSH2 0x83c
0x4ad JUMP
---
0x4a2: JUMPDEST 
0x4a3: V439 = 0x518
0x4a7: V440 = 0x4ae
0x4aa: V441 = 0x83c
0x4ad: JUMP 0x83c
---
Entry stack: [V13, S4, S3, S2, S1, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0, 0x518, S3, 0x4ae]
Exit stack: [V13, S4, S3, S2, S1, 0x0, 0x518, S3, 0x4ae]

================================

Block 0x4ae
[0x4ae:0x4eb]
---
Predecessors: [0x83c]
Successors: [0x83c]
---
0x4ae JUMPDEST
0x4af PUSH2 0x513
0x4b2 DUP6
0x4b3 PUSH1 0x40
0x4b5 MLOAD
0x4b6 DUP1
0x4b7 PUSH1 0x60
0x4b9 ADD
0x4ba PUSH1 0x40
0x4bc MSTORE
0x4bd DUP1
0x4be PUSH1 0x28
0x4c0 DUP2
0x4c1 MSTORE
0x4c2 PUSH1 0x20
0x4c4 ADD
0x4c5 PUSH2 0xd8f
0x4c8 PUSH1 0x28
0x4ca SWAP2
0x4cb CODECOPY
0x4cc PUSH1 0x1
0x4ce PUSH1 0x1
0x4d0 PUSH1 0xa0
0x4d2 SHL
0x4d3 SUB
0x4d4 DUP11
0x4d5 AND
0x4d6 PUSH1 0x0
0x4d8 SWAP1
0x4d9 DUP2
0x4da MSTORE
0x4db PUSH1 0x1
0x4dd PUSH1 0x20
0x4df MSTORE
0x4e0 PUSH1 0x40
0x4e2 DUP2
0x4e3 SHA3
0x4e4 SWAP1
0x4e5 PUSH2 0x4ec
0x4e8 PUSH2 0x83c
0x4eb JUMP
---
0x4ae: JUMPDEST 
0x4af: V442 = 0x513
0x4b3: V443 = 0x40
0x4b5: V444 = M[0x40]
0x4b7: V445 = 0x60
0x4b9: V446 = ADD 0x60 V444
0x4ba: V447 = 0x40
0x4bc: M[0x40] = V446
0x4be: V448 = 0x28
0x4c1: M[V444] = 0x28
0x4c2: V449 = 0x20
0x4c4: V450 = ADD 0x20 V444
0x4c5: V451 = 0xd8f
0x4c8: V452 = 0x28
0x4cb: CODECOPY V450 0xd8f 0x28
0x4cc: V453 = 0x1
0x4ce: V454 = 0x1
0x4d0: V455 = 0xa0
0x4d2: V456 = SHL 0xa0 0x1
0x4d3: V457 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4d5: V458 = AND S6 0xffffffffffffffffffffffffffffffffffffffff
0x4d6: V459 = 0x0
0x4da: M[0x0] = V458
0x4db: V460 = 0x1
0x4dd: V461 = 0x20
0x4df: M[0x20] = 0x1
0x4e0: V462 = 0x40
0x4e3: V463 = SHA3 0x0 0x40
0x4e5: V464 = 0x4ec
0x4e8: V465 = 0x83c
0x4eb: JUMP 0x83c
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2, S1, S0, 0x513, S4, V444, V463, 0x0, 0x4ec]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769, 0x513, S4, V444, V463, 0x0, 0x4ec]

================================

Block 0x4ec
[0x4ec:0x512]
---
Predecessors: [0x83c]
Successors: [0x992]
---
0x4ec JUMPDEST
0x4ed PUSH1 0x1
0x4ef PUSH1 0x1
0x4f1 PUSH1 0xa0
0x4f3 SHL
0x4f4 SUB
0x4f5 AND
0x4f6 DUP2
0x4f7 MSTORE
0x4f8 PUSH1 0x20
0x4fa DUP2
0x4fb ADD
0x4fc SWAP2
0x4fd SWAP1
0x4fe SWAP2
0x4ff MSTORE
0x500 PUSH1 0x40
0x502 ADD
0x503 PUSH1 0x0
0x505 SHA3
0x506 SLOAD
0x507 SWAP2
0x508 SWAP1
0x509 PUSH4 0xffffffff
0x50e PUSH2 0x992
0x511 AND
0x512 JUMP
---
0x4ec: JUMPDEST 
0x4ed: V466 = 0x1
0x4ef: V467 = 0x1
0x4f1: V468 = 0xa0
0x4f3: V469 = SHL 0xa0 0x1
0x4f4: V470 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4f5: V471 = AND 0xffffffffffffffffffffffffffffffffffffffff V769
0x4f7: M[S1] = V471
0x4f8: V472 = 0x20
0x4fb: V473 = ADD S1 0x20
0x4ff: M[V473] = S2
0x500: V474 = 0x40
0x502: V475 = ADD 0x40 S1
0x503: V476 = 0x0
0x505: V477 = SHA3 0x0 V475
0x506: V478 = S[V477]
0x509: V479 = 0xffffffff
0x50e: V480 = 0x992
0x511: V481 = AND 0x992 0xffffffff
0x512: JUMP 0x992
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769]
Stack pops: 5
Stack additions: [V478, S4, S3]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V478, S4, S3]

================================

Block 0x513
[0x513:0x517]
---
Predecessors: [0xa21, 0xb3d]
Successors: [0x840]
---
0x513 JUMPDEST
0x514 PUSH2 0x840
0x517 JUMP
---
0x513: JUMPDEST 
0x514: V482 = 0x840
0x517: JUMP 0x840
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x518
[0x518:0x521]
---
Predecessors: [0x8ca, 0xca5]
Successors: [0x1ae]
---
0x518 JUMPDEST
0x519 POP
0x51a PUSH1 0x1
0x51c SWAP4
0x51d SWAP3
0x51e POP
0x51f POP
0x520 POP
0x521 JUMP
---
0x518: JUMPDEST 
0x51a: V483 = 0x1
0x521: JUMP S4
---
Entry stack: [V13, S4, S3, S2, S1, 0x0]
Stack pops: 5
Stack additions: [0x1]
Exit stack: [V13, 0x1]

================================

Block 0x522
[0x522:0x539]
---
Predecessors: [0x228]
Successors: [0x53a, 0x56e]
---
0x522 JUMPDEST
0x523 CALLER
0x524 PUSH1 0x0
0x526 SWAP1
0x527 DUP2
0x528 MSTORE
0x529 PUSH1 0x6
0x52b PUSH1 0x20
0x52d MSTORE
0x52e PUSH1 0x40
0x530 SWAP1
0x531 SHA3
0x532 SLOAD
0x533 PUSH1 0xff
0x535 AND
0x536 PUSH2 0x56e
0x539 JUMPI
---
0x522: JUMPDEST 
0x523: V484 = CALLER
0x524: V485 = 0x0
0x528: M[0x0] = V484
0x529: V486 = 0x6
0x52b: V487 = 0x20
0x52d: M[0x20] = 0x6
0x52e: V488 = 0x40
0x531: V489 = SHA3 0x0 0x40
0x532: V490 = S[V489]
0x533: V491 = 0xff
0x535: V492 = AND 0xff V490
0x536: V493 = 0x56e
0x539: JUMPI 0x56e V492
---
Entry stack: [V13, 0x23e, V190, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23e, V190, V193]

================================

Block 0x53a
[0x53a:0x56d]
---
Predecessors: [0x522]
Successors: []
---
0x53a PUSH1 0x40
0x53c DUP1
0x53d MLOAD
0x53e PUSH3 0x461bcd
0x542 PUSH1 0xe5
0x544 SHL
0x545 DUP2
0x546 MSTORE
0x547 PUSH1 0x20
0x549 PUSH1 0x4
0x54b DUP3
0x54c ADD
0x54d MSTORE
0x54e PUSH1 0x5
0x550 PUSH1 0x24
0x552 DUP3
0x553 ADD
0x554 MSTORE
0x555 PUSH5 0x10bbb0b937
0x55b PUSH1 0xd9
0x55d SHL
0x55e PUSH1 0x44
0x560 DUP3
0x561 ADD
0x562 MSTORE
0x563 SWAP1
0x564 MLOAD
0x565 SWAP1
0x566 DUP2
0x567 SWAP1
0x568 SUB
0x569 PUSH1 0x64
0x56b ADD
0x56c SWAP1
0x56d REVERT
---
0x53a: V494 = 0x40
0x53d: V495 = M[0x40]
0x53e: V496 = 0x461bcd
0x542: V497 = 0xe5
0x544: V498 = SHL 0xe5 0x461bcd
0x546: M[V495] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x547: V499 = 0x20
0x549: V500 = 0x4
0x54c: V501 = ADD V495 0x4
0x54d: M[V501] = 0x20
0x54e: V502 = 0x5
0x550: V503 = 0x24
0x553: V504 = ADD V495 0x24
0x554: M[V504] = 0x5
0x555: V505 = 0x10bbb0b937
0x55b: V506 = 0xd9
0x55d: V507 = SHL 0xd9 0x10bbb0b937
0x55e: V508 = 0x44
0x561: V509 = ADD V495 0x44
0x562: M[V509] = 0x217761726e000000000000000000000000000000000000000000000000000000
0x564: V510 = M[0x40]
0x568: V511 = SUB V495 V510
0x569: V512 = 0x64
0x56b: V513 = ADD 0x64 V511
0x56d: REVERT V510 V513
---
Entry stack: [V13, 0x23e, V190, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23e, V190, V193]

================================

Block 0x56e
[0x56e:0x577]
---
Predecessors: [0x522]
Successors: [0xa29]
---
0x56e JUMPDEST
0x56f PUSH2 0x578
0x572 DUP3
0x573 DUP3
0x574 PUSH2 0xa29
0x577 JUMP
---
0x56e: JUMPDEST 
0x56f: V514 = 0x578
0x574: V515 = 0xa29
0x577: JUMP 0xa29
---
Entry stack: [V13, 0x23e, V190, V193]
Stack pops: 2
Stack additions: [S1, S0, 0x578, S1, S0]
Exit stack: [V13, 0x23e, V190, V193, 0x578, V190, V193]

================================

Block 0x578
[0x578:0x57b]
---
Predecessors: [0xac3]
Successors: [0x23e]
---
0x578 JUMPDEST
0x579 POP
0x57a POP
0x57b JUMP
---
0x578: JUMPDEST 
0x57b: JUMP S2
---
Entry stack: [V13, S9, S8, S7, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V13, S9, S8, S7, S6, 0x0, S4, S3]

================================

Block 0x57c
[0x57c:0x584]
---
Predecessors: [0x240]
Successors: [0x248]
---
0x57c JUMPDEST
0x57d PUSH1 0x5
0x57f SLOAD
0x580 PUSH1 0xff
0x582 AND
0x583 SWAP1
0x584 JUMP
---
0x57c: JUMPDEST 
0x57d: V516 = 0x5
0x57f: V517 = S[0x5]
0x580: V518 = 0xff
0x582: V519 = AND 0xff V517
0x584: JUMP 0x248
---
Entry stack: [V13, 0x248]
Stack pops: 1
Stack additions: [V519]
Exit stack: [V13, V519]

================================

Block 0x585
[0x585:0x591]
---
Predecessors: [0x274]
Successors: [0x83c]
---
0x585 JUMPDEST
0x586 PUSH1 0x0
0x588 PUSH2 0x486
0x58b PUSH2 0x592
0x58e PUSH2 0x83c
0x591 JUMP
---
0x585: JUMPDEST 
0x586: V520 = 0x0
0x588: V521 = 0x486
0x58b: V522 = 0x592
0x58e: V523 = 0x83c
0x591: JUMP 0x83c
---
Entry stack: [V13, 0x1ae, V220, V223]
Stack pops: 0
Stack additions: [0x0, 0x486, 0x592]
Exit stack: [V13, 0x1ae, V220, V223, 0x0, 0x486, 0x592]

================================

Block 0x592
[0x592:0x5a2]
---
Predecessors: [0x83c]
Successors: [0x83c]
---
0x592 JUMPDEST
0x593 DUP5
0x594 PUSH2 0x513
0x597 DUP6
0x598 PUSH1 0x1
0x59a PUSH1 0x0
0x59c PUSH2 0x5a3
0x59f PUSH2 0x83c
0x5a2 JUMP
---
0x592: JUMPDEST 
0x594: V524 = 0x513
0x598: V525 = 0x1
0x59a: V526 = 0x0
0x59c: V527 = 0x5a3
0x59f: V528 = 0x83c
0x5a2: JUMP 0x83c
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, 0x513, S3, 0x1, 0x0, 0x5a3]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769, S4, 0x513, S3, 0x1, 0x0, 0x5a3]

================================

Block 0x5a3
[0x5a3:0x5d8]
---
Predecessors: [0x83c]
Successors: [0xae3]
---
0x5a3 JUMPDEST
0x5a4 PUSH1 0x1
0x5a6 PUSH1 0x1
0x5a8 PUSH1 0xa0
0x5aa SHL
0x5ab SUB
0x5ac SWAP1
0x5ad DUP2
0x5ae AND
0x5af DUP3
0x5b0 MSTORE
0x5b1 PUSH1 0x20
0x5b3 DUP1
0x5b4 DUP4
0x5b5 ADD
0x5b6 SWAP4
0x5b7 SWAP1
0x5b8 SWAP4
0x5b9 MSTORE
0x5ba PUSH1 0x40
0x5bc SWAP2
0x5bd DUP3
0x5be ADD
0x5bf PUSH1 0x0
0x5c1 SWAP1
0x5c2 DUP2
0x5c3 SHA3
0x5c4 SWAP2
0x5c5 DUP13
0x5c6 AND
0x5c7 DUP2
0x5c8 MSTORE
0x5c9 SWAP3
0x5ca MSTORE
0x5cb SWAP1
0x5cc SHA3
0x5cd SLOAD
0x5ce SWAP1
0x5cf PUSH4 0xffffffff
0x5d4 PUSH2 0xae3
0x5d7 AND
0x5d8 JUMP
---
0x5a3: JUMPDEST 
0x5a4: V529 = 0x1
0x5a6: V530 = 0x1
0x5a8: V531 = 0xa0
0x5aa: V532 = SHL 0xa0 0x1
0x5ab: V533 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5ae: V534 = AND 0xffffffffffffffffffffffffffffffffffffffff V769
0x5b0: M[S1] = V534
0x5b1: V535 = 0x20
0x5b5: V536 = ADD S1 0x20
0x5b9: M[V536] = S2
0x5ba: V537 = 0x40
0x5be: V538 = ADD 0x40 S1
0x5bf: V539 = 0x0
0x5c3: V540 = SHA3 0x0 V538
0x5c6: V541 = AND S10 0xffffffffffffffffffffffffffffffffffffffff
0x5c8: M[0x0] = V541
0x5ca: M[0x20] = V540
0x5cc: V542 = SHA3 0x0 0x40
0x5cd: V543 = S[V542]
0x5cf: V544 = 0xffffffff
0x5d4: V545 = 0xae3
0x5d7: V546 = AND 0xae3 0xffffffff
0x5d8: JUMP 0xae3
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S4, V543, S3]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, V543, S3]

================================

Block 0x5d9
[0x5d9:0x5f0]
---
Predecessors: [0x2a0]
Successors: [0x5f1, 0x62c]
---
0x5d9 JUMPDEST
0x5da CALLER
0x5db PUSH1 0x0
0x5dd SWAP1
0x5de DUP2
0x5df MSTORE
0x5e0 PUSH1 0x6
0x5e2 PUSH1 0x20
0x5e4 MSTORE
0x5e5 PUSH1 0x40
0x5e7 SWAP1
0x5e8 SHA3
0x5e9 SLOAD
0x5ea PUSH1 0xff
0x5ec AND
0x5ed PUSH2 0x62c
0x5f0 JUMPI
---
0x5d9: JUMPDEST 
0x5da: V547 = CALLER
0x5db: V548 = 0x0
0x5df: M[0x0] = V547
0x5e0: V549 = 0x6
0x5e2: V550 = 0x20
0x5e4: M[0x20] = 0x6
0x5e5: V551 = 0x40
0x5e8: V552 = SHA3 0x0 0x40
0x5e9: V553 = S[V552]
0x5ea: V554 = 0xff
0x5ec: V555 = AND 0xff V553
0x5ed: V556 = 0x62c
0x5f0: JUMPI 0x62c V555
---
Entry stack: [V13, 0x23e, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23e, V240]

================================

Block 0x5f1
[0x5f1:0x62b]
---
Predecessors: [0x5d9]
Successors: []
---
0x5f1 PUSH1 0x40
0x5f3 DUP1
0x5f4 MLOAD
0x5f5 PUSH3 0x461bcd
0x5f9 PUSH1 0xe5
0x5fb SHL
0x5fc DUP2
0x5fd MSTORE
0x5fe PUSH1 0x20
0x600 PUSH1 0x4
0x602 DUP3
0x603 ADD
0x604 MSTORE
0x605 PUSH1 0xc
0x607 PUSH1 0x24
0x609 DUP3
0x60a ADD
0x60b MSTORE
0x60c PUSH12 0x85b9bdd08185b1b1bddd959
0x619 PUSH1 0xa2
0x61b SHL
0x61c PUSH1 0x44
0x61e DUP3
0x61f ADD
0x620 MSTORE
0x621 SWAP1
0x622 MLOAD
0x623 SWAP1
0x624 DUP2
0x625 SWAP1
0x626 SUB
0x627 PUSH1 0x64
0x629 ADD
0x62a SWAP1
0x62b REVERT
---
0x5f1: V557 = 0x40
0x5f4: V558 = M[0x40]
0x5f5: V559 = 0x461bcd
0x5f9: V560 = 0xe5
0x5fb: V561 = SHL 0xe5 0x461bcd
0x5fd: M[V558] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x5fe: V562 = 0x20
0x600: V563 = 0x4
0x603: V564 = ADD V558 0x4
0x604: M[V564] = 0x20
0x605: V565 = 0xc
0x607: V566 = 0x24
0x60a: V567 = ADD V558 0x24
0x60b: M[V567] = 0xc
0x60c: V568 = 0x85b9bdd08185b1b1bddd959
0x619: V569 = 0xa2
0x61b: V570 = SHL 0xa2 0x85b9bdd08185b1b1bddd959
0x61c: V571 = 0x44
0x61f: V572 = ADD V558 0x44
0x620: M[V572] = 0x216e6f7420616c6c6f7765640000000000000000000000000000000000000000
0x622: V573 = M[0x40]
0x626: V574 = SUB V558 V573
0x627: V575 = 0x64
0x629: V576 = ADD 0x64 V574
0x62b: REVERT V573 V576
---
Entry stack: [V13, 0x23e, V240]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23e, V240]

================================

Block 0x62c
[0x62c:0x64f]
---
Predecessors: [0x5d9]
Successors: [0x23e]
---
0x62c JUMPDEST
0x62d PUSH1 0x1
0x62f PUSH1 0x1
0x631 PUSH1 0xa0
0x633 SHL
0x634 SUB
0x635 AND
0x636 PUSH1 0x0
0x638 SWAP1
0x639 DUP2
0x63a MSTORE
0x63b PUSH1 0x6
0x63d PUSH1 0x20
0x63f MSTORE
0x640 PUSH1 0x40
0x642 SWAP1
0x643 SHA3
0x644 DUP1
0x645 SLOAD
0x646 PUSH1 0xff
0x648 NOT
0x649 AND
0x64a PUSH1 0x1
0x64c OR
0x64d SWAP1
0x64e SSTORE
0x64f JUMP
---
0x62c: JUMPDEST 
0x62d: V577 = 0x1
0x62f: V578 = 0x1
0x631: V579 = 0xa0
0x633: V580 = SHL 0xa0 0x1
0x634: V581 = SUB 0x10000000000000000000000000000000000000000 0x1
0x635: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V240
0x636: V583 = 0x0
0x63a: M[0x0] = V582
0x63b: V584 = 0x6
0x63d: V585 = 0x20
0x63f: M[0x20] = 0x6
0x640: V586 = 0x40
0x643: V587 = SHA3 0x0 0x40
0x645: V588 = S[V587]
0x646: V589 = 0xff
0x648: V590 = NOT 0xff
0x649: V591 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V588
0x64a: V592 = 0x1
0x64c: V593 = OR 0x1 V591
0x64e: S[V587] = V593
0x64f: JUMP 0x23e
---
Entry stack: [V13, 0x23e, V240]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x650
[0x650:0x66a]
---
Predecessors: [0x2c6]
Successors: [0x1ca]
---
0x650 JUMPDEST
0x651 PUSH1 0x1
0x653 PUSH1 0x1
0x655 PUSH1 0xa0
0x657 SHL
0x658 SUB
0x659 AND
0x65a PUSH1 0x0
0x65c SWAP1
0x65d DUP2
0x65e MSTORE
0x65f PUSH1 0x20
0x661 DUP2
0x662 SWAP1
0x663 MSTORE
0x664 PUSH1 0x40
0x666 SWAP1
0x667 SHA3
0x668 SLOAD
0x669 SWAP1
0x66a JUMP
---
0x650: JUMPDEST 
0x651: V594 = 0x1
0x653: V595 = 0x1
0x655: V596 = 0xa0
0x657: V597 = SHL 0xa0 0x1
0x658: V598 = SUB 0x10000000000000000000000000000000000000000 0x1
0x659: V599 = AND 0xffffffffffffffffffffffffffffffffffffffff V257
0x65a: V600 = 0x0
0x65e: M[0x0] = V599
0x65f: V601 = 0x20
0x663: M[0x20] = 0x0
0x664: V602 = 0x40
0x667: V603 = SHA3 0x0 0x40
0x668: V604 = S[V603]
0x66a: JUMP 0x1ca
---
Entry stack: [V13, 0x1ca, V257]
Stack pops: 2
Stack additions: [V604]
Exit stack: [V13, V604]

================================

Block 0x66b
[0x66b:0x6b0]
---
Predecessors: [0x2d6]
Successors: [0x468, 0x6b1]
---
0x66b JUMPDEST
0x66c PUSH1 0x4
0x66e DUP1
0x66f SLOAD
0x670 PUSH1 0x40
0x672 DUP1
0x673 MLOAD
0x674 PUSH1 0x20
0x676 PUSH1 0x1f
0x678 PUSH1 0x2
0x67a PUSH1 0x0
0x67c NOT
0x67d PUSH2 0x100
0x680 PUSH1 0x1
0x682 DUP9
0x683 AND
0x684 ISZERO
0x685 MUL
0x686 ADD
0x687 SWAP1
0x688 SWAP6
0x689 AND
0x68a SWAP5
0x68b SWAP1
0x68c SWAP5
0x68d DIV
0x68e SWAP4
0x68f DUP5
0x690 ADD
0x691 DUP2
0x692 SWAP1
0x693 DIV
0x694 DUP2
0x695 MUL
0x696 DUP3
0x697 ADD
0x698 DUP2
0x699 ADD
0x69a SWAP1
0x69b SWAP3
0x69c MSTORE
0x69d DUP3
0x69e DUP2
0x69f MSTORE
0x6a0 PUSH1 0x60
0x6a2 SWAP4
0x6a3 SWAP1
0x6a4 SWAP3
0x6a5 SWAP1
0x6a6 SWAP2
0x6a7 DUP4
0x6a8 ADD
0x6a9 DUP3
0x6aa DUP3
0x6ab DUP1
0x6ac ISZERO
0x6ad PUSH2 0x468
0x6b0 JUMPI
---
0x66b: JUMPDEST 
0x66c: V605 = 0x4
0x66f: V606 = S[0x4]
0x670: V607 = 0x40
0x673: V608 = M[0x40]
0x674: V609 = 0x20
0x676: V610 = 0x1f
0x678: V611 = 0x2
0x67a: V612 = 0x0
0x67c: V613 = NOT 0x0
0x67d: V614 = 0x100
0x680: V615 = 0x1
0x683: V616 = AND V606 0x1
0x684: V617 = ISZERO V616
0x685: V618 = MUL V617 0x100
0x686: V619 = ADD V618 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x689: V620 = AND V606 V619
0x68d: V621 = DIV V620 0x2
0x690: V622 = ADD V621 0x1f
0x693: V623 = DIV V622 0x20
0x695: V624 = MUL 0x20 V623
0x697: V625 = ADD V608 V624
0x699: V626 = ADD 0x20 V625
0x69c: M[0x40] = V626
0x69f: M[V608] = V621
0x6a0: V627 = 0x60
0x6a8: V628 = ADD V608 0x20
0x6ac: V629 = ISZERO V621
0x6ad: V630 = 0x468
0x6b0: JUMPI 0x468 V629
---
Entry stack: [V13, 0x10d]
Stack pops: 0
Stack additions: [0x60, V608, 0x4, V621, V628, 0x4, V621]
Exit stack: [V13, 0x10d, 0x60, V608, 0x4, V621, V628, 0x4, V621]

================================

Block 0x6b1
[0x6b1:0x6b8]
---
Predecessors: [0x66b]
Successors: [0x43d, 0x6b9]
---
0x6b1 DUP1
0x6b2 PUSH1 0x1f
0x6b4 LT
0x6b5 PUSH2 0x43d
0x6b8 JUMPI
---
0x6b2: V631 = 0x1f
0x6b4: V632 = LT 0x1f V621
0x6b5: V633 = 0x43d
0x6b8: JUMPI 0x43d V632
---
Entry stack: [V13, 0x10d, 0x60, V608, 0x4, V621, V628, 0x4, V621]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V13, 0x10d, 0x60, V608, 0x4, V621, V628, 0x4, V621]

================================

Block 0x6b9
[0x6b9:0x6cb]
---
Predecessors: [0x6b1]
Successors: [0x468]
---
0x6b9 PUSH2 0x100
0x6bc DUP1
0x6bd DUP4
0x6be SLOAD
0x6bf DIV
0x6c0 MUL
0x6c1 DUP4
0x6c2 MSTORE
0x6c3 SWAP2
0x6c4 PUSH1 0x20
0x6c6 ADD
0x6c7 SWAP2
0x6c8 PUSH2 0x468
0x6cb JUMP
---
0x6b9: V634 = 0x100
0x6be: V635 = S[0x4]
0x6bf: V636 = DIV V635 0x100
0x6c0: V637 = MUL V636 0x100
0x6c2: M[V628] = V637
0x6c4: V638 = 0x20
0x6c6: V639 = ADD 0x20 V628
0x6c8: V640 = 0x468
0x6cb: JUMP 0x468
---
Entry stack: [V13, 0x10d, 0x60, V608, 0x4, V621, V628, 0x4, V621]
Stack pops: 3
Stack additions: [V639, S1, S0]
Exit stack: [V13, 0x10d, 0x60, V608, 0x4, V621, V639, 0x4, V621]

================================

Block 0x6cc
[0x6cc:0x6d8]
---
Predecessors: [0x2f4]
Successors: [0x83c]
---
0x6cc JUMPDEST
0x6cd PUSH1 0x0
0x6cf PUSH2 0x486
0x6d2 PUSH2 0x6d9
0x6d5 PUSH2 0x83c
0x6d8 JUMP
---
0x6cc: JUMPDEST 
0x6cd: V641 = 0x0
0x6cf: V642 = 0x486
0x6d2: V643 = 0x6d9
0x6d5: V644 = 0x83c
0x6d8: JUMP 0x83c
---
Entry stack: [V13, 0x1ae, V276, V279]
Stack pops: 0
Stack additions: [0x0, 0x486, 0x6d9]
Exit stack: [V13, 0x1ae, V276, V279, 0x0, 0x486, 0x6d9]

================================

Block 0x6d9
[0x6d9:0x702]
---
Predecessors: [0x83c]
Successors: [0x83c]
---
0x6d9 JUMPDEST
0x6da DUP5
0x6db PUSH2 0x513
0x6de DUP6
0x6df PUSH1 0x40
0x6e1 MLOAD
0x6e2 DUP1
0x6e3 PUSH1 0x60
0x6e5 ADD
0x6e6 PUSH1 0x40
0x6e8 MSTORE
0x6e9 DUP1
0x6ea PUSH1 0x25
0x6ec DUP2
0x6ed MSTORE
0x6ee PUSH1 0x20
0x6f0 ADD
0x6f1 PUSH2 0xe00
0x6f4 PUSH1 0x25
0x6f6 SWAP2
0x6f7 CODECOPY
0x6f8 PUSH1 0x1
0x6fa PUSH1 0x0
0x6fc PUSH2 0x703
0x6ff PUSH2 0x83c
0x702 JUMP
---
0x6d9: JUMPDEST 
0x6db: V645 = 0x513
0x6df: V646 = 0x40
0x6e1: V647 = M[0x40]
0x6e3: V648 = 0x60
0x6e5: V649 = ADD 0x60 V647
0x6e6: V650 = 0x40
0x6e8: M[0x40] = V649
0x6ea: V651 = 0x25
0x6ed: M[V647] = 0x25
0x6ee: V652 = 0x20
0x6f0: V653 = ADD 0x20 V647
0x6f1: V654 = 0xe00
0x6f4: V655 = 0x25
0x6f7: CODECOPY V653 0xe00 0x25
0x6f8: V656 = 0x1
0x6fa: V657 = 0x0
0x6fc: V658 = 0x703
0x6ff: V659 = 0x83c
0x702: JUMP 0x83c
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, 0x513, S3, V647, 0x1, 0x0, 0x703]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769, S4, 0x513, S3, V647, 0x1, 0x0, 0x703]

================================

Block 0x703
[0x703:0x739]
---
Predecessors: [0x83c]
Successors: [0x992]
---
0x703 JUMPDEST
0x704 PUSH1 0x1
0x706 PUSH1 0x1
0x708 PUSH1 0xa0
0x70a SHL
0x70b SUB
0x70c SWAP1
0x70d DUP2
0x70e AND
0x70f DUP3
0x710 MSTORE
0x711 PUSH1 0x20
0x713 DUP1
0x714 DUP4
0x715 ADD
0x716 SWAP4
0x717 SWAP1
0x718 SWAP4
0x719 MSTORE
0x71a PUSH1 0x40
0x71c SWAP2
0x71d DUP3
0x71e ADD
0x71f PUSH1 0x0
0x721 SWAP1
0x722 DUP2
0x723 SHA3
0x724 SWAP2
0x725 DUP14
0x726 AND
0x727 DUP2
0x728 MSTORE
0x729 SWAP3
0x72a MSTORE
0x72b SWAP1
0x72c SHA3
0x72d SLOAD
0x72e SWAP2
0x72f SWAP1
0x730 PUSH4 0xffffffff
0x735 PUSH2 0x992
0x738 AND
0x739 JUMP
---
0x703: JUMPDEST 
0x704: V660 = 0x1
0x706: V661 = 0x1
0x708: V662 = 0xa0
0x70a: V663 = SHL 0xa0 0x1
0x70b: V664 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70e: V665 = AND 0xffffffffffffffffffffffffffffffffffffffff V769
0x710: M[S1] = V665
0x711: V666 = 0x20
0x715: V667 = ADD S1 0x20
0x719: M[V667] = S2
0x71a: V668 = 0x40
0x71e: V669 = ADD 0x40 S1
0x71f: V670 = 0x0
0x723: V671 = SHA3 0x0 V669
0x726: V672 = AND S11 0xffffffffffffffffffffffffffffffffffffffff
0x728: M[0x0] = V672
0x72a: M[0x20] = V671
0x72c: V673 = SHA3 0x0 0x40
0x72d: V674 = S[V673]
0x730: V675 = 0xffffffff
0x735: V676 = 0x992
0x738: V677 = AND 0x992 0xffffffff
0x739: JUMP 0x992
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769]
Stack pops: 12
Stack additions: [S11, S10, S9, S8, S7, S6, S5, V674, S4, S3]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V674, S4, S3]

================================

Block 0x73a
[0x73a:0x746]
---
Predecessors: [0x320]
Successors: [0x83c]
---
0x73a JUMPDEST
0x73b PUSH1 0x0
0x73d PUSH2 0x486
0x740 PUSH2 0x747
0x743 PUSH2 0x83c
0x746 JUMP
---
0x73a: JUMPDEST 
0x73b: V678 = 0x0
0x73d: V679 = 0x486
0x740: V680 = 0x747
0x743: V681 = 0x83c
0x746: JUMP 0x83c
---
Entry stack: [V13, 0x1ae, V296, V299]
Stack pops: 0
Stack additions: [0x0, 0x486, 0x747]
Exit stack: [V13, 0x1ae, V296, V299, 0x0, 0x486, 0x747]

================================

Block 0x747
[0x747:0x74d]
---
Predecessors: [0x83c]
Successors: [0x92c]
---
0x747 JUMPDEST
0x748 DUP5
0x749 DUP5
0x74a PUSH2 0x92c
0x74d JUMP
---
0x747: JUMPDEST 
0x74a: V682 = 0x92c
0x74d: JUMP 0x92c
---
Entry stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0, S4, S3]
Exit stack: [V13, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769, S4, S3]

================================

Block 0x74e
[0x74e:0x778]
---
Predecessors: [0x34c]
Successors: [0x1ca]
---
0x74e JUMPDEST
0x74f PUSH1 0x1
0x751 PUSH1 0x1
0x753 PUSH1 0xa0
0x755 SHL
0x756 SUB
0x757 SWAP2
0x758 DUP3
0x759 AND
0x75a PUSH1 0x0
0x75c SWAP1
0x75d DUP2
0x75e MSTORE
0x75f PUSH1 0x1
0x761 PUSH1 0x20
0x763 SWAP1
0x764 DUP2
0x765 MSTORE
0x766 PUSH1 0x40
0x768 DUP1
0x769 DUP4
0x76a SHA3
0x76b SWAP4
0x76c SWAP1
0x76d SWAP5
0x76e AND
0x76f DUP3
0x770 MSTORE
0x771 SWAP2
0x772 SWAP1
0x773 SWAP2
0x774 MSTORE
0x775 SHA3
0x776 SLOAD
0x777 SWAP1
0x778 JUMP
---
0x74e: JUMPDEST 
0x74f: V683 = 0x1
0x751: V684 = 0x1
0x753: V685 = 0xa0
0x755: V686 = SHL 0xa0 0x1
0x756: V687 = SUB 0x10000000000000000000000000000000000000000 0x1
0x759: V688 = AND 0xffffffffffffffffffffffffffffffffffffffff V316
0x75a: V689 = 0x0
0x75e: M[0x0] = V688
0x75f: V690 = 0x1
0x761: V691 = 0x20
0x765: M[0x20] = 0x1
0x766: V692 = 0x40
0x76a: V693 = SHA3 0x0 0x40
0x76e: V694 = AND 0xffffffffffffffffffffffffffffffffffffffff V320
0x770: M[0x0] = V694
0x774: M[0x20] = V693
0x775: V695 = SHA3 0x0 0x40
0x776: V696 = S[V695]
0x778: JUMP 0x1ca
---
Entry stack: [V13, 0x1ca, V316, V320]
Stack pops: 3
Stack additions: [V696]
Exit stack: [V13, V696]

================================

Block 0x779
[0x779:0x78d]
---
Predecessors: [0x37a]
Successors: [0x1ae]
---
0x779 JUMPDEST
0x77a PUSH1 0x6
0x77c PUSH1 0x20
0x77e MSTORE
0x77f PUSH1 0x0
0x781 SWAP1
0x782 DUP2
0x783 MSTORE
0x784 PUSH1 0x40
0x786 SWAP1
0x787 SHA3
0x788 SLOAD
0x789 PUSH1 0xff
0x78b AND
0x78c DUP2
0x78d JUMP
---
0x779: JUMPDEST 
0x77a: V697 = 0x6
0x77c: V698 = 0x20
0x77e: M[0x20] = 0x6
0x77f: V699 = 0x0
0x783: M[0x0] = V337
0x784: V700 = 0x40
0x787: V701 = SHA3 0x0 0x40
0x788: V702 = S[V701]
0x789: V703 = 0xff
0x78b: V704 = AND 0xff V702
0x78d: JUMP 0x1ae
---
Entry stack: [V13, 0x1ae, V337]
Stack pops: 2
Stack additions: [S1, V704]
Exit stack: [V13, 0x1ae, V704]

================================

Block 0x78e
[0x78e:0x7a5]
---
Predecessors: [0x3a0]
Successors: [0x7a6, 0x7da]
---
0x78e JUMPDEST
0x78f CALLER
0x790 PUSH1 0x0
0x792 SWAP1
0x793 DUP2
0x794 MSTORE
0x795 PUSH1 0x6
0x797 PUSH1 0x20
0x799 MSTORE
0x79a PUSH1 0x40
0x79c SWAP1
0x79d SHA3
0x79e SLOAD
0x79f PUSH1 0xff
0x7a1 AND
0x7a2 PUSH2 0x7da
0x7a5 JUMPI
---
0x78e: JUMPDEST 
0x78f: V705 = CALLER
0x790: V706 = 0x0
0x794: M[0x0] = V705
0x795: V707 = 0x6
0x797: V708 = 0x20
0x799: M[0x20] = 0x6
0x79a: V709 = 0x40
0x79d: V710 = SHA3 0x0 0x40
0x79e: V711 = S[V710]
0x79f: V712 = 0xff
0x7a1: V713 = AND 0xff V711
0x7a2: V714 = 0x7da
0x7a5: JUMPI 0x7da V713
---
Entry stack: [V13, 0x23e, V354]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23e, V354]

================================

Block 0x7a6
[0x7a6:0x7d9]
---
Predecessors: [0x78e]
Successors: []
---
0x7a6 PUSH1 0x40
0x7a8 DUP1
0x7a9 MLOAD
0x7aa PUSH3 0x461bcd
0x7ae PUSH1 0xe5
0x7b0 SHL
0x7b1 DUP2
0x7b2 MSTORE
0x7b3 PUSH1 0x20
0x7b5 PUSH1 0x4
0x7b7 DUP3
0x7b8 ADD
0x7b9 MSTORE
0x7ba PUSH1 0x5
0x7bc PUSH1 0x24
0x7be DUP3
0x7bf ADD
0x7c0 MSTORE
0x7c1 PUSH5 0x10bbb0b937
0x7c7 PUSH1 0xd9
0x7c9 SHL
0x7ca PUSH1 0x44
0x7cc DUP3
0x7cd ADD
0x7ce MSTORE
0x7cf SWAP1
0x7d0 MLOAD
0x7d1 SWAP1
0x7d2 DUP2
0x7d3 SWAP1
0x7d4 SUB
0x7d5 PUSH1 0x64
0x7d7 ADD
0x7d8 SWAP1
0x7d9 REVERT
---
0x7a6: V715 = 0x40
0x7a9: V716 = M[0x40]
0x7aa: V717 = 0x461bcd
0x7ae: V718 = 0xe5
0x7b0: V719 = SHL 0xe5 0x461bcd
0x7b2: M[V716] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x7b3: V720 = 0x20
0x7b5: V721 = 0x4
0x7b8: V722 = ADD V716 0x4
0x7b9: M[V722] = 0x20
0x7ba: V723 = 0x5
0x7bc: V724 = 0x24
0x7bf: V725 = ADD V716 0x24
0x7c0: M[V725] = 0x5
0x7c1: V726 = 0x10bbb0b937
0x7c7: V727 = 0xd9
0x7c9: V728 = SHL 0xd9 0x10bbb0b937
0x7ca: V729 = 0x44
0x7cd: V730 = ADD V716 0x44
0x7ce: M[V730] = 0x217761726e000000000000000000000000000000000000000000000000000000
0x7d0: V731 = M[0x40]
0x7d4: V732 = SUB V716 V731
0x7d5: V733 = 0x64
0x7d7: V734 = ADD 0x64 V732
0x7d9: REVERT V731 V734
---
Entry stack: [V13, 0x23e, V354]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23e, V354]

================================

Block 0x7da
[0x7da:0x7e2]
---
Predecessors: [0x78e]
Successors: [0xb44]
---
0x7da JUMPDEST
0x7db PUSH2 0x7e3
0x7de DUP2
0x7df PUSH2 0xb44
0x7e2 JUMP
---
0x7da: JUMPDEST 
0x7db: V735 = 0x7e3
0x7df: V736 = 0xb44
0x7e2: JUMP 0xb44
---
Entry stack: [V13, 0x23e, V354]
Stack pops: 1
Stack additions: [S0, 0x7e3, S0]
Exit stack: [V13, 0x23e, V354, 0x7e3, V354]

================================

Block 0x7e3
[0x7e3:0x7e5]
---
Predecessors: [0xb44]
Successors: [0x23e]
---
0x7e3 JUMPDEST
0x7e4 POP
0x7e5 JUMP
---
0x7e3: JUMPDEST 
0x7e5: JUMP 0x23e
---
Entry stack: [V13, 0x23e, V354]
Stack pops: 2
Stack additions: []
Exit stack: [V13]

================================

Block 0x7e6
[0x7e6:0x7fd]
---
Predecessors: [0x3c6]
Successors: [0x7fe, 0x832]
---
0x7e6 JUMPDEST
0x7e7 CALLER
0x7e8 PUSH1 0x0
0x7ea SWAP1
0x7eb DUP2
0x7ec MSTORE
0x7ed PUSH1 0x6
0x7ef PUSH1 0x20
0x7f1 MSTORE
0x7f2 PUSH1 0x40
0x7f4 SWAP1
0x7f5 SHA3
0x7f6 SLOAD
0x7f7 PUSH1 0xff
0x7f9 AND
0x7fa PUSH2 0x832
0x7fd JUMPI
---
0x7e6: JUMPDEST 
0x7e7: V737 = CALLER
0x7e8: V738 = 0x0
0x7ec: M[0x0] = V737
0x7ed: V739 = 0x6
0x7ef: V740 = 0x20
0x7f1: M[0x20] = 0x6
0x7f2: V741 = 0x40
0x7f5: V742 = SHA3 0x0 0x40
0x7f6: V743 = S[V742]
0x7f7: V744 = 0xff
0x7f9: V745 = AND 0xff V743
0x7fa: V746 = 0x832
0x7fd: JUMPI 0x832 V745
---
Entry stack: [V13, 0x23e, V371, V374]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23e, V371, V374]

================================

Block 0x7fe
[0x7fe:0x831]
---
Predecessors: [0x7e6]
Successors: []
---
0x7fe PUSH1 0x40
0x800 DUP1
0x801 MLOAD
0x802 PUSH3 0x461bcd
0x806 PUSH1 0xe5
0x808 SHL
0x809 DUP2
0x80a MSTORE
0x80b PUSH1 0x20
0x80d PUSH1 0x4
0x80f DUP3
0x810 ADD
0x811 MSTORE
0x812 PUSH1 0x5
0x814 PUSH1 0x24
0x816 DUP3
0x817 ADD
0x818 MSTORE
0x819 PUSH5 0x10bbb0b937
0x81f PUSH1 0xd9
0x821 SHL
0x822 PUSH1 0x44
0x824 DUP3
0x825 ADD
0x826 MSTORE
0x827 SWAP1
0x828 MLOAD
0x829 SWAP1
0x82a DUP2
0x82b SWAP1
0x82c SUB
0x82d PUSH1 0x64
0x82f ADD
0x830 SWAP1
0x831 REVERT
---
0x7fe: V747 = 0x40
0x801: V748 = M[0x40]
0x802: V749 = 0x461bcd
0x806: V750 = 0xe5
0x808: V751 = SHL 0xe5 0x461bcd
0x80a: M[V748] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x80b: V752 = 0x20
0x80d: V753 = 0x4
0x810: V754 = ADD V748 0x4
0x811: M[V754] = 0x20
0x812: V755 = 0x5
0x814: V756 = 0x24
0x817: V757 = ADD V748 0x24
0x818: M[V757] = 0x5
0x819: V758 = 0x10bbb0b937
0x81f: V759 = 0xd9
0x821: V760 = SHL 0xd9 0x10bbb0b937
0x822: V761 = 0x44
0x825: V762 = ADD V748 0x44
0x826: M[V762] = 0x217761726e000000000000000000000000000000000000000000000000000000
0x828: V763 = M[0x40]
0x82c: V764 = SUB V748 V763
0x82d: V765 = 0x64
0x82f: V766 = ADD 0x64 V764
0x831: REVERT V763 V766
---
Entry stack: [V13, 0x23e, V371, V374]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23e, V371, V374]

================================

Block 0x832
[0x832:0x83b]
---
Predecessors: [0x7e6]
Successors: [0xb5e]
---
0x832 JUMPDEST
0x833 PUSH2 0x578
0x836 DUP3
0x837 DUP3
0x838 PUSH2 0xb5e
0x83b JUMP
---
0x832: JUMPDEST 
0x833: V767 = 0x578
0x838: V768 = 0xb5e
0x83b: JUMP 0xb5e
---
Entry stack: [V13, 0x23e, V371, V374]
Stack pops: 2
Stack additions: [S1, S0, 0x578, S1, S0]
Exit stack: [V13, 0x23e, V371, V374, 0x578, V371, V374]

================================

Block 0x83c
[0x83c:0x83f]
---
Predecessors: [0x472, 0x4a2, 0x4ae, 0x585, 0x592, 0x6cc, 0x6d9, 0x73a]
Successors: [0x47f, 0x4ae, 0x4ec, 0x592, 0x5a3, 0x6d9, 0x703, 0x747]
---
0x83c JUMPDEST
0x83d CALLER
0x83e SWAP1
0x83f JUMP
---
0x83c: JUMPDEST 
0x83d: V769 = CALLER
0x83f: JUMP {0x47f, 0x4ae, 0x4ec, 0x592, 0x5a3, 0x6d9, 0x703, 0x747}
---
Entry stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, {0x47f, 0x4ae, 0x4ec, 0x592, 0x5a3, 0x6d9, 0x703, 0x747}]
Stack pops: 1
Stack additions: [V769]
Exit stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V769]

================================

Block 0x840
[0x840:0x84e]
---
Predecessors: [0x47f, 0x513]
Successors: [0x84f, 0x885]
---
0x840 JUMPDEST
0x841 PUSH1 0x1
0x843 PUSH1 0x1
0x845 PUSH1 0xa0
0x847 SHL
0x848 SUB
0x849 DUP4
0x84a AND
0x84b PUSH2 0x885
0x84e JUMPI
---
0x840: JUMPDEST 
0x841: V770 = 0x1
0x843: V771 = 0x1
0x845: V772 = 0xa0
0x847: V773 = SHL 0xa0 0x1
0x848: V774 = SUB 0x10000000000000000000000000000000000000000 0x1
0x84a: V775 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x84b: V776 = 0x885
0x84e: JUMPI 0x885 V775
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x84f
[0x84f:0x884]
---
Predecessors: [0x840]
Successors: []
---
0x84f PUSH1 0x40
0x851 MLOAD
0x852 PUSH3 0x461bcd
0x856 PUSH1 0xe5
0x858 SHL
0x859 DUP2
0x85a MSTORE
0x85b PUSH1 0x4
0x85d ADD
0x85e DUP1
0x85f DUP1
0x860 PUSH1 0x20
0x862 ADD
0x863 DUP3
0x864 DUP2
0x865 SUB
0x866 DUP3
0x867 MSTORE
0x868 PUSH1 0x24
0x86a DUP2
0x86b MSTORE
0x86c PUSH1 0x20
0x86e ADD
0x86f DUP1
0x870 PUSH2 0xddc
0x873 PUSH1 0x24
0x875 SWAP2
0x876 CODECOPY
0x877 PUSH1 0x40
0x879 ADD
0x87a SWAP2
0x87b POP
0x87c POP
0x87d PUSH1 0x40
0x87f MLOAD
0x880 DUP1
0x881 SWAP2
0x882 SUB
0x883 SWAP1
0x884 REVERT
---
0x84f: V777 = 0x40
0x851: V778 = M[0x40]
0x852: V779 = 0x461bcd
0x856: V780 = 0xe5
0x858: V781 = SHL 0xe5 0x461bcd
0x85a: M[V778] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x85b: V782 = 0x4
0x85d: V783 = ADD 0x4 V778
0x860: V784 = 0x20
0x862: V785 = ADD 0x20 V783
0x865: V786 = SUB V785 V783
0x867: M[V783] = V786
0x868: V787 = 0x24
0x86b: M[V785] = 0x24
0x86c: V788 = 0x20
0x86e: V789 = ADD 0x20 V785
0x870: V790 = 0xddc
0x873: V791 = 0x24
0x876: CODECOPY V789 0xddc 0x24
0x877: V792 = 0x40
0x879: V793 = ADD 0x40 V789
0x87d: V794 = 0x40
0x87f: V795 = M[0x40]
0x882: V796 = SUB V793 V795
0x884: REVERT V795 V796
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x885
[0x885:0x893]
---
Predecessors: [0x840]
Successors: [0x894, 0x8ca]
---
0x885 JUMPDEST
0x886 PUSH1 0x1
0x888 PUSH1 0x1
0x88a PUSH1 0xa0
0x88c SHL
0x88d SUB
0x88e DUP3
0x88f AND
0x890 PUSH2 0x8ca
0x893 JUMPI
---
0x885: JUMPDEST 
0x886: V797 = 0x1
0x888: V798 = 0x1
0x88a: V799 = 0xa0
0x88c: V800 = SHL 0xa0 0x1
0x88d: V801 = SUB 0x10000000000000000000000000000000000000000 0x1
0x88f: V802 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x890: V803 = 0x8ca
0x893: JUMPI 0x8ca V802
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x894
[0x894:0x8c9]
---
Predecessors: [0x885]
Successors: []
---
0x894 PUSH1 0x40
0x896 MLOAD
0x897 PUSH3 0x461bcd
0x89b PUSH1 0xe5
0x89d SHL
0x89e DUP2
0x89f MSTORE
0x8a0 PUSH1 0x4
0x8a2 ADD
0x8a3 DUP1
0x8a4 DUP1
0x8a5 PUSH1 0x20
0x8a7 ADD
0x8a8 DUP3
0x8a9 DUP2
0x8aa SUB
0x8ab DUP3
0x8ac MSTORE
0x8ad PUSH1 0x22
0x8af DUP2
0x8b0 MSTORE
0x8b1 PUSH1 0x20
0x8b3 ADD
0x8b4 DUP1
0x8b5 PUSH2 0xd23
0x8b8 PUSH1 0x22
0x8ba SWAP2
0x8bb CODECOPY
0x8bc PUSH1 0x40
0x8be ADD
0x8bf SWAP2
0x8c0 POP
0x8c1 POP
0x8c2 PUSH1 0x40
0x8c4 MLOAD
0x8c5 DUP1
0x8c6 SWAP2
0x8c7 SUB
0x8c8 SWAP1
0x8c9 REVERT
---
0x894: V804 = 0x40
0x896: V805 = M[0x40]
0x897: V806 = 0x461bcd
0x89b: V807 = 0xe5
0x89d: V808 = SHL 0xe5 0x461bcd
0x89f: M[V805] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x8a0: V809 = 0x4
0x8a2: V810 = ADD 0x4 V805
0x8a5: V811 = 0x20
0x8a7: V812 = ADD 0x20 V810
0x8aa: V813 = SUB V812 V810
0x8ac: M[V810] = V813
0x8ad: V814 = 0x22
0x8b0: M[V812] = 0x22
0x8b1: V815 = 0x20
0x8b3: V816 = ADD 0x20 V812
0x8b5: V817 = 0xd23
0x8b8: V818 = 0x22
0x8bb: CODECOPY V816 0xd23 0x22
0x8bc: V819 = 0x40
0x8be: V820 = ADD 0x40 V816
0x8c2: V821 = 0x40
0x8c4: V822 = M[0x40]
0x8c7: V823 = SUB V820 V822
0x8c9: REVERT V822 V823
---
Entry stack: [V13, S8, S7, S6, S5, 0x0, {0x486, 0x518}, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, 0x0, {0x486, 0x518}, S2, S1, S0]

================================

Block 0x8ca
[0x8ca:0x92b]
---
Predecessors: [0x885]
Successors: [0x486, 0x518]
---
0x8ca JUMPDEST
0x8cb PUSH1 0x1
0x8cd PUSH1 0x1
0x8cf PUSH1 0xa0
0x8d1 SHL
0x8d2 SUB
0x8d3 DUP1
0x8d4 DUP5
0x8d5 AND
0x8d6 PUSH1 0x0
0x8d8 DUP2
0x8d9 DUP2
0x8da MSTORE
0x8db PUSH1 0x1
0x8dd PUSH1 0x20
0x8df SWAP1
0x8e0 DUP2
0x8e1 MSTORE
0x8e2 PUSH1 0x40
0x8e4 DUP1
0x8e5 DUP4
0x8e6 SHA3
0x8e7 SWAP5
0x8e8 DUP8
0x8e9 AND
0x8ea DUP1
0x8eb DUP5
0x8ec MSTORE
0x8ed SWAP5
0x8ee DUP3
0x8ef MSTORE
0x8f0 SWAP2
0x8f1 DUP3
0x8f2 SWAP1
0x8f3 SHA3
0x8f4 DUP6
0x8f5 SWAP1
0x8f6 SSTORE
0x8f7 DUP2
0x8f8 MLOAD
0x8f9 DUP6
0x8fa DUP2
0x8fb MSTORE
0x8fc SWAP2
0x8fd MLOAD
0x8fe PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x91f SWAP3
0x920 DUP2
0x921 SWAP1
0x922 SUB
0x923 SWAP1
0x924 SWAP2
0x925 ADD
0x926 SWAP1
0x927 LOG3
0x928 POP
0x929 POP
0x92a POP
0x92b JUMP
---
0x8ca: JUMPDEST 
0x8cb: V824 = 0x1
0x8cd: V825 = 0x1
0x8cf: V826 = 0xa0
0x8d1: V827 = SHL 0xa0 0x1
0x8d2: V828 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8d5: V829 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x8d6: V830 = 0x0
0x8da: M[0x0] = V829
0x8db: V831 = 0x1
0x8dd: V832 = 0x20
0x8e1: M[0x20] = 0x1
0x8e2: V833 = 0x40
0x8e6: V834 = SHA3 0x0 0x40
0x8e9: V835 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0x8ec: M[0x0] = V835
0x8ef: M[0x20] = V834
0x8f3: V836 = SHA3 0x0 0x40
0x8f6: S[V836] = S0
0x8f8: V837 = M[0x40]
0x8fb: M[V837] = S0
0x8fd: V838 = M[0x40]
0x8fe: V839 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x922: V840 = SUB V837 V838
0x925: V841 = ADD 0x20 V840
0x927: LOG V838 V841 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V829 V835
0x92b: JUMP {0x486, 0x518}
---
Entry stack: [V13, S8, S7, S6, S5, 0x0, {0x486, 0x518}, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, 0x0]

================================

Block 0x92c
[0x92c:0x94c]
---
Predecessors: [0x495, 0x747]
Successors: [0x94d, 0x982]
---
0x92c JUMPDEST
0x92d PUSH1 0x1
0x92f PUSH1 0x1
0x931 PUSH1 0xa0
0x933 SHL
0x934 SUB
0x935 DUP4
0x936 AND
0x937 PUSH1 0x0
0x939 SWAP1
0x93a DUP2
0x93b MSTORE
0x93c PUSH1 0x6
0x93e PUSH1 0x20
0x940 MSTORE
0x941 PUSH1 0x40
0x943 SWAP1
0x944 SHA3
0x945 SLOAD
0x946 PUSH1 0xff
0x948 AND
0x949 PUSH2 0x982
0x94c JUMPI
---
0x92c: JUMPDEST 
0x92d: V842 = 0x1
0x92f: V843 = 0x1
0x931: V844 = 0xa0
0x933: V845 = SHL 0xa0 0x1
0x934: V846 = SUB 0x10000000000000000000000000000000000000000 0x1
0x936: V847 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0x937: V848 = 0x0
0x93b: M[0x0] = V847
0x93c: V849 = 0x6
0x93e: V850 = 0x20
0x940: M[0x20] = 0x6
0x941: V851 = 0x40
0x944: V852 = SHA3 0x0 0x40
0x945: V853 = S[V852]
0x946: V854 = 0xff
0x948: V855 = AND 0xff V853
0x949: V856 = 0x982
0x94c: JUMPI 0x982 V855
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x94d
[0x94d:0x981]
---
Predecessors: [0x92c]
Successors: []
---
0x94d PUSH1 0x40
0x94f DUP1
0x950 MLOAD
0x951 PUSH3 0x461bcd
0x955 PUSH1 0xe5
0x957 SHL
0x958 DUP2
0x959 MSTORE
0x95a PUSH1 0x20
0x95c PUSH1 0x4
0x95e DUP3
0x95f ADD
0x960 MSTORE
0x961 PUSH1 0x6
0x963 PUSH1 0x24
0x965 DUP3
0x966 ADD
0x967 MSTORE
0x968 PUSH6 0x333937bd32b7
0x96f PUSH1 0xd1
0x971 SHL
0x972 PUSH1 0x44
0x974 DUP3
0x975 ADD
0x976 MSTORE
0x977 SWAP1
0x978 MLOAD
0x979 SWAP1
0x97a DUP2
0x97b SWAP1
0x97c SUB
0x97d PUSH1 0x64
0x97f ADD
0x980 SWAP1
0x981 REVERT
---
0x94d: V857 = 0x40
0x950: V858 = M[0x40]
0x951: V859 = 0x461bcd
0x955: V860 = 0xe5
0x957: V861 = SHL 0xe5 0x461bcd
0x959: M[V858] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x95a: V862 = 0x20
0x95c: V863 = 0x4
0x95f: V864 = ADD V858 0x4
0x960: M[V864] = 0x20
0x961: V865 = 0x6
0x963: V866 = 0x24
0x966: V867 = ADD V858 0x24
0x967: M[V867] = 0x6
0x968: V868 = 0x333937bd32b7
0x96f: V869 = 0xd1
0x971: V870 = SHL 0xd1 0x333937bd32b7
0x972: V871 = 0x44
0x975: V872 = ADD V858 0x44
0x976: M[V872] = 0x66726f7a656e0000000000000000000000000000000000000000000000000000
0x978: V873 = M[0x40]
0x97c: V874 = SUB V858 V873
0x97d: V875 = 0x64
0x97f: V876 = ADD 0x64 V874
0x981: REVERT V873 V876
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x982
[0x982:0x98c]
---
Predecessors: [0x92c]
Successors: [0xba3]
---
0x982 JUMPDEST
0x983 PUSH2 0x98d
0x986 DUP4
0x987 DUP4
0x988 DUP4
0x989 PUSH2 0xba3
0x98c JUMP
---
0x982: JUMPDEST 
0x983: V877 = 0x98d
0x989: V878 = 0xba3
0x98c: JUMP 0xba3
---
Entry stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x98d, S2, S1, S0]
Exit stack: [V13, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x98d, S2, S1, S0]

================================

Block 0x98d
[0x98d:0x991]
---
Predecessors: [0xca5]
Successors: [0x486, 0x4a2]
---
0x98d JUMPDEST
0x98e POP
0x98f POP
0x990 POP
0x991 JUMP
---
0x98d: JUMPDEST 
0x991: JUMP S3
---
Entry stack: [V13, S8, S7, S6, S5, 0x0, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S8, S7, S6, S5, 0x0]

================================

Block 0x992
[0x992:0x99d]
---
Predecessors: [0x4ec, 0x703, 0xc2d]
Successors: [0x99e, 0xa21]
---
0x992 JUMPDEST
0x993 PUSH1 0x0
0x995 DUP2
0x996 DUP5
0x997 DUP5
0x998 GT
0x999 ISZERO
0x99a PUSH2 0xa21
0x99d JUMPI
---
0x992: JUMPDEST 
0x993: V879 = 0x0
0x998: V880 = GT S1 S2
0x999: V881 = ISZERO V880
0x99a: V882 = 0xa21
0x99d: JUMPI 0xa21 V881
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, S0]
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, S0]

================================

Block 0x99e
[0x99e:0x9cd]
---
Predecessors: [0x992]
Successors: [0x9ce]
---
0x99e PUSH1 0x40
0x9a0 MLOAD
0x9a1 PUSH3 0x461bcd
0x9a5 PUSH1 0xe5
0x9a7 SHL
0x9a8 DUP2
0x9a9 MSTORE
0x9aa PUSH1 0x4
0x9ac ADD
0x9ad DUP1
0x9ae DUP1
0x9af PUSH1 0x20
0x9b1 ADD
0x9b2 DUP3
0x9b3 DUP2
0x9b4 SUB
0x9b5 DUP3
0x9b6 MSTORE
0x9b7 DUP4
0x9b8 DUP2
0x9b9 DUP2
0x9ba MLOAD
0x9bb DUP2
0x9bc MSTORE
0x9bd PUSH1 0x20
0x9bf ADD
0x9c0 SWAP2
0x9c1 POP
0x9c2 DUP1
0x9c3 MLOAD
0x9c4 SWAP1
0x9c5 PUSH1 0x20
0x9c7 ADD
0x9c8 SWAP1
0x9c9 DUP1
0x9ca DUP4
0x9cb DUP4
0x9cc PUSH1 0x0
---
0x99e: V883 = 0x40
0x9a0: V884 = M[0x40]
0x9a1: V885 = 0x461bcd
0x9a5: V886 = 0xe5
0x9a7: V887 = SHL 0xe5 0x461bcd
0x9a9: M[V884] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0x9aa: V888 = 0x4
0x9ac: V889 = ADD 0x4 V884
0x9af: V890 = 0x20
0x9b1: V891 = ADD 0x20 V889
0x9b4: V892 = SUB V891 V889
0x9b6: M[V889] = V892
0x9ba: V893 = M[S0]
0x9bc: M[V891] = V893
0x9bd: V894 = 0x20
0x9bf: V895 = ADD 0x20 V891
0x9c3: V896 = M[S0]
0x9c5: V897 = 0x20
0x9c7: V898 = ADD 0x20 S0
0x9cc: V899 = 0x0
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 1
Stack additions: [S0, V889, V889, V895, V898, V896, V896, V895, V898, 0x0]
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0, V889, V889, V895, V898, V896, V896, V895, V898, 0x0]

================================

Block 0x9ce
[0x9ce:0x9d6]
---
Predecessors: [0x99e, 0x9d7]
Successors: [0x9d7, 0x9e6]
---
0x9ce JUMPDEST
0x9cf DUP4
0x9d0 DUP2
0x9d1 LT
0x9d2 ISZERO
0x9d3 PUSH2 0x9e6
0x9d6 JUMPI
---
0x9ce: JUMPDEST 
0x9d1: V900 = LT S0 V896
0x9d2: V901 = ISZERO V900
0x9d3: V902 = 0x9e6
0x9d6: JUMPI 0x9e6 V901
---
Entry stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V889, V889, V895, V898, V896, V896, V895, V898, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V889, V889, V895, V898, V896, V896, V895, V898, S0]

================================

Block 0x9d7
[0x9d7:0x9e5]
---
Predecessors: [0x9ce]
Successors: [0x9ce]
---
0x9d7 DUP2
0x9d8 DUP2
0x9d9 ADD
0x9da MLOAD
0x9db DUP4
0x9dc DUP3
0x9dd ADD
0x9de MSTORE
0x9df PUSH1 0x20
0x9e1 ADD
0x9e2 PUSH2 0x9ce
0x9e5 JUMP
---
0x9d9: V903 = ADD S0 V898
0x9da: V904 = M[V903]
0x9dd: V905 = ADD S0 V895
0x9de: M[V905] = V904
0x9df: V906 = 0x20
0x9e1: V907 = ADD 0x20 S0
0x9e2: V908 = 0x9ce
0x9e5: JUMP 0x9ce
---
Entry stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V889, V889, V895, V898, V896, V896, V895, V898, S0]
Stack pops: 3
Stack additions: [S2, S1, V907]
Exit stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V889, V889, V895, V898, V896, V896, V895, V898, V907]

================================

Block 0x9e6
[0x9e6:0x9f9]
---
Predecessors: [0x9ce]
Successors: [0x9fa, 0xa13]
---
0x9e6 JUMPDEST
0x9e7 POP
0x9e8 POP
0x9e9 POP
0x9ea POP
0x9eb SWAP1
0x9ec POP
0x9ed SWAP1
0x9ee DUP2
0x9ef ADD
0x9f0 SWAP1
0x9f1 PUSH1 0x1f
0x9f3 AND
0x9f4 DUP1
0x9f5 ISZERO
0x9f6 PUSH2 0xa13
0x9f9 JUMPI
---
0x9e6: JUMPDEST 
0x9ef: V909 = ADD V896 V895
0x9f1: V910 = 0x1f
0x9f3: V911 = AND 0x1f V896
0x9f5: V912 = ISZERO V911
0x9f6: V913 = 0xa13
0x9f9: JUMPI 0xa13 V912
---
Entry stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V889, V889, V895, V898, V896, V896, V895, V898, S0]
Stack pops: 7
Stack additions: [V909, V911]
Exit stack: [V13, S27, S26, S25, S24, S23, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, 0x0, S9, V889, V889, V909, V911]

================================

Block 0x9fa
[0x9fa:0xa12]
---
Predecessors: [0x9e6]
Successors: [0xa13]
---
0x9fa DUP1
0x9fb DUP3
0x9fc SUB
0x9fd DUP1
0x9fe MLOAD
0x9ff PUSH1 0x1
0xa01 DUP4
0xa02 PUSH1 0x20
0xa04 SUB
0xa05 PUSH2 0x100
0xa08 EXP
0xa09 SUB
0xa0a NOT
0xa0b AND
0xa0c DUP2
0xa0d MSTORE
0xa0e PUSH1 0x20
0xa10 ADD
0xa11 SWAP2
0xa12 POP
---
0x9fc: V914 = SUB V909 V911
0x9fe: V915 = M[V914]
0x9ff: V916 = 0x1
0xa02: V917 = 0x20
0xa04: V918 = SUB 0x20 V911
0xa05: V919 = 0x100
0xa08: V920 = EXP 0x100 V918
0xa09: V921 = SUB V920 0x1
0xa0a: V922 = NOT V921
0xa0b: V923 = AND V922 V915
0xa0d: M[V914] = V923
0xa0e: V924 = 0x20
0xa10: V925 = ADD 0x20 V914
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, S4, V889, V889, V909, V911]
Stack pops: 2
Stack additions: [V925, S0]
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, S4, V889, V889, V925, V911]

================================

Block 0xa13
[0xa13:0xa20]
---
Predecessors: [0x9e6, 0x9fa]
Successors: []
---
0xa13 JUMPDEST
0xa14 POP
0xa15 SWAP3
0xa16 POP
0xa17 POP
0xa18 POP
0xa19 PUSH1 0x40
0xa1b MLOAD
0xa1c DUP1
0xa1d SWAP2
0xa1e SUB
0xa1f SWAP1
0xa20 REVERT
---
0xa13: JUMPDEST 
0xa19: V926 = 0x40
0xa1b: V927 = M[0x40]
0xa1e: V928 = SUB S1 V927
0xa20: REVERT V927 V928
---
Entry stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0, S4, V889, V889, S1, V911]
Stack pops: 5
Stack additions: []
Exit stack: [V13, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, 0x0]

================================

Block 0xa21
[0xa21:0xa28]
---
Predecessors: [0x992]
Successors: [0x1ae, 0x513, 0xc70]
---
0xa21 JUMPDEST
0xa22 POP
0xa23 POP
0xa24 POP
0xa25 SWAP1
0xa26 SUB
0xa27 SWAP1
0xa28 JUMP
---
0xa21: JUMPDEST 
0xa26: V929 = SUB S4 S3
0xa28: JUMP S5
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, S0]
Stack pops: 6
Stack additions: [V929]
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, V929]

================================

Block 0xa29
[0xa29:0xa37]
---
Predecessors: [0x56e]
Successors: [0xa38, 0xa84]
---
0xa29 JUMPDEST
0xa2a PUSH1 0x1
0xa2c PUSH1 0x1
0xa2e PUSH1 0xa0
0xa30 SHL
0xa31 SUB
0xa32 DUP3
0xa33 AND
0xa34 PUSH2 0xa84
0xa37 JUMPI
---
0xa29: JUMPDEST 
0xa2a: V930 = 0x1
0xa2c: V931 = 0x1
0xa2e: V932 = 0xa0
0xa30: V933 = SHL 0xa0 0x1
0xa31: V934 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa33: V935 = AND V190 0xffffffffffffffffffffffffffffffffffffffff
0xa34: V936 = 0xa84
0xa37: JUMPI 0xa84 V935
---
Entry stack: [V13, 0x23e, V190, V193, 0x578, V190, V193]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x23e, V190, V193, 0x578, V190, V193]

================================

Block 0xa38
[0xa38:0xa83]
---
Predecessors: [0xa29]
Successors: []
---
0xa38 PUSH1 0x40
0xa3a DUP1
0xa3b MLOAD
0xa3c PUSH3 0x461bcd
0xa40 PUSH1 0xe5
0xa42 SHL
0xa43 DUP2
0xa44 MSTORE
0xa45 PUSH1 0x20
0xa47 PUSH1 0x4
0xa49 DUP3
0xa4a ADD
0xa4b MSTORE
0xa4c PUSH1 0x1f
0xa4e PUSH1 0x24
0xa50 DUP3
0xa51 ADD
0xa52 MSTORE
0xa53 PUSH32 0x45524332303a206d696e7420746f20746865207a65726f206164647265737300
0xa74 PUSH1 0x44
0xa76 DUP3
0xa77 ADD
0xa78 MSTORE
0xa79 SWAP1
0xa7a MLOAD
0xa7b SWAP1
0xa7c DUP2
0xa7d SWAP1
0xa7e SUB
0xa7f PUSH1 0x64
0xa81 ADD
0xa82 SWAP1
0xa83 REVERT
---
0xa38: V937 = 0x40
0xa3b: V938 = M[0x40]
0xa3c: V939 = 0x461bcd
0xa40: V940 = 0xe5
0xa42: V941 = SHL 0xe5 0x461bcd
0xa44: M[V938] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xa45: V942 = 0x20
0xa47: V943 = 0x4
0xa4a: V944 = ADD V938 0x4
0xa4b: M[V944] = 0x20
0xa4c: V945 = 0x1f
0xa4e: V946 = 0x24
0xa51: V947 = ADD V938 0x24
0xa52: M[V947] = 0x1f
0xa53: V948 = 0x45524332303a206d696e7420746f20746865207a65726f206164647265737300
0xa74: V949 = 0x44
0xa77: V950 = ADD V938 0x44
0xa78: M[V950] = 0x45524332303a206d696e7420746f20746865207a65726f206164647265737300
0xa7a: V951 = M[0x40]
0xa7e: V952 = SUB V938 V951
0xa7f: V953 = 0x64
0xa81: V954 = ADD 0x64 V952
0xa83: REVERT V951 V954
---
Entry stack: [V13, 0x23e, V190, V193, 0x578, V190, V193]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23e, V190, V193, 0x578, V190, V193]

================================

Block 0xa84
[0xa84:0xa96]
---
Predecessors: [0xa29, 0xb5e]
Successors: [0xae3]
---
0xa84 JUMPDEST
0xa85 PUSH1 0x2
0xa87 SLOAD
0xa88 PUSH2 0xa97
0xa8b SWAP1
0xa8c DUP3
0xa8d PUSH4 0xffffffff
0xa92 PUSH2 0xae3
0xa95 AND
0xa96 JUMP
---
0xa84: JUMPDEST 
0xa85: V955 = 0x2
0xa87: V956 = S[0x2]
0xa88: V957 = 0xa97
0xa8d: V958 = 0xffffffff
0xa92: V959 = 0xae3
0xa95: V960 = AND 0xae3 0xffffffff
0xa96: JUMP 0xae3
---
Entry stack: [V13, 0x23e, S4, S3, 0x578, S1, S0]
Stack pops: 1
Stack additions: [S0, 0xa97, V956, S0]
Exit stack: [V13, 0x23e, S4, S3, 0x578, S1, S0, 0xa97, V956, S0]

================================

Block 0xa97
[0xa97:0xac2]
---
Predecessors: [0xb3d]
Successors: [0xae3]
---
0xa97 JUMPDEST
0xa98 PUSH1 0x2
0xa9a SSTORE
0xa9b PUSH1 0x1
0xa9d PUSH1 0x1
0xa9f PUSH1 0xa0
0xaa1 SHL
0xaa2 SUB
0xaa3 DUP3
0xaa4 AND
0xaa5 PUSH1 0x0
0xaa7 SWAP1
0xaa8 DUP2
0xaa9 MSTORE
0xaaa PUSH1 0x20
0xaac DUP2
0xaad SWAP1
0xaae MSTORE
0xaaf PUSH1 0x40
0xab1 SWAP1
0xab2 SHA3
0xab3 SLOAD
0xab4 PUSH2 0xac3
0xab7 SWAP1
0xab8 DUP3
0xab9 PUSH4 0xffffffff
0xabe PUSH2 0xae3
0xac1 AND
0xac2 JUMP
---
0xa97: JUMPDEST 
0xa98: V961 = 0x2
0xa9a: S[0x2] = S0
0xa9b: V962 = 0x1
0xa9d: V963 = 0x1
0xa9f: V964 = 0xa0
0xaa1: V965 = SHL 0xa0 0x1
0xaa2: V966 = SUB 0x10000000000000000000000000000000000000000 0x1
0xaa4: V967 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xaa5: V968 = 0x0
0xaa9: M[0x0] = V967
0xaaa: V969 = 0x20
0xaae: M[0x20] = 0x0
0xaaf: V970 = 0x40
0xab2: V971 = SHA3 0x0 0x40
0xab3: V972 = S[V971]
0xab4: V973 = 0xac3
0xab9: V974 = 0xffffffff
0xabe: V975 = 0xae3
0xac1: V976 = AND 0xae3 0xffffffff
0xac2: JUMP 0xae3
---
Entry stack: [V13, S13, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, 0xac3, V972, S1]
Exit stack: [V13, S13, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, 0xac3, V972, S1]

================================

Block 0xac3
[0xac3:0xae2]
---
Predecessors: [0xb3d]
Successors: [0x486, 0x578]
---
0xac3 JUMPDEST
0xac4 PUSH1 0x1
0xac6 PUSH1 0x1
0xac8 PUSH1 0xa0
0xaca SHL
0xacb SUB
0xacc SWAP1
0xacd SWAP3
0xace AND
0xacf PUSH1 0x0
0xad1 SWAP1
0xad2 DUP2
0xad3 MSTORE
0xad4 PUSH1 0x20
0xad6 DUP2
0xad7 SWAP1
0xad8 MSTORE
0xad9 PUSH1 0x40
0xadb SWAP1
0xadc SHA3
0xadd SWAP2
0xade SWAP1
0xadf SWAP2
0xae0 SSTORE
0xae1 POP
0xae2 JUMP
---
0xac3: JUMPDEST 
0xac4: V977 = 0x1
0xac6: V978 = 0x1
0xac8: V979 = 0xa0
0xaca: V980 = SHL 0xa0 0x1
0xacb: V981 = SUB 0x10000000000000000000000000000000000000000 0x1
0xace: V982 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xacf: V983 = 0x0
0xad3: M[0x0] = V982
0xad4: V984 = 0x20
0xad8: M[0x20] = 0x0
0xad9: V985 = 0x40
0xadc: V986 = SHA3 0x0 0x40
0xae0: S[V986] = S0
0xae2: JUMP S3
---
Entry stack: [V13, S13, S12, S11, S10, 0x0, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, 0x0, S8, S7, S6, S5, S4]

================================

Block 0xae3
[0xae3:0xaf0]
---
Predecessors: [0x5a3, 0xa84, 0xa97, 0xc70]
Successors: [0xaf1, 0xb3d]
---
0xae3 JUMPDEST
0xae4 PUSH1 0x0
0xae6 DUP3
0xae7 DUP3
0xae8 ADD
0xae9 DUP4
0xaea DUP2
0xaeb LT
0xaec ISZERO
0xaed PUSH2 0xb3d
0xaf0 JUMPI
---
0xae3: JUMPDEST 
0xae4: V987 = 0x0
0xae8: V988 = ADD S0 S1
0xaeb: V989 = LT V988 S1
0xaec: V990 = ISZERO V989
0xaed: V991 = 0xb3d
0xaf0: JUMPI 0xb3d V990
---
Entry stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V988]
Exit stack: [V13, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x0, V988]

================================

Block 0xaf1
[0xaf1:0xb3c]
---
Predecessors: [0xae3]
Successors: []
---
0xaf1 PUSH1 0x40
0xaf3 DUP1
0xaf4 MLOAD
0xaf5 PUSH3 0x461bcd
0xaf9 PUSH1 0xe5
0xafb SHL
0xafc DUP2
0xafd MSTORE
0xafe PUSH1 0x20
0xb00 PUSH1 0x4
0xb02 DUP3
0xb03 ADD
0xb04 MSTORE
0xb05 PUSH1 0x1b
0xb07 PUSH1 0x24
0xb09 DUP3
0xb0a ADD
0xb0b MSTORE
0xb0c PUSH32 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xb2d PUSH1 0x44
0xb2f DUP3
0xb30 ADD
0xb31 MSTORE
0xb32 SWAP1
0xb33 MLOAD
0xb34 SWAP1
0xb35 DUP2
0xb36 SWAP1
0xb37 SUB
0xb38 PUSH1 0x64
0xb3a ADD
0xb3b SWAP1
0xb3c REVERT
---
0xaf1: V992 = 0x40
0xaf4: V993 = M[0x40]
0xaf5: V994 = 0x461bcd
0xaf9: V995 = 0xe5
0xafb: V996 = SHL 0xe5 0x461bcd
0xafd: M[V993] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xafe: V997 = 0x20
0xb00: V998 = 0x4
0xb03: V999 = ADD V993 0x4
0xb04: M[V999] = 0x20
0xb05: V1000 = 0x1b
0xb07: V1001 = 0x24
0xb0a: V1002 = ADD V993 0x24
0xb0b: M[V1002] = 0x1b
0xb0c: V1003 = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xb2d: V1004 = 0x44
0xb30: V1005 = ADD V993 0x44
0xb31: M[V1005] = 0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000
0xb33: V1006 = M[0x40]
0xb37: V1007 = SUB V993 V1006
0xb38: V1008 = 0x64
0xb3a: V1009 = ADD 0x64 V1007
0xb3c: REVERT V1006 V1009
---
Entry stack: [V13, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V988]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V988]

================================

Block 0xb3d
[0xb3d:0xb43]
---
Predecessors: [0xae3]
Successors: [0x513, 0xa97, 0xac3, 0xca5]
---
0xb3d JUMPDEST
0xb3e SWAP4
0xb3f SWAP3
0xb40 POP
0xb41 POP
0xb42 POP
0xb43 JUMP
---
0xb3d: JUMPDEST 
0xb43: JUMP S4
---
Entry stack: [V13, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, 0x0, V988]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V13, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, V988]

================================

Block 0xb44
[0xb44:0xb5d]
---
Predecessors: [0x7da]
Successors: [0x7e3]
---
0xb44 JUMPDEST
0xb45 PUSH1 0x1
0xb47 PUSH1 0x1
0xb49 PUSH1 0xa0
0xb4b SHL
0xb4c SUB
0xb4d AND
0xb4e PUSH1 0x0
0xb50 SWAP1
0xb51 DUP2
0xb52 MSTORE
0xb53 PUSH1 0x20
0xb55 DUP2
0xb56 SWAP1
0xb57 MSTORE
0xb58 PUSH1 0x40
0xb5a DUP2
0xb5b SHA3
0xb5c SSTORE
0xb5d JUMP
---
0xb44: JUMPDEST 
0xb45: V1010 = 0x1
0xb47: V1011 = 0x1
0xb49: V1012 = 0xa0
0xb4b: V1013 = SHL 0xa0 0x1
0xb4c: V1014 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb4d: V1015 = AND 0xffffffffffffffffffffffffffffffffffffffff V354
0xb4e: V1016 = 0x0
0xb52: M[0x0] = V1015
0xb53: V1017 = 0x20
0xb57: M[0x20] = 0x0
0xb58: V1018 = 0x40
0xb5b: V1019 = SHA3 0x0 0x40
0xb5c: S[V1019] = 0x0
0xb5d: JUMP 0x7e3
---
Entry stack: [V13, 0x23e, V354, 0x7e3, V354]
Stack pops: 2
Stack additions: []
Exit stack: [V13, 0x23e, V354]

================================

Block 0xb5e
[0xb5e:0xb6c]
---
Predecessors: [0x832]
Successors: [0xa84, 0xb6d]
---
0xb5e JUMPDEST
0xb5f PUSH1 0x1
0xb61 PUSH1 0x1
0xb63 PUSH1 0xa0
0xb65 SHL
0xb66 SUB
0xb67 DUP3
0xb68 AND
0xb69 PUSH2 0xa84
0xb6c JUMPI
---
0xb5e: JUMPDEST 
0xb5f: V1020 = 0x1
0xb61: V1021 = 0x1
0xb63: V1022 = 0xa0
0xb65: V1023 = SHL 0xa0 0x1
0xb66: V1024 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb68: V1025 = AND V371 0xffffffffffffffffffffffffffffffffffffffff
0xb69: V1026 = 0xa84
0xb6c: JUMPI 0xa84 V1025
---
Entry stack: [V13, 0x23e, V371, V374, 0x578, V371, V374]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, 0x23e, V371, V374, 0x578, V371, V374]

================================

Block 0xb6d
[0xb6d:0xba2]
---
Predecessors: [0xb5e]
Successors: []
---
0xb6d PUSH1 0x40
0xb6f MLOAD
0xb70 PUSH3 0x461bcd
0xb74 PUSH1 0xe5
0xb76 SHL
0xb77 DUP2
0xb78 MSTORE
0xb79 PUSH1 0x4
0xb7b ADD
0xb7c DUP1
0xb7d DUP1
0xb7e PUSH1 0x20
0xb80 ADD
0xb81 DUP3
0xb82 DUP2
0xb83 SUB
0xb84 DUP3
0xb85 MSTORE
0xb86 PUSH1 0x24
0xb88 DUP2
0xb89 MSTORE
0xb8a PUSH1 0x20
0xb8c ADD
0xb8d DUP1
0xb8e PUSH2 0xd6b
0xb91 PUSH1 0x24
0xb93 SWAP2
0xb94 CODECOPY
0xb95 PUSH1 0x40
0xb97 ADD
0xb98 SWAP2
0xb99 POP
0xb9a POP
0xb9b PUSH1 0x40
0xb9d MLOAD
0xb9e DUP1
0xb9f SWAP2
0xba0 SUB
0xba1 SWAP1
0xba2 REVERT
---
0xb6d: V1027 = 0x40
0xb6f: V1028 = M[0x40]
0xb70: V1029 = 0x461bcd
0xb74: V1030 = 0xe5
0xb76: V1031 = SHL 0xe5 0x461bcd
0xb78: M[V1028] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xb79: V1032 = 0x4
0xb7b: V1033 = ADD 0x4 V1028
0xb7e: V1034 = 0x20
0xb80: V1035 = ADD 0x20 V1033
0xb83: V1036 = SUB V1035 V1033
0xb85: M[V1033] = V1036
0xb86: V1037 = 0x24
0xb89: M[V1035] = 0x24
0xb8a: V1038 = 0x20
0xb8c: V1039 = ADD 0x20 V1035
0xb8e: V1040 = 0xd6b
0xb91: V1041 = 0x24
0xb94: CODECOPY V1039 0xd6b 0x24
0xb95: V1042 = 0x40
0xb97: V1043 = ADD 0x40 V1039
0xb9b: V1044 = 0x40
0xb9d: V1045 = M[0x40]
0xba0: V1046 = SUB V1043 V1045
0xba2: REVERT V1045 V1046
---
Entry stack: [V13, 0x23e, V371, V374, 0x578, V371, V374]
Stack pops: 0
Stack additions: []
Exit stack: [V13, 0x23e, V371, V374, 0x578, V371, V374]

================================

Block 0xba3
[0xba3:0xbb1]
---
Predecessors: [0x982]
Successors: [0xbb2, 0xbe8]
---
0xba3 JUMPDEST
0xba4 PUSH1 0x1
0xba6 PUSH1 0x1
0xba8 PUSH1 0xa0
0xbaa SHL
0xbab SUB
0xbac DUP4
0xbad AND
0xbae PUSH2 0xbe8
0xbb1 JUMPI
---
0xba3: JUMPDEST 
0xba4: V1047 = 0x1
0xba6: V1048 = 0x1
0xba8: V1049 = 0xa0
0xbaa: V1050 = SHL 0xa0 0x1
0xbab: V1051 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbad: V1052 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xbae: V1053 = 0xbe8
0xbb1: JUMPI 0xbe8 V1052
---
Entry stack: [V13, S12, S11, S10, S9, 0x0, {0x486, 0x4a2}, S6, S5, S4, 0x98d, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V13, S12, S11, S10, S9, 0x0, {0x486, 0x4a2}, S6, S5, S4, 0x98d, S2, S1, S0]

================================

Block 0xbb2
[0xbb2:0xbe7]
---
Predecessors: [0xba3]
Successors: []
---
0xbb2 PUSH1 0x40
0xbb4 MLOAD
0xbb5 PUSH3 0x461bcd
0xbb9 PUSH1 0xe5
0xbbb SHL
0xbbc DUP2
0xbbd MSTORE
0xbbe PUSH1 0x4
0xbc0 ADD
0xbc1 DUP1
0xbc2 DUP1
0xbc3 PUSH1 0x20
0xbc5 ADD
0xbc6 DUP3
0xbc7 DUP2
0xbc8 SUB
0xbc9 DUP3
0xbca MSTORE
0xbcb PUSH1 0x25
0xbcd DUP2
0xbce MSTORE
0xbcf PUSH1 0x20
0xbd1 ADD
0xbd2 DUP1
0xbd3 PUSH2 0xdb7
0xbd6 PUSH1 0x25
0xbd8 SWAP2
0xbd9 CODECOPY
0xbda PUSH1 0x40
0xbdc ADD
0xbdd SWAP2
0xbde POP
0xbdf POP
0xbe0 PUSH1 0x40
0xbe2 MLOAD
0xbe3 DUP1
0xbe4 SWAP2
0xbe5 SUB
0xbe6 SWAP1
0xbe7 REVERT
---
0xbb2: V1054 = 0x40
0xbb4: V1055 = M[0x40]
0xbb5: V1056 = 0x461bcd
0xbb9: V1057 = 0xe5
0xbbb: V1058 = SHL 0xe5 0x461bcd
0xbbd: M[V1055] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xbbe: V1059 = 0x4
0xbc0: V1060 = ADD 0x4 V1055
0xbc3: V1061 = 0x20
0xbc5: V1062 = ADD 0x20 V1060
0xbc8: V1063 = SUB V1062 V1060
0xbca: M[V1060] = V1063
0xbcb: V1064 = 0x25
0xbce: M[V1062] = 0x25
0xbcf: V1065 = 0x20
0xbd1: V1066 = ADD 0x20 V1062
0xbd3: V1067 = 0xdb7
0xbd6: V1068 = 0x25
0xbd9: CODECOPY V1066 0xdb7 0x25
0xbda: V1069 = 0x40
0xbdc: V1070 = ADD 0x40 V1066
0xbe0: V1071 = 0x40
0xbe2: V1072 = M[0x40]
0xbe5: V1073 = SUB V1070 V1072
0xbe7: REVERT V1072 V1073
---
Entry stack: [V13, S12, S11, S10, S9, 0x0, {0x486, 0x4a2}, S6, S5, S4, 0x98d, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, 0x0, {0x486, 0x4a2}, S6, S5, S4, 0x98d, S2, S1, S0]

================================

Block 0xbe8
[0xbe8:0xbf6]
---
Predecessors: [0xba3]
Successors: [0xbf7, 0xc2d]
---
0xbe8 JUMPDEST
0xbe9 PUSH1 0x1
0xbeb PUSH1 0x1
0xbed PUSH1 0xa0
0xbef SHL
0xbf0 SUB
0xbf1 DUP3
0xbf2 AND
0xbf3 PUSH2 0xc2d
0xbf6 JUMPI
---
0xbe8: JUMPDEST 
0xbe9: V1074 = 0x1
0xbeb: V1075 = 0x1
0xbed: V1076 = 0xa0
0xbef: V1077 = SHL 0xa0 0x1
0xbf0: V1078 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbf2: V1079 = AND S1 0xffffffffffffffffffffffffffffffffffffffff
0xbf3: V1080 = 0xc2d
0xbf6: JUMPI 0xc2d V1079
---
Entry stack: [V13, S12, S11, S10, S9, 0x0, {0x486, 0x4a2}, S6, S5, S4, 0x98d, S2, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V13, S12, S11, S10, S9, 0x0, {0x486, 0x4a2}, S6, S5, S4, 0x98d, S2, S1, S0]

================================

Block 0xbf7
[0xbf7:0xc2c]
---
Predecessors: [0xbe8]
Successors: []
---
0xbf7 PUSH1 0x40
0xbf9 MLOAD
0xbfa PUSH3 0x461bcd
0xbfe PUSH1 0xe5
0xc00 SHL
0xc01 DUP2
0xc02 MSTORE
0xc03 PUSH1 0x4
0xc05 ADD
0xc06 DUP1
0xc07 DUP1
0xc08 PUSH1 0x20
0xc0a ADD
0xc0b DUP3
0xc0c DUP2
0xc0d SUB
0xc0e DUP3
0xc0f MSTORE
0xc10 PUSH1 0x23
0xc12 DUP2
0xc13 MSTORE
0xc14 PUSH1 0x20
0xc16 ADD
0xc17 DUP1
0xc18 PUSH2 0xd00
0xc1b PUSH1 0x23
0xc1d SWAP2
0xc1e CODECOPY
0xc1f PUSH1 0x40
0xc21 ADD
0xc22 SWAP2
0xc23 POP
0xc24 POP
0xc25 PUSH1 0x40
0xc27 MLOAD
0xc28 DUP1
0xc29 SWAP2
0xc2a SUB
0xc2b SWAP1
0xc2c REVERT
---
0xbf7: V1081 = 0x40
0xbf9: V1082 = M[0x40]
0xbfa: V1083 = 0x461bcd
0xbfe: V1084 = 0xe5
0xc00: V1085 = SHL 0xe5 0x461bcd
0xc02: M[V1082] = 0x8c379a000000000000000000000000000000000000000000000000000000000
0xc03: V1086 = 0x4
0xc05: V1087 = ADD 0x4 V1082
0xc08: V1088 = 0x20
0xc0a: V1089 = ADD 0x20 V1087
0xc0d: V1090 = SUB V1089 V1087
0xc0f: M[V1087] = V1090
0xc10: V1091 = 0x23
0xc13: M[V1089] = 0x23
0xc14: V1092 = 0x20
0xc16: V1093 = ADD 0x20 V1089
0xc18: V1094 = 0xd00
0xc1b: V1095 = 0x23
0xc1e: CODECOPY V1093 0xd00 0x23
0xc1f: V1096 = 0x40
0xc21: V1097 = ADD 0x40 V1093
0xc25: V1098 = 0x40
0xc27: V1099 = M[0x40]
0xc2a: V1100 = SUB V1097 V1099
0xc2c: REVERT V1099 V1100
---
Entry stack: [V13, S12, S11, S10, S9, 0x0, {0x486, 0x4a2}, S6, S5, S4, 0x98d, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V13, S12, S11, S10, S9, 0x0, {0x486, 0x4a2}, S6, S5, S4, 0x98d, S2, S1, S0]

================================

Block 0xc2d
[0xc2d:0xc6f]
---
Predecessors: [0xbe8]
Successors: [0x992]
---
0xc2d JUMPDEST
0xc2e PUSH2 0xc70
0xc31 DUP2
0xc32 PUSH1 0x40
0xc34 MLOAD
0xc35 DUP1
0xc36 PUSH1 0x60
0xc38 ADD
0xc39 PUSH1 0x40
0xc3b MSTORE
0xc3c DUP1
0xc3d PUSH1 0x26
0xc3f DUP2
0xc40 MSTORE
0xc41 PUSH1 0x20
0xc43 ADD
0xc44 PUSH2 0xd45
0xc47 PUSH1 0x26
0xc49 SWAP2
0xc4a CODECOPY
0xc4b PUSH1 0x1
0xc4d PUSH1 0x1
0xc4f PUSH1 0xa0
0xc51 SHL
0xc52 SUB
0xc53 DUP7
0xc54 AND
0xc55 PUSH1 0x0
0xc57 SWAP1
0xc58 DUP2
0xc59 MSTORE
0xc5a PUSH1 0x20
0xc5c DUP2
0xc5d SWAP1
0xc5e MSTORE
0xc5f PUSH1 0x40
0xc61 SWAP1
0xc62 SHA3
0xc63 SLOAD
0xc64 SWAP2
0xc65 SWAP1
0xc66 PUSH4 0xffffffff
0xc6b PUSH2 0x992
0xc6e AND
0xc6f JUMP
---
0xc2d: JUMPDEST 
0xc2e: V1101 = 0xc70
0xc32: V1102 = 0x40
0xc34: V1103 = M[0x40]
0xc36: V1104 = 0x60
0xc38: V1105 = ADD 0x60 V1103
0xc39: V1106 = 0x40
0xc3b: M[0x40] = V1105
0xc3d: V1107 = 0x26
0xc40: M[V1103] = 0x26
0xc41: V1108 = 0x20
0xc43: V1109 = ADD 0x20 V1103
0xc44: V1110 = 0xd45
0xc47: V1111 = 0x26
0xc4a: CODECOPY V1109 0xd45 0x26
0xc4b: V1112 = 0x1
0xc4d: V1113 = 0x1
0xc4f: V1114 = 0xa0
0xc51: V1115 = SHL 0xa0 0x1
0xc52: V1116 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc54: V1117 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xc55: V1118 = 0x0
0xc59: M[0x0] = V1117
0xc5a: V1119 = 0x20
0xc5e: M[0x20] = 0x0
0xc5f: V1120 = 0x40
0xc62: V1121 = SHA3 0x0 0x40
0xc63: V1122 = S[V1121]
0xc66: V1123 = 0xffffffff
0xc6b: V1124 = 0x992
0xc6e: V1125 = AND 0x992 0xffffffff
0xc6f: JUMP 0x992
---
Entry stack: [V13, S12, S11, S10, S9, 0x0, {0x486, 0x4a2}, S6, S5, S4, 0x98d, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0, 0xc70, V1122, S0, V1103]
Exit stack: [V13, S12, S11, S10, S9, 0x0, {0x486, 0x4a2}, S6, S5, S4, 0x98d, S2, S1, S0, 0xc70, V1122, S0, V1103]

================================

Block 0xc70
[0xc70:0xca4]
---
Predecessors: [0xa21]
Successors: [0xae3]
---
0xc70 JUMPDEST
0xc71 PUSH1 0x1
0xc73 PUSH1 0x1
0xc75 PUSH1 0xa0
0xc77 SHL
0xc78 SUB
0xc79 DUP1
0xc7a DUP6
0xc7b AND
0xc7c PUSH1 0x0
0xc7e SWAP1
0xc7f DUP2
0xc80 MSTORE
0xc81 PUSH1 0x20
0xc83 DUP2
0xc84 SWAP1
0xc85 MSTORE
0xc86 PUSH1 0x40
0xc88 DUP1
0xc89 DUP3
0xc8a SHA3
0xc8b SWAP4
0xc8c SWAP1
0xc8d SWAP4
0xc8e SSTORE
0xc8f SWAP1
0xc90 DUP5
0xc91 AND
0xc92 DUP2
0xc93 MSTORE
0xc94 SHA3
0xc95 SLOAD
0xc96 PUSH2 0xca5
0xc99 SWAP1
0xc9a DUP3
0xc9b PUSH4 0xffffffff
0xca0 PUSH2 0xae3
0xca3 AND
0xca4 JUMP
---
0xc70: JUMPDEST 
0xc71: V1126 = 0x1
0xc73: V1127 = 0x1
0xc75: V1128 = 0xa0
0xc77: V1129 = SHL 0xa0 0x1
0xc78: V1130 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7b: V1131 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xc7c: V1132 = 0x0
0xc80: M[0x0] = V1131
0xc81: V1133 = 0x20
0xc85: M[0x20] = 0x0
0xc86: V1134 = 0x40
0xc8a: V1135 = SHA3 0x0 0x40
0xc8e: S[V1135] = V929
0xc91: V1136 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xc93: M[0x0] = V1136
0xc94: V1137 = SHA3 0x0 0x40
0xc95: V1138 = S[V1137]
0xc96: V1139 = 0xca5
0xc9b: V1140 = 0xffffffff
0xca0: V1141 = 0xae3
0xca3: V1142 = AND 0xae3 0xffffffff
0xca4: JUMP 0xae3
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V929]
Stack pops: 4
Stack additions: [S3, S2, S1, 0xca5, V1138, S1]
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, 0xca5, V1138, S1]

================================

Block 0xca5
[0xca5:0xcfe]
---
Predecessors: [0xb3d]
Successors: [0x486, 0x518, 0x98d]
---
0xca5 JUMPDEST
0xca6 PUSH1 0x1
0xca8 PUSH1 0x1
0xcaa PUSH1 0xa0
0xcac SHL
0xcad SUB
0xcae DUP1
0xcaf DUP5
0xcb0 AND
0xcb1 PUSH1 0x0
0xcb3 DUP2
0xcb4 DUP2
0xcb5 MSTORE
0xcb6 PUSH1 0x20
0xcb8 DUP2
0xcb9 DUP2
0xcba MSTORE
0xcbb PUSH1 0x40
0xcbd SWAP2
0xcbe DUP3
0xcbf SWAP1
0xcc0 SHA3
0xcc1 SWAP5
0xcc2 SWAP1
0xcc3 SWAP5
0xcc4 SSTORE
0xcc5 DUP1
0xcc6 MLOAD
0xcc7 DUP6
0xcc8 DUP2
0xcc9 MSTORE
0xcca SWAP1
0xccb MLOAD
0xccc SWAP2
0xccd SWAP4
0xcce SWAP3
0xccf DUP8
0xcd0 AND
0xcd1 SWAP3
0xcd2 PUSH32 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xcf3 SWAP3
0xcf4 SWAP2
0xcf5 DUP3
0xcf6 SWAP1
0xcf7 SUB
0xcf8 ADD
0xcf9 SWAP1
0xcfa LOG3
0xcfb POP
0xcfc POP
0xcfd POP
0xcfe JUMP
---
0xca5: JUMPDEST 
0xca6: V1143 = 0x1
0xca8: V1144 = 0x1
0xcaa: V1145 = 0xa0
0xcac: V1146 = SHL 0xa0 0x1
0xcad: V1147 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcb0: V1148 = AND S2 0xffffffffffffffffffffffffffffffffffffffff
0xcb1: V1149 = 0x0
0xcb5: M[0x0] = V1148
0xcb6: V1150 = 0x20
0xcba: M[0x20] = 0x0
0xcbb: V1151 = 0x40
0xcc0: V1152 = SHA3 0x0 0x40
0xcc4: S[V1152] = V988
0xcc6: V1153 = M[0x40]
0xcc9: M[V1153] = S1
0xccb: V1154 = M[0x40]
0xcd0: V1155 = AND S3 0xffffffffffffffffffffffffffffffffffffffff
0xcd2: V1156 = 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef
0xcf7: V1157 = SUB V1153 V1154
0xcf8: V1158 = ADD V1157 0x20
0xcfa: LOG V1154 V1158 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef V1155 V1148
0xcfe: JUMP S4
---
Entry stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, V988]
Stack pops: 5
Stack additions: []
Exit stack: [V13, S13, S12, S11, S10, S9, S8, S7, S6, S5]

================================

Block 0xcff
[0xcff:0xe5c]
---
Predecessors: []
Successors: []
---
0xcff INVALID
0xd00 GASLIMIT
0xd01 MSTORE
0xd02 NUMBER
0xd03 ORIGIN
0xd04 ADDRESS
0xd05 GASPRICE
0xd06 SHA3
0xd07 PUSH21 0x72616e7366657220746f20746865207a65726f2061
0xd1d PUSH5 0x6472657373
0xd23 GASLIMIT
0xd24 MSTORE
0xd25 NUMBER
0xd26 ORIGIN
0xd27 ADDRESS
0xd28 GASPRICE
0xd29 SHA3
0xd2a PUSH2 0x7070
0xd2d PUSH19 0x6f766520746f20746865207a65726f20616464
0xd41 PUSH19 0x65737345524332303a207472616e7366657220
0xd55 PUSH2 0x6d6f
0xd58 PUSH22 0x6e7420657863656564732062616c616e636545524332
0xd6f ADDRESS
0xd70 GASPRICE
0xd71 SHA3
0xd72 MISSING 0x5f
0xd73 PUSH24 0x6974686472617720746f20746865207a65726f2061646472
0xd8c PUSH6 0x737345524332
0xd93 ADDRESS
0xd94 GASPRICE
0xd95 SHA3
0xd96 PUSH21 0x72616e7366657220616d6f756e7420657863656564
0xdac PUSH20 0x20616c6c6f77616e636545524332303a20747261
0xdc1 PUSH15 0x736665722066726f6d20746865207a
0xdd1 PUSH6 0x726f20616464
0xdd8 PUSH19 0x65737345524332303a20617070726f76652066
0xdec PUSH19 0x6f6d20746865207a65726f2061646472657373
0xe00 GASLIMIT
0xe01 MSTORE
0xe02 NUMBER
0xe03 ORIGIN
0xe04 ADDRESS
0xe05 GASPRICE
0xe06 SHA3
0xe07 PUSH5 0x6563726561
0xe0d PUSH20 0x656420616c6c6f77616e63652062656c6f77207a
0xe22 PUSH6 0x726fa265627a
0xe29 PUSH27 0x7231582037bfa9b1371edd5b67d1bf44ea73d3992f9b98d15e8b30
0xe45 GAS
0xe46 MISSING 0xe9
0xe47 PUSH21 0x79fe1364f40764736f6c63430005110032
---
0xcff: INVALID 
0xd00: V1159 = GASLIMIT
0xd01: M[V1159] = S0
0xd02: V1160 = NUMBER
0xd03: V1161 = ORIGIN
0xd04: V1162 = ADDRESS
0xd05: V1163 = GASPRICE
0xd06: V1164 = SHA3 V1163 V1162
0xd07: V1165 = 0x72616e7366657220746f20746865207a65726f2061
0xd1d: V1166 = 0x6472657373
0xd23: V1167 = GASLIMIT
0xd24: M[V1167] = 0x6472657373
0xd25: V1168 = NUMBER
0xd26: V1169 = ORIGIN
0xd27: V1170 = ADDRESS
0xd28: V1171 = GASPRICE
0xd29: V1172 = SHA3 V1171 V1170
0xd2a: V1173 = 0x7070
0xd2d: V1174 = 0x6f766520746f20746865207a65726f20616464
0xd41: V1175 = 0x65737345524332303a207472616e7366657220
0xd55: V1176 = 0x6d6f
0xd58: V1177 = 0x6e7420657863656564732062616c616e636545524332
0xd6f: V1178 = ADDRESS
0xd70: V1179 = GASPRICE
0xd71: V1180 = SHA3 V1179 V1178
0xd72: MISSING 0x5f
0xd73: V1181 = 0x6974686472617720746f20746865207a65726f2061646472
0xd8c: V1182 = 0x737345524332
0xd93: V1183 = ADDRESS
0xd94: V1184 = GASPRICE
0xd95: V1185 = SHA3 V1184 V1183
0xd96: V1186 = 0x72616e7366657220616d6f756e7420657863656564
0xdac: V1187 = 0x20616c6c6f77616e636545524332303a20747261
0xdc1: V1188 = 0x736665722066726f6d20746865207a
0xdd1: V1189 = 0x726f20616464
0xdd8: V1190 = 0x65737345524332303a20617070726f76652066
0xdec: V1191 = 0x6f6d20746865207a65726f2061646472657373
0xe00: V1192 = GASLIMIT
0xe01: M[V1192] = 0x6f6d20746865207a65726f2061646472657373
0xe02: V1193 = NUMBER
0xe03: V1194 = ORIGIN
0xe04: V1195 = ADDRESS
0xe05: V1196 = GASPRICE
0xe06: V1197 = SHA3 V1196 V1195
0xe07: V1198 = 0x6563726561
0xe0d: V1199 = 0x656420616c6c6f77616e63652062656c6f77207a
0xe22: V1200 = 0x726fa265627a
0xe29: V1201 = 0x7231582037bfa9b1371edd5b67d1bf44ea73d3992f9b98d15e8b30
0xe45: V1202 = GAS
0xe46: MISSING 0xe9
0xe47: V1203 = 0x79fe1364f40764736f6c63430005110032
---
Entry stack: []
Stack pops: 0
Stack additions: [V1180, 0x6e7420657863656564732062616c616e636545524332, 0x6d6f, 0x65737345524332303a207472616e7366657220, 0x6f766520746f20746865207a65726f20616464, 0x7070, V1172, V1169, V1168, 0x72616e7366657220746f20746865207a65726f2061, V1164, V1161, V1160, V1202, 0x7231582037bfa9b1371edd5b67d1bf44ea73d3992f9b98d15e8b30, 0x726fa265627a, 0x656420616c6c6f77616e63652062656c6f77207a, 0x6563726561, V1197, V1194, V1193, 0x65737345524332303a20617070726f76652066, 0x726f20616464, 0x736665722066726f6d20746865207a, 0x20616c6c6f77616e636545524332303a20747261, 0x72616e7366657220616d6f756e7420657863656564, V1185, 0x737345524332, 0x6974686472617720746f20746865207a65726f2061646472, 0x79fe1364f40764736f6c63430005110032]
Exit stack: []

================================

Function 0:
Private function
Entry block: 0xae3
Exit block: 0xb3d
Body: 0xae3, 0xb3d

Function 1:
Private function
Entry block: 0x83c
Exit block: 0x83c
Body: 0x4a2, 0x4ae, 0x4ec, 0x5a3, 0x703, 0x83c, 0x98d, 0x992, 0xa21, 0xa97, 0xae3, 0xb3d, 0xc70, 0xca5

