Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0x104]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0x104
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0x104
0xa: JUMPI 0x104 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x3d]
---
Predecessors: [0x0]
Successors: [0x3e, 0x10d]
---
0xb PUSH4 0xffffffff
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e PUSH1 0x0
0x30 CALLDATALOAD
0x31 DIV
0x32 AND
0x33 PUSH4 0x6fdde03
0x38 DUP2
0x39 EQ
0x3a PUSH2 0x10d
0x3d JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0x100000000000000000000000000000000000000000000000000000000
0x2e: V7 = 0x0
0x30: V8 = CALLDATALOAD 0x0
0x31: V9 = DIV V8 0x100000000000000000000000000000000000000000000000000000000
0x32: V10 = AND V9 0xffffffff
0x33: V11 = 0x6fdde03
0x39: V12 = EQ V10 0x6fdde03
0x3a: V13 = 0x10d
0x3d: JUMPI 0x10d V12
---
Entry stack: []
Stack pops: 0
Stack additions: [V10]
Exit stack: [V10]

================================

Block 0x3e
[0x3e:0x48]
---
Predecessors: [0xb]
Successors: [0x49, 0x19d]
---
0x3e DUP1
0x3f PUSH4 0x95ea7b3
0x44 EQ
0x45 PUSH2 0x19d
0x48 JUMPI
---
0x3f: V14 = 0x95ea7b3
0x44: V15 = EQ 0x95ea7b3 V10
0x45: V16 = 0x19d
0x48: JUMPI 0x19d V15
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x49
[0x49:0x53]
---
Predecessors: [0x3e]
Successors: [0x54, 0x1d0]
---
0x49 DUP1
0x4a PUSH4 0x18160ddd
0x4f EQ
0x50 PUSH2 0x1d0
0x53 JUMPI
---
0x4a: V17 = 0x18160ddd
0x4f: V18 = EQ 0x18160ddd V10
0x50: V19 = 0x1d0
0x53: JUMPI 0x1d0 V18
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x54
[0x54:0x5e]
---
Predecessors: [0x49]
Successors: [0x5f, 0x1f2]
---
0x54 DUP1
0x55 PUSH4 0x23b872dd
0x5a EQ
0x5b PUSH2 0x1f2
0x5e JUMPI
---
0x55: V20 = 0x23b872dd
0x5a: V21 = EQ 0x23b872dd V10
0x5b: V22 = 0x1f2
0x5e: JUMPI 0x1f2 V21
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x5f
[0x5f:0x69]
---
Predecessors: [0x54]
Successors: [0x6a, 0x22b]
---
0x5f DUP1
0x60 PUSH4 0x313ce567
0x65 EQ
0x66 PUSH2 0x22b
0x69 JUMPI
---
0x60: V23 = 0x313ce567
0x65: V24 = EQ 0x313ce567 V10
0x66: V25 = 0x22b
0x69: JUMPI 0x22b V24
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x6a
[0x6a:0x74]
---
Predecessors: [0x5f]
Successors: [0x75, 0x24d]
---
0x6a DUP1
0x6b PUSH4 0x39a12c3b
0x70 EQ
0x71 PUSH2 0x24d
0x74 JUMPI
---
0x6b: V26 = 0x39a12c3b
0x70: V27 = EQ 0x39a12c3b V10
0x71: V28 = 0x24d
0x74: JUMPI 0x24d V27
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x75
[0x75:0x7f]
---
Predecessors: [0x6a]
Successors: [0x80, 0x272]
---
0x75 DUP1
0x76 PUSH4 0x52288195
0x7b EQ
0x7c PUSH2 0x272
0x7f JUMPI
---
0x76: V29 = 0x52288195
0x7b: V30 = EQ 0x52288195 V10
0x7c: V31 = 0x272
0x7f: JUMPI 0x272 V30
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x80
[0x80:0x8a]
---
Predecessors: [0x75]
Successors: [0x8b, 0x27f]
---
0x80 DUP1
0x81 PUSH4 0x5c7b79f5
0x86 EQ
0x87 PUSH2 0x27f
0x8a JUMPI
---
0x81: V32 = 0x5c7b79f5
0x86: V33 = EQ 0x5c7b79f5 V10
0x87: V34 = 0x27f
0x8a: JUMPI 0x27f V33
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x8b
[0x8b:0x95]
---
Predecessors: [0x80]
Successors: [0x96, 0x28c]
---
0x8b DUP1
0x8c PUSH4 0x70a08231
0x91 EQ
0x92 PUSH2 0x28c
0x95 JUMPI
---
0x8c: V35 = 0x70a08231
0x91: V36 = EQ 0x70a08231 V10
0x92: V37 = 0x28c
0x95: JUMPI 0x28c V36
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x96
[0x96:0xa0]
---
Predecessors: [0x8b]
Successors: [0xa1, 0x2ba]
---
0x96 DUP1
0x97 PUSH4 0x83f12fec
0x9c EQ
0x9d PUSH2 0x2ba
0xa0 JUMPI
---
0x97: V38 = 0x83f12fec
0x9c: V39 = EQ 0x83f12fec V10
0x9d: V40 = 0x2ba
0xa0: JUMPI 0x2ba V39
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xa1
[0xa1:0xab]
---
Predecessors: [0x96]
Successors: [0xac, 0x323]
---
0xa1 DUP1
0xa2 PUSH4 0x8da5cb5b
0xa7 EQ
0xa8 PUSH2 0x323
0xab JUMPI
---
0xa2: V41 = 0x8da5cb5b
0xa7: V42 = EQ 0x8da5cb5b V10
0xa8: V43 = 0x323
0xab: JUMPI 0x323 V42
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xac
[0xac:0xb6]
---
Predecessors: [0xa1]
Successors: [0xb7, 0x34f]
---
0xac DUP1
0xad PUSH4 0x95d89b41
0xb2 EQ
0xb3 PUSH2 0x34f
0xb6 JUMPI
---
0xad: V44 = 0x95d89b41
0xb2: V45 = EQ 0x95d89b41 V10
0xb3: V46 = 0x34f
0xb6: JUMPI 0x34f V45
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xb7
[0xb7:0xc1]
---
Predecessors: [0xac]
Successors: [0xc2, 0x3df]
---
0xb7 DUP1
0xb8 PUSH4 0x974c86b5
0xbd EQ
0xbe PUSH2 0x3df
0xc1 JUMPI
---
0xb8: V47 = 0x974c86b5
0xbd: V48 = EQ 0x974c86b5 V10
0xbe: V49 = 0x3df
0xc1: JUMPI 0x3df V48
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xc2
[0xc2:0xcc]
---
Predecessors: [0xb7]
Successors: [0xcd, 0x3e9]
---
0xc2 DUP1
0xc3 PUSH4 0xa035b1fe
0xc8 EQ
0xc9 PUSH2 0x3e9
0xcc JUMPI
---
0xc3: V50 = 0xa035b1fe
0xc8: V51 = EQ 0xa035b1fe V10
0xc9: V52 = 0x3e9
0xcc: JUMPI 0x3e9 V51
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xcd
[0xcd:0xd7]
---
Predecessors: [0xc2]
Successors: [0xd8, 0x40b]
---
0xcd DUP1
0xce PUSH4 0xa2b40d19
0xd3 EQ
0xd4 PUSH2 0x40b
0xd7 JUMPI
---
0xce: V53 = 0xa2b40d19
0xd3: V54 = EQ 0xa2b40d19 V10
0xd4: V55 = 0x40b
0xd7: JUMPI 0x40b V54
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xd8
[0xd8:0xe2]
---
Predecessors: [0xcd]
Successors: [0xe3, 0x420]
---
0xd8 DUP1
0xd9 PUSH4 0xa9059cbb
0xde EQ
0xdf PUSH2 0x420
0xe2 JUMPI
---
0xd9: V56 = 0xa9059cbb
0xde: V57 = EQ 0xa9059cbb V10
0xdf: V58 = 0x420
0xe2: JUMPI 0x420 V57
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xe3
[0xe3:0xed]
---
Predecessors: [0xd8]
Successors: [0xee, 0x453]
---
0xe3 DUP1
0xe4 PUSH4 0xdd62ed3e
0xe9 EQ
0xea PUSH2 0x453
0xed JUMPI
---
0xe4: V59 = 0xdd62ed3e
0xe9: V60 = EQ 0xdd62ed3e V10
0xea: V61 = 0x453
0xed: JUMPI 0x453 V60
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xee
[0xee:0xf8]
---
Predecessors: [0xe3]
Successors: [0xf9, 0x487]
---
0xee DUP1
0xef PUSH4 0xfd1fc4a0
0xf4 EQ
0xf5 PUSH2 0x487
0xf8 JUMPI
---
0xef: V62 = 0xfd1fc4a0
0xf4: V63 = EQ 0xfd1fc4a0 V10
0xf5: V64 = 0x487
0xf8: JUMPI 0x487 V63
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0xf9
[0xf9:0x103]
---
Predecessors: [0xee]
Successors: [0x104, 0x4d6]
---
0xf9 DUP1
0xfa PUSH4 0xfdff9b4d
0xff EQ
0x100 PUSH2 0x4d6
0x103 JUMPI
---
0xfa: V65 = 0xfdff9b4d
0xff: V66 = EQ 0xfdff9b4d V10
0x100: V67 = 0x4d6
0x103: JUMPI 0x4d6 V66
---
Entry stack: [V10]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10]

================================

Block 0x104
[0x104:0x107]
---
Predecessors: [0x0, 0xf9]
Successors: [0x108]
---
0x104 JUMPDEST
0x105 PUSH2 0x10b
---
0x104: JUMPDEST 
0x105: V68 = 0x10b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10b]
Exit stack: [V10, 0x10b]

================================

Block 0x108
[0x108:0x108]
---
Predecessors: [0x104]
Successors: [0x109]
---
0x108 JUMPDEST
---
0x108: JUMPDEST 
---
Entry stack: [V10, 0x10b]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b]

================================

Block 0x109
[0x109:0x10a]
---
Predecessors: [0x108]
Successors: [0x10b]
---
0x109 JUMPDEST
0x10a JUMP
---
0x109: JUMPDEST 
0x10a: JUMP 0x10b
---
Entry stack: [V10, 0x10b]
Stack pops: 1
Stack additions: []
Exit stack: [V10]

================================

Block 0x10b
[0x10b:0x10c]
---
Predecessors: [0x109, 0x84c, 0x946, 0xc39, 0xc6f, 0xd59]
Successors: []
---
0x10b JUMPDEST
0x10c STOP
---
0x10b: JUMPDEST 
0x10c: STOP 
---
Entry stack: [V10, 0x10b, V410, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V410, S0]

================================

Block 0x10d
[0x10d:0x113]
---
Predecessors: [0xb]
Successors: [0x114, 0x115]
---
0x10d JUMPDEST
0x10e CALLVALUE
0x10f ISZERO
0x110 PUSH2 0x115
0x113 JUMPI
---
0x10d: JUMPDEST 
0x10e: V69 = CALLVALUE
0x10f: V70 = ISZERO V69
0x110: V71 = 0x115
0x113: JUMPI 0x115 V70
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x114
[0x114:0x114]
---
Predecessors: [0x10d]
Successors: []
---
0x114 INVALID
---
0x114: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x115
[0x115:0x11c]
---
Predecessors: [0x10d]
Successors: [0x506]
---
0x115 JUMPDEST
0x116 PUSH2 0x11d
0x119 PUSH2 0x506
0x11c JUMP
---
0x115: JUMPDEST 
0x116: V72 = 0x11d
0x119: V73 = 0x506
0x11c: JUMP 0x506
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11d]
Exit stack: [V10, 0x11d]

================================

Block 0x11d
[0x11d:0x142]
---
Predecessors: [0x58c]
Successors: [0x143, 0x163]
---
0x11d JUMPDEST
0x11e PUSH1 0x40
0x120 DUP1
0x121 MLOAD
0x122 PUSH1 0x20
0x124 DUP1
0x125 DUP3
0x126 MSTORE
0x127 DUP4
0x128 MLOAD
0x129 DUP2
0x12a DUP4
0x12b ADD
0x12c MSTORE
0x12d DUP4
0x12e MLOAD
0x12f SWAP2
0x130 SWAP3
0x131 DUP4
0x132 SWAP3
0x133 SWAP1
0x134 DUP4
0x135 ADD
0x136 SWAP2
0x137 DUP6
0x138 ADD
0x139 SWAP1
0x13a DUP1
0x13b DUP4
0x13c DUP4
0x13d DUP3
0x13e ISZERO
0x13f PUSH2 0x163
0x142 JUMPI
---
0x11d: JUMPDEST 
0x11e: V74 = 0x40
0x121: V75 = M[0x40]
0x122: V76 = 0x20
0x126: M[V75] = 0x20
0x128: V77 = M[S0]
0x12b: V78 = ADD V75 0x20
0x12c: M[V78] = V77
0x12e: V79 = M[S0]
0x135: V80 = ADD V75 0x40
0x138: V81 = ADD S0 0x20
0x13e: V82 = ISZERO V79
0x13f: V83 = 0x163
0x142: JUMPI 0x163 V82
---
Entry stack: [V10, 0x11d, S0]
Stack pops: 1
Stack additions: [S0, V75, V75, V80, V81, V79, V79, V80, V81]
Exit stack: [V10, 0x11d, S0, V75, V75, V80, V81, V79, V79, V80, V81]

================================

Block 0x143
[0x143:0x150]
---
Predecessors: [0x11d, 0x151, 0x393]
Successors: [0x151, 0x163]
---
0x143 JUMPDEST
0x144 DUP1
0x145 MLOAD
0x146 DUP3
0x147 MSTORE
0x148 PUSH1 0x20
0x14a DUP4
0x14b GT
0x14c ISZERO
0x14d PUSH2 0x163
0x150 JUMPI
---
0x143: JUMPDEST 
0x145: V84 = M[S0]
0x147: M[S1] = V84
0x148: V85 = 0x20
0x14b: V86 = GT S2 0x20
0x14c: V87 = ISZERO V86
0x14d: V88 = 0x163
0x150: JUMPI 0x163 V87
---
Entry stack: [V10, 0x11d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x11d, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x151
[0x151:0x162]
---
Predecessors: [0x143]
Successors: [0x143]
---
0x151 PUSH1 0x1f
0x153 NOT
0x154 SWAP1
0x155 SWAP3
0x156 ADD
0x157 SWAP2
0x158 PUSH1 0x20
0x15a SWAP2
0x15b DUP3
0x15c ADD
0x15d SWAP2
0x15e ADD
0x15f PUSH2 0x143
0x162 JUMP
---
0x151: V89 = 0x1f
0x153: V90 = NOT 0x1f
0x156: V91 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x158: V92 = 0x20
0x15c: V93 = ADD 0x20 S1
0x15e: V94 = ADD 0x20 S0
0x15f: V95 = 0x143
0x162: JUMP 0x143
---
Entry stack: [V10, 0x11d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [V91, V93, V94]
Exit stack: [V10, 0x11d, S8, S7, S6, S5, S4, S3, V91, V93, V94]

================================

Block 0x163
[0x163:0x175]
---
Predecessors: [0x11d, 0x143, 0x35f, 0x385]
Successors: [0x176, 0x18f]
---
0x163 JUMPDEST
0x164 POP
0x165 POP
0x166 POP
0x167 SWAP1
0x168 POP
0x169 SWAP1
0x16a DUP2
0x16b ADD
0x16c SWAP1
0x16d PUSH1 0x1f
0x16f AND
0x170 DUP1
0x171 ISZERO
0x172 PUSH2 0x18f
0x175 JUMPI
---
0x163: JUMPDEST 
0x16b: V96 = ADD S3 S5
0x16d: V97 = 0x1f
0x16f: V98 = AND 0x1f S3
0x171: V99 = ISZERO V98
0x172: V100 = 0x18f
0x175: JUMPI 0x18f V99
---
Entry stack: [V10, 0x11d, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 6
Stack additions: [V96, V98]
Exit stack: [V10, 0x11d, S8, S7, S6, V96, V98]

================================

Block 0x176
[0x176:0x18e]
---
Predecessors: [0x163]
Successors: [0x18f]
---
0x176 DUP1
0x177 DUP3
0x178 SUB
0x179 DUP1
0x17a MLOAD
0x17b PUSH1 0x1
0x17d DUP4
0x17e PUSH1 0x20
0x180 SUB
0x181 PUSH2 0x100
0x184 EXP
0x185 SUB
0x186 NOT
0x187 AND
0x188 DUP2
0x189 MSTORE
0x18a PUSH1 0x20
0x18c ADD
0x18d SWAP2
0x18e POP
---
0x178: V101 = SUB V96 V98
0x17a: V102 = M[V101]
0x17b: V103 = 0x1
0x17e: V104 = 0x20
0x180: V105 = SUB 0x20 V98
0x181: V106 = 0x100
0x184: V107 = EXP 0x100 V105
0x185: V108 = SUB V107 0x1
0x186: V109 = NOT V108
0x187: V110 = AND V109 V102
0x189: M[V101] = V110
0x18a: V111 = 0x20
0x18c: V112 = ADD 0x20 V101
---
Entry stack: [V10, 0x11d, S4, S3, S2, V96, V98]
Stack pops: 2
Stack additions: [V112, S0]
Exit stack: [V10, 0x11d, S4, S3, S2, V112, V98]

================================

Block 0x18f
[0x18f:0x19c]
---
Predecessors: [0x163, 0x176, 0x3a5]
Successors: []
---
0x18f JUMPDEST
0x190 POP
0x191 SWAP3
0x192 POP
0x193 POP
0x194 POP
0x195 PUSH1 0x40
0x197 MLOAD
0x198 DUP1
0x199 SWAP2
0x19a SUB
0x19b SWAP1
0x19c RETURN
---
0x18f: JUMPDEST 
0x195: V113 = 0x40
0x197: V114 = M[0x40]
0x19a: V115 = SUB S1 V114
0x19c: RETURN V114 V115
---
Entry stack: [V10, 0x11d, S4, S3, S2, S1, S0]
Stack pops: 5
Stack additions: []
Exit stack: [V10, 0x11d]

================================

Block 0x19d
[0x19d:0x1a3]
---
Predecessors: [0x3e]
Successors: [0x1a4, 0x1a5]
---
0x19d JUMPDEST
0x19e CALLVALUE
0x19f ISZERO
0x1a0 PUSH2 0x1a5
0x1a3 JUMPI
---
0x19d: JUMPDEST 
0x19e: V116 = CALLVALUE
0x19f: V117 = ISZERO V116
0x1a0: V118 = 0x1a5
0x1a3: JUMPI 0x1a5 V117
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a4
[0x1a4:0x1a4]
---
Predecessors: [0x19d]
Successors: []
---
0x1a4 INVALID
---
0x1a4: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1a5
[0x1a5:0x1bb]
---
Predecessors: [0x19d]
Successors: [0x594]
---
0x1a5 JUMPDEST
0x1a6 PUSH2 0x1bc
0x1a9 PUSH1 0x1
0x1ab PUSH1 0xa0
0x1ad PUSH1 0x2
0x1af EXP
0x1b0 SUB
0x1b1 PUSH1 0x4
0x1b3 CALLDATALOAD
0x1b4 AND
0x1b5 PUSH1 0x24
0x1b7 CALLDATALOAD
0x1b8 PUSH2 0x594
0x1bb JUMP
---
0x1a5: JUMPDEST 
0x1a6: V119 = 0x1bc
0x1a9: V120 = 0x1
0x1ab: V121 = 0xa0
0x1ad: V122 = 0x2
0x1af: V123 = EXP 0x2 0xa0
0x1b0: V124 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1b1: V125 = 0x4
0x1b3: V126 = CALLDATALOAD 0x4
0x1b4: V127 = AND V126 0xffffffffffffffffffffffffffffffffffffffff
0x1b5: V128 = 0x24
0x1b7: V129 = CALLDATALOAD 0x24
0x1b8: V130 = 0x594
0x1bb: JUMP 0x594
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1bc, V127, V129]
Exit stack: [V10, 0x1bc, V127, V129]

================================

Block 0x1bc
[0x1bc:0x1cf]
---
Predecessors: [0x5f9, 0x6f4, 0xab3, 0xd17, 0xd5d]
Successors: []
---
0x1bc JUMPDEST
0x1bd PUSH1 0x40
0x1bf DUP1
0x1c0 MLOAD
0x1c1 SWAP2
0x1c2 ISZERO
0x1c3 ISZERO
0x1c4 DUP3
0x1c5 MSTORE
0x1c6 MLOAD
0x1c7 SWAP1
0x1c8 DUP2
0x1c9 SWAP1
0x1ca SUB
0x1cb PUSH1 0x20
0x1cd ADD
0x1ce SWAP1
0x1cf RETURN
---
0x1bc: JUMPDEST 
0x1bd: V131 = 0x40
0x1c0: V132 = M[0x40]
0x1c2: V133 = ISZERO S0
0x1c3: V134 = ISZERO V133
0x1c5: M[V132] = V134
0x1c6: V135 = M[0x40]
0x1ca: V136 = SUB V132 V135
0x1cb: V137 = 0x20
0x1cd: V138 = ADD 0x20 V136
0x1cf: RETURN V135 V138
---
Entry stack: [V10, 0x10b, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x10b, S2, S1]

================================

Block 0x1d0
[0x1d0:0x1d6]
---
Predecessors: [0x49]
Successors: [0x1d7, 0x1d8]
---
0x1d0 JUMPDEST
0x1d1 CALLVALUE
0x1d2 ISZERO
0x1d3 PUSH2 0x1d8
0x1d6 JUMPI
---
0x1d0: JUMPDEST 
0x1d1: V139 = CALLVALUE
0x1d2: V140 = ISZERO V139
0x1d3: V141 = 0x1d8
0x1d6: JUMPI 0x1d8 V140
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d7
[0x1d7:0x1d7]
---
Predecessors: [0x1d0]
Successors: []
---
0x1d7 INVALID
---
0x1d7: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1d8
[0x1d8:0x1df]
---
Predecessors: [0x1d0]
Successors: [0x5ff]
---
0x1d8 JUMPDEST
0x1d9 PUSH2 0x1e0
0x1dc PUSH2 0x5ff
0x1df JUMP
---
0x1d8: JUMPDEST 
0x1d9: V142 = 0x1e0
0x1dc: V143 = 0x5ff
0x1df: JUMP 0x5ff
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e0]
Exit stack: [V10, 0x1e0]

================================

Block 0x1e0
[0x1e0:0x1f1]
---
Predecessors: [0x5ff, 0x6fb, 0x99b, 0xc3b, 0xd1d]
Successors: []
---
0x1e0 JUMPDEST
0x1e1 PUSH1 0x40
0x1e3 DUP1
0x1e4 MLOAD
0x1e5 SWAP2
0x1e6 DUP3
0x1e7 MSTORE
0x1e8 MLOAD
0x1e9 SWAP1
0x1ea DUP2
0x1eb SWAP1
0x1ec SUB
0x1ed PUSH1 0x20
0x1ef ADD
0x1f0 SWAP1
0x1f1 RETURN
---
0x1e0: JUMPDEST 
0x1e1: V144 = 0x40
0x1e4: V145 = M[0x40]
0x1e7: M[V145] = S0
0x1e8: V146 = M[0x40]
0x1ec: V147 = SUB V145 V146
0x1ed: V148 = 0x20
0x1ef: V149 = ADD 0x20 V147
0x1f1: RETURN V146 V149
---
Entry stack: [V10, 0x1e0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1e0]

================================

Block 0x1f2
[0x1f2:0x1f8]
---
Predecessors: [0x54]
Successors: [0x1f9, 0x1fa]
---
0x1f2 JUMPDEST
0x1f3 CALLVALUE
0x1f4 ISZERO
0x1f5 PUSH2 0x1fa
0x1f8 JUMPI
---
0x1f2: JUMPDEST 
0x1f3: V150 = CALLVALUE
0x1f4: V151 = ISZERO V150
0x1f5: V152 = 0x1fa
0x1f8: JUMPI 0x1fa V151
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1f9
[0x1f9:0x1f9]
---
Predecessors: [0x1f2]
Successors: []
---
0x1f9 INVALID
---
0x1f9: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x1fa
[0x1fa:0x216]
---
Predecessors: [0x1f2]
Successors: [0x605]
---
0x1fa JUMPDEST
0x1fb PUSH2 0x1bc
0x1fe PUSH1 0x1
0x200 PUSH1 0xa0
0x202 PUSH1 0x2
0x204 EXP
0x205 SUB
0x206 PUSH1 0x4
0x208 CALLDATALOAD
0x209 DUP2
0x20a AND
0x20b SWAP1
0x20c PUSH1 0x24
0x20e CALLDATALOAD
0x20f AND
0x210 PUSH1 0x44
0x212 CALLDATALOAD
0x213 PUSH2 0x605
0x216 JUMP
---
0x1fa: JUMPDEST 
0x1fb: V153 = 0x1bc
0x1fe: V154 = 0x1
0x200: V155 = 0xa0
0x202: V156 = 0x2
0x204: V157 = EXP 0x2 0xa0
0x205: V158 = SUB 0x10000000000000000000000000000000000000000 0x1
0x206: V159 = 0x4
0x208: V160 = CALLDATALOAD 0x4
0x20a: V161 = AND 0xffffffffffffffffffffffffffffffffffffffff V160
0x20c: V162 = 0x24
0x20e: V163 = CALLDATALOAD 0x24
0x20f: V164 = AND V163 0xffffffffffffffffffffffffffffffffffffffff
0x210: V165 = 0x44
0x212: V166 = CALLDATALOAD 0x44
0x213: V167 = 0x605
0x216: JUMP 0x605
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1bc, V161, V164, V166]
Exit stack: [V10, 0x1bc, V161, V164, V166]

================================

Block 0x217
[0x217:0x22a]
---
Predecessors: []
Successors: []
---
0x217 JUMPDEST
0x218 PUSH1 0x40
0x21a DUP1
0x21b MLOAD
0x21c SWAP2
0x21d ISZERO
0x21e ISZERO
0x21f DUP3
0x220 MSTORE
0x221 MLOAD
0x222 SWAP1
0x223 DUP2
0x224 SWAP1
0x225 SUB
0x226 PUSH1 0x20
0x228 ADD
0x229 SWAP1
0x22a RETURN
---
0x217: JUMPDEST 
0x218: V168 = 0x40
0x21b: V169 = M[0x40]
0x21d: V170 = ISZERO S0
0x21e: V171 = ISZERO V170
0x220: M[V169] = V171
0x221: V172 = M[0x40]
0x225: V173 = SUB V169 V172
0x226: V174 = 0x20
0x228: V175 = ADD 0x20 V173
0x22a: RETURN V172 V175
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x22b
[0x22b:0x231]
---
Predecessors: [0x5f]
Successors: [0x232, 0x233]
---
0x22b JUMPDEST
0x22c CALLVALUE
0x22d ISZERO
0x22e PUSH2 0x233
0x231 JUMPI
---
0x22b: JUMPDEST 
0x22c: V176 = CALLVALUE
0x22d: V177 = ISZERO V176
0x22e: V178 = 0x233
0x231: JUMPI 0x233 V177
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x232
[0x232:0x232]
---
Predecessors: [0x22b]
Successors: []
---
0x232 INVALID
---
0x232: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x233
[0x233:0x23a]
---
Predecessors: [0x22b]
Successors: [0x6fb]
---
0x233 JUMPDEST
0x234 PUSH2 0x1e0
0x237 PUSH2 0x6fb
0x23a JUMP
---
0x233: JUMPDEST 
0x234: V179 = 0x1e0
0x237: V180 = 0x6fb
0x23a: JUMP 0x6fb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e0]
Exit stack: [V10, 0x1e0]

================================

Block 0x23b
[0x23b:0x24c]
---
Predecessors: []
Successors: []
---
0x23b JUMPDEST
0x23c PUSH1 0x40
0x23e DUP1
0x23f MLOAD
0x240 SWAP2
0x241 DUP3
0x242 MSTORE
0x243 MLOAD
0x244 SWAP1
0x245 DUP2
0x246 SWAP1
0x247 SUB
0x248 PUSH1 0x20
0x24a ADD
0x24b SWAP1
0x24c RETURN
---
0x23b: JUMPDEST 
0x23c: V181 = 0x40
0x23f: V182 = M[0x40]
0x242: M[V182] = S0
0x243: V183 = M[0x40]
0x247: V184 = SUB V182 V183
0x248: V185 = 0x20
0x24a: V186 = ADD 0x20 V184
0x24c: RETURN V183 V186
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x24d
[0x24d:0x26f]
---
Predecessors: [0x6a]
Successors: [0x701]
---
0x24d JUMPDEST
0x24e PUSH2 0x10b
0x251 PUSH1 0x4
0x253 CALLDATALOAD
0x254 PUSH1 0x24
0x256 CALLDATALOAD
0x257 PUSH1 0x44
0x259 CALLDATALOAD
0x25a PUSH1 0x1
0x25c PUSH1 0xa0
0x25e PUSH1 0x2
0x260 EXP
0x261 SUB
0x262 PUSH1 0x64
0x264 CALLDATALOAD
0x265 DUP2
0x266 AND
0x267 SWAP1
0x268 PUSH1 0x84
0x26a CALLDATALOAD
0x26b AND
0x26c PUSH2 0x701
0x26f JUMP
---
0x24d: JUMPDEST 
0x24e: V187 = 0x10b
0x251: V188 = 0x4
0x253: V189 = CALLDATALOAD 0x4
0x254: V190 = 0x24
0x256: V191 = CALLDATALOAD 0x24
0x257: V192 = 0x44
0x259: V193 = CALLDATALOAD 0x44
0x25a: V194 = 0x1
0x25c: V195 = 0xa0
0x25e: V196 = 0x2
0x260: V197 = EXP 0x2 0xa0
0x261: V198 = SUB 0x10000000000000000000000000000000000000000 0x1
0x262: V199 = 0x64
0x264: V200 = CALLDATALOAD 0x64
0x266: V201 = AND 0xffffffffffffffffffffffffffffffffffffffff V200
0x268: V202 = 0x84
0x26a: V203 = CALLDATALOAD 0x84
0x26b: V204 = AND V203 0xffffffffffffffffffffffffffffffffffffffff
0x26c: V205 = 0x701
0x26f: JUMP 0x701
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10b, V189, V191, V193, V201, V204]
Exit stack: [V10, 0x10b, V189, V191, V193, V201, V204]

================================

Block 0x270
[0x270:0x271]
---
Predecessors: []
Successors: []
---
0x270 JUMPDEST
0x271 STOP
---
0x270: JUMPDEST 
0x271: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x272
[0x272:0x27c]
---
Predecessors: [0x75]
Successors: [0x854]
---
0x272 JUMPDEST
0x273 PUSH2 0x10b
0x276 PUSH1 0x4
0x278 CALLDATALOAD
0x279 PUSH2 0x854
0x27c JUMP
---
0x272: JUMPDEST 
0x273: V206 = 0x10b
0x276: V207 = 0x4
0x278: V208 = CALLDATALOAD 0x4
0x279: V209 = 0x854
0x27c: JUMP 0x854
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10b, V208]
Exit stack: [V10, 0x10b, V208]

================================

Block 0x27d
[0x27d:0x27e]
---
Predecessors: []
Successors: []
---
0x27d JUMPDEST
0x27e STOP
---
0x27d: JUMPDEST 
0x27e: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x27f
[0x27f:0x289]
---
Predecessors: [0x80]
Successors: [0x949]
---
0x27f JUMPDEST
0x280 PUSH2 0x10b
0x283 PUSH1 0x4
0x285 CALLDATALOAD
0x286 PUSH2 0x949
0x289 JUMP
---
0x27f: JUMPDEST 
0x280: V210 = 0x10b
0x283: V211 = 0x4
0x285: V212 = CALLDATALOAD 0x4
0x286: V213 = 0x949
0x289: JUMP 0x949
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10b, V212]
Exit stack: [V10, 0x10b, V212]

================================

Block 0x28a
[0x28a:0x28b]
---
Predecessors: []
Successors: []
---
0x28a JUMPDEST
0x28b STOP
---
0x28a: JUMPDEST 
0x28b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x28c
[0x28c:0x292]
---
Predecessors: [0x8b]
Successors: [0x293, 0x294]
---
0x28c JUMPDEST
0x28d CALLVALUE
0x28e ISZERO
0x28f PUSH2 0x294
0x292 JUMPI
---
0x28c: JUMPDEST 
0x28d: V214 = CALLVALUE
0x28e: V215 = ISZERO V214
0x28f: V216 = 0x294
0x292: JUMPI 0x294 V215
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x293
[0x293:0x293]
---
Predecessors: [0x28c]
Successors: []
---
0x293 INVALID
---
0x293: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x294
[0x294:0x2a7]
---
Predecessors: [0x28c]
Successors: [0x99b]
---
0x294 JUMPDEST
0x295 PUSH2 0x1e0
0x298 PUSH1 0x1
0x29a PUSH1 0xa0
0x29c PUSH1 0x2
0x29e EXP
0x29f SUB
0x2a0 PUSH1 0x4
0x2a2 CALLDATALOAD
0x2a3 AND
0x2a4 PUSH2 0x99b
0x2a7 JUMP
---
0x294: JUMPDEST 
0x295: V217 = 0x1e0
0x298: V218 = 0x1
0x29a: V219 = 0xa0
0x29c: V220 = 0x2
0x29e: V221 = EXP 0x2 0xa0
0x29f: V222 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2a0: V223 = 0x4
0x2a2: V224 = CALLDATALOAD 0x4
0x2a3: V225 = AND V224 0xffffffffffffffffffffffffffffffffffffffff
0x2a4: V226 = 0x99b
0x2a7: JUMP 0x99b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e0, V225]
Exit stack: [V10, 0x1e0, V225]

================================

Block 0x2a8
[0x2a8:0x2b9]
---
Predecessors: []
Successors: []
---
0x2a8 JUMPDEST
0x2a9 PUSH1 0x40
0x2ab DUP1
0x2ac MLOAD
0x2ad SWAP2
0x2ae DUP3
0x2af MSTORE
0x2b0 MLOAD
0x2b1 SWAP1
0x2b2 DUP2
0x2b3 SWAP1
0x2b4 SUB
0x2b5 PUSH1 0x20
0x2b7 ADD
0x2b8 SWAP1
0x2b9 RETURN
---
0x2a8: JUMPDEST 
0x2a9: V227 = 0x40
0x2ac: V228 = M[0x40]
0x2af: M[V228] = S0
0x2b0: V229 = M[0x40]
0x2b4: V230 = SUB V228 V229
0x2b5: V231 = 0x20
0x2b7: V232 = ADD 0x20 V230
0x2b9: RETURN V229 V232
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x2ba
[0x2ba:0x2c0]
---
Predecessors: [0x96]
Successors: [0x2c1, 0x2c2]
---
0x2ba JUMPDEST
0x2bb CALLVALUE
0x2bc ISZERO
0x2bd PUSH2 0x2c2
0x2c0 JUMPI
---
0x2ba: JUMPDEST 
0x2bb: V233 = CALLVALUE
0x2bc: V234 = ISZERO V233
0x2bd: V235 = 0x2c2
0x2c0: JUMPI 0x2c2 V234
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c1
[0x2c1:0x2c1]
---
Predecessors: [0x2ba]
Successors: []
---
0x2c1 INVALID
---
0x2c1: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x2c2
[0x2c2:0x30e]
---
Predecessors: [0x2ba]
Successors: [0x9ad]
---
0x2c2 JUMPDEST
0x2c3 PUSH2 0x1bc
0x2c6 PUSH1 0x4
0x2c8 DUP1
0x2c9 DUP1
0x2ca CALLDATALOAD
0x2cb SWAP1
0x2cc PUSH1 0x20
0x2ce ADD
0x2cf SWAP1
0x2d0 DUP3
0x2d1 ADD
0x2d2 DUP1
0x2d3 CALLDATALOAD
0x2d4 SWAP1
0x2d5 PUSH1 0x20
0x2d7 ADD
0x2d8 SWAP1
0x2d9 DUP1
0x2da DUP1
0x2db PUSH1 0x20
0x2dd MUL
0x2de PUSH1 0x20
0x2e0 ADD
0x2e1 PUSH1 0x40
0x2e3 MLOAD
0x2e4 SWAP1
0x2e5 DUP2
0x2e6 ADD
0x2e7 PUSH1 0x40
0x2e9 MSTORE
0x2ea DUP1
0x2eb SWAP4
0x2ec SWAP3
0x2ed SWAP2
0x2ee SWAP1
0x2ef DUP2
0x2f0 DUP2
0x2f1 MSTORE
0x2f2 PUSH1 0x20
0x2f4 ADD
0x2f5 DUP4
0x2f6 DUP4
0x2f7 PUSH1 0x20
0x2f9 MUL
0x2fa DUP1
0x2fb DUP3
0x2fc DUP5
0x2fd CALLDATACOPY
0x2fe POP
0x2ff SWAP5
0x300 SWAP7
0x301 POP
0x302 POP
0x303 SWAP4
0x304 CALLDATALOAD
0x305 SWAP4
0x306 POP
0x307 PUSH2 0x9ad
0x30a SWAP3
0x30b POP
0x30c POP
0x30d POP
0x30e JUMP
---
0x2c2: JUMPDEST 
0x2c3: V236 = 0x1bc
0x2c6: V237 = 0x4
0x2ca: V238 = CALLDATALOAD 0x4
0x2cc: V239 = 0x20
0x2ce: V240 = ADD 0x20 0x4
0x2d1: V241 = ADD 0x4 V238
0x2d3: V242 = CALLDATALOAD V241
0x2d5: V243 = 0x20
0x2d7: V244 = ADD 0x20 V241
0x2db: V245 = 0x20
0x2dd: V246 = MUL 0x20 V242
0x2de: V247 = 0x20
0x2e0: V248 = ADD 0x20 V246
0x2e1: V249 = 0x40
0x2e3: V250 = M[0x40]
0x2e6: V251 = ADD V250 V248
0x2e7: V252 = 0x40
0x2e9: M[0x40] = V251
0x2f1: M[V250] = V242
0x2f2: V253 = 0x20
0x2f4: V254 = ADD 0x20 V250
0x2f7: V255 = 0x20
0x2f9: V256 = MUL 0x20 V242
0x2fd: CALLDATACOPY V254 V244 V256
0x304: V257 = CALLDATALOAD 0x24
0x307: V258 = 0x9ad
0x30e: JUMP 0x9ad
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1bc, V250, V257]
Exit stack: [V10, 0x1bc, V250, V257]

================================

Block 0x30f
[0x30f:0x322]
---
Predecessors: []
Successors: []
---
0x30f JUMPDEST
0x310 PUSH1 0x40
0x312 DUP1
0x313 MLOAD
0x314 SWAP2
0x315 ISZERO
0x316 ISZERO
0x317 DUP3
0x318 MSTORE
0x319 MLOAD
0x31a SWAP1
0x31b DUP2
0x31c SWAP1
0x31d SUB
0x31e PUSH1 0x20
0x320 ADD
0x321 SWAP1
0x322 RETURN
---
0x30f: JUMPDEST 
0x310: V259 = 0x40
0x313: V260 = M[0x40]
0x315: V261 = ISZERO S0
0x316: V262 = ISZERO V261
0x318: M[V260] = V262
0x319: V263 = M[0x40]
0x31d: V264 = SUB V260 V263
0x31e: V265 = 0x20
0x320: V266 = ADD 0x20 V264
0x322: RETURN V263 V266
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x323
[0x323:0x329]
---
Predecessors: [0xa1]
Successors: [0x32a, 0x32b]
---
0x323 JUMPDEST
0x324 CALLVALUE
0x325 ISZERO
0x326 PUSH2 0x32b
0x329 JUMPI
---
0x323: JUMPDEST 
0x324: V267 = CALLVALUE
0x325: V268 = ISZERO V267
0x326: V269 = 0x32b
0x329: JUMPI 0x32b V268
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x32a
[0x32a:0x32a]
---
Predecessors: [0x323]
Successors: []
---
0x32a INVALID
---
0x32a: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x32b
[0x32b:0x332]
---
Predecessors: [0x323]
Successors: [0xabc]
---
0x32b JUMPDEST
0x32c PUSH2 0x333
0x32f PUSH2 0xabc
0x332 JUMP
---
0x32b: JUMPDEST 
0x32c: V270 = 0x333
0x32f: V271 = 0xabc
0x332: JUMP 0xabc
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x333]
Exit stack: [V10, 0x333]

================================

Block 0x333
[0x333:0x34e]
---
Predecessors: [0xabc]
Successors: []
---
0x333 JUMPDEST
0x334 PUSH1 0x40
0x336 DUP1
0x337 MLOAD
0x338 PUSH1 0x1
0x33a PUSH1 0xa0
0x33c PUSH1 0x2
0x33e EXP
0x33f SUB
0x340 SWAP1
0x341 SWAP3
0x342 AND
0x343 DUP3
0x344 MSTORE
0x345 MLOAD
0x346 SWAP1
0x347 DUP2
0x348 SWAP1
0x349 SUB
0x34a PUSH1 0x20
0x34c ADD
0x34d SWAP1
0x34e RETURN
---
0x333: JUMPDEST 
0x334: V272 = 0x40
0x337: V273 = M[0x40]
0x338: V274 = 0x1
0x33a: V275 = 0xa0
0x33c: V276 = 0x2
0x33e: V277 = EXP 0x2 0xa0
0x33f: V278 = SUB 0x10000000000000000000000000000000000000000 0x1
0x342: V279 = AND V942 0xffffffffffffffffffffffffffffffffffffffff
0x344: M[V273] = V279
0x345: V280 = M[0x40]
0x349: V281 = SUB V273 V280
0x34a: V282 = 0x20
0x34c: V283 = ADD 0x20 V281
0x34e: RETURN V280 V283
---
Entry stack: [V10, 0x333, V942]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x333]

================================

Block 0x34f
[0x34f:0x355]
---
Predecessors: [0xac]
Successors: [0x356, 0x357]
---
0x34f JUMPDEST
0x350 CALLVALUE
0x351 ISZERO
0x352 PUSH2 0x357
0x355 JUMPI
---
0x34f: JUMPDEST 
0x350: V284 = CALLVALUE
0x351: V285 = ISZERO V284
0x352: V286 = 0x357
0x355: JUMPI 0x357 V285
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x356
[0x356:0x356]
---
Predecessors: [0x34f]
Successors: []
---
0x356 INVALID
---
0x356: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x357
[0x357:0x35e]
---
Predecessors: [0x34f]
Successors: [0xacb]
---
0x357 JUMPDEST
0x358 PUSH2 0x11d
0x35b PUSH2 0xacb
0x35e JUMP
---
0x357: JUMPDEST 
0x358: V287 = 0x11d
0x35b: V288 = 0xacb
0x35e: JUMP 0xacb
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x11d]
Exit stack: [V10, 0x11d]

================================

Block 0x35f
[0x35f:0x384]
---
Predecessors: []
Successors: [0x163, 0x385]
---
0x35f JUMPDEST
0x360 PUSH1 0x40
0x362 DUP1
0x363 MLOAD
0x364 PUSH1 0x20
0x366 DUP1
0x367 DUP3
0x368 MSTORE
0x369 DUP4
0x36a MLOAD
0x36b DUP2
0x36c DUP4
0x36d ADD
0x36e MSTORE
0x36f DUP4
0x370 MLOAD
0x371 SWAP2
0x372 SWAP3
0x373 DUP4
0x374 SWAP3
0x375 SWAP1
0x376 DUP4
0x377 ADD
0x378 SWAP2
0x379 DUP6
0x37a ADD
0x37b SWAP1
0x37c DUP1
0x37d DUP4
0x37e DUP4
0x37f DUP3
0x380 ISZERO
0x381 PUSH2 0x163
0x384 JUMPI
---
0x35f: JUMPDEST 
0x360: V289 = 0x40
0x363: V290 = M[0x40]
0x364: V291 = 0x20
0x368: M[V290] = 0x20
0x36a: V292 = M[S0]
0x36d: V293 = ADD V290 0x20
0x36e: M[V293] = V292
0x370: V294 = M[S0]
0x377: V295 = ADD V290 0x40
0x37a: V296 = ADD S0 0x20
0x380: V297 = ISZERO V294
0x381: V298 = 0x163
0x384: JUMPI 0x163 V297
---
Entry stack: []
Stack pops: 1
Stack additions: [S0, V290, V290, V295, V296, V294, V294, V295, V296]
Exit stack: [S0, V290, V290, V295, V296, V294, V294, V295, V296]

================================

Block 0x385
[0x385:0x392]
---
Predecessors: [0x35f]
Successors: [0x163, 0x393]
---
0x385 JUMPDEST
0x386 DUP1
0x387 MLOAD
0x388 DUP3
0x389 MSTORE
0x38a PUSH1 0x20
0x38c DUP4
0x38d GT
0x38e ISZERO
0x38f PUSH2 0x163
0x392 JUMPI
---
0x385: JUMPDEST 
0x387: V299 = M[V296]
0x389: M[V295] = V299
0x38a: V300 = 0x20
0x38d: V301 = GT V294 0x20
0x38e: V302 = ISZERO V301
0x38f: V303 = 0x163
0x392: JUMPI 0x163 V302
---
Entry stack: [S8, V290, V290, V295, V296, V294, V294, V295, V296]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [S8, V290, V290, V295, V296, V294, V294, V295, V296]

================================

Block 0x393
[0x393:0x3a4]
---
Predecessors: [0x385]
Successors: [0x143]
---
0x393 PUSH1 0x1f
0x395 NOT
0x396 SWAP1
0x397 SWAP3
0x398 ADD
0x399 SWAP2
0x39a PUSH1 0x20
0x39c SWAP2
0x39d DUP3
0x39e ADD
0x39f SWAP2
0x3a0 ADD
0x3a1 PUSH2 0x143
0x3a4 JUMP
---
0x393: V304 = 0x1f
0x395: V305 = NOT 0x1f
0x398: V306 = ADD V294 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x39a: V307 = 0x20
0x39e: V308 = ADD 0x20 V295
0x3a0: V309 = ADD 0x20 V296
0x3a1: V310 = 0x143
0x3a4: JUMP 0x143
---
Entry stack: [S8, V290, V290, V295, V296, V294, V294, V295, V296]
Stack pops: 3
Stack additions: [V306, V308, V309]
Exit stack: [S8, V290, V290, V295, V296, V294, V306, V308, V309]

================================

Block 0x3a5
[0x3a5:0x3b7]
---
Predecessors: []
Successors: [0x18f, 0x3b8]
---
0x3a5 JUMPDEST
0x3a6 POP
0x3a7 POP
0x3a8 POP
0x3a9 SWAP1
0x3aa POP
0x3ab SWAP1
0x3ac DUP2
0x3ad ADD
0x3ae SWAP1
0x3af PUSH1 0x1f
0x3b1 AND
0x3b2 DUP1
0x3b3 ISZERO
0x3b4 PUSH2 0x18f
0x3b7 JUMPI
---
0x3a5: JUMPDEST 
0x3ad: V311 = ADD S3 S5
0x3af: V312 = 0x1f
0x3b1: V313 = AND 0x1f S3
0x3b3: V314 = ISZERO V313
0x3b4: V315 = 0x18f
0x3b7: JUMPI 0x18f V314
---
Entry stack: []
Stack pops: 6
Stack additions: [V311, V313]
Exit stack: [V311, V313]

================================

Block 0x3b8
[0x3b8:0x3d0]
---
Predecessors: [0x3a5]
Successors: [0x3d1]
---
0x3b8 DUP1
0x3b9 DUP3
0x3ba SUB
0x3bb DUP1
0x3bc MLOAD
0x3bd PUSH1 0x1
0x3bf DUP4
0x3c0 PUSH1 0x20
0x3c2 SUB
0x3c3 PUSH2 0x100
0x3c6 EXP
0x3c7 SUB
0x3c8 NOT
0x3c9 AND
0x3ca DUP2
0x3cb MSTORE
0x3cc PUSH1 0x20
0x3ce ADD
0x3cf SWAP2
0x3d0 POP
---
0x3ba: V316 = SUB V311 V313
0x3bc: V317 = M[V316]
0x3bd: V318 = 0x1
0x3c0: V319 = 0x20
0x3c2: V320 = SUB 0x20 V313
0x3c3: V321 = 0x100
0x3c6: V322 = EXP 0x100 V320
0x3c7: V323 = SUB V322 0x1
0x3c8: V324 = NOT V323
0x3c9: V325 = AND V324 V317
0x3cb: M[V316] = V325
0x3cc: V326 = 0x20
0x3ce: V327 = ADD 0x20 V316
---
Entry stack: [V311, V313]
Stack pops: 2
Stack additions: [V327, S0]
Exit stack: [V327, V313]

================================

Block 0x3d1
[0x3d1:0x3de]
---
Predecessors: [0x3b8]
Successors: []
---
0x3d1 JUMPDEST
0x3d2 POP
0x3d3 SWAP3
0x3d4 POP
0x3d5 POP
0x3d6 POP
0x3d7 PUSH1 0x40
0x3d9 MLOAD
0x3da DUP1
0x3db SWAP2
0x3dc SUB
0x3dd SWAP1
0x3de RETURN
---
0x3d1: JUMPDEST 
0x3d7: V328 = 0x40
0x3d9: V329 = M[0x40]
0x3dc: V330 = SUB V327 V329
0x3de: RETURN V329 V330
---
Entry stack: [V327, V313]
Stack pops: 5
Stack additions: []
Exit stack: []

================================

Block 0x3df
[0x3df:0x3e6]
---
Predecessors: [0xb7]
Successors: [0xb58]
---
0x3df JUMPDEST
0x3e0 PUSH2 0x10b
0x3e3 PUSH2 0xb58
0x3e6 JUMP
---
0x3df: JUMPDEST 
0x3e0: V331 = 0x10b
0x3e3: V332 = 0xb58
0x3e6: JUMP 0xb58
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10b]
Exit stack: [V10, 0x10b]

================================

Block 0x3e7
[0x3e7:0x3e8]
---
Predecessors: []
Successors: []
---
0x3e7 JUMPDEST
0x3e8 STOP
---
0x3e7: JUMPDEST 
0x3e8: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x3e9
[0x3e9:0x3ef]
---
Predecessors: [0xc2]
Successors: [0x3f0, 0x3f1]
---
0x3e9 JUMPDEST
0x3ea CALLVALUE
0x3eb ISZERO
0x3ec PUSH2 0x3f1
0x3ef JUMPI
---
0x3e9: JUMPDEST 
0x3ea: V333 = CALLVALUE
0x3eb: V334 = ISZERO V333
0x3ec: V335 = 0x3f1
0x3ef: JUMPI 0x3f1 V334
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f0
[0x3f0:0x3f0]
---
Predecessors: [0x3e9]
Successors: []
---
0x3f0 INVALID
---
0x3f0: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x3f1
[0x3f1:0x3f8]
---
Predecessors: [0x3e9]
Successors: [0xc3b]
---
0x3f1 JUMPDEST
0x3f2 PUSH2 0x1e0
0x3f5 PUSH2 0xc3b
0x3f8 JUMP
---
0x3f1: JUMPDEST 
0x3f2: V336 = 0x1e0
0x3f5: V337 = 0xc3b
0x3f8: JUMP 0xc3b
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e0]
Exit stack: [V10, 0x1e0]

================================

Block 0x3f9
[0x3f9:0x40a]
---
Predecessors: []
Successors: []
---
0x3f9 JUMPDEST
0x3fa PUSH1 0x40
0x3fc DUP1
0x3fd MLOAD
0x3fe SWAP2
0x3ff DUP3
0x400 MSTORE
0x401 MLOAD
0x402 SWAP1
0x403 DUP2
0x404 SWAP1
0x405 SUB
0x406 PUSH1 0x20
0x408 ADD
0x409 SWAP1
0x40a RETURN
---
0x3f9: JUMPDEST 
0x3fa: V338 = 0x40
0x3fd: V339 = M[0x40]
0x400: M[V339] = S0
0x401: V340 = M[0x40]
0x405: V341 = SUB V339 V340
0x406: V342 = 0x20
0x408: V343 = ADD 0x20 V341
0x40a: RETURN V340 V343
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x40b
[0x40b:0x411]
---
Predecessors: [0xcd]
Successors: [0x412, 0x413]
---
0x40b JUMPDEST
0x40c CALLVALUE
0x40d ISZERO
0x40e PUSH2 0x413
0x411 JUMPI
---
0x40b: JUMPDEST 
0x40c: V344 = CALLVALUE
0x40d: V345 = ISZERO V344
0x40e: V346 = 0x413
0x411: JUMPI 0x413 V345
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x412
[0x412:0x412]
---
Predecessors: [0x40b]
Successors: []
---
0x412 INVALID
---
0x412: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x413
[0x413:0x41d]
---
Predecessors: [0x40b]
Successors: [0xc41]
---
0x413 JUMPDEST
0x414 PUSH2 0x10b
0x417 PUSH1 0x4
0x419 CALLDATALOAD
0x41a PUSH2 0xc41
0x41d JUMP
---
0x413: JUMPDEST 
0x414: V347 = 0x10b
0x417: V348 = 0x4
0x419: V349 = CALLDATALOAD 0x4
0x41a: V350 = 0xc41
0x41d: JUMP 0xc41
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10b, V349]
Exit stack: [V10, 0x10b, V349]

================================

Block 0x41e
[0x41e:0x41f]
---
Predecessors: []
Successors: []
---
0x41e JUMPDEST
0x41f STOP
---
0x41e: JUMPDEST 
0x41f: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x420
[0x420:0x426]
---
Predecessors: [0xd8]
Successors: [0x427, 0x428]
---
0x420 JUMPDEST
0x421 CALLVALUE
0x422 ISZERO
0x423 PUSH2 0x428
0x426 JUMPI
---
0x420: JUMPDEST 
0x421: V351 = CALLVALUE
0x422: V352 = ISZERO V351
0x423: V353 = 0x428
0x426: JUMPI 0x428 V352
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x427
[0x427:0x427]
---
Predecessors: [0x420]
Successors: []
---
0x427 INVALID
---
0x427: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x428
[0x428:0x43e]
---
Predecessors: [0x420]
Successors: [0xc72]
---
0x428 JUMPDEST
0x429 PUSH2 0x1bc
0x42c PUSH1 0x1
0x42e PUSH1 0xa0
0x430 PUSH1 0x2
0x432 EXP
0x433 SUB
0x434 PUSH1 0x4
0x436 CALLDATALOAD
0x437 AND
0x438 PUSH1 0x24
0x43a CALLDATALOAD
0x43b PUSH2 0xc72
0x43e JUMP
---
0x428: JUMPDEST 
0x429: V354 = 0x1bc
0x42c: V355 = 0x1
0x42e: V356 = 0xa0
0x430: V357 = 0x2
0x432: V358 = EXP 0x2 0xa0
0x433: V359 = SUB 0x10000000000000000000000000000000000000000 0x1
0x434: V360 = 0x4
0x436: V361 = CALLDATALOAD 0x4
0x437: V362 = AND V361 0xffffffffffffffffffffffffffffffffffffffff
0x438: V363 = 0x24
0x43a: V364 = CALLDATALOAD 0x24
0x43b: V365 = 0xc72
0x43e: JUMP 0xc72
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1bc, V362, V364]
Exit stack: [V10, 0x1bc, V362, V364]

================================

Block 0x43f
[0x43f:0x452]
---
Predecessors: []
Successors: []
---
0x43f JUMPDEST
0x440 PUSH1 0x40
0x442 DUP1
0x443 MLOAD
0x444 SWAP2
0x445 ISZERO
0x446 ISZERO
0x447 DUP3
0x448 MSTORE
0x449 MLOAD
0x44a SWAP1
0x44b DUP2
0x44c SWAP1
0x44d SUB
0x44e PUSH1 0x20
0x450 ADD
0x451 SWAP1
0x452 RETURN
---
0x43f: JUMPDEST 
0x440: V366 = 0x40
0x443: V367 = M[0x40]
0x445: V368 = ISZERO S0
0x446: V369 = ISZERO V368
0x448: M[V367] = V369
0x449: V370 = M[0x40]
0x44d: V371 = SUB V367 V370
0x44e: V372 = 0x20
0x450: V373 = ADD 0x20 V371
0x452: RETURN V370 V373
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x453
[0x453:0x459]
---
Predecessors: [0xe3]
Successors: [0x45a, 0x45b]
---
0x453 JUMPDEST
0x454 CALLVALUE
0x455 ISZERO
0x456 PUSH2 0x45b
0x459 JUMPI
---
0x453: JUMPDEST 
0x454: V374 = CALLVALUE
0x455: V375 = ISZERO V374
0x456: V376 = 0x45b
0x459: JUMPI 0x45b V375
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x45a
[0x45a:0x45a]
---
Predecessors: [0x453]
Successors: []
---
0x45a INVALID
---
0x45a: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x45b
[0x45b:0x474]
---
Predecessors: [0x453]
Successors: [0xd1d]
---
0x45b JUMPDEST
0x45c PUSH2 0x1e0
0x45f PUSH1 0x1
0x461 PUSH1 0xa0
0x463 PUSH1 0x2
0x465 EXP
0x466 SUB
0x467 PUSH1 0x4
0x469 CALLDATALOAD
0x46a DUP2
0x46b AND
0x46c SWAP1
0x46d PUSH1 0x24
0x46f CALLDATALOAD
0x470 AND
0x471 PUSH2 0xd1d
0x474 JUMP
---
0x45b: JUMPDEST 
0x45c: V377 = 0x1e0
0x45f: V378 = 0x1
0x461: V379 = 0xa0
0x463: V380 = 0x2
0x465: V381 = EXP 0x2 0xa0
0x466: V382 = SUB 0x10000000000000000000000000000000000000000 0x1
0x467: V383 = 0x4
0x469: V384 = CALLDATALOAD 0x4
0x46b: V385 = AND 0xffffffffffffffffffffffffffffffffffffffff V384
0x46d: V386 = 0x24
0x46f: V387 = CALLDATALOAD 0x24
0x470: V388 = AND V387 0xffffffffffffffffffffffffffffffffffffffff
0x471: V389 = 0xd1d
0x474: JUMP 0xd1d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1e0, V385, V388]
Exit stack: [V10, 0x1e0, V385, V388]

================================

Block 0x475
[0x475:0x486]
---
Predecessors: []
Successors: []
---
0x475 JUMPDEST
0x476 PUSH1 0x40
0x478 DUP1
0x479 MLOAD
0x47a SWAP2
0x47b DUP3
0x47c MSTORE
0x47d MLOAD
0x47e SWAP1
0x47f DUP2
0x480 SWAP1
0x481 SUB
0x482 PUSH1 0x20
0x484 ADD
0x485 SWAP1
0x486 RETURN
---
0x475: JUMPDEST 
0x476: V390 = 0x40
0x479: V391 = M[0x40]
0x47c: M[V391] = S0
0x47d: V392 = M[0x40]
0x481: V393 = SUB V391 V392
0x482: V394 = 0x20
0x484: V395 = ADD 0x20 V393
0x486: RETURN V392 V395
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x487
[0x487:0x4d3]
---
Predecessors: [0xee]
Successors: [0xd3a]
---
0x487 JUMPDEST
0x488 PUSH2 0x10b
0x48b PUSH1 0x4
0x48d DUP1
0x48e DUP1
0x48f CALLDATALOAD
0x490 SWAP1
0x491 PUSH1 0x20
0x493 ADD
0x494 SWAP1
0x495 DUP3
0x496 ADD
0x497 DUP1
0x498 CALLDATALOAD
0x499 SWAP1
0x49a PUSH1 0x20
0x49c ADD
0x49d SWAP1
0x49e DUP1
0x49f DUP1
0x4a0 PUSH1 0x20
0x4a2 MUL
0x4a3 PUSH1 0x20
0x4a5 ADD
0x4a6 PUSH1 0x40
0x4a8 MLOAD
0x4a9 SWAP1
0x4aa DUP2
0x4ab ADD
0x4ac PUSH1 0x40
0x4ae MSTORE
0x4af DUP1
0x4b0 SWAP4
0x4b1 SWAP3
0x4b2 SWAP2
0x4b3 SWAP1
0x4b4 DUP2
0x4b5 DUP2
0x4b6 MSTORE
0x4b7 PUSH1 0x20
0x4b9 ADD
0x4ba DUP4
0x4bb DUP4
0x4bc PUSH1 0x20
0x4be MUL
0x4bf DUP1
0x4c0 DUP3
0x4c1 DUP5
0x4c2 CALLDATACOPY
0x4c3 POP
0x4c4 SWAP5
0x4c5 SWAP7
0x4c6 POP
0x4c7 POP
0x4c8 SWAP4
0x4c9 CALLDATALOAD
0x4ca SWAP4
0x4cb POP
0x4cc PUSH2 0xd3a
0x4cf SWAP3
0x4d0 POP
0x4d1 POP
0x4d2 POP
0x4d3 JUMP
---
0x487: JUMPDEST 
0x488: V396 = 0x10b
0x48b: V397 = 0x4
0x48f: V398 = CALLDATALOAD 0x4
0x491: V399 = 0x20
0x493: V400 = ADD 0x20 0x4
0x496: V401 = ADD 0x4 V398
0x498: V402 = CALLDATALOAD V401
0x49a: V403 = 0x20
0x49c: V404 = ADD 0x20 V401
0x4a0: V405 = 0x20
0x4a2: V406 = MUL 0x20 V402
0x4a3: V407 = 0x20
0x4a5: V408 = ADD 0x20 V406
0x4a6: V409 = 0x40
0x4a8: V410 = M[0x40]
0x4ab: V411 = ADD V410 V408
0x4ac: V412 = 0x40
0x4ae: M[0x40] = V411
0x4b6: M[V410] = V402
0x4b7: V413 = 0x20
0x4b9: V414 = ADD 0x20 V410
0x4bc: V415 = 0x20
0x4be: V416 = MUL 0x20 V402
0x4c2: CALLDATACOPY V414 V404 V416
0x4c9: V417 = CALLDATALOAD 0x24
0x4cc: V418 = 0xd3a
0x4d3: JUMP 0xd3a
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x10b, V410, V417]
Exit stack: [V10, 0x10b, V410, V417]

================================

Block 0x4d4
[0x4d4:0x4d5]
---
Predecessors: []
Successors: []
---
0x4d4 JUMPDEST
0x4d5 STOP
---
0x4d4: JUMPDEST 
0x4d5: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4d6
[0x4d6:0x4dc]
---
Predecessors: [0xf9]
Successors: [0x4dd, 0x4de]
---
0x4d6 JUMPDEST
0x4d7 CALLVALUE
0x4d8 ISZERO
0x4d9 PUSH2 0x4de
0x4dc JUMPI
---
0x4d6: JUMPDEST 
0x4d7: V419 = CALLVALUE
0x4d8: V420 = ISZERO V419
0x4d9: V421 = 0x4de
0x4dc: JUMPI 0x4de V420
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4dd
[0x4dd:0x4dd]
---
Predecessors: [0x4d6]
Successors: []
---
0x4dd INVALID
---
0x4dd: INVALID 
---
Entry stack: [V10]
Stack pops: 0
Stack additions: []
Exit stack: [V10]

================================

Block 0x4de
[0x4de:0x4f1]
---
Predecessors: [0x4d6]
Successors: [0xd5d]
---
0x4de JUMPDEST
0x4df PUSH2 0x1bc
0x4e2 PUSH1 0x1
0x4e4 PUSH1 0xa0
0x4e6 PUSH1 0x2
0x4e8 EXP
0x4e9 SUB
0x4ea PUSH1 0x4
0x4ec CALLDATALOAD
0x4ed AND
0x4ee PUSH2 0xd5d
0x4f1 JUMP
---
0x4de: JUMPDEST 
0x4df: V422 = 0x1bc
0x4e2: V423 = 0x1
0x4e4: V424 = 0xa0
0x4e6: V425 = 0x2
0x4e8: V426 = EXP 0x2 0xa0
0x4e9: V427 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4ea: V428 = 0x4
0x4ec: V429 = CALLDATALOAD 0x4
0x4ed: V430 = AND V429 0xffffffffffffffffffffffffffffffffffffffff
0x4ee: V431 = 0xd5d
0x4f1: JUMP 0xd5d
---
Entry stack: [V10]
Stack pops: 0
Stack additions: [0x1bc, V430]
Exit stack: [V10, 0x1bc, V430]

================================

Block 0x4f2
[0x4f2:0x505]
---
Predecessors: []
Successors: []
---
0x4f2 JUMPDEST
0x4f3 PUSH1 0x40
0x4f5 DUP1
0x4f6 MLOAD
0x4f7 SWAP2
0x4f8 ISZERO
0x4f9 ISZERO
0x4fa DUP3
0x4fb MSTORE
0x4fc MLOAD
0x4fd SWAP1
0x4fe DUP2
0x4ff SWAP1
0x500 SUB
0x501 PUSH1 0x20
0x503 ADD
0x504 SWAP1
0x505 RETURN
---
0x4f2: JUMPDEST 
0x4f3: V432 = 0x40
0x4f6: V433 = M[0x40]
0x4f8: V434 = ISZERO S0
0x4f9: V435 = ISZERO V434
0x4fb: M[V433] = V435
0x4fc: V436 = M[0x40]
0x500: V437 = SUB V433 V436
0x501: V438 = 0x20
0x503: V439 = ADD 0x20 V437
0x505: RETURN V436 V439
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x506
[0x506:0x545]
---
Predecessors: [0x115]
Successors: [0x546, 0x58c]
---
0x506 JUMPDEST
0x507 PUSH1 0x0
0x509 DUP1
0x50a SLOAD
0x50b PUSH1 0x40
0x50d DUP1
0x50e MLOAD
0x50f PUSH1 0x20
0x511 PUSH1 0x2
0x513 PUSH1 0x1
0x515 DUP6
0x516 AND
0x517 ISZERO
0x518 PUSH2 0x100
0x51b MUL
0x51c PUSH1 0x0
0x51e NOT
0x51f ADD
0x520 SWAP1
0x521 SWAP5
0x522 AND
0x523 SWAP4
0x524 SWAP1
0x525 SWAP4
0x526 DIV
0x527 PUSH1 0x1f
0x529 DUP2
0x52a ADD
0x52b DUP5
0x52c SWAP1
0x52d DIV
0x52e DUP5
0x52f MUL
0x530 DUP3
0x531 ADD
0x532 DUP5
0x533 ADD
0x534 SWAP1
0x535 SWAP3
0x536 MSTORE
0x537 DUP2
0x538 DUP2
0x539 MSTORE
0x53a SWAP3
0x53b SWAP2
0x53c DUP4
0x53d ADD
0x53e DUP3
0x53f DUP3
0x540 DUP1
0x541 ISZERO
0x542 PUSH2 0x58c
0x545 JUMPI
---
0x506: JUMPDEST 
0x507: V440 = 0x0
0x50a: V441 = S[0x0]
0x50b: V442 = 0x40
0x50e: V443 = M[0x40]
0x50f: V444 = 0x20
0x511: V445 = 0x2
0x513: V446 = 0x1
0x516: V447 = AND V441 0x1
0x517: V448 = ISZERO V447
0x518: V449 = 0x100
0x51b: V450 = MUL 0x100 V448
0x51c: V451 = 0x0
0x51e: V452 = NOT 0x0
0x51f: V453 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V450
0x522: V454 = AND V441 V453
0x526: V455 = DIV V454 0x2
0x527: V456 = 0x1f
0x52a: V457 = ADD V455 0x1f
0x52d: V458 = DIV V457 0x20
0x52f: V459 = MUL 0x20 V458
0x531: V460 = ADD V443 V459
0x533: V461 = ADD 0x20 V460
0x536: M[0x40] = V461
0x539: M[V443] = V455
0x53d: V462 = ADD V443 0x20
0x541: V463 = ISZERO V455
0x542: V464 = 0x58c
0x545: JUMPI 0x58c V463
---
Entry stack: [V10, 0x11d]
Stack pops: 0
Stack additions: [V443, 0x0, V455, V462, 0x0, V455]
Exit stack: [V10, 0x11d, V443, 0x0, V455, V462, 0x0, V455]

================================

Block 0x546
[0x546:0x54d]
---
Predecessors: [0x506]
Successors: [0x54e, 0x561]
---
0x546 DUP1
0x547 PUSH1 0x1f
0x549 LT
0x54a PUSH2 0x561
0x54d JUMPI
---
0x547: V465 = 0x1f
0x549: V466 = LT 0x1f V455
0x54a: V467 = 0x561
0x54d: JUMPI 0x561 V466
---
Entry stack: [V10, 0x11d, V443, 0x0, V455, V462, 0x0, V455]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x11d, V443, 0x0, V455, V462, 0x0, V455]

================================

Block 0x54e
[0x54e:0x560]
---
Predecessors: [0x546]
Successors: [0x58c]
---
0x54e PUSH2 0x100
0x551 DUP1
0x552 DUP4
0x553 SLOAD
0x554 DIV
0x555 MUL
0x556 DUP4
0x557 MSTORE
0x558 SWAP2
0x559 PUSH1 0x20
0x55b ADD
0x55c SWAP2
0x55d PUSH2 0x58c
0x560 JUMP
---
0x54e: V468 = 0x100
0x553: V469 = S[0x0]
0x554: V470 = DIV V469 0x100
0x555: V471 = MUL V470 0x100
0x557: M[V462] = V471
0x559: V472 = 0x20
0x55b: V473 = ADD 0x20 V462
0x55d: V474 = 0x58c
0x560: JUMP 0x58c
---
Entry stack: [V10, 0x11d, V443, 0x0, V455, V462, 0x0, V455]
Stack pops: 3
Stack additions: [V473, S1, S0]
Exit stack: [V10, 0x11d, V443, 0x0, V455, V473, 0x0, V455]

================================

Block 0x561
[0x561:0x56e]
---
Predecessors: [0x546, 0xb0a]
Successors: [0x56f]
---
0x561 JUMPDEST
0x562 DUP3
0x563 ADD
0x564 SWAP2
0x565 SWAP1
0x566 PUSH1 0x0
0x568 MSTORE
0x569 PUSH1 0x20
0x56b PUSH1 0x0
0x56d SHA3
0x56e SWAP1
---
0x561: JUMPDEST 
0x563: V475 = ADD S2 S0
0x566: V476 = 0x0
0x568: M[0x0] = {0x0, 0x1}
0x569: V477 = 0x20
0x56b: V478 = 0x0
0x56d: V479 = SHA3 0x0 0x20
---
Entry stack: [V10, 0x11d, S5, {0x0, 0x1}, S3, S2, {0x0, 0x1}, S0]
Stack pops: 3
Stack additions: [V475, V479, S2]
Exit stack: [V10, 0x11d, S5, {0x0, 0x1}, S3, V475, V479, S2]

================================

Block 0x56f
[0x56f:0x582]
---
Predecessors: [0x561, 0x56f, 0xb33]
Successors: [0x56f, 0x583]
---
0x56f JUMPDEST
0x570 DUP2
0x571 SLOAD
0x572 DUP2
0x573 MSTORE
0x574 SWAP1
0x575 PUSH1 0x1
0x577 ADD
0x578 SWAP1
0x579 PUSH1 0x20
0x57b ADD
0x57c DUP1
0x57d DUP4
0x57e GT
0x57f PUSH2 0x56f
0x582 JUMPI
---
0x56f: JUMPDEST 
0x571: V480 = S[S1]
0x573: M[S0] = V480
0x575: V481 = 0x1
0x577: V482 = ADD 0x1 S1
0x579: V483 = 0x20
0x57b: V484 = ADD 0x20 S0
0x57e: V485 = GT S2 V484
0x57f: V486 = 0x56f
0x582: JUMPI 0x56f V485
---
Entry stack: [V10, 0x11d, S5, {0x0, 0x1}, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, V482, V484]
Exit stack: [V10, 0x11d, S5, {0x0, 0x1}, S3, S2, V482, V484]

================================

Block 0x583
[0x583:0x58b]
---
Predecessors: [0x56f]
Successors: [0x58c]
---
0x583 DUP3
0x584 SWAP1
0x585 SUB
0x586 PUSH1 0x1f
0x588 AND
0x589 DUP3
0x58a ADD
0x58b SWAP2
---
0x585: V487 = SUB V484 S2
0x586: V488 = 0x1f
0x588: V489 = AND 0x1f V487
0x58a: V490 = ADD S2 V489
---
Entry stack: [V10, 0x11d, S5, {0x0, 0x1}, S3, S2, V482, V484]
Stack pops: 3
Stack additions: [V490, S1, S2]
Exit stack: [V10, 0x11d, S5, {0x0, 0x1}, S3, V490, V482, S2]

================================

Block 0x58c
[0x58c:0x593]
---
Predecessors: [0x506, 0x54e, 0x583, 0xacb, 0xb12]
Successors: [0x11d]
---
0x58c JUMPDEST
0x58d POP
0x58e POP
0x58f POP
0x590 POP
0x591 POP
0x592 DUP2
0x593 JUMP
---
0x58c: JUMPDEST 
0x593: JUMP 0x11d
---
Entry stack: [V10, 0x11d, S5, {0x0, 0x1}, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V10, 0x11d, S5]

================================

Block 0x594
[0x594:0x5f8]
---
Predecessors: [0x1a5]
Successors: [0x5f9]
---
0x594 JUMPDEST
0x595 PUSH1 0x1
0x597 PUSH1 0xa0
0x599 PUSH1 0x2
0x59b EXP
0x59c SUB
0x59d CALLER
0x59e DUP2
0x59f AND
0x5a0 PUSH1 0x0
0x5a2 DUP2
0x5a3 DUP2
0x5a4 MSTORE
0x5a5 PUSH1 0x5
0x5a7 PUSH1 0x20
0x5a9 SWAP1
0x5aa DUP2
0x5ab MSTORE
0x5ac PUSH1 0x40
0x5ae DUP1
0x5af DUP4
0x5b0 SHA3
0x5b1 SWAP5
0x5b2 DUP8
0x5b3 AND
0x5b4 DUP1
0x5b5 DUP5
0x5b6 MSTORE
0x5b7 SWAP5
0x5b8 DUP3
0x5b9 MSTORE
0x5ba DUP1
0x5bb DUP4
0x5bc SHA3
0x5bd DUP7
0x5be SWAP1
0x5bf SSTORE
0x5c0 DUP1
0x5c1 MLOAD
0x5c2 DUP7
0x5c3 DUP2
0x5c4 MSTORE
0x5c5 SWAP1
0x5c6 MLOAD
0x5c7 SWAP3
0x5c8 SWAP5
0x5c9 SWAP4
0x5ca SWAP3
0x5cb PUSH32 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5ec SWAP3
0x5ed SWAP2
0x5ee DUP2
0x5ef SWAP1
0x5f0 SUB
0x5f1 SWAP1
0x5f2 SWAP2
0x5f3 ADD
0x5f4 SWAP1
0x5f5 LOG3
0x5f6 POP
0x5f7 PUSH1 0x1
---
0x594: JUMPDEST 
0x595: V491 = 0x1
0x597: V492 = 0xa0
0x599: V493 = 0x2
0x59b: V494 = EXP 0x2 0xa0
0x59c: V495 = SUB 0x10000000000000000000000000000000000000000 0x1
0x59d: V496 = CALLER
0x59f: V497 = AND 0xffffffffffffffffffffffffffffffffffffffff V496
0x5a0: V498 = 0x0
0x5a4: M[0x0] = V497
0x5a5: V499 = 0x5
0x5a7: V500 = 0x20
0x5ab: M[0x20] = 0x5
0x5ac: V501 = 0x40
0x5b0: V502 = SHA3 0x0 0x40
0x5b3: V503 = AND V127 0xffffffffffffffffffffffffffffffffffffffff
0x5b6: M[0x0] = V503
0x5b9: M[0x20] = V502
0x5bc: V504 = SHA3 0x0 0x40
0x5bf: S[V504] = V129
0x5c1: V505 = M[0x40]
0x5c4: M[V505] = V129
0x5c6: V506 = M[0x40]
0x5cb: V507 = 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925
0x5f0: V508 = SUB V505 V506
0x5f3: V509 = ADD 0x20 V508
0x5f5: LOG V506 V509 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925 V497 V503
0x5f7: V510 = 0x1
---
Entry stack: [V10, 0x1bc, V127, V129]
Stack pops: 2
Stack additions: [S1, S0, 0x1]
Exit stack: [V10, 0x1bc, V127, V129, 0x1]

================================

Block 0x5f9
[0x5f9:0x5fe]
---
Predecessors: [0x594, 0xcb7]
Successors: [0x1bc]
---
0x5f9 JUMPDEST
0x5fa SWAP3
0x5fb SWAP2
0x5fc POP
0x5fd POP
0x5fe JUMP
---
0x5f9: JUMPDEST 
0x5fe: JUMP 0x1bc
---
Entry stack: [V10, 0x1bc, S2, S1, {0x0, 0x1}]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x5ff
[0x5ff:0x604]
---
Predecessors: [0x1d8]
Successors: [0x1e0]
---
0x5ff JUMPDEST
0x600 PUSH1 0x3
0x602 SLOAD
0x603 DUP2
0x604 JUMP
---
0x5ff: JUMPDEST 
0x600: V511 = 0x3
0x602: V512 = S[0x3]
0x604: JUMP 0x1e0
---
Entry stack: [V10, 0x1e0]
Stack pops: 1
Stack additions: [S0, V512]
Exit stack: [V10, 0x1e0, V512]

================================

Block 0x605
[0x605:0x625]
---
Predecessors: [0x1fa]
Successors: [0x626, 0x650]
---
0x605 JUMPDEST
0x606 PUSH1 0x1
0x608 PUSH1 0xa0
0x60a PUSH1 0x2
0x60c EXP
0x60d SUB
0x60e DUP4
0x60f AND
0x610 PUSH1 0x0
0x612 SWAP1
0x613 DUP2
0x614 MSTORE
0x615 PUSH1 0x4
0x617 PUSH1 0x20
0x619 MSTORE
0x61a PUSH1 0x40
0x61c DUP2
0x61d SHA3
0x61e SLOAD
0x61f DUP3
0x620 GT
0x621 DUP1
0x622 PUSH2 0x650
0x625 JUMPI
---
0x605: JUMPDEST 
0x606: V513 = 0x1
0x608: V514 = 0xa0
0x60a: V515 = 0x2
0x60c: V516 = EXP 0x2 0xa0
0x60d: V517 = SUB 0x10000000000000000000000000000000000000000 0x1
0x60f: V518 = AND V161 0xffffffffffffffffffffffffffffffffffffffff
0x610: V519 = 0x0
0x614: M[0x0] = V518
0x615: V520 = 0x4
0x617: V521 = 0x20
0x619: M[0x20] = 0x4
0x61a: V522 = 0x40
0x61d: V523 = SHA3 0x0 0x40
0x61e: V524 = S[V523]
0x620: V525 = GT V166 V524
0x622: V526 = 0x650
0x625: JUMPI 0x650 V525
---
Entry stack: [V10, 0x1bc, V161, V164, V166]
Stack pops: 3
Stack additions: [S2, S1, S0, 0x0, V525]
Exit stack: [V10, 0x1bc, V161, V164, V166, 0x0, V525]

================================

Block 0x626
[0x626:0x64f]
---
Predecessors: [0x605]
Successors: [0x650]
---
0x626 POP
0x627 PUSH1 0x1
0x629 PUSH1 0xa0
0x62b PUSH1 0x2
0x62d EXP
0x62e SUB
0x62f DUP1
0x630 DUP6
0x631 AND
0x632 PUSH1 0x0
0x634 SWAP1
0x635 DUP2
0x636 MSTORE
0x637 PUSH1 0x5
0x639 PUSH1 0x20
0x63b SWAP1
0x63c DUP2
0x63d MSTORE
0x63e PUSH1 0x40
0x640 DUP1
0x641 DUP4
0x642 SHA3
0x643 CALLER
0x644 SWAP1
0x645 SWAP5
0x646 AND
0x647 DUP4
0x648 MSTORE
0x649 SWAP3
0x64a SWAP1
0x64b MSTORE
0x64c SHA3
0x64d SLOAD
0x64e DUP3
0x64f GT
---
0x627: V527 = 0x1
0x629: V528 = 0xa0
0x62b: V529 = 0x2
0x62d: V530 = EXP 0x2 0xa0
0x62e: V531 = SUB 0x10000000000000000000000000000000000000000 0x1
0x631: V532 = AND V161 0xffffffffffffffffffffffffffffffffffffffff
0x632: V533 = 0x0
0x636: M[0x0] = V532
0x637: V534 = 0x5
0x639: V535 = 0x20
0x63d: M[0x20] = 0x5
0x63e: V536 = 0x40
0x642: V537 = SHA3 0x0 0x40
0x643: V538 = CALLER
0x646: V539 = AND 0xffffffffffffffffffffffffffffffffffffffff V538
0x648: M[0x0] = V539
0x64b: M[0x20] = V537
0x64c: V540 = SHA3 0x0 0x40
0x64d: V541 = S[V540]
0x64f: V542 = GT V166 V541
---
Entry stack: [V10, 0x1bc, V161, V164, V166, 0x0, V525]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, V542]
Exit stack: [V10, 0x1bc, V161, V164, V166, 0x0, V542]

================================

Block 0x650
[0x650:0x655]
---
Predecessors: [0x605, 0x626]
Successors: [0x656, 0x674]
---
0x650 JUMPDEST
0x651 DUP1
0x652 PUSH2 0x674
0x655 JUMPI
---
0x650: JUMPDEST 
0x652: V543 = 0x674
0x655: JUMPI 0x674 S0
---
Entry stack: [V10, 0x1bc, V161, V164, V166, 0x0, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x1bc, V161, V164, V166, 0x0, S0]

================================

Block 0x656
[0x656:0x673]
---
Predecessors: [0x650]
Successors: [0x674]
---
0x656 POP
0x657 PUSH1 0x1
0x659 PUSH1 0xa0
0x65b PUSH1 0x2
0x65d EXP
0x65e SUB
0x65f DUP4
0x660 AND
0x661 PUSH1 0x0
0x663 SWAP1
0x664 DUP2
0x665 MSTORE
0x666 PUSH1 0x4
0x668 PUSH1 0x20
0x66a MSTORE
0x66b PUSH1 0x40
0x66d SWAP1
0x66e SHA3
0x66f SLOAD
0x670 DUP3
0x671 DUP2
0x672 ADD
0x673 LT
---
0x657: V544 = 0x1
0x659: V545 = 0xa0
0x65b: V546 = 0x2
0x65d: V547 = EXP 0x2 0xa0
0x65e: V548 = SUB 0x10000000000000000000000000000000000000000 0x1
0x660: V549 = AND V164 0xffffffffffffffffffffffffffffffffffffffff
0x661: V550 = 0x0
0x665: M[0x0] = V549
0x666: V551 = 0x4
0x668: V552 = 0x20
0x66a: M[0x20] = 0x4
0x66b: V553 = 0x40
0x66e: V554 = SHA3 0x0 0x40
0x66f: V555 = S[V554]
0x672: V556 = ADD V555 V166
0x673: V557 = LT V556 V555
---
Entry stack: [V10, 0x1bc, V161, V164, V166, 0x0, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, V557]
Exit stack: [V10, 0x1bc, V161, V164, V166, 0x0, V557]

================================

Block 0x674
[0x674:0x679]
---
Predecessors: [0x650, 0x656]
Successors: [0x67a, 0x681]
---
0x674 JUMPDEST
0x675 ISZERO
0x676 PUSH2 0x681
0x679 JUMPI
---
0x674: JUMPDEST 
0x675: V558 = ISZERO S0
0x676: V559 = 0x681
0x679: JUMPI 0x681 V558
---
Entry stack: [V10, 0x1bc, V161, V164, V166, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1bc, V161, V164, V166, 0x0]

================================

Block 0x67a
[0x67a:0x680]
---
Predecessors: [0x674]
Successors: [0x6f4]
---
0x67a POP
0x67b PUSH1 0x0
0x67d PUSH2 0x6f4
0x680 JUMP
---
0x67b: V560 = 0x0
0x67d: V561 = 0x6f4
0x680: JUMP 0x6f4
---
Entry stack: [V10, 0x1bc, V161, V164, V166, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x1bc, V161, V164, V166, 0x0]

================================

Block 0x681
[0x681:0x6f3]
---
Predecessors: [0x674]
Successors: [0x6f4]
---
0x681 JUMPDEST
0x682 PUSH1 0x1
0x684 PUSH1 0xa0
0x686 PUSH1 0x2
0x688 EXP
0x689 SUB
0x68a DUP1
0x68b DUP6
0x68c AND
0x68d PUSH1 0x0
0x68f DUP2
0x690 DUP2
0x691 MSTORE
0x692 PUSH1 0x4
0x694 PUSH1 0x20
0x696 SWAP1
0x697 DUP2
0x698 MSTORE
0x699 PUSH1 0x40
0x69b DUP1
0x69c DUP4
0x69d SHA3
0x69e DUP1
0x69f SLOAD
0x6a0 DUP9
0x6a1 SWAP1
0x6a2 SUB
0x6a3 SWAP1
0x6a4 SSTORE
0x6a5 DUP8
0x6a6 DUP6
0x6a7 AND
0x6a8 DUP1
0x6a9 DUP5
0x6aa MSTORE
0x6ab DUP2
0x6ac DUP5
0x6ad SHA3
0x6ae DUP1
0x6af SLOAD
0x6b0 DUP10
0x6b1 ADD
0x6b2 SWAP1
0x6b3 SSTORE
0x6b4 DUP5
0x6b5 DUP5
0x6b6 MSTORE
0x6b7 PUSH1 0x5
0x6b9 DUP4
0x6ba MSTORE
0x6bb DUP2
0x6bc DUP5
0x6bd SHA3
0x6be CALLER
0x6bf SWAP1
0x6c0 SWAP7
0x6c1 AND
0x6c2 DUP5
0x6c3 MSTORE
0x6c4 SWAP5
0x6c5 DUP3
0x6c6 MSTORE
0x6c7 SWAP2
0x6c8 DUP3
0x6c9 SWAP1
0x6ca SHA3
0x6cb DUP1
0x6cc SLOAD
0x6cd DUP8
0x6ce SWAP1
0x6cf SUB
0x6d0 SWAP1
0x6d1 SSTORE
0x6d2 DUP2
0x6d3 MLOAD
0x6d4 DUP7
0x6d5 DUP2
0x6d6 MSTORE
0x6d7 SWAP2
0x6d8 MLOAD
0x6d9 PUSH1 0x0
0x6db DUP1
0x6dc MLOAD
0x6dd PUSH1 0x20
0x6df PUSH2 0xd73
0x6e2 DUP4
0x6e3 CODECOPY
0x6e4 DUP2
0x6e5 MLOAD
0x6e6 SWAP2
0x6e7 MSTORE
0x6e8 SWAP3
0x6e9 DUP2
0x6ea SWAP1
0x6eb SUB
0x6ec SWAP1
0x6ed SWAP2
0x6ee ADD
0x6ef SWAP1
0x6f0 LOG3
0x6f1 POP
0x6f2 PUSH1 0x1
---
0x681: JUMPDEST 
0x682: V562 = 0x1
0x684: V563 = 0xa0
0x686: V564 = 0x2
0x688: V565 = EXP 0x2 0xa0
0x689: V566 = SUB 0x10000000000000000000000000000000000000000 0x1
0x68c: V567 = AND V161 0xffffffffffffffffffffffffffffffffffffffff
0x68d: V568 = 0x0
0x691: M[0x0] = V567
0x692: V569 = 0x4
0x694: V570 = 0x20
0x698: M[0x20] = 0x4
0x699: V571 = 0x40
0x69d: V572 = SHA3 0x0 0x40
0x69f: V573 = S[V572]
0x6a2: V574 = SUB V573 V166
0x6a4: S[V572] = V574
0x6a7: V575 = AND 0xffffffffffffffffffffffffffffffffffffffff V164
0x6aa: M[0x0] = V575
0x6ad: V576 = SHA3 0x0 0x40
0x6af: V577 = S[V576]
0x6b1: V578 = ADD V166 V577
0x6b3: S[V576] = V578
0x6b6: M[0x0] = V567
0x6b7: V579 = 0x5
0x6ba: M[0x20] = 0x5
0x6bd: V580 = SHA3 0x0 0x40
0x6be: V581 = CALLER
0x6c1: V582 = AND 0xffffffffffffffffffffffffffffffffffffffff V581
0x6c3: M[0x0] = V582
0x6c6: M[0x20] = V580
0x6ca: V583 = SHA3 0x0 0x40
0x6cc: V584 = S[V583]
0x6cf: V585 = SUB V584 V166
0x6d1: S[V583] = V585
0x6d3: V586 = M[0x40]
0x6d6: M[V586] = V166
0x6d8: V587 = M[0x40]
0x6d9: V588 = 0x0
0x6dc: V589 = M[0x0]
0x6dd: V590 = 0x20
0x6df: V591 = 0xd73
0x6e3: CODECOPY 0x0 0xd73 0x20
0x6e5: V592 = M[0x0]
0x6e7: M[0x0] = V589
0x6eb: V593 = SUB V586 V587
0x6ee: V594 = ADD 0x20 V593
0x6f0: LOG V587 V594 V592 V567 V575
0x6f2: V595 = 0x1
---
Entry stack: [V10, 0x1bc, V161, V164, V166, 0x0]
Stack pops: 4
Stack additions: [S3, S2, S1, 0x1]
Exit stack: [V10, 0x1bc, V161, V164, V166, 0x1]

================================

Block 0x6f4
[0x6f4:0x6fa]
---
Predecessors: [0x67a, 0x681]
Successors: [0x1bc]
---
0x6f4 JUMPDEST
0x6f5 SWAP4
0x6f6 SWAP3
0x6f7 POP
0x6f8 POP
0x6f9 POP
0x6fa JUMP
---
0x6f4: JUMPDEST 
0x6fa: JUMP 0x1bc
---
Entry stack: [V10, 0x1bc, V161, V164, V166, {0x0, 0x1}]
Stack pops: 5
Stack additions: [S0]
Exit stack: [V10, {0x0, 0x1}]

================================

Block 0x6fb
[0x6fb:0x700]
---
Predecessors: [0x233]
Successors: [0x1e0]
---
0x6fb JUMPDEST
0x6fc PUSH1 0x2
0x6fe SLOAD
0x6ff DUP2
0x700 JUMP
---
0x6fb: JUMPDEST 
0x6fc: V596 = 0x2
0x6fe: V597 = S[0x2]
0x700: JUMP 0x1e0
---
Entry stack: [V10, 0x1e0]
Stack pops: 1
Stack additions: [S0, V597]
Exit stack: [V10, 0x1e0, V597]

================================

Block 0x701
[0x701:0x723]
---
Predecessors: [0x24d]
Successors: [0x724, 0x729]
---
0x701 JUMPDEST
0x702 PUSH1 0x1
0x704 PUSH1 0xa0
0x706 PUSH1 0x2
0x708 EXP
0x709 SUB
0x70a CALLER
0x70b AND
0x70c PUSH1 0x0
0x70e SWAP1
0x70f DUP2
0x710 MSTORE
0x711 PUSH1 0x6
0x713 PUSH1 0x20
0x715 MSTORE
0x716 PUSH1 0x40
0x718 DUP2
0x719 SHA3
0x71a SLOAD
0x71b PUSH1 0xff
0x71d AND
0x71e ISZERO
0x71f ISZERO
0x720 PUSH2 0x729
0x723 JUMPI
---
0x701: JUMPDEST 
0x702: V598 = 0x1
0x704: V599 = 0xa0
0x706: V600 = 0x2
0x708: V601 = EXP 0x2 0xa0
0x709: V602 = SUB 0x10000000000000000000000000000000000000000 0x1
0x70a: V603 = CALLER
0x70b: V604 = AND V603 0xffffffffffffffffffffffffffffffffffffffff
0x70c: V605 = 0x0
0x710: M[0x0] = V604
0x711: V606 = 0x6
0x713: V607 = 0x20
0x715: M[0x20] = 0x6
0x716: V608 = 0x40
0x719: V609 = SHA3 0x0 0x40
0x71a: V610 = S[V609]
0x71b: V611 = 0xff
0x71d: V612 = AND 0xff V610
0x71e: V613 = ISZERO V612
0x71f: V614 = ISZERO V613
0x720: V615 = 0x729
0x723: JUMPI 0x729 V614
---
Entry stack: [V10, 0x10b, V189, V191, V193, V201, V204]
Stack pops: 0
Stack additions: [0x0]
Exit stack: [V10, 0x10b, V189, V191, V193, V201, V204, 0x0]

================================

Block 0x724
[0x724:0x728]
---
Predecessors: [0x701]
Successors: []
---
0x724 PUSH1 0x0
0x726 PUSH1 0x0
0x728 REVERT
---
0x724: V616 = 0x0
0x726: V617 = 0x0
0x728: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10b, V189, V191, V193, V201, V204, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V189, V191, V193, V201, V204, 0x0]

================================

Block 0x729
[0x729:0x74a]
---
Predecessors: [0x701]
Successors: [0x74b, 0x74f]
---
0x729 JUMPDEST
0x72a PUSH1 0x1
0x72c PUSH1 0xa0
0x72e PUSH1 0x2
0x730 EXP
0x731 SUB
0x732 DUP4
0x733 AND
0x734 PUSH1 0x0
0x736 SWAP1
0x737 DUP2
0x738 MSTORE
0x739 PUSH1 0x4
0x73b PUSH1 0x20
0x73d MSTORE
0x73e PUSH1 0x40
0x740 SWAP1
0x741 SHA3
0x742 SLOAD
0x743 DUP7
0x744 SWAP1
0x745 LT
0x746 ISZERO
0x747 PUSH2 0x74f
0x74a JUMPI
---
0x729: JUMPDEST 
0x72a: V618 = 0x1
0x72c: V619 = 0xa0
0x72e: V620 = 0x2
0x730: V621 = EXP 0x2 0xa0
0x731: V622 = SUB 0x10000000000000000000000000000000000000000 0x1
0x733: V623 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x734: V624 = 0x0
0x738: M[0x0] = V623
0x739: V625 = 0x4
0x73b: V626 = 0x20
0x73d: M[0x20] = 0x4
0x73e: V627 = 0x40
0x741: V628 = SHA3 0x0 0x40
0x742: V629 = S[V628]
0x745: V630 = LT V629 V189
0x746: V631 = ISZERO V630
0x747: V632 = 0x74f
0x74a: JUMPI 0x74f V631
---
Entry stack: [V10, 0x10b, V189, V191, V193, V201, V204, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x10b, V189, V191, V193, V201, V204, 0x0]

================================

Block 0x74b
[0x74b:0x74e]
---
Predecessors: [0x729]
Successors: [0x84b]
---
0x74b PUSH2 0x84b
0x74e JUMP
---
0x74b: V633 = 0x84b
0x74e: JUMP 0x84b
---
Entry stack: [V10, 0x10b, V189, V191, V193, V201, V204, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V189, V191, V193, V201, V204, 0x0]

================================

Block 0x74f
[0x74f:0x771]
---
Predecessors: [0x729]
Successors: [0x772, 0x776]
---
0x74f JUMPDEST
0x750 PUSH1 0x1
0x752 PUSH1 0xa0
0x754 PUSH1 0x2
0x756 EXP
0x757 SUB
0x758 DUP3
0x759 AND
0x75a PUSH1 0x0
0x75c SWAP1
0x75d DUP2
0x75e MSTORE
0x75f PUSH1 0x4
0x761 PUSH1 0x20
0x763 MSTORE
0x764 PUSH1 0x40
0x766 SWAP1
0x767 SHA3
0x768 SLOAD
0x769 DUP7
0x76a DUP2
0x76b ADD
0x76c LT
0x76d ISZERO
0x76e PUSH2 0x776
0x771 JUMPI
---
0x74f: JUMPDEST 
0x750: V634 = 0x1
0x752: V635 = 0xa0
0x754: V636 = 0x2
0x756: V637 = EXP 0x2 0xa0
0x757: V638 = SUB 0x10000000000000000000000000000000000000000 0x1
0x759: V639 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x75a: V640 = 0x0
0x75e: M[0x0] = V639
0x75f: V641 = 0x4
0x761: V642 = 0x20
0x763: M[0x20] = 0x4
0x764: V643 = 0x40
0x767: V644 = SHA3 0x0 0x40
0x768: V645 = S[V644]
0x76b: V646 = ADD V645 V189
0x76c: V647 = LT V646 V645
0x76d: V648 = ISZERO V647
0x76e: V649 = 0x776
0x771: JUMPI 0x776 V648
---
Entry stack: [V10, 0x10b, V189, V191, V193, V201, V204, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x10b, V189, V191, V193, V201, V204, 0x0]

================================

Block 0x772
[0x772:0x775]
---
Predecessors: [0x74f]
Successors: [0x84b]
---
0x772 PUSH2 0x84b
0x775 JUMP
---
0x772: V650 = 0x84b
0x775: JUMP 0x84b
---
Entry stack: [V10, 0x10b, V189, V191, V193, V201, V204, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V189, V191, V193, V201, V204, 0x0]

================================

Block 0x776
[0x776:0x7a6]
---
Predecessors: [0x74f]
Successors: [0x7a7, 0x7a8]
---
0x776 JUMPDEST
0x777 POP
0x778 PUSH1 0x40
0x77a MLOAD
0x77b DUP6
0x77c DUP6
0x77d MUL
0x77e SWAP1
0x77f PUSH1 0x1
0x781 PUSH1 0xa0
0x783 PUSH1 0x2
0x785 EXP
0x786 SUB
0x787 DUP5
0x788 AND
0x789 SWAP1
0x78a DUP3
0x78b ISZERO
0x78c PUSH2 0x8fc
0x78f MUL
0x790 SWAP1
0x791 DUP4
0x792 SWAP1
0x793 PUSH1 0x0
0x795 DUP2
0x796 DUP2
0x797 DUP2
0x798 DUP6
0x799 DUP9
0x79a DUP9
0x79b CALL
0x79c SWAP4
0x79d POP
0x79e POP
0x79f POP
0x7a0 POP
0x7a1 ISZERO
0x7a2 ISZERO
0x7a3 PUSH2 0x7a8
0x7a6 JUMPI
---
0x776: JUMPDEST 
0x778: V651 = 0x40
0x77a: V652 = M[0x40]
0x77d: V653 = MUL V191 V189
0x77f: V654 = 0x1
0x781: V655 = 0xa0
0x783: V656 = 0x2
0x785: V657 = EXP 0x2 0xa0
0x786: V658 = SUB 0x10000000000000000000000000000000000000000 0x1
0x788: V659 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x78b: V660 = ISZERO V653
0x78c: V661 = 0x8fc
0x78f: V662 = MUL 0x8fc V660
0x793: V663 = 0x0
0x79b: V664 = CALL V662 V659 V653 V652 0x0 V652 0x0
0x7a1: V665 = ISZERO V664
0x7a2: V666 = ISZERO V665
0x7a3: V667 = 0x7a8
0x7a6: JUMPI 0x7a8 V666
---
Entry stack: [V10, 0x10b, V189, V191, V193, V201, V204, 0x0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, V653]
Exit stack: [V10, 0x10b, V189, V191, V193, V201, V204, V653]

================================

Block 0x7a7
[0x7a7:0x7a7]
---
Predecessors: [0x776]
Successors: []
---
0x7a7 INVALID
---
0x7a7: INVALID 
---
Entry stack: [V10, 0x10b, V189, V191, V193, V201, V204, V653]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V189, V191, V193, V201, V204, V653]

================================

Block 0x7a8
[0x7a8:0x84a]
---
Predecessors: [0x776]
Successors: [0x84b]
---
0x7a8 JUMPDEST
0x7a9 PUSH1 0x1
0x7ab PUSH1 0xa0
0x7ad PUSH1 0x2
0x7af EXP
0x7b0 SUB
0x7b1 DUP1
0x7b2 DUP5
0x7b3 AND
0x7b4 PUSH1 0x0
0x7b6 DUP2
0x7b7 DUP2
0x7b8 MSTORE
0x7b9 PUSH1 0x4
0x7bb PUSH1 0x20
0x7bd SWAP1
0x7be DUP2
0x7bf MSTORE
0x7c0 PUSH1 0x40
0x7c2 DUP1
0x7c3 DUP4
0x7c4 SHA3
0x7c5 DUP1
0x7c6 SLOAD
0x7c7 DUP13
0x7c8 SWAP1
0x7c9 SUB
0x7ca SWAP1
0x7cb SSTORE
0x7cc SWAP4
0x7cd DUP7
0x7ce AND
0x7cf DUP1
0x7d0 DUP4
0x7d1 MSTORE
0x7d2 SWAP2
0x7d3 DUP5
0x7d4 SWAP1
0x7d5 SHA3
0x7d6 DUP1
0x7d7 SLOAD
0x7d8 DUP12
0x7d9 ADD
0x7da SWAP1
0x7db SSTORE
0x7dc DUP4
0x7dd MLOAD
0x7de DUP11
0x7df DUP2
0x7e0 MSTORE
0x7e1 SWAP4
0x7e2 MLOAD
0x7e3 SWAP2
0x7e4 SWAP4
0x7e5 PUSH1 0x0
0x7e7 DUP1
0x7e8 MLOAD
0x7e9 PUSH1 0x20
0x7eb PUSH2 0xd73
0x7ee DUP4
0x7ef CODECOPY
0x7f0 DUP2
0x7f1 MLOAD
0x7f2 SWAP2
0x7f3 MSTORE
0x7f4 SWAP3
0x7f5 SWAP1
0x7f6 DUP2
0x7f7 SWAP1
0x7f8 SUB
0x7f9 SWAP1
0x7fa SWAP2
0x7fb ADD
0x7fc SWAP1
0x7fd LOG3
0x7fe PUSH1 0x40
0x800 DUP1
0x801 MLOAD
0x802 DUP8
0x803 DUP2
0x804 MSTORE
0x805 PUSH1 0x20
0x807 DUP2
0x808 ADD
0x809 DUP8
0x80a SWAP1
0x80b MSTORE
0x80c DUP2
0x80d MLOAD
0x80e DUP7
0x80f SWAP3
0x810 PUSH1 0x1
0x812 PUSH1 0xa0
0x814 PUSH1 0x2
0x816 EXP
0x817 SUB
0x818 DUP1
0x819 DUP8
0x81a AND
0x81b SWAP4
0x81c SWAP1
0x81d DUP9
0x81e AND
0x81f SWAP3
0x820 PUSH32 0x2b2fd26928253906c5a1489261cf62686d03933ff89fe1220ba0b910b9d60f35
0x841 SWAP3
0x842 SWAP2
0x843 DUP2
0x844 SWAP1
0x845 SUB
0x846 SWAP1
0x847 SWAP2
0x848 ADD
0x849 SWAP1
0x84a LOG4
---
0x7a8: JUMPDEST 
0x7a9: V668 = 0x1
0x7ab: V669 = 0xa0
0x7ad: V670 = 0x2
0x7af: V671 = EXP 0x2 0xa0
0x7b0: V672 = SUB 0x10000000000000000000000000000000000000000 0x1
0x7b3: V673 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x7b4: V674 = 0x0
0x7b8: M[0x0] = V673
0x7b9: V675 = 0x4
0x7bb: V676 = 0x20
0x7bf: M[0x20] = 0x4
0x7c0: V677 = 0x40
0x7c4: V678 = SHA3 0x0 0x40
0x7c6: V679 = S[V678]
0x7c9: V680 = SUB V679 V189
0x7cb: S[V678] = V680
0x7ce: V681 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x7d1: M[0x0] = V681
0x7d5: V682 = SHA3 0x0 0x40
0x7d7: V683 = S[V682]
0x7d9: V684 = ADD V189 V683
0x7db: S[V682] = V684
0x7dd: V685 = M[0x40]
0x7e0: M[V685] = V189
0x7e2: V686 = M[0x40]
0x7e5: V687 = 0x0
0x7e8: V688 = M[0x0]
0x7e9: V689 = 0x20
0x7eb: V690 = 0xd73
0x7ef: CODECOPY 0x0 0xd73 0x20
0x7f1: V691 = M[0x0]
0x7f3: M[0x0] = V688
0x7f8: V692 = SUB V685 V686
0x7fb: V693 = ADD 0x20 V692
0x7fd: LOG V686 V693 V691 V673 V681
0x7fe: V694 = 0x40
0x801: V695 = M[0x40]
0x804: M[V695] = V189
0x805: V696 = 0x20
0x808: V697 = ADD V695 0x20
0x80b: M[V697] = V191
0x80d: V698 = M[0x40]
0x810: V699 = 0x1
0x812: V700 = 0xa0
0x814: V701 = 0x2
0x816: V702 = EXP 0x2 0xa0
0x817: V703 = SUB 0x10000000000000000000000000000000000000000 0x1
0x81a: V704 = AND V204 0xffffffffffffffffffffffffffffffffffffffff
0x81e: V705 = AND V201 0xffffffffffffffffffffffffffffffffffffffff
0x820: V706 = 0x2b2fd26928253906c5a1489261cf62686d03933ff89fe1220ba0b910b9d60f35
0x845: V707 = SUB V695 V698
0x848: V708 = ADD 0x40 V707
0x84a: LOG V698 V708 0x2b2fd26928253906c5a1489261cf62686d03933ff89fe1220ba0b910b9d60f35 V705 V704 V193
---
Entry stack: [V10, 0x10b, V189, V191, V193, V201, V204, V653]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0]
Exit stack: [V10, 0x10b, V189, V191, V193, V201, V204, V653]

================================

Block 0x84b
[0x84b:0x84b]
---
Predecessors: [0x74b, 0x772, 0x7a8]
Successors: [0x84c]
---
0x84b JUMPDEST
---
0x84b: JUMPDEST 
---
Entry stack: [V10, 0x10b, V189, V191, V193, V201, V204, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V189, V191, V193, V201, V204, S0]

================================

Block 0x84c
[0x84c:0x853]
---
Predecessors: [0x84b]
Successors: [0x10b]
---
0x84c JUMPDEST
0x84d POP
0x84e POP
0x84f POP
0x850 POP
0x851 POP
0x852 POP
0x853 JUMP
---
0x84c: JUMPDEST 
0x853: JUMP 0x10b
---
Entry stack: [V10, 0x10b, V189, V191, V193, V201, V204, S0]
Stack pops: 7
Stack additions: []
Exit stack: [V10]

================================

Block 0x854
[0x854:0x86f]
---
Predecessors: [0x272]
Successors: [0x870, 0x875]
---
0x854 JUMPDEST
0x855 ORIGIN
0x856 PUSH1 0x1
0x858 PUSH1 0xa0
0x85a PUSH1 0x2
0x85c EXP
0x85d SUB
0x85e AND
0x85f CALLER
0x860 PUSH1 0x1
0x862 PUSH1 0xa0
0x864 PUSH1 0x2
0x866 EXP
0x867 SUB
0x868 AND
0x869 EQ
0x86a ISZERO
0x86b ISZERO
0x86c PUSH2 0x875
0x86f JUMPI
---
0x854: JUMPDEST 
0x855: V709 = ORIGIN
0x856: V710 = 0x1
0x858: V711 = 0xa0
0x85a: V712 = 0x2
0x85c: V713 = EXP 0x2 0xa0
0x85d: V714 = SUB 0x10000000000000000000000000000000000000000 0x1
0x85e: V715 = AND 0xffffffffffffffffffffffffffffffffffffffff V709
0x85f: V716 = CALLER
0x860: V717 = 0x1
0x862: V718 = 0xa0
0x864: V719 = 0x2
0x866: V720 = EXP 0x2 0xa0
0x867: V721 = SUB 0x10000000000000000000000000000000000000000 0x1
0x868: V722 = AND 0xffffffffffffffffffffffffffffffffffffffff V716
0x869: V723 = EQ V722 V715
0x86a: V724 = ISZERO V723
0x86b: V725 = ISZERO V724
0x86c: V726 = 0x875
0x86f: JUMPI 0x875 V725
---
Entry stack: [V10, 0x10b, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V208]

================================

Block 0x870
[0x870:0x874]
---
Predecessors: [0x854]
Successors: []
---
0x870 PUSH1 0x0
0x872 PUSH1 0x0
0x874 REVERT
---
0x870: V727 = 0x0
0x872: V728 = 0x0
0x874: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10b, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V208]

================================

Block 0x875
[0x875:0x88b]
---
Predecessors: [0x854]
Successors: [0x88c, 0x891]
---
0x875 JUMPDEST
0x876 PUSH1 0x8
0x878 SLOAD
0x879 DUP2
0x87a MUL
0x87b ADDRESS
0x87c PUSH1 0x1
0x87e PUSH1 0xa0
0x880 PUSH1 0x2
0x882 EXP
0x883 SUB
0x884 AND
0x885 BALANCE
0x886 LT
0x887 ISZERO
0x888 PUSH2 0x891
0x88b JUMPI
---
0x875: JUMPDEST 
0x876: V729 = 0x8
0x878: V730 = S[0x8]
0x87a: V731 = MUL V208 V730
0x87b: V732 = ADDRESS
0x87c: V733 = 0x1
0x87e: V734 = 0xa0
0x880: V735 = 0x2
0x882: V736 = EXP 0x2 0xa0
0x883: V737 = SUB 0x10000000000000000000000000000000000000000 0x1
0x884: V738 = AND 0xffffffffffffffffffffffffffffffffffffffff V732
0x885: V739 = BALANCE V738
0x886: V740 = LT V739 V731
0x887: V741 = ISZERO V740
0x888: V742 = 0x891
0x88b: JUMPI 0x891 V741
---
Entry stack: [V10, 0x10b, V208]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x10b, V208]

================================

Block 0x88c
[0x88c:0x890]
---
Predecessors: [0x875]
Successors: []
---
0x88c PUSH1 0x0
0x88e PUSH1 0x0
0x890 REVERT
---
0x88c: V743 = 0x0
0x88e: V744 = 0x0
0x890: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10b, V208]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V208]

================================

Block 0x891
[0x891:0x931]
---
Predecessors: [0x875]
Successors: [0x932, 0x933]
---
0x891 JUMPDEST
0x892 PUSH1 0x8
0x894 SLOAD
0x895 PUSH1 0x7
0x897 SLOAD
0x898 PUSH1 0x40
0x89a DUP1
0x89b MLOAD
0x89c PUSH32 0x39a12c3b00000000000000000000000000000000000000000000000000000000
0x8bd DUP2
0x8be MSTORE
0x8bf PUSH1 0x4
0x8c1 DUP2
0x8c2 ADD
0x8c3 DUP6
0x8c4 SWAP1
0x8c5 MSTORE
0x8c6 PUSH1 0x24
0x8c8 DUP2
0x8c9 ADD
0x8ca SWAP4
0x8cb SWAP1
0x8cc SWAP4
0x8cd MSTORE
0x8ce PUSH32 0x6275796261636b00000000000000000000000000000000000000000000000000
0x8ef PUSH1 0x44
0x8f1 DUP5
0x8f2 ADD
0x8f3 MSTORE
0x8f4 PUSH1 0x1
0x8f6 PUSH1 0xa0
0x8f8 PUSH1 0x2
0x8fa EXP
0x8fb SUB
0x8fc CALLER
0x8fd DUP2
0x8fe AND
0x8ff PUSH1 0x64
0x901 DUP6
0x902 ADD
0x903 MSTORE
0x904 SWAP2
0x905 DUP3
0x906 AND
0x907 PUSH1 0x84
0x909 DUP5
0x90a ADD
0x90b MSTORE
0x90c MLOAD
0x90d ADDRESS
0x90e SWAP1
0x90f SWAP2
0x910 AND
0x911 SWAP2
0x912 PUSH4 0x39a12c3b
0x917 SWAP2
0x918 PUSH1 0xa4
0x91a DUP1
0x91b DUP4
0x91c ADD
0x91d SWAP3
0x91e PUSH1 0x0
0x920 SWAP3
0x921 SWAP2
0x922 SWAP1
0x923 DUP3
0x924 SWAP1
0x925 SUB
0x926 ADD
0x927 DUP2
0x928 DUP4
0x929 DUP8
0x92a DUP1
0x92b EXTCODESIZE
0x92c ISZERO
0x92d ISZERO
0x92e PUSH2 0x933
0x931 JUMPI
---
0x891: JUMPDEST 
0x892: V745 = 0x8
0x894: V746 = S[0x8]
0x895: V747 = 0x7
0x897: V748 = S[0x7]
0x898: V749 = 0x40
0x89b: V750 = M[0x40]
0x89c: V751 = 0x39a12c3b00000000000000000000000000000000000000000000000000000000
0x8be: M[V750] = 0x39a12c3b00000000000000000000000000000000000000000000000000000000
0x8bf: V752 = 0x4
0x8c2: V753 = ADD V750 0x4
0x8c5: M[V753] = V208
0x8c6: V754 = 0x24
0x8c9: V755 = ADD V750 0x24
0x8cd: M[V755] = V746
0x8ce: V756 = 0x6275796261636b00000000000000000000000000000000000000000000000000
0x8ef: V757 = 0x44
0x8f2: V758 = ADD V750 0x44
0x8f3: M[V758] = 0x6275796261636b00000000000000000000000000000000000000000000000000
0x8f4: V759 = 0x1
0x8f6: V760 = 0xa0
0x8f8: V761 = 0x2
0x8fa: V762 = EXP 0x2 0xa0
0x8fb: V763 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8fc: V764 = CALLER
0x8fe: V765 = AND 0xffffffffffffffffffffffffffffffffffffffff V764
0x8ff: V766 = 0x64
0x902: V767 = ADD V750 0x64
0x903: M[V767] = V765
0x906: V768 = AND 0xffffffffffffffffffffffffffffffffffffffff V748
0x907: V769 = 0x84
0x90a: V770 = ADD V750 0x84
0x90b: M[V770] = V768
0x90c: V771 = M[0x40]
0x90d: V772 = ADDRESS
0x910: V773 = AND 0xffffffffffffffffffffffffffffffffffffffff V772
0x912: V774 = 0x39a12c3b
0x918: V775 = 0xa4
0x91c: V776 = ADD V750 0xa4
0x91e: V777 = 0x0
0x925: V778 = SUB V750 V771
0x926: V779 = ADD V778 0xa4
0x92b: V780 = EXTCODESIZE V773
0x92c: V781 = ISZERO V780
0x92d: V782 = ISZERO V781
0x92e: V783 = 0x933
0x931: JUMPI 0x933 V782
---
Entry stack: [V10, 0x10b, V208]
Stack pops: 1
Stack additions: [S0, V773, 0x39a12c3b, V776, 0x0, V771, V779, V771, 0x0, V773]
Exit stack: [V10, 0x10b, V208, V773, 0x39a12c3b, V776, 0x0, V771, V779, V771, 0x0, V773]

================================

Block 0x932
[0x932:0x932]
---
Predecessors: [0x891]
Successors: []
---
0x932 INVALID
---
0x932: INVALID 
---
Entry stack: [V10, 0x10b, V208, V773, 0x39a12c3b, V776, 0x0, V771, V779, V771, 0x0, V773]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V208, V773, 0x39a12c3b, V776, 0x0, V771, V779, V771, 0x0, V773]

================================

Block 0x933
[0x933:0x93f]
---
Predecessors: [0x891]
Successors: [0x940, 0x941]
---
0x933 JUMPDEST
0x934 PUSH2 0x2c6
0x937 GAS
0x938 SUB
0x939 CALL
0x93a ISZERO
0x93b ISZERO
0x93c PUSH2 0x941
0x93f JUMPI
---
0x933: JUMPDEST 
0x934: V784 = 0x2c6
0x937: V785 = GAS
0x938: V786 = SUB V785 0x2c6
0x939: V787 = CALL V786 V773 0x0 V771 V779 V771 0x0
0x93a: V788 = ISZERO V787
0x93b: V789 = ISZERO V788
0x93c: V790 = 0x941
0x93f: JUMPI 0x941 V789
---
Entry stack: [V10, 0x10b, V208, V773, 0x39a12c3b, V776, 0x0, V771, V779, V771, 0x0, V773]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x10b, V208, V773, 0x39a12c3b, V776]

================================

Block 0x940
[0x940:0x940]
---
Predecessors: [0x933]
Successors: []
---
0x940 INVALID
---
0x940: INVALID 
---
Entry stack: [V10, 0x10b, V208, V773, 0x39a12c3b, V776]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V208, V773, 0x39a12c3b, V776]

================================

Block 0x941
[0x941:0x944]
---
Predecessors: [0x933]
Successors: [0x945]
---
0x941 JUMPDEST
0x942 POP
0x943 POP
0x944 POP
---
0x941: JUMPDEST 
---
Entry stack: [V10, 0x10b, V208, V773, 0x39a12c3b, V776]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x10b, V208]

================================

Block 0x945
[0x945:0x945]
---
Predecessors: [0x941, 0x965, 0xc5d]
Successors: [0x946]
---
0x945 JUMPDEST
---
0x945: JUMPDEST 
---
Entry stack: [V10, 0x10b, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, S0]

================================

Block 0x946
[0x946:0x948]
---
Predecessors: [0x945]
Successors: [0x10b]
---
0x946 JUMPDEST
0x947 POP
0x948 JUMP
---
0x946: JUMPDEST 
0x948: JUMP 0x10b
---
Entry stack: [V10, 0x10b, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0x949
[0x949:0x95f]
---
Predecessors: [0x27f]
Successors: [0x960, 0x965]
---
0x949 JUMPDEST
0x94a PUSH1 0x7
0x94c SLOAD
0x94d CALLER
0x94e PUSH1 0x1
0x950 PUSH1 0xa0
0x952 PUSH1 0x2
0x954 EXP
0x955 SUB
0x956 SWAP1
0x957 DUP2
0x958 AND
0x959 SWAP2
0x95a AND
0x95b EQ
0x95c PUSH2 0x965
0x95f JUMPI
---
0x949: JUMPDEST 
0x94a: V791 = 0x7
0x94c: V792 = S[0x7]
0x94d: V793 = CALLER
0x94e: V794 = 0x1
0x950: V795 = 0xa0
0x952: V796 = 0x2
0x954: V797 = EXP 0x2 0xa0
0x955: V798 = SUB 0x10000000000000000000000000000000000000000 0x1
0x958: V799 = AND 0xffffffffffffffffffffffffffffffffffffffff V793
0x95a: V800 = AND V792 0xffffffffffffffffffffffffffffffffffffffff
0x95b: V801 = EQ V800 V799
0x95c: V802 = 0x965
0x95f: JUMPI 0x965 V801
---
Entry stack: [V10, 0x10b, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V212]

================================

Block 0x960
[0x960:0x964]
---
Predecessors: [0x949]
Successors: []
---
0x960 PUSH1 0x0
0x962 PUSH1 0x0
0x964 REVERT
---
0x960: V803 = 0x0
0x962: V804 = 0x0
0x964: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10b, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V212]

================================

Block 0x965
[0x965:0x994]
---
Predecessors: [0x949]
Successors: [0x945, 0x995]
---
0x965 JUMPDEST
0x966 PUSH1 0x7
0x968 SLOAD
0x969 PUSH1 0x40
0x96b MLOAD
0x96c PUSH1 0x1
0x96e PUSH1 0xa0
0x970 PUSH1 0x2
0x972 EXP
0x973 SUB
0x974 SWAP1
0x975 SWAP2
0x976 AND
0x977 SWAP1
0x978 DUP3
0x979 ISZERO
0x97a PUSH2 0x8fc
0x97d MUL
0x97e SWAP1
0x97f DUP4
0x980 SWAP1
0x981 PUSH1 0x0
0x983 DUP2
0x984 DUP2
0x985 DUP2
0x986 DUP6
0x987 DUP9
0x988 DUP9
0x989 CALL
0x98a SWAP4
0x98b POP
0x98c POP
0x98d POP
0x98e POP
0x98f ISZERO
0x990 ISZERO
0x991 PUSH2 0x945
0x994 JUMPI
---
0x965: JUMPDEST 
0x966: V805 = 0x7
0x968: V806 = S[0x7]
0x969: V807 = 0x40
0x96b: V808 = M[0x40]
0x96c: V809 = 0x1
0x96e: V810 = 0xa0
0x970: V811 = 0x2
0x972: V812 = EXP 0x2 0xa0
0x973: V813 = SUB 0x10000000000000000000000000000000000000000 0x1
0x976: V814 = AND V806 0xffffffffffffffffffffffffffffffffffffffff
0x979: V815 = ISZERO V212
0x97a: V816 = 0x8fc
0x97d: V817 = MUL 0x8fc V815
0x981: V818 = 0x0
0x989: V819 = CALL V817 V814 V212 V808 0x0 V808 0x0
0x98f: V820 = ISZERO V819
0x990: V821 = ISZERO V820
0x991: V822 = 0x945
0x994: JUMPI 0x945 V821
---
Entry stack: [V10, 0x10b, V212]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x10b, V212]

================================

Block 0x995
[0x995:0x995]
---
Predecessors: [0x965]
Successors: []
---
0x995 INVALID
---
0x995: INVALID 
---
Entry stack: [V10, 0x10b, V212]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V212]

================================

Block 0x996
[0x996:0x996]
---
Predecessors: []
Successors: [0x997]
---
0x996 JUMPDEST
---
0x996: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x997
[0x997:0x997]
---
Predecessors: [0x996]
Successors: [0x998]
---
0x997 JUMPDEST
---
0x997: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x998
[0x998:0x99a]
---
Predecessors: [0x997]
Successors: []
Has unresolved jump.
---
0x998 JUMPDEST
0x999 POP
0x99a JUMP
---
0x998: JUMPDEST 
0x99a: JUMP S1
---
Entry stack: []
Stack pops: 2
Stack additions: []
Exit stack: []

================================

Block 0x99b
[0x99b:0x9ac]
---
Predecessors: [0x294]
Successors: [0x1e0]
---
0x99b JUMPDEST
0x99c PUSH1 0x4
0x99e PUSH1 0x20
0x9a0 MSTORE
0x9a1 PUSH1 0x0
0x9a3 SWAP1
0x9a4 DUP2
0x9a5 MSTORE
0x9a6 PUSH1 0x40
0x9a8 SWAP1
0x9a9 SHA3
0x9aa SLOAD
0x9ab DUP2
0x9ac JUMP
---
0x99b: JUMPDEST 
0x99c: V823 = 0x4
0x99e: V824 = 0x20
0x9a0: M[0x20] = 0x4
0x9a1: V825 = 0x0
0x9a5: M[0x0] = V225
0x9a6: V826 = 0x40
0x9a9: V827 = SHA3 0x0 0x40
0x9aa: V828 = S[V827]
0x9ac: JUMP 0x1e0
---
Entry stack: [V10, 0x1e0, V225]
Stack pops: 2
Stack additions: [S1, V828]
Exit stack: [V10, 0x1e0, V828]

================================

Block 0x9ad
[0x9ad:0x9bd]
---
Predecessors: [0x2c2, 0xd4c]
Successors: [0x9be, 0x9c6]
---
0x9ad JUMPDEST
0x9ae DUP2
0x9af MLOAD
0x9b0 PUSH1 0x0
0x9b2 SWAP1
0x9b3 DUP3
0x9b4 DUP2
0x9b5 MUL
0x9b6 DUP3
0x9b7 DUP2
0x9b8 ISZERO
0x9b9 ISZERO
0x9ba PUSH2 0x9c6
0x9bd JUMPI
---
0x9ad: JUMPDEST 
0x9af: V829 = M[S1]
0x9b0: V830 = 0x0
0x9b5: V831 = MUL V829 S0
0x9b8: V832 = ISZERO V831
0x9b9: V833 = ISZERO V832
0x9ba: V834 = 0x9c6
0x9bd: JUMPI 0x9c6 V833
---
Entry stack: [V10, 0x10b, V410, S3, {0x1bc, 0xc34}, S1, S0]
Stack pops: 2
Stack additions: [S1, S0, 0x0, V829, V831, 0x0]
Exit stack: [V10, 0x10b, V410, S3, {0x1bc, 0xc34}, S1, S0, 0x0, V829, V831, 0x0]

================================

Block 0x9be
[0x9be:0x9c5]
---
Predecessors: [0x9ad]
Successors: [0xab3]
---
0x9be PUSH1 0x0
0x9c0 SWAP4
0x9c1 POP
0x9c2 PUSH2 0xab3
0x9c5 JUMP
---
0x9be: V835 = 0x0
0x9c2: V836 = 0xab3
0x9c5: JUMP 0xab3
---
Entry stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, 0x0, V829, V831, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, 0x0, V829, V831, 0x0]

================================

Block 0x9c6
[0x9c6:0x9e7]
---
Predecessors: [0x9ad]
Successors: [0x9e8, 0x9f0]
---
0x9c6 JUMPDEST
0x9c7 PUSH1 0x1
0x9c9 PUSH1 0xa0
0x9cb PUSH1 0x2
0x9cd EXP
0x9ce SUB
0x9cf CALLER
0x9d0 AND
0x9d1 PUSH1 0x0
0x9d3 SWAP1
0x9d4 DUP2
0x9d5 MSTORE
0x9d6 PUSH1 0x4
0x9d8 PUSH1 0x20
0x9da MSTORE
0x9db PUSH1 0x40
0x9dd SWAP1
0x9de SHA3
0x9df SLOAD
0x9e0 DUP3
0x9e1 SWAP1
0x9e2 LT
0x9e3 ISZERO
0x9e4 PUSH2 0x9f0
0x9e7 JUMPI
---
0x9c6: JUMPDEST 
0x9c7: V837 = 0x1
0x9c9: V838 = 0xa0
0x9cb: V839 = 0x2
0x9cd: V840 = EXP 0x2 0xa0
0x9ce: V841 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9cf: V842 = CALLER
0x9d0: V843 = AND V842 0xffffffffffffffffffffffffffffffffffffffff
0x9d1: V844 = 0x0
0x9d5: M[0x0] = V843
0x9d6: V845 = 0x4
0x9d8: V846 = 0x20
0x9da: M[0x20] = 0x4
0x9db: V847 = 0x40
0x9de: V848 = SHA3 0x0 0x40
0x9df: V849 = S[V848]
0x9e2: V850 = LT V849 V831
0x9e3: V851 = ISZERO V850
0x9e4: V852 = 0x9f0
0x9e7: JUMPI 0x9f0 V851
---
Entry stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, 0x0, V829, V831, 0x0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, 0x0, V829, V831, 0x0]

================================

Block 0x9e8
[0x9e8:0x9ef]
---
Predecessors: [0x9c6]
Successors: [0xab3]
---
0x9e8 PUSH1 0x0
0x9ea SWAP4
0x9eb POP
0x9ec PUSH2 0xab3
0x9ef JUMP
---
0x9e8: V853 = 0x0
0x9ec: V854 = 0xab3
0x9ef: JUMP 0xab3
---
Entry stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, 0x0, V829, V831, 0x0]
Stack pops: 4
Stack additions: [0x0, S2, S1, S0]
Exit stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, 0x0, V829, V831, 0x0]

================================

Block 0x9f0
[0x9f0:0xa10]
---
Predecessors: [0x9c6]
Successors: [0xa11]
---
0x9f0 JUMPDEST
0x9f1 POP
0x9f2 PUSH1 0x1
0x9f4 PUSH1 0xa0
0x9f6 PUSH1 0x2
0x9f8 EXP
0x9f9 SUB
0x9fa CALLER
0x9fb AND
0x9fc PUSH1 0x0
0x9fe SWAP1
0x9ff DUP2
0xa00 MSTORE
0xa01 PUSH1 0x4
0xa03 PUSH1 0x20
0xa05 MSTORE
0xa06 PUSH1 0x40
0xa08 DUP2
0xa09 SHA3
0xa0a DUP1
0xa0b SLOAD
0xa0c DUP4
0xa0d SWAP1
0xa0e SUB
0xa0f SWAP1
0xa10 SSTORE
---
0x9f0: JUMPDEST 
0x9f2: V855 = 0x1
0x9f4: V856 = 0xa0
0x9f6: V857 = 0x2
0x9f8: V858 = EXP 0x2 0xa0
0x9f9: V859 = SUB 0x10000000000000000000000000000000000000000 0x1
0x9fa: V860 = CALLER
0x9fb: V861 = AND V860 0xffffffffffffffffffffffffffffffffffffffff
0x9fc: V862 = 0x0
0xa00: M[0x0] = V861
0xa01: V863 = 0x4
0xa03: V864 = 0x20
0xa05: M[0x20] = 0x4
0xa06: V865 = 0x40
0xa09: V866 = SHA3 0x0 0x40
0xa0b: V867 = S[V866]
0xa0e: V868 = SUB V867 V831
0xa10: S[V866] = V868
---
Entry stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, 0x0, V829, V831, 0x0]
Stack pops: 2
Stack additions: [S1, 0x0]
Exit stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, 0x0, V829, V831, 0x0]

================================

Block 0xa11
[0xa11:0xa19]
---
Predecessors: [0x9f0, 0xaa6]
Successors: [0xa1a, 0xaae]
---
0xa11 JUMPDEST
0xa12 DUP3
0xa13 DUP2
0xa14 LT
0xa15 ISZERO
0xa16 PUSH2 0xaae
0xa19 JUMPI
---
0xa11: JUMPDEST 
0xa14: V869 = LT S0 S2
0xa15: V870 = ISZERO V869
0xa16: V871 = 0xaae
0xa19: JUMPI 0xaae V870
---
Entry stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, 0x0, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, 0x0, S2, S1, S0]

================================

Block 0xa1a
[0xa1a:0xa2a]
---
Predecessors: [0xa11]
Successors: [0xa2b, 0xa2c]
---
0xa1a DUP5
0xa1b PUSH1 0x4
0xa1d PUSH1 0x0
0xa1f DUP9
0xa20 DUP5
0xa21 DUP2
0xa22 MLOAD
0xa23 DUP2
0xa24 LT
0xa25 ISZERO
0xa26 ISZERO
0xa27 PUSH2 0xa2c
0xa2a JUMPI
---
0xa1b: V872 = 0x4
0xa1d: V873 = 0x0
0xa22: V874 = M[S5]
0xa24: V875 = LT S0 V874
0xa25: V876 = ISZERO V875
0xa26: V877 = ISZERO V876
0xa27: V878 = 0xa2c
0xa2a: JUMPI 0xa2c V877
---
Entry stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, 0x0, S2, S1, S0]
Stack pops: 6
Stack additions: [S5, S4, S3, S2, S1, S0, S4, 0x4, 0x0, S5, S0]
Exit stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, 0x0, S2, S1, S0, S4, 0x4, 0x0, S5, S0]

================================

Block 0xa2b
[0xa2b:0xa2b]
---
Predecessors: [0xa1a]
Successors: []
---
0xa2b INVALID
---
0xa2b: INVALID 
---
Entry stack: [V10, 0x10b, V410, S12, {0x1bc, 0xc34}, S10, S9, 0x0, S7, S6, S5, S4, 0x4, 0x0, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V410, S12, {0x1bc, 0xc34}, S10, S9, 0x0, S7, S6, S5, S4, 0x4, 0x0, S1, S0]

================================

Block 0xa2c
[0xa2c:0xa61]
---
Predecessors: [0xa1a]
Successors: [0xa62, 0xa63]
---
0xa2c JUMPDEST
0xa2d PUSH1 0x20
0xa2f SWAP1
0xa30 DUP2
0xa31 MUL
0xa32 SWAP1
0xa33 SWAP2
0xa34 ADD
0xa35 DUP2
0xa36 ADD
0xa37 MLOAD
0xa38 PUSH1 0x1
0xa3a PUSH1 0xa0
0xa3c PUSH1 0x2
0xa3e EXP
0xa3f SUB
0xa40 AND
0xa41 DUP3
0xa42 MSTORE
0xa43 DUP2
0xa44 ADD
0xa45 SWAP2
0xa46 SWAP1
0xa47 SWAP2
0xa48 MSTORE
0xa49 PUSH1 0x40
0xa4b ADD
0xa4c PUSH1 0x0
0xa4e SHA3
0xa4f DUP1
0xa50 SLOAD
0xa51 SWAP1
0xa52 SWAP2
0xa53 ADD
0xa54 SWAP1
0xa55 SSTORE
0xa56 DUP6
0xa57 MLOAD
0xa58 DUP7
0xa59 SWAP1
0xa5a DUP3
0xa5b SWAP1
0xa5c DUP2
0xa5d LT
0xa5e PUSH2 0xa63
0xa61 JUMPI
---
0xa2c: JUMPDEST 
0xa2d: V879 = 0x20
0xa31: V880 = MUL 0x20 S0
0xa34: V881 = ADD S1 V880
0xa36: V882 = ADD 0x20 V881
0xa37: V883 = M[V882]
0xa38: V884 = 0x1
0xa3a: V885 = 0xa0
0xa3c: V886 = 0x2
0xa3e: V887 = EXP 0x2 0xa0
0xa3f: V888 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa40: V889 = AND 0xffffffffffffffffffffffffffffffffffffffff V883
0xa42: M[0x0] = V889
0xa44: V890 = ADD 0x0 0x20
0xa48: M[0x20] = 0x4
0xa49: V891 = 0x40
0xa4b: V892 = ADD 0x40 0x0
0xa4c: V893 = 0x0
0xa4e: V894 = SHA3 0x0 0x40
0xa50: V895 = S[V894]
0xa53: V896 = ADD S4 V895
0xa55: S[V894] = V896
0xa57: V897 = M[S10]
0xa5d: V898 = LT S5 V897
0xa5e: V899 = 0xa63
0xa61: JUMPI 0xa63 V898
---
Entry stack: [V10, 0x10b, V410, S12, {0x1bc, 0xc34}, S10, S9, 0x0, S7, S6, S5, S4, 0x4, 0x0, S1, S0]
Stack pops: 11
Stack additions: [S10, S9, S8, S7, S6, S5, S10, S5]
Exit stack: [V10, 0x10b, V410, S12, {0x1bc, 0xc34}, S10, S9, 0x0, S7, S6, S5, S10, S5]

================================

Block 0xa62
[0xa62:0xa62]
---
Predecessors: [0xa2c]
Successors: []
---
0xa62 INVALID
---
0xa62: INVALID 
---
Entry stack: [V10, 0x10b, V410, S9, {0x1bc, 0xc34}, S7, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V410, S9, {0x1bc, 0xc34}, S7, S6, 0x0, S4, S3, S2, S1, S0]

================================

Block 0xa63
[0xa63:0xaa5]
---
Predecessors: [0xa2c]
Successors: [0xaa6]
---
0xa63 JUMPDEST
0xa64 SWAP1
0xa65 PUSH1 0x20
0xa67 ADD
0xa68 SWAP1
0xa69 PUSH1 0x20
0xa6b MUL
0xa6c ADD
0xa6d MLOAD
0xa6e PUSH1 0x1
0xa70 PUSH1 0xa0
0xa72 PUSH1 0x2
0xa74 EXP
0xa75 SUB
0xa76 AND
0xa77 CALLER
0xa78 PUSH1 0x1
0xa7a PUSH1 0xa0
0xa7c PUSH1 0x2
0xa7e EXP
0xa7f SUB
0xa80 AND
0xa81 PUSH1 0x0
0xa83 DUP1
0xa84 MLOAD
0xa85 PUSH1 0x20
0xa87 PUSH2 0xd73
0xa8a DUP4
0xa8b CODECOPY
0xa8c DUP2
0xa8d MLOAD
0xa8e SWAP2
0xa8f MSTORE
0xa90 DUP8
0xa91 PUSH1 0x40
0xa93 MLOAD
0xa94 DUP1
0xa95 DUP3
0xa96 DUP2
0xa97 MSTORE
0xa98 PUSH1 0x20
0xa9a ADD
0xa9b SWAP2
0xa9c POP
0xa9d POP
0xa9e PUSH1 0x40
0xaa0 MLOAD
0xaa1 DUP1
0xaa2 SWAP2
0xaa3 SUB
0xaa4 SWAP1
0xaa5 LOG3
---
0xa63: JUMPDEST 
0xa65: V900 = 0x20
0xa67: V901 = ADD 0x20 S1
0xa69: V902 = 0x20
0xa6b: V903 = MUL 0x20 S0
0xa6c: V904 = ADD V903 V901
0xa6d: V905 = M[V904]
0xa6e: V906 = 0x1
0xa70: V907 = 0xa0
0xa72: V908 = 0x2
0xa74: V909 = EXP 0x2 0xa0
0xa75: V910 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa76: V911 = AND 0xffffffffffffffffffffffffffffffffffffffff V905
0xa77: V912 = CALLER
0xa78: V913 = 0x1
0xa7a: V914 = 0xa0
0xa7c: V915 = 0x2
0xa7e: V916 = EXP 0x2 0xa0
0xa7f: V917 = SUB 0x10000000000000000000000000000000000000000 0x1
0xa80: V918 = AND 0xffffffffffffffffffffffffffffffffffffffff V912
0xa81: V919 = 0x0
0xa84: V920 = M[0x0]
0xa85: V921 = 0x20
0xa87: V922 = 0xd73
0xa8b: CODECOPY 0x0 0xd73 0x20
0xa8d: V923 = M[0x0]
0xa8f: M[0x0] = V920
0xa91: V924 = 0x40
0xa93: V925 = M[0x40]
0xa97: M[V925] = S6
0xa98: V926 = 0x20
0xa9a: V927 = ADD 0x20 V925
0xa9e: V928 = 0x40
0xaa0: V929 = M[0x40]
0xaa3: V930 = SUB V927 V929
0xaa5: LOG V929 V930 V923 V918 V911
---
Entry stack: [V10, 0x10b, V410, S9, {0x1bc, 0xc34}, S7, S6, 0x0, S4, S3, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5, S4, S3, S2]
Exit stack: [V10, 0x10b, V410, S9, {0x1bc, 0xc34}, S7, S6, 0x0, S4, S3, S2]

================================

Block 0xaa6
[0xaa6:0xaad]
---
Predecessors: [0xa63]
Successors: [0xa11]
---
0xaa6 JUMPDEST
0xaa7 PUSH1 0x1
0xaa9 ADD
0xaaa PUSH2 0xa11
0xaad JUMP
---
0xaa6: JUMPDEST 
0xaa7: V931 = 0x1
0xaa9: V932 = ADD 0x1 S0
0xaaa: V933 = 0xa11
0xaad: JUMP 0xa11
---
Entry stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, 0x0, S2, S1, S0]
Stack pops: 1
Stack additions: [V932]
Exit stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, 0x0, S2, S1, V932]

================================

Block 0xaae
[0xaae:0xab2]
---
Predecessors: [0xa11]
Successors: [0xab3]
---
0xaae JUMPDEST
0xaaf PUSH1 0x1
0xab1 SWAP4
0xab2 POP
---
0xaae: JUMPDEST 
0xaaf: V934 = 0x1
---
Entry stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, 0x0, S2, S1, S0]
Stack pops: 4
Stack additions: [0x1, S2, S1, S0]
Exit stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, 0x1, S2, S1, S0]

================================

Block 0xab3
[0xab3:0xabb]
---
Predecessors: [0x9be, 0x9e8, 0xaae]
Successors: [0x1bc, 0xc34]
---
0xab3 JUMPDEST
0xab4 POP
0xab5 POP
0xab6 POP
0xab7 SWAP3
0xab8 SWAP2
0xab9 POP
0xaba POP
0xabb JUMP
---
0xab3: JUMPDEST 
0xabb: JUMP {0x1bc, 0xc34}
---
Entry stack: [V10, 0x10b, V410, S7, {0x1bc, 0xc34}, S5, S4, {0x0, 0x1}, S2, S1, S0]
Stack pops: 7
Stack additions: [S3]
Exit stack: [V10, 0x10b, V410, S7, {0x0, 0x1}]

================================

Block 0xabc
[0xabc:0xaca]
---
Predecessors: [0x32b]
Successors: [0x333]
---
0xabc JUMPDEST
0xabd PUSH1 0x7
0xabf SLOAD
0xac0 PUSH1 0x1
0xac2 PUSH1 0xa0
0xac4 PUSH1 0x2
0xac6 EXP
0xac7 SUB
0xac8 AND
0xac9 DUP2
0xaca JUMP
---
0xabc: JUMPDEST 
0xabd: V935 = 0x7
0xabf: V936 = S[0x7]
0xac0: V937 = 0x1
0xac2: V938 = 0xa0
0xac4: V939 = 0x2
0xac6: V940 = EXP 0x2 0xa0
0xac7: V941 = SUB 0x10000000000000000000000000000000000000000 0x1
0xac8: V942 = AND 0xffffffffffffffffffffffffffffffffffffffff V936
0xaca: JUMP 0x333
---
Entry stack: [V10, 0x333]
Stack pops: 1
Stack additions: [S0, V942]
Exit stack: [V10, 0x333, V942]

================================

Block 0xacb
[0xacb:0xb09]
---
Predecessors: [0x357]
Successors: [0x58c, 0xb0a]
---
0xacb JUMPDEST
0xacc PUSH1 0x1
0xace DUP1
0xacf SLOAD
0xad0 PUSH1 0x40
0xad2 DUP1
0xad3 MLOAD
0xad4 PUSH1 0x20
0xad6 PUSH1 0x2
0xad8 DUP5
0xad9 DUP7
0xada AND
0xadb ISZERO
0xadc PUSH2 0x100
0xadf MUL
0xae0 PUSH1 0x0
0xae2 NOT
0xae3 ADD
0xae4 SWAP1
0xae5 SWAP5
0xae6 AND
0xae7 SWAP4
0xae8 SWAP1
0xae9 SWAP4
0xaea DIV
0xaeb PUSH1 0x1f
0xaed DUP2
0xaee ADD
0xaef DUP5
0xaf0 SWAP1
0xaf1 DIV
0xaf2 DUP5
0xaf3 MUL
0xaf4 DUP3
0xaf5 ADD
0xaf6 DUP5
0xaf7 ADD
0xaf8 SWAP1
0xaf9 SWAP3
0xafa MSTORE
0xafb DUP2
0xafc DUP2
0xafd MSTORE
0xafe SWAP3
0xaff SWAP2
0xb00 DUP4
0xb01 ADD
0xb02 DUP3
0xb03 DUP3
0xb04 DUP1
0xb05 ISZERO
0xb06 PUSH2 0x58c
0xb09 JUMPI
---
0xacb: JUMPDEST 
0xacc: V943 = 0x1
0xacf: V944 = S[0x1]
0xad0: V945 = 0x40
0xad3: V946 = M[0x40]
0xad4: V947 = 0x20
0xad6: V948 = 0x2
0xada: V949 = AND 0x1 V944
0xadb: V950 = ISZERO V949
0xadc: V951 = 0x100
0xadf: V952 = MUL 0x100 V950
0xae0: V953 = 0x0
0xae2: V954 = NOT 0x0
0xae3: V955 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V952
0xae6: V956 = AND V944 V955
0xaea: V957 = DIV V956 0x2
0xaeb: V958 = 0x1f
0xaee: V959 = ADD V957 0x1f
0xaf1: V960 = DIV V959 0x20
0xaf3: V961 = MUL 0x20 V960
0xaf5: V962 = ADD V946 V961
0xaf7: V963 = ADD 0x20 V962
0xafa: M[0x40] = V963
0xafd: M[V946] = V957
0xb01: V964 = ADD V946 0x20
0xb05: V965 = ISZERO V957
0xb06: V966 = 0x58c
0xb09: JUMPI 0x58c V965
---
Entry stack: [V10, 0x11d]
Stack pops: 0
Stack additions: [V946, 0x1, V957, V964, 0x1, V957]
Exit stack: [V10, 0x11d, V946, 0x1, V957, V964, 0x1, V957]

================================

Block 0xb0a
[0xb0a:0xb11]
---
Predecessors: [0xacb]
Successors: [0x561, 0xb12]
---
0xb0a DUP1
0xb0b PUSH1 0x1f
0xb0d LT
0xb0e PUSH2 0x561
0xb11 JUMPI
---
0xb0b: V967 = 0x1f
0xb0d: V968 = LT 0x1f V957
0xb0e: V969 = 0x561
0xb11: JUMPI 0x561 V968
---
Entry stack: [V10, 0x11d, V946, 0x1, V957, V964, 0x1, V957]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x11d, V946, 0x1, V957, V964, 0x1, V957]

================================

Block 0xb12
[0xb12:0xb24]
---
Predecessors: [0xb0a]
Successors: [0x58c]
---
0xb12 PUSH2 0x100
0xb15 DUP1
0xb16 DUP4
0xb17 SLOAD
0xb18 DIV
0xb19 MUL
0xb1a DUP4
0xb1b MSTORE
0xb1c SWAP2
0xb1d PUSH1 0x20
0xb1f ADD
0xb20 SWAP2
0xb21 PUSH2 0x58c
0xb24 JUMP
---
0xb12: V970 = 0x100
0xb17: V971 = S[0x1]
0xb18: V972 = DIV V971 0x100
0xb19: V973 = MUL V972 0x100
0xb1b: M[V964] = V973
0xb1d: V974 = 0x20
0xb1f: V975 = ADD 0x20 V964
0xb21: V976 = 0x58c
0xb24: JUMP 0x58c
---
Entry stack: [V10, 0x11d, V946, 0x1, V957, V964, 0x1, V957]
Stack pops: 3
Stack additions: [V975, S1, S0]
Exit stack: [V10, 0x11d, V946, 0x1, V957, V975, 0x1, V957]

================================

Block 0xb25
[0xb25:0xb32]
---
Predecessors: []
Successors: [0xb33]
---
0xb25 JUMPDEST
0xb26 DUP3
0xb27 ADD
0xb28 SWAP2
0xb29 SWAP1
0xb2a PUSH1 0x0
0xb2c MSTORE
0xb2d PUSH1 0x20
0xb2f PUSH1 0x0
0xb31 SHA3
0xb32 SWAP1
---
0xb25: JUMPDEST 
0xb27: V977 = ADD S2 S0
0xb2a: V978 = 0x0
0xb2c: M[0x0] = S1
0xb2d: V979 = 0x20
0xb2f: V980 = 0x0
0xb31: V981 = SHA3 0x0 0x20
---
Entry stack: []
Stack pops: 3
Stack additions: [V977, V981, S2]
Exit stack: [V977, V981, S2]

================================

Block 0xb33
[0xb33:0xb46]
---
Predecessors: [0xb25]
Successors: [0x56f, 0xb47]
---
0xb33 JUMPDEST
0xb34 DUP2
0xb35 SLOAD
0xb36 DUP2
0xb37 MSTORE
0xb38 SWAP1
0xb39 PUSH1 0x1
0xb3b ADD
0xb3c SWAP1
0xb3d PUSH1 0x20
0xb3f ADD
0xb40 DUP1
0xb41 DUP4
0xb42 GT
0xb43 PUSH2 0x56f
0xb46 JUMPI
---
0xb33: JUMPDEST 
0xb35: V982 = S[V981]
0xb37: M[S0] = V982
0xb39: V983 = 0x1
0xb3b: V984 = ADD 0x1 V981
0xb3d: V985 = 0x20
0xb3f: V986 = ADD 0x20 S0
0xb42: V987 = GT V977 V986
0xb43: V988 = 0x56f
0xb46: JUMPI 0x56f V987
---
Entry stack: [V977, V981, S0]
Stack pops: 3
Stack additions: [S2, V984, V986]
Exit stack: [V977, V984, V986]

================================

Block 0xb47
[0xb47:0xb4f]
---
Predecessors: [0xb33]
Successors: [0xb50]
---
0xb47 DUP3
0xb48 SWAP1
0xb49 SUB
0xb4a PUSH1 0x1f
0xb4c AND
0xb4d DUP3
0xb4e ADD
0xb4f SWAP2
---
0xb49: V989 = SUB V986 V977
0xb4a: V990 = 0x1f
0xb4c: V991 = AND 0x1f V989
0xb4e: V992 = ADD V977 V991
---
Entry stack: [V977, V984, V986]
Stack pops: 3
Stack additions: [V992, S1, S2]
Exit stack: [V992, V984, V977]

================================

Block 0xb50
[0xb50:0xb57]
---
Predecessors: [0xb47]
Successors: []
Has unresolved jump.
---
0xb50 JUMPDEST
0xb51 POP
0xb52 POP
0xb53 POP
0xb54 POP
0xb55 POP
0xb56 DUP2
0xb57 JUMP
---
0xb50: JUMPDEST 
0xb57: JUMP S6
---
Entry stack: [V992, V984, V977]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [S3, S2]

================================

Block 0xb58
[0xb58:0xb73]
---
Predecessors: [0x3df, 0xd45]
Successors: [0xb74, 0xb79]
---
0xb58 JUMPDEST
0xb59 ORIGIN
0xb5a PUSH1 0x1
0xb5c PUSH1 0xa0
0xb5e PUSH1 0x2
0xb60 EXP
0xb61 SUB
0xb62 AND
0xb63 CALLER
0xb64 PUSH1 0x1
0xb66 PUSH1 0xa0
0xb68 PUSH1 0x2
0xb6a EXP
0xb6b SUB
0xb6c AND
0xb6d EQ
0xb6e ISZERO
0xb6f ISZERO
0xb70 PUSH2 0xb79
0xb73 JUMPI
---
0xb58: JUMPDEST 
0xb59: V993 = ORIGIN
0xb5a: V994 = 0x1
0xb5c: V995 = 0xa0
0xb5e: V996 = 0x2
0xb60: V997 = EXP 0x2 0xa0
0xb61: V998 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb62: V999 = AND 0xffffffffffffffffffffffffffffffffffffffff V993
0xb63: V1000 = CALLER
0xb64: V1001 = 0x1
0xb66: V1002 = 0xa0
0xb68: V1003 = 0x2
0xb6a: V1004 = EXP 0x2 0xa0
0xb6b: V1005 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb6c: V1006 = AND 0xffffffffffffffffffffffffffffffffffffffff V1000
0xb6d: V1007 = EQ V1006 V999
0xb6e: V1008 = ISZERO V1007
0xb6f: V1009 = ISZERO V1008
0xb70: V1010 = 0xb79
0xb73: JUMPI 0xb79 V1009
---
Entry stack: [V10, 0x10b, V410, S1, {0x10b, 0xd4c}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V410, S1, {0x10b, 0xd4c}]

================================

Block 0xb74
[0xb74:0xb78]
---
Predecessors: [0xb58]
Successors: []
---
0xb74 PUSH1 0x0
0xb76 PUSH1 0x0
0xb78 REVERT
---
0xb74: V1011 = 0x0
0xb76: V1012 = 0x0
0xb78: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10b, V410, S1, {0x10b, 0xd4c}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V410, S1, {0x10b, 0xd4c}]

================================

Block 0xb79
[0xb79:0xb8d]
---
Predecessors: [0xb58]
Successors: [0xb8e, 0xb93]
---
0xb79 JUMPDEST
0xb7a PUSH1 0x8
0xb7c SLOAD
0xb7d PUSH8 0xde0b6b3a7640000
0xb86 MUL
0xb87 CALLVALUE
0xb88 LT
0xb89 ISZERO
0xb8a PUSH2 0xb93
0xb8d JUMPI
---
0xb79: JUMPDEST 
0xb7a: V1013 = 0x8
0xb7c: V1014 = S[0x8]
0xb7d: V1015 = 0xde0b6b3a7640000
0xb86: V1016 = MUL 0xde0b6b3a7640000 V1014
0xb87: V1017 = CALLVALUE
0xb88: V1018 = LT V1017 V1016
0xb89: V1019 = ISZERO V1018
0xb8a: V1020 = 0xb93
0xb8d: JUMPI 0xb93 V1019
---
Entry stack: [V10, 0x10b, V410, S1, {0x10b, 0xd4c}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V410, S1, {0x10b, 0xd4c}]

================================

Block 0xb8e
[0xb8e:0xb92]
---
Predecessors: [0xb79]
Successors: []
---
0xb8e PUSH1 0x0
0xb90 PUSH1 0x0
0xb92 REVERT
---
0xb8e: V1021 = 0x0
0xb90: V1022 = 0x0
0xb92: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10b, V410, S1, {0x10b, 0xd4c}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V410, S1, {0x10b, 0xd4c}]

================================

Block 0xb93
[0xb93:0xbad]
---
Predecessors: [0xb79]
Successors: [0xbae, 0xbaf]
---
0xb93 JUMPDEST
0xb94 ADDRESS
0xb95 PUSH1 0x1
0xb97 PUSH1 0xa0
0xb99 PUSH1 0x2
0xb9b EXP
0xb9c SUB
0xb9d AND
0xb9e PUSH4 0x39a12c3b
0xba3 PUSH1 0x8
0xba5 SLOAD
0xba6 CALLVALUE
0xba7 DUP2
0xba8 ISZERO
0xba9 ISZERO
0xbaa PUSH2 0xbaf
0xbad JUMPI
---
0xb93: JUMPDEST 
0xb94: V1023 = ADDRESS
0xb95: V1024 = 0x1
0xb97: V1025 = 0xa0
0xb99: V1026 = 0x2
0xb9b: V1027 = EXP 0x2 0xa0
0xb9c: V1028 = SUB 0x10000000000000000000000000000000000000000 0x1
0xb9d: V1029 = AND 0xffffffffffffffffffffffffffffffffffffffff V1023
0xb9e: V1030 = 0x39a12c3b
0xba3: V1031 = 0x8
0xba5: V1032 = S[0x8]
0xba6: V1033 = CALLVALUE
0xba8: V1034 = ISZERO V1032
0xba9: V1035 = ISZERO V1034
0xbaa: V1036 = 0xbaf
0xbad: JUMPI 0xbaf V1035
---
Entry stack: [V10, 0x10b, V410, S1, {0x10b, 0xd4c}]
Stack pops: 0
Stack additions: [V1029, 0x39a12c3b, V1032, V1033]
Exit stack: [V10, 0x10b, V410, S1, {0x10b, 0xd4c}, V1029, 0x39a12c3b, V1032, V1033]

================================

Block 0xbae
[0xbae:0xbae]
---
Predecessors: [0xb93]
Successors: []
---
0xbae INVALID
---
0xbae: INVALID 
---
Entry stack: [V10, 0x10b, V410, S5, {0x10b, 0xd4c}, V1029, 0x39a12c3b, V1032, V1033]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V410, S5, {0x10b, 0xd4c}, V1029, 0x39a12c3b, V1032, V1033]

================================

Block 0xbaf
[0xbaf:0xc24]
---
Predecessors: [0xb93]
Successors: [0xc25, 0xc26]
---
0xbaf JUMPDEST
0xbb0 PUSH1 0x8
0xbb2 SLOAD
0xbb3 PUSH1 0x7
0xbb5 SLOAD
0xbb6 PUSH1 0x40
0xbb8 DUP1
0xbb9 MLOAD
0xbba PUSH29 0x100000000000000000000000000000000000000000000000000000000
0xbd8 PUSH4 0xffffffff
0xbdd DUP9
0xbde AND
0xbdf MUL
0xbe0 DUP2
0xbe1 MSTORE
0xbe2 SWAP5
0xbe3 SWAP1
0xbe4 SWAP4
0xbe5 DIV
0xbe6 PUSH1 0x4
0xbe8 DUP6
0xbe9 ADD
0xbea MSTORE
0xbeb PUSH1 0x24
0xbed DUP5
0xbee ADD
0xbef SWAP2
0xbf0 SWAP1
0xbf1 SWAP2
0xbf2 MSTORE
0xbf3 PUSH1 0x1
0xbf5 PUSH1 0xa0
0xbf7 PUSH1 0x2
0xbf9 EXP
0xbfa SUB
0xbfb SWAP1
0xbfc DUP2
0xbfd AND
0xbfe PUSH1 0x44
0xc00 DUP5
0xc01 ADD
0xc02 MSTORE
0xc03 CALLER
0xc04 AND
0xc05 PUSH1 0x64
0xc07 DUP4
0xc08 ADD
0xc09 MSTORE
0xc0a MLOAD
0xc0b PUSH1 0x84
0xc0d DUP1
0xc0e DUP4
0xc0f ADD
0xc10 SWAP3
0xc11 PUSH1 0x0
0xc13 SWAP3
0xc14 SWAP2
0xc15 SWAP1
0xc16 DUP3
0xc17 SWAP1
0xc18 SUB
0xc19 ADD
0xc1a DUP2
0xc1b DUP4
0xc1c DUP8
0xc1d DUP1
0xc1e EXTCODESIZE
0xc1f ISZERO
0xc20 ISZERO
0xc21 PUSH2 0xc26
0xc24 JUMPI
---
0xbaf: JUMPDEST 
0xbb0: V1037 = 0x8
0xbb2: V1038 = S[0x8]
0xbb3: V1039 = 0x7
0xbb5: V1040 = S[0x7]
0xbb6: V1041 = 0x40
0xbb9: V1042 = M[0x40]
0xbba: V1043 = 0x100000000000000000000000000000000000000000000000000000000
0xbd8: V1044 = 0xffffffff
0xbde: V1045 = AND 0x39a12c3b 0xffffffff
0xbdf: V1046 = MUL 0x39a12c3b 0x100000000000000000000000000000000000000000000000000000000
0xbe1: M[V1042] = 0x39a12c3b00000000000000000000000000000000000000000000000000000000
0xbe5: V1047 = DIV V1033 V1032
0xbe6: V1048 = 0x4
0xbe9: V1049 = ADD V1042 0x4
0xbea: M[V1049] = V1047
0xbeb: V1050 = 0x24
0xbee: V1051 = ADD V1042 0x24
0xbf2: M[V1051] = V1038
0xbf3: V1052 = 0x1
0xbf5: V1053 = 0xa0
0xbf7: V1054 = 0x2
0xbf9: V1055 = EXP 0x2 0xa0
0xbfa: V1056 = SUB 0x10000000000000000000000000000000000000000 0x1
0xbfd: V1057 = AND 0xffffffffffffffffffffffffffffffffffffffff V1040
0xbfe: V1058 = 0x44
0xc01: V1059 = ADD V1042 0x44
0xc02: M[V1059] = V1057
0xc03: V1060 = CALLER
0xc04: V1061 = AND V1060 0xffffffffffffffffffffffffffffffffffffffff
0xc05: V1062 = 0x64
0xc08: V1063 = ADD V1042 0x64
0xc09: M[V1063] = V1061
0xc0a: V1064 = M[0x40]
0xc0b: V1065 = 0x84
0xc0f: V1066 = ADD V1042 0x84
0xc11: V1067 = 0x0
0xc18: V1068 = SUB V1042 V1064
0xc19: V1069 = ADD V1068 0x84
0xc1e: V1070 = EXTCODESIZE V1029
0xc1f: V1071 = ISZERO V1070
0xc20: V1072 = ISZERO V1071
0xc21: V1073 = 0xc26
0xc24: JUMPI 0xc26 V1072
---
Entry stack: [V10, 0x10b, V410, S5, {0x10b, 0xd4c}, V1029, 0x39a12c3b, V1032, V1033]
Stack pops: 4
Stack additions: [S3, S2, V1066, 0x0, V1064, V1069, V1064, 0x0, S3]
Exit stack: [V10, 0x10b, V410, S5, {0x10b, 0xd4c}, V1029, 0x39a12c3b, V1066, 0x0, V1064, V1069, V1064, 0x0, V1029]

================================

Block 0xc25
[0xc25:0xc25]
---
Predecessors: [0xbaf]
Successors: []
---
0xc25 INVALID
---
0xc25: INVALID 
---
Entry stack: [V10, 0x10b, V410, S10, {0x10b, 0xd4c}, S8, 0x39a12c3b, V1066, 0x0, V1064, V1069, V1064, 0x0, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V410, S10, {0x10b, 0xd4c}, S8, 0x39a12c3b, V1066, 0x0, V1064, V1069, V1064, 0x0, S0]

================================

Block 0xc26
[0xc26:0xc32]
---
Predecessors: [0xbaf]
Successors: [0xc33, 0xc34]
---
0xc26 JUMPDEST
0xc27 PUSH2 0x2c6
0xc2a GAS
0xc2b SUB
0xc2c CALL
0xc2d ISZERO
0xc2e ISZERO
0xc2f PUSH2 0xc34
0xc32 JUMPI
---
0xc26: JUMPDEST 
0xc27: V1074 = 0x2c6
0xc2a: V1075 = GAS
0xc2b: V1076 = SUB V1075 0x2c6
0xc2c: V1077 = CALL V1076 S0 0x0 V1064 V1069 V1064 0x0
0xc2d: V1078 = ISZERO V1077
0xc2e: V1079 = ISZERO V1078
0xc2f: V1080 = 0xc34
0xc32: JUMPI 0xc34 V1079
---
Entry stack: [V10, 0x10b, V410, S10, {0x10b, 0xd4c}, S8, 0x39a12c3b, V1066, 0x0, V1064, V1069, V1064, 0x0, S0]
Stack pops: 6
Stack additions: []
Exit stack: [V10, 0x10b, V410, S10, {0x10b, 0xd4c}, S8, 0x39a12c3b, V1066]

================================

Block 0xc33
[0xc33:0xc33]
---
Predecessors: [0xc26]
Successors: []
---
0xc33 INVALID
---
0xc33: INVALID 
---
Entry stack: [V10, 0x10b, V410, S4, {0x10b, 0xd4c}, S2, 0x39a12c3b, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V410, S4, {0x10b, 0xd4c}, S2, 0x39a12c3b, S0]

================================

Block 0xc34
[0xc34:0xc37]
---
Predecessors: [0xab3, 0xc26]
Successors: [0xc38]
---
0xc34 JUMPDEST
0xc35 POP
0xc36 POP
0xc37 POP
---
0xc34: JUMPDEST 
---
Entry stack: [V10, 0x10b, V410, S4, {0x10b, 0xd4c}, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V10, 0x10b, V410, S4, {0x10b, 0xd4c}]

================================

Block 0xc38
[0xc38:0xc38]
---
Predecessors: [0xc34]
Successors: [0xc39]
---
0xc38 JUMPDEST
---
0xc38: JUMPDEST 
---
Entry stack: [V10, 0x10b, V410, S1, {0x10b, 0xd4c}]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V410, S1, {0x10b, 0xd4c}]

================================

Block 0xc39
[0xc39:0xc3a]
---
Predecessors: [0xc38]
Successors: [0x10b, 0xd4c]
---
0xc39 JUMPDEST
0xc3a JUMP
---
0xc39: JUMPDEST 
0xc3a: JUMP {0x10b, 0xd4c}
---
Entry stack: [V10, 0x10b, V410, S1, {0x10b, 0xd4c}]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x10b, V410, S1]

================================

Block 0xc3b
[0xc3b:0xc40]
---
Predecessors: [0x3f1]
Successors: [0x1e0]
---
0xc3b JUMPDEST
0xc3c PUSH1 0x8
0xc3e SLOAD
0xc3f DUP2
0xc40 JUMP
---
0xc3b: JUMPDEST 
0xc3c: V1081 = 0x8
0xc3e: V1082 = S[0x8]
0xc40: JUMP 0x1e0
---
Entry stack: [V10, 0x1e0]
Stack pops: 1
Stack additions: [S0, V1082]
Exit stack: [V10, 0x1e0, V1082]

================================

Block 0xc41
[0xc41:0xc57]
---
Predecessors: [0x413]
Successors: [0xc58, 0xc5d]
---
0xc41 JUMPDEST
0xc42 PUSH1 0x7
0xc44 SLOAD
0xc45 CALLER
0xc46 PUSH1 0x1
0xc48 PUSH1 0xa0
0xc4a PUSH1 0x2
0xc4c EXP
0xc4d SUB
0xc4e SWAP1
0xc4f DUP2
0xc50 AND
0xc51 SWAP2
0xc52 AND
0xc53 EQ
0xc54 PUSH2 0xc5d
0xc57 JUMPI
---
0xc41: JUMPDEST 
0xc42: V1083 = 0x7
0xc44: V1084 = S[0x7]
0xc45: V1085 = CALLER
0xc46: V1086 = 0x1
0xc48: V1087 = 0xa0
0xc4a: V1088 = 0x2
0xc4c: V1089 = EXP 0x2 0xa0
0xc4d: V1090 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc50: V1091 = AND 0xffffffffffffffffffffffffffffffffffffffff V1085
0xc52: V1092 = AND V1084 0xffffffffffffffffffffffffffffffffffffffff
0xc53: V1093 = EQ V1092 V1091
0xc54: V1094 = 0xc5d
0xc57: JUMPI 0xc5d V1093
---
Entry stack: [V10, 0x10b, V349]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V349]

================================

Block 0xc58
[0xc58:0xc5c]
---
Predecessors: [0xc41]
Successors: []
---
0xc58 PUSH1 0x0
0xc5a PUSH1 0x0
0xc5c REVERT
---
0xc58: V1095 = 0x0
0xc5a: V1096 = 0x0
0xc5c: REVERT 0x0 0x0
---
Entry stack: [V10, 0x10b, V349]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V349]

================================

Block 0xc5d
[0xc5d:0xc67]
---
Predecessors: [0xc41]
Successors: [0x945, 0xc68]
---
0xc5d JUMPDEST
0xc5e PUSH1 0x8
0xc60 SLOAD
0xc61 DUP2
0xc62 GT
0xc63 ISZERO
0xc64 PUSH2 0x945
0xc67 JUMPI
---
0xc5d: JUMPDEST 
0xc5e: V1097 = 0x8
0xc60: V1098 = S[0x8]
0xc62: V1099 = GT V349 V1098
0xc63: V1100 = ISZERO V1099
0xc64: V1101 = 0x945
0xc67: JUMPI 0x945 V1100
---
Entry stack: [V10, 0x10b, V349]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x10b, V349]

================================

Block 0xc68
[0xc68:0xc6c]
---
Predecessors: [0xc5d]
Successors: [0xc6d]
---
0xc68 PUSH1 0x8
0xc6a DUP2
0xc6b SWAP1
0xc6c SSTORE
---
0xc68: V1102 = 0x8
0xc6c: S[0x8] = V349
---
Entry stack: [V10, 0x10b, V349]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V10, 0x10b, V349]

================================

Block 0xc6d
[0xc6d:0xc6d]
---
Predecessors: [0xc68]
Successors: [0xc6e]
---
0xc6d JUMPDEST
---
0xc6d: JUMPDEST 
---
Entry stack: [V10, 0x10b, V349]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V349]

================================

Block 0xc6e
[0xc6e:0xc6e]
---
Predecessors: [0xc6d]
Successors: [0xc6f]
---
0xc6e JUMPDEST
---
0xc6e: JUMPDEST 
---
Entry stack: [V10, 0x10b, V349]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V349]

================================

Block 0xc6f
[0xc6f:0xc71]
---
Predecessors: [0xc6e]
Successors: [0x10b]
---
0xc6f JUMPDEST
0xc70 POP
0xc71 JUMP
---
0xc6f: JUMPDEST 
0xc71: JUMP 0x10b
---
Entry stack: [V10, 0x10b, V349]
Stack pops: 2
Stack additions: []
Exit stack: [V10]

================================

Block 0xc72
[0xc72:0xc92]
---
Predecessors: [0x428]
Successors: [0xc93, 0xcb1]
---
0xc72 JUMPDEST
0xc73 PUSH1 0x1
0xc75 PUSH1 0xa0
0xc77 PUSH1 0x2
0xc79 EXP
0xc7a SUB
0xc7b CALLER
0xc7c AND
0xc7d PUSH1 0x0
0xc7f SWAP1
0xc80 DUP2
0xc81 MSTORE
0xc82 PUSH1 0x4
0xc84 PUSH1 0x20
0xc86 MSTORE
0xc87 PUSH1 0x40
0xc89 DUP2
0xc8a SHA3
0xc8b SLOAD
0xc8c DUP3
0xc8d GT
0xc8e DUP1
0xc8f PUSH2 0xcb1
0xc92 JUMPI
---
0xc72: JUMPDEST 
0xc73: V1103 = 0x1
0xc75: V1104 = 0xa0
0xc77: V1105 = 0x2
0xc79: V1106 = EXP 0x2 0xa0
0xc7a: V1107 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc7b: V1108 = CALLER
0xc7c: V1109 = AND V1108 0xffffffffffffffffffffffffffffffffffffffff
0xc7d: V1110 = 0x0
0xc81: M[0x0] = V1109
0xc82: V1111 = 0x4
0xc84: V1112 = 0x20
0xc86: M[0x20] = 0x4
0xc87: V1113 = 0x40
0xc8a: V1114 = SHA3 0x0 0x40
0xc8b: V1115 = S[V1114]
0xc8d: V1116 = GT V364 V1115
0xc8f: V1117 = 0xcb1
0xc92: JUMPI 0xcb1 V1116
---
Entry stack: [V10, 0x1bc, V362, V364]
Stack pops: 1
Stack additions: [S0, 0x0, V1116]
Exit stack: [V10, 0x1bc, V362, V364, 0x0, V1116]

================================

Block 0xc93
[0xc93:0xcb0]
---
Predecessors: [0xc72]
Successors: [0xcb1]
---
0xc93 POP
0xc94 PUSH1 0x1
0xc96 PUSH1 0xa0
0xc98 PUSH1 0x2
0xc9a EXP
0xc9b SUB
0xc9c DUP4
0xc9d AND
0xc9e PUSH1 0x0
0xca0 SWAP1
0xca1 DUP2
0xca2 MSTORE
0xca3 PUSH1 0x4
0xca5 PUSH1 0x20
0xca7 MSTORE
0xca8 PUSH1 0x40
0xcaa SWAP1
0xcab SHA3
0xcac SLOAD
0xcad DUP3
0xcae DUP2
0xcaf ADD
0xcb0 LT
---
0xc94: V1118 = 0x1
0xc96: V1119 = 0xa0
0xc98: V1120 = 0x2
0xc9a: V1121 = EXP 0x2 0xa0
0xc9b: V1122 = SUB 0x10000000000000000000000000000000000000000 0x1
0xc9d: V1123 = AND V362 0xffffffffffffffffffffffffffffffffffffffff
0xc9e: V1124 = 0x0
0xca2: M[0x0] = V1123
0xca3: V1125 = 0x4
0xca5: V1126 = 0x20
0xca7: M[0x20] = 0x4
0xca8: V1127 = 0x40
0xcab: V1128 = SHA3 0x0 0x40
0xcac: V1129 = S[V1128]
0xcaf: V1130 = ADD V1129 V364
0xcb0: V1131 = LT V1130 V1129
---
Entry stack: [V10, 0x1bc, V362, V364, 0x0, V1116]
Stack pops: 4
Stack additions: [S3, S2, S1, V1131]
Exit stack: [V10, 0x1bc, V362, V364, 0x0, V1131]

================================

Block 0xcb1
[0xcb1:0xcb6]
---
Predecessors: [0xc72, 0xc93]
Successors: [0xcb7, 0xcbe]
---
0xcb1 JUMPDEST
0xcb2 ISZERO
0xcb3 PUSH2 0xcbe
0xcb6 JUMPI
---
0xcb1: JUMPDEST 
0xcb2: V1132 = ISZERO S0
0xcb3: V1133 = 0xcbe
0xcb6: JUMPI 0xcbe V1132
---
Entry stack: [V10, 0x1bc, V362, V364, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V10, 0x1bc, V362, V364, 0x0]

================================

Block 0xcb7
[0xcb7:0xcbd]
---
Predecessors: [0xcb1]
Successors: [0x5f9]
---
0xcb7 POP
0xcb8 PUSH1 0x0
0xcba PUSH2 0x5f9
0xcbd JUMP
---
0xcb8: V1134 = 0x0
0xcba: V1135 = 0x5f9
0xcbd: JUMP 0x5f9
---
Entry stack: [V10, 0x1bc, V362, V364, 0x0]
Stack pops: 1
Stack additions: [0x0]
Exit stack: [V10, 0x1bc, V362, V364, 0x0]

================================

Block 0xcbe
[0xcbe:0xd16]
---
Predecessors: [0xcb1]
Successors: [0xd17]
---
0xcbe JUMPDEST
0xcbf PUSH1 0x1
0xcc1 PUSH1 0xa0
0xcc3 PUSH1 0x2
0xcc5 EXP
0xcc6 SUB
0xcc7 CALLER
0xcc8 DUP2
0xcc9 AND
0xcca PUSH1 0x0
0xccc DUP2
0xccd DUP2
0xcce MSTORE
0xccf PUSH1 0x4
0xcd1 PUSH1 0x20
0xcd3 SWAP1
0xcd4 DUP2
0xcd5 MSTORE
0xcd6 PUSH1 0x40
0xcd8 DUP1
0xcd9 DUP4
0xcda SHA3
0xcdb DUP1
0xcdc SLOAD
0xcdd DUP9
0xcde SWAP1
0xcdf SUB
0xce0 SWAP1
0xce1 SSTORE
0xce2 SWAP4
0xce3 DUP8
0xce4 AND
0xce5 DUP1
0xce6 DUP4
0xce7 MSTORE
0xce8 SWAP2
0xce9 DUP5
0xcea SWAP1
0xceb SHA3
0xcec DUP1
0xced SLOAD
0xcee DUP8
0xcef ADD
0xcf0 SWAP1
0xcf1 SSTORE
0xcf2 DUP4
0xcf3 MLOAD
0xcf4 DUP7
0xcf5 DUP2
0xcf6 MSTORE
0xcf7 SWAP4
0xcf8 MLOAD
0xcf9 SWAP2
0xcfa SWAP4
0xcfb PUSH1 0x0
0xcfd DUP1
0xcfe MLOAD
0xcff PUSH1 0x20
0xd01 PUSH2 0xd73
0xd04 DUP4
0xd05 CODECOPY
0xd06 DUP2
0xd07 MLOAD
0xd08 SWAP2
0xd09 MSTORE
0xd0a SWAP3
0xd0b SWAP1
0xd0c DUP2
0xd0d SWAP1
0xd0e SUB
0xd0f SWAP1
0xd10 SWAP2
0xd11 ADD
0xd12 SWAP1
0xd13 LOG3
0xd14 POP
0xd15 PUSH1 0x1
---
0xcbe: JUMPDEST 
0xcbf: V1136 = 0x1
0xcc1: V1137 = 0xa0
0xcc3: V1138 = 0x2
0xcc5: V1139 = EXP 0x2 0xa0
0xcc6: V1140 = SUB 0x10000000000000000000000000000000000000000 0x1
0xcc7: V1141 = CALLER
0xcc9: V1142 = AND 0xffffffffffffffffffffffffffffffffffffffff V1141
0xcca: V1143 = 0x0
0xcce: M[0x0] = V1142
0xccf: V1144 = 0x4
0xcd1: V1145 = 0x20
0xcd5: M[0x20] = 0x4
0xcd6: V1146 = 0x40
0xcda: V1147 = SHA3 0x0 0x40
0xcdc: V1148 = S[V1147]
0xcdf: V1149 = SUB V1148 V364
0xce1: S[V1147] = V1149
0xce4: V1150 = AND V362 0xffffffffffffffffffffffffffffffffffffffff
0xce7: M[0x0] = V1150
0xceb: V1151 = SHA3 0x0 0x40
0xced: V1152 = S[V1151]
0xcef: V1153 = ADD V364 V1152
0xcf1: S[V1151] = V1153
0xcf3: V1154 = M[0x40]
0xcf6: M[V1154] = V364
0xcf8: V1155 = M[0x40]
0xcfb: V1156 = 0x0
0xcfe: V1157 = M[0x0]
0xcff: V1158 = 0x20
0xd01: V1159 = 0xd73
0xd05: CODECOPY 0x0 0xd73 0x20
0xd07: V1160 = M[0x0]
0xd09: M[0x0] = V1157
0xd0e: V1161 = SUB V1154 V1155
0xd11: V1162 = ADD 0x20 V1161
0xd13: LOG V1155 V1162 V1160 V1142 V1150
0xd15: V1163 = 0x1
---
Entry stack: [V10, 0x1bc, V362, V364, 0x0]
Stack pops: 3
Stack additions: [S2, S1, 0x1]
Exit stack: [V10, 0x1bc, V362, V364, 0x1]

================================

Block 0xd17
[0xd17:0xd1c]
---
Predecessors: [0xcbe]
Successors: [0x1bc]
---
0xd17 JUMPDEST
0xd18 SWAP3
0xd19 SWAP2
0xd1a POP
0xd1b POP
0xd1c JUMP
---
0xd17: JUMPDEST 
0xd1c: JUMP 0x1bc
---
Entry stack: [V10, 0x1bc, V362, V364, 0x1]
Stack pops: 4
Stack additions: [S0]
Exit stack: [V10, 0x1]

================================

Block 0xd1d
[0xd1d:0xd39]
---
Predecessors: [0x45b]
Successors: [0x1e0]
---
0xd1d JUMPDEST
0xd1e PUSH1 0x5
0xd20 PUSH1 0x20
0xd22 SWAP1
0xd23 DUP2
0xd24 MSTORE
0xd25 PUSH1 0x0
0xd27 SWAP3
0xd28 DUP4
0xd29 MSTORE
0xd2a PUSH1 0x40
0xd2c DUP1
0xd2d DUP5
0xd2e SHA3
0xd2f SWAP1
0xd30 SWAP2
0xd31 MSTORE
0xd32 SWAP1
0xd33 DUP3
0xd34 MSTORE
0xd35 SWAP1
0xd36 SHA3
0xd37 SLOAD
0xd38 DUP2
0xd39 JUMP
---
0xd1d: JUMPDEST 
0xd1e: V1164 = 0x5
0xd20: V1165 = 0x20
0xd24: M[0x20] = 0x5
0xd25: V1166 = 0x0
0xd29: M[0x0] = V385
0xd2a: V1167 = 0x40
0xd2e: V1168 = SHA3 0x0 0x40
0xd31: M[0x20] = V1168
0xd34: M[0x0] = V388
0xd36: V1169 = SHA3 0x0 0x40
0xd37: V1170 = S[V1169]
0xd39: JUMP 0x1e0
---
Entry stack: [V10, 0x1e0, V385, V388]
Stack pops: 3
Stack additions: [S2, V1170]
Exit stack: [V10, 0x1e0, V1170]

================================

Block 0xd3a
[0xd3a:0xd44]
---
Predecessors: [0x487]
Successors: [0xd45, 0xd58]
---
0xd3a JUMPDEST
0xd3b DUP2
0xd3c MLOAD
0xd3d DUP2
0xd3e MUL
0xd3f CALLVALUE
0xd40 LT
0xd41 PUSH2 0xd58
0xd44 JUMPI
---
0xd3a: JUMPDEST 
0xd3c: V1171 = M[V410]
0xd3e: V1172 = MUL V417 V1171
0xd3f: V1173 = CALLVALUE
0xd40: V1174 = LT V1173 V1172
0xd41: V1175 = 0xd58
0xd44: JUMPI 0xd58 V1174
---
Entry stack: [V10, 0x10b, V410, V417]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V10, 0x10b, V410, V417]

================================

Block 0xd45
[0xd45:0xd4b]
---
Predecessors: [0xd3a]
Successors: [0xb58]
---
0xd45 PUSH2 0xd4c
0xd48 PUSH2 0xb58
0xd4b JUMP
---
0xd45: V1176 = 0xd4c
0xd48: V1177 = 0xb58
0xd4b: JUMP 0xb58
---
Entry stack: [V10, 0x10b, V410, V417]
Stack pops: 0
Stack additions: [0xd4c]
Exit stack: [V10, 0x10b, V410, V417, 0xd4c]

================================

Block 0xd4c
[0xd4c:0xd55]
---
Predecessors: [0xc39]
Successors: [0x9ad]
---
0xd4c JUMPDEST
0xd4d PUSH2 0xc34
0xd50 DUP3
0xd51 DUP3
0xd52 PUSH2 0x9ad
0xd55 JUMP
---
0xd4c: JUMPDEST 
0xd4d: V1178 = 0xc34
0xd52: V1179 = 0x9ad
0xd55: JUMP 0x9ad
---
Entry stack: [V10, 0x10b, V410, S0]
Stack pops: 2
Stack additions: [S1, S0, 0xc34, S1, S0]
Exit stack: [V10, 0x10b, V410, S0, 0xc34, V410, S0]

================================

Block 0xd56
[0xd56:0xd57]
---
Predecessors: []
Successors: [0xd58]
---
0xd56 JUMPDEST
0xd57 POP
---
0xd56: JUMPDEST 
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0xd58
[0xd58:0xd58]
---
Predecessors: [0xd3a, 0xd56]
Successors: [0xd59]
---
0xd58 JUMPDEST
---
0xd58: JUMPDEST 
---
Entry stack: [V10, 0x10b, V410, V417]
Stack pops: 0
Stack additions: []
Exit stack: [V10, 0x10b, V410, V417]

================================

Block 0xd59
[0xd59:0xd5c]
---
Predecessors: [0xd58]
Successors: [0x10b]
---
0xd59 JUMPDEST
0xd5a POP
0xd5b POP
0xd5c JUMP
---
0xd59: JUMPDEST 
0xd5c: JUMP 0x10b
---
Entry stack: [V10, 0x10b, V410, V417]
Stack pops: 3
Stack additions: []
Exit stack: [V10]

================================

Block 0xd5d
[0xd5d:0xd71]
---
Predecessors: [0x4de]
Successors: [0x1bc]
---
0xd5d JUMPDEST
0xd5e PUSH1 0x6
0xd60 PUSH1 0x20
0xd62 MSTORE
0xd63 PUSH1 0x0
0xd65 SWAP1
0xd66 DUP2
0xd67 MSTORE
0xd68 PUSH1 0x40
0xd6a SWAP1
0xd6b SHA3
0xd6c SLOAD
0xd6d PUSH1 0xff
0xd6f AND
0xd70 DUP2
0xd71 JUMP
---
0xd5d: JUMPDEST 
0xd5e: V1180 = 0x6
0xd60: V1181 = 0x20
0xd62: M[0x20] = 0x6
0xd63: V1182 = 0x0
0xd67: M[0x0] = V430
0xd68: V1183 = 0x40
0xd6b: V1184 = SHA3 0x0 0x40
0xd6c: V1185 = S[V1184]
0xd6d: V1186 = 0xff
0xd6f: V1187 = AND 0xff V1185
0xd71: JUMP 0x1bc
---
Entry stack: [V10, 0x1bc, V430]
Stack pops: 2
Stack additions: [S1, V1187]
Exit stack: [V10, 0x1bc, V1187]

================================

Block 0xd72
[0xd72:0xdbd]
---
Predecessors: []
Successors: []
---
0xd72 STOP
0xd73 MISSING 0xdd
0xd74 CALLCODE
0xd75 MSTORE
0xd76 MISSING 0xad
0xd77 SHL
0xd78 MISSING 0xe2
0xd79 MISSING 0xc8
0xd7a SWAP12
0xd7b PUSH10 0xc2b068fc378daa952ba7
0xd86 CALL
0xd87 PUSH4 0xc4a11628
0xd8c CREATE2
0xd8d GAS
0xd8e MISSING 0x4d
0xd8f CREATE2
0xd90 MISSING 0x23
0xd91 MISSING 0xb3
0xd92 MISSING 0xef
0xd93 LOG1
0xd94 PUSH6 0x627a7a723058
0xd9b SHA3
0xd9c DUP9
0xd9d MISSING 0x46
0xd9e MISSING 0xe1
0xd9f PUSH4 0xb814b4d1
0xda4 MISSING 0xe1
0xda5 OR
0xda6 PUSH16 0x55b50e78b94270e9a9fb2d84f428feec
0xdb7 MISSING 0xbe
0xdb8 MISSING 0xa9
0xdb9 REVERT
0xdba MISSING 0xb4
0xdbb MISSING 0xe3
0xdbc STOP
0xdbd MISSING 0x29
---
0xd72: STOP 
0xd73: MISSING 0xdd
0xd74: V1188 = CALLCODE S0 S1 S2 S3 S4 S5 S6
0xd75: M[V1188] = S7
0xd76: MISSING 0xad
0xd77: V1189 = SHL S0 S1
0xd78: MISSING 0xe2
0xd79: MISSING 0xc8
0xd7b: V1190 = 0xc2b068fc378daa952ba7
0xd86: V1191 = CALL 0xc2b068fc378daa952ba7 S12 S1 S2 S3 S4 S5
0xd87: V1192 = 0xc4a11628
0xd8c: V1193 = CREATE2 0xc4a11628 V1191 S6 S7
0xd8d: V1194 = GAS
0xd8e: MISSING 0x4d
0xd8f: V1195 = CREATE2 S0 S1 S2 S3
0xd90: MISSING 0x23
0xd91: MISSING 0xb3
0xd92: MISSING 0xef
0xd93: LOG S0 S1 S2
0xd94: V1196 = 0x627a7a723058
0xd9b: V1197 = SHA3 0x627a7a723058 S3
0xd9d: MISSING 0x46
0xd9e: MISSING 0xe1
0xd9f: V1198 = 0xb814b4d1
0xda4: MISSING 0xe1
0xda5: V1199 = OR S0 S1
0xda6: V1200 = 0x55b50e78b94270e9a9fb2d84f428feec
0xdb7: MISSING 0xbe
0xdb8: MISSING 0xa9
0xdb9: REVERT S0 S1
0xdba: MISSING 0xb4
0xdbb: MISSING 0xe3
0xdbc: STOP 
0xdbd: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [V1189, V1194, V1193, S8, S9, S10, S11, S0, V1195, S11, V1197, S4, S5, S6, S7, S8, S9, S10, S11, 0xb814b4d1, 0x55b50e78b94270e9a9fb2d84f428feec, V1199]
Exit stack: []

================================

Function 0:
Public function signature: 0x6fdde03
Entry block: 0x10d
Exit block: 0x18f
Body: 0x10d, 0x114, 0x115, 0x11d, 0x143, 0x151, 0x163, 0x176, 0x18f, 0x506, 0x546, 0x54e, 0x561, 0x56f, 0x583, 0x58c

Function 1:
Public function signature: 0x95ea7b3
Entry block: 0x19d
Exit block: 0x1bc
Body: 0x19d, 0x1a4, 0x1a5, 0x1bc, 0x594, 0x5f9

Function 2:
Public function signature: 0x18160ddd
Entry block: 0x1d0
Exit block: 0x1e0
Body: 0x1d0, 0x1d7, 0x1d8, 0x1e0, 0x5ff

Function 3:
Public function signature: 0x23b872dd
Entry block: 0x1f2
Exit block: 0x1bc
Body: 0x1bc, 0x1f2, 0x1f9, 0x1fa, 0x605, 0x626, 0x650, 0x656, 0x674, 0x67a, 0x681, 0x6f4

Function 4:
Public function signature: 0x313ce567
Entry block: 0x22b
Exit block: 0x1e0
Body: 0x1e0, 0x22b, 0x232, 0x233, 0x6fb

Function 5:
Public function signature: 0x39a12c3b
Entry block: 0x24d
Exit block: 0x10b
Body: 0x10b, 0x24d, 0x701, 0x724, 0x729, 0x74b, 0x74f, 0x772, 0x776, 0x7a7, 0x7a8, 0x84b, 0x84c

Function 6:
Public function signature: 0x52288195
Entry block: 0x272
Exit block: 0x10b
Body: 0x10b, 0x272, 0x854, 0x870, 0x875, 0x88c, 0x891, 0x932, 0x933, 0x940, 0x941, 0x945, 0x946

Function 7:
Public function signature: 0x5c7b79f5
Entry block: 0x27f
Exit block: 0x10b
Body: 0x10b, 0x27f, 0x945, 0x946, 0x949, 0x960, 0x965, 0x995

Function 8:
Public function signature: 0x70a08231
Entry block: 0x28c
Exit block: 0x1e0
Body: 0x1e0, 0x28c, 0x293, 0x294, 0x99b

Function 9:
Public function signature: 0x83f12fec
Entry block: 0x2ba
Exit block: 0x1bc
Body: 0x1bc, 0x2ba, 0x2c1, 0x2c2

Function 10:
Public function signature: 0x8da5cb5b
Entry block: 0x323
Exit block: 0x333
Body: 0x323, 0x32a, 0x32b, 0x333, 0xabc

Function 11:
Public function signature: 0x95d89b41
Entry block: 0x34f
Exit block: 0x18f
Body: 0x11d, 0x143, 0x151, 0x163, 0x176, 0x18f, 0x34f, 0x356, 0x357, 0x561, 0x56f, 0x583, 0x58c, 0xacb, 0xb0a, 0xb12

Function 12:
Public function signature: 0x974c86b5
Entry block: 0x3df
Exit block: 0x10b
Body: 0x10b, 0x3df

Function 13:
Public function signature: 0xa035b1fe
Entry block: 0x3e9
Exit block: 0x1e0
Body: 0x1e0, 0x3e9, 0x3f0, 0x3f1, 0xc3b

Function 14:
Public function signature: 0xa2b40d19
Entry block: 0x40b
Exit block: 0x10b
Body: 0x10b, 0x40b, 0x412, 0x413, 0x945, 0x946, 0xc41, 0xc58, 0xc5d, 0xc68, 0xc6d, 0xc6e, 0xc6f

Function 15:
Public function signature: 0xa9059cbb
Entry block: 0x420
Exit block: 0x1bc
Body: 0x1bc, 0x420, 0x427, 0x428, 0x5f9, 0xc72, 0xc93, 0xcb1, 0xcb7, 0xcbe, 0xd17

Function 16:
Public function signature: 0xdd62ed3e
Entry block: 0x453
Exit block: 0x1e0
Body: 0x1e0, 0x453, 0x45a, 0x45b, 0xd1d

Function 17:
Public function signature: 0xfd1fc4a0
Entry block: 0x487
Exit block: 0x10b
Body: 0x10b, 0x487, 0xd3a, 0xd45, 0xd4c, 0xd58, 0xd59

Function 18:
Public function signature: 0xfdff9b4d
Entry block: 0x4d6
Exit block: 0x1bc
Body: 0x1bc, 0x4d6, 0x4dd, 0x4de, 0xd5d

Function 19:
Public fallback function
Entry block: 0x104
Exit block: 0x10b
Body: 0x104, 0x108, 0x109, 0x10b

Function 20:
Private function
Entry block: 0x9ad
Exit block: 0xab3
Body: 0x9ad, 0x9be, 0x9c6, 0x9e8, 0x9f0, 0xa11, 0xa1a, 0xa2c, 0xa63, 0xaa6, 0xaae, 0xab3

Function 21:
Private function
Entry block: 0xb58
Exit block: 0xc39
Body: 0xb58, 0xb79, 0xb93, 0xbaf, 0xc26, 0xc34, 0xc38, 0xc39

