Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x3999795
0x3c EQ
0x3d PUSH2 0x7a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x3999795
0x3c: V13 = EQ 0x3999795 V11
0x3d: V14 = 0x7a
0x40: JUMPI 0x7a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xd1]
---
0x41 DUP1
0x42 PUSH4 0x65372147
0x47 EQ
0x48 PUSH2 0xd1
0x4b JUMPI
---
0x42: V15 = 0x65372147
0x47: V16 = EQ 0x65372147 V11
0x48: V17 = 0xd1
0x4b: JUMPI 0xd1 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0x102]
---
0x4c DUP1
0x4d PUSH4 0xb2c3609b
0x52 EQ
0x53 PUSH2 0x102
0x56 JUMPI
---
0x4d: V18 = 0xb2c3609b
0x52: V19 = EQ 0xb2c3609b V11
0x53: V20 = 0x102
0x56: JUMPI 0x102 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0x125]
---
0x57 DUP1
0x58 PUSH4 0xbef4876b
0x5d EQ
0x5e PUSH2 0x125
0x61 JUMPI
---
0x58: V21 = 0xbef4876b
0x5d: V22 = EQ 0xbef4876b V11
0x5e: V23 = 0x125
0x61: JUMPI 0x125 V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x154]
---
0x62 DUP1
0x63 PUSH4 0xf1b6315e
0x68 EQ
0x69 PUSH2 0x154
0x6c JUMPI
---
0x63: V24 = 0xf1b6315e
0x68: V25 = EQ 0xf1b6315e V11
0x69: V26 = 0x154
0x6c: JUMPI 0x154 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x177]
---
0x6d DUP1
0x6e PUSH4 0xf50ab247
0x73 EQ
0x74 PUSH2 0x177
0x77 JUMPI
---
0x6e: V27 = 0xf50ab247
0x73: V28 = EQ 0xf50ab247 V11
0x74: V29 = 0x177
0x77: JUMPI 0x177 V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x81]
---
Predecessors: [0xd]
Successors: [0x82, 0x86]
---
0x7a JUMPDEST
0x7b CALLVALUE
0x7c DUP1
0x7d ISZERO
0x7e PUSH2 0x86
0x81 JUMPI
---
0x7a: JUMPDEST 
0x7b: V30 = CALLVALUE
0x7d: V31 = ISZERO V30
0x7e: V32 = 0x86
0x81: JUMPI 0x86 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V30]
Exit stack: [V11, V30]

================================

Block 0x82
[0x82:0x85]
---
Predecessors: [0x7a]
Successors: []
---
0x82 PUSH1 0x0
0x84 DUP1
0x85 REVERT
---
0x82: V33 = 0x0
0x85: REVERT 0x0 0x0
---
Entry stack: [V11, V30]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V30]

================================

Block 0x86
[0x86:0x8e]
---
Predecessors: [0x7a]
Successors: [0x181]
---
0x86 JUMPDEST
0x87 POP
0x88 PUSH2 0x8f
0x8b PUSH2 0x181
0x8e JUMP
---
0x86: JUMPDEST 
0x88: V34 = 0x8f
0x8b: V35 = 0x181
0x8e: JUMP 0x181
---
Entry stack: [V11, V30]
Stack pops: 1
Stack additions: [0x8f]
Exit stack: [V11, 0x8f]

================================

Block 0x8f
[0x8f:0xd0]
---
Predecessors: [0x181]
Successors: []
---
0x8f JUMPDEST
0x90 PUSH1 0x40
0x92 MLOAD
0x93 DUP1
0x94 DUP3
0x95 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xaa AND
0xab PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0xc0 AND
0xc1 DUP2
0xc2 MSTORE
0xc3 PUSH1 0x20
0xc5 ADD
0xc6 SWAP2
0xc7 POP
0xc8 POP
0xc9 PUSH1 0x40
0xcb MLOAD
0xcc DUP1
0xcd SWAP2
0xce SUB
0xcf SWAP1
0xd0 RETURN
---
0x8f: JUMPDEST 
0x90: V36 = 0x40
0x92: V37 = M[0x40]
0x95: V38 = 0xffffffffffffffffffffffffffffffffffffffff
0xaa: V39 = AND 0xffffffffffffffffffffffffffffffffffffffff V112
0xab: V40 = 0xffffffffffffffffffffffffffffffffffffffff
0xc0: V41 = AND 0xffffffffffffffffffffffffffffffffffffffff V39
0xc2: M[V37] = V41
0xc3: V42 = 0x20
0xc5: V43 = ADD 0x20 V37
0xc9: V44 = 0x40
0xcb: V45 = M[0x40]
0xce: V46 = SUB V43 V45
0xd0: RETURN V45 V46
---
Entry stack: [V11, 0x8f, V112]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8f]

================================

Block 0xd1
[0xd1:0xd8]
---
Predecessors: [0x41]
Successors: [0xd9, 0xdd]
---
0xd1 JUMPDEST
0xd2 CALLVALUE
0xd3 DUP1
0xd4 ISZERO
0xd5 PUSH2 0xdd
0xd8 JUMPI
---
0xd1: JUMPDEST 
0xd2: V47 = CALLVALUE
0xd4: V48 = ISZERO V47
0xd5: V49 = 0xdd
0xd8: JUMPI 0xdd V48
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V47]
Exit stack: [V11, V47]

================================

Block 0xd9
[0xd9:0xdc]
---
Predecessors: [0xd1]
Successors: []
---
0xd9 PUSH1 0x0
0xdb DUP1
0xdc REVERT
---
0xd9: V50 = 0x0
0xdc: REVERT 0x0 0x0
---
Entry stack: [V11, V47]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V47]

================================

Block 0xdd
[0xdd:0xe5]
---
Predecessors: [0xd1]
Successors: [0x1a7]
---
0xdd JUMPDEST
0xde POP
0xdf PUSH2 0xe6
0xe2 PUSH2 0x1a7
0xe5 JUMP
---
0xdd: JUMPDEST 
0xdf: V51 = 0xe6
0xe2: V52 = 0x1a7
0xe5: JUMP 0x1a7
---
Entry stack: [V11, V47]
Stack pops: 1
Stack additions: [0xe6]
Exit stack: [V11, 0xe6]

================================

Block 0xe6
[0xe6:0x101]
---
Predecessors: [0x1a7]
Successors: []
---
0xe6 JUMPDEST
0xe7 PUSH1 0x40
0xe9 MLOAD
0xea DUP1
0xeb DUP3
0xec PUSH1 0xff
0xee AND
0xef PUSH1 0xff
0xf1 AND
0xf2 DUP2
0xf3 MSTORE
0xf4 PUSH1 0x20
0xf6 ADD
0xf7 SWAP2
0xf8 POP
0xf9 POP
0xfa PUSH1 0x40
0xfc MLOAD
0xfd DUP1
0xfe SWAP2
0xff SUB
0x100 SWAP1
0x101 RETURN
---
0xe6: JUMPDEST 
0xe7: V53 = 0x40
0xe9: V54 = M[0x40]
0xec: V55 = 0xff
0xee: V56 = AND 0xff V119
0xef: V57 = 0xff
0xf1: V58 = AND 0xff V56
0xf3: M[V54] = V58
0xf4: V59 = 0x20
0xf6: V60 = ADD 0x20 V54
0xfa: V61 = 0x40
0xfc: V62 = M[0x40]
0xff: V63 = SUB V60 V62
0x101: RETURN V62 V63
---
Entry stack: [V11, 0xe6, V119]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xe6]

================================

Block 0x102
[0x102:0x122]
---
Predecessors: [0x4c]
Successors: [0x1b9]
---
0x102 JUMPDEST
0x103 PUSH2 0x123
0x106 PUSH1 0x4
0x108 DUP1
0x109 CALLDATASIZE
0x10a SUB
0x10b DUP2
0x10c ADD
0x10d SWAP1
0x10e DUP1
0x10f DUP1
0x110 CALLDATALOAD
0x111 PUSH1 0xff
0x113 AND
0x114 SWAP1
0x115 PUSH1 0x20
0x117 ADD
0x118 SWAP1
0x119 SWAP3
0x11a SWAP2
0x11b SWAP1
0x11c POP
0x11d POP
0x11e POP
0x11f PUSH2 0x1b9
0x122 JUMP
---
0x102: JUMPDEST 
0x103: V64 = 0x123
0x106: V65 = 0x4
0x109: V66 = CALLDATASIZE
0x10a: V67 = SUB V66 0x4
0x10c: V68 = ADD 0x4 V67
0x110: V69 = CALLDATALOAD 0x4
0x111: V70 = 0xff
0x113: V71 = AND 0xff V69
0x115: V72 = 0x20
0x117: V73 = ADD 0x20 0x4
0x11f: V74 = 0x1b9
0x122: JUMP 0x1b9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x123, V71]
Exit stack: [V11, 0x123, V71]

================================

Block 0x123
[0x123:0x124]
---
Predecessors: [0x2a1]
Successors: []
---
0x123 JUMPDEST
0x124 STOP
---
0x123: JUMPDEST 
0x124: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x125
[0x125:0x12c]
---
Predecessors: [0x57]
Successors: [0x12d, 0x131]
---
0x125 JUMPDEST
0x126 CALLVALUE
0x127 DUP1
0x128 ISZERO
0x129 PUSH2 0x131
0x12c JUMPI
---
0x125: JUMPDEST 
0x126: V75 = CALLVALUE
0x128: V76 = ISZERO V75
0x129: V77 = 0x131
0x12c: JUMPI 0x131 V76
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V75]
Exit stack: [V11, V75]

================================

Block 0x12d
[0x12d:0x130]
---
Predecessors: [0x125]
Successors: []
---
0x12d PUSH1 0x0
0x12f DUP1
0x130 REVERT
---
0x12d: V78 = 0x0
0x130: REVERT 0x0 0x0
---
Entry stack: [V11, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V75]

================================

Block 0x131
[0x131:0x139]
---
Predecessors: [0x125]
Successors: [0x2a4]
---
0x131 JUMPDEST
0x132 POP
0x133 PUSH2 0x13a
0x136 PUSH2 0x2a4
0x139 JUMP
---
0x131: JUMPDEST 
0x133: V79 = 0x13a
0x136: V80 = 0x2a4
0x139: JUMP 0x2a4
---
Entry stack: [V11, V75]
Stack pops: 1
Stack additions: [0x13a]
Exit stack: [V11, 0x13a]

================================

Block 0x13a
[0x13a:0x153]
---
Predecessors: [0x2a4]
Successors: []
---
0x13a JUMPDEST
0x13b PUSH1 0x40
0x13d MLOAD
0x13e DUP1
0x13f DUP3
0x140 ISZERO
0x141 ISZERO
0x142 ISZERO
0x143 ISZERO
0x144 DUP2
0x145 MSTORE
0x146 PUSH1 0x20
0x148 ADD
0x149 SWAP2
0x14a POP
0x14b POP
0x14c PUSH1 0x40
0x14e MLOAD
0x14f DUP1
0x150 SWAP2
0x151 SUB
0x152 SWAP1
0x153 RETURN
---
0x13a: JUMPDEST 
0x13b: V81 = 0x40
0x13d: V82 = M[0x40]
0x140: V83 = ISZERO V194
0x141: V84 = ISZERO V83
0x142: V85 = ISZERO V84
0x143: V86 = ISZERO V85
0x145: M[V82] = V86
0x146: V87 = 0x20
0x148: V88 = ADD 0x20 V82
0x14c: V89 = 0x40
0x14e: V90 = M[0x40]
0x151: V91 = SUB V88 V90
0x153: RETURN V90 V91
---
Entry stack: [V11, 0x13a, V194]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x13a]

================================

Block 0x154
[0x154:0x174]
---
Predecessors: [0x62]
Successors: [0x2b7]
---
0x154 JUMPDEST
0x155 PUSH2 0x175
0x158 PUSH1 0x4
0x15a DUP1
0x15b CALLDATASIZE
0x15c SUB
0x15d DUP2
0x15e ADD
0x15f SWAP1
0x160 DUP1
0x161 DUP1
0x162 CALLDATALOAD
0x163 PUSH1 0xff
0x165 AND
0x166 SWAP1
0x167 PUSH1 0x20
0x169 ADD
0x16a SWAP1
0x16b SWAP3
0x16c SWAP2
0x16d SWAP1
0x16e POP
0x16f POP
0x170 POP
0x171 PUSH2 0x2b7
0x174 JUMP
---
0x154: JUMPDEST 
0x155: V92 = 0x175
0x158: V93 = 0x4
0x15b: V94 = CALLDATASIZE
0x15c: V95 = SUB V94 0x4
0x15e: V96 = ADD 0x4 V95
0x162: V97 = CALLDATALOAD 0x4
0x163: V98 = 0xff
0x165: V99 = AND 0xff V97
0x167: V100 = 0x20
0x169: V101 = ADD 0x20 0x4
0x171: V102 = 0x2b7
0x174: JUMP 0x2b7
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x175, V99]
Exit stack: [V11, 0x175, V99]

================================

Block 0x175
[0x175:0x176]
---
Predecessors: [0x32d]
Successors: []
---
0x175 JUMPDEST
0x176 STOP
---
0x175: JUMPDEST 
0x176: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x177
[0x177:0x17e]
---
Predecessors: [0x6d]
Successors: [0x330]
---
0x177 JUMPDEST
0x178 PUSH2 0x17f
0x17b PUSH2 0x330
0x17e JUMP
---
0x177: JUMPDEST 
0x178: V103 = 0x17f
0x17b: V104 = 0x330
0x17e: JUMP 0x330
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x17f]
Exit stack: [V11, 0x17f]

================================

Block 0x17f
[0x17f:0x180]
---
Predecessors: [0x402]
Successors: []
---
0x17f JUMPDEST
0x180 STOP
---
0x17f: JUMPDEST 
0x180: STOP 
---
Entry stack: [V11, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S0]

================================

Block 0x181
[0x181:0x1a6]
---
Predecessors: [0x86]
Successors: [0x8f]
---
0x181 JUMPDEST
0x182 PUSH1 0x0
0x184 PUSH1 0x2
0x186 SWAP1
0x187 SLOAD
0x188 SWAP1
0x189 PUSH2 0x100
0x18c EXP
0x18d SWAP1
0x18e DIV
0x18f PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1a4 AND
0x1a5 DUP2
0x1a6 JUMP
---
0x181: JUMPDEST 
0x182: V105 = 0x0
0x184: V106 = 0x2
0x187: V107 = S[0x0]
0x189: V108 = 0x100
0x18c: V109 = EXP 0x100 0x2
0x18e: V110 = DIV V107 0x10000
0x18f: V111 = 0xffffffffffffffffffffffffffffffffffffffff
0x1a4: V112 = AND 0xffffffffffffffffffffffffffffffffffffffff V110
0x1a6: JUMP 0x8f
---
Entry stack: [V11, 0x8f]
Stack pops: 1
Stack additions: [S0, V112]
Exit stack: [V11, 0x8f, V112]

================================

Block 0x1a7
[0x1a7:0x1b8]
---
Predecessors: [0xdd]
Successors: [0xe6]
---
0x1a7 JUMPDEST
0x1a8 PUSH1 0x0
0x1aa DUP1
0x1ab SWAP1
0x1ac SLOAD
0x1ad SWAP1
0x1ae PUSH2 0x100
0x1b1 EXP
0x1b2 SWAP1
0x1b3 DIV
0x1b4 PUSH1 0xff
0x1b6 AND
0x1b7 DUP2
0x1b8 JUMP
---
0x1a7: JUMPDEST 
0x1a8: V113 = 0x0
0x1ac: V114 = S[0x0]
0x1ae: V115 = 0x100
0x1b1: V116 = EXP 0x100 0x0
0x1b3: V117 = DIV V114 0x1
0x1b4: V118 = 0xff
0x1b6: V119 = AND 0xff V117
0x1b8: JUMP 0xe6
---
Entry stack: [V11, 0xe6]
Stack pops: 1
Stack additions: [S0, V119]
Exit stack: [V11, 0xe6, V119]

================================

Block 0x1b9
[0x1b9:0x1ee]
---
Predecessors: [0x102]
Successors: [0x1ef, 0x1f3]
---
0x1b9 JUMPDEST
0x1ba ORIGIN
0x1bb PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d0 AND
0x1d1 CALLER
0x1d2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1e7 AND
0x1e8 EQ
0x1e9 ISZERO
0x1ea ISZERO
0x1eb PUSH2 0x1f3
0x1ee JUMPI
---
0x1b9: JUMPDEST 
0x1ba: V120 = ORIGIN
0x1bb: V121 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d0: V122 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x1d1: V123 = CALLER
0x1d2: V124 = 0xffffffffffffffffffffffffffffffffffffffff
0x1e7: V125 = AND 0xffffffffffffffffffffffffffffffffffffffff V123
0x1e8: V126 = EQ V125 V122
0x1e9: V127 = ISZERO V126
0x1ea: V128 = ISZERO V127
0x1eb: V129 = 0x1f3
0x1ee: JUMPI 0x1f3 V128
---
Entry stack: [V11, 0x123, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V71]

================================

Block 0x1ef
[0x1ef:0x1f2]
---
Predecessors: [0x1b9]
Successors: []
---
0x1ef PUSH1 0x0
0x1f1 DUP1
0x1f2 REVERT
---
0x1ef: V130 = 0x0
0x1f2: REVERT 0x0 0x0
---
Entry stack: [V11, 0x123, V71]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V71]

================================

Block 0x1f3
[0x1f3:0x210]
---
Predecessors: [0x1b9]
Successors: [0x211, 0x21c]
---
0x1f3 JUMPDEST
0x1f4 DUP1
0x1f5 PUSH1 0xff
0x1f7 AND
0x1f8 PUSH1 0x0
0x1fa DUP1
0x1fb SWAP1
0x1fc SLOAD
0x1fd SWAP1
0x1fe PUSH2 0x100
0x201 EXP
0x202 SWAP1
0x203 DIV
0x204 PUSH1 0xff
0x206 AND
0x207 PUSH1 0xff
0x209 AND
0x20a EQ
0x20b DUP1
0x20c ISZERO
0x20d PUSH2 0x21c
0x210 JUMPI
---
0x1f3: JUMPDEST 
0x1f5: V131 = 0xff
0x1f7: V132 = AND 0xff V71
0x1f8: V133 = 0x0
0x1fc: V134 = S[0x0]
0x1fe: V135 = 0x100
0x201: V136 = EXP 0x100 0x0
0x203: V137 = DIV V134 0x1
0x204: V138 = 0xff
0x206: V139 = AND 0xff V137
0x207: V140 = 0xff
0x209: V141 = AND 0xff V139
0x20a: V142 = EQ V141 V132
0x20c: V143 = ISZERO V142
0x20d: V144 = 0x21c
0x210: JUMPI 0x21c V143
---
Entry stack: [V11, 0x123, V71]
Stack pops: 1
Stack additions: [S0, V142]
Exit stack: [V11, 0x123, V71, V142]

================================

Block 0x211
[0x211:0x21b]
---
Predecessors: [0x1f3]
Successors: [0x21c]
---
0x211 POP
0x212 PUSH7 0x38d7ea4c68000
0x21a CALLVALUE
0x21b GT
---
0x212: V145 = 0x38d7ea4c68000
0x21a: V146 = CALLVALUE
0x21b: V147 = GT V146 0x38d7ea4c68000
---
Entry stack: [V11, 0x123, V71, V142]
Stack pops: 1
Stack additions: [V147]
Exit stack: [V11, 0x123, V71, V147]

================================

Block 0x21c
[0x21c:0x222]
---
Predecessors: [0x1f3, 0x211]
Successors: [0x223, 0x235]
---
0x21c JUMPDEST
0x21d DUP1
0x21e ISZERO
0x21f PUSH2 0x235
0x222 JUMPI
---
0x21c: JUMPDEST 
0x21e: V148 = ISZERO S0
0x21f: V149 = 0x235
0x222: JUMPI 0x235 V148
---
Entry stack: [V11, 0x123, V71, S0]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x123, V71, S0]

================================

Block 0x223
[0x223:0x234]
---
Predecessors: [0x21c]
Successors: [0x235]
---
0x223 POP
0x224 PUSH1 0x0
0x226 PUSH1 0x1
0x228 SWAP1
0x229 SLOAD
0x22a SWAP1
0x22b PUSH2 0x100
0x22e EXP
0x22f SWAP1
0x230 DIV
0x231 PUSH1 0xff
0x233 AND
0x234 ISZERO
---
0x224: V150 = 0x0
0x226: V151 = 0x1
0x229: V152 = S[0x0]
0x22b: V153 = 0x100
0x22e: V154 = EXP 0x100 0x1
0x230: V155 = DIV V152 0x100
0x231: V156 = 0xff
0x233: V157 = AND 0xff V155
0x234: V158 = ISZERO V157
---
Entry stack: [V11, 0x123, V71, S0]
Stack pops: 1
Stack additions: [V158]
Exit stack: [V11, 0x123, V71, V158]

================================

Block 0x235
[0x235:0x23a]
---
Predecessors: [0x21c, 0x223]
Successors: [0x23b, 0x2a1]
---
0x235 JUMPDEST
0x236 ISZERO
0x237 PUSH2 0x2a1
0x23a JUMPI
---
0x235: JUMPDEST 
0x236: V159 = ISZERO S0
0x237: V160 = 0x2a1
0x23a: JUMPI 0x2a1 V159
---
Entry stack: [V11, 0x123, V71, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x123, V71]

================================

Block 0x23b
[0x23b:0x28d]
---
Predecessors: [0x235]
Successors: [0x28e, 0x297]
---
0x23b CALLER
0x23c PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x251 AND
0x252 PUSH2 0x8fc
0x255 ADDRESS
0x256 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x26b AND
0x26c BALANCE
0x26d SWAP1
0x26e DUP2
0x26f ISZERO
0x270 MUL
0x271 SWAP1
0x272 PUSH1 0x40
0x274 MLOAD
0x275 PUSH1 0x0
0x277 PUSH1 0x40
0x279 MLOAD
0x27a DUP1
0x27b DUP4
0x27c SUB
0x27d DUP2
0x27e DUP6
0x27f DUP9
0x280 DUP9
0x281 CALL
0x282 SWAP4
0x283 POP
0x284 POP
0x285 POP
0x286 POP
0x287 ISZERO
0x288 DUP1
0x289 ISZERO
0x28a PUSH2 0x297
0x28d JUMPI
---
0x23b: V161 = CALLER
0x23c: V162 = 0xffffffffffffffffffffffffffffffffffffffff
0x251: V163 = AND 0xffffffffffffffffffffffffffffffffffffffff V161
0x252: V164 = 0x8fc
0x255: V165 = ADDRESS
0x256: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x26b: V167 = AND 0xffffffffffffffffffffffffffffffffffffffff V165
0x26c: V168 = BALANCE V167
0x26f: V169 = ISZERO V168
0x270: V170 = MUL V169 0x8fc
0x272: V171 = 0x40
0x274: V172 = M[0x40]
0x275: V173 = 0x0
0x277: V174 = 0x40
0x279: V175 = M[0x40]
0x27c: V176 = SUB V172 V175
0x281: V177 = CALL V170 V163 V168 V175 V176 V175 0x0
0x287: V178 = ISZERO V177
0x289: V179 = ISZERO V178
0x28a: V180 = 0x297
0x28d: JUMPI 0x297 V179
---
Entry stack: [V11, 0x123, V71]
Stack pops: 0
Stack additions: [V178]
Exit stack: [V11, 0x123, V71, V178]

================================

Block 0x28e
[0x28e:0x296]
---
Predecessors: [0x23b]
Successors: []
---
0x28e RETURNDATASIZE
0x28f PUSH1 0x0
0x291 DUP1
0x292 RETURNDATACOPY
0x293 RETURNDATASIZE
0x294 PUSH1 0x0
0x296 REVERT
---
0x28e: V181 = RETURNDATASIZE
0x28f: V182 = 0x0
0x292: RETURNDATACOPY 0x0 0x0 V181
0x293: V183 = RETURNDATASIZE
0x294: V184 = 0x0
0x296: REVERT 0x0 V183
---
Entry stack: [V11, 0x123, V71, V178]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x123, V71, V178]

================================

Block 0x297
[0x297:0x29f]
---
Predecessors: [0x23b]
Successors: [0x404]
---
0x297 JUMPDEST
0x298 POP
0x299 PUSH2 0x2a0
0x29c PUSH2 0x404
0x29f JUMP
---
0x297: JUMPDEST 
0x299: V185 = 0x2a0
0x29c: V186 = 0x404
0x29f: JUMP 0x404
---
Entry stack: [V11, 0x123, V71, V178]
Stack pops: 1
Stack additions: [0x2a0]
Exit stack: [V11, 0x123, V71, 0x2a0]

================================

Block 0x2a0
[0x2a0:0x2a0]
---
Predecessors: [0x404]
Successors: [0x2a1]
---
0x2a0 JUMPDEST
---
0x2a0: JUMPDEST 
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0x2a1
[0x2a1:0x2a3]
---
Predecessors: [0x235, 0x2a0]
Successors: [0x123]
---
0x2a1 JUMPDEST
0x2a2 POP
0x2a3 JUMP
---
0x2a1: JUMPDEST 
0x2a3: JUMP S1
---
Entry stack: [V11, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x2a4
[0x2a4:0x2b6]
---
Predecessors: [0x131]
Successors: [0x13a]
---
0x2a4 JUMPDEST
0x2a5 PUSH1 0x0
0x2a7 PUSH1 0x1
0x2a9 SWAP1
0x2aa SLOAD
0x2ab SWAP1
0x2ac PUSH2 0x100
0x2af EXP
0x2b0 SWAP1
0x2b1 DIV
0x2b2 PUSH1 0xff
0x2b4 AND
0x2b5 DUP2
0x2b6 JUMP
---
0x2a4: JUMPDEST 
0x2a5: V187 = 0x0
0x2a7: V188 = 0x1
0x2aa: V189 = S[0x0]
0x2ac: V190 = 0x100
0x2af: V191 = EXP 0x100 0x1
0x2b1: V192 = DIV V189 0x100
0x2b2: V193 = 0xff
0x2b4: V194 = AND 0xff V192
0x2b6: JUMP 0x13a
---
Entry stack: [V11, 0x13a]
Stack pops: 1
Stack additions: [S0, V194]
Exit stack: [V11, 0x13a, V194]

================================

Block 0x2b7
[0x2b7:0x2d1]
---
Predecessors: [0x154]
Successors: [0x2d2, 0x32d]
---
0x2b7 JUMPDEST
0x2b8 PUSH1 0x0
0x2ba DUP1
0x2bb PUSH1 0x0
0x2bd SWAP1
0x2be SLOAD
0x2bf SWAP1
0x2c0 PUSH2 0x100
0x2c3 EXP
0x2c4 SWAP1
0x2c5 DIV
0x2c6 PUSH1 0xff
0x2c8 AND
0x2c9 PUSH1 0xff
0x2cb AND
0x2cc EQ
0x2cd ISZERO
0x2ce PUSH2 0x32d
0x2d1 JUMPI
---
0x2b7: JUMPDEST 
0x2b8: V195 = 0x0
0x2bb: V196 = 0x0
0x2be: V197 = S[0x0]
0x2c0: V198 = 0x100
0x2c3: V199 = EXP 0x100 0x0
0x2c5: V200 = DIV V197 0x1
0x2c6: V201 = 0xff
0x2c8: V202 = AND 0xff V200
0x2c9: V203 = 0xff
0x2cb: V204 = AND 0xff V202
0x2cc: V205 = EQ V204 0x0
0x2cd: V206 = ISZERO V205
0x2ce: V207 = 0x32d
0x2d1: JUMPI 0x32d V206
---
Entry stack: [V11, 0x175, V99]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x175, V99]

================================

Block 0x2d2
[0x2d2:0x32c]
---
Predecessors: [0x2b7]
Successors: [0x32d]
---
0x2d2 DUP1
0x2d3 PUSH1 0x0
0x2d5 DUP1
0x2d6 PUSH2 0x100
0x2d9 EXP
0x2da DUP2
0x2db SLOAD
0x2dc DUP2
0x2dd PUSH1 0xff
0x2df MUL
0x2e0 NOT
0x2e1 AND
0x2e2 SWAP1
0x2e3 DUP4
0x2e4 PUSH1 0xff
0x2e6 AND
0x2e7 MUL
0x2e8 OR
0x2e9 SWAP1
0x2ea SSTORE
0x2eb POP
0x2ec CALLER
0x2ed PUSH1 0x0
0x2ef PUSH1 0x2
0x2f1 PUSH2 0x100
0x2f4 EXP
0x2f5 DUP2
0x2f6 SLOAD
0x2f7 DUP2
0x2f8 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x30d MUL
0x30e NOT
0x30f AND
0x310 SWAP1
0x311 DUP4
0x312 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x327 AND
0x328 MUL
0x329 OR
0x32a SWAP1
0x32b SSTORE
0x32c POP
---
0x2d3: V208 = 0x0
0x2d6: V209 = 0x100
0x2d9: V210 = EXP 0x100 0x0
0x2db: V211 = S[0x0]
0x2dd: V212 = 0xff
0x2df: V213 = MUL 0xff 0x1
0x2e0: V214 = NOT 0xff
0x2e1: V215 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V211
0x2e4: V216 = 0xff
0x2e6: V217 = AND 0xff V99
0x2e7: V218 = MUL V217 0x1
0x2e8: V219 = OR V218 V215
0x2ea: S[0x0] = V219
0x2ec: V220 = CALLER
0x2ed: V221 = 0x0
0x2ef: V222 = 0x2
0x2f1: V223 = 0x100
0x2f4: V224 = EXP 0x100 0x2
0x2f6: V225 = S[0x0]
0x2f8: V226 = 0xffffffffffffffffffffffffffffffffffffffff
0x30d: V227 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x10000
0x30e: V228 = NOT 0xffffffffffffffffffffffffffffffffffffffff0000
0x30f: V229 = AND 0xffffffffffffffffffff0000000000000000000000000000000000000000ffff V225
0x312: V230 = 0xffffffffffffffffffffffffffffffffffffffff
0x327: V231 = AND 0xffffffffffffffffffffffffffffffffffffffff V220
0x328: V232 = MUL V231 0x10000
0x329: V233 = OR V232 V229
0x32b: S[0x0] = V233
---
Entry stack: [V11, 0x175, V99]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x175, V99]

================================

Block 0x32d
[0x32d:0x32f]
---
Predecessors: [0x2b7, 0x2d2]
Successors: [0x175]
---
0x32d JUMPDEST
0x32e POP
0x32f JUMP
---
0x32d: JUMPDEST 
0x32f: JUMP 0x175
---
Entry stack: [V11, 0x175, V99]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x330
[0x330:0x387]
---
Predecessors: [0x177]
Successors: [0x388, 0x38c]
---
0x330 JUMPDEST
0x331 PUSH1 0x0
0x333 PUSH1 0x2
0x335 SWAP1
0x336 SLOAD
0x337 SWAP1
0x338 PUSH2 0x100
0x33b EXP
0x33c SWAP1
0x33d DIV
0x33e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x353 AND
0x354 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x369 AND
0x36a CALLER
0x36b PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x380 AND
0x381 EQ
0x382 ISZERO
0x383 ISZERO
0x384 PUSH2 0x38c
0x387 JUMPI
---
0x330: JUMPDEST 
0x331: V234 = 0x0
0x333: V235 = 0x2
0x336: V236 = S[0x0]
0x338: V237 = 0x100
0x33b: V238 = EXP 0x100 0x2
0x33d: V239 = DIV V236 0x10000
0x33e: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x353: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x354: V242 = 0xffffffffffffffffffffffffffffffffffffffff
0x369: V243 = AND 0xffffffffffffffffffffffffffffffffffffffff V241
0x36a: V244 = CALLER
0x36b: V245 = 0xffffffffffffffffffffffffffffffffffffffff
0x380: V246 = AND 0xffffffffffffffffffffffffffffffffffffffff V244
0x381: V247 = EQ V246 V243
0x382: V248 = ISZERO V247
0x383: V249 = ISZERO V248
0x384: V250 = 0x38c
0x387: JUMPI 0x38c V249
---
Entry stack: [V11, 0x17f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17f]

================================

Block 0x388
[0x388:0x38b]
---
Predecessors: [0x330]
Successors: []
---
0x388 PUSH1 0x0
0x38a DUP1
0x38b REVERT
---
0x388: V251 = 0x0
0x38b: REVERT 0x0 0x0
---
Entry stack: [V11, 0x17f]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x17f]

================================

Block 0x38c
[0x38c:0x393]
---
Predecessors: [0x330]
Successors: [0x404]
---
0x38c JUMPDEST
0x38d PUSH2 0x394
0x390 PUSH2 0x404
0x393 JUMP
---
0x38c: JUMPDEST 
0x38d: V252 = 0x394
0x390: V253 = 0x404
0x393: JUMP 0x404
---
Entry stack: [V11, 0x17f]
Stack pops: 0
Stack additions: [0x394]
Exit stack: [V11, 0x17f, 0x394]

================================

Block 0x394
[0x394:0x3a3]
---
Predecessors: [0x404]
Successors: [0x3a4, 0x402]
---
0x394 JUMPDEST
0x395 PUSH7 0x38d7ea4c68000
0x39d CALLVALUE
0x39e GT
0x39f ISZERO
0x3a0 PUSH2 0x402
0x3a3 JUMPI
---
0x394: JUMPDEST 
0x395: V254 = 0x38d7ea4c68000
0x39d: V255 = CALLVALUE
0x39e: V256 = GT V255 0x38d7ea4c68000
0x39f: V257 = ISZERO V256
0x3a0: V258 = 0x402
0x3a3: JUMPI 0x402 V257
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S1, S0]

================================

Block 0x3a4
[0x3a4:0x3f6]
---
Predecessors: [0x394]
Successors: [0x3f7, 0x400]
---
0x3a4 CALLER
0x3a5 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3ba AND
0x3bb PUSH2 0x8fc
0x3be ADDRESS
0x3bf PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d4 AND
0x3d5 BALANCE
0x3d6 SWAP1
0x3d7 DUP2
0x3d8 ISZERO
0x3d9 MUL
0x3da SWAP1
0x3db PUSH1 0x40
0x3dd MLOAD
0x3de PUSH1 0x0
0x3e0 PUSH1 0x40
0x3e2 MLOAD
0x3e3 DUP1
0x3e4 DUP4
0x3e5 SUB
0x3e6 DUP2
0x3e7 DUP6
0x3e8 DUP9
0x3e9 DUP9
0x3ea CALL
0x3eb SWAP4
0x3ec POP
0x3ed POP
0x3ee POP
0x3ef POP
0x3f0 ISZERO
0x3f1 DUP1
0x3f2 ISZERO
0x3f3 PUSH2 0x400
0x3f6 JUMPI
---
0x3a4: V259 = CALLER
0x3a5: V260 = 0xffffffffffffffffffffffffffffffffffffffff
0x3ba: V261 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x3bb: V262 = 0x8fc
0x3be: V263 = ADDRESS
0x3bf: V264 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d4: V265 = AND 0xffffffffffffffffffffffffffffffffffffffff V263
0x3d5: V266 = BALANCE V265
0x3d8: V267 = ISZERO V266
0x3d9: V268 = MUL V267 0x8fc
0x3db: V269 = 0x40
0x3dd: V270 = M[0x40]
0x3de: V271 = 0x0
0x3e0: V272 = 0x40
0x3e2: V273 = M[0x40]
0x3e5: V274 = SUB V270 V273
0x3ea: V275 = CALL V268 V261 V266 V273 V274 V273 0x0
0x3f0: V276 = ISZERO V275
0x3f2: V277 = ISZERO V276
0x3f3: V278 = 0x400
0x3f6: JUMPI 0x400 V277
---
Entry stack: [V11, S1, S0]
Stack pops: 0
Stack additions: [V276]
Exit stack: [V11, S1, S0, V276]

================================

Block 0x3f7
[0x3f7:0x3ff]
---
Predecessors: [0x3a4]
Successors: []
---
0x3f7 RETURNDATASIZE
0x3f8 PUSH1 0x0
0x3fa DUP1
0x3fb RETURNDATACOPY
0x3fc RETURNDATASIZE
0x3fd PUSH1 0x0
0x3ff REVERT
---
0x3f7: V279 = RETURNDATASIZE
0x3f8: V280 = 0x0
0x3fb: RETURNDATACOPY 0x0 0x0 V279
0x3fc: V281 = RETURNDATASIZE
0x3fd: V282 = 0x0
0x3ff: REVERT 0x0 V281
---
Entry stack: [V11, S2, S1, V276]
Stack pops: 0
Stack additions: []
Exit stack: [V11, S2, S1, V276]

================================

Block 0x400
[0x400:0x401]
---
Predecessors: [0x3a4]
Successors: [0x402]
---
0x400 JUMPDEST
0x401 POP
---
0x400: JUMPDEST 
---
Entry stack: [V11, S2, S1, V276]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S2, S1]

================================

Block 0x402
[0x402:0x403]
---
Predecessors: [0x394, 0x400]
Successors: [0x17f]
---
0x402 JUMPDEST
0x403 JUMP
---
0x402: JUMPDEST 
0x403: JUMP S0
---
Entry stack: [V11, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S1]

================================

Block 0x404
[0x404:0x420]
---
Predecessors: [0x297, 0x38c]
Successors: [0x2a0, 0x394]
---
0x404 JUMPDEST
0x405 PUSH1 0x1
0x407 PUSH1 0x0
0x409 PUSH1 0x1
0x40b PUSH2 0x100
0x40e EXP
0x40f DUP2
0x410 SLOAD
0x411 DUP2
0x412 PUSH1 0xff
0x414 MUL
0x415 NOT
0x416 AND
0x417 SWAP1
0x418 DUP4
0x419 ISZERO
0x41a ISZERO
0x41b MUL
0x41c OR
0x41d SWAP1
0x41e SSTORE
0x41f POP
0x420 JUMP
---
0x404: JUMPDEST 
0x405: V283 = 0x1
0x407: V284 = 0x0
0x409: V285 = 0x1
0x40b: V286 = 0x100
0x40e: V287 = EXP 0x100 0x1
0x410: V288 = S[0x0]
0x412: V289 = 0xff
0x414: V290 = MUL 0xff 0x100
0x415: V291 = NOT 0xff00
0x416: V292 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff V288
0x419: V293 = ISZERO 0x1
0x41a: V294 = ISZERO 0x0
0x41b: V295 = MUL 0x1 0x100
0x41c: V296 = OR 0x100 V292
0x41e: S[0x0] = V296
0x420: JUMP {0x2a0, 0x394}
---
Entry stack: [V11, S2, S1, {0x2a0, 0x394}]
Stack pops: 1
Stack additions: []
Exit stack: [V11, S2, S1]

================================

Block 0x421
[0x421:0x44c]
---
Predecessors: []
Successors: []
---
0x421 STOP
0x422 LOG1
0x423 PUSH6 0x627a7a723058
0x42a SHA3
0x42b PUSH24 0xb52cbefc95d4df88e46c35001060185941c34ead10c7e564
0x444 LOG1
0x445 MISSING 0x46
0x446 SWAP2
0x447 MISSING 0xd3
0x448 MISSING 0xc1
0x449 BALANCE
0x44a MISSING 0xc5
0x44b STOP
0x44c MISSING 0x29
---
0x421: STOP 
0x422: LOG S0 S1 S2
0x423: V297 = 0x627a7a723058
0x42a: V298 = SHA3 0x627a7a723058 S3
0x42b: V299 = 0xb52cbefc95d4df88e46c35001060185941c34ead10c7e564
0x444: LOG 0xb52cbefc95d4df88e46c35001060185941c34ead10c7e564 V298 S4
0x445: MISSING 0x46
0x447: MISSING 0xd3
0x448: MISSING 0xc1
0x449: V300 = BALANCE S0
0x44a: MISSING 0xc5
0x44b: STOP 
0x44c: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S2, S1, S0, V300]
Exit stack: []

================================

Function 0:
Public function signature: 0x3999795
Entry block: 0x7a
Exit block: 0x8f
Body: 0x7a, 0x82, 0x86, 0x8f, 0x181

Function 1:
Public function signature: 0x65372147
Entry block: 0xd1
Exit block: 0xe6
Body: 0xd1, 0xd9, 0xdd, 0xe6, 0x1a7

Function 2:
Public function signature: 0xb2c3609b
Entry block: 0x102
Exit block: 0x123
Body: 0x102, 0x123, 0x1b9, 0x1ef, 0x1f3, 0x211, 0x21c, 0x223, 0x235, 0x23b, 0x28e, 0x297, 0x2a0, 0x2a1

Function 3:
Public function signature: 0xbef4876b
Entry block: 0x125
Exit block: 0x13a
Body: 0x125, 0x12d, 0x131, 0x13a, 0x2a4

Function 4:
Public function signature: 0xf1b6315e
Entry block: 0x154
Exit block: 0x175
Body: 0x154, 0x175, 0x2b7, 0x2d2, 0x32d

Function 5:
Public function signature: 0xf50ab247
Entry block: 0x177
Exit block: 0x17f
Body: 0x177, 0x17f, 0x330, 0x388, 0x38c, 0x394, 0x3a4, 0x3f7, 0x400, 0x402

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

