Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x78]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x78
0xc JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x78
0xc: JUMPI 0x78 V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x40]
---
Predecessors: [0x0]
Successors: [0x41, 0x7a]
---
0xd PUSH1 0x0
0xf CALLDATALOAD
0x10 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x2e SWAP1
0x2f DIV
0x30 PUSH4 0xffffffff
0x35 AND
0x36 DUP1
0x37 PUSH4 0x9619367d
0x3c EQ
0x3d PUSH2 0x7a
0x40 JUMPI
---
0xd: V6 = 0x0
0xf: V7 = CALLDATALOAD 0x0
0x10: V8 = 0x100000000000000000000000000000000000000000000000000000000
0x2f: V9 = DIV V7 0x100000000000000000000000000000000000000000000000000000000
0x30: V10 = 0xffffffff
0x35: V11 = AND 0xffffffff V9
0x37: V12 = 0x9619367d
0x3c: V13 = EQ 0x9619367d V11
0x3d: V14 = 0x7a
0x40: JUMPI 0x7a V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x41
[0x41:0x4b]
---
Predecessors: [0xd]
Successors: [0x4c, 0xa3]
---
0x41 DUP1
0x42 PUSH4 0xe5ed1d59
0x47 EQ
0x48 PUSH2 0xa3
0x4b JUMPI
---
0x42: V15 = 0xe5ed1d59
0x47: V16 = EQ 0xe5ed1d59 V11
0x48: V17 = 0xa3
0x4b: JUMPI 0xa3 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4c
[0x4c:0x56]
---
Predecessors: [0x41]
Successors: [0x57, 0xbb]
---
0x4c DUP1
0x4d PUSH4 0xe8147a25
0x52 EQ
0x53 PUSH2 0xbb
0x56 JUMPI
---
0x4d: V18 = 0xe8147a25
0x52: V19 = EQ 0xe8147a25 V11
0x53: V20 = 0xbb
0x56: JUMPI 0xbb V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x57
[0x57:0x61]
---
Predecessors: [0x4c]
Successors: [0x62, 0xde]
---
0x57 DUP1
0x58 PUSH4 0xea92dd1d
0x5d EQ
0x5e PUSH2 0xde
0x61 JUMPI
---
0x58: V21 = 0xea92dd1d
0x5d: V22 = EQ 0xea92dd1d V11
0x5e: V23 = 0xde
0x61: JUMPI 0xde V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x62
[0x62:0x6c]
---
Predecessors: [0x57]
Successors: [0x6d, 0x101]
---
0x62 DUP1
0x63 PUSH4 0xf3ac3df5
0x68 EQ
0x69 PUSH2 0x101
0x6c JUMPI
---
0x63: V24 = 0xf3ac3df5
0x68: V25 = EQ 0xf3ac3df5 V11
0x69: V26 = 0x101
0x6c: JUMPI 0x101 V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6d
[0x6d:0x77]
---
Predecessors: [0x62]
Successors: [0x78, 0x12a]
---
0x6d DUP1
0x6e PUSH4 0xf82c50f1
0x73 EQ
0x74 PUSH2 0x12a
0x77 JUMPI
---
0x6e: V27 = 0xf82c50f1
0x73: V28 = EQ 0xf82c50f1 V11
0x74: V29 = 0x12a
0x77: JUMPI 0x12a V28
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x78
[0x78:0x79]
---
Predecessors: [0x0, 0x6d]
Successors: []
---
0x78 JUMPDEST
0x79 STOP
---
0x78: JUMPDEST 
0x79: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x7a
[0x7a:0x80]
---
Predecessors: [0xd]
Successors: [0x81, 0x85]
---
0x7a JUMPDEST
0x7b CALLVALUE
0x7c ISZERO
0x7d PUSH2 0x85
0x80 JUMPI
---
0x7a: JUMPDEST 
0x7b: V30 = CALLVALUE
0x7c: V31 = ISZERO V30
0x7d: V32 = 0x85
0x80: JUMPI 0x85 V31
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x81
[0x81:0x84]
---
Predecessors: [0x7a]
Successors: []
---
0x81 PUSH1 0x0
0x83 DUP1
0x84 REVERT
---
0x81: V33 = 0x0
0x84: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x85
[0x85:0x8c]
---
Predecessors: [0x7a]
Successors: [0x194]
---
0x85 JUMPDEST
0x86 PUSH2 0x8d
0x89 PUSH2 0x194
0x8c JUMP
---
0x85: JUMPDEST 
0x86: V34 = 0x8d
0x89: V35 = 0x194
0x8c: JUMP 0x194
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x8d]
Exit stack: [V11, 0x8d]

================================

Block 0x8d
[0x8d:0xa2]
---
Predecessors: [0x194]
Successors: []
---
0x8d JUMPDEST
0x8e PUSH1 0x40
0x90 MLOAD
0x91 DUP1
0x92 DUP3
0x93 DUP2
0x94 MSTORE
0x95 PUSH1 0x20
0x97 ADD
0x98 SWAP2
0x99 POP
0x9a POP
0x9b PUSH1 0x40
0x9d MLOAD
0x9e DUP1
0x9f SWAP2
0xa0 SUB
0xa1 SWAP1
0xa2 RETURN
---
0x8d: JUMPDEST 
0x8e: V36 = 0x40
0x90: V37 = M[0x40]
0x94: M[V37] = V106
0x95: V38 = 0x20
0x97: V39 = ADD 0x20 V37
0x9b: V40 = 0x40
0x9d: V41 = M[0x40]
0xa0: V42 = SUB V39 V41
0xa2: RETURN V41 V42
---
Entry stack: [V11, 0x8d, V106]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x8d]

================================

Block 0xa3
[0xa3:0xb8]
---
Predecessors: [0x41]
Successors: [0x19a]
---
0xa3 JUMPDEST
0xa4 PUSH2 0xb9
0xa7 PUSH1 0x4
0xa9 DUP1
0xaa DUP1
0xab CALLDATALOAD
0xac SWAP1
0xad PUSH1 0x20
0xaf ADD
0xb0 SWAP1
0xb1 SWAP2
0xb2 SWAP1
0xb3 POP
0xb4 POP
0xb5 PUSH2 0x19a
0xb8 JUMP
---
0xa3: JUMPDEST 
0xa4: V43 = 0xb9
0xa7: V44 = 0x4
0xab: V45 = CALLDATALOAD 0x4
0xad: V46 = 0x20
0xaf: V47 = ADD 0x20 0x4
0xb5: V48 = 0x19a
0xb8: JUMP 0x19a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xb9, V45]
Exit stack: [V11, 0xb9, V45]

================================

Block 0xb9
[0xb9:0xba]
---
Predecessors: [0x34e]
Successors: []
---
0xb9 JUMPDEST
0xba STOP
---
0xb9: JUMPDEST 
0xba: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xbb
[0xbb:0xc1]
---
Predecessors: [0x4c]
Successors: [0xc2, 0xc6]
---
0xbb JUMPDEST
0xbc CALLVALUE
0xbd ISZERO
0xbe PUSH2 0xc6
0xc1 JUMPI
---
0xbb: JUMPDEST 
0xbc: V49 = CALLVALUE
0xbd: V50 = ISZERO V49
0xbe: V51 = 0xc6
0xc1: JUMPI 0xc6 V50
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc2
[0xc2:0xc5]
---
Predecessors: [0xbb]
Successors: []
---
0xc2 PUSH1 0x0
0xc4 DUP1
0xc5 REVERT
---
0xc2: V52 = 0x0
0xc5: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xc6
[0xc6:0xdb]
---
Predecessors: [0xbb]
Successors: [0x352]
---
0xc6 JUMPDEST
0xc7 PUSH2 0xdc
0xca PUSH1 0x4
0xcc DUP1
0xcd DUP1
0xce CALLDATALOAD
0xcf SWAP1
0xd0 PUSH1 0x20
0xd2 ADD
0xd3 SWAP1
0xd4 SWAP2
0xd5 SWAP1
0xd6 POP
0xd7 POP
0xd8 PUSH2 0x352
0xdb JUMP
---
0xc6: JUMPDEST 
0xc7: V53 = 0xdc
0xca: V54 = 0x4
0xce: V55 = CALLDATALOAD 0x4
0xd0: V56 = 0x20
0xd2: V57 = ADD 0x20 0x4
0xd8: V58 = 0x352
0xdb: JUMP 0x352
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xdc, V55]
Exit stack: [V11, 0xdc, V55]

================================

Block 0xdc
[0xdc:0xdd]
---
Predecessors: [0x3ae]
Successors: []
---
0xdc JUMPDEST
0xdd STOP
---
0xdc: JUMPDEST 
0xdd: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xde
[0xde:0xe4]
---
Predecessors: [0x57]
Successors: [0xe5, 0xe9]
---
0xde JUMPDEST
0xdf CALLVALUE
0xe0 ISZERO
0xe1 PUSH2 0xe9
0xe4 JUMPI
---
0xde: JUMPDEST 
0xdf: V59 = CALLVALUE
0xe0: V60 = ISZERO V59
0xe1: V61 = 0xe9
0xe4: JUMPI 0xe9 V60
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe5
[0xe5:0xe8]
---
Predecessors: [0xde]
Successors: []
---
0xe5 PUSH1 0x0
0xe7 DUP1
0xe8 REVERT
---
0xe5: V62 = 0x0
0xe8: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0xe9
[0xe9:0xfe]
---
Predecessors: [0xde]
Successors: [0x3b8]
---
0xe9 JUMPDEST
0xea PUSH2 0xff
0xed PUSH1 0x4
0xef DUP1
0xf0 DUP1
0xf1 CALLDATALOAD
0xf2 SWAP1
0xf3 PUSH1 0x20
0xf5 ADD
0xf6 SWAP1
0xf7 SWAP2
0xf8 SWAP1
0xf9 POP
0xfa POP
0xfb PUSH2 0x3b8
0xfe JUMP
---
0xe9: JUMPDEST 
0xea: V63 = 0xff
0xed: V64 = 0x4
0xf1: V65 = CALLDATALOAD 0x4
0xf3: V66 = 0x20
0xf5: V67 = ADD 0x20 0x4
0xfb: V68 = 0x3b8
0xfe: JUMP 0x3b8
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0xff, V65]
Exit stack: [V11, 0xff, V65]

================================

Block 0xff
[0xff:0x100]
---
Predecessors: [0x476]
Successors: []
---
0xff JUMPDEST
0x100 STOP
---
0xff: JUMPDEST 
0x100: STOP 
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x101
[0x101:0x107]
---
Predecessors: [0x62]
Successors: [0x108, 0x10c]
---
0x101 JUMPDEST
0x102 CALLVALUE
0x103 ISZERO
0x104 PUSH2 0x10c
0x107 JUMPI
---
0x101: JUMPDEST 
0x102: V69 = CALLVALUE
0x103: V70 = ISZERO V69
0x104: V71 = 0x10c
0x107: JUMPI 0x10c V70
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x108
[0x108:0x10b]
---
Predecessors: [0x101]
Successors: []
---
0x108 PUSH1 0x0
0x10a DUP1
0x10b REVERT
---
0x108: V72 = 0x0
0x10b: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x10c
[0x10c:0x113]
---
Predecessors: [0x101]
Successors: [0x479]
---
0x10c JUMPDEST
0x10d PUSH2 0x114
0x110 PUSH2 0x479
0x113 JUMP
---
0x10c: JUMPDEST 
0x10d: V73 = 0x114
0x110: V74 = 0x479
0x113: JUMP 0x479
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x114]
Exit stack: [V11, 0x114]

================================

Block 0x114
[0x114:0x129]
---
Predecessors: [0x479]
Successors: []
---
0x114 JUMPDEST
0x115 PUSH1 0x40
0x117 MLOAD
0x118 DUP1
0x119 DUP3
0x11a DUP2
0x11b MSTORE
0x11c PUSH1 0x20
0x11e ADD
0x11f SWAP2
0x120 POP
0x121 POP
0x122 PUSH1 0x40
0x124 MLOAD
0x125 DUP1
0x126 SWAP2
0x127 SUB
0x128 SWAP1
0x129 RETURN
---
0x114: JUMPDEST 
0x115: V75 = 0x40
0x117: V76 = M[0x40]
0x11b: M[V76] = V291
0x11c: V77 = 0x20
0x11e: V78 = ADD 0x20 V76
0x122: V79 = 0x40
0x124: V80 = M[0x40]
0x127: V81 = SUB V78 V80
0x129: RETURN V80 V81
---
Entry stack: [V11, 0x114, V291]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x114]

================================

Block 0x12a
[0x12a:0x130]
---
Predecessors: [0x6d]
Successors: [0x131, 0x135]
---
0x12a JUMPDEST
0x12b CALLVALUE
0x12c ISZERO
0x12d PUSH2 0x135
0x130 JUMPI
---
0x12a: JUMPDEST 
0x12b: V82 = CALLVALUE
0x12c: V83 = ISZERO V82
0x12d: V84 = 0x135
0x130: JUMPI 0x135 V83
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x131
[0x131:0x134]
---
Predecessors: [0x12a]
Successors: []
---
0x131 PUSH1 0x0
0x133 DUP1
0x134 REVERT
---
0x131: V85 = 0x0
0x134: REVERT 0x0 0x0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: []
Exit stack: [V11]

================================

Block 0x135
[0x135:0x14a]
---
Predecessors: [0x12a]
Successors: [0x47f]
---
0x135 JUMPDEST
0x136 PUSH2 0x14b
0x139 PUSH1 0x4
0x13b DUP1
0x13c DUP1
0x13d CALLDATALOAD
0x13e SWAP1
0x13f PUSH1 0x20
0x141 ADD
0x142 SWAP1
0x143 SWAP2
0x144 SWAP1
0x145 POP
0x146 POP
0x147 PUSH2 0x47f
0x14a JUMP
---
0x135: JUMPDEST 
0x136: V86 = 0x14b
0x139: V87 = 0x4
0x13d: V88 = CALLDATALOAD 0x4
0x13f: V89 = 0x20
0x141: V90 = ADD 0x20 0x4
0x147: V91 = 0x47f
0x14a: JUMP 0x47f
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x14b, V88]
Exit stack: [V11, 0x14b, V88]

================================

Block 0x14b
[0x14b:0x193]
---
Predecessors: [0x48e]
Successors: []
---
0x14b JUMPDEST
0x14c PUSH1 0x40
0x14e MLOAD
0x14f DUP1
0x150 DUP4
0x151 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x166 AND
0x167 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x17c AND
0x17d DUP2
0x17e MSTORE
0x17f PUSH1 0x20
0x181 ADD
0x182 DUP3
0x183 DUP2
0x184 MSTORE
0x185 PUSH1 0x20
0x187 ADD
0x188 SWAP3
0x189 POP
0x18a POP
0x18b POP
0x18c PUSH1 0x40
0x18e MLOAD
0x18f DUP1
0x190 SWAP2
0x191 SUB
0x192 SWAP1
0x193 RETURN
---
0x14b: JUMPDEST 
0x14c: V92 = 0x40
0x14e: V93 = M[0x40]
0x151: V94 = 0xffffffffffffffffffffffffffffffffffffffff
0x166: V95 = AND 0xffffffffffffffffffffffffffffffffffffffff V314
0x167: V96 = 0xffffffffffffffffffffffffffffffffffffffff
0x17c: V97 = AND 0xffffffffffffffffffffffffffffffffffffffff V95
0x17e: M[V93] = V97
0x17f: V98 = 0x20
0x181: V99 = ADD 0x20 V93
0x184: M[V99] = V317
0x185: V100 = 0x20
0x187: V101 = ADD 0x20 V99
0x18c: V102 = 0x40
0x18e: V103 = M[0x40]
0x191: V104 = SUB V101 V103
0x193: RETURN V103 V104
---
Entry stack: [V11, 0x14b, V314, V317]
Stack pops: 2
Stack additions: []
Exit stack: [V11, 0x14b]

================================

Block 0x194
[0x194:0x199]
---
Predecessors: [0x85]
Successors: [0x8d]
---
0x194 JUMPDEST
0x195 PUSH1 0x2
0x197 SLOAD
0x198 DUP2
0x199 JUMP
---
0x194: JUMPDEST 
0x195: V105 = 0x2
0x197: V106 = S[0x2]
0x199: JUMP 0x8d
---
Entry stack: [V11, 0x8d]
Stack pops: 1
Stack additions: [S0, V106]
Exit stack: [V11, 0x8d, V106]

================================

Block 0x19a
[0x19a:0x1a8]
---
Predecessors: [0xa3]
Successors: [0x1a9, 0x1af]
---
0x19a JUMPDEST
0x19b PUSH1 0x0
0x19d PUSH1 0x2
0x19f SLOAD
0x1a0 CALLVALUE
0x1a1 LT
0x1a2 ISZERO
0x1a3 DUP1
0x1a4 ISZERO
0x1a5 PUSH2 0x1af
0x1a8 JUMPI
---
0x19a: JUMPDEST 
0x19b: V107 = 0x0
0x19d: V108 = 0x2
0x19f: V109 = S[0x2]
0x1a0: V110 = CALLVALUE
0x1a1: V111 = LT V110 V109
0x1a2: V112 = ISZERO V111
0x1a4: V113 = ISZERO V112
0x1a5: V114 = 0x1af
0x1a8: JUMPI 0x1af V113
---
Entry stack: [V11, 0xb9, V45]
Stack pops: 0
Stack additions: [0x0, V112]
Exit stack: [V11, 0xb9, V45, 0x0, V112]

================================

Block 0x1a9
[0x1a9:0x1ae]
---
Predecessors: [0x19a]
Successors: [0x1af]
---
0x1a9 POP
0x1aa PUSH1 0xa
0x1ac DUP3
0x1ad GT
0x1ae ISZERO
---
0x1aa: V115 = 0xa
0x1ad: V116 = GT V45 0xa
0x1ae: V117 = ISZERO V116
---
Entry stack: [V11, 0xb9, V45, 0x0, V112]
Stack pops: 3
Stack additions: [S2, S1, V117]
Exit stack: [V11, 0xb9, V45, 0x0, V117]

================================

Block 0x1af
[0x1af:0x1b4]
---
Predecessors: [0x19a, 0x1a9]
Successors: [0x1b5, 0x34e]
---
0x1af JUMPDEST
0x1b0 ISZERO
0x1b1 PUSH2 0x34e
0x1b4 JUMPI
---
0x1af: JUMPDEST 
0x1b0: V118 = ISZERO S0
0x1b1: V119 = 0x34e
0x1b4: JUMPI 0x34e V118
---
Entry stack: [V11, 0xb9, V45, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0xb9, V45, 0x0]

================================

Block 0x1b5
[0x1b5:0x213]
---
Predecessors: [0x1af]
Successors: [0x4d2]
---
0x1b5 CALLER
0x1b6 DUP2
0x1b7 PUSH1 0x0
0x1b9 ADD
0x1ba PUSH1 0x0
0x1bc PUSH2 0x100
0x1bf EXP
0x1c0 DUP2
0x1c1 SLOAD
0x1c2 DUP2
0x1c3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1d8 MUL
0x1d9 NOT
0x1da AND
0x1db SWAP1
0x1dc DUP4
0x1dd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x1f2 AND
0x1f3 MUL
0x1f4 OR
0x1f5 SWAP1
0x1f6 SSTORE
0x1f7 POP
0x1f8 DUP2
0x1f9 DUP2
0x1fa PUSH1 0x1
0x1fc ADD
0x1fd DUP2
0x1fe SWAP1
0x1ff SSTORE
0x200 POP
0x201 PUSH1 0x4
0x203 DUP1
0x204 SLOAD
0x205 DUP1
0x206 PUSH1 0x1
0x208 ADD
0x209 DUP3
0x20a DUP2
0x20b PUSH2 0x214
0x20e SWAP2
0x20f SWAP1
0x210 PUSH2 0x4d2
0x213 JUMP
---
0x1b5: V120 = CALLER
0x1b7: V121 = 0x0
0x1b9: V122 = ADD 0x0 0x0
0x1ba: V123 = 0x0
0x1bc: V124 = 0x100
0x1bf: V125 = EXP 0x100 0x0
0x1c1: V126 = S[0x0]
0x1c3: V127 = 0xffffffffffffffffffffffffffffffffffffffff
0x1d8: V128 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x1d9: V129 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x1da: V130 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V126
0x1dd: V131 = 0xffffffffffffffffffffffffffffffffffffffff
0x1f2: V132 = AND 0xffffffffffffffffffffffffffffffffffffffff V120
0x1f3: V133 = MUL V132 0x1
0x1f4: V134 = OR V133 V130
0x1f6: S[0x0] = V134
0x1fa: V135 = 0x1
0x1fc: V136 = ADD 0x1 0x0
0x1ff: S[0x1] = V45
0x201: V137 = 0x4
0x204: V138 = S[0x4]
0x206: V139 = 0x1
0x208: V140 = ADD 0x1 V138
0x20b: V141 = 0x214
0x210: V142 = 0x4d2
0x213: JUMP 0x4d2
---
Entry stack: [V11, 0xb9, V45, 0x0]
Stack pops: 2
Stack additions: [S1, S0, 0x4, V138, V140, 0x214, 0x4, V140]
Exit stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140]

================================

Block 0x214
[0x214:0x2a8]
---
Predecessors: [0x4ff]
Successors: [0x2a9, 0x300]
---
0x214 JUMPDEST
0x215 SWAP2
0x216 PUSH1 0x0
0x218 MSTORE
0x219 PUSH1 0x20
0x21b PUSH1 0x0
0x21d SHA3
0x21e SWAP1
0x21f PUSH1 0x2
0x221 MUL
0x222 ADD
0x223 PUSH1 0x0
0x225 DUP4
0x226 SWAP1
0x227 SWAP2
0x228 SWAP1
0x229 SWAP2
0x22a POP
0x22b PUSH1 0x0
0x22d DUP3
0x22e ADD
0x22f PUSH1 0x0
0x231 SWAP1
0x232 SLOAD
0x233 SWAP1
0x234 PUSH2 0x100
0x237 EXP
0x238 SWAP1
0x239 DIV
0x23a PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x24f AND
0x250 DUP2
0x251 PUSH1 0x0
0x253 ADD
0x254 PUSH1 0x0
0x256 PUSH2 0x100
0x259 EXP
0x25a DUP2
0x25b SLOAD
0x25c DUP2
0x25d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x272 MUL
0x273 NOT
0x274 AND
0x275 SWAP1
0x276 DUP4
0x277 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x28c AND
0x28d MUL
0x28e OR
0x28f SWAP1
0x290 SSTORE
0x291 POP
0x292 PUSH1 0x1
0x294 DUP3
0x295 ADD
0x296 SLOAD
0x297 DUP2
0x298 PUSH1 0x1
0x29a ADD
0x29b SSTORE
0x29c POP
0x29d POP
0x29e POP
0x29f PUSH1 0x0
0x2a1 SLOAD
0x2a2 DUP3
0x2a3 EQ
0x2a4 ISZERO
0x2a5 PUSH2 0x300
0x2a8 JUMPI
---
0x214: JUMPDEST 
0x216: V143 = 0x0
0x218: M[0x0] = 0x4
0x219: V144 = 0x20
0x21b: V145 = 0x0
0x21d: V146 = SHA3 0x0 0x20
0x21f: V147 = 0x2
0x221: V148 = MUL 0x2 V138
0x222: V149 = ADD V148 V146
0x223: V150 = 0x0
0x22b: V151 = 0x0
0x22e: V152 = ADD 0x0 0x0
0x22f: V153 = 0x0
0x232: V154 = S[0x0]
0x234: V155 = 0x100
0x237: V156 = EXP 0x100 0x0
0x239: V157 = DIV V154 0x1
0x23a: V158 = 0xffffffffffffffffffffffffffffffffffffffff
0x24f: V159 = AND 0xffffffffffffffffffffffffffffffffffffffff V157
0x251: V160 = 0x0
0x253: V161 = ADD 0x0 V149
0x254: V162 = 0x0
0x256: V163 = 0x100
0x259: V164 = EXP 0x100 0x0
0x25b: V165 = S[V161]
0x25d: V166 = 0xffffffffffffffffffffffffffffffffffffffff
0x272: V167 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x273: V168 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x274: V169 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V165
0x277: V170 = 0xffffffffffffffffffffffffffffffffffffffff
0x28c: V171 = AND 0xffffffffffffffffffffffffffffffffffffffff V159
0x28d: V172 = MUL V171 0x1
0x28e: V173 = OR V172 V169
0x290: S[V161] = V173
0x292: V174 = 0x1
0x295: V175 = ADD 0x0 0x1
0x296: V176 = S[0x1]
0x298: V177 = 0x1
0x29a: V178 = ADD 0x1 V149
0x29b: S[V178] = V176
0x29f: V179 = 0x0
0x2a1: V180 = S[0x0]
0x2a3: V181 = EQ V45 V180
0x2a4: V182 = ISZERO V181
0x2a5: V183 = 0x300
0x2a8: JUMPI 0x300 V182
---
Entry stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140]
Stack pops: 5
Stack additions: [S4, S3]
Exit stack: [V11, 0xb9, V45, 0x0]

================================

Block 0x2a9
[0x2a9:0x2fa]
---
Predecessors: [0x214]
Successors: [0x2fb, 0x2ff]
---
0x2a9 CALLER
0x2aa PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2bf AND
0x2c0 PUSH2 0x8fc
0x2c3 ADDRESS
0x2c4 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2d9 AND
0x2da BALANCE
0x2db SWAP1
0x2dc DUP2
0x2dd ISZERO
0x2de MUL
0x2df SWAP1
0x2e0 PUSH1 0x40
0x2e2 MLOAD
0x2e3 PUSH1 0x0
0x2e5 PUSH1 0x40
0x2e7 MLOAD
0x2e8 DUP1
0x2e9 DUP4
0x2ea SUB
0x2eb DUP2
0x2ec DUP6
0x2ed DUP9
0x2ee DUP9
0x2ef CALL
0x2f0 SWAP4
0x2f1 POP
0x2f2 POP
0x2f3 POP
0x2f4 POP
0x2f5 ISZERO
0x2f6 ISZERO
0x2f7 PUSH2 0x2ff
0x2fa JUMPI
---
0x2a9: V184 = CALLER
0x2aa: V185 = 0xffffffffffffffffffffffffffffffffffffffff
0x2bf: V186 = AND 0xffffffffffffffffffffffffffffffffffffffff V184
0x2c0: V187 = 0x8fc
0x2c3: V188 = ADDRESS
0x2c4: V189 = 0xffffffffffffffffffffffffffffffffffffffff
0x2d9: V190 = AND 0xffffffffffffffffffffffffffffffffffffffff V188
0x2da: V191 = BALANCE V190
0x2dd: V192 = ISZERO V191
0x2de: V193 = MUL V192 0x8fc
0x2e0: V194 = 0x40
0x2e2: V195 = M[0x40]
0x2e3: V196 = 0x0
0x2e5: V197 = 0x40
0x2e7: V198 = M[0x40]
0x2ea: V199 = SUB V195 V198
0x2ef: V200 = CALL V193 V186 V191 V198 V199 V198 0x0
0x2f5: V201 = ISZERO V200
0x2f6: V202 = ISZERO V201
0x2f7: V203 = 0x2ff
0x2fa: JUMPI 0x2ff V202
---
Entry stack: [V11, 0xb9, V45, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9, V45, 0x0]

================================

Block 0x2fb
[0x2fb:0x2fe]
---
Predecessors: [0x2a9]
Successors: []
---
0x2fb PUSH1 0x0
0x2fd DUP1
0x2fe REVERT
---
0x2fb: V204 = 0x0
0x2fe: REVERT 0x0 0x0
---
Entry stack: [V11, 0xb9, V45, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9, V45, 0x0]

================================

Block 0x2ff
[0x2ff:0x2ff]
---
Predecessors: [0x2a9]
Successors: [0x300]
---
0x2ff JUMPDEST
---
0x2ff: JUMPDEST 
---
Entry stack: [V11, 0xb9, V45, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9, V45, 0x0]

================================

Block 0x300
[0x300:0x325]
---
Predecessors: [0x214, 0x2ff]
Successors: [0x326, 0x327]
---
0x300 JUMPDEST
0x301 PUSH1 0x1
0x303 PUSH1 0xa
0x305 TIMESTAMP
0x306 PUSH1 0x40
0x308 MLOAD
0x309 DUP1
0x30a DUP3
0x30b DUP2
0x30c MSTORE
0x30d PUSH1 0x20
0x30f ADD
0x310 SWAP2
0x311 POP
0x312 POP
0x313 PUSH1 0x40
0x315 MLOAD
0x316 DUP1
0x317 SWAP2
0x318 SUB
0x319 SWAP1
0x31a SHA3
0x31b PUSH1 0x1
0x31d SWAP1
0x31e DIV
0x31f DUP2
0x320 ISZERO
0x321 ISZERO
0x322 PUSH2 0x327
0x325 JUMPI
---
0x300: JUMPDEST 
0x301: V205 = 0x1
0x303: V206 = 0xa
0x305: V207 = TIMESTAMP
0x306: V208 = 0x40
0x308: V209 = M[0x40]
0x30c: M[V209] = V207
0x30d: V210 = 0x20
0x30f: V211 = ADD 0x20 V209
0x313: V212 = 0x40
0x315: V213 = M[0x40]
0x318: V214 = SUB V211 V213
0x31a: V215 = SHA3 V213 V214
0x31b: V216 = 0x1
0x31e: V217 = DIV V215 0x1
0x320: V218 = ISZERO 0xa
0x321: V219 = ISZERO 0x0
0x322: V220 = 0x327
0x325: JUMPI 0x327 0x1
---
Entry stack: [V11, 0xb9, V45, 0x0]
Stack pops: 0
Stack additions: [0x1, 0xa, V217]
Exit stack: [V11, 0xb9, V45, 0x0, 0x1, 0xa, V217]

================================

Block 0x326
[0x326:0x326]
---
Predecessors: [0x300]
Successors: []
---
0x326 INVALID
---
0x326: INVALID 
---
Entry stack: [V11, 0xb9, V45, 0x0, 0x1, 0xa, V217]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9, V45, 0x0, 0x1, 0xa, V217]

================================

Block 0x327
[0x327:0x34d]
---
Predecessors: [0x300]
Successors: [0x34e]
---
0x327 JUMPDEST
0x328 MOD
0x329 ADD
0x32a PUSH1 0x0
0x32c DUP2
0x32d SWAP1
0x32e SSTORE
0x32f POP
0x330 ADDRESS
0x331 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x346 AND
0x347 BALANCE
0x348 PUSH1 0x1
0x34a DUP2
0x34b SWAP1
0x34c SSTORE
0x34d POP
---
0x327: JUMPDEST 
0x328: V221 = MOD V217 0xa
0x329: V222 = ADD V221 0x1
0x32a: V223 = 0x0
0x32e: S[0x0] = V222
0x330: V224 = ADDRESS
0x331: V225 = 0xffffffffffffffffffffffffffffffffffffffff
0x346: V226 = AND 0xffffffffffffffffffffffffffffffffffffffff V224
0x347: V227 = BALANCE V226
0x348: V228 = 0x1
0x34c: S[0x1] = V227
---
Entry stack: [V11, 0xb9, V45, 0x0, 0x1, 0xa, V217]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0xb9, V45, 0x0]

================================

Block 0x34e
[0x34e:0x351]
---
Predecessors: [0x1af, 0x327]
Successors: [0xb9]
---
0x34e JUMPDEST
0x34f POP
0x350 POP
0x351 JUMP
---
0x34e: JUMPDEST 
0x351: JUMP 0xb9
---
Entry stack: [V11, 0xb9, V45, 0x0]
Stack pops: 3
Stack additions: []
Exit stack: [V11]

================================

Block 0x352
[0x352:0x3a9]
---
Predecessors: [0xc6]
Successors: [0x3aa, 0x3ae]
---
0x352 JUMPDEST
0x353 PUSH1 0x3
0x355 PUSH1 0x0
0x357 SWAP1
0x358 SLOAD
0x359 SWAP1
0x35a PUSH2 0x100
0x35d EXP
0x35e SWAP1
0x35f DIV
0x360 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x375 AND
0x376 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x38b AND
0x38c CALLER
0x38d PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3a2 AND
0x3a3 EQ
0x3a4 ISZERO
0x3a5 ISZERO
0x3a6 PUSH2 0x3ae
0x3a9 JUMPI
---
0x352: JUMPDEST 
0x353: V229 = 0x3
0x355: V230 = 0x0
0x358: V231 = S[0x3]
0x35a: V232 = 0x100
0x35d: V233 = EXP 0x100 0x0
0x35f: V234 = DIV V231 0x1
0x360: V235 = 0xffffffffffffffffffffffffffffffffffffffff
0x375: V236 = AND 0xffffffffffffffffffffffffffffffffffffffff V234
0x376: V237 = 0xffffffffffffffffffffffffffffffffffffffff
0x38b: V238 = AND 0xffffffffffffffffffffffffffffffffffffffff V236
0x38c: V239 = CALLER
0x38d: V240 = 0xffffffffffffffffffffffffffffffffffffffff
0x3a2: V241 = AND 0xffffffffffffffffffffffffffffffffffffffff V239
0x3a3: V242 = EQ V241 V238
0x3a4: V243 = ISZERO V242
0x3a5: V244 = ISZERO V243
0x3a6: V245 = 0x3ae
0x3a9: JUMPI 0x3ae V244
---
Entry stack: [V11, 0xdc, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdc, V55]

================================

Block 0x3aa
[0x3aa:0x3ad]
---
Predecessors: [0x352]
Successors: []
---
0x3aa PUSH1 0x0
0x3ac DUP1
0x3ad REVERT
---
0x3aa: V246 = 0x0
0x3ad: REVERT 0x0 0x0
---
Entry stack: [V11, 0xdc, V55]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xdc, V55]

================================

Block 0x3ae
[0x3ae:0x3b7]
---
Predecessors: [0x352]
Successors: [0xdc]
---
0x3ae JUMPDEST
0x3af DUP1
0x3b0 PUSH1 0x2
0x3b2 DUP2
0x3b3 SWAP1
0x3b4 SSTORE
0x3b5 POP
0x3b6 POP
0x3b7 JUMP
---
0x3ae: JUMPDEST 
0x3b0: V247 = 0x2
0x3b4: S[0x2] = V55
0x3b7: JUMP 0xdc
---
Entry stack: [V11, 0xdc, V55]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x3b8
[0x3b8:0x40f]
---
Predecessors: [0xe9]
Successors: [0x410, 0x414]
---
0x3b8 JUMPDEST
0x3b9 PUSH1 0x3
0x3bb PUSH1 0x0
0x3bd SWAP1
0x3be SLOAD
0x3bf SWAP1
0x3c0 PUSH2 0x100
0x3c3 EXP
0x3c4 SWAP1
0x3c5 DIV
0x3c6 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3db AND
0x3dc PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3f1 AND
0x3f2 CALLER
0x3f3 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x408 AND
0x409 EQ
0x40a ISZERO
0x40b ISZERO
0x40c PUSH2 0x414
0x40f JUMPI
---
0x3b8: JUMPDEST 
0x3b9: V248 = 0x3
0x3bb: V249 = 0x0
0x3be: V250 = S[0x3]
0x3c0: V251 = 0x100
0x3c3: V252 = EXP 0x100 0x0
0x3c5: V253 = DIV V250 0x1
0x3c6: V254 = 0xffffffffffffffffffffffffffffffffffffffff
0x3db: V255 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x3dc: V256 = 0xffffffffffffffffffffffffffffffffffffffff
0x3f1: V257 = AND 0xffffffffffffffffffffffffffffffffffffffff V255
0x3f2: V258 = CALLER
0x3f3: V259 = 0xffffffffffffffffffffffffffffffffffffffff
0x408: V260 = AND 0xffffffffffffffffffffffffffffffffffffffff V258
0x409: V261 = EQ V260 V257
0x40a: V262 = ISZERO V261
0x40b: V263 = ISZERO V262
0x40c: V264 = 0x414
0x40f: JUMPI 0x414 V263
---
Entry stack: [V11, 0xff, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xff, V65]

================================

Block 0x410
[0x410:0x413]
---
Predecessors: [0x3b8]
Successors: []
---
0x410 PUSH1 0x0
0x412 DUP1
0x413 REVERT
---
0x410: V265 = 0x0
0x413: REVERT 0x0 0x0
---
Entry stack: [V11, 0xff, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xff, V65]

================================

Block 0x414
[0x414:0x471]
---
Predecessors: [0x3b8]
Successors: [0x472, 0x476]
---
0x414 JUMPDEST
0x415 PUSH1 0x3
0x417 PUSH1 0x0
0x419 SWAP1
0x41a SLOAD
0x41b SWAP1
0x41c PUSH2 0x100
0x41f EXP
0x420 SWAP1
0x421 DIV
0x422 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x437 AND
0x438 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x44d AND
0x44e PUSH2 0x8fc
0x451 DUP3
0x452 SWAP1
0x453 DUP2
0x454 ISZERO
0x455 MUL
0x456 SWAP1
0x457 PUSH1 0x40
0x459 MLOAD
0x45a PUSH1 0x0
0x45c PUSH1 0x40
0x45e MLOAD
0x45f DUP1
0x460 DUP4
0x461 SUB
0x462 DUP2
0x463 DUP6
0x464 DUP9
0x465 DUP9
0x466 CALL
0x467 SWAP4
0x468 POP
0x469 POP
0x46a POP
0x46b POP
0x46c ISZERO
0x46d ISZERO
0x46e PUSH2 0x476
0x471 JUMPI
---
0x414: JUMPDEST 
0x415: V266 = 0x3
0x417: V267 = 0x0
0x41a: V268 = S[0x3]
0x41c: V269 = 0x100
0x41f: V270 = EXP 0x100 0x0
0x421: V271 = DIV V268 0x1
0x422: V272 = 0xffffffffffffffffffffffffffffffffffffffff
0x437: V273 = AND 0xffffffffffffffffffffffffffffffffffffffff V271
0x438: V274 = 0xffffffffffffffffffffffffffffffffffffffff
0x44d: V275 = AND 0xffffffffffffffffffffffffffffffffffffffff V273
0x44e: V276 = 0x8fc
0x454: V277 = ISZERO V65
0x455: V278 = MUL V277 0x8fc
0x457: V279 = 0x40
0x459: V280 = M[0x40]
0x45a: V281 = 0x0
0x45c: V282 = 0x40
0x45e: V283 = M[0x40]
0x461: V284 = SUB V280 V283
0x466: V285 = CALL V278 V275 V65 V283 V284 V283 0x0
0x46c: V286 = ISZERO V285
0x46d: V287 = ISZERO V286
0x46e: V288 = 0x476
0x471: JUMPI 0x476 V287
---
Entry stack: [V11, 0xff, V65]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0xff, V65]

================================

Block 0x472
[0x472:0x475]
---
Predecessors: [0x414]
Successors: []
---
0x472 PUSH1 0x0
0x474 DUP1
0x475 REVERT
---
0x472: V289 = 0x0
0x475: REVERT 0x0 0x0
---
Entry stack: [V11, 0xff, V65]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xff, V65]

================================

Block 0x476
[0x476:0x478]
---
Predecessors: [0x414]
Successors: [0xff]
---
0x476 JUMPDEST
0x477 POP
0x478 JUMP
---
0x476: JUMPDEST 
0x478: JUMP 0xff
---
Entry stack: [V11, 0xff, V65]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x479
[0x479:0x47e]
---
Predecessors: [0x10c]
Successors: [0x114]
---
0x479 JUMPDEST
0x47a PUSH1 0x1
0x47c SLOAD
0x47d DUP2
0x47e JUMP
---
0x479: JUMPDEST 
0x47a: V290 = 0x1
0x47c: V291 = S[0x1]
0x47e: JUMP 0x114
---
Entry stack: [V11, 0x114]
Stack pops: 1
Stack additions: [S0, V291]
Exit stack: [V11, 0x114, V291]

================================

Block 0x47f
[0x47f:0x48c]
---
Predecessors: [0x135]
Successors: [0x48d, 0x48e]
---
0x47f JUMPDEST
0x480 PUSH1 0x4
0x482 DUP2
0x483 DUP2
0x484 SLOAD
0x485 DUP2
0x486 LT
0x487 ISZERO
0x488 ISZERO
0x489 PUSH2 0x48e
0x48c JUMPI
---
0x47f: JUMPDEST 
0x480: V292 = 0x4
0x484: V293 = S[0x4]
0x486: V294 = LT V88 V293
0x487: V295 = ISZERO V294
0x488: V296 = ISZERO V295
0x489: V297 = 0x48e
0x48c: JUMPI 0x48e V296
---
Entry stack: [V11, 0x14b, V88]
Stack pops: 1
Stack additions: [S0, 0x4, S0]
Exit stack: [V11, 0x14b, V88, 0x4, V88]

================================

Block 0x48d
[0x48d:0x48d]
---
Predecessors: [0x47f]
Successors: []
---
0x48d INVALID
---
0x48d: INVALID 
---
Entry stack: [V11, 0x14b, V88, 0x4, V88]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x14b, V88, 0x4, V88]

================================

Block 0x48e
[0x48e:0x4d1]
---
Predecessors: [0x47f]
Successors: [0x14b]
---
0x48e JUMPDEST
0x48f SWAP1
0x490 PUSH1 0x0
0x492 MSTORE
0x493 PUSH1 0x20
0x495 PUSH1 0x0
0x497 SHA3
0x498 SWAP1
0x499 PUSH1 0x2
0x49b MUL
0x49c ADD
0x49d PUSH1 0x0
0x49f SWAP2
0x4a0 POP
0x4a1 SWAP1
0x4a2 POP
0x4a3 DUP1
0x4a4 PUSH1 0x0
0x4a6 ADD
0x4a7 PUSH1 0x0
0x4a9 SWAP1
0x4aa SLOAD
0x4ab SWAP1
0x4ac PUSH2 0x100
0x4af EXP
0x4b0 SWAP1
0x4b1 DIV
0x4b2 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x4c7 AND
0x4c8 SWAP1
0x4c9 DUP1
0x4ca PUSH1 0x1
0x4cc ADD
0x4cd SLOAD
0x4ce SWAP1
0x4cf POP
0x4d0 DUP3
0x4d1 JUMP
---
0x48e: JUMPDEST 
0x490: V298 = 0x0
0x492: M[0x0] = 0x4
0x493: V299 = 0x20
0x495: V300 = 0x0
0x497: V301 = SHA3 0x0 0x20
0x499: V302 = 0x2
0x49b: V303 = MUL 0x2 V88
0x49c: V304 = ADD V303 V301
0x49d: V305 = 0x0
0x4a4: V306 = 0x0
0x4a6: V307 = ADD 0x0 V304
0x4a7: V308 = 0x0
0x4aa: V309 = S[V307]
0x4ac: V310 = 0x100
0x4af: V311 = EXP 0x100 0x0
0x4b1: V312 = DIV V309 0x1
0x4b2: V313 = 0xffffffffffffffffffffffffffffffffffffffff
0x4c7: V314 = AND 0xffffffffffffffffffffffffffffffffffffffff V312
0x4ca: V315 = 0x1
0x4cc: V316 = ADD 0x1 V304
0x4cd: V317 = S[V316]
0x4d1: JUMP 0x14b
---
Entry stack: [V11, 0x14b, V88, 0x4, V88]
Stack pops: 4
Stack additions: [S3, V314, V317]
Exit stack: [V11, 0x14b, V314, V317]

================================

Block 0x4d2
[0x4d2:0x4df]
---
Predecessors: [0x1b5]
Successors: [0x4e0, 0x4ff]
---
0x4d2 JUMPDEST
0x4d3 DUP2
0x4d4 SLOAD
0x4d5 DUP2
0x4d6 DUP4
0x4d7 SSTORE
0x4d8 DUP2
0x4d9 DUP2
0x4da ISZERO
0x4db GT
0x4dc PUSH2 0x4ff
0x4df JUMPI
---
0x4d2: JUMPDEST 
0x4d4: V318 = S[0x4]
0x4d7: S[0x4] = V140
0x4da: V319 = ISZERO V318
0x4db: V320 = GT V319 V140
0x4dc: V321 = 0x4ff
0x4df: JUMPI 0x4ff V320
---
Entry stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140]
Stack pops: 2
Stack additions: [S1, S0, V318]
Exit stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140, V318]

================================

Block 0x4e0
[0x4e0:0x4fd]
---
Predecessors: [0x4d2]
Successors: [0x504]
---
0x4e0 PUSH1 0x2
0x4e2 MUL
0x4e3 DUP2
0x4e4 PUSH1 0x2
0x4e6 MUL
0x4e7 DUP4
0x4e8 PUSH1 0x0
0x4ea MSTORE
0x4eb PUSH1 0x20
0x4ed PUSH1 0x0
0x4ef SHA3
0x4f0 SWAP2
0x4f1 DUP3
0x4f2 ADD
0x4f3 SWAP2
0x4f4 ADD
0x4f5 PUSH2 0x4fe
0x4f8 SWAP2
0x4f9 SWAP1
0x4fa PUSH2 0x504
0x4fd JUMP
---
0x4e0: V322 = 0x2
0x4e2: V323 = MUL 0x2 V318
0x4e4: V324 = 0x2
0x4e6: V325 = MUL 0x2 V140
0x4e8: V326 = 0x0
0x4ea: M[0x0] = 0x4
0x4eb: V327 = 0x20
0x4ed: V328 = 0x0
0x4ef: V329 = SHA3 0x0 0x20
0x4f2: V330 = ADD V329 V323
0x4f4: V331 = ADD V329 V325
0x4f5: V332 = 0x4fe
0x4fa: V333 = 0x504
0x4fd: JUMP 0x504
---
Entry stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140, V318]
Stack pops: 3
Stack additions: [S2, S1, 0x4fe, V330, V331]
Exit stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140, 0x4fe, V330, V331]

================================

Block 0x4fe
[0x4fe:0x4fe]
---
Predecessors: [0x54f]
Successors: [0x4ff]
---
0x4fe JUMPDEST
---
0x4fe: JUMPDEST 
---
Entry stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140, V330]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140, V330]

================================

Block 0x4ff
[0x4ff:0x503]
---
Predecessors: [0x4d2, 0x4fe]
Successors: [0x214]
---
0x4ff JUMPDEST
0x500 POP
0x501 POP
0x502 POP
0x503 JUMP
---
0x4ff: JUMPDEST 
0x503: JUMP 0x214
---
Entry stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140]

================================

Block 0x504
[0x504:0x509]
---
Predecessors: [0x4e0]
Successors: [0x50a]
---
0x504 JUMPDEST
0x505 PUSH2 0x54f
0x508 SWAP2
0x509 SWAP1
---
0x504: JUMPDEST 
0x505: V334 = 0x54f
---
Entry stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140, 0x4fe, V330, V331]
Stack pops: 2
Stack additions: [0x54f, S1, S0]
Exit stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140, 0x4fe, 0x54f, V330, V331]

================================

Block 0x50a
[0x50a:0x512]
---
Predecessors: [0x504, 0x513]
Successors: [0x513, 0x54b]
---
0x50a JUMPDEST
0x50b DUP1
0x50c DUP3
0x50d GT
0x50e ISZERO
0x50f PUSH2 0x54b
0x512 JUMPI
---
0x50a: JUMPDEST 
0x50d: V335 = GT V330 S0
0x50e: V336 = ISZERO V335
0x50f: V337 = 0x54b
0x512: JUMPI 0x54b V336
---
Entry stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140, 0x4fe, 0x54f, V330, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140, 0x4fe, 0x54f, V330, S0]

================================

Block 0x513
[0x513:0x54a]
---
Predecessors: [0x50a]
Successors: [0x50a]
---
0x513 PUSH1 0x0
0x515 DUP1
0x516 DUP3
0x517 ADD
0x518 PUSH1 0x0
0x51a PUSH2 0x100
0x51d EXP
0x51e DUP2
0x51f SLOAD
0x520 SWAP1
0x521 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x536 MUL
0x537 NOT
0x538 AND
0x539 SWAP1
0x53a SSTORE
0x53b PUSH1 0x1
0x53d DUP3
0x53e ADD
0x53f PUSH1 0x0
0x541 SWAP1
0x542 SSTORE
0x543 POP
0x544 PUSH1 0x2
0x546 ADD
0x547 PUSH2 0x50a
0x54a JUMP
---
0x513: V338 = 0x0
0x517: V339 = ADD S0 0x0
0x518: V340 = 0x0
0x51a: V341 = 0x100
0x51d: V342 = EXP 0x100 0x0
0x51f: V343 = S[V339]
0x521: V344 = 0xffffffffffffffffffffffffffffffffffffffff
0x536: V345 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x537: V346 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x538: V347 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V343
0x53a: S[V339] = V347
0x53b: V348 = 0x1
0x53e: V349 = ADD S0 0x1
0x53f: V350 = 0x0
0x542: S[V349] = 0x0
0x544: V351 = 0x2
0x546: V352 = ADD 0x2 S0
0x547: V353 = 0x50a
0x54a: JUMP 0x50a
---
Entry stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140, 0x4fe, 0x54f, V330, S0]
Stack pops: 1
Stack additions: [V352]
Exit stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140, 0x4fe, 0x54f, V330, V352]

================================

Block 0x54b
[0x54b:0x54e]
---
Predecessors: [0x50a]
Successors: [0x54f]
---
0x54b JUMPDEST
0x54c POP
0x54d SWAP1
0x54e JUMP
---
0x54b: JUMPDEST 
0x54e: JUMP 0x54f
---
Entry stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140, 0x4fe, 0x54f, V330, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140, 0x4fe, V330]

================================

Block 0x54f
[0x54f:0x551]
---
Predecessors: [0x54b]
Successors: [0x4fe]
---
0x54f JUMPDEST
0x550 SWAP1
0x551 JUMP
---
0x54f: JUMPDEST 
0x551: JUMP 0x4fe
---
Entry stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140, 0x4fe, V330]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0xb9, V45, 0x0, 0x4, V138, V140, 0x214, 0x4, V140, V330]

================================

Block 0x552
[0x552:0x57d]
---
Predecessors: []
Successors: []
---
0x552 STOP
0x553 LOG1
0x554 PUSH6 0x627a7a723058
0x55b SHA3
0x55c LOG4
0x55d DUP14
0x55e MISSING 0xf6
0x55f LOG4
0x560 DUP7
0x561 SWAP13
0x562 PUSH5 0xa740bb8568
0x568 SWAP15
0x569 SWAP9
0x56a LT
0x56b MISSING 0x21
0x56c SWAP4
0x56d MISSING 0xdb
0x56e MISSING 0xdc
0x56f DUP8
0x570 MISSING 0xc6
0x571 SWAP9
0x572 MISSING 0xf6
0x573 MISSING 0xa7
0x574 DELEGATECALL
0x575 RETURNDATACOPY
0x576 INVALID
0x577 MISSING 0xa7
0x578 ORIGIN
0x579 MISSING 0x4e
0x57a SWAP14
0x57b MISSING 0xcd
0x57c STOP
0x57d MISSING 0x29
---
0x552: STOP 
0x553: LOG S0 S1 S2
0x554: V354 = 0x627a7a723058
0x55b: V355 = SHA3 0x627a7a723058 S3
0x55c: LOG V355 S4 S5 S6 S7 S8
0x55e: MISSING 0xf6
0x55f: LOG S0 S1 S2 S3 S4 S5
0x562: V356 = 0xa740bb8568
0x56a: V357 = LT S13 S18
0x56b: MISSING 0x21
0x56d: MISSING 0xdb
0x56e: MISSING 0xdc
0x570: MISSING 0xc6
0x572: MISSING 0xf6
0x573: MISSING 0xa7
0x574: V358 = DELEGATECALL S0 S1 S2 S3 S4 S5
0x575: RETURNDATACOPY V358 S6 S7
0x576: INVALID 
0x577: MISSING 0xa7
0x578: V359 = ORIGIN
0x579: MISSING 0x4e
0x57b: MISSING 0xcd
0x57c: STOP 
0x57d: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [S22, S9, S10, S11, S12, S13, S14, S15, S16, S17, S18, S19, S20, S21, S22, V357, S6, S7, S8, S9, S10, S11, S12, S19, S14, S15, S16, S17, S12, 0xa740bb8568, S4, S1, S2, S3, S0, S7, S0, S1, S2, S3, S4, S5, S6, S7, S9, S1, S2, S3, S4, S5, S6, S7, S8, S0, V359, S14, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10, S11, S12, S13, S0]
Exit stack: []

================================

Function 0:
Public function signature: 0x9619367d
Entry block: 0x7a
Exit block: 0x8d
Body: 0x7a, 0x81, 0x85, 0x8d, 0x194

Function 1:
Public function signature: 0xe5ed1d59
Entry block: 0xa3
Exit block: 0x326
Body: 0xa3, 0xb9, 0x19a, 0x1a9, 0x1af, 0x1b5, 0x214, 0x2a9, 0x2fb, 0x2ff, 0x300, 0x326, 0x327, 0x34e, 0x4d2, 0x4e0, 0x4fe, 0x4ff, 0x504, 0x50a, 0x513, 0x54b, 0x54f

Function 2:
Public function signature: 0xe8147a25
Entry block: 0xbb
Exit block: 0xdc
Body: 0xbb, 0xc2, 0xc6, 0xdc, 0x352, 0x3aa, 0x3ae

Function 3:
Public function signature: 0xea92dd1d
Entry block: 0xde
Exit block: 0xff
Body: 0xde, 0xe5, 0xe9, 0xff, 0x3b8, 0x410, 0x414, 0x472, 0x476

Function 4:
Public function signature: 0xf3ac3df5
Entry block: 0x101
Exit block: 0x114
Body: 0x101, 0x108, 0x10c, 0x114, 0x479

Function 5:
Public function signature: 0xf82c50f1
Entry block: 0x12a
Exit block: 0x14b
Body: 0x12a, 0x131, 0x135, 0x14b, 0x47f, 0x48d, 0x48e

Function 6:
Public fallback function
Entry block: 0x78
Exit block: 0x78
Body: 0x78

