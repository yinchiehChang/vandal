Block 0x0
[0x0:0xc]
---
Predecessors: []
Successors: [0xd, 0x6c]
---
0x0 PUSH1 0x80
0x2 PUSH1 0x40
0x4 MSTORE
0x5 PUSH1 0x4
0x7 CALLDATASIZE
0x8 LT
0x9 PUSH2 0x6c
0xc JUMPI
---
0x0: V0 = 0x80
0x2: V1 = 0x40
0x4: M[0x40] = 0x80
0x5: V2 = 0x4
0x7: V3 = CALLDATASIZE
0x8: V4 = LT V3 0x4
0x9: V5 = 0x6c
0xc: JUMPI 0x6c V4
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xd
[0xd:0x3f]
---
Predecessors: [0x0]
Successors: [0x40, 0x6e]
---
0xd PUSH4 0xffffffff
0x12 PUSH29 0x100000000000000000000000000000000000000000000000000000000
0x30 PUSH1 0x0
0x32 CALLDATALOAD
0x33 DIV
0x34 AND
0x35 PUSH4 0x44c96e4
0x3a DUP2
0x3b EQ
0x3c PUSH2 0x6e
0x3f JUMPI
---
0xd: V6 = 0xffffffff
0x12: V7 = 0x100000000000000000000000000000000000000000000000000000000
0x30: V8 = 0x0
0x32: V9 = CALLDATALOAD 0x0
0x33: V10 = DIV V9 0x100000000000000000000000000000000000000000000000000000000
0x34: V11 = AND V10 0xffffffff
0x35: V12 = 0x44c96e4
0x3b: V13 = EQ V11 0x44c96e4
0x3c: V14 = 0x6e
0x3f: JUMPI 0x6e V13
---
Entry stack: []
Stack pops: 0
Stack additions: [V11]
Exit stack: [V11]

================================

Block 0x40
[0x40:0x4a]
---
Predecessors: [0xd]
Successors: [0x4b, 0xf8]
---
0x40 DUP1
0x41 PUSH4 0x3853682c
0x46 EQ
0x47 PUSH2 0xf8
0x4a JUMPI
---
0x41: V15 = 0x3853682c
0x46: V16 = EQ 0x3853682c V11
0x47: V17 = 0xf8
0x4a: JUMPI 0xf8 V16
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x4b
[0x4b:0x55]
---
Predecessors: [0x40]
Successors: [0x56, 0x144]
---
0x4b DUP1
0x4c PUSH4 0x6cbc2ded
0x51 EQ
0x52 PUSH2 0x144
0x55 JUMPI
---
0x4c: V18 = 0x6cbc2ded
0x51: V19 = EQ 0x6cbc2ded V11
0x52: V20 = 0x144
0x55: JUMPI 0x144 V19
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x56
[0x56:0x60]
---
Predecessors: [0x4b]
Successors: [0x61, 0x14c]
---
0x56 DUP1
0x57 PUSH4 0x780aee73
0x5c EQ
0x5d PUSH2 0x14c
0x60 JUMPI
---
0x57: V21 = 0x780aee73
0x5c: V22 = EQ 0x780aee73 V11
0x5d: V23 = 0x14c
0x60: JUMPI 0x14c V22
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x61
[0x61:0x6b]
---
Predecessors: [0x56]
Successors: [0x6c, 0x19a]
---
0x61 DUP1
0x62 PUSH4 0xc8166a8a
0x67 EQ
0x68 PUSH2 0x19a
0x6b JUMPI
---
0x62: V24 = 0xc8166a8a
0x67: V25 = EQ 0xc8166a8a V11
0x68: V26 = 0x19a
0x6b: JUMPI 0x19a V25
---
Entry stack: [V11]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11]

================================

Block 0x6c
[0x6c:0x6d]
---
Predecessors: [0x0, 0x61, 0x2bc, 0x367, 0x3b7, 0x3ec, 0x4fa]
Successors: []
---
0x6c JUMPDEST
0x6d STOP
---
0x6c: JUMPDEST 
0x6d: STOP 
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]

================================

Block 0x6e
[0x6e:0xf7]
---
Predecessors: [0xd]
Successors: [0x224]
---
0x6e JUMPDEST
0x6f PUSH1 0x40
0x71 DUP1
0x72 MLOAD
0x73 PUSH1 0x20
0x75 PUSH1 0x4
0x77 DUP1
0x78 CALLDATALOAD
0x79 DUP1
0x7a DUP3
0x7b ADD
0x7c CALLDATALOAD
0x7d PUSH1 0x1f
0x7f DUP2
0x80 ADD
0x81 DUP5
0x82 SWAP1
0x83 DIV
0x84 DUP5
0x85 MUL
0x86 DUP6
0x87 ADD
0x88 DUP5
0x89 ADD
0x8a SWAP1
0x8b SWAP6
0x8c MSTORE
0x8d DUP5
0x8e DUP5
0x8f MSTORE
0x90 PUSH2 0x6c
0x93 SWAP5
0x94 CALLDATASIZE
0x95 SWAP5
0x96 SWAP3
0x97 SWAP4
0x98 PUSH1 0x24
0x9a SWAP4
0x9b SWAP3
0x9c DUP5
0x9d ADD
0x9e SWAP2
0x9f SWAP1
0xa0 DUP2
0xa1 SWAP1
0xa2 DUP5
0xa3 ADD
0xa4 DUP4
0xa5 DUP3
0xa6 DUP1
0xa7 DUP3
0xa8 DUP5
0xa9 CALLDATACOPY
0xaa POP
0xab POP
0xac PUSH1 0x40
0xae DUP1
0xaf MLOAD
0xb0 PUSH1 0x20
0xb2 PUSH1 0x1f
0xb4 DUP10
0xb5 CALLDATALOAD
0xb6 DUP12
0xb7 ADD
0xb8 DUP1
0xb9 CALLDATALOAD
0xba SWAP2
0xbb DUP3
0xbc ADD
0xbd DUP4
0xbe SWAP1
0xbf DIV
0xc0 DUP4
0xc1 MUL
0xc2 DUP5
0xc3 ADD
0xc4 DUP4
0xc5 ADD
0xc6 SWAP1
0xc7 SWAP5
0xc8 MSTORE
0xc9 DUP1
0xca DUP4
0xcb MSTORE
0xcc SWAP8
0xcd SWAP11
0xce SWAP10
0xcf SWAP9
0xd0 DUP2
0xd1 ADD
0xd2 SWAP8
0xd3 SWAP2
0xd4 SWAP7
0xd5 POP
0xd6 SWAP2
0xd7 DUP3
0xd8 ADD
0xd9 SWAP5
0xda POP
0xdb SWAP3
0xdc POP
0xdd DUP3
0xde SWAP2
0xdf POP
0xe0 DUP5
0xe1 ADD
0xe2 DUP4
0xe3 DUP3
0xe4 DUP1
0xe5 DUP3
0xe6 DUP5
0xe7 CALLDATACOPY
0xe8 POP
0xe9 SWAP5
0xea SWAP8
0xeb POP
0xec PUSH2 0x224
0xef SWAP7
0xf0 POP
0xf1 POP
0xf2 POP
0xf3 POP
0xf4 POP
0xf5 POP
0xf6 POP
0xf7 JUMP
---
0x6e: JUMPDEST 
0x6f: V27 = 0x40
0x72: V28 = M[0x40]
0x73: V29 = 0x20
0x75: V30 = 0x4
0x78: V31 = CALLDATALOAD 0x4
0x7b: V32 = ADD 0x4 V31
0x7c: V33 = CALLDATALOAD V32
0x7d: V34 = 0x1f
0x80: V35 = ADD V33 0x1f
0x83: V36 = DIV V35 0x20
0x85: V37 = MUL 0x20 V36
0x87: V38 = ADD V28 V37
0x89: V39 = ADD 0x20 V38
0x8c: M[0x40] = V39
0x8f: M[V28] = V33
0x90: V40 = 0x6c
0x94: V41 = CALLDATASIZE
0x98: V42 = 0x24
0x9d: V43 = ADD 0x24 V31
0xa3: V44 = ADD V28 0x20
0xa9: CALLDATACOPY V44 V43 V33
0xac: V45 = 0x40
0xaf: V46 = M[0x40]
0xb0: V47 = 0x20
0xb2: V48 = 0x1f
0xb5: V49 = CALLDATALOAD 0x24
0xb7: V50 = ADD 0x4 V49
0xb9: V51 = CALLDATALOAD V50
0xbc: V52 = ADD V51 0x1f
0xbf: V53 = DIV V52 0x20
0xc1: V54 = MUL 0x20 V53
0xc3: V55 = ADD V46 V54
0xc5: V56 = ADD 0x20 V55
0xc8: M[0x40] = V56
0xcb: M[V46] = V51
0xd1: V57 = ADD 0x20 0x24
0xd8: V58 = ADD 0x20 V50
0xe1: V59 = ADD V46 0x20
0xe7: CALLDATACOPY V59 V58 V51
0xec: V60 = 0x224
0xf7: JUMP 0x224
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V28, V46]
Exit stack: [V11, 0x6c, V28, V46]

================================

Block 0xf8
[0xf8:0x143]
---
Predecessors: [0x40]
Successors: [0x2c0]
---
0xf8 JUMPDEST
0xf9 PUSH1 0x40
0xfb DUP1
0xfc MLOAD
0xfd PUSH1 0x20
0xff PUSH1 0x4
0x101 DUP1
0x102 CALLDATALOAD
0x103 DUP1
0x104 DUP3
0x105 ADD
0x106 CALLDATALOAD
0x107 PUSH1 0x1f
0x109 DUP2
0x10a ADD
0x10b DUP5
0x10c SWAP1
0x10d DIV
0x10e DUP5
0x10f MUL
0x110 DUP6
0x111 ADD
0x112 DUP5
0x113 ADD
0x114 SWAP1
0x115 SWAP6
0x116 MSTORE
0x117 DUP5
0x118 DUP5
0x119 MSTORE
0x11a PUSH2 0x6c
0x11d SWAP5
0x11e CALLDATASIZE
0x11f SWAP5
0x120 SWAP3
0x121 SWAP4
0x122 PUSH1 0x24
0x124 SWAP4
0x125 SWAP3
0x126 DUP5
0x127 ADD
0x128 SWAP2
0x129 SWAP1
0x12a DUP2
0x12b SWAP1
0x12c DUP5
0x12d ADD
0x12e DUP4
0x12f DUP3
0x130 DUP1
0x131 DUP3
0x132 DUP5
0x133 CALLDATACOPY
0x134 POP
0x135 SWAP5
0x136 SWAP8
0x137 POP
0x138 PUSH2 0x2c0
0x13b SWAP7
0x13c POP
0x13d POP
0x13e POP
0x13f POP
0x140 POP
0x141 POP
0x142 POP
0x143 JUMP
---
0xf8: JUMPDEST 
0xf9: V61 = 0x40
0xfc: V62 = M[0x40]
0xfd: V63 = 0x20
0xff: V64 = 0x4
0x102: V65 = CALLDATALOAD 0x4
0x105: V66 = ADD 0x4 V65
0x106: V67 = CALLDATALOAD V66
0x107: V68 = 0x1f
0x10a: V69 = ADD V67 0x1f
0x10d: V70 = DIV V69 0x20
0x10f: V71 = MUL 0x20 V70
0x111: V72 = ADD V62 V71
0x113: V73 = ADD 0x20 V72
0x116: M[0x40] = V73
0x119: M[V62] = V67
0x11a: V74 = 0x6c
0x11e: V75 = CALLDATASIZE
0x122: V76 = 0x24
0x127: V77 = ADD 0x24 V65
0x12d: V78 = ADD V62 0x20
0x133: CALLDATACOPY V78 V77 V67
0x138: V79 = 0x2c0
0x143: JUMP 0x2c0
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V62]
Exit stack: [V11, 0x6c, V62]

================================

Block 0x144
[0x144:0x14b]
---
Predecessors: [0x4b]
Successors: [0x36a]
---
0x144 JUMPDEST
0x145 PUSH2 0x6c
0x148 PUSH2 0x36a
0x14b JUMP
---
0x144: JUMPDEST 
0x145: V80 = 0x6c
0x148: V81 = 0x36a
0x14b: JUMP 0x36a
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c]
Exit stack: [V11, 0x6c]

================================

Block 0x14c
[0x14c:0x199]
---
Predecessors: [0x56]
Successors: [0x3b9]
---
0x14c JUMPDEST
0x14d PUSH1 0x40
0x14f DUP1
0x150 MLOAD
0x151 PUSH1 0x20
0x153 PUSH1 0x4
0x155 DUP1
0x156 CALLDATALOAD
0x157 DUP1
0x158 DUP3
0x159 ADD
0x15a CALLDATALOAD
0x15b PUSH1 0x1f
0x15d DUP2
0x15e ADD
0x15f DUP5
0x160 SWAP1
0x161 DIV
0x162 DUP5
0x163 MUL
0x164 DUP6
0x165 ADD
0x166 DUP5
0x167 ADD
0x168 SWAP1
0x169 SWAP6
0x16a MSTORE
0x16b DUP5
0x16c DUP5
0x16d MSTORE
0x16e PUSH2 0x6c
0x171 SWAP5
0x172 CALLDATASIZE
0x173 SWAP5
0x174 SWAP3
0x175 SWAP4
0x176 PUSH1 0x24
0x178 SWAP4
0x179 SWAP3
0x17a DUP5
0x17b ADD
0x17c SWAP2
0x17d SWAP1
0x17e DUP2
0x17f SWAP1
0x180 DUP5
0x181 ADD
0x182 DUP4
0x183 DUP3
0x184 DUP1
0x185 DUP3
0x186 DUP5
0x187 CALLDATACOPY
0x188 POP
0x189 SWAP5
0x18a SWAP8
0x18b POP
0x18c POP
0x18d SWAP4
0x18e CALLDATALOAD
0x18f SWAP5
0x190 POP
0x191 PUSH2 0x3b9
0x194 SWAP4
0x195 POP
0x196 POP
0x197 POP
0x198 POP
0x199 JUMP
---
0x14c: JUMPDEST 
0x14d: V82 = 0x40
0x150: V83 = M[0x40]
0x151: V84 = 0x20
0x153: V85 = 0x4
0x156: V86 = CALLDATALOAD 0x4
0x159: V87 = ADD 0x4 V86
0x15a: V88 = CALLDATALOAD V87
0x15b: V89 = 0x1f
0x15e: V90 = ADD V88 0x1f
0x161: V91 = DIV V90 0x20
0x163: V92 = MUL 0x20 V91
0x165: V93 = ADD V83 V92
0x167: V94 = ADD 0x20 V93
0x16a: M[0x40] = V94
0x16d: M[V83] = V88
0x16e: V95 = 0x6c
0x172: V96 = CALLDATASIZE
0x176: V97 = 0x24
0x17b: V98 = ADD 0x24 V86
0x181: V99 = ADD V83 0x20
0x187: CALLDATACOPY V99 V98 V88
0x18e: V100 = CALLDATALOAD 0x24
0x191: V101 = 0x3b9
0x199: JUMP 0x3b9
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [0x6c, V83, V100]
Exit stack: [V11, 0x6c, V83, V100]

================================

Block 0x19a
[0x19a:0x1a1]
---
Predecessors: [0x61]
Successors: [0x1a2, 0x1a6]
---
0x19a JUMPDEST
0x19b CALLVALUE
0x19c DUP1
0x19d ISZERO
0x19e PUSH2 0x1a6
0x1a1 JUMPI
---
0x19a: JUMPDEST 
0x19b: V102 = CALLVALUE
0x19d: V103 = ISZERO V102
0x19e: V104 = 0x1a6
0x1a1: JUMPI 0x1a6 V103
---
Entry stack: [V11]
Stack pops: 0
Stack additions: [V102]
Exit stack: [V11, V102]

================================

Block 0x1a2
[0x1a2:0x1a5]
---
Predecessors: [0x19a]
Successors: []
---
0x1a2 PUSH1 0x0
0x1a4 DUP1
0x1a5 REVERT
---
0x1a2: V105 = 0x0
0x1a5: REVERT 0x0 0x0
---
Entry stack: [V11, V102]
Stack pops: 0
Stack additions: []
Exit stack: [V11, V102]

================================

Block 0x1a6
[0x1a6:0x1ae]
---
Predecessors: [0x19a]
Successors: [0x3f3]
---
0x1a6 JUMPDEST
0x1a7 POP
0x1a8 PUSH2 0x1af
0x1ab PUSH2 0x3f3
0x1ae JUMP
---
0x1a6: JUMPDEST 
0x1a8: V106 = 0x1af
0x1ab: V107 = 0x3f3
0x1ae: JUMP 0x3f3
---
Entry stack: [V11, V102]
Stack pops: 1
Stack additions: [0x1af]
Exit stack: [V11, 0x1af]

================================

Block 0x1af
[0x1af:0x1d0]
---
Predecessors: [0x478]
Successors: [0x1d1]
---
0x1af JUMPDEST
0x1b0 PUSH1 0x40
0x1b2 DUP1
0x1b3 MLOAD
0x1b4 PUSH1 0x20
0x1b6 DUP1
0x1b7 DUP3
0x1b8 MSTORE
0x1b9 DUP4
0x1ba MLOAD
0x1bb DUP2
0x1bc DUP4
0x1bd ADD
0x1be MSTORE
0x1bf DUP4
0x1c0 MLOAD
0x1c1 SWAP2
0x1c2 SWAP3
0x1c3 DUP4
0x1c4 SWAP3
0x1c5 SWAP1
0x1c6 DUP4
0x1c7 ADD
0x1c8 SWAP2
0x1c9 DUP6
0x1ca ADD
0x1cb SWAP1
0x1cc DUP1
0x1cd DUP4
0x1ce DUP4
0x1cf PUSH1 0x0
---
0x1af: JUMPDEST 
0x1b0: V108 = 0x40
0x1b3: V109 = M[0x40]
0x1b4: V110 = 0x20
0x1b8: M[V109] = 0x20
0x1ba: V111 = M[V302]
0x1bd: V112 = ADD V109 0x20
0x1be: M[V112] = V111
0x1c0: V113 = M[V302]
0x1c7: V114 = ADD V109 0x40
0x1ca: V115 = ADD V302 0x20
0x1cf: V116 = 0x0
---
Entry stack: [V11, 0x1af, V302]
Stack pops: 1
Stack additions: [S0, V109, V109, V114, V115, V113, V113, V114, V115, 0x0]
Exit stack: [V11, 0x1af, V302, V109, V109, V114, V115, V113, V113, V114, V115, 0x0]

================================

Block 0x1d1
[0x1d1:0x1d9]
---
Predecessors: [0x1af, 0x1da]
Successors: [0x1da, 0x1e9]
---
0x1d1 JUMPDEST
0x1d2 DUP4
0x1d3 DUP2
0x1d4 LT
0x1d5 ISZERO
0x1d6 PUSH2 0x1e9
0x1d9 JUMPI
---
0x1d1: JUMPDEST 
0x1d4: V117 = LT S0 V113
0x1d5: V118 = ISZERO V117
0x1d6: V119 = 0x1e9
0x1d9: JUMPI 0x1e9 V118
---
Entry stack: [V11, 0x1af, V302, V109, V109, V114, V115, V113, V113, V114, V115, S0]
Stack pops: 4
Stack additions: [S3, S2, S1, S0]
Exit stack: [V11, 0x1af, V302, V109, V109, V114, V115, V113, V113, V114, V115, S0]

================================

Block 0x1da
[0x1da:0x1e8]
---
Predecessors: [0x1d1]
Successors: [0x1d1]
---
0x1da DUP2
0x1db DUP2
0x1dc ADD
0x1dd MLOAD
0x1de DUP4
0x1df DUP3
0x1e0 ADD
0x1e1 MSTORE
0x1e2 PUSH1 0x20
0x1e4 ADD
0x1e5 PUSH2 0x1d1
0x1e8 JUMP
---
0x1dc: V120 = ADD S0 V115
0x1dd: V121 = M[V120]
0x1e0: V122 = ADD S0 V114
0x1e1: M[V122] = V121
0x1e2: V123 = 0x20
0x1e4: V124 = ADD 0x20 S0
0x1e5: V125 = 0x1d1
0x1e8: JUMP 0x1d1
---
Entry stack: [V11, 0x1af, V302, V109, V109, V114, V115, V113, V113, V114, V115, S0]
Stack pops: 3
Stack additions: [S2, S1, V124]
Exit stack: [V11, 0x1af, V302, V109, V109, V114, V115, V113, V113, V114, V115, V124]

================================

Block 0x1e9
[0x1e9:0x1fc]
---
Predecessors: [0x1d1]
Successors: [0x1fd, 0x216]
---
0x1e9 JUMPDEST
0x1ea POP
0x1eb POP
0x1ec POP
0x1ed POP
0x1ee SWAP1
0x1ef POP
0x1f0 SWAP1
0x1f1 DUP2
0x1f2 ADD
0x1f3 SWAP1
0x1f4 PUSH1 0x1f
0x1f6 AND
0x1f7 DUP1
0x1f8 ISZERO
0x1f9 PUSH2 0x216
0x1fc JUMPI
---
0x1e9: JUMPDEST 
0x1f2: V126 = ADD V113 V114
0x1f4: V127 = 0x1f
0x1f6: V128 = AND 0x1f V113
0x1f8: V129 = ISZERO V128
0x1f9: V130 = 0x216
0x1fc: JUMPI 0x216 V129
---
Entry stack: [V11, 0x1af, V302, V109, V109, V114, V115, V113, V113, V114, V115, S0]
Stack pops: 7
Stack additions: [V126, V128]
Exit stack: [V11, 0x1af, V302, V109, V109, V126, V128]

================================

Block 0x1fd
[0x1fd:0x215]
---
Predecessors: [0x1e9]
Successors: [0x216]
---
0x1fd DUP1
0x1fe DUP3
0x1ff SUB
0x200 DUP1
0x201 MLOAD
0x202 PUSH1 0x1
0x204 DUP4
0x205 PUSH1 0x20
0x207 SUB
0x208 PUSH2 0x100
0x20b EXP
0x20c SUB
0x20d NOT
0x20e AND
0x20f DUP2
0x210 MSTORE
0x211 PUSH1 0x20
0x213 ADD
0x214 SWAP2
0x215 POP
---
0x1ff: V131 = SUB V126 V128
0x201: V132 = M[V131]
0x202: V133 = 0x1
0x205: V134 = 0x20
0x207: V135 = SUB 0x20 V128
0x208: V136 = 0x100
0x20b: V137 = EXP 0x100 V135
0x20c: V138 = SUB V137 0x1
0x20d: V139 = NOT V138
0x20e: V140 = AND V139 V132
0x210: M[V131] = V140
0x211: V141 = 0x20
0x213: V142 = ADD 0x20 V131
---
Entry stack: [V11, 0x1af, V302, V109, V109, V126, V128]
Stack pops: 2
Stack additions: [V142, S0]
Exit stack: [V11, 0x1af, V302, V109, V109, V142, V128]

================================

Block 0x216
[0x216:0x223]
---
Predecessors: [0x1e9, 0x1fd]
Successors: []
---
0x216 JUMPDEST
0x217 POP
0x218 SWAP3
0x219 POP
0x21a POP
0x21b POP
0x21c PUSH1 0x40
0x21e MLOAD
0x21f DUP1
0x220 SWAP2
0x221 SUB
0x222 SWAP1
0x223 RETURN
---
0x216: JUMPDEST 
0x21c: V143 = 0x40
0x21e: V144 = M[0x40]
0x221: V145 = SUB S1 V144
0x223: RETURN V144 V145
---
Entry stack: [V11, 0x1af, V302, V109, V109, S1, V128]
Stack pops: 5
Stack additions: []
Exit stack: [V11, 0x1af]

================================

Block 0x224
[0x224:0x22d]
---
Predecessors: [0x6e]
Successors: [0x22e, 0x2bc]
---
0x224 JUMPDEST
0x225 PUSH1 0x0
0x227 SLOAD
0x228 ISZERO
0x229 ISZERO
0x22a PUSH2 0x2bc
0x22d JUMPI
---
0x224: JUMPDEST 
0x225: V146 = 0x0
0x227: V147 = S[0x0]
0x228: V148 = ISZERO V147
0x229: V149 = ISZERO V148
0x22a: V150 = 0x2bc
0x22d: JUMPI 0x2bc V149
---
Entry stack: [V11, 0x6c, V28, V46]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V28, V46]

================================

Block 0x22e
[0x22e:0x23d]
---
Predecessors: [0x224]
Successors: [0x23e]
---
0x22e DUP1
0x22f PUSH1 0x40
0x231 MLOAD
0x232 DUP1
0x233 DUP3
0x234 DUP1
0x235 MLOAD
0x236 SWAP1
0x237 PUSH1 0x20
0x239 ADD
0x23a SWAP1
0x23b DUP1
0x23c DUP4
0x23d DUP4
---
0x22f: V151 = 0x40
0x231: V152 = M[0x40]
0x235: V153 = M[V46]
0x237: V154 = 0x20
0x239: V155 = ADD 0x20 V46
---
Entry stack: [V11, 0x6c, V28, V46]
Stack pops: 1
Stack additions: [S0, S0, V152, V152, V155, V153, V153, V152, V155]
Exit stack: [V11, 0x6c, V28, V46, V46, V152, V152, V155, V153, V153, V152, V155]

================================

Block 0x23e
[0x23e:0x246]
---
Predecessors: [0x22e, 0x247]
Successors: [0x247, 0x25d]
---
0x23e JUMPDEST
0x23f PUSH1 0x20
0x241 DUP4
0x242 LT
0x243 PUSH2 0x25d
0x246 JUMPI
---
0x23e: JUMPDEST 
0x23f: V156 = 0x20
0x242: V157 = LT S2 0x20
0x243: V158 = 0x25d
0x246: JUMPI 0x25d V157
---
Entry stack: [V11, 0x6c, V28, V46, V46, V152, V152, V155, V153, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, V28, V46, V46, V152, V152, V155, V153, S2, S1, S0]

================================

Block 0x247
[0x247:0x25c]
---
Predecessors: [0x23e]
Successors: [0x23e]
---
0x247 DUP1
0x248 MLOAD
0x249 DUP3
0x24a MSTORE
0x24b PUSH1 0x1f
0x24d NOT
0x24e SWAP1
0x24f SWAP3
0x250 ADD
0x251 SWAP2
0x252 PUSH1 0x20
0x254 SWAP2
0x255 DUP3
0x256 ADD
0x257 SWAP2
0x258 ADD
0x259 PUSH2 0x23e
0x25c JUMP
---
0x248: V159 = M[S0]
0x24a: M[S1] = V159
0x24b: V160 = 0x1f
0x24d: V161 = NOT 0x1f
0x250: V162 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x252: V163 = 0x20
0x256: V164 = ADD 0x20 S1
0x258: V165 = ADD 0x20 S0
0x259: V166 = 0x23e
0x25c: JUMP 0x23e
---
Entry stack: [V11, 0x6c, V28, V46, V46, V152, V152, V155, V153, S2, S1, S0]
Stack pops: 3
Stack additions: [V162, V164, V165]
Exit stack: [V11, 0x6c, V28, V46, V46, V152, V152, V155, V153, V162, V164, V165]

================================

Block 0x25d
[0x25d:0x29a]
---
Predecessors: [0x23e]
Successors: [0x480]
---
0x25d JUMPDEST
0x25e MLOAD
0x25f DUP2
0x260 MLOAD
0x261 PUSH1 0x20
0x263 SWAP4
0x264 DUP5
0x265 SUB
0x266 PUSH2 0x100
0x269 EXP
0x26a PUSH1 0x0
0x26c NOT
0x26d ADD
0x26e DUP1
0x26f NOT
0x270 SWAP1
0x271 SWAP3
0x272 AND
0x273 SWAP2
0x274 AND
0x275 OR
0x276 SWAP1
0x277 MSTORE
0x278 PUSH1 0x40
0x27a MLOAD
0x27b SWAP2
0x27c SWAP1
0x27d SWAP4
0x27e ADD
0x27f DUP2
0x280 SWAP1
0x281 SUB
0x282 SWAP1
0x283 SHA3
0x284 PUSH1 0x0
0x286 SSTORE
0x287 POP
0x288 DUP5
0x289 MLOAD
0x28a PUSH2 0x29b
0x28d SWAP4
0x28e POP
0x28f PUSH1 0x1
0x291 SWAP3
0x292 POP
0x293 SWAP1
0x294 DUP6
0x295 ADD
0x296 SWAP1
0x297 PUSH2 0x480
0x29a JUMP
---
0x25d: JUMPDEST 
0x25e: V167 = M[S0]
0x260: V168 = M[S1]
0x261: V169 = 0x20
0x265: V170 = SUB 0x20 S2
0x266: V171 = 0x100
0x269: V172 = EXP 0x100 V170
0x26a: V173 = 0x0
0x26c: V174 = NOT 0x0
0x26d: V175 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V172
0x26f: V176 = NOT V175
0x272: V177 = AND V167 V176
0x274: V178 = AND V175 V168
0x275: V179 = OR V178 V177
0x277: M[S1] = V179
0x278: V180 = 0x40
0x27a: V181 = M[0x40]
0x27e: V182 = ADD V152 V153
0x281: V183 = SUB V182 V181
0x283: V184 = SHA3 V181 V183
0x284: V185 = 0x0
0x286: S[0x0] = V184
0x289: V186 = M[V28]
0x28a: V187 = 0x29b
0x28f: V188 = 0x1
0x295: V189 = ADD V28 0x20
0x297: V190 = 0x480
0x29a: JUMP 0x480
---
Entry stack: [V11, 0x6c, V28, V46, V46, V152, V152, V155, V153, S2, S1, S0]
Stack pops: 10
Stack additions: [S9, S8, 0x29b, 0x1, V189, V186]
Exit stack: [V11, 0x6c, V28, V46, 0x29b, 0x1, V189, V186]

================================

Block 0x29b
[0x29b:0x2bb]
---
Predecessors: [0x2bc, 0x3ec, 0x4fa]
Successors: [0x2bc]
---
0x29b JUMPDEST
0x29c POP
0x29d PUSH1 0x2
0x29f DUP1
0x2a0 SLOAD
0x2a1 PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x2b6 NOT
0x2b7 AND
0x2b8 CALLER
0x2b9 OR
0x2ba SWAP1
0x2bb SSTORE
---
0x29b: JUMPDEST 
0x29d: V191 = 0x2
0x2a0: V192 = S[0x2]
0x2a1: V193 = 0xffffffffffffffffffffffffffffffffffffffff
0x2b6: V194 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x2b7: V195 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V192
0x2b8: V196 = CALLER
0x2b9: V197 = OR V196 V195
0x2bb: S[0x2] = V197
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4, S3, S2, S1]

================================

Block 0x2bc
[0x2bc:0x2bf]
---
Predecessors: [0x224, 0x29b, 0x33b, 0x3b9]
Successors: [0x6c, 0x29b, 0x3ec]
---
0x2bc JUMPDEST
0x2bd POP
0x2be POP
0x2bf JUMP
---
0x2bc: JUMPDEST 
0x2bf: JUMP S2
---
Entry stack: [V11, 0x6c, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: []
Exit stack: [V11, 0x6c, S4, S3]

================================

Block 0x2c0
[0x2c0:0x2d0]
---
Predecessors: [0xf8]
Successors: [0x2d1]
---
0x2c0 JUMPDEST
0x2c1 DUP1
0x2c2 PUSH1 0x40
0x2c4 MLOAD
0x2c5 DUP1
0x2c6 DUP3
0x2c7 DUP1
0x2c8 MLOAD
0x2c9 SWAP1
0x2ca PUSH1 0x20
0x2cc ADD
0x2cd SWAP1
0x2ce DUP1
0x2cf DUP4
0x2d0 DUP4
---
0x2c0: JUMPDEST 
0x2c2: V198 = 0x40
0x2c4: V199 = M[0x40]
0x2c8: V200 = M[V62]
0x2ca: V201 = 0x20
0x2cc: V202 = ADD 0x20 V62
---
Entry stack: [V11, 0x6c, V62]
Stack pops: 1
Stack additions: [S0, S0, V199, V199, V202, V200, V200, V199, V202]
Exit stack: [V11, 0x6c, V62, V62, V199, V199, V202, V200, V200, V199, V202]

================================

Block 0x2d1
[0x2d1:0x2d9]
---
Predecessors: [0x2c0, 0x2da]
Successors: [0x2da, 0x2f0]
---
0x2d1 JUMPDEST
0x2d2 PUSH1 0x20
0x2d4 DUP4
0x2d5 LT
0x2d6 PUSH2 0x2f0
0x2d9 JUMPI
---
0x2d1: JUMPDEST 
0x2d2: V203 = 0x20
0x2d5: V204 = LT S2 0x20
0x2d6: V205 = 0x2f0
0x2d9: JUMPI 0x2f0 V204
---
Entry stack: [V11, 0x6c, V62, V62, V199, V199, V202, V200, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, V62, V62, V199, V199, V202, V200, S2, S1, S0]

================================

Block 0x2da
[0x2da:0x2ef]
---
Predecessors: [0x2d1]
Successors: [0x2d1]
---
0x2da DUP1
0x2db MLOAD
0x2dc DUP3
0x2dd MSTORE
0x2de PUSH1 0x1f
0x2e0 NOT
0x2e1 SWAP1
0x2e2 SWAP3
0x2e3 ADD
0x2e4 SWAP2
0x2e5 PUSH1 0x20
0x2e7 SWAP2
0x2e8 DUP3
0x2e9 ADD
0x2ea SWAP2
0x2eb ADD
0x2ec PUSH2 0x2d1
0x2ef JUMP
---
0x2db: V206 = M[S0]
0x2dd: M[S1] = V206
0x2de: V207 = 0x1f
0x2e0: V208 = NOT 0x1f
0x2e3: V209 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x2e5: V210 = 0x20
0x2e9: V211 = ADD 0x20 S1
0x2eb: V212 = ADD 0x20 S0
0x2ec: V213 = 0x2d1
0x2ef: JUMP 0x2d1
---
Entry stack: [V11, 0x6c, V62, V62, V199, V199, V202, V200, S2, S1, S0]
Stack pops: 3
Stack additions: [V209, V211, V212]
Exit stack: [V11, 0x6c, V62, V62, V199, V199, V202, V200, V209, V211, V212]

================================

Block 0x2f0
[0x2f0:0x328]
---
Predecessors: [0x2d1]
Successors: [0x329, 0x335]
---
0x2f0 JUMPDEST
0x2f1 MLOAD
0x2f2 DUP2
0x2f3 MLOAD
0x2f4 PUSH1 0x20
0x2f6 SWAP4
0x2f7 SWAP1
0x2f8 SWAP4
0x2f9 SUB
0x2fa PUSH2 0x100
0x2fd EXP
0x2fe PUSH1 0x0
0x300 NOT
0x301 ADD
0x302 DUP1
0x303 NOT
0x304 SWAP1
0x305 SWAP2
0x306 AND
0x307 SWAP3
0x308 AND
0x309 SWAP2
0x30a SWAP1
0x30b SWAP2
0x30c OR
0x30d SWAP1
0x30e MSTORE
0x30f PUSH1 0x40
0x311 MLOAD
0x312 SWAP3
0x313 ADD
0x314 DUP3
0x315 SWAP1
0x316 SUB
0x317 SWAP1
0x318 SWAP2
0x319 SHA3
0x31a PUSH1 0x0
0x31c SLOAD
0x31d EQ
0x31e SWAP3
0x31f POP
0x320 POP
0x321 DUP2
0x322 ISZERO
0x323 SWAP1
0x324 POP
0x325 PUSH2 0x335
0x328 JUMPI
---
0x2f0: JUMPDEST 
0x2f1: V214 = M[S0]
0x2f3: V215 = M[S1]
0x2f4: V216 = 0x20
0x2f9: V217 = SUB 0x20 S2
0x2fa: V218 = 0x100
0x2fd: V219 = EXP 0x100 V217
0x2fe: V220 = 0x0
0x300: V221 = NOT 0x0
0x301: V222 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V219
0x303: V223 = NOT V222
0x306: V224 = AND V214 V223
0x308: V225 = AND V215 V222
0x30c: V226 = OR V225 V224
0x30e: M[S1] = V226
0x30f: V227 = 0x40
0x311: V228 = M[0x40]
0x313: V229 = ADD V199 V200
0x316: V230 = SUB V229 V228
0x319: V231 = SHA3 V228 V230
0x31a: V232 = 0x0
0x31c: V233 = S[0x0]
0x31d: V234 = EQ V233 V231
0x322: V235 = ISZERO V234
0x325: V236 = 0x335
0x328: JUMPI 0x335 V235
---
Entry stack: [V11, 0x6c, V62, V62, V199, V199, V202, V200, S2, S1, S0]
Stack pops: 8
Stack additions: [V234]
Exit stack: [V11, 0x6c, V62, V234]

================================

Block 0x329
[0x329:0x334]
---
Predecessors: [0x2f0]
Successors: [0x335]
---
0x329 POP
0x32a PUSH8 0xde0b6b3a7640000
0x333 CALLVALUE
0x334 GT
---
0x32a: V237 = 0xde0b6b3a7640000
0x333: V238 = CALLVALUE
0x334: V239 = GT V238 0xde0b6b3a7640000
---
Entry stack: [V11, 0x6c, V62, V234]
Stack pops: 1
Stack additions: [V239]
Exit stack: [V11, 0x6c, V62, V239]

================================

Block 0x335
[0x335:0x33a]
---
Predecessors: [0x2f0, 0x329]
Successors: [0x33b, 0x367]
---
0x335 JUMPDEST
0x336 ISZERO
0x337 PUSH2 0x367
0x33a JUMPI
---
0x335: JUMPDEST 
0x336: V240 = ISZERO S0
0x337: V241 = 0x367
0x33a: JUMPI 0x367 V240
---
Entry stack: [V11, 0x6c, V62, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V11, 0x6c, V62]

================================

Block 0x33b
[0x33b:0x35d]
---
Predecessors: [0x335]
Successors: [0x2bc, 0x35e]
---
0x33b PUSH1 0x40
0x33d MLOAD
0x33e CALLER
0x33f SWAP1
0x340 ADDRESS
0x341 BALANCE
0x342 DUP1
0x343 ISZERO
0x344 PUSH2 0x8fc
0x347 MUL
0x348 SWAP2
0x349 PUSH1 0x0
0x34b DUP2
0x34c DUP2
0x34d DUP2
0x34e DUP6
0x34f DUP9
0x350 DUP9
0x351 CALL
0x352 SWAP4
0x353 POP
0x354 POP
0x355 POP
0x356 POP
0x357 ISZERO
0x358 DUP1
0x359 ISZERO
0x35a PUSH2 0x2bc
0x35d JUMPI
---
0x33b: V242 = 0x40
0x33d: V243 = M[0x40]
0x33e: V244 = CALLER
0x340: V245 = ADDRESS
0x341: V246 = BALANCE V245
0x343: V247 = ISZERO V246
0x344: V248 = 0x8fc
0x347: V249 = MUL 0x8fc V247
0x349: V250 = 0x0
0x351: V251 = CALL V249 V244 V246 V243 0x0 V243 0x0
0x357: V252 = ISZERO V251
0x359: V253 = ISZERO V252
0x35a: V254 = 0x2bc
0x35d: JUMPI 0x2bc V253
---
Entry stack: [V11, 0x6c, V62]
Stack pops: 0
Stack additions: [V252]
Exit stack: [V11, 0x6c, V62, V252]

================================

Block 0x35e
[0x35e:0x366]
---
Predecessors: [0x33b]
Successors: []
---
0x35e RETURNDATASIZE
0x35f PUSH1 0x0
0x361 DUP1
0x362 RETURNDATACOPY
0x363 RETURNDATASIZE
0x364 PUSH1 0x0
0x366 REVERT
---
0x35e: V255 = RETURNDATASIZE
0x35f: V256 = 0x0
0x362: RETURNDATACOPY 0x0 0x0 V255
0x363: V257 = RETURNDATASIZE
0x364: V258 = 0x0
0x366: REVERT 0x0 V257
---
Entry stack: [V11, 0x6c, V62, V252]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V62, V252]

================================

Block 0x367
[0x367:0x369]
---
Predecessors: [0x335, 0x38b]
Successors: [0x6c]
---
0x367 JUMPDEST
0x368 POP
0x369 JUMP
---
0x367: JUMPDEST 
0x369: JUMP 0x6c
---
Entry stack: [V11, 0x6c, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V11]

================================

Block 0x36a
[0x36a:0x38a]
---
Predecessors: [0x144]
Successors: [0x38b, 0x3b7]
---
0x36a JUMPDEST
0x36b PUSH1 0x2
0x36d SLOAD
0x36e PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x383 AND
0x384 CALLER
0x385 EQ
0x386 ISZERO
0x387 PUSH2 0x3b7
0x38a JUMPI
---
0x36a: JUMPDEST 
0x36b: V259 = 0x2
0x36d: V260 = S[0x2]
0x36e: V261 = 0xffffffffffffffffffffffffffffffffffffffff
0x383: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V260
0x384: V263 = CALLER
0x385: V264 = EQ V263 V262
0x386: V265 = ISZERO V264
0x387: V266 = 0x3b7
0x38a: JUMPI 0x3b7 V265
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c]

================================

Block 0x38b
[0x38b:0x3ad]
---
Predecessors: [0x36a]
Successors: [0x367, 0x3ae]
---
0x38b PUSH1 0x40
0x38d MLOAD
0x38e CALLER
0x38f SWAP1
0x390 ADDRESS
0x391 BALANCE
0x392 DUP1
0x393 ISZERO
0x394 PUSH2 0x8fc
0x397 MUL
0x398 SWAP2
0x399 PUSH1 0x0
0x39b DUP2
0x39c DUP2
0x39d DUP2
0x39e DUP6
0x39f DUP9
0x3a0 DUP9
0x3a1 CALL
0x3a2 SWAP4
0x3a3 POP
0x3a4 POP
0x3a5 POP
0x3a6 POP
0x3a7 ISZERO
0x3a8 DUP1
0x3a9 ISZERO
0x3aa PUSH2 0x367
0x3ad JUMPI
---
0x38b: V267 = 0x40
0x38d: V268 = M[0x40]
0x38e: V269 = CALLER
0x390: V270 = ADDRESS
0x391: V271 = BALANCE V270
0x393: V272 = ISZERO V271
0x394: V273 = 0x8fc
0x397: V274 = MUL 0x8fc V272
0x399: V275 = 0x0
0x3a1: V276 = CALL V274 V269 V271 V268 0x0 V268 0x0
0x3a7: V277 = ISZERO V276
0x3a9: V278 = ISZERO V277
0x3aa: V279 = 0x367
0x3ad: JUMPI 0x367 V278
---
Entry stack: [V11, 0x6c]
Stack pops: 0
Stack additions: [V277]
Exit stack: [V11, 0x6c, V277]

================================

Block 0x3ae
[0x3ae:0x3b6]
---
Predecessors: [0x38b]
Successors: []
---
0x3ae RETURNDATASIZE
0x3af PUSH1 0x0
0x3b1 DUP1
0x3b2 RETURNDATACOPY
0x3b3 RETURNDATASIZE
0x3b4 PUSH1 0x0
0x3b6 REVERT
---
0x3ae: V280 = RETURNDATASIZE
0x3af: V281 = 0x0
0x3b2: RETURNDATACOPY 0x0 0x0 V280
0x3b3: V282 = RETURNDATASIZE
0x3b4: V283 = 0x0
0x3b6: REVERT 0x0 V282
---
Entry stack: [V11, 0x6c, V277]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V277]

================================

Block 0x3b7
[0x3b7:0x3b8]
---
Predecessors: [0x36a]
Successors: [0x6c]
---
0x3b7 JUMPDEST
0x3b8 JUMP
---
0x3b7: JUMPDEST 
0x3b8: JUMP 0x6c
---
Entry stack: [V11, 0x6c]
Stack pops: 1
Stack additions: []
Exit stack: [V11]

================================

Block 0x3b9
[0x3b9:0x3d9]
---
Predecessors: [0x14c]
Successors: [0x2bc, 0x3da]
---
0x3b9 JUMPDEST
0x3ba PUSH1 0x2
0x3bc SLOAD
0x3bd PUSH20 0xffffffffffffffffffffffffffffffffffffffff
0x3d2 AND
0x3d3 CALLER
0x3d4 EQ
0x3d5 ISZERO
0x3d6 PUSH2 0x2bc
0x3d9 JUMPI
---
0x3b9: JUMPDEST 
0x3ba: V284 = 0x2
0x3bc: V285 = S[0x2]
0x3bd: V286 = 0xffffffffffffffffffffffffffffffffffffffff
0x3d2: V287 = AND 0xffffffffffffffffffffffffffffffffffffffff V285
0x3d3: V288 = CALLER
0x3d4: V289 = EQ V288 V287
0x3d5: V290 = ISZERO V289
0x3d6: V291 = 0x2bc
0x3d9: JUMPI 0x2bc V290
---
Entry stack: [V11, 0x6c, V83, V100]
Stack pops: 0
Stack additions: []
Exit stack: [V11, 0x6c, V83, V100]

================================

Block 0x3da
[0x3da:0x3eb]
---
Predecessors: [0x3b9]
Successors: [0x480]
---
0x3da DUP2
0x3db MLOAD
0x3dc PUSH2 0x3ec
0x3df SWAP1
0x3e0 PUSH1 0x1
0x3e2 SWAP1
0x3e3 PUSH1 0x20
0x3e5 DUP6
0x3e6 ADD
0x3e7 SWAP1
0x3e8 PUSH2 0x480
0x3eb JUMP
---
0x3db: V292 = M[V83]
0x3dc: V293 = 0x3ec
0x3e0: V294 = 0x1
0x3e3: V295 = 0x20
0x3e6: V296 = ADD V83 0x20
0x3e8: V297 = 0x480
0x3eb: JUMP 0x480
---
Entry stack: [V11, 0x6c, V83, V100]
Stack pops: 2
Stack additions: [S1, S0, 0x3ec, 0x1, V296, V292]
Exit stack: [V11, 0x6c, V83, V100, 0x3ec, 0x1, V296, V292]

================================

Block 0x3ec
[0x3ec:0x3f2]
---
Predecessors: [0x2bc, 0x3ec, 0x4fa]
Successors: [0x6c, 0x29b, 0x3ec]
---
0x3ec JUMPDEST
0x3ed POP
0x3ee PUSH1 0x0
0x3f0 SSTORE
0x3f1 POP
0x3f2 JUMP
---
0x3ec: JUMPDEST 
0x3ee: V298 = 0x0
0x3f0: S[0x0] = S1
0x3f2: JUMP S3
---
Entry stack: [V11, 0x6c, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V11, 0x6c, S5, S4]

================================

Block 0x3f3
[0x3f3:0x431]
---
Predecessors: [0x1a6]
Successors: [0x432, 0x478]
---
0x3f3 JUMPDEST
0x3f4 PUSH1 0x1
0x3f6 DUP1
0x3f7 SLOAD
0x3f8 PUSH1 0x40
0x3fa DUP1
0x3fb MLOAD
0x3fc PUSH1 0x20
0x3fe PUSH1 0x2
0x400 DUP5
0x401 DUP7
0x402 AND
0x403 ISZERO
0x404 PUSH2 0x100
0x407 MUL
0x408 PUSH1 0x0
0x40a NOT
0x40b ADD
0x40c SWAP1
0x40d SWAP5
0x40e AND
0x40f SWAP4
0x410 SWAP1
0x411 SWAP4
0x412 DIV
0x413 PUSH1 0x1f
0x415 DUP2
0x416 ADD
0x417 DUP5
0x418 SWAP1
0x419 DIV
0x41a DUP5
0x41b MUL
0x41c DUP3
0x41d ADD
0x41e DUP5
0x41f ADD
0x420 SWAP1
0x421 SWAP3
0x422 MSTORE
0x423 DUP2
0x424 DUP2
0x425 MSTORE
0x426 SWAP3
0x427 SWAP2
0x428 DUP4
0x429 ADD
0x42a DUP3
0x42b DUP3
0x42c DUP1
0x42d ISZERO
0x42e PUSH2 0x478
0x431 JUMPI
---
0x3f3: JUMPDEST 
0x3f4: V299 = 0x1
0x3f7: V300 = S[0x1]
0x3f8: V301 = 0x40
0x3fb: V302 = M[0x40]
0x3fc: V303 = 0x20
0x3fe: V304 = 0x2
0x402: V305 = AND 0x1 V300
0x403: V306 = ISZERO V305
0x404: V307 = 0x100
0x407: V308 = MUL 0x100 V306
0x408: V309 = 0x0
0x40a: V310 = NOT 0x0
0x40b: V311 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V308
0x40e: V312 = AND V300 V311
0x412: V313 = DIV V312 0x2
0x413: V314 = 0x1f
0x416: V315 = ADD V313 0x1f
0x419: V316 = DIV V315 0x20
0x41b: V317 = MUL 0x20 V316
0x41d: V318 = ADD V302 V317
0x41f: V319 = ADD 0x20 V318
0x422: M[0x40] = V319
0x425: M[V302] = V313
0x429: V320 = ADD V302 0x20
0x42d: V321 = ISZERO V313
0x42e: V322 = 0x478
0x431: JUMPI 0x478 V321
---
Entry stack: [V11, 0x1af]
Stack pops: 0
Stack additions: [V302, 0x1, V313, V320, 0x1, V313]
Exit stack: [V11, 0x1af, V302, 0x1, V313, V320, 0x1, V313]

================================

Block 0x432
[0x432:0x439]
---
Predecessors: [0x3f3]
Successors: [0x43a, 0x44d]
---
0x432 DUP1
0x433 PUSH1 0x1f
0x435 LT
0x436 PUSH2 0x44d
0x439 JUMPI
---
0x433: V323 = 0x1f
0x435: V324 = LT 0x1f V313
0x436: V325 = 0x44d
0x439: JUMPI 0x44d V324
---
Entry stack: [V11, 0x1af, V302, 0x1, V313, V320, 0x1, V313]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V11, 0x1af, V302, 0x1, V313, V320, 0x1, V313]

================================

Block 0x43a
[0x43a:0x44c]
---
Predecessors: [0x432]
Successors: [0x478]
---
0x43a PUSH2 0x100
0x43d DUP1
0x43e DUP4
0x43f SLOAD
0x440 DIV
0x441 MUL
0x442 DUP4
0x443 MSTORE
0x444 SWAP2
0x445 PUSH1 0x20
0x447 ADD
0x448 SWAP2
0x449 PUSH2 0x478
0x44c JUMP
---
0x43a: V326 = 0x100
0x43f: V327 = S[0x1]
0x440: V328 = DIV V327 0x100
0x441: V329 = MUL V328 0x100
0x443: M[V320] = V329
0x445: V330 = 0x20
0x447: V331 = ADD 0x20 V320
0x449: V332 = 0x478
0x44c: JUMP 0x478
---
Entry stack: [V11, 0x1af, V302, 0x1, V313, V320, 0x1, V313]
Stack pops: 3
Stack additions: [V331, S1, S0]
Exit stack: [V11, 0x1af, V302, 0x1, V313, V331, 0x1, V313]

================================

Block 0x44d
[0x44d:0x45a]
---
Predecessors: [0x432]
Successors: [0x45b]
---
0x44d JUMPDEST
0x44e DUP3
0x44f ADD
0x450 SWAP2
0x451 SWAP1
0x452 PUSH1 0x0
0x454 MSTORE
0x455 PUSH1 0x20
0x457 PUSH1 0x0
0x459 SHA3
0x45a SWAP1
---
0x44d: JUMPDEST 
0x44f: V333 = ADD V320 V313
0x452: V334 = 0x0
0x454: M[0x0] = 0x1
0x455: V335 = 0x20
0x457: V336 = 0x0
0x459: V337 = SHA3 0x0 0x20
---
Entry stack: [V11, 0x1af, V302, 0x1, V313, V320, 0x1, V313]
Stack pops: 3
Stack additions: [V333, V337, S2]
Exit stack: [V11, 0x1af, V302, 0x1, V313, V333, V337, V320]

================================

Block 0x45b
[0x45b:0x46e]
---
Predecessors: [0x44d, 0x45b]
Successors: [0x45b, 0x46f]
---
0x45b JUMPDEST
0x45c DUP2
0x45d SLOAD
0x45e DUP2
0x45f MSTORE
0x460 SWAP1
0x461 PUSH1 0x1
0x463 ADD
0x464 SWAP1
0x465 PUSH1 0x20
0x467 ADD
0x468 DUP1
0x469 DUP4
0x46a GT
0x46b PUSH2 0x45b
0x46e JUMPI
---
0x45b: JUMPDEST 
0x45d: V338 = S[S1]
0x45f: M[S0] = V338
0x461: V339 = 0x1
0x463: V340 = ADD 0x1 S1
0x465: V341 = 0x20
0x467: V342 = ADD 0x20 S0
0x46a: V343 = GT V333 V342
0x46b: V344 = 0x45b
0x46e: JUMPI 0x45b V343
---
Entry stack: [V11, 0x1af, V302, 0x1, V313, V333, S1, S0]
Stack pops: 3
Stack additions: [S2, V340, V342]
Exit stack: [V11, 0x1af, V302, 0x1, V313, V333, V340, V342]

================================

Block 0x46f
[0x46f:0x477]
---
Predecessors: [0x45b]
Successors: [0x478]
---
0x46f DUP3
0x470 SWAP1
0x471 SUB
0x472 PUSH1 0x1f
0x474 AND
0x475 DUP3
0x476 ADD
0x477 SWAP2
---
0x471: V345 = SUB V342 V333
0x472: V346 = 0x1f
0x474: V347 = AND 0x1f V345
0x476: V348 = ADD V333 V347
---
Entry stack: [V11, 0x1af, V302, 0x1, V313, V333, V340, V342]
Stack pops: 3
Stack additions: [V348, S1, S2]
Exit stack: [V11, 0x1af, V302, 0x1, V313, V348, V340, V333]

================================

Block 0x478
[0x478:0x47f]
---
Predecessors: [0x3f3, 0x43a, 0x46f]
Successors: [0x1af]
---
0x478 JUMPDEST
0x479 POP
0x47a POP
0x47b POP
0x47c POP
0x47d POP
0x47e DUP2
0x47f JUMP
---
0x478: JUMPDEST 
0x47f: JUMP 0x1af
---
Entry stack: [V11, 0x1af, V302, 0x1, V313, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V11, 0x1af, V302]

================================

Block 0x480
[0x480:0x4b0]
---
Predecessors: [0x25d, 0x3da]
Successors: [0x4b1, 0x4c1]
---
0x480 JUMPDEST
0x481 DUP3
0x482 DUP1
0x483 SLOAD
0x484 PUSH1 0x1
0x486 DUP2
0x487 PUSH1 0x1
0x489 AND
0x48a ISZERO
0x48b PUSH2 0x100
0x48e MUL
0x48f SUB
0x490 AND
0x491 PUSH1 0x2
0x493 SWAP1
0x494 DIV
0x495 SWAP1
0x496 PUSH1 0x0
0x498 MSTORE
0x499 PUSH1 0x20
0x49b PUSH1 0x0
0x49d SHA3
0x49e SWAP1
0x49f PUSH1 0x1f
0x4a1 ADD
0x4a2 PUSH1 0x20
0x4a4 SWAP1
0x4a5 DIV
0x4a6 DUP2
0x4a7 ADD
0x4a8 SWAP3
0x4a9 DUP3
0x4aa PUSH1 0x1f
0x4ac LT
0x4ad PUSH2 0x4c1
0x4b0 JUMPI
---
0x480: JUMPDEST 
0x483: V349 = S[0x1]
0x484: V350 = 0x1
0x487: V351 = 0x1
0x489: V352 = AND 0x1 V349
0x48a: V353 = ISZERO V352
0x48b: V354 = 0x100
0x48e: V355 = MUL 0x100 V353
0x48f: V356 = SUB V355 0x1
0x490: V357 = AND V356 V349
0x491: V358 = 0x2
0x494: V359 = DIV V357 0x2
0x496: V360 = 0x0
0x498: M[0x0] = 0x1
0x499: V361 = 0x20
0x49b: V362 = 0x0
0x49d: V363 = SHA3 0x0 0x20
0x49f: V364 = 0x1f
0x4a1: V365 = ADD 0x1f V359
0x4a2: V366 = 0x20
0x4a5: V367 = DIV V365 0x20
0x4a7: V368 = ADD V363 V367
0x4aa: V369 = 0x1f
0x4ac: V370 = LT 0x1f S0
0x4ad: V371 = 0x4c1
0x4b0: JUMPI 0x4c1 V370
---
Entry stack: [V11, 0x6c, S5, S4, {0x29b, 0x3ec}, 0x1, S1, S0]
Stack pops: 3
Stack additions: [S2, V368, S0, V363, S1]
Exit stack: [V11, 0x6c, S5, S4, {0x29b, 0x3ec}, 0x1, V368, S0, V363, S1]

================================

Block 0x4b1
[0x4b1:0x4c0]
---
Predecessors: [0x480]
Successors: [0x4ee]
---
0x4b1 DUP1
0x4b2 MLOAD
0x4b3 PUSH1 0xff
0x4b5 NOT
0x4b6 AND
0x4b7 DUP4
0x4b8 DUP1
0x4b9 ADD
0x4ba OR
0x4bb DUP6
0x4bc SSTORE
0x4bd PUSH2 0x4ee
0x4c0 JUMP
---
0x4b2: V372 = M[S0]
0x4b3: V373 = 0xff
0x4b5: V374 = NOT 0xff
0x4b6: V375 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V372
0x4b9: V376 = ADD S2 S2
0x4ba: V377 = OR V376 V375
0x4bc: S[0x1] = V377
0x4bd: V378 = 0x4ee
0x4c0: JUMP 0x4ee
---
Entry stack: [V11, 0x6c, S7, S6, {0x29b, 0x3ec}, 0x1, V368, S2, V363, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x29b, 0x3ec}, 0x1, V368, S2, V363, S0]

================================

Block 0x4c1
[0x4c1:0x4cf]
---
Predecessors: [0x480]
Successors: [0x4d0, 0x4ee]
---
0x4c1 JUMPDEST
0x4c2 DUP3
0x4c3 DUP1
0x4c4 ADD
0x4c5 PUSH1 0x1
0x4c7 ADD
0x4c8 DUP6
0x4c9 SSTORE
0x4ca DUP3
0x4cb ISZERO
0x4cc PUSH2 0x4ee
0x4cf JUMPI
---
0x4c1: JUMPDEST 
0x4c4: V379 = ADD S2 S2
0x4c5: V380 = 0x1
0x4c7: V381 = ADD 0x1 V379
0x4c9: S[0x1] = V381
0x4cb: V382 = ISZERO S2
0x4cc: V383 = 0x4ee
0x4cf: JUMPI 0x4ee V382
---
Entry stack: [V11, 0x6c, S7, S6, {0x29b, 0x3ec}, 0x1, V368, S2, V363, S0]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x29b, 0x3ec}, 0x1, V368, S2, V363, S0]

================================

Block 0x4d0
[0x4d0:0x4d2]
---
Predecessors: [0x4c1]
Successors: [0x4d3]
---
0x4d0 SWAP2
0x4d1 DUP3
0x4d2 ADD
---
0x4d2: V384 = ADD S0 S2
---
Entry stack: [V11, 0x6c, S7, S6, {0x29b, 0x3ec}, 0x1, V368, S2, V363, S0]
Stack pops: 3
Stack additions: [S0, S1, V384]
Exit stack: [V11, 0x6c, S7, S6, {0x29b, 0x3ec}, 0x1, V368, S0, V363, V384]

================================

Block 0x4d3
[0x4d3:0x4db]
---
Predecessors: [0x4d0, 0x4dc]
Successors: [0x4dc, 0x4ee]
---
0x4d3 JUMPDEST
0x4d4 DUP3
0x4d5 DUP2
0x4d6 GT
0x4d7 ISZERO
0x4d8 PUSH2 0x4ee
0x4db JUMPI
---
0x4d3: JUMPDEST 
0x4d6: V385 = GT V384 S2
0x4d7: V386 = ISZERO V385
0x4d8: V387 = 0x4ee
0x4db: JUMPI 0x4ee V386
---
Entry stack: [V11, 0x6c, S7, S6, {0x29b, 0x3ec}, 0x1, V368, S2, S1, V384]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x29b, 0x3ec}, 0x1, V368, S2, S1, V384]

================================

Block 0x4dc
[0x4dc:0x4ed]
---
Predecessors: [0x4d3]
Successors: [0x4d3]
---
0x4dc DUP3
0x4dd MLOAD
0x4de DUP3
0x4df SSTORE
0x4e0 SWAP2
0x4e1 PUSH1 0x20
0x4e3 ADD
0x4e4 SWAP2
0x4e5 SWAP1
0x4e6 PUSH1 0x1
0x4e8 ADD
0x4e9 SWAP1
0x4ea PUSH2 0x4d3
0x4ed JUMP
---
0x4dd: V388 = M[S2]
0x4df: S[S1] = V388
0x4e1: V389 = 0x20
0x4e3: V390 = ADD 0x20 S2
0x4e6: V391 = 0x1
0x4e8: V392 = ADD 0x1 S1
0x4ea: V393 = 0x4d3
0x4ed: JUMP 0x4d3
---
Entry stack: [V11, 0x6c, S7, S6, {0x29b, 0x3ec}, 0x1, V368, S2, S1, V384]
Stack pops: 3
Stack additions: [V390, V392, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x29b, 0x3ec}, 0x1, V368, V390, V392, V384]

================================

Block 0x4ee
[0x4ee:0x4f9]
---
Predecessors: [0x4b1, 0x4c1, 0x4d3]
Successors: [0x4fe]
---
0x4ee JUMPDEST
0x4ef POP
0x4f0 PUSH2 0x4fa
0x4f3 SWAP3
0x4f4 SWAP2
0x4f5 POP
0x4f6 PUSH2 0x4fe
0x4f9 JUMP
---
0x4ee: JUMPDEST 
0x4f0: V394 = 0x4fa
0x4f6: V395 = 0x4fe
0x4f9: JUMP 0x4fe
---
Entry stack: [V11, 0x6c, S7, S6, {0x29b, 0x3ec}, 0x1, V368, S2, S1, S0]
Stack pops: 4
Stack additions: [0x4fa, S3, S1]
Exit stack: [V11, 0x6c, S7, S6, {0x29b, 0x3ec}, 0x1, 0x4fa, V368, S1]

================================

Block 0x4fa
[0x4fa:0x4fd]
---
Predecessors: [0x504, 0x518]
Successors: [0x6c, 0x29b, 0x3ec, 0x518]
---
0x4fa JUMPDEST
0x4fb POP
0x4fc SWAP1
0x4fd JUMP
---
0x4fa: JUMPDEST 
0x4fd: JUMP {0x6c, 0x29b, 0x3ec, 0x518}
---
Entry stack: [V11, 0x6c, S7, S6, {0x6c, 0x29b, 0x3ec}, S4, S3, {0x6c, 0x29b, 0x3ec, 0x518}, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V11, 0x6c, S7, S6, {0x6c, 0x29b, 0x3ec}, S4, S3, S1]

================================

Block 0x4fe
[0x4fe:0x503]
---
Predecessors: [0x4ee]
Successors: [0x504]
---
0x4fe JUMPDEST
0x4ff PUSH2 0x518
0x502 SWAP2
0x503 SWAP1
---
0x4fe: JUMPDEST 
0x4ff: V396 = 0x518
---
Entry stack: [V11, 0x6c, S6, S5, {0x29b, 0x3ec}, 0x1, 0x4fa, V368, S0]
Stack pops: 2
Stack additions: [0x518, S1, S0]
Exit stack: [V11, 0x6c, S6, S5, {0x29b, 0x3ec}, 0x1, 0x4fa, 0x518, V368, S0]

================================

Block 0x504
[0x504:0x50c]
---
Predecessors: [0x4fe, 0x50d]
Successors: [0x4fa, 0x50d]
---
0x504 JUMPDEST
0x505 DUP1
0x506 DUP3
0x507 GT
0x508 ISZERO
0x509 PUSH2 0x4fa
0x50c JUMPI
---
0x504: JUMPDEST 
0x507: V397 = GT V368 S0
0x508: V398 = ISZERO V397
0x509: V399 = 0x4fa
0x50c: JUMPI 0x4fa V398
---
Entry stack: [V11, 0x6c, S7, S6, {0x29b, 0x3ec}, 0x1, 0x4fa, 0x518, V368, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V11, 0x6c, S7, S6, {0x29b, 0x3ec}, 0x1, 0x4fa, 0x518, V368, S0]

================================

Block 0x50d
[0x50d:0x517]
---
Predecessors: [0x504]
Successors: [0x504]
---
0x50d PUSH1 0x0
0x50f DUP2
0x510 SSTORE
0x511 PUSH1 0x1
0x513 ADD
0x514 PUSH2 0x504
0x517 JUMP
---
0x50d: V400 = 0x0
0x510: S[S0] = 0x0
0x511: V401 = 0x1
0x513: V402 = ADD 0x1 S0
0x514: V403 = 0x504
0x517: JUMP 0x504
---
Entry stack: [V11, 0x6c, S7, S6, {0x29b, 0x3ec}, 0x1, 0x4fa, 0x518, V368, S0]
Stack pops: 1
Stack additions: [V402]
Exit stack: [V11, 0x6c, S7, S6, {0x29b, 0x3ec}, 0x1, 0x4fa, 0x518, V368, V402]

================================

Block 0x518
[0x518:0x51a]
---
Predecessors: [0x4fa]
Successors: [0x4fa]
---
0x518 JUMPDEST
0x519 SWAP1
0x51a JUMP
---
0x518: JUMPDEST 
0x51a: JUMP S1
---
Entry stack: [V11, 0x6c, S5, S4, {0x6c, 0x29b, 0x3ec}, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V11, 0x6c, S5, S4, {0x6c, 0x29b, 0x3ec}, S2, S0]

================================

Block 0x51b
[0x51b:0x54f]
---
Predecessors: []
Successors: []
---
0x51b STOP
0x51c LOG1
0x51d PUSH6 0x627a7a723058
0x524 SHA3
0x525 PUSH18 0x9d39122b6c4c58482095259e7ec02f9e1cf6
0x538 PUSH23 0x667040449bfbe0ab424270550029
---
0x51b: STOP 
0x51c: LOG S0 S1 S2
0x51d: V404 = 0x627a7a723058
0x524: V405 = SHA3 0x627a7a723058 S3
0x525: V406 = 0x9d39122b6c4c58482095259e7ec02f9e1cf6
0x538: V407 = 0x667040449bfbe0ab424270550029
---
Entry stack: []
Stack pops: 0
Stack additions: [0x667040449bfbe0ab424270550029, 0x9d39122b6c4c58482095259e7ec02f9e1cf6, V405]
Exit stack: []

================================

Function 0:
Public function signature: 0x44c96e4
Entry block: 0x6e
Exit block: 0x6c
Body: 0x6c, 0x6e, 0x224, 0x22e, 0x23e, 0x247, 0x25d, 0x29b, 0x2bc, 0x3ec

Function 1:
Public function signature: 0x3853682c
Entry block: 0xf8
Exit block: 0x6c
Body: 0x6c, 0xf8, 0x29b, 0x2bc, 0x2c0, 0x2d1, 0x2da, 0x2f0, 0x329, 0x335, 0x33b, 0x35e, 0x367, 0x3ec

Function 2:
Public function signature: 0x6cbc2ded
Entry block: 0x144
Exit block: 0x6c
Body: 0x6c, 0x144, 0x367, 0x36a, 0x38b, 0x3ae, 0x3b7

Function 3:
Public function signature: 0x780aee73
Entry block: 0x14c
Exit block: 0x6c
Body: 0x6c, 0x14c, 0x29b, 0x2bc, 0x3b9, 0x3da, 0x3ec

Function 4:
Public function signature: 0xc8166a8a
Entry block: 0x19a
Exit block: 0x216
Body: 0x19a, 0x1a2, 0x1a6, 0x1af, 0x1d1, 0x1da, 0x1e9, 0x1fd, 0x216, 0x3f3, 0x432, 0x43a, 0x44d, 0x45b, 0x46f, 0x478

Function 5:
Public fallback function
Entry block: 0x6c
Exit block: 0x6c
Body: 0x6c

Function 6:
Private function
Entry block: 0x480
Exit block: 0x4fa
Body: 0x480, 0x4b1, 0x4c1, 0x4d0, 0x4d3, 0x4dc, 0x4ee, 0x4fa, 0x4fe, 0x504, 0x50d, 0x518

