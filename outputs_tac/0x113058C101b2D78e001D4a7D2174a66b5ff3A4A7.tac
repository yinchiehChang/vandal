Block 0x0
[0x0:0xa]
---
Predecessors: []
Successors: [0xb, 0xb4]
---
0x0 PUSH1 0x60
0x2 PUSH1 0x40
0x4 MSTORE
0x5 CALLDATASIZE
0x6 ISZERO
0x7 PUSH2 0xb4
0xa JUMPI
---
0x0: V0 = 0x60
0x2: V1 = 0x40
0x4: M[0x40] = 0x60
0x5: V2 = CALLDATASIZE
0x6: V3 = ISZERO V2
0x7: V4 = 0xb4
0xa: JUMPI 0xb4 V3
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0xb
[0xb:0x24]
---
Predecessors: [0x0]
Successors: [0x25, 0xb6]
---
0xb PUSH4 0xffffffff
0x10 PUSH1 0xe0
0x12 PUSH1 0x2
0x14 EXP
0x15 PUSH1 0x0
0x17 CALLDATALOAD
0x18 DIV
0x19 AND
0x1a PUSH4 0x3ca71d6
0x1f DUP2
0x20 EQ
0x21 PUSH2 0xb6
0x24 JUMPI
---
0xb: V5 = 0xffffffff
0x10: V6 = 0xe0
0x12: V7 = 0x2
0x14: V8 = EXP 0x2 0xe0
0x15: V9 = 0x0
0x17: V10 = CALLDATALOAD 0x0
0x18: V11 = DIV V10 0x100000000000000000000000000000000000000000000000000000000
0x19: V12 = AND V11 0xffffffff
0x1a: V13 = 0x3ca71d6
0x20: V14 = EQ V12 0x3ca71d6
0x21: V15 = 0xb6
0x24: JUMPI 0xb6 V14
---
Entry stack: []
Stack pops: 0
Stack additions: [V12]
Exit stack: [V12]

================================

Block 0x25
[0x25:0x2f]
---
Predecessors: [0xb]
Successors: [0x30, 0x10e]
---
0x25 DUP1
0x26 PUSH4 0x13af4035
0x2b EQ
0x2c PUSH2 0x10e
0x2f JUMPI
---
0x26: V16 = 0x13af4035
0x2b: V17 = EQ 0x13af4035 V12
0x2c: V18 = 0x10e
0x2f: JUMPI 0x10e V17
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x30
[0x30:0x3a]
---
Predecessors: [0x25]
Successors: [0x3b, 0x12c]
---
0x30 DUP1
0x31 PUSH4 0x1c31f710
0x36 EQ
0x37 PUSH2 0x12c
0x3a JUMPI
---
0x31: V19 = 0x1c31f710
0x36: V20 = EQ 0x1c31f710 V12
0x37: V21 = 0x12c
0x3a: JUMPI 0x12c V20
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x3b
[0x3b:0x45]
---
Predecessors: [0x30]
Successors: [0x46, 0x14a]
---
0x3b DUP1
0x3c PUSH4 0x38af3eed
0x41 EQ
0x42 PUSH2 0x14a
0x45 JUMPI
---
0x3c: V22 = 0x38af3eed
0x41: V23 = EQ 0x38af3eed V12
0x42: V24 = 0x14a
0x45: JUMPI 0x14a V23
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x46
[0x46:0x50]
---
Predecessors: [0x3b]
Successors: [0x51, 0x176]
---
0x46 DUP1
0x47 PUSH4 0x44a0d68a
0x4c EQ
0x4d PUSH2 0x176
0x50 JUMPI
---
0x47: V25 = 0x44a0d68a
0x4c: V26 = EQ 0x44a0d68a V12
0x4d: V27 = 0x176
0x50: JUMPI 0x176 V26
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x51
[0x51:0x5b]
---
Predecessors: [0x46]
Successors: [0x5c, 0x18b]
---
0x51 DUP1
0x52 PUSH4 0x457f4d41
0x57 EQ
0x58 PUSH2 0x18b
0x5b JUMPI
---
0x52: V28 = 0x457f4d41
0x57: V29 = EQ 0x457f4d41 V12
0x58: V30 = 0x18b
0x5b: JUMPI 0x18b V29
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x5c
[0x5c:0x66]
---
Predecessors: [0x51]
Successors: [0x67, 0x1b7]
---
0x5c DUP1
0x5d PUSH4 0x6e942f82
0x62 EQ
0x63 PUSH2 0x1b7
0x66 JUMPI
---
0x5d: V31 = 0x6e942f82
0x62: V32 = EQ 0x6e942f82 V12
0x63: V33 = 0x1b7
0x66: JUMPI 0x1b7 V32
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x67
[0x67:0x71]
---
Predecessors: [0x5c]
Successors: [0x72, 0x1d9]
---
0x67 DUP1
0x68 PUSH4 0x83197ef0
0x6d EQ
0x6e PUSH2 0x1d9
0x71 JUMPI
---
0x68: V34 = 0x83197ef0
0x6d: V35 = EQ 0x83197ef0 V12
0x6e: V36 = 0x1d9
0x71: JUMPI 0x1d9 V35
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x72
[0x72:0x7c]
---
Predecessors: [0x67]
Successors: [0x7d, 0x1eb]
---
0x72 DUP1
0x73 PUSH4 0x8da5cb5b
0x78 EQ
0x79 PUSH2 0x1eb
0x7c JUMPI
---
0x73: V37 = 0x8da5cb5b
0x78: V38 = EQ 0x8da5cb5b V12
0x79: V39 = 0x1eb
0x7c: JUMPI 0x1eb V38
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x7d
[0x7d:0x87]
---
Predecessors: [0x72]
Successors: [0x88, 0x217]
---
0x7d DUP1
0x7e PUSH4 0xc53833fe
0x83 EQ
0x84 PUSH2 0x217
0x87 JUMPI
---
0x7e: V40 = 0xc53833fe
0x83: V41 = EQ 0xc53833fe V12
0x84: V42 = 0x217
0x87: JUMPI 0x217 V41
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x88
[0x88:0x92]
---
Predecessors: [0x7d]
Successors: [0x93, 0x243]
---
0x88 DUP1
0x89 PUSH4 0xd31fdffd
0x8e EQ
0x8f PUSH2 0x243
0x92 JUMPI
---
0x89: V43 = 0xd31fdffd
0x8e: V44 = EQ 0xd31fdffd V12
0x8f: V45 = 0x243
0x92: JUMPI 0x243 V44
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x93
[0x93:0x9d]
---
Predecessors: [0x88]
Successors: [0x9e, 0x261]
---
0x93 DUP1
0x94 PUSH4 0xf70532fe
0x99 EQ
0x9a PUSH2 0x261
0x9d JUMPI
---
0x94: V46 = 0xf70532fe
0x99: V47 = EQ 0xf70532fe V12
0x9a: V48 = 0x261
0x9d: JUMPI 0x261 V47
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0x9e
[0x9e:0xa8]
---
Predecessors: [0x93]
Successors: [0xa9, 0x29c]
---
0x9e DUP1
0x9f PUSH4 0xf7efd150
0xa4 EQ
0xa5 PUSH2 0x29c
0xa8 JUMPI
---
0x9f: V49 = 0xf7efd150
0xa4: V50 = EQ 0xf7efd150 V12
0xa5: V51 = 0x29c
0xa8: JUMPI 0x29c V50
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xa9
[0xa9:0xb3]
---
Predecessors: [0x9e]
Successors: [0xb4, 0x352]
---
0xa9 DUP1
0xaa PUSH4 0xfdc37c85
0xaf EQ
0xb0 PUSH2 0x352
0xb3 JUMPI
---
0xaa: V52 = 0xfdc37c85
0xaf: V53 = EQ 0xfdc37c85 V12
0xb0: V54 = 0x352
0xb3: JUMPI 0x352 V53
---
Entry stack: [V12]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12]

================================

Block 0xb4
[0xb4:0xb5]
---
Predecessors: [0x0, 0xa9]
Successors: []
---
0xb4 JUMPDEST
0xb5 INVALID
---
0xb4: JUMPDEST 
0xb5: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xb6
[0xb6:0xbc]
---
Predecessors: [0xb]
Successors: [0xbd, 0xbe]
---
0xb6 JUMPDEST
0xb7 CALLVALUE
0xb8 ISZERO
0xb9 PUSH2 0xbe
0xbc JUMPI
---
0xb6: JUMPDEST 
0xb7: V55 = CALLVALUE
0xb8: V56 = ISZERO V55
0xb9: V57 = 0xbe
0xbc: JUMPI 0xbe V56
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbd
[0xbd:0xbd]
---
Predecessors: [0xb6]
Successors: []
---
0xbd INVALID
---
0xbd: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0xbe
[0xbe:0x10b]
---
Predecessors: [0xb6]
Successors: [0x3e2]
---
0xbe JUMPDEST
0xbf PUSH2 0x10c
0xc2 PUSH1 0x4
0xc4 DUP1
0xc5 DUP1
0xc6 CALLDATALOAD
0xc7 SWAP1
0xc8 PUSH1 0x20
0xca ADD
0xcb SWAP1
0xcc DUP3
0xcd ADD
0xce DUP1
0xcf CALLDATALOAD
0xd0 SWAP1
0xd1 PUSH1 0x20
0xd3 ADD
0xd4 SWAP1
0xd5 DUP1
0xd6 DUP1
0xd7 PUSH1 0x1f
0xd9 ADD
0xda PUSH1 0x20
0xdc DUP1
0xdd SWAP2
0xde DIV
0xdf MUL
0xe0 PUSH1 0x20
0xe2 ADD
0xe3 PUSH1 0x40
0xe5 MLOAD
0xe6 SWAP1
0xe7 DUP2
0xe8 ADD
0xe9 PUSH1 0x40
0xeb MSTORE
0xec DUP1
0xed SWAP4
0xee SWAP3
0xef SWAP2
0xf0 SWAP1
0xf1 DUP2
0xf2 DUP2
0xf3 MSTORE
0xf4 PUSH1 0x20
0xf6 ADD
0xf7 DUP4
0xf8 DUP4
0xf9 DUP1
0xfa DUP3
0xfb DUP5
0xfc CALLDATACOPY
0xfd POP
0xfe SWAP5
0xff SWAP7
0x100 POP
0x101 PUSH2 0x3e2
0x104 SWAP6
0x105 POP
0x106 POP
0x107 POP
0x108 POP
0x109 POP
0x10a POP
0x10b JUMP
---
0xbe: JUMPDEST 
0xbf: V58 = 0x10c
0xc2: V59 = 0x4
0xc6: V60 = CALLDATALOAD 0x4
0xc8: V61 = 0x20
0xca: V62 = ADD 0x20 0x4
0xcd: V63 = ADD 0x4 V60
0xcf: V64 = CALLDATALOAD V63
0xd1: V65 = 0x20
0xd3: V66 = ADD 0x20 V63
0xd7: V67 = 0x1f
0xd9: V68 = ADD 0x1f V64
0xda: V69 = 0x20
0xde: V70 = DIV V68 0x20
0xdf: V71 = MUL V70 0x20
0xe0: V72 = 0x20
0xe2: V73 = ADD 0x20 V71
0xe3: V74 = 0x40
0xe5: V75 = M[0x40]
0xe8: V76 = ADD V75 V73
0xe9: V77 = 0x40
0xeb: M[0x40] = V76
0xf3: M[V75] = V64
0xf4: V78 = 0x20
0xf6: V79 = ADD 0x20 V75
0xfc: CALLDATACOPY V79 V66 V64
0x101: V80 = 0x3e2
0x10b: JUMP 0x3e2
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10c, V75]
Exit stack: [V12, 0x10c, V75]

================================

Block 0x10c
[0x10c:0x10d]
---
Predecessors: [0x413, 0x44e, 0x489, 0x4bd, 0x597]
Successors: []
---
0x10c JUMPDEST
0x10d STOP
---
0x10c: JUMPDEST 
0x10d: STOP 
---
Entry stack: [V12, 0x15a, V259, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x10e
[0x10e:0x114]
---
Predecessors: [0x25]
Successors: [0x115, 0x116]
---
0x10e JUMPDEST
0x10f CALLVALUE
0x110 ISZERO
0x111 PUSH2 0x116
0x114 JUMPI
---
0x10e: JUMPDEST 
0x10f: V81 = CALLVALUE
0x110: V82 = ISZERO V81
0x111: V83 = 0x116
0x114: JUMPI 0x116 V82
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x115
[0x115:0x115]
---
Predecessors: [0x10e]
Successors: []
---
0x115 INVALID
---
0x115: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x116
[0x116:0x129]
---
Predecessors: [0x10e]
Successors: [0x416]
---
0x116 JUMPDEST
0x117 PUSH2 0x10c
0x11a PUSH1 0x1
0x11c PUSH1 0xa0
0x11e PUSH1 0x2
0x120 EXP
0x121 SUB
0x122 PUSH1 0x4
0x124 CALLDATALOAD
0x125 AND
0x126 PUSH2 0x416
0x129 JUMP
---
0x116: JUMPDEST 
0x117: V84 = 0x10c
0x11a: V85 = 0x1
0x11c: V86 = 0xa0
0x11e: V87 = 0x2
0x120: V88 = EXP 0x2 0xa0
0x121: V89 = SUB 0x10000000000000000000000000000000000000000 0x1
0x122: V90 = 0x4
0x124: V91 = CALLDATALOAD 0x4
0x125: V92 = AND V91 0xffffffffffffffffffffffffffffffffffffffff
0x126: V93 = 0x416
0x129: JUMP 0x416
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10c, V92]
Exit stack: [V12, 0x10c, V92]

================================

Block 0x12a
[0x12a:0x12b]
---
Predecessors: []
Successors: []
---
0x12a JUMPDEST
0x12b STOP
---
0x12a: JUMPDEST 
0x12b: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x12c
[0x12c:0x132]
---
Predecessors: [0x30]
Successors: [0x133, 0x134]
---
0x12c JUMPDEST
0x12d CALLVALUE
0x12e ISZERO
0x12f PUSH2 0x134
0x132 JUMPI
---
0x12c: JUMPDEST 
0x12d: V94 = CALLVALUE
0x12e: V95 = ISZERO V94
0x12f: V96 = 0x134
0x132: JUMPI 0x134 V95
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x133
[0x133:0x133]
---
Predecessors: [0x12c]
Successors: []
---
0x133 INVALID
---
0x133: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x134
[0x134:0x147]
---
Predecessors: [0x12c]
Successors: [0x451]
---
0x134 JUMPDEST
0x135 PUSH2 0x10c
0x138 PUSH1 0x1
0x13a PUSH1 0xa0
0x13c PUSH1 0x2
0x13e EXP
0x13f SUB
0x140 PUSH1 0x4
0x142 CALLDATALOAD
0x143 AND
0x144 PUSH2 0x451
0x147 JUMP
---
0x134: JUMPDEST 
0x135: V97 = 0x10c
0x138: V98 = 0x1
0x13a: V99 = 0xa0
0x13c: V100 = 0x2
0x13e: V101 = EXP 0x2 0xa0
0x13f: V102 = SUB 0x10000000000000000000000000000000000000000 0x1
0x140: V103 = 0x4
0x142: V104 = CALLDATALOAD 0x4
0x143: V105 = AND V104 0xffffffffffffffffffffffffffffffffffffffff
0x144: V106 = 0x451
0x147: JUMP 0x451
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10c, V105]
Exit stack: [V12, 0x10c, V105]

================================

Block 0x148
[0x148:0x149]
---
Predecessors: []
Successors: []
---
0x148 JUMPDEST
0x149 STOP
---
0x148: JUMPDEST 
0x149: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x14a
[0x14a:0x150]
---
Predecessors: [0x3b]
Successors: [0x151, 0x152]
---
0x14a JUMPDEST
0x14b CALLVALUE
0x14c ISZERO
0x14d PUSH2 0x152
0x150 JUMPI
---
0x14a: JUMPDEST 
0x14b: V107 = CALLVALUE
0x14c: V108 = ISZERO V107
0x14d: V109 = 0x152
0x150: JUMPI 0x152 V108
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x151
[0x151:0x151]
---
Predecessors: [0x14a]
Successors: []
---
0x151 INVALID
---
0x151: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x152
[0x152:0x159]
---
Predecessors: [0x14a]
Successors: [0x48c]
---
0x152 JUMPDEST
0x153 PUSH2 0x15a
0x156 PUSH2 0x48c
0x159 JUMP
---
0x152: JUMPDEST 
0x153: V110 = 0x15a
0x156: V111 = 0x48c
0x159: JUMP 0x48c
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a]
Exit stack: [V12, 0x15a]

================================

Block 0x15a
[0x15a:0x175]
---
Predecessors: [0x48c, 0x4c0, 0x4ff, 0x55b, 0x5c3, 0x987]
Successors: []
---
0x15a JUMPDEST
0x15b PUSH1 0x40
0x15d DUP1
0x15e MLOAD
0x15f PUSH1 0x1
0x161 PUSH1 0xa0
0x163 PUSH1 0x2
0x165 EXP
0x166 SUB
0x167 SWAP1
0x168 SWAP3
0x169 AND
0x16a DUP3
0x16b MSTORE
0x16c MLOAD
0x16d SWAP1
0x16e DUP2
0x16f SWAP1
0x170 SUB
0x171 PUSH1 0x20
0x173 ADD
0x174 SWAP1
0x175 RETURN
---
0x15a: JUMPDEST 
0x15b: V112 = 0x40
0x15e: V113 = M[0x40]
0x15f: V114 = 0x1
0x161: V115 = 0xa0
0x163: V116 = 0x2
0x165: V117 = EXP 0x2 0xa0
0x166: V118 = SUB 0x10000000000000000000000000000000000000000 0x1
0x169: V119 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x16b: M[V113] = V119
0x16c: V120 = M[0x40]
0x170: V121 = SUB V113 V120
0x171: V122 = 0x20
0x173: V123 = ADD 0x20 V121
0x175: RETURN V120 V123
---
Entry stack: [V12, 0x15a, V259, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15a, V259, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x176
[0x176:0x17c]
---
Predecessors: [0x46]
Successors: [0x17d, 0x17e]
---
0x176 JUMPDEST
0x177 CALLVALUE
0x178 ISZERO
0x179 PUSH2 0x17e
0x17c JUMPI
---
0x176: JUMPDEST 
0x177: V124 = CALLVALUE
0x178: V125 = ISZERO V124
0x179: V126 = 0x17e
0x17c: JUMPI 0x17e V125
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17d
[0x17d:0x17d]
---
Predecessors: [0x176]
Successors: []
---
0x17d INVALID
---
0x17d: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x17e
[0x17e:0x188]
---
Predecessors: [0x176]
Successors: [0x49b]
---
0x17e JUMPDEST
0x17f PUSH2 0x10c
0x182 PUSH1 0x4
0x184 CALLDATALOAD
0x185 PUSH2 0x49b
0x188 JUMP
---
0x17e: JUMPDEST 
0x17f: V127 = 0x10c
0x182: V128 = 0x4
0x184: V129 = CALLDATALOAD 0x4
0x185: V130 = 0x49b
0x188: JUMP 0x49b
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10c, V129]
Exit stack: [V12, 0x10c, V129]

================================

Block 0x189
[0x189:0x18a]
---
Predecessors: []
Successors: []
---
0x189 JUMPDEST
0x18a STOP
---
0x189: JUMPDEST 
0x18a: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x18b
[0x18b:0x191]
---
Predecessors: [0x51]
Successors: [0x192, 0x193]
---
0x18b JUMPDEST
0x18c CALLVALUE
0x18d ISZERO
0x18e PUSH2 0x193
0x191 JUMPI
---
0x18b: JUMPDEST 
0x18c: V131 = CALLVALUE
0x18d: V132 = ISZERO V131
0x18e: V133 = 0x193
0x191: JUMPI 0x193 V132
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x192
[0x192:0x192]
---
Predecessors: [0x18b]
Successors: []
---
0x192 INVALID
---
0x192: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x193
[0x193:0x19a]
---
Predecessors: [0x18b]
Successors: [0x4c0]
---
0x193 JUMPDEST
0x194 PUSH2 0x15a
0x197 PUSH2 0x4c0
0x19a JUMP
---
0x193: JUMPDEST 
0x194: V134 = 0x15a
0x197: V135 = 0x4c0
0x19a: JUMP 0x4c0
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a]
Exit stack: [V12, 0x15a]

================================

Block 0x19b
[0x19b:0x1b6]
---
Predecessors: []
Successors: []
---
0x19b JUMPDEST
0x19c PUSH1 0x40
0x19e DUP1
0x19f MLOAD
0x1a0 PUSH1 0x1
0x1a2 PUSH1 0xa0
0x1a4 PUSH1 0x2
0x1a6 EXP
0x1a7 SUB
0x1a8 SWAP1
0x1a9 SWAP3
0x1aa AND
0x1ab DUP3
0x1ac MSTORE
0x1ad MLOAD
0x1ae SWAP1
0x1af DUP2
0x1b0 SWAP1
0x1b1 SUB
0x1b2 PUSH1 0x20
0x1b4 ADD
0x1b5 SWAP1
0x1b6 RETURN
---
0x19b: JUMPDEST 
0x19c: V136 = 0x40
0x19f: V137 = M[0x40]
0x1a0: V138 = 0x1
0x1a2: V139 = 0xa0
0x1a4: V140 = 0x2
0x1a6: V141 = EXP 0x2 0xa0
0x1a7: V142 = SUB 0x10000000000000000000000000000000000000000 0x1
0x1aa: V143 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x1ac: M[V137] = V143
0x1ad: V144 = M[0x40]
0x1b1: V145 = SUB V137 V144
0x1b2: V146 = 0x20
0x1b4: V147 = ADD 0x20 V145
0x1b6: RETURN V144 V147
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x1b7
[0x1b7:0x1bd]
---
Predecessors: [0x5c]
Successors: [0x1be, 0x1bf]
---
0x1b7 JUMPDEST
0x1b8 CALLVALUE
0x1b9 ISZERO
0x1ba PUSH2 0x1bf
0x1bd JUMPI
---
0x1b7: JUMPDEST 
0x1b8: V148 = CALLVALUE
0x1b9: V149 = ISZERO V148
0x1ba: V150 = 0x1bf
0x1bd: JUMPI 0x1bf V149
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1be
[0x1be:0x1be]
---
Predecessors: [0x1b7]
Successors: []
---
0x1be INVALID
---
0x1be: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1bf
[0x1bf:0x1c6]
---
Predecessors: [0x1b7]
Successors: [0x4cf]
---
0x1bf JUMPDEST
0x1c0 PUSH2 0x1c7
0x1c3 PUSH2 0x4cf
0x1c6 JUMP
---
0x1bf: JUMPDEST 
0x1c0: V151 = 0x1c7
0x1c3: V152 = 0x4cf
0x1c6: JUMP 0x4cf
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x1c7]
Exit stack: [V12, 0x1c7]

================================

Block 0x1c7
[0x1c7:0x1d8]
---
Predecessors: [0x4cf]
Successors: []
---
0x1c7 JUMPDEST
0x1c8 PUSH1 0x40
0x1ca DUP1
0x1cb MLOAD
0x1cc SWAP2
0x1cd DUP3
0x1ce MSTORE
0x1cf MLOAD
0x1d0 SWAP1
0x1d1 DUP2
0x1d2 SWAP1
0x1d3 SUB
0x1d4 PUSH1 0x20
0x1d6 ADD
0x1d7 SWAP1
0x1d8 RETURN
---
0x1c7: JUMPDEST 
0x1c8: V153 = 0x40
0x1cb: V154 = M[0x40]
0x1ce: M[V154] = V465
0x1cf: V155 = M[0x40]
0x1d3: V156 = SUB V154 V155
0x1d4: V157 = 0x20
0x1d6: V158 = ADD 0x20 V156
0x1d8: RETURN V155 V158
---
Entry stack: [V12, 0x1c7, V465]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x1c7]

================================

Block 0x1d9
[0x1d9:0x1df]
---
Predecessors: [0x67]
Successors: [0x1e0, 0x1e1]
---
0x1d9 JUMPDEST
0x1da CALLVALUE
0x1db ISZERO
0x1dc PUSH2 0x1e1
0x1df JUMPI
---
0x1d9: JUMPDEST 
0x1da: V159 = CALLVALUE
0x1db: V160 = ISZERO V159
0x1dc: V161 = 0x1e1
0x1df: JUMPI 0x1e1 V160
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e0
[0x1e0:0x1e0]
---
Predecessors: [0x1d9]
Successors: []
---
0x1e0 INVALID
---
0x1e0: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1e1
[0x1e1:0x1e8]
---
Predecessors: [0x1d9]
Successors: [0x4d5]
---
0x1e1 JUMPDEST
0x1e2 PUSH2 0x10c
0x1e5 PUSH2 0x4d5
0x1e8 JUMP
---
0x1e1: JUMPDEST 
0x1e2: V162 = 0x10c
0x1e5: V163 = 0x4d5
0x1e8: JUMP 0x4d5
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10c]
Exit stack: [V12, 0x10c]

================================

Block 0x1e9
[0x1e9:0x1ea]
---
Predecessors: []
Successors: []
---
0x1e9 JUMPDEST
0x1ea STOP
---
0x1e9: JUMPDEST 
0x1ea: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x1eb
[0x1eb:0x1f1]
---
Predecessors: [0x72]
Successors: [0x1f2, 0x1f3]
---
0x1eb JUMPDEST
0x1ec CALLVALUE
0x1ed ISZERO
0x1ee PUSH2 0x1f3
0x1f1 JUMPI
---
0x1eb: JUMPDEST 
0x1ec: V164 = CALLVALUE
0x1ed: V165 = ISZERO V164
0x1ee: V166 = 0x1f3
0x1f1: JUMPI 0x1f3 V165
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f2
[0x1f2:0x1f2]
---
Predecessors: [0x1eb]
Successors: []
---
0x1f2 INVALID
---
0x1f2: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x1f3
[0x1f3:0x1fa]
---
Predecessors: [0x1eb]
Successors: [0x4ff]
---
0x1f3 JUMPDEST
0x1f4 PUSH2 0x15a
0x1f7 PUSH2 0x4ff
0x1fa JUMP
---
0x1f3: JUMPDEST 
0x1f4: V167 = 0x15a
0x1f7: V168 = 0x4ff
0x1fa: JUMP 0x4ff
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a]
Exit stack: [V12, 0x15a]

================================

Block 0x1fb
[0x1fb:0x216]
---
Predecessors: []
Successors: []
---
0x1fb JUMPDEST
0x1fc PUSH1 0x40
0x1fe DUP1
0x1ff MLOAD
0x200 PUSH1 0x1
0x202 PUSH1 0xa0
0x204 PUSH1 0x2
0x206 EXP
0x207 SUB
0x208 SWAP1
0x209 SWAP3
0x20a AND
0x20b DUP3
0x20c MSTORE
0x20d MLOAD
0x20e SWAP1
0x20f DUP2
0x210 SWAP1
0x211 SUB
0x212 PUSH1 0x20
0x214 ADD
0x215 SWAP1
0x216 RETURN
---
0x1fb: JUMPDEST 
0x1fc: V169 = 0x40
0x1ff: V170 = M[0x40]
0x200: V171 = 0x1
0x202: V172 = 0xa0
0x204: V173 = 0x2
0x206: V174 = EXP 0x2 0xa0
0x207: V175 = SUB 0x10000000000000000000000000000000000000000 0x1
0x20a: V176 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x20c: M[V170] = V176
0x20d: V177 = M[0x40]
0x211: V178 = SUB V170 V177
0x212: V179 = 0x20
0x214: V180 = ADD 0x20 V178
0x216: RETURN V177 V180
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x217
[0x217:0x21d]
---
Predecessors: [0x7d]
Successors: [0x21e, 0x21f]
---
0x217 JUMPDEST
0x218 CALLVALUE
0x219 ISZERO
0x21a PUSH2 0x21f
0x21d JUMPI
---
0x217: JUMPDEST 
0x218: V181 = CALLVALUE
0x219: V182 = ISZERO V181
0x21a: V183 = 0x21f
0x21d: JUMPI 0x21f V182
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21e
[0x21e:0x21e]
---
Predecessors: [0x217]
Successors: []
---
0x21e INVALID
---
0x21e: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x21f
[0x21f:0x226]
---
Predecessors: [0x217]
Successors: [0x50e]
---
0x21f JUMPDEST
0x220 PUSH2 0x15a
0x223 PUSH2 0x50e
0x226 JUMP
---
0x21f: JUMPDEST 
0x220: V184 = 0x15a
0x223: V185 = 0x50e
0x226: JUMP 0x50e
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a]
Exit stack: [V12, 0x15a]

================================

Block 0x227
[0x227:0x242]
---
Predecessors: []
Successors: []
---
0x227 JUMPDEST
0x228 PUSH1 0x40
0x22a DUP1
0x22b MLOAD
0x22c PUSH1 0x1
0x22e PUSH1 0xa0
0x230 PUSH1 0x2
0x232 EXP
0x233 SUB
0x234 SWAP1
0x235 SWAP3
0x236 AND
0x237 DUP3
0x238 MSTORE
0x239 MLOAD
0x23a SWAP1
0x23b DUP2
0x23c SWAP1
0x23d SUB
0x23e PUSH1 0x20
0x240 ADD
0x241 SWAP1
0x242 RETURN
---
0x227: JUMPDEST 
0x228: V186 = 0x40
0x22b: V187 = M[0x40]
0x22c: V188 = 0x1
0x22e: V189 = 0xa0
0x230: V190 = 0x2
0x232: V191 = EXP 0x2 0xa0
0x233: V192 = SUB 0x10000000000000000000000000000000000000000 0x1
0x236: V193 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x238: M[V187] = V193
0x239: V194 = M[0x40]
0x23d: V195 = SUB V187 V194
0x23e: V196 = 0x20
0x240: V197 = ADD 0x20 V195
0x242: RETURN V194 V197
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x243
[0x243:0x249]
---
Predecessors: [0x88]
Successors: [0x24a, 0x24b]
---
0x243 JUMPDEST
0x244 CALLVALUE
0x245 ISZERO
0x246 PUSH2 0x24b
0x249 JUMPI
---
0x243: JUMPDEST 
0x244: V198 = CALLVALUE
0x245: V199 = ISZERO V198
0x246: V200 = 0x24b
0x249: JUMPI 0x24b V199
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24a
[0x24a:0x24a]
---
Predecessors: [0x243]
Successors: []
---
0x24a INVALID
---
0x24a: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x24b
[0x24b:0x25e]
---
Predecessors: [0x243]
Successors: [0x55f]
---
0x24b JUMPDEST
0x24c PUSH2 0x10c
0x24f PUSH1 0x1
0x251 PUSH1 0xa0
0x253 PUSH1 0x2
0x255 EXP
0x256 SUB
0x257 PUSH1 0x4
0x259 CALLDATALOAD
0x25a AND
0x25b PUSH2 0x55f
0x25e JUMP
---
0x24b: JUMPDEST 
0x24c: V201 = 0x10c
0x24f: V202 = 0x1
0x251: V203 = 0xa0
0x253: V204 = 0x2
0x255: V205 = EXP 0x2 0xa0
0x256: V206 = SUB 0x10000000000000000000000000000000000000000 0x1
0x257: V207 = 0x4
0x259: V208 = CALLDATALOAD 0x4
0x25a: V209 = AND V208 0xffffffffffffffffffffffffffffffffffffffff
0x25b: V210 = 0x55f
0x25e: JUMP 0x55f
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x10c, V209]
Exit stack: [V12, 0x10c, V209]

================================

Block 0x25f
[0x25f:0x260]
---
Predecessors: []
Successors: []
---
0x25f JUMPDEST
0x260 STOP
---
0x25f: JUMPDEST 
0x260: STOP 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x261
[0x261:0x267]
---
Predecessors: [0x93]
Successors: [0x268, 0x269]
---
0x261 JUMPDEST
0x262 CALLVALUE
0x263 ISZERO
0x264 PUSH2 0x269
0x267 JUMPI
---
0x261: JUMPDEST 
0x262: V211 = CALLVALUE
0x263: V212 = ISZERO V211
0x264: V213 = 0x269
0x267: JUMPI 0x269 V212
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x268
[0x268:0x268]
---
Predecessors: [0x261]
Successors: []
---
0x268 INVALID
---
0x268: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x269
[0x269:0x27f]
---
Predecessors: [0x261]
Successors: [0x59a]
---
0x269 JUMPDEST
0x26a PUSH2 0x15a
0x26d PUSH1 0x1
0x26f PUSH1 0xa0
0x271 PUSH1 0x2
0x273 EXP
0x274 SUB
0x275 PUSH1 0x4
0x277 CALLDATALOAD
0x278 AND
0x279 PUSH1 0x24
0x27b CALLDATALOAD
0x27c PUSH2 0x59a
0x27f JUMP
---
0x269: JUMPDEST 
0x26a: V214 = 0x15a
0x26d: V215 = 0x1
0x26f: V216 = 0xa0
0x271: V217 = 0x2
0x273: V218 = EXP 0x2 0xa0
0x274: V219 = SUB 0x10000000000000000000000000000000000000000 0x1
0x275: V220 = 0x4
0x277: V221 = CALLDATALOAD 0x4
0x278: V222 = AND V221 0xffffffffffffffffffffffffffffffffffffffff
0x279: V223 = 0x24
0x27b: V224 = CALLDATALOAD 0x24
0x27c: V225 = 0x59a
0x27f: JUMP 0x59a
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V222, V224]
Exit stack: [V12, 0x15a, V222, V224]

================================

Block 0x280
[0x280:0x29b]
---
Predecessors: []
Successors: []
---
0x280 JUMPDEST
0x281 PUSH1 0x40
0x283 DUP1
0x284 MLOAD
0x285 PUSH1 0x1
0x287 PUSH1 0xa0
0x289 PUSH1 0x2
0x28b EXP
0x28c SUB
0x28d SWAP1
0x28e SWAP3
0x28f AND
0x290 DUP3
0x291 MSTORE
0x292 MLOAD
0x293 SWAP1
0x294 DUP2
0x295 SWAP1
0x296 SUB
0x297 PUSH1 0x20
0x299 ADD
0x29a SWAP1
0x29b RETURN
---
0x280: JUMPDEST 
0x281: V226 = 0x40
0x284: V227 = M[0x40]
0x285: V228 = 0x1
0x287: V229 = 0xa0
0x289: V230 = 0x2
0x28b: V231 = EXP 0x2 0xa0
0x28c: V232 = SUB 0x10000000000000000000000000000000000000000 0x1
0x28f: V233 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x291: M[V227] = V233
0x292: V234 = M[0x40]
0x296: V235 = SUB V227 V234
0x297: V236 = 0x20
0x299: V237 = ADD 0x20 V235
0x29b: RETURN V234 V237
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x29c
[0x29c:0x335]
---
Predecessors: [0x9e]
Successors: [0x5dc]
---
0x29c JUMPDEST
0x29d PUSH1 0x40
0x29f DUP1
0x2a0 MLOAD
0x2a1 PUSH1 0x20
0x2a3 PUSH1 0x4
0x2a5 PUSH1 0x44
0x2a7 CALLDATALOAD
0x2a8 DUP2
0x2a9 DUP2
0x2aa ADD
0x2ab CALLDATALOAD
0x2ac PUSH1 0x1f
0x2ae DUP2
0x2af ADD
0x2b0 DUP5
0x2b1 SWAP1
0x2b2 DIV
0x2b3 DUP5
0x2b4 MUL
0x2b5 DUP6
0x2b6 ADD
0x2b7 DUP5
0x2b8 ADD
0x2b9 SWAP1
0x2ba SWAP6
0x2bb MSTORE
0x2bc DUP5
0x2bd DUP5
0x2be MSTORE
0x2bf PUSH2 0x15a
0x2c2 SWAP5
0x2c3 DUP3
0x2c4 CALLDATALOAD
0x2c5 PUSH1 0x1
0x2c7 PUSH1 0xa0
0x2c9 PUSH1 0x2
0x2cb EXP
0x2cc SUB
0x2cd SWAP1
0x2ce DUP2
0x2cf AND
0x2d0 SWAP6
0x2d1 PUSH1 0x24
0x2d3 DUP1
0x2d4 CALLDATALOAD
0x2d5 SWAP1
0x2d6 SWAP3
0x2d7 AND
0x2d8 SWAP6
0x2d9 PUSH1 0x64
0x2db SWAP5
0x2dc SWAP2
0x2dd SWAP4
0x2de SWAP3
0x2df SWAP1
0x2e0 SWAP2
0x2e1 ADD
0x2e2 SWAP2
0x2e3 SWAP1
0x2e4 DUP2
0x2e5 SWAP1
0x2e6 DUP5
0x2e7 ADD
0x2e8 DUP4
0x2e9 DUP3
0x2ea DUP1
0x2eb DUP3
0x2ec DUP5
0x2ed CALLDATACOPY
0x2ee POP
0x2ef SWAP5
0x2f0 SWAP7
0x2f1 POP
0x2f2 POP
0x2f3 DUP5
0x2f4 CALLDATALOAD
0x2f5 SWAP5
0x2f6 PUSH1 0x20
0x2f8 DUP2
0x2f9 ADD
0x2fa CALLDATALOAD
0x2fb SWAP5
0x2fc POP
0x2fd PUSH1 0x40
0x2ff DUP2
0x300 ADD
0x301 CALLDATALOAD
0x302 SWAP4
0x303 POP
0x304 PUSH1 0x60
0x306 DUP2
0x307 ADD
0x308 CALLDATALOAD
0x309 SWAP3
0x30a POP
0x30b PUSH1 0x80
0x30d DUP2
0x30e ADD
0x30f CALLDATALOAD
0x310 SWAP2
0x311 POP
0x312 PUSH1 0xa0
0x314 DUP2
0x315 ADD
0x316 CALLDATALOAD
0x317 SWAP1
0x318 PUSH1 0xc0
0x31a DUP2
0x31b ADD
0x31c CALLDATALOAD
0x31d SWAP1
0x31e PUSH1 0xe0
0x320 DUP2
0x321 ADD
0x322 CALLDATALOAD
0x323 SWAP1
0x324 PUSH2 0x100
0x327 ADD
0x328 CALLDATALOAD
0x329 PUSH1 0x1
0x32b PUSH1 0xa0
0x32d PUSH1 0x2
0x32f EXP
0x330 SUB
0x331 AND
0x332 PUSH2 0x5dc
0x335 JUMP
---
0x29c: JUMPDEST 
0x29d: V238 = 0x40
0x2a0: V239 = M[0x40]
0x2a1: V240 = 0x20
0x2a3: V241 = 0x4
0x2a5: V242 = 0x44
0x2a7: V243 = CALLDATALOAD 0x44
0x2aa: V244 = ADD V243 0x4
0x2ab: V245 = CALLDATALOAD V244
0x2ac: V246 = 0x1f
0x2af: V247 = ADD V245 0x1f
0x2b2: V248 = DIV V247 0x20
0x2b4: V249 = MUL 0x20 V248
0x2b6: V250 = ADD V239 V249
0x2b8: V251 = ADD 0x20 V250
0x2bb: M[0x40] = V251
0x2be: M[V239] = V245
0x2bf: V252 = 0x15a
0x2c4: V253 = CALLDATALOAD 0x4
0x2c5: V254 = 0x1
0x2c7: V255 = 0xa0
0x2c9: V256 = 0x2
0x2cb: V257 = EXP 0x2 0xa0
0x2cc: V258 = SUB 0x10000000000000000000000000000000000000000 0x1
0x2cf: V259 = AND 0xffffffffffffffffffffffffffffffffffffffff V253
0x2d1: V260 = 0x24
0x2d4: V261 = CALLDATALOAD 0x24
0x2d7: V262 = AND 0xffffffffffffffffffffffffffffffffffffffff V261
0x2d9: V263 = 0x64
0x2e1: V264 = ADD V243 0x24
0x2e7: V265 = ADD V239 0x20
0x2ed: CALLDATACOPY V265 V264 V245
0x2f4: V266 = CALLDATALOAD 0x64
0x2f6: V267 = 0x20
0x2f9: V268 = ADD 0x64 0x20
0x2fa: V269 = CALLDATALOAD 0x84
0x2fd: V270 = 0x40
0x300: V271 = ADD 0x64 0x40
0x301: V272 = CALLDATALOAD 0xa4
0x304: V273 = 0x60
0x307: V274 = ADD 0x64 0x60
0x308: V275 = CALLDATALOAD 0xc4
0x30b: V276 = 0x80
0x30e: V277 = ADD 0x64 0x80
0x30f: V278 = CALLDATALOAD 0xe4
0x312: V279 = 0xa0
0x315: V280 = ADD 0x64 0xa0
0x316: V281 = CALLDATALOAD 0x104
0x318: V282 = 0xc0
0x31b: V283 = ADD 0x64 0xc0
0x31c: V284 = CALLDATALOAD 0x124
0x31e: V285 = 0xe0
0x321: V286 = ADD 0x64 0xe0
0x322: V287 = CALLDATALOAD 0x144
0x324: V288 = 0x100
0x327: V289 = ADD 0x100 0x64
0x328: V290 = CALLDATALOAD 0x164
0x329: V291 = 0x1
0x32b: V292 = 0xa0
0x32d: V293 = 0x2
0x32f: V294 = EXP 0x2 0xa0
0x330: V295 = SUB 0x10000000000000000000000000000000000000000 0x1
0x331: V296 = AND 0xffffffffffffffffffffffffffffffffffffffff V290
0x332: V297 = 0x5dc
0x335: JUMP 0x5dc
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296]

================================

Block 0x336
[0x336:0x351]
---
Predecessors: []
Successors: []
---
0x336 JUMPDEST
0x337 PUSH1 0x40
0x339 DUP1
0x33a MLOAD
0x33b PUSH1 0x1
0x33d PUSH1 0xa0
0x33f PUSH1 0x2
0x341 EXP
0x342 SUB
0x343 SWAP1
0x344 SWAP3
0x345 AND
0x346 DUP3
0x347 MSTORE
0x348 MLOAD
0x349 SWAP1
0x34a DUP2
0x34b SWAP1
0x34c SUB
0x34d PUSH1 0x20
0x34f ADD
0x350 SWAP1
0x351 RETURN
---
0x336: JUMPDEST 
0x337: V298 = 0x40
0x33a: V299 = M[0x40]
0x33b: V300 = 0x1
0x33d: V301 = 0xa0
0x33f: V302 = 0x2
0x341: V303 = EXP 0x2 0xa0
0x342: V304 = SUB 0x10000000000000000000000000000000000000000 0x1
0x345: V305 = AND S0 0xffffffffffffffffffffffffffffffffffffffff
0x347: M[V299] = V305
0x348: V306 = M[0x40]
0x34c: V307 = SUB V299 V306
0x34d: V308 = 0x20
0x34f: V309 = ADD 0x20 V307
0x351: RETURN V306 V309
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x352
[0x352:0x358]
---
Predecessors: [0xa9]
Successors: [0x359, 0x35a]
---
0x352 JUMPDEST
0x353 CALLVALUE
0x354 ISZERO
0x355 PUSH2 0x35a
0x358 JUMPI
---
0x352: JUMPDEST 
0x353: V310 = CALLVALUE
0x354: V311 = ISZERO V310
0x355: V312 = 0x35a
0x358: JUMPI 0x35a V311
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x359
[0x359:0x359]
---
Predecessors: [0x352]
Successors: []
---
0x359 INVALID
---
0x359: INVALID 
---
Entry stack: [V12]
Stack pops: 0
Stack additions: []
Exit stack: [V12]

================================

Block 0x35a
[0x35a:0x361]
---
Predecessors: [0x352]
Successors: [0x998]
---
0x35a JUMPDEST
0x35b PUSH2 0x362
0x35e PUSH2 0x998
0x361 JUMP
---
0x35a: JUMPDEST 
0x35b: V313 = 0x362
0x35e: V314 = 0x998
0x361: JUMP 0x998
---
Entry stack: [V12]
Stack pops: 0
Stack additions: [0x362]
Exit stack: [V12, 0x362]

================================

Block 0x362
[0x362:0x387]
---
Predecessors: [0xa1e]
Successors: [0x388, 0x3a8]
---
0x362 JUMPDEST
0x363 PUSH1 0x40
0x365 DUP1
0x366 MLOAD
0x367 PUSH1 0x20
0x369 DUP1
0x36a DUP3
0x36b MSTORE
0x36c DUP4
0x36d MLOAD
0x36e DUP2
0x36f DUP4
0x370 ADD
0x371 MSTORE
0x372 DUP4
0x373 MLOAD
0x374 SWAP2
0x375 SWAP3
0x376 DUP4
0x377 SWAP3
0x378 SWAP1
0x379 DUP4
0x37a ADD
0x37b SWAP2
0x37c DUP6
0x37d ADD
0x37e SWAP1
0x37f DUP1
0x380 DUP4
0x381 DUP4
0x382 DUP3
0x383 ISZERO
0x384 PUSH2 0x3a8
0x387 JUMPI
---
0x362: JUMPDEST 
0x363: V315 = 0x40
0x366: V316 = M[0x40]
0x367: V317 = 0x20
0x36b: M[V316] = 0x20
0x36d: V318 = M[V934]
0x370: V319 = ADD V316 0x20
0x371: M[V319] = V318
0x373: V320 = M[V934]
0x37a: V321 = ADD V316 0x40
0x37d: V322 = ADD V934 0x20
0x383: V323 = ISZERO V320
0x384: V324 = 0x3a8
0x387: JUMPI 0x3a8 V323
---
Entry stack: [V12, 0x362, V934]
Stack pops: 1
Stack additions: [S0, V316, V316, V321, V322, V320, V320, V321, V322]
Exit stack: [V12, 0x362, V934, V316, V316, V321, V322, V320, V320, V321, V322]

================================

Block 0x388
[0x388:0x395]
---
Predecessors: [0x362, 0x396]
Successors: [0x396, 0x3a8]
---
0x388 JUMPDEST
0x389 DUP1
0x38a MLOAD
0x38b DUP3
0x38c MSTORE
0x38d PUSH1 0x20
0x38f DUP4
0x390 GT
0x391 ISZERO
0x392 PUSH2 0x3a8
0x395 JUMPI
---
0x388: JUMPDEST 
0x38a: V325 = M[S0]
0x38c: M[S1] = V325
0x38d: V326 = 0x20
0x390: V327 = GT S2 0x20
0x391: V328 = ISZERO V327
0x392: V329 = 0x3a8
0x395: JUMPI 0x3a8 V328
---
Entry stack: [V12, 0x362, V934, V316, V316, V321, V322, V320, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x362, V934, V316, V316, V321, V322, V320, S2, S1, S0]

================================

Block 0x396
[0x396:0x3a7]
---
Predecessors: [0x388]
Successors: [0x388]
---
0x396 PUSH1 0x1f
0x398 NOT
0x399 SWAP1
0x39a SWAP3
0x39b ADD
0x39c SWAP2
0x39d PUSH1 0x20
0x39f SWAP2
0x3a0 DUP3
0x3a1 ADD
0x3a2 SWAP2
0x3a3 ADD
0x3a4 PUSH2 0x388
0x3a7 JUMP
---
0x396: V330 = 0x1f
0x398: V331 = NOT 0x1f
0x39b: V332 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x39d: V333 = 0x20
0x3a1: V334 = ADD 0x20 S1
0x3a3: V335 = ADD 0x20 S0
0x3a4: V336 = 0x388
0x3a7: JUMP 0x388
---
Entry stack: [V12, 0x362, V934, V316, V316, V321, V322, V320, S2, S1, S0]
Stack pops: 3
Stack additions: [V332, V334, V335]
Exit stack: [V12, 0x362, V934, V316, V316, V321, V322, V320, V332, V334, V335]

================================

Block 0x3a8
[0x3a8:0x3ba]
---
Predecessors: [0x362, 0x388]
Successors: [0x3bb, 0x3d4]
---
0x3a8 JUMPDEST
0x3a9 POP
0x3aa POP
0x3ab POP
0x3ac SWAP1
0x3ad POP
0x3ae SWAP1
0x3af DUP2
0x3b0 ADD
0x3b1 SWAP1
0x3b2 PUSH1 0x1f
0x3b4 AND
0x3b5 DUP1
0x3b6 ISZERO
0x3b7 PUSH2 0x3d4
0x3ba JUMPI
---
0x3a8: JUMPDEST 
0x3b0: V337 = ADD V320 V321
0x3b2: V338 = 0x1f
0x3b4: V339 = AND 0x1f V320
0x3b6: V340 = ISZERO V339
0x3b7: V341 = 0x3d4
0x3ba: JUMPI 0x3d4 V340
---
Entry stack: [V12, 0x362, V934, V316, V316, V321, V322, V320, S2, S1, S0]
Stack pops: 6
Stack additions: [V337, V339]
Exit stack: [V12, 0x362, V934, V316, V316, V337, V339]

================================

Block 0x3bb
[0x3bb:0x3d3]
---
Predecessors: [0x3a8]
Successors: [0x3d4]
---
0x3bb DUP1
0x3bc DUP3
0x3bd SUB
0x3be DUP1
0x3bf MLOAD
0x3c0 PUSH1 0x1
0x3c2 DUP4
0x3c3 PUSH1 0x20
0x3c5 SUB
0x3c6 PUSH2 0x100
0x3c9 EXP
0x3ca SUB
0x3cb NOT
0x3cc AND
0x3cd DUP2
0x3ce MSTORE
0x3cf PUSH1 0x20
0x3d1 ADD
0x3d2 SWAP2
0x3d3 POP
---
0x3bd: V342 = SUB V337 V339
0x3bf: V343 = M[V342]
0x3c0: V344 = 0x1
0x3c3: V345 = 0x20
0x3c5: V346 = SUB 0x20 V339
0x3c6: V347 = 0x100
0x3c9: V348 = EXP 0x100 V346
0x3ca: V349 = SUB V348 0x1
0x3cb: V350 = NOT V349
0x3cc: V351 = AND V350 V343
0x3ce: M[V342] = V351
0x3cf: V352 = 0x20
0x3d1: V353 = ADD 0x20 V342
---
Entry stack: [V12, 0x362, V934, V316, V316, V337, V339]
Stack pops: 2
Stack additions: [V353, S0]
Exit stack: [V12, 0x362, V934, V316, V316, V353, V339]

================================

Block 0x3d4
[0x3d4:0x3e1]
---
Predecessors: [0x3a8, 0x3bb]
Successors: []
---
0x3d4 JUMPDEST
0x3d5 POP
0x3d6 SWAP3
0x3d7 POP
0x3d8 POP
0x3d9 POP
0x3da PUSH1 0x40
0x3dc MLOAD
0x3dd DUP1
0x3de SWAP2
0x3df SUB
0x3e0 SWAP1
0x3e1 RETURN
---
0x3d4: JUMPDEST 
0x3da: V354 = 0x40
0x3dc: V355 = M[0x40]
0x3df: V356 = SUB S1 V355
0x3e1: RETURN V355 V356
---
Entry stack: [V12, 0x362, V934, V316, V316, S1, V339]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x362]

================================

Block 0x3e2
[0x3e2:0x3f8]
---
Predecessors: [0xbe]
Successors: [0x3f9, 0x3fd]
---
0x3e2 JUMPDEST
0x3e3 PUSH1 0x0
0x3e5 SLOAD
0x3e6 CALLER
0x3e7 PUSH1 0x1
0x3e9 PUSH1 0xa0
0x3eb PUSH1 0x2
0x3ed EXP
0x3ee SUB
0x3ef SWAP1
0x3f0 DUP2
0x3f1 AND
0x3f2 SWAP2
0x3f3 AND
0x3f4 EQ
0x3f5 PUSH2 0x3fd
0x3f8 JUMPI
---
0x3e2: JUMPDEST 
0x3e3: V357 = 0x0
0x3e5: V358 = S[0x0]
0x3e6: V359 = CALLER
0x3e7: V360 = 0x1
0x3e9: V361 = 0xa0
0x3eb: V362 = 0x2
0x3ed: V363 = EXP 0x2 0xa0
0x3ee: V364 = SUB 0x10000000000000000000000000000000000000000 0x1
0x3f1: V365 = AND 0xffffffffffffffffffffffffffffffffffffffff V359
0x3f3: V366 = AND V358 0xffffffffffffffffffffffffffffffffffffffff
0x3f4: V367 = EQ V366 V365
0x3f5: V368 = 0x3fd
0x3f8: JUMPI 0x3fd V367
---
Entry stack: [V12, 0x10c, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V75]

================================

Block 0x3f9
[0x3f9:0x3fc]
---
Predecessors: [0x3e2]
Successors: []
---
0x3f9 PUSH2 0x0
0x3fc JUMP
---
0x3f9: V369 = 0x0
0x3fc: THROW 
---
Entry stack: [V12, 0x10c, V75]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V75]

================================

Block 0x3fd
[0x3fd:0x40f]
---
Predecessors: [0x3e2]
Successors: [0xa26]
---
0x3fd JUMPDEST
0x3fe DUP1
0x3ff MLOAD
0x400 PUSH2 0x410
0x403 SWAP1
0x404 PUSH1 0x5
0x406 SWAP1
0x407 PUSH1 0x20
0x409 DUP5
0x40a ADD
0x40b SWAP1
0x40c PUSH2 0xa26
0x40f JUMP
---
0x3fd: JUMPDEST 
0x3ff: V370 = M[V75]
0x400: V371 = 0x410
0x404: V372 = 0x5
0x407: V373 = 0x20
0x40a: V374 = ADD V75 0x20
0x40c: V375 = 0xa26
0x40f: JUMP 0xa26
---
Entry stack: [V12, 0x10c, V75]
Stack pops: 1
Stack additions: [S0, 0x410, 0x5, V374, V370]
Exit stack: [V12, 0x10c, V75, 0x410, 0x5, V374, V370]

================================

Block 0x410
[0x410:0x411]
---
Predecessors: [0x55b]
Successors: [0x412]
---
0x410 JUMPDEST
0x411 POP
---
0x410: JUMPDEST 
---
Entry stack: [V12, 0x15a, V259, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15a, V259, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1]

================================

Block 0x412
[0x412:0x412]
---
Predecessors: [0x410]
Successors: [0x413]
---
0x412 JUMPDEST
---
0x412: JUMPDEST 
---
Entry stack: [V12, 0x15a, V259, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0x413
[0x413:0x415]
---
Predecessors: [0x412]
Successors: [0x10c]
---
0x413 JUMPDEST
0x414 POP
0x415 JUMP
---
0x413: JUMPDEST 
0x415: JUMP S1
---
Entry stack: [V12, 0x15a, V259, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: []
Exit stack: [V12, 0x15a, V259, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2]

================================

Block 0x416
[0x416:0x42c]
---
Predecessors: [0x116]
Successors: [0x42d, 0x431]
---
0x416 JUMPDEST
0x417 PUSH1 0x0
0x419 SLOAD
0x41a CALLER
0x41b PUSH1 0x1
0x41d PUSH1 0xa0
0x41f PUSH1 0x2
0x421 EXP
0x422 SUB
0x423 SWAP1
0x424 DUP2
0x425 AND
0x426 SWAP2
0x427 AND
0x428 EQ
0x429 PUSH2 0x431
0x42c JUMPI
---
0x416: JUMPDEST 
0x417: V376 = 0x0
0x419: V377 = S[0x0]
0x41a: V378 = CALLER
0x41b: V379 = 0x1
0x41d: V380 = 0xa0
0x41f: V381 = 0x2
0x421: V382 = EXP 0x2 0xa0
0x422: V383 = SUB 0x10000000000000000000000000000000000000000 0x1
0x425: V384 = AND 0xffffffffffffffffffffffffffffffffffffffff V378
0x427: V385 = AND V377 0xffffffffffffffffffffffffffffffffffffffff
0x428: V386 = EQ V385 V384
0x429: V387 = 0x431
0x42c: JUMPI 0x431 V386
---
Entry stack: [V12, 0x10c, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V92]

================================

Block 0x42d
[0x42d:0x430]
---
Predecessors: [0x416]
Successors: []
---
0x42d PUSH2 0x0
0x430 JUMP
---
0x42d: V388 = 0x0
0x430: THROW 
---
Entry stack: [V12, 0x10c, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V92]

================================

Block 0x431
[0x431:0x44c]
---
Predecessors: [0x416]
Successors: [0x44d]
---
0x431 JUMPDEST
0x432 PUSH1 0x0
0x434 DUP1
0x435 SLOAD
0x436 PUSH1 0x1
0x438 PUSH1 0xa0
0x43a PUSH1 0x2
0x43c EXP
0x43d SUB
0x43e NOT
0x43f AND
0x440 PUSH1 0x1
0x442 PUSH1 0xa0
0x444 PUSH1 0x2
0x446 EXP
0x447 SUB
0x448 DUP4
0x449 AND
0x44a OR
0x44b SWAP1
0x44c SSTORE
---
0x431: JUMPDEST 
0x432: V389 = 0x0
0x435: V390 = S[0x0]
0x436: V391 = 0x1
0x438: V392 = 0xa0
0x43a: V393 = 0x2
0x43c: V394 = EXP 0x2 0xa0
0x43d: V395 = SUB 0x10000000000000000000000000000000000000000 0x1
0x43e: V396 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x43f: V397 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V390
0x440: V398 = 0x1
0x442: V399 = 0xa0
0x444: V400 = 0x2
0x446: V401 = EXP 0x2 0xa0
0x447: V402 = SUB 0x10000000000000000000000000000000000000000 0x1
0x449: V403 = AND V92 0xffffffffffffffffffffffffffffffffffffffff
0x44a: V404 = OR V403 V397
0x44c: S[0x0] = V404
---
Entry stack: [V12, 0x10c, V92]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x10c, V92]

================================

Block 0x44d
[0x44d:0x44d]
---
Predecessors: [0x431]
Successors: [0x44e]
---
0x44d JUMPDEST
---
0x44d: JUMPDEST 
---
Entry stack: [V12, 0x10c, V92]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V92]

================================

Block 0x44e
[0x44e:0x450]
---
Predecessors: [0x44d]
Successors: [0x10c]
---
0x44e JUMPDEST
0x44f POP
0x450 JUMP
---
0x44e: JUMPDEST 
0x450: JUMP 0x10c
---
Entry stack: [V12, 0x10c, V92]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x451
[0x451:0x467]
---
Predecessors: [0x134]
Successors: [0x468, 0x46c]
---
0x451 JUMPDEST
0x452 PUSH1 0x0
0x454 SLOAD
0x455 CALLER
0x456 PUSH1 0x1
0x458 PUSH1 0xa0
0x45a PUSH1 0x2
0x45c EXP
0x45d SUB
0x45e SWAP1
0x45f DUP2
0x460 AND
0x461 SWAP2
0x462 AND
0x463 EQ
0x464 PUSH2 0x46c
0x467 JUMPI
---
0x451: JUMPDEST 
0x452: V405 = 0x0
0x454: V406 = S[0x0]
0x455: V407 = CALLER
0x456: V408 = 0x1
0x458: V409 = 0xa0
0x45a: V410 = 0x2
0x45c: V411 = EXP 0x2 0xa0
0x45d: V412 = SUB 0x10000000000000000000000000000000000000000 0x1
0x460: V413 = AND 0xffffffffffffffffffffffffffffffffffffffff V407
0x462: V414 = AND V406 0xffffffffffffffffffffffffffffffffffffffff
0x463: V415 = EQ V414 V413
0x464: V416 = 0x46c
0x467: JUMPI 0x46c V415
---
Entry stack: [V12, 0x10c, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V105]

================================

Block 0x468
[0x468:0x46b]
---
Predecessors: [0x451]
Successors: []
---
0x468 PUSH2 0x0
0x46b JUMP
---
0x468: V417 = 0x0
0x46b: THROW 
---
Entry stack: [V12, 0x10c, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V105]

================================

Block 0x46c
[0x46c:0x487]
---
Predecessors: [0x451]
Successors: [0x488]
---
0x46c JUMPDEST
0x46d PUSH1 0x3
0x46f DUP1
0x470 SLOAD
0x471 PUSH1 0x1
0x473 PUSH1 0xa0
0x475 PUSH1 0x2
0x477 EXP
0x478 SUB
0x479 NOT
0x47a AND
0x47b PUSH1 0x1
0x47d PUSH1 0xa0
0x47f PUSH1 0x2
0x481 EXP
0x482 SUB
0x483 DUP4
0x484 AND
0x485 OR
0x486 SWAP1
0x487 SSTORE
---
0x46c: JUMPDEST 
0x46d: V418 = 0x3
0x470: V419 = S[0x3]
0x471: V420 = 0x1
0x473: V421 = 0xa0
0x475: V422 = 0x2
0x477: V423 = EXP 0x2 0xa0
0x478: V424 = SUB 0x10000000000000000000000000000000000000000 0x1
0x479: V425 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x47a: V426 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V419
0x47b: V427 = 0x1
0x47d: V428 = 0xa0
0x47f: V429 = 0x2
0x481: V430 = EXP 0x2 0xa0
0x482: V431 = SUB 0x10000000000000000000000000000000000000000 0x1
0x484: V432 = AND V105 0xffffffffffffffffffffffffffffffffffffffff
0x485: V433 = OR V432 V426
0x487: S[0x3] = V433
---
Entry stack: [V12, 0x10c, V105]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x10c, V105]

================================

Block 0x488
[0x488:0x488]
---
Predecessors: [0x46c]
Successors: [0x489]
---
0x488 JUMPDEST
---
0x488: JUMPDEST 
---
Entry stack: [V12, 0x10c, V105]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V105]

================================

Block 0x489
[0x489:0x48b]
---
Predecessors: [0x488]
Successors: [0x10c]
---
0x489 JUMPDEST
0x48a POP
0x48b JUMP
---
0x489: JUMPDEST 
0x48b: JUMP 0x10c
---
Entry stack: [V12, 0x10c, V105]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x48c
[0x48c:0x49a]
---
Predecessors: [0x152]
Successors: [0x15a]
---
0x48c JUMPDEST
0x48d PUSH1 0x3
0x48f SLOAD
0x490 PUSH1 0x1
0x492 PUSH1 0xa0
0x494 PUSH1 0x2
0x496 EXP
0x497 SUB
0x498 AND
0x499 DUP2
0x49a JUMP
---
0x48c: JUMPDEST 
0x48d: V434 = 0x3
0x48f: V435 = S[0x3]
0x490: V436 = 0x1
0x492: V437 = 0xa0
0x494: V438 = 0x2
0x496: V439 = EXP 0x2 0xa0
0x497: V440 = SUB 0x10000000000000000000000000000000000000000 0x1
0x498: V441 = AND 0xffffffffffffffffffffffffffffffffffffffff V435
0x49a: JUMP 0x15a
---
Entry stack: [V12, 0x15a]
Stack pops: 1
Stack additions: [S0, V441]
Exit stack: [V12, 0x15a, V441]

================================

Block 0x49b
[0x49b:0x4b1]
---
Predecessors: [0x17e]
Successors: [0x4b2, 0x4b6]
---
0x49b JUMPDEST
0x49c PUSH1 0x0
0x49e SLOAD
0x49f CALLER
0x4a0 PUSH1 0x1
0x4a2 PUSH1 0xa0
0x4a4 PUSH1 0x2
0x4a6 EXP
0x4a7 SUB
0x4a8 SWAP1
0x4a9 DUP2
0x4aa AND
0x4ab SWAP2
0x4ac AND
0x4ad EQ
0x4ae PUSH2 0x4b6
0x4b1 JUMPI
---
0x49b: JUMPDEST 
0x49c: V442 = 0x0
0x49e: V443 = S[0x0]
0x49f: V444 = CALLER
0x4a0: V445 = 0x1
0x4a2: V446 = 0xa0
0x4a4: V447 = 0x2
0x4a6: V448 = EXP 0x2 0xa0
0x4a7: V449 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4aa: V450 = AND 0xffffffffffffffffffffffffffffffffffffffff V444
0x4ac: V451 = AND V443 0xffffffffffffffffffffffffffffffffffffffff
0x4ad: V452 = EQ V451 V450
0x4ae: V453 = 0x4b6
0x4b1: JUMPI 0x4b6 V452
---
Entry stack: [V12, 0x10c, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V129]

================================

Block 0x4b2
[0x4b2:0x4b5]
---
Predecessors: [0x49b]
Successors: []
---
0x4b2 PUSH2 0x0
0x4b5 JUMP
---
0x4b2: V454 = 0x0
0x4b5: THROW 
---
Entry stack: [V12, 0x10c, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V129]

================================

Block 0x4b6
[0x4b6:0x4bb]
---
Predecessors: [0x49b]
Successors: [0x4bc]
---
0x4b6 JUMPDEST
0x4b7 PUSH1 0x4
0x4b9 DUP2
0x4ba SWAP1
0x4bb SSTORE
---
0x4b6: JUMPDEST 
0x4b7: V455 = 0x4
0x4bb: S[0x4] = V129
---
Entry stack: [V12, 0x10c, V129]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x10c, V129]

================================

Block 0x4bc
[0x4bc:0x4bc]
---
Predecessors: [0x4b6]
Successors: [0x4bd]
---
0x4bc JUMPDEST
---
0x4bc: JUMPDEST 
---
Entry stack: [V12, 0x10c, V129]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V129]

================================

Block 0x4bd
[0x4bd:0x4bf]
---
Predecessors: [0x4bc]
Successors: [0x10c]
---
0x4bd JUMPDEST
0x4be POP
0x4bf JUMP
---
0x4bd: JUMPDEST 
0x4bf: JUMP 0x10c
---
Entry stack: [V12, 0x10c, V129]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x4c0
[0x4c0:0x4ce]
---
Predecessors: [0x193]
Successors: [0x15a]
---
0x4c0 JUMPDEST
0x4c1 PUSH1 0x1
0x4c3 SLOAD
0x4c4 PUSH1 0x1
0x4c6 PUSH1 0xa0
0x4c8 PUSH1 0x2
0x4ca EXP
0x4cb SUB
0x4cc AND
0x4cd DUP2
0x4ce JUMP
---
0x4c0: JUMPDEST 
0x4c1: V456 = 0x1
0x4c3: V457 = S[0x1]
0x4c4: V458 = 0x1
0x4c6: V459 = 0xa0
0x4c8: V460 = 0x2
0x4ca: V461 = EXP 0x2 0xa0
0x4cb: V462 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4cc: V463 = AND 0xffffffffffffffffffffffffffffffffffffffff V457
0x4ce: JUMP 0x15a
---
Entry stack: [V12, 0x15a]
Stack pops: 1
Stack additions: [S0, V463]
Exit stack: [V12, 0x15a, V463]

================================

Block 0x4cf
[0x4cf:0x4d4]
---
Predecessors: [0x1bf]
Successors: [0x1c7]
---
0x4cf JUMPDEST
0x4d0 PUSH1 0x4
0x4d2 SLOAD
0x4d3 DUP2
0x4d4 JUMP
---
0x4cf: JUMPDEST 
0x4d0: V464 = 0x4
0x4d2: V465 = S[0x4]
0x4d4: JUMP 0x1c7
---
Entry stack: [V12, 0x1c7]
Stack pops: 1
Stack additions: [S0, V465]
Exit stack: [V12, 0x1c7, V465]

================================

Block 0x4d5
[0x4d5:0x4eb]
---
Predecessors: [0x1e1]
Successors: [0x4ec, 0x4f0]
---
0x4d5 JUMPDEST
0x4d6 PUSH1 0x1
0x4d8 SLOAD
0x4d9 CALLER
0x4da PUSH1 0x1
0x4dc PUSH1 0xa0
0x4de PUSH1 0x2
0x4e0 EXP
0x4e1 SUB
0x4e2 SWAP1
0x4e3 DUP2
0x4e4 AND
0x4e5 SWAP2
0x4e6 AND
0x4e7 EQ
0x4e8 PUSH2 0x4f0
0x4eb JUMPI
---
0x4d5: JUMPDEST 
0x4d6: V466 = 0x1
0x4d8: V467 = S[0x1]
0x4d9: V468 = CALLER
0x4da: V469 = 0x1
0x4dc: V470 = 0xa0
0x4de: V471 = 0x2
0x4e0: V472 = EXP 0x2 0xa0
0x4e1: V473 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4e4: V474 = AND 0xffffffffffffffffffffffffffffffffffffffff V468
0x4e6: V475 = AND V467 0xffffffffffffffffffffffffffffffffffffffff
0x4e7: V476 = EQ V475 V474
0x4e8: V477 = 0x4f0
0x4eb: JUMPI 0x4f0 V476
---
Entry stack: [V12, 0x10c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c]

================================

Block 0x4ec
[0x4ec:0x4ef]
---
Predecessors: [0x4d5]
Successors: []
---
0x4ec PUSH2 0x0
0x4ef JUMP
---
0x4ec: V478 = 0x0
0x4ef: THROW 
---
Entry stack: [V12, 0x10c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c]

================================

Block 0x4f0
[0x4f0:0x4fb]
---
Predecessors: [0x4d5]
Successors: []
---
0x4f0 JUMPDEST
0x4f1 CALLER
0x4f2 PUSH1 0x1
0x4f4 PUSH1 0xa0
0x4f6 PUSH1 0x2
0x4f8 EXP
0x4f9 SUB
0x4fa AND
0x4fb SELFDESTRUCT
---
0x4f0: JUMPDEST 
0x4f1: V479 = CALLER
0x4f2: V480 = 0x1
0x4f4: V481 = 0xa0
0x4f6: V482 = 0x2
0x4f8: V483 = EXP 0x2 0xa0
0x4f9: V484 = SUB 0x10000000000000000000000000000000000000000 0x1
0x4fa: V485 = AND 0xffffffffffffffffffffffffffffffffffffffff V479
0x4fb: SELFDESTRUCT V485
---
Entry stack: [V12, 0x10c]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c]

================================

Block 0x4fc
[0x4fc:0x4fc]
---
Predecessors: []
Successors: [0x4fd]
---
0x4fc JUMPDEST
---
0x4fc: JUMPDEST 
---
Entry stack: []
Stack pops: 0
Stack additions: []
Exit stack: []

================================

Block 0x4fd
[0x4fd:0x4fe]
---
Predecessors: [0x4fc]
Successors: []
Has unresolved jump.
---
0x4fd JUMPDEST
0x4fe JUMP
---
0x4fd: JUMPDEST 
0x4fe: JUMP S0
---
Entry stack: []
Stack pops: 1
Stack additions: []
Exit stack: []

================================

Block 0x4ff
[0x4ff:0x50d]
---
Predecessors: [0x1f3]
Successors: [0x15a]
---
0x4ff JUMPDEST
0x500 PUSH1 0x0
0x502 SLOAD
0x503 PUSH1 0x1
0x505 PUSH1 0xa0
0x507 PUSH1 0x2
0x509 EXP
0x50a SUB
0x50b AND
0x50c DUP2
0x50d JUMP
---
0x4ff: JUMPDEST 
0x500: V486 = 0x0
0x502: V487 = S[0x0]
0x503: V488 = 0x1
0x505: V489 = 0xa0
0x507: V490 = 0x2
0x509: V491 = EXP 0x2 0xa0
0x50a: V492 = SUB 0x10000000000000000000000000000000000000000 0x1
0x50b: V493 = AND 0xffffffffffffffffffffffffffffffffffffffff V487
0x50d: JUMP 0x15a
---
Entry stack: [V12, 0x15a]
Stack pops: 1
Stack additions: [S0, V493]
Exit stack: [V12, 0x15a, V493]

================================

Block 0x50e
[0x50e:0x536]
---
Predecessors: [0x21f]
Successors: [0x537, 0x538]
---
0x50e JUMPDEST
0x50f PUSH1 0x1
0x511 PUSH1 0xa0
0x513 PUSH1 0x2
0x515 EXP
0x516 SUB
0x517 CALLER
0x518 AND
0x519 PUSH1 0x0
0x51b SWAP1
0x51c DUP2
0x51d MSTORE
0x51e PUSH1 0x2
0x520 PUSH1 0x20
0x522 MSTORE
0x523 PUSH1 0x40
0x525 DUP2
0x526 SHA3
0x527 DUP1
0x528 SLOAD
0x529 DUP2
0x52a SWAP1
0x52b PUSH1 0x0
0x52d NOT
0x52e DUP2
0x52f ADD
0x530 SWAP1
0x531 DUP2
0x532 LT
0x533 PUSH2 0x538
0x536 JUMPI
---
0x50e: JUMPDEST 
0x50f: V494 = 0x1
0x511: V495 = 0xa0
0x513: V496 = 0x2
0x515: V497 = EXP 0x2 0xa0
0x516: V498 = SUB 0x10000000000000000000000000000000000000000 0x1
0x517: V499 = CALLER
0x518: V500 = AND V499 0xffffffffffffffffffffffffffffffffffffffff
0x519: V501 = 0x0
0x51d: M[0x0] = V500
0x51e: V502 = 0x2
0x520: V503 = 0x20
0x522: M[0x20] = 0x2
0x523: V504 = 0x40
0x526: V505 = SHA3 0x0 0x40
0x528: V506 = S[V505]
0x52b: V507 = 0x0
0x52d: V508 = NOT 0x0
0x52f: V509 = ADD V506 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
0x532: V510 = LT V509 V506
0x533: V511 = 0x538
0x536: JUMPI 0x538 V510
---
Entry stack: [V12, 0x15a]
Stack pops: 0
Stack additions: [0x0, V505, V505, V509]
Exit stack: [V12, 0x15a, 0x0, V505, V505, V509]

================================

Block 0x537
[0x537:0x537]
---
Predecessors: [0x50e]
Successors: []
---
0x537 INVALID
---
0x537: INVALID 
---
Entry stack: [V12, 0x15a, 0x0, V505, V505, V509]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, 0x0, V505, V505, V509]

================================

Block 0x538
[0x538:0x545]
---
Predecessors: [0x50e]
Successors: [0x546]
---
0x538 JUMPDEST
0x539 SWAP1
0x53a PUSH1 0x0
0x53c MSTORE
0x53d PUSH1 0x20
0x53f PUSH1 0x0
0x541 SHA3
0x542 SWAP1
0x543 ADD
0x544 PUSH1 0x0
---
0x538: JUMPDEST 
0x53a: V512 = 0x0
0x53c: M[0x0] = V505
0x53d: V513 = 0x20
0x53f: V514 = 0x0
0x541: V515 = SHA3 0x0 0x20
0x543: V516 = ADD V509 V515
0x544: V517 = 0x0
---
Entry stack: [V12, 0x15a, 0x0, V505, V505, V509]
Stack pops: 2
Stack additions: [V516, 0x0]
Exit stack: [V12, 0x15a, 0x0, V505, V516, 0x0]

================================

Block 0x546
[0x546:0x55a]
---
Predecessors: [0x538]
Successors: [0x55b]
---
0x546 JUMPDEST
0x547 SWAP1
0x548 SLOAD
0x549 SWAP1
0x54a PUSH2 0x100
0x54d EXP
0x54e SWAP1
0x54f DIV
0x550 PUSH1 0x1
0x552 PUSH1 0xa0
0x554 PUSH1 0x2
0x556 EXP
0x557 SUB
0x558 AND
0x559 SWAP2
0x55a POP
---
0x546: JUMPDEST 
0x548: V518 = S[V516]
0x54a: V519 = 0x100
0x54d: V520 = EXP 0x100 0x0
0x54f: V521 = DIV V518 0x1
0x550: V522 = 0x1
0x552: V523 = 0xa0
0x554: V524 = 0x2
0x556: V525 = EXP 0x2 0xa0
0x557: V526 = SUB 0x10000000000000000000000000000000000000000 0x1
0x558: V527 = AND 0xffffffffffffffffffffffffffffffffffffffff V521
---
Entry stack: [V12, 0x15a, 0x0, V505, V516, 0x0]
Stack pops: 4
Stack additions: [V527, S2]
Exit stack: [V12, 0x15a, V527, V505]

================================

Block 0x55b
[0x55b:0x55e]
---
Predecessors: [0x546, 0xad5, 0xaed]
Successors: [0x15a, 0x410, 0xaed]
---
0x55b JUMPDEST
0x55c POP
0x55d SWAP1
0x55e JUMP
---
0x55b: JUMPDEST 
0x55e: JUMP S2
---
Entry stack: [V12, 0x15a, V259, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S1]
Exit stack: [V12, 0x15a, V259, S22, S21, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S1]

================================

Block 0x55f
[0x55f:0x575]
---
Predecessors: [0x24b]
Successors: [0x576, 0x57a]
---
0x55f JUMPDEST
0x560 PUSH1 0x1
0x562 SLOAD
0x563 CALLER
0x564 PUSH1 0x1
0x566 PUSH1 0xa0
0x568 PUSH1 0x2
0x56a EXP
0x56b SUB
0x56c SWAP1
0x56d DUP2
0x56e AND
0x56f SWAP2
0x570 AND
0x571 EQ
0x572 PUSH2 0x57a
0x575 JUMPI
---
0x55f: JUMPDEST 
0x560: V528 = 0x1
0x562: V529 = S[0x1]
0x563: V530 = CALLER
0x564: V531 = 0x1
0x566: V532 = 0xa0
0x568: V533 = 0x2
0x56a: V534 = EXP 0x2 0xa0
0x56b: V535 = SUB 0x10000000000000000000000000000000000000000 0x1
0x56e: V536 = AND 0xffffffffffffffffffffffffffffffffffffffff V530
0x570: V537 = AND V529 0xffffffffffffffffffffffffffffffffffffffff
0x571: V538 = EQ V537 V536
0x572: V539 = 0x57a
0x575: JUMPI 0x57a V538
---
Entry stack: [V12, 0x10c, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V209]

================================

Block 0x576
[0x576:0x579]
---
Predecessors: [0x55f]
Successors: []
---
0x576 PUSH2 0x0
0x579 JUMP
---
0x576: V540 = 0x0
0x579: THROW 
---
Entry stack: [V12, 0x10c, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V209]

================================

Block 0x57a
[0x57a:0x595]
---
Predecessors: [0x55f]
Successors: [0x596]
---
0x57a JUMPDEST
0x57b PUSH1 0x1
0x57d DUP1
0x57e SLOAD
0x57f PUSH1 0x1
0x581 PUSH1 0xa0
0x583 PUSH1 0x2
0x585 EXP
0x586 SUB
0x587 NOT
0x588 AND
0x589 PUSH1 0x1
0x58b PUSH1 0xa0
0x58d PUSH1 0x2
0x58f EXP
0x590 SUB
0x591 DUP4
0x592 AND
0x593 OR
0x594 SWAP1
0x595 SSTORE
---
0x57a: JUMPDEST 
0x57b: V541 = 0x1
0x57e: V542 = S[0x1]
0x57f: V543 = 0x1
0x581: V544 = 0xa0
0x583: V545 = 0x2
0x585: V546 = EXP 0x2 0xa0
0x586: V547 = SUB 0x10000000000000000000000000000000000000000 0x1
0x587: V548 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x588: V549 = AND 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 V542
0x589: V550 = 0x1
0x58b: V551 = 0xa0
0x58d: V552 = 0x2
0x58f: V553 = EXP 0x2 0xa0
0x590: V554 = SUB 0x10000000000000000000000000000000000000000 0x1
0x592: V555 = AND V209 0xffffffffffffffffffffffffffffffffffffffff
0x593: V556 = OR V555 V549
0x595: S[0x1] = V556
---
Entry stack: [V12, 0x10c, V209]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x10c, V209]

================================

Block 0x596
[0x596:0x596]
---
Predecessors: [0x57a]
Successors: [0x597]
---
0x596 JUMPDEST
---
0x596: JUMPDEST 
---
Entry stack: [V12, 0x10c, V209]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V209]

================================

Block 0x597
[0x597:0x599]
---
Predecessors: [0x596]
Successors: [0x10c]
---
0x597 JUMPDEST
0x598 POP
0x599 JUMP
---
0x597: JUMPDEST 
0x599: JUMP 0x10c
---
Entry stack: [V12, 0x10c, V209]
Stack pops: 2
Stack additions: []
Exit stack: [V12]

================================

Block 0x59a
[0x59a:0x5b3]
---
Predecessors: [0x269]
Successors: [0x5b4, 0x5b5]
---
0x59a JUMPDEST
0x59b PUSH1 0x2
0x59d PUSH1 0x20
0x59f MSTORE
0x5a0 DUP2
0x5a1 PUSH1 0x0
0x5a3 MSTORE
0x5a4 PUSH1 0x40
0x5a6 PUSH1 0x0
0x5a8 SHA3
0x5a9 DUP2
0x5aa DUP2
0x5ab SLOAD
0x5ac DUP2
0x5ad LT
0x5ae ISZERO
0x5af ISZERO
0x5b0 PUSH2 0x5b5
0x5b3 JUMPI
---
0x59a: JUMPDEST 
0x59b: V557 = 0x2
0x59d: V558 = 0x20
0x59f: M[0x20] = 0x2
0x5a1: V559 = 0x0
0x5a3: M[0x0] = V222
0x5a4: V560 = 0x40
0x5a6: V561 = 0x0
0x5a8: V562 = SHA3 0x0 0x40
0x5ab: V563 = S[V562]
0x5ad: V564 = LT V224 V563
0x5ae: V565 = ISZERO V564
0x5af: V566 = ISZERO V565
0x5b0: V567 = 0x5b5
0x5b3: JUMPI 0x5b5 V566
---
Entry stack: [V12, 0x15a, V222, V224]
Stack pops: 2
Stack additions: [S1, S0, V562, S0]
Exit stack: [V12, 0x15a, V222, V224, V562, V224]

================================

Block 0x5b4
[0x5b4:0x5b4]
---
Predecessors: [0x59a]
Successors: []
---
0x5b4 INVALID
---
0x5b4: INVALID 
---
Entry stack: [V12, 0x15a, V222, V224, V562, V224]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V222, V224, V562, V224]

================================

Block 0x5b5
[0x5b5:0x5c2]
---
Predecessors: [0x59a]
Successors: [0x5c3]
---
0x5b5 JUMPDEST
0x5b6 SWAP1
0x5b7 PUSH1 0x0
0x5b9 MSTORE
0x5ba PUSH1 0x20
0x5bc PUSH1 0x0
0x5be SHA3
0x5bf SWAP1
0x5c0 ADD
0x5c1 PUSH1 0x0
---
0x5b5: JUMPDEST 
0x5b7: V568 = 0x0
0x5b9: M[0x0] = V562
0x5ba: V569 = 0x20
0x5bc: V570 = 0x0
0x5be: V571 = SHA3 0x0 0x20
0x5c0: V572 = ADD V224 V571
0x5c1: V573 = 0x0
---
Entry stack: [V12, 0x15a, V222, V224, V562, V224]
Stack pops: 2
Stack additions: [V572, 0x0]
Exit stack: [V12, 0x15a, V222, V224, V572, 0x0]

================================

Block 0x5c3
[0x5c3:0x5db]
---
Predecessors: [0x5b5]
Successors: [0x15a]
---
0x5c3 JUMPDEST
0x5c4 SWAP2
0x5c5 POP
0x5c6 SWAP2
0x5c7 POP
0x5c8 SWAP1
0x5c9 SLOAD
0x5ca SWAP1
0x5cb PUSH2 0x100
0x5ce EXP
0x5cf SWAP1
0x5d0 DIV
0x5d1 PUSH1 0x1
0x5d3 PUSH1 0xa0
0x5d5 PUSH1 0x2
0x5d7 EXP
0x5d8 SUB
0x5d9 AND
0x5da DUP2
0x5db JUMP
---
0x5c3: JUMPDEST 
0x5c9: V574 = S[V572]
0x5cb: V575 = 0x100
0x5ce: V576 = EXP 0x100 0x0
0x5d0: V577 = DIV V574 0x1
0x5d1: V578 = 0x1
0x5d3: V579 = 0xa0
0x5d5: V580 = 0x2
0x5d7: V581 = EXP 0x2 0xa0
0x5d8: V582 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5d9: V583 = AND 0xffffffffffffffffffffffffffffffffffffffff V577
0x5db: JUMP 0x15a
---
Entry stack: [V12, 0x15a, V222, V224, V572, 0x0]
Stack pops: 5
Stack additions: [S4, V583]
Exit stack: [V12, 0x15a, V583]

================================

Block 0x5dc
[0x5dc:0x5ec]
---
Predecessors: [0x29c]
Successors: [0x5ed, 0x5fc]
---
0x5dc JUMPDEST
0x5dd PUSH1 0x0
0x5df PUSH1 0x0
0x5e1 PUSH1 0x0
0x5e3 PUSH1 0x4
0x5e5 SLOAD
0x5e6 GT
0x5e7 DUP1
0x5e8 ISZERO
0x5e9 PUSH2 0x5fc
0x5ec JUMPI
---
0x5dc: JUMPDEST 
0x5dd: V584 = 0x0
0x5df: V585 = 0x0
0x5e1: V586 = 0x0
0x5e3: V587 = 0x4
0x5e5: V588 = S[0x4]
0x5e6: V589 = GT V588 0x0
0x5e8: V590 = ISZERO V589
0x5e9: V591 = 0x5fc
0x5ec: JUMPI 0x5fc V590
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296]
Stack pops: 0
Stack additions: [0x0, 0x0, V589]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0, V589]

================================

Block 0x5ed
[0x5ed:0x5fb]
---
Predecessors: [0x5dc]
Successors: [0x5fc]
---
0x5ed POP
0x5ee PUSH1 0x3
0x5f0 SLOAD
0x5f1 PUSH1 0x1
0x5f3 PUSH1 0xa0
0x5f5 PUSH1 0x2
0x5f7 EXP
0x5f8 SUB
0x5f9 AND
0x5fa ISZERO
0x5fb ISZERO
---
0x5ee: V592 = 0x3
0x5f0: V593 = S[0x3]
0x5f1: V594 = 0x1
0x5f3: V595 = 0xa0
0x5f5: V596 = 0x2
0x5f7: V597 = EXP 0x2 0xa0
0x5f8: V598 = SUB 0x10000000000000000000000000000000000000000 0x1
0x5f9: V599 = AND 0xffffffffffffffffffffffffffffffffffffffff V593
0x5fa: V600 = ISZERO V599
0x5fb: V601 = ISZERO V600
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0, V589]
Stack pops: 1
Stack additions: [V601]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0, V601]

================================

Block 0x5fc
[0x5fc:0x601]
---
Predecessors: [0x5dc, 0x5ed]
Successors: [0x602, 0x689]
---
0x5fc JUMPDEST
0x5fd ISZERO
0x5fe PUSH2 0x689
0x601 JUMPI
---
0x5fc: JUMPDEST 
0x5fd: V602 = ISZERO S0
0x5fe: V603 = 0x689
0x601: JUMPI 0x689 V602
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0, S0]
Stack pops: 1
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]

================================

Block 0x602
[0x602:0x60b]
---
Predecessors: [0x5fc]
Successors: [0x60c, 0x610]
---
0x602 PUSH1 0x4
0x604 SLOAD
0x605 CALLVALUE
0x606 LT
0x607 ISZERO
0x608 PUSH2 0x610
0x60b JUMPI
---
0x602: V604 = 0x4
0x604: V605 = S[0x4]
0x605: V606 = CALLVALUE
0x606: V607 = LT V606 V605
0x607: V608 = ISZERO V607
0x608: V609 = 0x610
0x60b: JUMPI 0x610 V608
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]

================================

Block 0x60c
[0x60c:0x60f]
---
Predecessors: [0x602]
Successors: []
---
0x60c PUSH2 0x0
0x60f JUMP
---
0x60c: V610 = 0x0
0x60f: THROW 
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]

================================

Block 0x610
[0x610:0x641]
---
Predecessors: [0x602]
Successors: [0x642, 0x646]
---
0x610 JUMPDEST
0x611 PUSH1 0x3
0x613 SLOAD
0x614 PUSH1 0x4
0x616 SLOAD
0x617 PUSH1 0x40
0x619 MLOAD
0x61a PUSH1 0x1
0x61c PUSH1 0xa0
0x61e PUSH1 0x2
0x620 EXP
0x621 SUB
0x622 SWAP1
0x623 SWAP3
0x624 AND
0x625 SWAP2
0x626 DUP2
0x627 ISZERO
0x628 PUSH2 0x8fc
0x62b MUL
0x62c SWAP2
0x62d SWAP1
0x62e PUSH1 0x0
0x630 DUP2
0x631 DUP2
0x632 DUP2
0x633 DUP6
0x634 DUP9
0x635 DUP9
0x636 CALL
0x637 SWAP4
0x638 POP
0x639 POP
0x63a POP
0x63b POP
0x63c ISZERO
0x63d ISZERO
0x63e PUSH2 0x646
0x641 JUMPI
---
0x610: JUMPDEST 
0x611: V611 = 0x3
0x613: V612 = S[0x3]
0x614: V613 = 0x4
0x616: V614 = S[0x4]
0x617: V615 = 0x40
0x619: V616 = M[0x40]
0x61a: V617 = 0x1
0x61c: V618 = 0xa0
0x61e: V619 = 0x2
0x620: V620 = EXP 0x2 0xa0
0x621: V621 = SUB 0x10000000000000000000000000000000000000000 0x1
0x624: V622 = AND V612 0xffffffffffffffffffffffffffffffffffffffff
0x627: V623 = ISZERO V614
0x628: V624 = 0x8fc
0x62b: V625 = MUL 0x8fc V623
0x62e: V626 = 0x0
0x636: V627 = CALL V625 V622 V614 V616 0x0 V616 0x0
0x63c: V628 = ISZERO V627
0x63d: V629 = ISZERO V628
0x63e: V630 = 0x646
0x641: JUMPI 0x646 V629
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]

================================

Block 0x642
[0x642:0x645]
---
Predecessors: [0x610]
Successors: []
---
0x642 PUSH2 0x0
0x645 JUMP
---
0x642: V631 = 0x0
0x645: THROW 
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]

================================

Block 0x646
[0x646:0x650]
---
Predecessors: [0x610]
Successors: [0x651, 0x683]
---
0x646 JUMPDEST
0x647 PUSH1 0x4
0x649 SLOAD
0x64a CALLVALUE
0x64b GT
0x64c ISZERO
0x64d PUSH2 0x683
0x650 JUMPI
---
0x646: JUMPDEST 
0x647: V632 = 0x4
0x649: V633 = S[0x4]
0x64a: V634 = CALLVALUE
0x64b: V635 = GT V634 V633
0x64c: V636 = ISZERO V635
0x64d: V637 = 0x683
0x650: JUMPI 0x683 V636
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]

================================

Block 0x651
[0x651:0x67e]
---
Predecessors: [0x646]
Successors: [0x67f, 0x683]
---
0x651 PUSH1 0x4
0x653 SLOAD
0x654 PUSH1 0x40
0x656 MLOAD
0x657 PUSH1 0x1
0x659 PUSH1 0xa0
0x65b PUSH1 0x2
0x65d EXP
0x65e SUB
0x65f CALLER
0x660 AND
0x661 SWAP2
0x662 CALLVALUE
0x663 SUB
0x664 DUP1
0x665 ISZERO
0x666 PUSH2 0x8fc
0x669 MUL
0x66a SWAP2
0x66b PUSH1 0x0
0x66d DUP2
0x66e DUP2
0x66f DUP2
0x670 DUP6
0x671 DUP9
0x672 DUP9
0x673 CALL
0x674 SWAP4
0x675 POP
0x676 POP
0x677 POP
0x678 POP
0x679 ISZERO
0x67a ISZERO
0x67b PUSH2 0x683
0x67e JUMPI
---
0x651: V638 = 0x4
0x653: V639 = S[0x4]
0x654: V640 = 0x40
0x656: V641 = M[0x40]
0x657: V642 = 0x1
0x659: V643 = 0xa0
0x65b: V644 = 0x2
0x65d: V645 = EXP 0x2 0xa0
0x65e: V646 = SUB 0x10000000000000000000000000000000000000000 0x1
0x65f: V647 = CALLER
0x660: V648 = AND V647 0xffffffffffffffffffffffffffffffffffffffff
0x662: V649 = CALLVALUE
0x663: V650 = SUB V649 V639
0x665: V651 = ISZERO V650
0x666: V652 = 0x8fc
0x669: V653 = MUL 0x8fc V651
0x66b: V654 = 0x0
0x673: V655 = CALL V653 V648 V650 V641 0x0 V641 0x0
0x679: V656 = ISZERO V655
0x67a: V657 = ISZERO V656
0x67b: V658 = 0x683
0x67e: JUMPI 0x683 V657
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]

================================

Block 0x67f
[0x67f:0x682]
---
Predecessors: [0x651]
Successors: []
---
0x67f PUSH2 0x0
0x682 JUMP
---
0x67f: V659 = 0x0
0x682: THROW 
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]

================================

Block 0x683
[0x683:0x683]
---
Predecessors: [0x646, 0x651]
Successors: [0x684]
---
0x683 JUMPDEST
---
0x683: JUMPDEST 
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]

================================

Block 0x684
[0x684:0x688]
---
Predecessors: [0x683]
Successors: [0x6c1]
---
0x684 JUMPDEST
0x685 PUSH2 0x6c1
0x688 JUMP
---
0x684: JUMPDEST 
0x685: V660 = 0x6c1
0x688: JUMP 0x6c1
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]

================================

Block 0x689
[0x689:0x692]
---
Predecessors: [0x5fc]
Successors: [0x693, 0x6c1]
---
0x689 JUMPDEST
0x68a PUSH1 0x0
0x68c CALLVALUE
0x68d GT
0x68e ISZERO
0x68f PUSH2 0x6c1
0x692 JUMPI
---
0x689: JUMPDEST 
0x68a: V661 = 0x0
0x68c: V662 = CALLVALUE
0x68d: V663 = GT V662 0x0
0x68e: V664 = ISZERO V663
0x68f: V665 = 0x6c1
0x692: JUMPI 0x6c1 V664
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]

================================

Block 0x693
[0x693:0x6bc]
---
Predecessors: [0x689]
Successors: [0x6bd, 0x6c1]
---
0x693 PUSH1 0x40
0x695 MLOAD
0x696 PUSH1 0x1
0x698 PUSH1 0xa0
0x69a PUSH1 0x2
0x69c EXP
0x69d SUB
0x69e CALLER
0x69f AND
0x6a0 SWAP1
0x6a1 CALLVALUE
0x6a2 DUP1
0x6a3 ISZERO
0x6a4 PUSH2 0x8fc
0x6a7 MUL
0x6a8 SWAP2
0x6a9 PUSH1 0x0
0x6ab DUP2
0x6ac DUP2
0x6ad DUP2
0x6ae DUP6
0x6af DUP9
0x6b0 DUP9
0x6b1 CALL
0x6b2 SWAP4
0x6b3 POP
0x6b4 POP
0x6b5 POP
0x6b6 POP
0x6b7 ISZERO
0x6b8 ISZERO
0x6b9 PUSH2 0x6c1
0x6bc JUMPI
---
0x693: V666 = 0x40
0x695: V667 = M[0x40]
0x696: V668 = 0x1
0x698: V669 = 0xa0
0x69a: V670 = 0x2
0x69c: V671 = EXP 0x2 0xa0
0x69d: V672 = SUB 0x10000000000000000000000000000000000000000 0x1
0x69e: V673 = CALLER
0x69f: V674 = AND V673 0xffffffffffffffffffffffffffffffffffffffff
0x6a1: V675 = CALLVALUE
0x6a3: V676 = ISZERO V675
0x6a4: V677 = 0x8fc
0x6a7: V678 = MUL 0x8fc V676
0x6a9: V679 = 0x0
0x6b1: V680 = CALL V678 V674 V675 V667 0x0 V667 0x0
0x6b7: V681 = ISZERO V680
0x6b8: V682 = ISZERO V681
0x6b9: V683 = 0x6c1
0x6bc: JUMPI 0x6c1 V682
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]

================================

Block 0x6bd
[0x6bd:0x6c0]
---
Predecessors: [0x693]
Successors: []
---
0x6bd PUSH2 0x0
0x6c0 JUMP
---
0x6bd: V684 = 0x0
0x6c0: THROW 
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]

================================

Block 0x6c1
[0x6c1:0x6c1]
---
Predecessors: [0x684, 0x689, 0x693]
Successors: [0x6c2]
---
0x6c1 JUMPDEST
---
0x6c1: JUMPDEST 
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]

================================

Block 0x6c2
[0x6c2:0x6c2]
---
Predecessors: [0x6c1]
Successors: [0x6c3]
---
0x6c2 JUMPDEST
---
0x6c2: JUMPDEST 
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]

================================

Block 0x6c3
[0x6c3:0x6d3]
---
Predecessors: [0x6c2]
Successors: [0x6d4, 0x6d7]
---
0x6c3 JUMPDEST
0x6c4 PUSH1 0x1
0x6c6 PUSH1 0xa0
0x6c8 PUSH1 0x2
0x6ca EXP
0x6cb SUB
0x6cc DUP4
0x6cd AND
0x6ce ISZERO
0x6cf ISZERO
0x6d0 PUSH2 0x6d7
0x6d3 JUMPI
---
0x6c3: JUMPDEST 
0x6c4: V685 = 0x1
0x6c6: V686 = 0xa0
0x6c8: V687 = 0x2
0x6ca: V688 = EXP 0x2 0xa0
0x6cb: V689 = SUB 0x10000000000000000000000000000000000000000 0x1
0x6cd: V690 = AND V296 0xffffffffffffffffffffffffffffffffffffffff
0x6ce: V691 = ISZERO V690
0x6cf: V692 = ISZERO V691
0x6d0: V693 = 0x6d7
0x6d3: JUMPI 0x6d7 V692
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]

================================

Block 0x6d4
[0x6d4:0x6d6]
---
Predecessors: [0x6c3]
Successors: [0x6d7]
---
0x6d4 CALLER
0x6d5 SWAP3
0x6d6 POP
---
0x6d4: V694 = CALLER
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V296, 0x0, 0x0]
Stack pops: 3
Stack additions: [V694, S1, S0]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V694, 0x0, 0x0]

================================

Block 0x6d7
[0x6d7:0x7a1]
---
Predecessors: [0x6c3, 0x6d4]
Successors: [0x7a2, 0x7c2]
---
0x6d7 JUMPDEST
0x6d8 PUSH20 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8
0x6ed PUSH4 0x7226d055
0x6f2 DUP16
0x6f3 DUP16
0x6f4 DUP16
0x6f5 DUP16
0x6f6 DUP16
0x6f7 DUP16
0x6f8 DUP16
0x6f9 DUP16
0x6fa DUP16
0x6fb DUP16
0x6fc DUP16
0x6fd PUSH1 0x0
0x6ff PUSH1 0x40
0x701 MLOAD
0x702 PUSH1 0x20
0x704 ADD
0x705 MSTORE
0x706 PUSH1 0x40
0x708 MLOAD
0x709 DUP13
0x70a PUSH4 0xffffffff
0x70f AND
0x710 PUSH1 0xe0
0x712 PUSH1 0x2
0x714 EXP
0x715 MUL
0x716 DUP2
0x717 MSTORE
0x718 PUSH1 0x4
0x71a ADD
0x71b DUP1
0x71c DUP13
0x71d PUSH1 0x1
0x71f PUSH1 0xa0
0x721 PUSH1 0x2
0x723 EXP
0x724 SUB
0x725 AND
0x726 PUSH1 0x1
0x728 PUSH1 0xa0
0x72a PUSH1 0x2
0x72c EXP
0x72d SUB
0x72e AND
0x72f DUP2
0x730 MSTORE
0x731 PUSH1 0x20
0x733 ADD
0x734 DUP12
0x735 PUSH1 0x1
0x737 PUSH1 0xa0
0x739 PUSH1 0x2
0x73b EXP
0x73c SUB
0x73d AND
0x73e PUSH1 0x1
0x740 PUSH1 0xa0
0x742 PUSH1 0x2
0x744 EXP
0x745 SUB
0x746 AND
0x747 DUP2
0x748 MSTORE
0x749 PUSH1 0x20
0x74b ADD
0x74c DUP1
0x74d PUSH1 0x20
0x74f ADD
0x750 DUP11
0x751 DUP2
0x752 MSTORE
0x753 PUSH1 0x20
0x755 ADD
0x756 DUP10
0x757 DUP2
0x758 MSTORE
0x759 PUSH1 0x20
0x75b ADD
0x75c DUP9
0x75d DUP2
0x75e MSTORE
0x75f PUSH1 0x20
0x761 ADD
0x762 DUP8
0x763 DUP2
0x764 MSTORE
0x765 PUSH1 0x20
0x767 ADD
0x768 DUP7
0x769 DUP2
0x76a MSTORE
0x76b PUSH1 0x20
0x76d ADD
0x76e DUP6
0x76f DUP2
0x770 MSTORE
0x771 PUSH1 0x20
0x773 ADD
0x774 DUP5
0x775 DUP2
0x776 MSTORE
0x777 PUSH1 0x20
0x779 ADD
0x77a DUP4
0x77b DUP2
0x77c MSTORE
0x77d PUSH1 0x20
0x77f ADD
0x780 DUP3
0x781 DUP2
0x782 SUB
0x783 DUP3
0x784 MSTORE
0x785 DUP12
0x786 DUP2
0x787 DUP2
0x788 MLOAD
0x789 DUP2
0x78a MSTORE
0x78b PUSH1 0x20
0x78d ADD
0x78e SWAP2
0x78f POP
0x790 DUP1
0x791 MLOAD
0x792 SWAP1
0x793 PUSH1 0x20
0x795 ADD
0x796 SWAP1
0x797 DUP1
0x798 DUP4
0x799 DUP4
0x79a PUSH1 0x0
0x79c DUP4
0x79d EQ
0x79e PUSH2 0x7c2
0x7a1 JUMPI
---
0x6d7: JUMPDEST 
0x6d8: V695 = 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8
0x6ed: V696 = 0x7226d055
0x6fd: V697 = 0x0
0x6ff: V698 = 0x40
0x701: V699 = M[0x40]
0x702: V700 = 0x20
0x704: V701 = ADD 0x20 V699
0x705: M[V701] = 0x0
0x706: V702 = 0x40
0x708: V703 = M[0x40]
0x70a: V704 = 0xffffffff
0x70f: V705 = AND 0xffffffff 0x7226d055
0x710: V706 = 0xe0
0x712: V707 = 0x2
0x714: V708 = EXP 0x2 0xe0
0x715: V709 = MUL 0x100000000000000000000000000000000000000000000000000000000 0x7226d055
0x717: M[V703] = 0x7226d05500000000000000000000000000000000000000000000000000000000
0x718: V710 = 0x4
0x71a: V711 = ADD 0x4 V703
0x71d: V712 = 0x1
0x71f: V713 = 0xa0
0x721: V714 = 0x2
0x723: V715 = EXP 0x2 0xa0
0x724: V716 = SUB 0x10000000000000000000000000000000000000000 0x1
0x725: V717 = AND 0xffffffffffffffffffffffffffffffffffffffff V259
0x726: V718 = 0x1
0x728: V719 = 0xa0
0x72a: V720 = 0x2
0x72c: V721 = EXP 0x2 0xa0
0x72d: V722 = SUB 0x10000000000000000000000000000000000000000 0x1
0x72e: V723 = AND 0xffffffffffffffffffffffffffffffffffffffff V717
0x730: M[V711] = V723
0x731: V724 = 0x20
0x733: V725 = ADD 0x20 V711
0x735: V726 = 0x1
0x737: V727 = 0xa0
0x739: V728 = 0x2
0x73b: V729 = EXP 0x2 0xa0
0x73c: V730 = SUB 0x10000000000000000000000000000000000000000 0x1
0x73d: V731 = AND 0xffffffffffffffffffffffffffffffffffffffff V262
0x73e: V732 = 0x1
0x740: V733 = 0xa0
0x742: V734 = 0x2
0x744: V735 = EXP 0x2 0xa0
0x745: V736 = SUB 0x10000000000000000000000000000000000000000 0x1
0x746: V737 = AND 0xffffffffffffffffffffffffffffffffffffffff V731
0x748: M[V725] = V737
0x749: V738 = 0x20
0x74b: V739 = ADD 0x20 V725
0x74d: V740 = 0x20
0x74f: V741 = ADD 0x20 V739
0x752: M[V741] = V266
0x753: V742 = 0x20
0x755: V743 = ADD 0x20 V741
0x758: M[V743] = V269
0x759: V744 = 0x20
0x75b: V745 = ADD 0x20 V743
0x75e: M[V745] = V272
0x75f: V746 = 0x20
0x761: V747 = ADD 0x20 V745
0x764: M[V747] = V275
0x765: V748 = 0x20
0x767: V749 = ADD 0x20 V747
0x76a: M[V749] = V278
0x76b: V750 = 0x20
0x76d: V751 = ADD 0x20 V749
0x770: M[V751] = V281
0x771: V752 = 0x20
0x773: V753 = ADD 0x20 V751
0x776: M[V753] = V284
0x777: V754 = 0x20
0x779: V755 = ADD 0x20 V753
0x77c: M[V755] = V287
0x77d: V756 = 0x20
0x77f: V757 = ADD 0x20 V755
0x782: V758 = SUB V757 V711
0x784: M[V739] = V758
0x788: V759 = M[V239]
0x78a: M[V757] = V759
0x78b: V760 = 0x20
0x78d: V761 = ADD 0x20 V757
0x791: V762 = M[V239]
0x793: V763 = 0x20
0x795: V764 = ADD 0x20 V239
0x79a: V765 = 0x0
0x79d: V766 = EQ V762 0x0
0x79e: V767 = 0x7c2
0x7a1: JUMPI 0x7c2 V766
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S2, 0x0, 0x0]
Stack pops: 14
Stack additions: [S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, V711, V739, V761, V764, V762, V762, V761, V764]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S2, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V711, V739, V761, V764, V762, V762, V761, V764]

================================

Block 0x7a2
[0x7a2:0x7af]
---
Predecessors: [0x6d7, 0x7b0]
Successors: [0x7b0, 0x7c2]
---
0x7a2 JUMPDEST
0x7a3 DUP1
0x7a4 MLOAD
0x7a5 DUP3
0x7a6 MSTORE
0x7a7 PUSH1 0x20
0x7a9 DUP4
0x7aa GT
0x7ab ISZERO
0x7ac PUSH2 0x7c2
0x7af JUMPI
---
0x7a2: JUMPDEST 
0x7a4: V768 = M[S0]
0x7a6: M[S1] = V768
0x7a7: V769 = 0x20
0x7aa: V770 = GT S2 0x20
0x7ab: V771 = ISZERO V770
0x7ac: V772 = 0x7c2
0x7af: JUMPI 0x7c2 V771
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S23, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V711, V739, V761, V764, V762, S2, S1, S0]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S23, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V711, V739, V761, V764, V762, S2, S1, S0]

================================

Block 0x7b0
[0x7b0:0x7c1]
---
Predecessors: [0x7a2]
Successors: [0x7a2]
---
0x7b0 PUSH1 0x1f
0x7b2 NOT
0x7b3 SWAP1
0x7b4 SWAP3
0x7b5 ADD
0x7b6 SWAP2
0x7b7 PUSH1 0x20
0x7b9 SWAP2
0x7ba DUP3
0x7bb ADD
0x7bc SWAP2
0x7bd ADD
0x7be PUSH2 0x7a2
0x7c1 JUMP
---
0x7b0: V773 = 0x1f
0x7b2: V774 = NOT 0x1f
0x7b5: V775 = ADD S2 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0
0x7b7: V776 = 0x20
0x7bb: V777 = ADD 0x20 S1
0x7bd: V778 = ADD 0x20 S0
0x7be: V779 = 0x7a2
0x7c1: JUMP 0x7a2
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S23, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V711, V739, V761, V764, V762, S2, S1, S0]
Stack pops: 3
Stack additions: [V775, V777, V778]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S23, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V711, V739, V761, V764, V762, V775, V777, V778]

================================

Block 0x7c2
[0x7c2:0x7d4]
---
Predecessors: [0x6d7, 0x7a2]
Successors: [0x7d5, 0x7ee]
---
0x7c2 JUMPDEST
0x7c3 POP
0x7c4 POP
0x7c5 POP
0x7c6 SWAP1
0x7c7 POP
0x7c8 SWAP1
0x7c9 DUP2
0x7ca ADD
0x7cb SWAP1
0x7cc PUSH1 0x1f
0x7ce AND
0x7cf DUP1
0x7d0 ISZERO
0x7d1 PUSH2 0x7ee
0x7d4 JUMPI
---
0x7c2: JUMPDEST 
0x7ca: V780 = ADD V762 V761
0x7cc: V781 = 0x1f
0x7ce: V782 = AND 0x1f V762
0x7d0: V783 = ISZERO V782
0x7d1: V784 = 0x7ee
0x7d4: JUMPI 0x7ee V783
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S23, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V711, V739, V761, V764, V762, S2, S1, S0]
Stack pops: 6
Stack additions: [V780, V782]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S23, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V711, V739, V780, V782]

================================

Block 0x7d5
[0x7d5:0x7ed]
---
Predecessors: [0x7c2]
Successors: [0x7ee]
---
0x7d5 DUP1
0x7d6 DUP3
0x7d7 SUB
0x7d8 DUP1
0x7d9 MLOAD
0x7da PUSH1 0x1
0x7dc DUP4
0x7dd PUSH1 0x20
0x7df SUB
0x7e0 PUSH2 0x100
0x7e3 EXP
0x7e4 SUB
0x7e5 NOT
0x7e6 AND
0x7e7 DUP2
0x7e8 MSTORE
0x7e9 PUSH1 0x20
0x7eb ADD
0x7ec SWAP2
0x7ed POP
---
0x7d7: V785 = SUB V780 V782
0x7d9: V786 = M[V785]
0x7da: V787 = 0x1
0x7dd: V788 = 0x20
0x7df: V789 = SUB 0x20 V782
0x7e0: V790 = 0x100
0x7e3: V791 = EXP 0x100 V789
0x7e4: V792 = SUB V791 0x1
0x7e5: V793 = NOT V792
0x7e6: V794 = AND V793 V786
0x7e8: M[V785] = V794
0x7e9: V795 = 0x20
0x7eb: V796 = ADD 0x20 V785
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S19, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V711, V739, V780, V782]
Stack pops: 2
Stack additions: [V796, S0]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S19, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V711, V739, V796, V782]

================================

Block 0x7ee
[0x7ee:0x80f]
---
Predecessors: [0x7c2, 0x7d5]
Successors: [0x810, 0x811]
---
0x7ee JUMPDEST
0x7ef POP
0x7f0 SWAP13
0x7f1 POP
0x7f2 POP
0x7f3 POP
0x7f4 POP
0x7f5 POP
0x7f6 POP
0x7f7 POP
0x7f8 POP
0x7f9 POP
0x7fa POP
0x7fb POP
0x7fc POP
0x7fd POP
0x7fe PUSH1 0x20
0x800 PUSH1 0x40
0x802 MLOAD
0x803 DUP1
0x804 DUP4
0x805 SUB
0x806 DUP2
0x807 DUP7
0x808 DUP1
0x809 EXTCODESIZE
0x80a ISZERO
0x80b ISZERO
0x80c PUSH2 0x811
0x80f JUMPI
---
0x7ee: JUMPDEST 
0x7fe: V797 = 0x20
0x800: V798 = 0x40
0x802: V799 = M[0x40]
0x805: V800 = SUB S1 V799
0x809: V801 = EXTCODESIZE 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8
0x80a: V802 = ISZERO V801
0x80b: V803 = ISZERO V802
0x80c: V804 = 0x811
0x80f: JUMPI 0x811 V803
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S19, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, V711, V739, S1, V782]
Stack pops: 17
Stack additions: [S16, S15, S1, 0x20, V799, V800, V799, S16]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S19, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, S1, 0x20, V799, V800, V799, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8]

================================

Block 0x810
[0x810:0x810]
---
Predecessors: [0x7ee]
Successors: []
---
0x810 INVALID
---
0x810: INVALID 
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S10, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, S5, 0x20, V799, V800, V799, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S10, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, S5, 0x20, V799, V800, V799, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8]

================================

Block 0x811
[0x811:0x81c]
---
Predecessors: [0x7ee]
Successors: [0x81d, 0x81e]
---
0x811 JUMPDEST
0x812 PUSH1 0x32
0x814 GAS
0x815 SUB
0x816 DELEGATECALL
0x817 ISZERO
0x818 ISZERO
0x819 PUSH2 0x81e
0x81c JUMPI
---
0x811: JUMPDEST 
0x812: V805 = 0x32
0x814: V806 = GAS
0x815: V807 = SUB V806 0x32
0x816: V808 = DELEGATECALL V807 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8 V799 V800 V799 0x20
0x817: V809 = ISZERO V808
0x818: V810 = ISZERO V809
0x819: V811 = 0x81e
0x81c: JUMPI 0x81e V810
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S10, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, S5, 0x20, V799, V800, V799, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8]
Stack pops: 5
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S10, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, S5]

================================

Block 0x81d
[0x81d:0x81d]
---
Predecessors: [0x811]
Successors: []
---
0x81d INVALID
---
0x81d: INVALID 
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S5, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S5, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, S0]

================================

Block 0x81e
[0x81e:0x883]
---
Predecessors: [0x811]
Successors: [0x884, 0x885]
---
0x81e JUMPDEST
0x81f POP
0x820 POP
0x821 PUSH1 0x40
0x823 DUP1
0x824 MLOAD
0x825 DUP1
0x826 MLOAD
0x827 PUSH32 0x13af403500000000000000000000000000000000000000000000000000000000
0x848 DUP3
0x849 MSTORE
0x84a PUSH1 0x1
0x84c PUSH1 0xa0
0x84e PUSH1 0x2
0x850 EXP
0x851 SUB
0x852 DUP8
0x853 DUP2
0x854 AND
0x855 PUSH1 0x4
0x857 DUP5
0x858 ADD
0x859 MSTORE
0x85a SWAP3
0x85b MLOAD
0x85c SWAP1
0x85d SWAP5
0x85e POP
0x85f SWAP2
0x860 DUP5
0x861 AND
0x862 SWAP3
0x863 POP
0x864 PUSH4 0x13af4035
0x869 SWAP2
0x86a PUSH1 0x24
0x86c DUP1
0x86d DUP4
0x86e ADD
0x86f SWAP3
0x870 PUSH1 0x0
0x872 SWAP3
0x873 SWAP2
0x874 SWAP1
0x875 DUP3
0x876 SWAP1
0x877 SUB
0x878 ADD
0x879 DUP2
0x87a DUP4
0x87b DUP8
0x87c DUP1
0x87d EXTCODESIZE
0x87e ISZERO
0x87f ISZERO
0x880 PUSH2 0x885
0x883 JUMPI
---
0x81e: JUMPDEST 
0x821: V812 = 0x40
0x824: V813 = M[0x40]
0x826: V814 = M[V813]
0x827: V815 = 0x13af403500000000000000000000000000000000000000000000000000000000
0x849: M[V813] = 0x13af403500000000000000000000000000000000000000000000000000000000
0x84a: V816 = 0x1
0x84c: V817 = 0xa0
0x84e: V818 = 0x2
0x850: V819 = EXP 0x2 0xa0
0x851: V820 = SUB 0x10000000000000000000000000000000000000000 0x1
0x854: V821 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x855: V822 = 0x4
0x858: V823 = ADD V813 0x4
0x859: M[V823] = V821
0x85b: V824 = M[0x40]
0x861: V825 = AND V814 0xffffffffffffffffffffffffffffffffffffffff
0x864: V826 = 0x13af4035
0x86a: V827 = 0x24
0x86e: V828 = ADD V813 0x24
0x870: V829 = 0x0
0x877: V830 = SUB V813 V824
0x878: V831 = ADD V830 0x24
0x87d: V832 = EXTCODESIZE V825
0x87e: V833 = ISZERO V832
0x87f: V834 = ISZERO V833
0x880: V835 = 0x885
0x883: JUMPI 0x885 V834
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S5, 0x0, 0x0, 0x88ff4d8d6f84a23d45dd8a55d0786eb5d1e41eb8, 0x7226d055, S0]
Stack pops: 6
Stack additions: [S5, S4, V814, V825, 0x13af4035, V828, 0x0, V824, V831, V824, 0x0, V825]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S5, 0x0, V814, V825, 0x13af4035, V828, 0x0, V824, V831, V824, 0x0, V825]

================================

Block 0x884
[0x884:0x884]
---
Predecessors: [0x81e]
Successors: []
---
0x884 INVALID
---
0x884: INVALID 
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S11, 0x0, V814, V825, 0x13af4035, V828, 0x0, V824, V831, V824, 0x0, V825]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S11, 0x0, V814, V825, 0x13af4035, V828, 0x0, V824, V831, V824, 0x0, V825]

================================

Block 0x885
[0x885:0x890]
---
Predecessors: [0x81e]
Successors: [0x891, 0x892]
---
0x885 JUMPDEST
0x886 PUSH1 0x32
0x888 GAS
0x889 SUB
0x88a CALL
0x88b ISZERO
0x88c ISZERO
0x88d PUSH2 0x892
0x890 JUMPI
---
0x885: JUMPDEST 
0x886: V836 = 0x32
0x888: V837 = GAS
0x889: V838 = SUB V837 0x32
0x88a: V839 = CALL V838 V825 0x0 V824 V831 V824 0x0
0x88b: V840 = ISZERO V839
0x88c: V841 = ISZERO V840
0x88d: V842 = 0x892
0x890: JUMPI 0x892 V841
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S11, 0x0, V814, V825, 0x13af4035, V828, 0x0, V824, V831, V824, 0x0, V825]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S11, 0x0, V814, V825, 0x13af4035, V828]

================================

Block 0x891
[0x891:0x891]
---
Predecessors: [0x885]
Successors: []
---
0x891 INVALID
---
0x891: INVALID 
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S5, 0x0, V814, V825, 0x13af4035, V828]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S5, 0x0, V814, V825, 0x13af4035, V828]

================================

Block 0x892
[0x892:0x8ea]
---
Predecessors: [0x885]
Successors: [0x8eb, 0x8ec]
---
0x892 JUMPDEST
0x893 POP
0x894 POP
0x895 POP
0x896 DUP1
0x897 PUSH1 0x1
0x899 PUSH1 0xa0
0x89b PUSH1 0x2
0x89d EXP
0x89e SUB
0x89f AND
0x8a0 PUSH4 0xd31fdffd
0x8a5 DUP5
0x8a6 PUSH1 0x40
0x8a8 MLOAD
0x8a9 DUP3
0x8aa PUSH4 0xffffffff
0x8af AND
0x8b0 PUSH1 0xe0
0x8b2 PUSH1 0x2
0x8b4 EXP
0x8b5 MUL
0x8b6 DUP2
0x8b7 MSTORE
0x8b8 PUSH1 0x4
0x8ba ADD
0x8bb DUP1
0x8bc DUP3
0x8bd PUSH1 0x1
0x8bf PUSH1 0xa0
0x8c1 PUSH1 0x2
0x8c3 EXP
0x8c4 SUB
0x8c5 AND
0x8c6 PUSH1 0x1
0x8c8 PUSH1 0xa0
0x8ca PUSH1 0x2
0x8cc EXP
0x8cd SUB
0x8ce AND
0x8cf DUP2
0x8d0 MSTORE
0x8d1 PUSH1 0x20
0x8d3 ADD
0x8d4 SWAP2
0x8d5 POP
0x8d6 POP
0x8d7 PUSH1 0x0
0x8d9 PUSH1 0x40
0x8db MLOAD
0x8dc DUP1
0x8dd DUP4
0x8de SUB
0x8df DUP2
0x8e0 PUSH1 0x0
0x8e2 DUP8
0x8e3 DUP1
0x8e4 EXTCODESIZE
0x8e5 ISZERO
0x8e6 ISZERO
0x8e7 PUSH2 0x8ec
0x8ea JUMPI
---
0x892: JUMPDEST 
0x897: V843 = 0x1
0x899: V844 = 0xa0
0x89b: V845 = 0x2
0x89d: V846 = EXP 0x2 0xa0
0x89e: V847 = SUB 0x10000000000000000000000000000000000000000 0x1
0x89f: V848 = AND 0xffffffffffffffffffffffffffffffffffffffff V814
0x8a0: V849 = 0xd31fdffd
0x8a6: V850 = 0x40
0x8a8: V851 = M[0x40]
0x8aa: V852 = 0xffffffff
0x8af: V853 = AND 0xffffffff 0xd31fdffd
0x8b0: V854 = 0xe0
0x8b2: V855 = 0x2
0x8b4: V856 = EXP 0x2 0xe0
0x8b5: V857 = MUL 0x100000000000000000000000000000000000000000000000000000000 0xd31fdffd
0x8b7: M[V851] = 0xd31fdffd00000000000000000000000000000000000000000000000000000000
0x8b8: V858 = 0x4
0x8ba: V859 = ADD 0x4 V851
0x8bd: V860 = 0x1
0x8bf: V861 = 0xa0
0x8c1: V862 = 0x2
0x8c3: V863 = EXP 0x2 0xa0
0x8c4: V864 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8c5: V865 = AND 0xffffffffffffffffffffffffffffffffffffffff S5
0x8c6: V866 = 0x1
0x8c8: V867 = 0xa0
0x8ca: V868 = 0x2
0x8cc: V869 = EXP 0x2 0xa0
0x8cd: V870 = SUB 0x10000000000000000000000000000000000000000 0x1
0x8ce: V871 = AND 0xffffffffffffffffffffffffffffffffffffffff V865
0x8d0: M[V859] = V871
0x8d1: V872 = 0x20
0x8d3: V873 = ADD 0x20 V859
0x8d7: V874 = 0x0
0x8d9: V875 = 0x40
0x8db: V876 = M[0x40]
0x8de: V877 = SUB V873 V876
0x8e0: V878 = 0x0
0x8e4: V879 = EXTCODESIZE V848
0x8e5: V880 = ISZERO V879
0x8e6: V881 = ISZERO V880
0x8e7: V882 = 0x8ec
0x8ea: JUMPI 0x8ec V881
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S5, 0x0, V814, V825, 0x13af4035, V828]
Stack pops: 6
Stack additions: [S5, S4, S3, V848, 0xd31fdffd, V873, 0x0, V876, V877, V876, 0x0, V848]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S5, 0x0, V814, V848, 0xd31fdffd, V873, 0x0, V876, V877, V876, 0x0, V848]

================================

Block 0x8eb
[0x8eb:0x8eb]
---
Predecessors: [0x892]
Successors: []
---
0x8eb INVALID
---
0x8eb: INVALID 
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S11, 0x0, V814, V848, 0xd31fdffd, V873, 0x0, V876, V877, V876, 0x0, V848]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S11, 0x0, V814, V848, 0xd31fdffd, V873, 0x0, V876, V877, V876, 0x0, V848]

================================

Block 0x8ec
[0x8ec:0x8f7]
---
Predecessors: [0x892]
Successors: [0x8f8, 0x8f9]
---
0x8ec JUMPDEST
0x8ed PUSH1 0x32
0x8ef GAS
0x8f0 SUB
0x8f1 CALL
0x8f2 ISZERO
0x8f3 ISZERO
0x8f4 PUSH2 0x8f9
0x8f7 JUMPI
---
0x8ec: JUMPDEST 
0x8ed: V883 = 0x32
0x8ef: V884 = GAS
0x8f0: V885 = SUB V884 0x32
0x8f1: V886 = CALL V885 V848 0x0 V876 V877 V876 0x0
0x8f2: V887 = ISZERO V886
0x8f3: V888 = ISZERO V887
0x8f4: V889 = 0x8f9
0x8f7: JUMPI 0x8f9 V888
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S11, 0x0, V814, V848, 0xd31fdffd, V873, 0x0, V876, V877, V876, 0x0, V848]
Stack pops: 6
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S11, 0x0, V814, V848, 0xd31fdffd, V873]

================================

Block 0x8f8
[0x8f8:0x8f8]
---
Predecessors: [0x8ec]
Successors: []
---
0x8f8 INVALID
---
0x8f8: INVALID 
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S5, 0x0, V814, V848, 0xd31fdffd, V873]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S5, 0x0, V814, V848, 0xd31fdffd, V873]

================================

Block 0x8f9
[0x8f9:0x923]
---
Predecessors: [0x8ec]
Successors: [0xaa5]
---
0x8f9 JUMPDEST
0x8fa POP
0x8fb POP
0x8fc POP
0x8fd PUSH1 0x1
0x8ff PUSH1 0xa0
0x901 PUSH1 0x2
0x903 EXP
0x904 SUB
0x905 DUP4
0x906 AND
0x907 PUSH1 0x0
0x909 SWAP1
0x90a DUP2
0x90b MSTORE
0x90c PUSH1 0x2
0x90e PUSH1 0x20
0x910 MSTORE
0x911 PUSH1 0x40
0x913 SWAP1
0x914 SHA3
0x915 DUP1
0x916 SLOAD
0x917 PUSH1 0x1
0x919 DUP2
0x91a ADD
0x91b PUSH2 0x924
0x91e DUP4
0x91f DUP3
0x920 PUSH2 0xaa5
0x923 JUMP
---
0x8f9: JUMPDEST 
0x8fd: V890 = 0x1
0x8ff: V891 = 0xa0
0x901: V892 = 0x2
0x903: V893 = EXP 0x2 0xa0
0x904: V894 = SUB 0x10000000000000000000000000000000000000000 0x1
0x906: V895 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x907: V896 = 0x0
0x90b: M[0x0] = V895
0x90c: V897 = 0x2
0x90e: V898 = 0x20
0x910: M[0x20] = 0x2
0x911: V899 = 0x40
0x914: V900 = SHA3 0x0 0x40
0x916: V901 = S[V900]
0x917: V902 = 0x1
0x91a: V903 = ADD V901 0x1
0x91b: V904 = 0x924
0x920: V905 = 0xaa5
0x923: JUMP 0xaa5
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S5, 0x0, V814, V848, 0xd31fdffd, V873]
Stack pops: 6
Stack additions: [S5, S4, S3, V900, V901, V903, 0x924, V900, V903]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S5, 0x0, V814, V900, V901, V903, 0x924, V900, V903]

================================

Block 0x924
[0x924:0x931]
---
Predecessors: [0xaca, 0xaed]
Successors: [0x932]
---
0x924 JUMPDEST
0x925 SWAP2
0x926 PUSH1 0x0
0x928 MSTORE
0x929 PUSH1 0x20
0x92b PUSH1 0x0
0x92d SHA3
0x92e SWAP1
0x92f ADD
0x930 PUSH1 0x0
---
0x924: JUMPDEST 
0x926: V906 = 0x0
0x928: M[0x0] = S2
0x929: V907 = 0x20
0x92b: V908 = 0x0
0x92d: V909 = SHA3 0x0 0x20
0x92f: V910 = ADD S1 V909
0x930: V911 = 0x0
---
Entry stack: [V12, 0x15a, V259, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 3
Stack additions: [S0, V910, 0x0]
Exit stack: [V12, 0x15a, V259, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S0, V910, 0x0]

================================

Block 0x932
[0x932:0x986]
---
Predecessors: [0x924]
Successors: [0x987]
---
0x932 JUMPDEST
0x933 DUP2
0x934 SLOAD
0x935 PUSH2 0x100
0x938 SWAP2
0x939 SWAP1
0x93a SWAP2
0x93b EXP
0x93c PUSH1 0x1
0x93e PUSH1 0xa0
0x940 PUSH1 0x2
0x942 EXP
0x943 SUB
0x944 DUP2
0x945 DUP2
0x946 MUL
0x947 NOT
0x948 SWAP1
0x949 SWAP3
0x94a AND
0x94b DUP6
0x94c DUP4
0x94d AND
0x94e SWAP2
0x94f DUP3
0x950 MUL
0x951 OR
0x952 SWAP1
0x953 SWAP3
0x954 SSTORE
0x955 PUSH1 0x40
0x957 MLOAD
0x958 SWAP2
0x959 SWAP3
0x95a POP
0x95b DUP6
0x95c AND
0x95d SWAP1
0x95e PUSH32 0x39a897fc2f5613d2a2b9ec75f5b36723b03492a752d0951ba46507590ec52650
0x97f SWAP1
0x980 PUSH1 0x0
0x982 SWAP1
0x983 LOG3
0x984 DUP1
0x985 SWAP2
0x986 POP
---
0x932: JUMPDEST 
0x934: V912 = S[V910]
0x935: V913 = 0x100
0x93b: V914 = EXP 0x100 0x0
0x93c: V915 = 0x1
0x93e: V916 = 0xa0
0x940: V917 = 0x2
0x942: V918 = EXP 0x2 0xa0
0x943: V919 = SUB 0x10000000000000000000000000000000000000000 0x1
0x946: V920 = MUL 0xffffffffffffffffffffffffffffffffffffffff 0x1
0x947: V921 = NOT 0xffffffffffffffffffffffffffffffffffffffff
0x94a: V922 = AND V912 0xffffffffffffffffffffffff0000000000000000000000000000000000000000
0x94d: V923 = AND 0xffffffffffffffffffffffffffffffffffffffff S3
0x950: V924 = MUL V923 0x1
0x951: V925 = OR V924 V922
0x954: S[V910] = V925
0x955: V926 = 0x40
0x957: V927 = M[0x40]
0x95c: V928 = AND S5 0xffffffffffffffffffffffffffffffffffffffff
0x95e: V929 = 0x39a897fc2f5613d2a2b9ec75f5b36723b03492a752d0951ba46507590ec52650
0x980: V930 = 0x0
0x983: LOG V927 0x0 0x39a897fc2f5613d2a2b9ec75f5b36723b03492a752d0951ba46507590ec52650 V928 V923
---
Entry stack: [V12, 0x15a, V259, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, V910, 0x0]
Stack pops: 6
Stack additions: [S5, S3, S3]
Exit stack: [V12, 0x15a, V259, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S3, S3]

================================

Block 0x987
[0x987:0x997]
---
Predecessors: [0x932]
Successors: [0x15a]
---
0x987 JUMPDEST
0x988 POP
0x989 SWAP13
0x98a SWAP12
0x98b POP
0x98c POP
0x98d POP
0x98e POP
0x98f POP
0x990 POP
0x991 POP
0x992 POP
0x993 POP
0x994 POP
0x995 POP
0x996 POP
0x997 JUMP
---
0x987: JUMPDEST 
0x997: JUMP S14
---
Entry stack: [V12, 0x15a, V259, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 15
Stack additions: [S1]
Exit stack: [V12, 0x15a, V259, S16, S15, S1]

================================

Block 0x998
[0x998:0x9d7]
---
Predecessors: [0x35a]
Successors: [0x9d8, 0xa1e]
---
0x998 JUMPDEST
0x999 PUSH1 0x5
0x99b DUP1
0x99c SLOAD
0x99d PUSH1 0x40
0x99f DUP1
0x9a0 MLOAD
0x9a1 PUSH1 0x20
0x9a3 PUSH1 0x2
0x9a5 PUSH1 0x1
0x9a7 DUP6
0x9a8 AND
0x9a9 ISZERO
0x9aa PUSH2 0x100
0x9ad MUL
0x9ae PUSH1 0x0
0x9b0 NOT
0x9b1 ADD
0x9b2 SWAP1
0x9b3 SWAP5
0x9b4 AND
0x9b5 SWAP4
0x9b6 SWAP1
0x9b7 SWAP4
0x9b8 DIV
0x9b9 PUSH1 0x1f
0x9bb DUP2
0x9bc ADD
0x9bd DUP5
0x9be SWAP1
0x9bf DIV
0x9c0 DUP5
0x9c1 MUL
0x9c2 DUP3
0x9c3 ADD
0x9c4 DUP5
0x9c5 ADD
0x9c6 SWAP1
0x9c7 SWAP3
0x9c8 MSTORE
0x9c9 DUP2
0x9ca DUP2
0x9cb MSTORE
0x9cc SWAP3
0x9cd SWAP2
0x9ce DUP4
0x9cf ADD
0x9d0 DUP3
0x9d1 DUP3
0x9d2 DUP1
0x9d3 ISZERO
0x9d4 PUSH2 0xa1e
0x9d7 JUMPI
---
0x998: JUMPDEST 
0x999: V931 = 0x5
0x99c: V932 = S[0x5]
0x99d: V933 = 0x40
0x9a0: V934 = M[0x40]
0x9a1: V935 = 0x20
0x9a3: V936 = 0x2
0x9a5: V937 = 0x1
0x9a8: V938 = AND V932 0x1
0x9a9: V939 = ISZERO V938
0x9aa: V940 = 0x100
0x9ad: V941 = MUL 0x100 V939
0x9ae: V942 = 0x0
0x9b0: V943 = NOT 0x0
0x9b1: V944 = ADD 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff V941
0x9b4: V945 = AND V932 V944
0x9b8: V946 = DIV V945 0x2
0x9b9: V947 = 0x1f
0x9bc: V948 = ADD V946 0x1f
0x9bf: V949 = DIV V948 0x20
0x9c1: V950 = MUL 0x20 V949
0x9c3: V951 = ADD V934 V950
0x9c5: V952 = ADD 0x20 V951
0x9c8: M[0x40] = V952
0x9cb: M[V934] = V946
0x9cf: V953 = ADD V934 0x20
0x9d3: V954 = ISZERO V946
0x9d4: V955 = 0xa1e
0x9d7: JUMPI 0xa1e V954
---
Entry stack: [V12, 0x362]
Stack pops: 0
Stack additions: [V934, 0x5, V946, V953, 0x5, V946]
Exit stack: [V12, 0x362, V934, 0x5, V946, V953, 0x5, V946]

================================

Block 0x9d8
[0x9d8:0x9df]
---
Predecessors: [0x998]
Successors: [0x9e0, 0x9f3]
---
0x9d8 DUP1
0x9d9 PUSH1 0x1f
0x9db LT
0x9dc PUSH2 0x9f3
0x9df JUMPI
---
0x9d9: V956 = 0x1f
0x9db: V957 = LT 0x1f V946
0x9dc: V958 = 0x9f3
0x9df: JUMPI 0x9f3 V957
---
Entry stack: [V12, 0x362, V934, 0x5, V946, V953, 0x5, V946]
Stack pops: 1
Stack additions: [S0]
Exit stack: [V12, 0x362, V934, 0x5, V946, V953, 0x5, V946]

================================

Block 0x9e0
[0x9e0:0x9f2]
---
Predecessors: [0x9d8]
Successors: [0xa1e]
---
0x9e0 PUSH2 0x100
0x9e3 DUP1
0x9e4 DUP4
0x9e5 SLOAD
0x9e6 DIV
0x9e7 MUL
0x9e8 DUP4
0x9e9 MSTORE
0x9ea SWAP2
0x9eb PUSH1 0x20
0x9ed ADD
0x9ee SWAP2
0x9ef PUSH2 0xa1e
0x9f2 JUMP
---
0x9e0: V959 = 0x100
0x9e5: V960 = S[0x5]
0x9e6: V961 = DIV V960 0x100
0x9e7: V962 = MUL V961 0x100
0x9e9: M[V953] = V962
0x9eb: V963 = 0x20
0x9ed: V964 = ADD 0x20 V953
0x9ef: V965 = 0xa1e
0x9f2: JUMP 0xa1e
---
Entry stack: [V12, 0x362, V934, 0x5, V946, V953, 0x5, V946]
Stack pops: 3
Stack additions: [V964, S1, S0]
Exit stack: [V12, 0x362, V934, 0x5, V946, V964, 0x5, V946]

================================

Block 0x9f3
[0x9f3:0xa00]
---
Predecessors: [0x9d8]
Successors: [0xa01]
---
0x9f3 JUMPDEST
0x9f4 DUP3
0x9f5 ADD
0x9f6 SWAP2
0x9f7 SWAP1
0x9f8 PUSH1 0x0
0x9fa MSTORE
0x9fb PUSH1 0x20
0x9fd PUSH1 0x0
0x9ff SHA3
0xa00 SWAP1
---
0x9f3: JUMPDEST 
0x9f5: V966 = ADD V953 V946
0x9f8: V967 = 0x0
0x9fa: M[0x0] = 0x5
0x9fb: V968 = 0x20
0x9fd: V969 = 0x0
0x9ff: V970 = SHA3 0x0 0x20
---
Entry stack: [V12, 0x362, V934, 0x5, V946, V953, 0x5, V946]
Stack pops: 3
Stack additions: [V966, V970, S2]
Exit stack: [V12, 0x362, V934, 0x5, V946, V966, V970, V953]

================================

Block 0xa01
[0xa01:0xa14]
---
Predecessors: [0x9f3, 0xa01]
Successors: [0xa01, 0xa15]
---
0xa01 JUMPDEST
0xa02 DUP2
0xa03 SLOAD
0xa04 DUP2
0xa05 MSTORE
0xa06 SWAP1
0xa07 PUSH1 0x1
0xa09 ADD
0xa0a SWAP1
0xa0b PUSH1 0x20
0xa0d ADD
0xa0e DUP1
0xa0f DUP4
0xa10 GT
0xa11 PUSH2 0xa01
0xa14 JUMPI
---
0xa01: JUMPDEST 
0xa03: V971 = S[S1]
0xa05: M[S0] = V971
0xa07: V972 = 0x1
0xa09: V973 = ADD 0x1 S1
0xa0b: V974 = 0x20
0xa0d: V975 = ADD 0x20 S0
0xa10: V976 = GT V966 V975
0xa11: V977 = 0xa01
0xa14: JUMPI 0xa01 V976
---
Entry stack: [V12, 0x362, V934, 0x5, V946, V966, S1, S0]
Stack pops: 3
Stack additions: [S2, V973, V975]
Exit stack: [V12, 0x362, V934, 0x5, V946, V966, V973, V975]

================================

Block 0xa15
[0xa15:0xa1d]
---
Predecessors: [0xa01]
Successors: [0xa1e]
---
0xa15 DUP3
0xa16 SWAP1
0xa17 SUB
0xa18 PUSH1 0x1f
0xa1a AND
0xa1b DUP3
0xa1c ADD
0xa1d SWAP2
---
0xa17: V978 = SUB V975 V966
0xa18: V979 = 0x1f
0xa1a: V980 = AND 0x1f V978
0xa1c: V981 = ADD V966 V980
---
Entry stack: [V12, 0x362, V934, 0x5, V946, V966, V973, V975]
Stack pops: 3
Stack additions: [V981, S1, S2]
Exit stack: [V12, 0x362, V934, 0x5, V946, V981, V973, V966]

================================

Block 0xa1e
[0xa1e:0xa25]
---
Predecessors: [0x998, 0x9e0, 0xa15]
Successors: [0x362]
---
0xa1e JUMPDEST
0xa1f POP
0xa20 POP
0xa21 POP
0xa22 POP
0xa23 POP
0xa24 DUP2
0xa25 JUMP
---
0xa1e: JUMPDEST 
0xa25: JUMP 0x362
---
Entry stack: [V12, 0x362, V934, 0x5, V946, S2, S1, S0]
Stack pops: 7
Stack additions: [S6, S5]
Exit stack: [V12, 0x362, V934]

================================

Block 0xa26
[0xa26:0xa56]
---
Predecessors: [0x3fd]
Successors: [0xa57, 0xa67]
---
0xa26 JUMPDEST
0xa27 DUP3
0xa28 DUP1
0xa29 SLOAD
0xa2a PUSH1 0x1
0xa2c DUP2
0xa2d PUSH1 0x1
0xa2f AND
0xa30 ISZERO
0xa31 PUSH2 0x100
0xa34 MUL
0xa35 SUB
0xa36 AND
0xa37 PUSH1 0x2
0xa39 SWAP1
0xa3a DIV
0xa3b SWAP1
0xa3c PUSH1 0x0
0xa3e MSTORE
0xa3f PUSH1 0x20
0xa41 PUSH1 0x0
0xa43 SHA3
0xa44 SWAP1
0xa45 PUSH1 0x1f
0xa47 ADD
0xa48 PUSH1 0x20
0xa4a SWAP1
0xa4b DIV
0xa4c DUP2
0xa4d ADD
0xa4e SWAP3
0xa4f DUP3
0xa50 PUSH1 0x1f
0xa52 LT
0xa53 PUSH2 0xa67
0xa56 JUMPI
---
0xa26: JUMPDEST 
0xa29: V982 = S[0x5]
0xa2a: V983 = 0x1
0xa2d: V984 = 0x1
0xa2f: V985 = AND 0x1 V982
0xa30: V986 = ISZERO V985
0xa31: V987 = 0x100
0xa34: V988 = MUL 0x100 V986
0xa35: V989 = SUB V988 0x1
0xa36: V990 = AND V989 V982
0xa37: V991 = 0x2
0xa3a: V992 = DIV V990 0x2
0xa3c: V993 = 0x0
0xa3e: M[0x0] = 0x5
0xa3f: V994 = 0x20
0xa41: V995 = 0x0
0xa43: V996 = SHA3 0x0 0x20
0xa45: V997 = 0x1f
0xa47: V998 = ADD 0x1f V992
0xa48: V999 = 0x20
0xa4b: V1000 = DIV V998 0x20
0xa4d: V1001 = ADD V996 V1000
0xa50: V1002 = 0x1f
0xa52: V1003 = LT 0x1f V370
0xa53: V1004 = 0xa67
0xa56: JUMPI 0xa67 V1003
---
Entry stack: [V12, 0x10c, V75, 0x410, 0x5, V374, V370]
Stack pops: 3
Stack additions: [S2, V1001, S0, V996, S1]
Exit stack: [V12, 0x10c, V75, 0x410, 0x5, V1001, V370, V996, V374]

================================

Block 0xa57
[0xa57:0xa66]
---
Predecessors: [0xa26]
Successors: [0xa94]
---
0xa57 DUP1
0xa58 MLOAD
0xa59 PUSH1 0xff
0xa5b NOT
0xa5c AND
0xa5d DUP4
0xa5e DUP1
0xa5f ADD
0xa60 OR
0xa61 DUP6
0xa62 SSTORE
0xa63 PUSH2 0xa94
0xa66 JUMP
---
0xa58: V1005 = M[V374]
0xa59: V1006 = 0xff
0xa5b: V1007 = NOT 0xff
0xa5c: V1008 = AND 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00 V1005
0xa5f: V1009 = ADD V370 V370
0xa60: V1010 = OR V1009 V1008
0xa62: S[0x5] = V1010
0xa63: V1011 = 0xa94
0xa66: JUMP 0xa94
---
Entry stack: [V12, 0x10c, V75, 0x410, 0x5, V1001, V370, V996, V374]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x10c, V75, 0x410, 0x5, V1001, V370, V996, V374]

================================

Block 0xa67
[0xa67:0xa75]
---
Predecessors: [0xa26]
Successors: [0xa76, 0xa94]
---
0xa67 JUMPDEST
0xa68 DUP3
0xa69 DUP1
0xa6a ADD
0xa6b PUSH1 0x1
0xa6d ADD
0xa6e DUP6
0xa6f SSTORE
0xa70 DUP3
0xa71 ISZERO
0xa72 PUSH2 0xa94
0xa75 JUMPI
---
0xa67: JUMPDEST 
0xa6a: V1012 = ADD V370 V370
0xa6b: V1013 = 0x1
0xa6d: V1014 = ADD 0x1 V1012
0xa6f: S[0x5] = V1014
0xa71: V1015 = ISZERO V370
0xa72: V1016 = 0xa94
0xa75: JUMPI 0xa94 V1015
---
Entry stack: [V12, 0x10c, V75, 0x410, 0x5, V1001, V370, V996, V374]
Stack pops: 5
Stack additions: [S4, S3, S2, S1, S0]
Exit stack: [V12, 0x10c, V75, 0x410, 0x5, V1001, V370, V996, V374]

================================

Block 0xa76
[0xa76:0xa78]
---
Predecessors: [0xa67]
Successors: [0xa79]
---
0xa76 SWAP2
0xa77 DUP3
0xa78 ADD
---
0xa78: V1017 = ADD V374 V370
---
Entry stack: [V12, 0x10c, V75, 0x410, 0x5, V1001, V370, V996, V374]
Stack pops: 3
Stack additions: [S0, S1, V1017]
Exit stack: [V12, 0x10c, V75, 0x410, 0x5, V1001, V374, V996, V1017]

================================

Block 0xa79
[0xa79:0xa81]
---
Predecessors: [0xa76, 0xa82]
Successors: [0xa82, 0xa94]
---
0xa79 JUMPDEST
0xa7a DUP3
0xa7b DUP2
0xa7c GT
0xa7d ISZERO
0xa7e PUSH2 0xa94
0xa81 JUMPI
---
0xa79: JUMPDEST 
0xa7c: V1018 = GT V1017 S2
0xa7d: V1019 = ISZERO V1018
0xa7e: V1020 = 0xa94
0xa81: JUMPI 0xa94 V1019
---
Entry stack: [V12, 0x10c, V75, 0x410, 0x5, V1001, S2, S1, V1017]
Stack pops: 3
Stack additions: [S2, S1, S0]
Exit stack: [V12, 0x10c, V75, 0x410, 0x5, V1001, S2, S1, V1017]

================================

Block 0xa82
[0xa82:0xa93]
---
Predecessors: [0xa79]
Successors: [0xa79]
---
0xa82 DUP3
0xa83 MLOAD
0xa84 DUP3
0xa85 SSTORE
0xa86 SWAP2
0xa87 PUSH1 0x20
0xa89 ADD
0xa8a SWAP2
0xa8b SWAP1
0xa8c PUSH1 0x1
0xa8e ADD
0xa8f SWAP1
0xa90 PUSH2 0xa79
0xa93 JUMP
---
0xa83: V1021 = M[S2]
0xa85: S[S1] = V1021
0xa87: V1022 = 0x20
0xa89: V1023 = ADD 0x20 S2
0xa8c: V1024 = 0x1
0xa8e: V1025 = ADD 0x1 S1
0xa90: V1026 = 0xa79
0xa93: JUMP 0xa79
---
Entry stack: [V12, 0x10c, V75, 0x410, 0x5, V1001, S2, S1, V1017]
Stack pops: 3
Stack additions: [V1023, V1025, S0]
Exit stack: [V12, 0x10c, V75, 0x410, 0x5, V1001, V1023, V1025, V1017]

================================

Block 0xa94
[0xa94:0xa94]
---
Predecessors: [0xa57, 0xa67, 0xa79]
Successors: [0xa95]
---
0xa94 JUMPDEST
---
0xa94: JUMPDEST 
---
Entry stack: [V12, 0x10c, V75, 0x410, 0x5, V1001, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x10c, V75, 0x410, 0x5, V1001, S2, S1, S0]

================================

Block 0xa95
[0xa95:0xaa0]
---
Predecessors: [0xa94]
Successors: [0xacf]
---
0xa95 JUMPDEST
0xa96 POP
0xa97 PUSH2 0x55b
0xa9a SWAP3
0xa9b SWAP2
0xa9c POP
0xa9d PUSH2 0xacf
0xaa0 JUMP
---
0xa95: JUMPDEST 
0xa97: V1027 = 0x55b
0xa9d: V1028 = 0xacf
0xaa0: JUMP 0xacf
---
Entry stack: [V12, 0x10c, V75, 0x410, 0x5, V1001, S2, S1, S0]
Stack pops: 4
Stack additions: [0x55b, S3, S1]
Exit stack: [V12, 0x10c, V75, 0x410, 0x5, 0x55b, V1001, S1]

================================

Block 0xaa1
[0xaa1:0xaa4]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0xaa1 JUMPDEST
0xaa2 POP
0xaa3 SWAP1
0xaa4 JUMP
---
0xaa1: JUMPDEST 
0xaa4: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xaa5
[0xaa5:0xab2]
---
Predecessors: [0x8f9]
Successors: [0xab3, 0xac9]
---
0xaa5 JUMPDEST
0xaa6 DUP2
0xaa7 SLOAD
0xaa8 DUP2
0xaa9 DUP4
0xaaa SSTORE
0xaab DUP2
0xaac DUP2
0xaad ISZERO
0xaae GT
0xaaf PUSH2 0xac9
0xab2 JUMPI
---
0xaa5: JUMPDEST 
0xaa7: V1029 = S[V900]
0xaaa: S[V900] = V903
0xaad: V1030 = ISZERO V1029
0xaae: V1031 = GT V1030 V903
0xaaf: V1032 = 0xac9
0xab2: JUMPI 0xac9 V1031
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S8, 0x0, V814, V900, V901, V903, 0x924, V900, V903]
Stack pops: 2
Stack additions: [S1, S0, V1029]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S8, 0x0, V814, V900, V901, V903, 0x924, V900, V903, V1029]

================================

Block 0xab3
[0xab3:0xac8]
---
Predecessors: [0xaa5]
Successors: [0xacf]
---
0xab3 PUSH1 0x0
0xab5 DUP4
0xab6 DUP2
0xab7 MSTORE
0xab8 PUSH1 0x20
0xaba SWAP1
0xabb SHA3
0xabc PUSH2 0xac9
0xabf SWAP2
0xac0 DUP2
0xac1 ADD
0xac2 SWAP1
0xac3 DUP4
0xac4 ADD
0xac5 PUSH2 0xacf
0xac8 JUMP
---
0xab3: V1033 = 0x0
0xab7: M[0x0] = V900
0xab8: V1034 = 0x20
0xabb: V1035 = SHA3 0x0 0x20
0xabc: V1036 = 0xac9
0xac1: V1037 = ADD V1035 V1029
0xac4: V1038 = ADD V903 V1035
0xac5: V1039 = 0xacf
0xac8: JUMP 0xacf
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S9, 0x0, V814, V900, V901, V903, 0x924, V900, V903, V1029]
Stack pops: 3
Stack additions: [S2, S1, 0xac9, V1037, V1038]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S9, 0x0, V814, V900, V901, V903, 0x924, V900, V903, 0xac9, V1037, V1038]

================================

Block 0xac9
[0xac9:0xac9]
---
Predecessors: [0xaa5, 0xaed]
Successors: [0xaca]
---
0xac9 JUMPDEST
---
0xac9: JUMPDEST 
---
Entry stack: [V12, 0x15a, V259, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 0
Stack additions: []
Exit stack: [V12, 0x15a, V259, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]

================================

Block 0xaca
[0xaca:0xace]
---
Predecessors: [0xac9]
Successors: [0x924]
---
0xaca JUMPDEST
0xacb POP
0xacc POP
0xacd POP
0xace JUMP
---
0xaca: JUMPDEST 
0xace: JUMP S3
---
Entry stack: [V12, 0x15a, V259, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 4
Stack additions: []
Exit stack: [V12, 0x15a, V259, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4]

================================

Block 0xacf
[0xacf:0xad4]
---
Predecessors: [0xa95, 0xab3]
Successors: [0xad5]
---
0xacf JUMPDEST
0xad0 PUSH2 0xaed
0xad3 SWAP2
0xad4 SWAP1
---
0xacf: JUMPDEST 
0xad0: V1040 = 0xaed
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S11, 0x0, V814, V900, S7, S6, S5, S4, S3, {0x55b, 0xac9}, S1, S0]
Stack pops: 2
Stack additions: [0xaed, S1, S0]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S11, 0x0, V814, V900, S7, S6, S5, S4, S3, {0x55b, 0xac9}, 0xaed, S1, S0]

================================

Block 0xad5
[0xad5:0xadd]
---
Predecessors: [0xacf, 0xade]
Successors: [0x55b, 0xade]
---
0xad5 JUMPDEST
0xad6 DUP1
0xad7 DUP3
0xad8 GT
0xad9 ISZERO
0xada PUSH2 0x55b
0xadd JUMPI
---
0xad5: JUMPDEST 
0xad8: V1041 = GT S1 S0
0xad9: V1042 = ISZERO V1041
0xada: V1043 = 0x55b
0xadd: JUMPI 0x55b V1042
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S12, 0x0, V814, V900, S8, S7, S6, S5, S4, {0x55b, 0xac9}, 0xaed, S1, S0]
Stack pops: 2
Stack additions: [S1, S0]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S12, 0x0, V814, V900, S8, S7, S6, S5, S4, {0x55b, 0xac9}, 0xaed, S1, S0]

================================

Block 0xade
[0xade:0xae8]
---
Predecessors: [0xad5]
Successors: [0xad5]
---
0xade PUSH1 0x0
0xae0 DUP2
0xae1 SSTORE
0xae2 PUSH1 0x1
0xae4 ADD
0xae5 PUSH2 0xad5
0xae8 JUMP
---
0xade: V1044 = 0x0
0xae1: S[S0] = 0x0
0xae2: V1045 = 0x1
0xae4: V1046 = ADD 0x1 S0
0xae5: V1047 = 0xad5
0xae8: JUMP 0xad5
---
Entry stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S12, 0x0, V814, V900, S8, S7, S6, S5, S4, {0x55b, 0xac9}, 0xaed, S1, S0]
Stack pops: 1
Stack additions: [V1046]
Exit stack: [V12, 0x15a, V259, V262, V239, V266, V269, V272, V275, V278, V281, V284, V287, S12, 0x0, V814, V900, S8, S7, S6, S5, S4, {0x55b, 0xac9}, 0xaed, S1, V1046]

================================

Block 0xae9
[0xae9:0xaec]
---
Predecessors: []
Successors: []
Has unresolved jump.
---
0xae9 JUMPDEST
0xaea POP
0xaeb SWAP1
0xaec JUMP
---
0xae9: JUMPDEST 
0xaec: JUMP S2
---
Entry stack: []
Stack pops: 3
Stack additions: [S1]
Exit stack: [S1]

================================

Block 0xaed
[0xaed:0xaef]
---
Predecessors: [0x55b]
Successors: [0x55b, 0x924, 0xac9]
---
0xaed JUMPDEST
0xaee SWAP1
0xaef JUMP
---
0xaed: JUMPDEST 
0xaef: JUMP S1
---
Entry stack: [V12, 0x15a, V259, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S1, S0]
Stack pops: 2
Stack additions: [S0]
Exit stack: [V12, 0x15a, V259, S20, S19, S18, S17, S16, S15, S14, S13, S12, S11, S10, S9, S8, S7, S6, S5, S4, S3, S2, S0]

================================

Block 0xaf0
[0xaf0:0xb1b]
---
Predecessors: []
Successors: []
---
0xaf0 STOP
0xaf1 LOG1
0xaf2 PUSH6 0x627a7a723058
0xaf9 SHA3
0xafa POP
0xafb MISSING 0xb7
0xafc MISSING 0xdf
0xafd MISSING 0xc6
0xafe PUSH18 0x451409a95e672370778ab0ee8a9d5e55707d
0xb11 MISSING 0xdc
0xb12 PUSH1 0x7a
0xb14 MISSING 0xcc
0xb15 BYTE
0xb16 STOP
0xb17 MISSING 0xeb
0xb18 DUP11
0xb19 MISSING 0xda
0xb1a STOP
0xb1b MISSING 0x29
---
0xaf0: STOP 
0xaf1: LOG S0 S1 S2
0xaf2: V1048 = 0x627a7a723058
0xaf9: V1049 = SHA3 0x627a7a723058 S3
0xafb: MISSING 0xb7
0xafc: MISSING 0xdf
0xafd: MISSING 0xc6
0xafe: V1050 = 0x451409a95e672370778ab0ee8a9d5e55707d
0xb11: MISSING 0xdc
0xb12: V1051 = 0x7a
0xb14: MISSING 0xcc
0xb15: V1052 = BYTE S0 S1
0xb16: STOP 
0xb17: MISSING 0xeb
0xb19: MISSING 0xda
0xb1a: STOP 
0xb1b: MISSING 0x29
---
Entry stack: []
Stack pops: 0
Stack additions: [0x451409a95e672370778ab0ee8a9d5e55707d, 0x7a, V1052, S10, S0, S1, S2, S3, S4, S5, S6, S7, S8, S9, S10]
Exit stack: []

================================

Function 0:
Public function signature: 0x3ca71d6
Entry block: 0xb6
Exit block: 0x15a
Body: 0xb6, 0xbd, 0xbe, 0x10c, 0x15a, 0x3e2, 0x3f9, 0x3fd, 0x410, 0x412, 0x413, 0x55b, 0x924, 0x932, 0x987, 0xa26, 0xa57, 0xa67, 0xa76, 0xa79, 0xa82, 0xa94, 0xa95, 0xac9, 0xaca, 0xaed

Function 1:
Public function signature: 0x13af4035
Entry block: 0x10e
Exit block: 0x10c
Body: 0x10c, 0x10e, 0x115, 0x116, 0x416, 0x42d, 0x431, 0x44d, 0x44e

Function 2:
Public function signature: 0x1c31f710
Entry block: 0x12c
Exit block: 0x10c
Body: 0x10c, 0x12c, 0x133, 0x134, 0x451, 0x468, 0x46c, 0x488, 0x489

Function 3:
Public function signature: 0x38af3eed
Entry block: 0x14a
Exit block: 0x15a
Body: 0x14a, 0x151, 0x152, 0x15a, 0x48c

Function 4:
Public function signature: 0x44a0d68a
Entry block: 0x176
Exit block: 0x10c
Body: 0x10c, 0x176, 0x17d, 0x17e, 0x49b, 0x4b2, 0x4b6, 0x4bc, 0x4bd

Function 5:
Public function signature: 0x457f4d41
Entry block: 0x18b
Exit block: 0x15a
Body: 0x15a, 0x18b, 0x192, 0x193, 0x4c0

Function 6:
Public function signature: 0x6e942f82
Entry block: 0x1b7
Exit block: 0x1c7
Body: 0x1b7, 0x1be, 0x1bf, 0x1c7, 0x4cf

Function 7:
Public function signature: 0x83197ef0
Entry block: 0x1d9
Exit block: 0x4f0
Body: 0x1d9, 0x1e0, 0x1e1, 0x4d5, 0x4ec, 0x4f0

Function 8:
Public function signature: 0x8da5cb5b
Entry block: 0x1eb
Exit block: 0x15a
Body: 0x15a, 0x1eb, 0x1f2, 0x1f3, 0x4ff

Function 9:
Public function signature: 0xc53833fe
Entry block: 0x217
Exit block: 0x15a
Body: 0x10c, 0x15a, 0x217, 0x21e, 0x21f, 0x410, 0x412, 0x413, 0x50e, 0x537, 0x538, 0x546, 0x55b, 0x924, 0x932, 0x987, 0xac9, 0xaca, 0xaed

Function 10:
Public function signature: 0xd31fdffd
Entry block: 0x243
Exit block: 0x10c
Body: 0x10c, 0x243, 0x24a, 0x24b, 0x55f, 0x576, 0x57a, 0x596, 0x597

Function 11:
Public function signature: 0xf70532fe
Entry block: 0x261
Exit block: 0x15a
Body: 0x15a, 0x261, 0x268, 0x269, 0x59a, 0x5b4, 0x5b5, 0x5c3

Function 12:
Public function signature: 0xf7efd150
Entry block: 0x29c
Exit block: 0x15a
Body: 0x15a, 0x29c, 0x5dc, 0x5ed, 0x5fc, 0x602, 0x60c, 0x610, 0x642, 0x646, 0x651, 0x67f, 0x683, 0x684, 0x689, 0x693, 0x6bd, 0x6c1, 0x6c2, 0x6c3, 0x6d4, 0x6d7, 0x7a2, 0x7b0, 0x7c2, 0x7d5, 0x7ee, 0x810, 0x811, 0x81d, 0x81e, 0x884, 0x885, 0x891, 0x892, 0x8eb, 0x8ec, 0x8f8, 0x8f9, 0x924, 0x932, 0x987, 0xaa5, 0xab3, 0xac9, 0xaca

Function 13:
Public function signature: 0xfdc37c85
Entry block: 0x352
Exit block: 0x3d4
Body: 0x352, 0x359, 0x35a, 0x362, 0x388, 0x396, 0x3a8, 0x3bb, 0x3d4, 0x998, 0x9d8, 0x9e0, 0x9f3, 0xa01, 0xa15, 0xa1e

Function 14:
Public fallback function
Entry block: 0xb4
Exit block: 0xb4
Body: 0xb4

